{"version":3,"file":"vue.esm-browser.prod.js","sources":["../../shared/src/makeMap.ts","../../shared/src/globalsWhitelist.ts","../../shared/src/domAttrConfig.ts","../../shared/src/normalizeProp.ts","../../shared/src/domTagConfig.ts","../../shared/src/looseEqual.ts","../../shared/src/toDisplayString.ts","../../shared/src/index.ts","../../reactivity/src/effectScope.ts","../../reactivity/src/dep.ts","../../reactivity/src/effect.ts","../../reactivity/src/baseHandlers.ts","../../reactivity/src/collectionHandlers.ts","../../reactivity/src/reactive.ts","../../reactivity/src/ref.ts","../../reactivity/src/computed.ts","../../runtime-core/src/warning.ts","../../runtime-core/src/errorHandling.ts","../../runtime-core/src/scheduler.ts","../../runtime-core/src/devtools.ts","../../runtime-core/src/compat/compatConfig.ts","../../runtime-core/src/compat/instanceEventEmitter.ts","../../runtime-core/src/compat/componentVModel.ts","../../runtime-core/src/componentEmits.ts","../../runtime-core/src/componentRenderContext.ts","../../runtime-core/src/componentRenderUtils.ts","../../runtime-core/src/components/Suspense.ts","../../runtime-core/src/apiInject.ts","../../runtime-core/src/apiWatch.ts","../../runtime-core/src/components/BaseTransition.ts","../../runtime-core/src/apiDefineComponent.ts","../../runtime-core/src/apiAsyncComponent.ts","../../runtime-core/src/components/KeepAlive.ts","../../runtime-core/src/apiLifecycle.ts","../../runtime-core/src/compat/instanceChildren.ts","../../runtime-core/src/compat/instanceListeners.ts","../../runtime-core/src/compat/customDirective.ts","../../runtime-core/src/directives.ts","../../runtime-core/src/helpers/resolveAssets.ts","../../runtime-core/src/compat/renderFn.ts","../../runtime-core/src/compat/componentFunctional.ts","../../runtime-core/src/helpers/renderList.ts","../../runtime-core/src/helpers/createSlots.ts","../../runtime-core/src/helpers/renderSlot.ts","../../runtime-core/src/helpers/toHandlers.ts","../../runtime-core/src/compat/renderHelpers.ts","../../runtime-core/src/componentPublicInstance.ts","../../runtime-core/src/compat/instance.ts","../../runtime-core/src/compat/data.ts","../../runtime-core/src/componentOptions.ts","../../runtime-core/src/compat/attrsFallthrough.ts","../../runtime-core/src/componentProps.ts","../../runtime-core/src/compat/props.ts","../../runtime-core/src/componentSlots.ts","../../runtime-core/src/compat/global.ts","../../runtime-core/src/compat/globalConfig.ts","../../runtime-core/src/apiCreateApp.ts","../../runtime-core/src/rendererTemplateRef.ts","../../runtime-core/src/hydration.ts","../../runtime-core/src/renderer.ts","../../runtime-core/src/components/Teleport.ts","../../runtime-core/src/compat/componentAsync.ts","../../runtime-core/src/compat/component.ts","../../runtime-core/src/vnode.ts","../../runtime-core/src/component.ts","../../runtime-core/src/apiComputed.ts","../../runtime-core/src/apiSetupHelpers.ts","../../runtime-core/src/h.ts","../../runtime-core/src/helpers/useSsrContext.ts","../../runtime-core/src/customFormatter.ts","../../runtime-core/src/helpers/withMemo.ts","../../runtime-core/src/index.ts","../../runtime-dom/src/nodeOps.ts","../../runtime-dom/src/modules/style.ts","../../runtime-dom/src/modules/attrs.ts","../../runtime-dom/src/modules/events.ts","../../runtime-dom/src/patchProp.ts","../../runtime-dom/src/apiCustomElement.ts","../../runtime-dom/src/helpers/useCssModule.ts","../../runtime-dom/src/helpers/useCssVars.ts","../../runtime-dom/src/components/Transition.ts","../../runtime-dom/src/components/TransitionGroup.ts","../../runtime-dom/src/directives/vModel.ts","../../runtime-dom/src/directives/vOn.ts","../../runtime-dom/src/directives/vShow.ts","../../runtime-dom/src/index.ts","../../runtime-dom/src/modules/class.ts","../../runtime-dom/src/modules/props.ts","../src/createCompatVue.ts","../../compiler-core/src/errors.ts","../../compiler-core/src/runtimeHelpers.ts","../../compiler-core/src/ast.ts","../../compiler-core/src/utils.ts","../../compiler-core/src/compat/compatConfig.ts","../../compiler-core/src/parse.ts","../../compiler-core/src/transforms/hoistStatic.ts","../../compiler-core/src/transform.ts","../../compiler-core/src/codegen.ts","../../compiler-core/src/transforms/vIf.ts","../../compiler-core/src/transforms/vFor.ts","../../compiler-core/src/transforms/vSlot.ts","../../compiler-core/src/transforms/transformElement.ts","../../compiler-core/src/transforms/transformSlotOutlet.ts","../../compiler-core/src/transforms/vOn.ts","../../compiler-core/src/transforms/vBind.ts","../../compiler-core/src/transforms/transformText.ts","../../compiler-core/src/transforms/vOnce.ts","../../compiler-core/src/transforms/vModel.ts","../../compiler-core/src/compat/transformFilter.ts","../../compiler-core/src/transforms/vMemo.ts","../../compiler-core/src/compile.ts","../../compiler-core/src/transforms/noopDirectiveTransform.ts","../../compiler-dom/src/runtimeHelpers.ts","../../compiler-dom/src/decodeHtmlBrowser.ts","../../compiler-dom/src/parserOptions.ts","../../compiler-dom/src/transforms/transformStyle.ts","../../compiler-dom/src/transforms/vHtml.ts","../../compiler-dom/src/transforms/vOn.ts","../../compiler-dom/src/transforms/ignoreSideEffectTags.ts","../../compiler-dom/src/index.ts","../../compiler-dom/src/transforms/vText.ts","../../compiler-dom/src/transforms/vModel.ts","../../compiler-dom/src/transforms/vShow.ts","../src/index.ts","../src/esm-index.ts"],"sourcesContent":["/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nexport function makeMap(\r\n  str: string,\r\n  expectsLowerCase?: boolean\r\n): (key: string) => boolean {\r\n  const map: Record<string, boolean> = Object.create(null)\r\n  const list: Array<string> = str.split(',')\r\n  for (let i = 0; i < list.length; i++) {\r\n    map[list[i]] = true\r\n  }\r\n  return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val]\r\n}\r\n","import { makeMap } from './makeMap'\r\n\r\nconst GLOBALS_WHITE_LISTED =\r\n  'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n  'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n  'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt'\r\n\r\nexport const isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED)\r\n","import { makeMap } from './makeMap'\r\n\r\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`\r\nexport const isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs)\r\n\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nexport const isBooleanAttr = /*#__PURE__*/ makeMap(\r\n  specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`\r\n)\r\n\r\n/**\r\n * Boolean attributes should be included if the value is truthy or ''.\r\n * e.g. `<select multiple>` compiles to `{ multiple: '' }`\r\n */\r\nexport function includeBooleanAttr(value: unknown): boolean {\r\n  return !!value || value === ''\r\n}\r\n\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/\r\nconst attrValidationCache: Record<string, boolean> = {}\r\n\r\nexport function isSSRSafeAttrName(name: string): boolean {\r\n  if (attrValidationCache.hasOwnProperty(name)) {\r\n    return attrValidationCache[name]\r\n  }\r\n  const isUnsafe = unsafeAttrCharRE.test(name)\r\n  if (isUnsafe) {\r\n    console.error(`unsafe attribute name: ${name}`)\r\n  }\r\n  return (attrValidationCache[name] = !isUnsafe)\r\n}\r\n\r\nexport const propsToAttrMap: Record<string, string | undefined> = {\r\n  acceptCharset: 'accept-charset',\r\n  className: 'class',\r\n  htmlFor: 'for',\r\n  httpEquiv: 'http-equiv'\r\n}\r\n\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nexport const isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(\r\n  `animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`\r\n)\r\n\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nexport const isKnownHtmlAttr = /*#__PURE__*/ makeMap(\r\n  `accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`\r\n)\r\n\r\n/**\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\r\n */\r\nexport const isKnownSvgAttr = /*#__PURE__*/ makeMap(\r\n  `xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,` +\r\n    `arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,` +\r\n    `baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,` +\r\n    `clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,` +\r\n    `color-interpolation-filters,color-profile,color-rendering,` +\r\n    `contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,` +\r\n    `descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,` +\r\n    `dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,` +\r\n    `fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,` +\r\n    `font-family,font-size,font-size-adjust,font-stretch,font-style,` +\r\n    `font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,` +\r\n    `glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,` +\r\n    `gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,` +\r\n    `horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,` +\r\n    `k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,` +\r\n    `lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,` +\r\n    `marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,` +\r\n    `mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,` +\r\n    `name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,` +\r\n    `overflow,overline-position,overline-thickness,panose-1,paint-order,path,` +\r\n    `pathLength,patternContentUnits,patternTransform,patternUnits,ping,` +\r\n    `pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,` +\r\n    `preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,` +\r\n    `rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,` +\r\n    `restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,` +\r\n    `specularConstant,specularExponent,speed,spreadMethod,startOffset,` +\r\n    `stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,` +\r\n    `strikethrough-position,strikethrough-thickness,string,stroke,` +\r\n    `stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,` +\r\n    `systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,` +\r\n    `text-decoration,text-rendering,textLength,to,transform,transform-origin,` +\r\n    `type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,` +\r\n    `unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,` +\r\n    `v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,` +\r\n    `vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,` +\r\n    `writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,` +\r\n    `xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,` +\r\n    `xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`\r\n)\r\n","import { isArray, isString, isObject, hyphenate } from './'\r\nimport { isNoUnitNumericStyleProp } from './domAttrConfig'\r\n\r\nexport type NormalizedStyle = Record<string, string | number>\r\n\r\nexport function normalizeStyle(\r\n  value: unknown\r\n): NormalizedStyle | string | undefined {\r\n  if (isArray(value)) {\r\n    const res: NormalizedStyle = {}\r\n    for (let i = 0; i < value.length; i++) {\r\n      const item = value[i]\r\n      const normalized = isString(item)\r\n        ? parseStringStyle(item)\r\n        : (normalizeStyle(item) as NormalizedStyle)\r\n      if (normalized) {\r\n        for (const key in normalized) {\r\n          res[key] = normalized[key]\r\n        }\r\n      }\r\n    }\r\n    return res\r\n  } else if (isString(value)) {\r\n    return value\r\n  } else if (isObject(value)) {\r\n    return value\r\n  }\r\n}\r\n\r\nconst listDelimiterRE = /;(?![^(]*\\))/g\r\nconst propertyDelimiterRE = /:(.+)/\r\n\r\nexport function parseStringStyle(cssText: string): NormalizedStyle {\r\n  const ret: NormalizedStyle = {}\r\n  cssText.split(listDelimiterRE).forEach(item => {\r\n    if (item) {\r\n      const tmp = item.split(propertyDelimiterRE)\r\n      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim())\r\n    }\r\n  })\r\n  return ret\r\n}\r\n\r\nexport function stringifyStyle(\r\n  styles: NormalizedStyle | string | undefined\r\n): string {\r\n  let ret = ''\r\n  if (!styles || isString(styles)) {\r\n    return ret\r\n  }\r\n  for (const key in styles) {\r\n    const value = styles[key]\r\n    const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key)\r\n    if (\r\n      isString(value) ||\r\n      (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))\r\n    ) {\r\n      // only render valid values\r\n      ret += `${normalizedKey}:${value};`\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\nexport function normalizeClass(value: unknown): string {\r\n  let res = ''\r\n  if (isString(value)) {\r\n    res = value\r\n  } else if (isArray(value)) {\r\n    for (let i = 0; i < value.length; i++) {\r\n      const normalized = normalizeClass(value[i])\r\n      if (normalized) {\r\n        res += normalized + ' '\r\n      }\r\n    }\r\n  } else if (isObject(value)) {\r\n    for (const name in value) {\r\n      if (value[name]) {\r\n        res += name + ' '\r\n      }\r\n    }\r\n  }\r\n  return res.trim()\r\n}\r\n\r\nexport function normalizeProps(props: Record<string, any> | null) {\r\n  if (!props) return null\r\n  let { class: klass, style } = props\r\n  if (klass && !isString(klass)) {\r\n    props.class = normalizeClass(klass)\r\n  }\r\n  if (style) {\r\n    props.style = normalizeStyle(style)\r\n  }\r\n  return props\r\n}\r\n","// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// must be extracted in shared to avoid creating a dependency between the two.\r\nimport { makeMap } from './makeMap'\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS =\r\n  'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n  'header,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,' +\r\n  'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n  'data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,' +\r\n  'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n  'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n  'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n  'option,output,progress,select,textarea,details,dialog,menu,' +\r\n  'summary,template,blockquote,iframe,tfoot'\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS =\r\n  'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n  'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n  'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n  'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n  'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n  'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n  'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n  'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n  'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n  'text,textPath,title,tspan,unknown,use,view'\r\n\r\nconst VOID_TAGS =\r\n  'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr'\r\n\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `__DEV__` flag.\r\n */\r\nexport const isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS)\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `__DEV__` flag.\r\n */\r\nexport const isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS)\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `__DEV__` flag.\r\n */\r\nexport const isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS)\r\n","import { isArray, isDate, isObject, isSymbol } from './'\r\n\r\nfunction looseCompareArrays(a: any[], b: any[]) {\r\n  if (a.length !== b.length) return false\r\n  let equal = true\r\n  for (let i = 0; equal && i < a.length; i++) {\r\n    equal = looseEqual(a[i], b[i])\r\n  }\r\n  return equal\r\n}\r\n\r\nexport function looseEqual(a: any, b: any): boolean {\r\n  if (a === b) return true\r\n  let aValidType = isDate(a)\r\n  let bValidType = isDate(b)\r\n  if (aValidType || bValidType) {\r\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false\r\n  }\r\n  aValidType = isSymbol(a)\r\n  bValidType = isSymbol(b)\r\n  if (aValidType || bValidType) {\r\n    return a === b\r\n  }\r\n  aValidType = isArray(a)\r\n  bValidType = isArray(b)\r\n  if (aValidType || bValidType) {\r\n    return aValidType && bValidType ? looseCompareArrays(a, b) : false\r\n  }\r\n  aValidType = isObject(a)\r\n  bValidType = isObject(b)\r\n  if (aValidType || bValidType) {\r\n    /* istanbul ignore if: this if will probably never be called */\r\n    if (!aValidType || !bValidType) {\r\n      return false\r\n    }\r\n    const aKeysCount = Object.keys(a).length\r\n    const bKeysCount = Object.keys(b).length\r\n    if (aKeysCount !== bKeysCount) {\r\n      return false\r\n    }\r\n    for (const key in a) {\r\n      const aHasKey = a.hasOwnProperty(key)\r\n      const bHasKey = b.hasOwnProperty(key)\r\n      if (\r\n        (aHasKey && !bHasKey) ||\r\n        (!aHasKey && bHasKey) ||\r\n        !looseEqual(a[key], b[key])\r\n      ) {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  return String(a) === String(b)\r\n}\r\n\r\nexport function looseIndexOf(arr: any[], val: any): number {\r\n  return arr.findIndex(item => looseEqual(item, val))\r\n}\r\n","import {\r\n  isArray,\r\n  isMap,\r\n  isObject,\r\n  isFunction,\r\n  isPlainObject,\r\n  isSet,\r\n  objectToString,\r\n  isString\r\n} from './index'\r\n\r\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nexport const toDisplayString = (val: unknown): string => {\r\n  return isString(val)\r\n    ? val\r\n    : val == null\r\n    ? ''\r\n    : isArray(val) ||\r\n      (isObject(val) &&\r\n        (val.toString === objectToString || !isFunction(val.toString)))\r\n    ? JSON.stringify(val, replacer, 2)\r\n    : String(val)\r\n}\r\n\r\nconst replacer = (_key: string, val: any): any => {\r\n  // can't use isRef here since @vue/shared has no deps\r\n  if (val && val.__v_isRef) {\r\n    return replacer(_key, val.value)\r\n  } else if (isMap(val)) {\r\n    return {\r\n      [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n        ;(entries as any)[`${key} =>`] = val\r\n        return entries\r\n      }, {})\r\n    }\r\n  } else if (isSet(val)) {\r\n    return {\r\n      [`Set(${val.size})`]: [...val.values()]\r\n    }\r\n  } else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n    return String(val)\r\n  }\r\n  return val\r\n}\r\n","import { makeMap } from './makeMap'\r\n\r\nexport { makeMap }\r\nexport * from './patchFlags'\r\nexport * from './shapeFlags'\r\nexport * from './slotFlags'\r\nexport * from './globalsWhitelist'\r\nexport * from './codeframe'\r\nexport * from './normalizeProp'\r\nexport * from './domTagConfig'\r\nexport * from './domAttrConfig'\r\nexport * from './escapeHtml'\r\nexport * from './looseEqual'\r\nexport * from './toDisplayString'\r\nexport * from './typeUtils'\r\n\r\nexport const EMPTY_OBJ: { readonly [key: string]: any } = __DEV__\r\n  ? Object.freeze({})\r\n  : {}\r\nexport const EMPTY_ARR = __DEV__ ? Object.freeze([]) : []\r\n\r\nexport const NOOP = () => {}\r\n\r\n/**\r\n * Always return false.\r\n */\r\nexport const NO = () => false\r\n\r\nconst onRE = /^on[^a-z]/\r\nexport const isOn = (key: string) => onRE.test(key)\r\n\r\nexport const isModelListener = (key: string) => key.startsWith('onUpdate:')\r\n\r\nexport const extend = Object.assign\r\n\r\nexport const remove = <T>(arr: T[], el: T) => {\r\n  const i = arr.indexOf(el)\r\n  if (i > -1) {\r\n    arr.splice(i, 1)\r\n  }\r\n}\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty\r\nexport const hasOwn = (\r\n  val: object,\r\n  key: string | symbol\r\n): key is keyof typeof val => hasOwnProperty.call(val, key)\r\n\r\nexport const isArray = Array.isArray\r\nexport const isMap = (val: unknown): val is Map<any, any> =>\r\n  toTypeString(val) === '[object Map]'\r\nexport const isSet = (val: unknown): val is Set<any> =>\r\n  toTypeString(val) === '[object Set]'\r\n\r\nexport const isDate = (val: unknown): val is Date => toTypeString(val) === '[object Date]'\r\nexport const isFunction = (val: unknown): val is Function =>\r\n  typeof val === 'function'\r\nexport const isString = (val: unknown): val is string => typeof val === 'string'\r\nexport const isSymbol = (val: unknown): val is symbol => typeof val === 'symbol'\r\nexport const isObject = (val: unknown): val is Record<any, any> =>\r\n  val !== null && typeof val === 'object'\r\n\r\nexport const isPromise = <T = any>(val: unknown): val is Promise<T> => {\r\n  return isObject(val) && isFunction(val.then) && isFunction(val.catch)\r\n}\r\n\r\nexport const objectToString = Object.prototype.toString\r\nexport const toTypeString = (value: unknown): string =>\r\n  objectToString.call(value)\r\n\r\nexport const toRawType = (value: unknown): string => {\r\n  // extract \"RawType\" from strings like \"[object RawType]\"\r\n  return toTypeString(value).slice(8, -1)\r\n}\r\n\r\nexport const isPlainObject = (val: unknown): val is object =>\r\n  toTypeString(val) === '[object Object]'\r\n\r\nexport const isIntegerKey = (key: unknown) =>\r\n  isString(key) &&\r\n  key !== 'NaN' &&\r\n  key[0] !== '-' &&\r\n  '' + parseInt(key, 10) === key\r\n\r\nexport const isReservedProp = /*#__PURE__*/ makeMap(\r\n  // the leading comma is intentional so empty string \"\" is also included\r\n  ',key,ref,ref_for,ref_key,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted'\r\n)\r\n\r\nexport const isBuiltInDirective = /*#__PURE__*/ makeMap(\r\n  'bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo'\r\n)\r\n\r\nconst cacheStringFunction = <T extends (str: string) => string>(fn: T): T => {\r\n  const cache: Record<string, string> = Object.create(null)\r\n  return ((str: string) => {\r\n    const hit = cache[str]\r\n    return hit || (cache[str] = fn(str))\r\n  }) as any\r\n}\r\n\r\nconst camelizeRE = /-(\\w)/g\r\n/**\r\n * @private\r\n */\r\nexport const camelize = cacheStringFunction((str: string): string => {\r\n  return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''))\r\n})\r\n\r\nconst hyphenateRE = /\\B([A-Z])/g\r\n/**\r\n * @private\r\n */\r\nexport const hyphenate = cacheStringFunction((str: string) =>\r\n  str.replace(hyphenateRE, '-$1').toLowerCase()\r\n)\r\n\r\n/**\r\n * @private\r\n */\r\nexport const capitalize = cacheStringFunction(\r\n  (str: string) => str.charAt(0).toUpperCase() + str.slice(1)\r\n)\r\n\r\n/**\r\n * @private\r\n */\r\nexport const toHandlerKey = cacheStringFunction((str: string) =>\r\n  str ? `on${capitalize(str)}` : ``\r\n)\r\n\r\n// compare whether a value has changed, accounting for NaN.\r\nexport const hasChanged = (value: any, oldValue: any): boolean =>\r\n  !Object.is(value, oldValue)\r\n\r\nexport const invokeArrayFns = (fns: Function[], arg?: any) => {\r\n  for (let i = 0; i < fns.length; i++) {\r\n    fns[i](arg)\r\n  }\r\n}\r\n\r\nexport const def = (obj: object, key: string | symbol, value: any) => {\r\n  Object.defineProperty(obj, key, {\r\n    configurable: true,\r\n    enumerable: false,\r\n    value\r\n  })\r\n}\r\n\r\nexport const toNumber = (val: any): any => {\r\n  const n = parseFloat(val)\r\n  return isNaN(n) ? val : n\r\n}\r\n\r\nlet _globalThis: any\r\nexport const getGlobalThis = (): any => {\r\n  return (\r\n    _globalThis ||\r\n    (_globalThis =\r\n      typeof globalThis !== 'undefined'\r\n        ? globalThis\r\n        : typeof self !== 'undefined'\r\n        ? self\r\n        : typeof window !== 'undefined'\r\n        ? window\r\n        : typeof global !== 'undefined'\r\n        ? global\r\n        : {})\r\n  )\r\n}\r\n\r\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/\r\n\r\nexport function genPropsAccessExp(name: string) {\r\n  return identRE.test(name)\r\n    ? `__props.${name}`\r\n    : `__props[${JSON.stringify(name)}]`\r\n}\r\n","import { ReactiveEffect } from './effect'\r\nimport { warn } from './warning'\r\n\r\nlet activeEffectScope: EffectScope | undefined\r\n\r\nexport class EffectScope {\r\n  /**\r\n   * @internal\r\n   */\r\n  active = true\r\n  /**\r\n   * @internal\r\n   */\r\n  effects: ReactiveEffect[] = []\r\n  /**\r\n   * @internal\r\n   */\r\n  cleanups: (() => void)[] = []\r\n\r\n  /**\r\n   * only assigned by undetached scope\r\n   * @internal\r\n   */\r\n  parent: EffectScope | undefined\r\n  /**\r\n   * record undetached scopes\r\n   * @internal\r\n   */\r\n  scopes: EffectScope[] | undefined\r\n  /**\r\n   * track a child scope's index in its parent's scopes array for optimized\r\n   * removal\r\n   * @internal\r\n   */\r\n  private index: number | undefined\r\n\r\n  constructor(detached = false) {\r\n    if (!detached && activeEffectScope) {\r\n      this.parent = activeEffectScope\r\n      this.index =\r\n        (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(\r\n          this\r\n        ) - 1\r\n    }\r\n  }\r\n\r\n  run<T>(fn: () => T): T | undefined {\r\n    if (this.active) {\r\n      const currentEffectScope = activeEffectScope\r\n      try {\r\n        activeEffectScope = this\r\n        return fn()\r\n      } finally {\r\n        activeEffectScope = currentEffectScope\r\n      }\r\n    } else if (__DEV__) {\r\n      warn(`cannot run an inactive effect scope.`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This should only be called on non-detached scopes\r\n   * @internal\r\n   */\r\n  on() {\r\n    activeEffectScope = this\r\n  }\r\n\r\n  /**\r\n   * This should only be called on non-detached scopes\r\n   * @internal\r\n   */\r\n  off() {\r\n    activeEffectScope = this.parent\r\n  }\r\n\r\n  stop(fromParent?: boolean) {\r\n    if (this.active) {\r\n      let i, l\r\n      for (i = 0, l = this.effects.length; i < l; i++) {\r\n        this.effects[i].stop()\r\n      }\r\n      for (i = 0, l = this.cleanups.length; i < l; i++) {\r\n        this.cleanups[i]()\r\n      }\r\n      if (this.scopes) {\r\n        for (i = 0, l = this.scopes.length; i < l; i++) {\r\n          this.scopes[i].stop(true)\r\n        }\r\n      }\r\n      // nested scope, dereference from parent to avoid memory leaks\r\n      if (this.parent && !fromParent) {\r\n        // optimized O(1) removal\r\n        const last = this.parent.scopes!.pop()\r\n        if (last && last !== this) {\r\n          this.parent.scopes![this.index!] = last\r\n          last.index = this.index!\r\n        }\r\n      }\r\n      this.active = false\r\n    }\r\n  }\r\n}\r\n\r\nexport function effectScope(detached?: boolean) {\r\n  return new EffectScope(detached)\r\n}\r\n\r\nexport function recordEffectScope(\r\n  effect: ReactiveEffect,\r\n  scope: EffectScope | undefined = activeEffectScope\r\n) {\r\n  if (scope && scope.active) {\r\n    scope.effects.push(effect)\r\n  }\r\n}\r\n\r\nexport function getCurrentScope() {\r\n  return activeEffectScope\r\n}\r\n\r\nexport function onScopeDispose(fn: () => void) {\r\n  if (activeEffectScope) {\r\n    activeEffectScope.cleanups.push(fn)\r\n  } else if (__DEV__) {\r\n    warn(\r\n      `onScopeDispose() is called when there is no active effect scope` +\r\n        ` to be associated with.`\r\n    )\r\n  }\r\n}\r\n","import { ReactiveEffect, trackOpBit } from './effect'\r\n\r\nexport type Dep = Set<ReactiveEffect> & TrackedMarkers\r\n\r\n/**\r\n * wasTracked and newTracked maintain the status for several levels of effect\r\n * tracking recursion. One bit per level is used to define whether the dependency\r\n * was/is tracked.\r\n */\r\ntype TrackedMarkers = {\r\n  /**\r\n   * wasTracked\r\n   */\r\n  w: number\r\n  /**\r\n   * newTracked\r\n   */\r\n  n: number\r\n}\r\n\r\nexport const createDep = (effects?: ReactiveEffect[]): Dep => {\r\n  const dep = new Set<ReactiveEffect>(effects) as Dep\r\n  dep.w = 0\r\n  dep.n = 0\r\n  return dep\r\n}\r\n\r\nexport const wasTracked = (dep: Dep): boolean => (dep.w & trackOpBit) > 0\r\n\r\nexport const newTracked = (dep: Dep): boolean => (dep.n & trackOpBit) > 0\r\n\r\nexport const initDepMarkers = ({ deps }: ReactiveEffect) => {\r\n  if (deps.length) {\r\n    for (let i = 0; i < deps.length; i++) {\r\n      deps[i].w |= trackOpBit // set was tracked\r\n    }\r\n  }\r\n}\r\n\r\nexport const finalizeDepMarkers = (effect: ReactiveEffect) => {\r\n  const { deps } = effect\r\n  if (deps.length) {\r\n    let ptr = 0\r\n    for (let i = 0; i < deps.length; i++) {\r\n      const dep = deps[i]\r\n      if (wasTracked(dep) && !newTracked(dep)) {\r\n        dep.delete(effect)\r\n      } else {\r\n        deps[ptr++] = dep\r\n      }\r\n      // clear bits\r\n      dep.w &= ~trackOpBit\r\n      dep.n &= ~trackOpBit\r\n    }\r\n    deps.length = ptr\r\n  }\r\n}\r\n","import { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport { extend, isArray, isIntegerKey, isMap } from '@vue/shared'\r\nimport { EffectScope, recordEffectScope } from './effectScope'\r\nimport {\r\n  createDep,\r\n  Dep,\r\n  finalizeDepMarkers,\r\n  initDepMarkers,\r\n  newTracked,\r\n  wasTracked\r\n} from './dep'\r\nimport { ComputedRefImpl } from './computed'\r\n\r\n// The main WeakMap that stores {target -> key -> dep} connections.\r\n// Conceptually, it's easier to think of a dependency as a Dep class\r\n// which maintains a Set of subscribers, but we simply store them as\r\n// raw Sets to reduce memory overhead.\r\ntype KeyToDepMap = Map<any, Dep>\r\nconst targetMap = new WeakMap<any, KeyToDepMap>()\r\n\r\n// The number of effects currently being tracked recursively.\r\nlet effectTrackDepth = 0\r\n\r\nexport let trackOpBit = 1\r\n\r\n/**\r\n * The bitwise track markers support at most 30 levels of recursion.\r\n * This value is chosen to enable modern JS engines to use a SMI on all platforms.\r\n * When recursion depth is greater, fall back to using a full cleanup.\r\n */\r\nconst maxMarkerBits = 30\r\n\r\nexport type EffectScheduler = (...args: any[]) => any\r\n\r\nexport type DebuggerEvent = {\r\n  effect: ReactiveEffect\r\n} & DebuggerEventExtraInfo\r\n\r\nexport type DebuggerEventExtraInfo = {\r\n  target: object\r\n  type: TrackOpTypes | TriggerOpTypes\r\n  key: any\r\n  newValue?: any\r\n  oldValue?: any\r\n  oldTarget?: Map<any, any> | Set<any>\r\n}\r\n\r\nexport let activeEffect: ReactiveEffect | undefined\r\n\r\nexport const ITERATE_KEY = Symbol(__DEV__ ? 'iterate' : '')\r\nexport const MAP_KEY_ITERATE_KEY = Symbol(__DEV__ ? 'Map key iterate' : '')\r\n\r\nexport class ReactiveEffect<T = any> {\r\n  active = true\r\n  deps: Dep[] = []\r\n  parent: ReactiveEffect | undefined = undefined\r\n\r\n  /**\r\n   * Can be attached after creation\r\n   * @internal\r\n   */\r\n  computed?: ComputedRefImpl<T>\r\n  /**\r\n   * @internal\r\n   */\r\n  allowRecurse?: boolean\r\n  /**\r\n   * @internal\r\n   */\r\n  private deferStop?: boolean\r\n\r\n  onStop?: () => void\r\n  // dev only\r\n  onTrack?: (event: DebuggerEvent) => void\r\n  // dev only\r\n  onTrigger?: (event: DebuggerEvent) => void\r\n\r\n  constructor(\r\n    public fn: () => T,\r\n    public scheduler: EffectScheduler | null = null,\r\n    scope?: EffectScope\r\n  ) {\r\n    recordEffectScope(this, scope)\r\n  }\r\n\r\n  run() {\r\n    if (!this.active) {\r\n      return this.fn()\r\n    }\r\n    let parent: ReactiveEffect | undefined = activeEffect\r\n    let lastShouldTrack = shouldTrack\r\n    while (parent) {\r\n      if (parent === this) {\r\n        return\r\n      }\r\n      parent = parent.parent\r\n    }\r\n    try {\r\n      this.parent = activeEffect\r\n      activeEffect = this\r\n      shouldTrack = true\r\n\r\n      trackOpBit = 1 << ++effectTrackDepth\r\n\r\n      if (effectTrackDepth <= maxMarkerBits) {\r\n        initDepMarkers(this)\r\n      } else {\r\n        cleanupEffect(this)\r\n      }\r\n      return this.fn()\r\n    } finally {\r\n      if (effectTrackDepth <= maxMarkerBits) {\r\n        finalizeDepMarkers(this)\r\n      }\r\n\r\n      trackOpBit = 1 << --effectTrackDepth\r\n\r\n      activeEffect = this.parent\r\n      shouldTrack = lastShouldTrack\r\n      this.parent = undefined\r\n\r\n      if (this.deferStop) {\r\n        this.stop()\r\n      }\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    // stopped while running itself - defer the cleanup\r\n    if (activeEffect === this) {\r\n      this.deferStop = true\r\n    } else if (this.active) {\r\n      cleanupEffect(this)\r\n      if (this.onStop) {\r\n        this.onStop()\r\n      }\r\n      this.active = false\r\n    }\r\n  }\r\n}\r\n\r\nfunction cleanupEffect(effect: ReactiveEffect) {\r\n  const { deps } = effect\r\n  if (deps.length) {\r\n    for (let i = 0; i < deps.length; i++) {\r\n      deps[i].delete(effect)\r\n    }\r\n    deps.length = 0\r\n  }\r\n}\r\n\r\nexport interface DebuggerOptions {\r\n  onTrack?: (event: DebuggerEvent) => void\r\n  onTrigger?: (event: DebuggerEvent) => void\r\n}\r\n\r\nexport interface ReactiveEffectOptions extends DebuggerOptions {\r\n  lazy?: boolean\r\n  scheduler?: EffectScheduler\r\n  scope?: EffectScope\r\n  allowRecurse?: boolean\r\n  onStop?: () => void\r\n}\r\n\r\nexport interface ReactiveEffectRunner<T = any> {\r\n  (): T\r\n  effect: ReactiveEffect\r\n}\r\n\r\nexport function effect<T = any>(\r\n  fn: () => T,\r\n  options?: ReactiveEffectOptions\r\n): ReactiveEffectRunner {\r\n  if ((fn as ReactiveEffectRunner).effect) {\r\n    fn = (fn as ReactiveEffectRunner).effect.fn\r\n  }\r\n\r\n  const _effect = new ReactiveEffect(fn)\r\n  if (options) {\r\n    extend(_effect, options)\r\n    if (options.scope) recordEffectScope(_effect, options.scope)\r\n  }\r\n  if (!options || !options.lazy) {\r\n    _effect.run()\r\n  }\r\n  const runner = _effect.run.bind(_effect) as ReactiveEffectRunner\r\n  runner.effect = _effect\r\n  return runner\r\n}\r\n\r\nexport function stop(runner: ReactiveEffectRunner) {\r\n  runner.effect.stop()\r\n}\r\n\r\nexport let shouldTrack = true\r\nconst trackStack: boolean[] = []\r\n\r\nexport function pauseTracking() {\r\n  trackStack.push(shouldTrack)\r\n  shouldTrack = false\r\n}\r\n\r\nexport function enableTracking() {\r\n  trackStack.push(shouldTrack)\r\n  shouldTrack = true\r\n}\r\n\r\nexport function resetTracking() {\r\n  const last = trackStack.pop()\r\n  shouldTrack = last === undefined ? true : last\r\n}\r\n\r\nexport function track(target: object, type: TrackOpTypes, key: unknown) {\r\n  if (shouldTrack && activeEffect) {\r\n    let depsMap = targetMap.get(target)\r\n    if (!depsMap) {\r\n      targetMap.set(target, (depsMap = new Map()))\r\n    }\r\n    let dep = depsMap.get(key)\r\n    if (!dep) {\r\n      depsMap.set(key, (dep = createDep()))\r\n    }\r\n\r\n    const eventInfo = __DEV__\r\n      ? { effect: activeEffect, target, type, key }\r\n      : undefined\r\n\r\n    trackEffects(dep, eventInfo)\r\n  }\r\n}\r\n\r\nexport function trackEffects(\r\n  dep: Dep,\r\n  debuggerEventExtraInfo?: DebuggerEventExtraInfo\r\n) {\r\n  let shouldTrack = false\r\n  if (effectTrackDepth <= maxMarkerBits) {\r\n    if (!newTracked(dep)) {\r\n      dep.n |= trackOpBit // set newly tracked\r\n      shouldTrack = !wasTracked(dep)\r\n    }\r\n  } else {\r\n    // Full cleanup mode.\r\n    shouldTrack = !dep.has(activeEffect!)\r\n  }\r\n\r\n  if (shouldTrack) {\r\n    dep.add(activeEffect!)\r\n    activeEffect!.deps.push(dep)\r\n    if (__DEV__ && activeEffect!.onTrack) {\r\n      activeEffect!.onTrack({\r\n        effect: activeEffect!,\r\n        ...debuggerEventExtraInfo!\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport function trigger(\r\n  target: object,\r\n  type: TriggerOpTypes,\r\n  key?: unknown,\r\n  newValue?: unknown,\r\n  oldValue?: unknown,\r\n  oldTarget?: Map<unknown, unknown> | Set<unknown>\r\n) {\r\n  const depsMap = targetMap.get(target)\r\n  if (!depsMap) {\r\n    // never been tracked\r\n    return\r\n  }\r\n\r\n  let deps: (Dep | undefined)[] = []\r\n  if (type === TriggerOpTypes.CLEAR) {\r\n    // collection being cleared\r\n    // trigger all effects for target\r\n    deps = [...depsMap.values()]\r\n  } else if (key === 'length' && isArray(target)) {\r\n    depsMap.forEach((dep, key) => {\r\n      if (key === 'length' || key >= (newValue as number)) {\r\n        deps.push(dep)\r\n      }\r\n    })\r\n  } else {\r\n    // schedule runs for SET | ADD | DELETE\r\n    if (key !== void 0) {\r\n      deps.push(depsMap.get(key))\r\n    }\r\n\r\n    // also run for iteration key on ADD | DELETE | Map.SET\r\n    switch (type) {\r\n      case TriggerOpTypes.ADD:\r\n        if (!isArray(target)) {\r\n          deps.push(depsMap.get(ITERATE_KEY))\r\n          if (isMap(target)) {\r\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY))\r\n          }\r\n        } else if (isIntegerKey(key)) {\r\n          // new index added to array -> length changes\r\n          deps.push(depsMap.get('length'))\r\n        }\r\n        break\r\n      case TriggerOpTypes.DELETE:\r\n        if (!isArray(target)) {\r\n          deps.push(depsMap.get(ITERATE_KEY))\r\n          if (isMap(target)) {\r\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY))\r\n          }\r\n        }\r\n        break\r\n      case TriggerOpTypes.SET:\r\n        if (isMap(target)) {\r\n          deps.push(depsMap.get(ITERATE_KEY))\r\n        }\r\n        break\r\n    }\r\n  }\r\n\r\n  const eventInfo = __DEV__\r\n    ? { target, type, key, newValue, oldValue, oldTarget }\r\n    : undefined\r\n\r\n  if (deps.length === 1) {\r\n    if (deps[0]) {\r\n      if (__DEV__) {\r\n        triggerEffects(deps[0], eventInfo)\r\n      } else {\r\n        triggerEffects(deps[0])\r\n      }\r\n    }\r\n  } else {\r\n    const effects: ReactiveEffect[] = []\r\n    for (const dep of deps) {\r\n      if (dep) {\r\n        effects.push(...dep)\r\n      }\r\n    }\r\n    if (__DEV__) {\r\n      triggerEffects(createDep(effects), eventInfo)\r\n    } else {\r\n      triggerEffects(createDep(effects))\r\n    }\r\n  }\r\n}\r\n\r\nexport function triggerEffects(\r\n  dep: Dep | ReactiveEffect[],\r\n  debuggerEventExtraInfo?: DebuggerEventExtraInfo\r\n) {\r\n  // spread into array for stabilization\r\n  const effects = isArray(dep) ? dep : [...dep]\r\n  for (const effect of effects) {\r\n    if (effect.computed) {\r\n      triggerEffect(effect, debuggerEventExtraInfo)\r\n    }\r\n  }\r\n  for (const effect of effects) {\r\n    if (!effect.computed) {\r\n      triggerEffect(effect, debuggerEventExtraInfo)\r\n    }\r\n  }\r\n}\r\n\r\nfunction triggerEffect(\r\n  effect: ReactiveEffect,\r\n  debuggerEventExtraInfo?: DebuggerEventExtraInfo\r\n) {\r\n  if (effect !== activeEffect || effect.allowRecurse) {\r\n    if (__DEV__ && effect.onTrigger) {\r\n      effect.onTrigger(extend({ effect }, debuggerEventExtraInfo))\r\n    }\r\n    if (effect.scheduler) {\r\n      effect.scheduler()\r\n    } else {\r\n      effect.run()\r\n    }\r\n  }\r\n}\r\n","import {\r\n  reactive,\r\n  readonly,\r\n  toRaw,\r\n  ReactiveFlags,\r\n  Target,\r\n  readonlyMap,\r\n  reactiveMap,\r\n  shallowReactiveMap,\r\n  shallowReadonlyMap,\r\n  isReadonly,\r\n  isShallow\r\n} from './reactive'\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport {\r\n  track,\r\n  trigger,\r\n  ITERATE_KEY,\r\n  pauseTracking,\r\n  resetTracking\r\n} from './effect'\r\nimport {\r\n  isObject,\r\n  hasOwn,\r\n  isSymbol,\r\n  hasChanged,\r\n  isArray,\r\n  isIntegerKey,\r\n  extend,\r\n  makeMap\r\n} from '@vue/shared'\r\nimport { isRef } from './ref'\r\nimport { warn } from './warning'\r\n\r\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`)\r\n\r\nconst builtInSymbols = new Set(\r\n  /*#__PURE__*/\r\n  Object.getOwnPropertyNames(Symbol)\r\n    // ios10.x Object.getOwnPropertyNames(Symbol) can enumerate 'arguments' and 'caller'\r\n    // but accessing them on Symbol leads to TypeError because Symbol is a strict mode\r\n    // function\r\n    .filter(key => key !== 'arguments' && key !== 'caller')\r\n    .map(key => (Symbol as any)[key])\r\n    .filter(isSymbol)\r\n)\r\n\r\nconst get = /*#__PURE__*/ createGetter()\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true)\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true)\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true)\r\n\r\nconst arrayInstrumentations = /*#__PURE__*/ createArrayInstrumentations()\r\n\r\nfunction createArrayInstrumentations() {\r\n  const instrumentations: Record<string, Function> = {}\r\n  // instrument identity-sensitive Array methods to account for possible reactive\r\n  // values\r\n  ;(['includes', 'indexOf', 'lastIndexOf'] as const).forEach(key => {\r\n    instrumentations[key] = function (this: unknown[], ...args: unknown[]) {\r\n      const arr = toRaw(this) as any\r\n      for (let i = 0, l = this.length; i < l; i++) {\r\n        track(arr, TrackOpTypes.GET, i + '')\r\n      }\r\n      // we run the method using the original args first (which may be reactive)\r\n      const res = arr[key](...args)\r\n      if (res === -1 || res === false) {\r\n        // if that didn't work, run it again using raw values.\r\n        return arr[key](...args.map(toRaw))\r\n      } else {\r\n        return res\r\n      }\r\n    }\r\n  })\r\n  // instrument length-altering mutation methods to avoid length being tracked\r\n  // which leads to infinite loops in some cases (#2137)\r\n  ;(['push', 'pop', 'shift', 'unshift', 'splice'] as const).forEach(key => {\r\n    instrumentations[key] = function (this: unknown[], ...args: unknown[]) {\r\n      pauseTracking()\r\n      const res = (toRaw(this) as any)[key].apply(this, args)\r\n      resetTracking()\r\n      return res\r\n    }\r\n  })\r\n  return instrumentations\r\n}\r\n\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n  return function get(target: Target, key: string | symbol, receiver: object) {\r\n    if (key === ReactiveFlags.IS_REACTIVE) {\r\n      return !isReadonly\r\n    } else if (key === ReactiveFlags.IS_READONLY) {\r\n      return isReadonly\r\n    } else if (key === ReactiveFlags.IS_SHALLOW) {\r\n      return shallow\r\n    } else if (\r\n      key === ReactiveFlags.RAW &&\r\n      receiver ===\r\n        (isReadonly\r\n          ? shallow\r\n            ? shallowReadonlyMap\r\n            : readonlyMap\r\n          : shallow\r\n          ? shallowReactiveMap\r\n          : reactiveMap\r\n        ).get(target)\r\n    ) {\r\n      return target\r\n    }\r\n\r\n    const targetIsArray = isArray(target)\r\n\r\n    if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n      return Reflect.get(arrayInstrumentations, key, receiver)\r\n    }\r\n\r\n    const res = Reflect.get(target, key, receiver)\r\n\r\n    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\r\n      return res\r\n    }\r\n\r\n    if (!isReadonly) {\r\n      track(target, TrackOpTypes.GET, key)\r\n    }\r\n\r\n    if (shallow) {\r\n      return res\r\n    }\r\n\r\n    if (isRef(res)) {\r\n      // ref unwrapping - skip unwrap for Array + integer key.\r\n      return targetIsArray && isIntegerKey(key) ? res : res.value\r\n    }\r\n\r\n    if (isObject(res)) {\r\n      // Convert returned value into a proxy as well. we do the isObject check\r\n      // here to avoid invalid value warning. Also need to lazy access readonly\r\n      // and reactive here to avoid circular dependency.\r\n      return isReadonly ? readonly(res) : reactive(res)\r\n    }\r\n\r\n    return res\r\n  }\r\n}\r\n\r\nconst set = /*#__PURE__*/ createSetter()\r\nconst shallowSet = /*#__PURE__*/ createSetter(true)\r\n\r\nfunction createSetter(shallow = false) {\r\n  return function set(\r\n    target: object,\r\n    key: string | symbol,\r\n    value: unknown,\r\n    receiver: object\r\n  ): boolean {\r\n    let oldValue = (target as any)[key]\r\n    if (isReadonly(oldValue) && isRef(oldValue) && !isRef(value)) {\r\n      return false\r\n    }\r\n    if (!shallow) {\r\n      if (!isShallow(value) && !isReadonly(value)) {\r\n        oldValue = toRaw(oldValue)\r\n        value = toRaw(value)\r\n      }\r\n      if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n        oldValue.value = value\r\n        return true\r\n      }\r\n    } else {\r\n      // in shallow mode, objects are set as-is regardless of reactive or not\r\n    }\r\n\r\n    const hadKey =\r\n      isArray(target) && isIntegerKey(key)\r\n        ? Number(key) < target.length\r\n        : hasOwn(target, key)\r\n    const result = Reflect.set(target, key, value, receiver)\r\n    // don't trigger if target is something up in the prototype chain of original\r\n    if (target === toRaw(receiver)) {\r\n      if (!hadKey) {\r\n        trigger(target, TriggerOpTypes.ADD, key, value)\r\n      } else if (hasChanged(value, oldValue)) {\r\n        trigger(target, TriggerOpTypes.SET, key, value, oldValue)\r\n      }\r\n    }\r\n    return result\r\n  }\r\n}\r\n\r\nfunction deleteProperty(target: object, key: string | symbol): boolean {\r\n  const hadKey = hasOwn(target, key)\r\n  const oldValue = (target as any)[key]\r\n  const result = Reflect.deleteProperty(target, key)\r\n  if (result && hadKey) {\r\n    trigger(target, TriggerOpTypes.DELETE, key, undefined, oldValue)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction has(target: object, key: string | symbol): boolean {\r\n  const result = Reflect.has(target, key)\r\n  if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n    track(target, TrackOpTypes.HAS, key)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction ownKeys(target: object): (string | symbol)[] {\r\n  track(target, TrackOpTypes.ITERATE, isArray(target) ? 'length' : ITERATE_KEY)\r\n  return Reflect.ownKeys(target)\r\n}\r\n\r\nexport const mutableHandlers: ProxyHandler<object> = {\r\n  get,\r\n  set,\r\n  deleteProperty,\r\n  has,\r\n  ownKeys\r\n}\r\n\r\nexport const readonlyHandlers: ProxyHandler<object> = {\r\n  get: readonlyGet,\r\n  set(target, key) {\r\n    if (__DEV__) {\r\n      warn(\r\n        `Set operation on key \"${String(key)}\" failed: target is readonly.`,\r\n        target\r\n      )\r\n    }\r\n    return true\r\n  },\r\n  deleteProperty(target, key) {\r\n    if (__DEV__) {\r\n      warn(\r\n        `Delete operation on key \"${String(key)}\" failed: target is readonly.`,\r\n        target\r\n      )\r\n    }\r\n    return true\r\n  }\r\n}\r\n\r\nexport const shallowReactiveHandlers = /*#__PURE__*/ extend(\r\n  {},\r\n  mutableHandlers,\r\n  {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n  }\r\n)\r\n\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nexport const shallowReadonlyHandlers = /*#__PURE__*/ extend(\r\n  {},\r\n  readonlyHandlers,\r\n  {\r\n    get: shallowReadonlyGet\r\n  }\r\n)\r\n","import { toRaw, ReactiveFlags, toReactive, toReadonly } from './reactive'\r\nimport { track, trigger, ITERATE_KEY, MAP_KEY_ITERATE_KEY } from './effect'\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport { capitalize, hasOwn, hasChanged, toRawType, isMap } from '@vue/shared'\r\n\r\nexport type CollectionTypes = IterableCollections | WeakCollections\r\n\r\ntype IterableCollections = Map<any, any> | Set<any>\r\ntype WeakCollections = WeakMap<any, any> | WeakSet<any>\r\ntype MapTypes = Map<any, any> | WeakMap<any, any>\r\ntype SetTypes = Set<any> | WeakSet<any>\r\n\r\nconst toShallow = <T extends unknown>(value: T): T => value\r\n\r\nconst getProto = <T extends CollectionTypes>(v: T): any =>\r\n  Reflect.getPrototypeOf(v)\r\n\r\nfunction get(\r\n  target: MapTypes,\r\n  key: unknown,\r\n  isReadonly = false,\r\n  isShallow = false\r\n) {\r\n  // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n  // of the value\r\n  target = (target as any)[ReactiveFlags.RAW]\r\n  const rawTarget = toRaw(target)\r\n  const rawKey = toRaw(key)\r\n  if (!isReadonly) {\r\n    if (key !== rawKey) {\r\n      track(rawTarget, TrackOpTypes.GET, key)\r\n    }\r\n    track(rawTarget, TrackOpTypes.GET, rawKey)\r\n  }\r\n  const { has } = getProto(rawTarget)\r\n  const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\r\n  if (has.call(rawTarget, key)) {\r\n    return wrap(target.get(key))\r\n  } else if (has.call(rawTarget, rawKey)) {\r\n    return wrap(target.get(rawKey))\r\n  } else if (target !== rawTarget) {\r\n    // #3602 readonly(reactive(Map))\r\n    // ensure that the nested reactive `Map` can do tracking for itself\r\n    target.get(key)\r\n  }\r\n}\r\n\r\nfunction has(this: CollectionTypes, key: unknown, isReadonly = false): boolean {\r\n  const target = (this as any)[ReactiveFlags.RAW]\r\n  const rawTarget = toRaw(target)\r\n  const rawKey = toRaw(key)\r\n  if (!isReadonly) {\r\n    if (key !== rawKey) {\r\n      track(rawTarget, TrackOpTypes.HAS, key)\r\n    }\r\n    track(rawTarget, TrackOpTypes.HAS, rawKey)\r\n  }\r\n  return key === rawKey\r\n    ? target.has(key)\r\n    : target.has(key) || target.has(rawKey)\r\n}\r\n\r\nfunction size(target: IterableCollections, isReadonly = false) {\r\n  target = (target as any)[ReactiveFlags.RAW]\r\n  !isReadonly && track(toRaw(target), TrackOpTypes.ITERATE, ITERATE_KEY)\r\n  return Reflect.get(target, 'size', target)\r\n}\r\n\r\nfunction add(this: SetTypes, value: unknown) {\r\n  value = toRaw(value)\r\n  const target = toRaw(this)\r\n  const proto = getProto(target)\r\n  const hadKey = proto.has.call(target, value)\r\n  if (!hadKey) {\r\n    target.add(value)\r\n    trigger(target, TriggerOpTypes.ADD, value, value)\r\n  }\r\n  return this\r\n}\r\n\r\nfunction set(this: MapTypes, key: unknown, value: unknown) {\r\n  value = toRaw(value)\r\n  const target = toRaw(this)\r\n  const { has, get } = getProto(target)\r\n\r\n  let hadKey = has.call(target, key)\r\n  if (!hadKey) {\r\n    key = toRaw(key)\r\n    hadKey = has.call(target, key)\r\n  } else if (__DEV__) {\r\n    checkIdentityKeys(target, has, key)\r\n  }\r\n\r\n  const oldValue = get.call(target, key)\r\n  target.set(key, value)\r\n  if (!hadKey) {\r\n    trigger(target, TriggerOpTypes.ADD, key, value)\r\n  } else if (hasChanged(value, oldValue)) {\r\n    trigger(target, TriggerOpTypes.SET, key, value, oldValue)\r\n  }\r\n  return this\r\n}\r\n\r\nfunction deleteEntry(this: CollectionTypes, key: unknown) {\r\n  const target = toRaw(this)\r\n  const { has, get } = getProto(target)\r\n  let hadKey = has.call(target, key)\r\n  if (!hadKey) {\r\n    key = toRaw(key)\r\n    hadKey = has.call(target, key)\r\n  } else if (__DEV__) {\r\n    checkIdentityKeys(target, has, key)\r\n  }\r\n\r\n  const oldValue = get ? get.call(target, key) : undefined\r\n  // forward the operation before queueing reactions\r\n  const result = target.delete(key)\r\n  if (hadKey) {\r\n    trigger(target, TriggerOpTypes.DELETE, key, undefined, oldValue)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction clear(this: IterableCollections) {\r\n  const target = toRaw(this)\r\n  const hadItems = target.size !== 0\r\n  const oldTarget = __DEV__\r\n    ? isMap(target)\r\n      ? new Map(target)\r\n      : new Set(target)\r\n    : undefined\r\n  // forward the operation before queueing reactions\r\n  const result = target.clear()\r\n  if (hadItems) {\r\n    trigger(target, TriggerOpTypes.CLEAR, undefined, undefined, oldTarget)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction createForEach(isReadonly: boolean, isShallow: boolean) {\r\n  return function forEach(\r\n    this: IterableCollections,\r\n    callback: Function,\r\n    thisArg?: unknown\r\n  ) {\r\n    const observed = this as any\r\n    const target = observed[ReactiveFlags.RAW]\r\n    const rawTarget = toRaw(target)\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\r\n    !isReadonly && track(rawTarget, TrackOpTypes.ITERATE, ITERATE_KEY)\r\n    return target.forEach((value: unknown, key: unknown) => {\r\n      // important: make sure the callback is\r\n      // 1. invoked with the reactive map as `this` and 3rd arg\r\n      // 2. the value received should be a corresponding reactive/readonly.\r\n      return callback.call(thisArg, wrap(value), wrap(key), observed)\r\n    })\r\n  }\r\n}\r\n\r\ninterface Iterable {\r\n  [Symbol.iterator](): Iterator\r\n}\r\n\r\ninterface Iterator {\r\n  next(value?: any): IterationResult\r\n}\r\n\r\ninterface IterationResult {\r\n  value: any\r\n  done: boolean\r\n}\r\n\r\nfunction createIterableMethod(\r\n  method: string | symbol,\r\n  isReadonly: boolean,\r\n  isShallow: boolean\r\n) {\r\n  return function (\r\n    this: IterableCollections,\r\n    ...args: unknown[]\r\n  ): Iterable & Iterator {\r\n    const target = (this as any)[ReactiveFlags.RAW]\r\n    const rawTarget = toRaw(target)\r\n    const targetIsMap = isMap(rawTarget)\r\n    const isPair =\r\n      method === 'entries' || (method === Symbol.iterator && targetIsMap)\r\n    const isKeyOnly = method === 'keys' && targetIsMap\r\n    const innerIterator = target[method](...args)\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\r\n    !isReadonly &&\r\n      track(\r\n        rawTarget,\r\n        TrackOpTypes.ITERATE,\r\n        isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY\r\n      )\r\n    // return a wrapped iterator which returns observed versions of the\r\n    // values emitted from the real iterator\r\n    return {\r\n      // iterator protocol\r\n      next() {\r\n        const { value, done } = innerIterator.next()\r\n        return done\r\n          ? { value, done }\r\n          : {\r\n              value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n              done\r\n            }\r\n      },\r\n      // iterable protocol\r\n      [Symbol.iterator]() {\r\n        return this\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction createReadonlyMethod(type: TriggerOpTypes): Function {\r\n  return function (this: CollectionTypes, ...args: unknown[]) {\r\n    if (__DEV__) {\r\n      const key = args[0] ? `on key \"${args[0]}\" ` : ``\r\n      console.warn(\r\n        `${capitalize(type)} operation ${key}failed: target is readonly.`,\r\n        toRaw(this)\r\n      )\r\n    }\r\n    return type === TriggerOpTypes.DELETE ? false : this\r\n  }\r\n}\r\n\r\nfunction createInstrumentations() {\r\n  const mutableInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections)\r\n    },\r\n    has,\r\n    add,\r\n    set,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n  }\r\n\r\n  const shallowInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key, false, true)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections)\r\n    },\r\n    has,\r\n    add,\r\n    set,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n  }\r\n\r\n  const readonlyInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key, true)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections, true)\r\n    },\r\n    has(this: MapTypes, key: unknown) {\r\n      return has.call(this, key, true)\r\n    },\r\n    add: createReadonlyMethod(TriggerOpTypes.ADD),\r\n    set: createReadonlyMethod(TriggerOpTypes.SET),\r\n    delete: createReadonlyMethod(TriggerOpTypes.DELETE),\r\n    clear: createReadonlyMethod(TriggerOpTypes.CLEAR),\r\n    forEach: createForEach(true, false)\r\n  }\r\n\r\n  const shallowReadonlyInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key, true, true)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections, true)\r\n    },\r\n    has(this: MapTypes, key: unknown) {\r\n      return has.call(this, key, true)\r\n    },\r\n    add: createReadonlyMethod(TriggerOpTypes.ADD),\r\n    set: createReadonlyMethod(TriggerOpTypes.SET),\r\n    delete: createReadonlyMethod(TriggerOpTypes.DELETE),\r\n    clear: createReadonlyMethod(TriggerOpTypes.CLEAR),\r\n    forEach: createForEach(true, true)\r\n  }\r\n\r\n  const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator]\r\n  iteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      false,\r\n      false\r\n    )\r\n    readonlyInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      true,\r\n      false\r\n    )\r\n    shallowInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      false,\r\n      true\r\n    )\r\n    shallowReadonlyInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      true,\r\n      true\r\n    )\r\n  })\r\n\r\n  return [\r\n    mutableInstrumentations,\r\n    readonlyInstrumentations,\r\n    shallowInstrumentations,\r\n    shallowReadonlyInstrumentations\r\n  ]\r\n}\r\n\r\nconst [\r\n  mutableInstrumentations,\r\n  readonlyInstrumentations,\r\n  shallowInstrumentations,\r\n  shallowReadonlyInstrumentations\r\n] = /* #__PURE__*/ createInstrumentations()\r\n\r\nfunction createInstrumentationGetter(isReadonly: boolean, shallow: boolean) {\r\n  const instrumentations = shallow\r\n    ? isReadonly\r\n      ? shallowReadonlyInstrumentations\r\n      : shallowInstrumentations\r\n    : isReadonly\r\n    ? readonlyInstrumentations\r\n    : mutableInstrumentations\r\n\r\n  return (\r\n    target: CollectionTypes,\r\n    key: string | symbol,\r\n    receiver: CollectionTypes\r\n  ) => {\r\n    if (key === ReactiveFlags.IS_REACTIVE) {\r\n      return !isReadonly\r\n    } else if (key === ReactiveFlags.IS_READONLY) {\r\n      return isReadonly\r\n    } else if (key === ReactiveFlags.RAW) {\r\n      return target\r\n    }\r\n\r\n    return Reflect.get(\r\n      hasOwn(instrumentations, key) && key in target\r\n        ? instrumentations\r\n        : target,\r\n      key,\r\n      receiver\r\n    )\r\n  }\r\n}\r\n\r\nexport const mutableCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: /*#__PURE__*/ createInstrumentationGetter(false, false)\r\n}\r\n\r\nexport const shallowCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: /*#__PURE__*/ createInstrumentationGetter(false, true)\r\n}\r\n\r\nexport const readonlyCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: /*#__PURE__*/ createInstrumentationGetter(true, false)\r\n}\r\n\r\nexport const shallowReadonlyCollectionHandlers: ProxyHandler<CollectionTypes> =\r\n  {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, true)\r\n  }\r\n\r\nfunction checkIdentityKeys(\r\n  target: CollectionTypes,\r\n  has: (key: unknown) => boolean,\r\n  key: unknown\r\n) {\r\n  const rawKey = toRaw(key)\r\n  if (rawKey !== key && has.call(target, rawKey)) {\r\n    const type = toRawType(target)\r\n    console.warn(\r\n      `Reactive ${type} contains both the raw and reactive ` +\r\n        `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n        `which can lead to inconsistencies. ` +\r\n        `Avoid differentiating between the raw and reactive versions ` +\r\n        `of an object and only use the reactive version if possible.`\r\n    )\r\n  }\r\n}\r\n","import { isObject, toRawType, def } from '@vue/shared'\r\nimport {\r\n  mutableHandlers,\r\n  readonlyHandlers,\r\n  shallowReactiveHandlers,\r\n  shallowReadonlyHandlers\r\n} from './baseHandlers'\r\nimport {\r\n  mutableCollectionHandlers,\r\n  readonlyCollectionHandlers,\r\n  shallowCollectionHandlers,\r\n  shallowReadonlyCollectionHandlers\r\n} from './collectionHandlers'\r\nimport type { UnwrapRefSimple, Ref, RawSymbol } from './ref'\r\n\r\nexport const enum ReactiveFlags {\r\n  SKIP = '__v_skip',\r\n  IS_REACTIVE = '__v_isReactive',\r\n  IS_READONLY = '__v_isReadonly',\r\n  IS_SHALLOW = '__v_isShallow',\r\n  RAW = '__v_raw'\r\n}\r\n\r\nexport interface Target {\r\n  [ReactiveFlags.SKIP]?: boolean\r\n  [ReactiveFlags.IS_REACTIVE]?: boolean\r\n  [ReactiveFlags.IS_READONLY]?: boolean\r\n  [ReactiveFlags.IS_SHALLOW]?: boolean\r\n  [ReactiveFlags.RAW]?: any\r\n}\r\n\r\nexport const reactiveMap = new WeakMap<Target, any>()\r\nexport const shallowReactiveMap = new WeakMap<Target, any>()\r\nexport const readonlyMap = new WeakMap<Target, any>()\r\nexport const shallowReadonlyMap = new WeakMap<Target, any>()\r\n\r\nconst enum TargetType {\r\n  INVALID = 0,\r\n  COMMON = 1,\r\n  COLLECTION = 2\r\n}\r\n\r\nfunction targetTypeMap(rawType: string) {\r\n  switch (rawType) {\r\n    case 'Object':\r\n    case 'Array':\r\n      return TargetType.COMMON\r\n    case 'Map':\r\n    case 'Set':\r\n    case 'WeakMap':\r\n    case 'WeakSet':\r\n      return TargetType.COLLECTION\r\n    default:\r\n      return TargetType.INVALID\r\n  }\r\n}\r\n\r\nfunction getTargetType(value: Target) {\r\n  return value[ReactiveFlags.SKIP] || !Object.isExtensible(value)\r\n    ? TargetType.INVALID\r\n    : targetTypeMap(toRawType(value))\r\n}\r\n\r\n// only unwrap nested ref\r\nexport type UnwrapNestedRefs<T> = T extends Ref ? T : UnwrapRefSimple<T>\r\n\r\n/**\r\n * Creates a reactive copy of the original object.\r\n *\r\n * The reactive conversion is \"deep\"—it affects all nested properties. In the\r\n * ES2015 Proxy based implementation, the returned proxy is **not** equal to the\r\n * original object. It is recommended to work exclusively with the reactive\r\n * proxy and avoid relying on the original object.\r\n *\r\n * A reactive object also automatically unwraps refs contained in it, so you\r\n * don't need to use `.value` when accessing and mutating their value:\r\n *\r\n * ```js\r\n * const count = ref(0)\r\n * const obj = reactive({\r\n *   count\r\n * })\r\n *\r\n * obj.count++\r\n * obj.count // -> 1\r\n * count.value // -> 1\r\n * ```\r\n */\r\nexport function reactive<T extends object>(target: T): UnwrapNestedRefs<T>\r\nexport function reactive(target: object) {\r\n  // if trying to observe a readonly proxy, return the readonly version.\r\n  if (isReadonly(target)) {\r\n    return target\r\n  }\r\n  return createReactiveObject(\r\n    target,\r\n    false,\r\n    mutableHandlers,\r\n    mutableCollectionHandlers,\r\n    reactiveMap\r\n  )\r\n}\r\n\r\nexport declare const ShallowReactiveMarker: unique symbol\r\n\r\nexport type ShallowReactive<T> = T & { [ShallowReactiveMarker]?: true }\r\n\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nexport function shallowReactive<T extends object>(\r\n  target: T\r\n): ShallowReactive<T> {\r\n  return createReactiveObject(\r\n    target,\r\n    false,\r\n    shallowReactiveHandlers,\r\n    shallowCollectionHandlers,\r\n    shallowReactiveMap\r\n  )\r\n}\r\n\r\ntype Primitive = string | number | boolean | bigint | symbol | undefined | null\r\ntype Builtin = Primitive | Function | Date | Error | RegExp\r\nexport type DeepReadonly<T> = T extends Builtin\r\n  ? T\r\n  : T extends Map<infer K, infer V>\r\n  ? ReadonlyMap<DeepReadonly<K>, DeepReadonly<V>>\r\n  : T extends ReadonlyMap<infer K, infer V>\r\n  ? ReadonlyMap<DeepReadonly<K>, DeepReadonly<V>>\r\n  : T extends WeakMap<infer K, infer V>\r\n  ? WeakMap<DeepReadonly<K>, DeepReadonly<V>>\r\n  : T extends Set<infer U>\r\n  ? ReadonlySet<DeepReadonly<U>>\r\n  : T extends ReadonlySet<infer U>\r\n  ? ReadonlySet<DeepReadonly<U>>\r\n  : T extends WeakSet<infer U>\r\n  ? WeakSet<DeepReadonly<U>>\r\n  : T extends Promise<infer U>\r\n  ? Promise<DeepReadonly<U>>\r\n  : T extends Ref<infer U>\r\n  ? Readonly<Ref<DeepReadonly<U>>>\r\n  : T extends {}\r\n  ? { readonly [K in keyof T]: DeepReadonly<T[K]> }\r\n  : Readonly<T>\r\n\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nexport function readonly<T extends object>(\r\n  target: T\r\n): DeepReadonly<UnwrapNestedRefs<T>> {\r\n  return createReactiveObject(\r\n    target,\r\n    true,\r\n    readonlyHandlers,\r\n    readonlyCollectionHandlers,\r\n    readonlyMap\r\n  )\r\n}\r\n\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nexport function shallowReadonly<T extends object>(target: T): Readonly<T> {\r\n  return createReactiveObject(\r\n    target,\r\n    true,\r\n    shallowReadonlyHandlers,\r\n    shallowReadonlyCollectionHandlers,\r\n    shallowReadonlyMap\r\n  )\r\n}\r\n\r\nfunction createReactiveObject(\r\n  target: Target,\r\n  isReadonly: boolean,\r\n  baseHandlers: ProxyHandler<any>,\r\n  collectionHandlers: ProxyHandler<any>,\r\n  proxyMap: WeakMap<Target, any>\r\n) {\r\n  if (!isObject(target)) {\r\n    if (__DEV__) {\r\n      console.warn(`value cannot be made reactive: ${String(target)}`)\r\n    }\r\n    return target\r\n  }\r\n  // target is already a Proxy, return it.\r\n  // exception: calling readonly() on a reactive object\r\n  if (\r\n    target[ReactiveFlags.RAW] &&\r\n    !(isReadonly && target[ReactiveFlags.IS_REACTIVE])\r\n  ) {\r\n    return target\r\n  }\r\n  // target already has corresponding Proxy\r\n  const existingProxy = proxyMap.get(target)\r\n  if (existingProxy) {\r\n    return existingProxy\r\n  }\r\n  // only specific value types can be observed.\r\n  const targetType = getTargetType(target)\r\n  if (targetType === TargetType.INVALID) {\r\n    return target\r\n  }\r\n  const proxy = new Proxy(\r\n    target,\r\n    targetType === TargetType.COLLECTION ? collectionHandlers : baseHandlers\r\n  )\r\n  proxyMap.set(target, proxy)\r\n  return proxy\r\n}\r\n\r\nexport function isReactive(value: unknown): boolean {\r\n  if (isReadonly(value)) {\r\n    return isReactive((value as Target)[ReactiveFlags.RAW])\r\n  }\r\n  return !!(value && (value as Target)[ReactiveFlags.IS_REACTIVE])\r\n}\r\n\r\nexport function isReadonly(value: unknown): boolean {\r\n  return !!(value && (value as Target)[ReactiveFlags.IS_READONLY])\r\n}\r\n\r\nexport function isShallow(value: unknown): boolean {\r\n  return !!(value && (value as Target)[ReactiveFlags.IS_SHALLOW])\r\n}\r\n\r\nexport function isProxy(value: unknown): boolean {\r\n  return isReactive(value) || isReadonly(value)\r\n}\r\n\r\nexport function toRaw<T>(observed: T): T {\r\n  const raw = observed && (observed as Target)[ReactiveFlags.RAW]\r\n  return raw ? toRaw(raw) : observed\r\n}\r\n\r\nexport function markRaw<T extends object>(\r\n  value: T\r\n): T & { [RawSymbol]?: true } {\r\n  def(value, ReactiveFlags.SKIP, true)\r\n  return value\r\n}\r\n\r\nexport const toReactive = <T extends unknown>(value: T): T =>\r\n  isObject(value) ? reactive(value) : value\r\n\r\nexport const toReadonly = <T extends unknown>(value: T): T =>\r\n  isObject(value) ? readonly(value as Record<any, any>) : value\r\n","import {\r\n  activeEffect,\r\n  shouldTrack,\r\n  trackEffects,\r\n  triggerEffects\r\n} from './effect'\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport { isArray, hasChanged, IfAny } from '@vue/shared'\r\nimport {\r\n  isProxy,\r\n  toRaw,\r\n  isReactive,\r\n  toReactive,\r\n  isReadonly,\r\n  isShallow\r\n} from './reactive'\r\nimport type { ShallowReactiveMarker } from './reactive'\r\nimport { CollectionTypes } from './collectionHandlers'\r\nimport { createDep, Dep } from './dep'\r\n\r\ndeclare const RefSymbol: unique symbol\r\nexport declare const RawSymbol: unique symbol\r\n\r\nexport interface Ref<T = any> {\r\n  value: T\r\n  /**\r\n   * Type differentiator only.\r\n   * We need this to be in public d.ts but don't want it to show up in IDE\r\n   * autocomplete, so we use a private Symbol instead.\r\n   */\r\n  [RefSymbol]: true\r\n}\r\n\r\ntype RefBase<T> = {\r\n  dep?: Dep\r\n  value: T\r\n}\r\n\r\nexport function trackRefValue(ref: RefBase<any>) {\r\n  if (shouldTrack && activeEffect) {\r\n    ref = toRaw(ref)\r\n    if (__DEV__) {\r\n      trackEffects(ref.dep || (ref.dep = createDep()), {\r\n        target: ref,\r\n        type: TrackOpTypes.GET,\r\n        key: 'value'\r\n      })\r\n    } else {\r\n      trackEffects(ref.dep || (ref.dep = createDep()))\r\n    }\r\n  }\r\n}\r\n\r\nexport function triggerRefValue(ref: RefBase<any>, newVal?: any) {\r\n  ref = toRaw(ref)\r\n  if (ref.dep) {\r\n    if (__DEV__) {\r\n      triggerEffects(ref.dep, {\r\n        target: ref,\r\n        type: TriggerOpTypes.SET,\r\n        key: 'value',\r\n        newValue: newVal\r\n      })\r\n    } else {\r\n      triggerEffects(ref.dep)\r\n    }\r\n  }\r\n}\r\n\r\nexport function isRef<T>(r: Ref<T> | unknown): r is Ref<T>\r\nexport function isRef(r: any): r is Ref {\r\n  return !!(r && r.__v_isRef === true)\r\n}\r\n\r\nexport function ref<T extends object>(\r\n  value: T\r\n): [T] extends [Ref] ? T : Ref<UnwrapRef<T>>\r\nexport function ref<T>(value: T): Ref<UnwrapRef<T>>\r\nexport function ref<T = any>(): Ref<T | undefined>\r\nexport function ref(value?: unknown) {\r\n  return createRef(value, false)\r\n}\r\n\r\ndeclare const ShallowRefMarker: unique symbol\r\n\r\nexport type ShallowRef<T = any> = Ref<T> & { [ShallowRefMarker]?: true }\r\n\r\nexport function shallowRef<T extends object>(\r\n  value: T\r\n): T extends Ref ? T : ShallowRef<T>\r\nexport function shallowRef<T>(value: T): ShallowRef<T>\r\nexport function shallowRef<T = any>(): ShallowRef<T | undefined>\r\nexport function shallowRef(value?: unknown) {\r\n  return createRef(value, true)\r\n}\r\n\r\nfunction createRef(rawValue: unknown, shallow: boolean) {\r\n  if (isRef(rawValue)) {\r\n    return rawValue\r\n  }\r\n  return new RefImpl(rawValue, shallow)\r\n}\r\n\r\nclass RefImpl<T> {\r\n  private _value: T\r\n  private _rawValue: T\r\n\r\n  public dep?: Dep = undefined\r\n  public readonly __v_isRef = true\r\n\r\n  constructor(value: T, public readonly __v_isShallow: boolean) {\r\n    this._rawValue = __v_isShallow ? value : toRaw(value)\r\n    this._value = __v_isShallow ? value : toReactive(value)\r\n  }\r\n\r\n  get value() {\r\n    trackRefValue(this)\r\n    return this._value\r\n  }\r\n\r\n  set value(newVal) {\r\n    const useDirectValue =\r\n      this.__v_isShallow || isShallow(newVal) || isReadonly(newVal)\r\n    newVal = useDirectValue ? newVal : toRaw(newVal)\r\n    if (hasChanged(newVal, this._rawValue)) {\r\n      this._rawValue = newVal\r\n      this._value = useDirectValue ? newVal : toReactive(newVal)\r\n      triggerRefValue(this, newVal)\r\n    }\r\n  }\r\n}\r\n\r\nexport function triggerRef(ref: Ref) {\r\n  triggerRefValue(ref, __DEV__ ? ref.value : void 0)\r\n}\r\n\r\nexport function unref<T>(ref: T | Ref<T>): T {\r\n  return isRef(ref) ? (ref.value as any) : ref\r\n}\r\n\r\nconst shallowUnwrapHandlers: ProxyHandler<any> = {\r\n  get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n  set: (target, key, value, receiver) => {\r\n    const oldValue = target[key]\r\n    if (isRef(oldValue) && !isRef(value)) {\r\n      oldValue.value = value\r\n      return true\r\n    } else {\r\n      return Reflect.set(target, key, value, receiver)\r\n    }\r\n  }\r\n}\r\n\r\nexport function proxyRefs<T extends object>(\r\n  objectWithRefs: T\r\n): ShallowUnwrapRef<T> {\r\n  return isReactive(objectWithRefs)\r\n    ? objectWithRefs\r\n    : new Proxy(objectWithRefs, shallowUnwrapHandlers)\r\n}\r\n\r\nexport type CustomRefFactory<T> = (\r\n  track: () => void,\r\n  trigger: () => void\r\n) => {\r\n  get: () => T\r\n  set: (value: T) => void\r\n}\r\n\r\nclass CustomRefImpl<T> {\r\n  public dep?: Dep = undefined\r\n\r\n  private readonly _get: ReturnType<CustomRefFactory<T>>['get']\r\n  private readonly _set: ReturnType<CustomRefFactory<T>>['set']\r\n\r\n  public readonly __v_isRef = true\r\n\r\n  constructor(factory: CustomRefFactory<T>) {\r\n    const { get, set } = factory(\r\n      () => trackRefValue(this),\r\n      () => triggerRefValue(this)\r\n    )\r\n    this._get = get\r\n    this._set = set\r\n  }\r\n\r\n  get value() {\r\n    return this._get()\r\n  }\r\n\r\n  set value(newVal) {\r\n    this._set(newVal)\r\n  }\r\n}\r\n\r\nexport function customRef<T>(factory: CustomRefFactory<T>): Ref<T> {\r\n  return new CustomRefImpl(factory) as any\r\n}\r\n\r\nexport type ToRefs<T = any> = {\r\n  [K in keyof T]: ToRef<T[K]>\r\n}\r\nexport function toRefs<T extends object>(object: T): ToRefs<T> {\r\n  if (__DEV__ && !isProxy(object)) {\r\n    console.warn(`toRefs() expects a reactive object but received a plain one.`)\r\n  }\r\n  const ret: any = isArray(object) ? new Array(object.length) : {}\r\n  for (const key in object) {\r\n    ret[key] = toRef(object, key)\r\n  }\r\n  return ret\r\n}\r\n\r\nclass ObjectRefImpl<T extends object, K extends keyof T> {\r\n  public readonly __v_isRef = true\r\n\r\n  constructor(\r\n    private readonly _object: T,\r\n    private readonly _key: K,\r\n    private readonly _defaultValue?: T[K]\r\n  ) {}\r\n\r\n  get value() {\r\n    const val = this._object[this._key]\r\n    return val === undefined ? (this._defaultValue as T[K]) : val\r\n  }\r\n\r\n  set value(newVal) {\r\n    this._object[this._key] = newVal\r\n  }\r\n}\r\n\r\nexport type ToRef<T> = IfAny<T, Ref<T>, [T] extends [Ref] ? T : Ref<T>>\r\n\r\nexport function toRef<T extends object, K extends keyof T>(\r\n  object: T,\r\n  key: K\r\n): ToRef<T[K]>\r\n\r\nexport function toRef<T extends object, K extends keyof T>(\r\n  object: T,\r\n  key: K,\r\n  defaultValue: T[K]\r\n): ToRef<Exclude<T[K], undefined>>\r\n\r\nexport function toRef<T extends object, K extends keyof T>(\r\n  object: T,\r\n  key: K,\r\n  defaultValue?: T[K]\r\n): ToRef<T[K]> {\r\n  const val = object[key]\r\n  return isRef(val)\r\n    ? val\r\n    : (new ObjectRefImpl(object, key, defaultValue) as any)\r\n}\r\n\r\n// corner case when use narrows type\r\n// Ex. type RelativePath = string & { __brand: unknown }\r\n// RelativePath extends object -> true\r\ntype BaseTypes = string | number | boolean\r\n\r\n/**\r\n * This is a special exported interface for other packages to declare\r\n * additional types that should bail out for ref unwrapping. For example\r\n * \\@vue/runtime-dom can declare it like so in its d.ts:\r\n *\r\n * ``` ts\r\n * declare module '@vue/reactivity' {\r\n *   export interface RefUnwrapBailTypes {\r\n *     runtimeDOMBailTypes: Node | Window\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * Note that api-extractor somehow refuses to include `declare module`\r\n * augmentations in its generated d.ts, so we have to manually append them\r\n * to the final generated d.ts in our build process.\r\n */\r\nexport interface RefUnwrapBailTypes {}\r\n\r\nexport type ShallowUnwrapRef<T> = {\r\n  [K in keyof T]: T[K] extends Ref<infer V>\r\n    ? V\r\n    : // if `V` is `unknown` that means it does not extend `Ref` and is undefined\r\n    T[K] extends Ref<infer V> | undefined\r\n    ? unknown extends V\r\n      ? undefined\r\n      : V | undefined\r\n    : T[K]\r\n}\r\n\r\nexport type UnwrapRef<T> = T extends ShallowRef<infer V>\r\n  ? V\r\n  : T extends Ref<infer V>\r\n  ? UnwrapRefSimple<V>\r\n  : UnwrapRefSimple<T>\r\n\r\nexport type UnwrapRefSimple<T> = T extends\r\n  | Function\r\n  | CollectionTypes\r\n  | BaseTypes\r\n  | Ref\r\n  | RefUnwrapBailTypes[keyof RefUnwrapBailTypes]\r\n  | { [RawSymbol]?: true }\r\n  ? T\r\n  : T extends Array<any>\r\n  ? { [K in keyof T]: UnwrapRefSimple<T[K]> }\r\n  : T extends object & { [ShallowReactiveMarker]?: never }\r\n  ? {\r\n      [P in keyof T]: P extends symbol ? T[P] : UnwrapRef<T[P]>\r\n    }\r\n  : T\r\n","import { DebuggerOptions, ReactiveEffect } from './effect'\r\nimport { Ref, trackRefValue, triggerRefValue } from './ref'\r\nimport { isFunction, NOOP } from '@vue/shared'\r\nimport { ReactiveFlags, toRaw } from './reactive'\r\nimport { Dep } from './dep'\r\n\r\ndeclare const ComputedRefSymbol: unique symbol\r\n\r\nexport interface ComputedRef<T = any> extends WritableComputedRef<T> {\r\n  readonly value: T\r\n  [ComputedRefSymbol]: true\r\n}\r\n\r\nexport interface WritableComputedRef<T> extends Ref<T> {\r\n  readonly effect: ReactiveEffect<T>\r\n}\r\n\r\nexport type ComputedGetter<T> = (...args: any[]) => T\r\nexport type ComputedSetter<T> = (v: T) => void\r\n\r\nexport interface WritableComputedOptions<T> {\r\n  get: ComputedGetter<T>\r\n  set: ComputedSetter<T>\r\n}\r\n\r\nexport class ComputedRefImpl<T> {\r\n  public dep?: Dep = undefined\r\n\r\n  private _value!: T\r\n  public readonly effect: ReactiveEffect<T>\r\n\r\n  public readonly __v_isRef = true\r\n  public readonly [ReactiveFlags.IS_READONLY]: boolean = false\r\n\r\n  public _dirty = true\r\n  public _cacheable: boolean\r\n\r\n  constructor(\r\n    getter: ComputedGetter<T>,\r\n    private readonly _setter: ComputedSetter<T>,\r\n    isReadonly: boolean,\r\n    isSSR: boolean\r\n  ) {\r\n    this.effect = new ReactiveEffect(getter, () => {\r\n      if (!this._dirty) {\r\n        this._dirty = true\r\n        triggerRefValue(this)\r\n      }\r\n    })\r\n    this.effect.computed = this\r\n    this.effect.active = this._cacheable = !isSSR\r\n    this[ReactiveFlags.IS_READONLY] = isReadonly\r\n  }\r\n\r\n  get value() {\r\n    // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n    const self = toRaw(this)\r\n    trackRefValue(self)\r\n    if (self._dirty || !self._cacheable) {\r\n      self._dirty = false\r\n      self._value = self.effect.run()!\r\n    }\r\n    return self._value\r\n  }\r\n\r\n  set value(newValue: T) {\r\n    this._setter(newValue)\r\n  }\r\n}\r\n\r\nexport function computed<T>(\r\n  getter: ComputedGetter<T>,\r\n  debugOptions?: DebuggerOptions\r\n): ComputedRef<T>\r\nexport function computed<T>(\r\n  options: WritableComputedOptions<T>,\r\n  debugOptions?: DebuggerOptions\r\n): WritableComputedRef<T>\r\nexport function computed<T>(\r\n  getterOrOptions: ComputedGetter<T> | WritableComputedOptions<T>,\r\n  debugOptions?: DebuggerOptions,\r\n  isSSR = false\r\n) {\r\n  let getter: ComputedGetter<T>\r\n  let setter: ComputedSetter<T>\r\n\r\n  const onlyGetter = isFunction(getterOrOptions)\r\n  if (onlyGetter) {\r\n    getter = getterOrOptions\r\n    setter = __DEV__\r\n      ? () => {\r\n          console.warn('Write operation failed: computed value is readonly')\r\n        }\r\n      : NOOP\r\n  } else {\r\n    getter = getterOrOptions.get\r\n    setter = getterOrOptions.set\r\n  }\r\n\r\n  const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR)\r\n\r\n  if (__DEV__ && debugOptions && !isSSR) {\r\n    cRef.effect.onTrack = debugOptions.onTrack\r\n    cRef.effect.onTrigger = debugOptions.onTrigger\r\n  }\r\n\r\n  return cRef as any\r\n}\r\n","import { VNode } from './vnode'\r\nimport {\r\n  Data,\r\n  ComponentInternalInstance,\r\n  ConcreteComponent,\r\n  formatComponentName\r\n} from './component'\r\nimport { isString, isFunction } from '@vue/shared'\r\nimport { toRaw, isRef, pauseTracking, resetTracking } from '@vue/reactivity'\r\nimport { callWithErrorHandling, ErrorCodes } from './errorHandling'\r\n\r\ntype ComponentVNode = VNode & {\r\n  type: ConcreteComponent\r\n}\r\n\r\nconst stack: VNode[] = []\r\n\r\ntype TraceEntry = {\r\n  vnode: ComponentVNode\r\n  recurseCount: number\r\n}\r\n\r\ntype ComponentTraceStack = TraceEntry[]\r\n\r\nexport function pushWarningContext(vnode: VNode) {\r\n  stack.push(vnode)\r\n}\r\n\r\nexport function popWarningContext() {\r\n  stack.pop()\r\n}\r\n\r\nexport function warn(msg: string, ...args: any[]) {\r\n  // avoid props formatting or warn handler tracking deps that might be mutated\r\n  // during patch, leading to infinite recursion.\r\n  pauseTracking()\r\n\r\n  const instance = stack.length ? stack[stack.length - 1].component : null\r\n  const appWarnHandler = instance && instance.appContext.config.warnHandler\r\n  const trace = getComponentTrace()\r\n\r\n  if (appWarnHandler) {\r\n    callWithErrorHandling(\r\n      appWarnHandler,\r\n      instance,\r\n      ErrorCodes.APP_WARN_HANDLER,\r\n      [\r\n        msg + args.join(''),\r\n        instance && instance.proxy,\r\n        trace\r\n          .map(\r\n            ({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`\r\n          )\r\n          .join('\\n'),\r\n        trace\r\n      ]\r\n    )\r\n  } else {\r\n    const warnArgs = [`[Vue warn]: ${msg}`, ...args]\r\n    /* istanbul ignore if */\r\n    if (\r\n      trace.length &&\r\n      // avoid spamming console during tests\r\n      !__TEST__\r\n    ) {\r\n      warnArgs.push(`\\n`, ...formatTrace(trace))\r\n    }\r\n    console.warn(...warnArgs)\r\n  }\r\n\r\n  resetTracking()\r\n}\r\n\r\nexport function getComponentTrace(): ComponentTraceStack {\r\n  let currentVNode: VNode | null = stack[stack.length - 1]\r\n  if (!currentVNode) {\r\n    return []\r\n  }\r\n\r\n  // we can't just use the stack because it will be incomplete during updates\r\n  // that did not start from the root. Re-construct the parent chain using\r\n  // instance parent pointers.\r\n  const normalizedStack: ComponentTraceStack = []\r\n\r\n  while (currentVNode) {\r\n    const last = normalizedStack[0]\r\n    if (last && last.vnode === currentVNode) {\r\n      last.recurseCount++\r\n    } else {\r\n      normalizedStack.push({\r\n        vnode: currentVNode as ComponentVNode,\r\n        recurseCount: 0\r\n      })\r\n    }\r\n    const parentInstance: ComponentInternalInstance | null =\r\n      currentVNode.component && currentVNode.component.parent\r\n    currentVNode = parentInstance && parentInstance.vnode\r\n  }\r\n\r\n  return normalizedStack\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace: ComponentTraceStack): any[] {\r\n  const logs: any[] = []\r\n  trace.forEach((entry, i) => {\r\n    logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry))\r\n  })\r\n  return logs\r\n}\r\n\r\nfunction formatTraceEntry({ vnode, recurseCount }: TraceEntry): any[] {\r\n  const postfix =\r\n    recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``\r\n  const isRoot = vnode.component ? vnode.component.parent == null : false\r\n  const open = ` at <${formatComponentName(\r\n    vnode.component,\r\n    vnode.type,\r\n    isRoot\r\n  )}`\r\n  const close = `>` + postfix\r\n  return vnode.props\r\n    ? [open, ...formatProps(vnode.props), close]\r\n    : [open + close]\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction formatProps(props: Data): any[] {\r\n  const res: any[] = []\r\n  const keys = Object.keys(props)\r\n  keys.slice(0, 3).forEach(key => {\r\n    res.push(...formatProp(key, props[key]))\r\n  })\r\n  if (keys.length > 3) {\r\n    res.push(` ...`)\r\n  }\r\n  return res\r\n}\r\n\r\nfunction formatProp(key: string, value: unknown): any[]\r\nfunction formatProp(key: string, value: unknown, raw: true): any\r\n/* istanbul ignore next */\r\nfunction formatProp(key: string, value: unknown, raw?: boolean): any {\r\n  if (isString(value)) {\r\n    value = JSON.stringify(value)\r\n    return raw ? value : [`${key}=${value}`]\r\n  } else if (\r\n    typeof value === 'number' ||\r\n    typeof value === 'boolean' ||\r\n    value == null\r\n  ) {\r\n    return raw ? value : [`${key}=${value}`]\r\n  } else if (isRef(value)) {\r\n    value = formatProp(key, toRaw(value.value), true)\r\n    return raw ? value : [`${key}=Ref<`, value, `>`]\r\n  } else if (isFunction(value)) {\r\n    return [`${key}=fn${value.name ? `<${value.name}>` : ``}`]\r\n  } else {\r\n    value = toRaw(value)\r\n    return raw ? value : [`${key}=`, value]\r\n  }\r\n}\r\n","import { VNode } from './vnode'\r\nimport { ComponentInternalInstance, LifecycleHooks } from './component'\r\nimport { warn, pushWarningContext, popWarningContext } from './warning'\r\nimport { isPromise, isFunction } from '@vue/shared'\r\n\r\n// contexts where user provided function may be executed, in addition to\r\n// lifecycle hooks.\r\nexport const enum ErrorCodes {\r\n  SETUP_FUNCTION,\r\n  RENDER_FUNCTION,\r\n  WATCH_GETTER,\r\n  WATCH_CALLBACK,\r\n  WATCH_CLEANUP,\r\n  NATIVE_EVENT_HANDLER,\r\n  COMPONENT_EVENT_HANDLER,\r\n  VNODE_HOOK,\r\n  DIRECTIVE_HOOK,\r\n  TRANSITION_HOOK,\r\n  APP_ERROR_HANDLER,\r\n  APP_WARN_HANDLER,\r\n  FUNCTION_REF,\r\n  ASYNC_COMPONENT_LOADER,\r\n  SCHEDULER\r\n}\r\n\r\nexport const ErrorTypeStrings: Record<number | string, string> = {\r\n  [LifecycleHooks.SERVER_PREFETCH]: 'serverPrefetch hook',\r\n  [LifecycleHooks.BEFORE_CREATE]: 'beforeCreate hook',\r\n  [LifecycleHooks.CREATED]: 'created hook',\r\n  [LifecycleHooks.BEFORE_MOUNT]: 'beforeMount hook',\r\n  [LifecycleHooks.MOUNTED]: 'mounted hook',\r\n  [LifecycleHooks.BEFORE_UPDATE]: 'beforeUpdate hook',\r\n  [LifecycleHooks.UPDATED]: 'updated',\r\n  [LifecycleHooks.BEFORE_UNMOUNT]: 'beforeUnmount hook',\r\n  [LifecycleHooks.UNMOUNTED]: 'unmounted hook',\r\n  [LifecycleHooks.ACTIVATED]: 'activated hook',\r\n  [LifecycleHooks.DEACTIVATED]: 'deactivated hook',\r\n  [LifecycleHooks.ERROR_CAPTURED]: 'errorCaptured hook',\r\n  [LifecycleHooks.RENDER_TRACKED]: 'renderTracked hook',\r\n  [LifecycleHooks.RENDER_TRIGGERED]: 'renderTriggered hook',\r\n  [ErrorCodes.SETUP_FUNCTION]: 'setup function',\r\n  [ErrorCodes.RENDER_FUNCTION]: 'render function',\r\n  [ErrorCodes.WATCH_GETTER]: 'watcher getter',\r\n  [ErrorCodes.WATCH_CALLBACK]: 'watcher callback',\r\n  [ErrorCodes.WATCH_CLEANUP]: 'watcher cleanup function',\r\n  [ErrorCodes.NATIVE_EVENT_HANDLER]: 'native event handler',\r\n  [ErrorCodes.COMPONENT_EVENT_HANDLER]: 'component event handler',\r\n  [ErrorCodes.VNODE_HOOK]: 'vnode hook',\r\n  [ErrorCodes.DIRECTIVE_HOOK]: 'directive hook',\r\n  [ErrorCodes.TRANSITION_HOOK]: 'transition hook',\r\n  [ErrorCodes.APP_ERROR_HANDLER]: 'app errorHandler',\r\n  [ErrorCodes.APP_WARN_HANDLER]: 'app warnHandler',\r\n  [ErrorCodes.FUNCTION_REF]: 'ref function',\r\n  [ErrorCodes.ASYNC_COMPONENT_LOADER]: 'async component loader',\r\n  [ErrorCodes.SCHEDULER]:\r\n    'scheduler flush. This is likely a Vue internals bug. ' +\r\n    'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core'\r\n}\r\n\r\nexport type ErrorTypes = LifecycleHooks | ErrorCodes\r\n\r\nexport function callWithErrorHandling(\r\n  fn: Function,\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes,\r\n  args?: unknown[]\r\n) {\r\n  let res\r\n  try {\r\n    res = args ? fn(...args) : fn()\r\n  } catch (err) {\r\n    handleError(err, instance, type)\r\n  }\r\n  return res\r\n}\r\n\r\nexport function callWithAsyncErrorHandling(\r\n  fn: Function | Function[],\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes,\r\n  args?: unknown[]\r\n): any[] {\r\n  if (isFunction(fn)) {\r\n    const res = callWithErrorHandling(fn, instance, type, args)\r\n    if (res && isPromise(res)) {\r\n      res.catch(err => {\r\n        handleError(err, instance, type)\r\n      })\r\n    }\r\n    return res\r\n  }\r\n\r\n  const values = []\r\n  for (let i = 0; i < fn.length; i++) {\r\n    values.push(callWithAsyncErrorHandling(fn[i], instance, type, args))\r\n  }\r\n  return values\r\n}\r\n\r\nexport function handleError(\r\n  err: unknown,\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes,\r\n  throwInDev = true\r\n) {\r\n  const contextVNode = instance ? instance.vnode : null\r\n  if (instance) {\r\n    let cur = instance.parent\r\n    // the exposed instance is the render proxy to keep it consistent with 2.x\r\n    const exposedInstance = instance.proxy\r\n    // in production the hook receives only the error code\r\n    const errorInfo = __DEV__ ? ErrorTypeStrings[type] : type\r\n    while (cur) {\r\n      const errorCapturedHooks = cur.ec\r\n      if (errorCapturedHooks) {\r\n        for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n          if (\r\n            errorCapturedHooks[i](err, exposedInstance, errorInfo) === false\r\n          ) {\r\n            return\r\n          }\r\n        }\r\n      }\r\n      cur = cur.parent\r\n    }\r\n    // app-level handling\r\n    const appErrorHandler = instance.appContext.config.errorHandler\r\n    if (appErrorHandler) {\r\n      callWithErrorHandling(\r\n        appErrorHandler,\r\n        null,\r\n        ErrorCodes.APP_ERROR_HANDLER,\r\n        [err, exposedInstance, errorInfo]\r\n      )\r\n      return\r\n    }\r\n  }\r\n  logError(err, type, contextVNode, throwInDev)\r\n}\r\n\r\nfunction logError(\r\n  err: unknown,\r\n  type: ErrorTypes,\r\n  contextVNode: VNode | null,\r\n  throwInDev = true\r\n) {\r\n  if (__DEV__) {\r\n    const info = ErrorTypeStrings[type]\r\n    if (contextVNode) {\r\n      pushWarningContext(contextVNode)\r\n    }\r\n    warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`)\r\n    if (contextVNode) {\r\n      popWarningContext()\r\n    }\r\n    // crash in dev by default so it's more noticeable\r\n    if (throwInDev) {\r\n      throw err\r\n    } else if (!__TEST__) {\r\n      console.error(err)\r\n    }\r\n  } else {\r\n    // recover in prod to reduce the impact on end-user\r\n    console.error(err)\r\n  }\r\n}\r\n","import { ErrorCodes, callWithErrorHandling } from './errorHandling'\r\nimport { isArray, NOOP } from '@vue/shared'\r\nimport { ComponentInternalInstance, getComponentName } from './component'\r\nimport { warn } from './warning'\r\n\r\nexport interface SchedulerJob extends Function {\r\n  id?: number\r\n  active?: boolean\r\n  computed?: boolean\r\n  /**\r\n   * Indicates whether the effect is allowed to recursively trigger itself\r\n   * when managed by the scheduler.\r\n   *\r\n   * By default, a job cannot trigger itself because some built-in method calls,\r\n   * e.g. Array.prototype.push actually performs reads as well (#1740) which\r\n   * can lead to confusing infinite loops.\r\n   * The allowed cases are component update functions and watch callbacks.\r\n   * Component update functions may update child component props, which in turn\r\n   * trigger flush: \"pre\" watch callbacks that mutates state that the parent\r\n   * relies on (#1801). Watch callbacks doesn't track its dependencies so if it\r\n   * triggers itself again, it's likely intentional and it is the user's\r\n   * responsibility to perform recursive state mutation that eventually\r\n   * stabilizes (#1727).\r\n   */\r\n  allowRecurse?: boolean\r\n  /**\r\n   * Attached by renderer.ts when setting up a component's render effect\r\n   * Used to obtain component information when reporting max recursive updates.\r\n   * dev only.\r\n   */\r\n  ownerInstance?: ComponentInternalInstance\r\n}\r\n\r\nexport type SchedulerJobs = SchedulerJob | SchedulerJob[]\r\n\r\nlet isFlushing = false\r\nlet isFlushPending = false\r\n\r\nconst queue: SchedulerJob[] = []\r\nlet flushIndex = 0\r\n\r\nconst pendingPreFlushCbs: SchedulerJob[] = []\r\nlet activePreFlushCbs: SchedulerJob[] | null = null\r\nlet preFlushIndex = 0\r\n\r\nconst pendingPostFlushCbs: SchedulerJob[] = []\r\nlet activePostFlushCbs: SchedulerJob[] | null = null\r\nlet postFlushIndex = 0\r\n\r\nconst resolvedPromise = /*#__PURE__*/ Promise.resolve() as Promise<any>\r\nlet currentFlushPromise: Promise<void> | null = null\r\n\r\nlet currentPreFlushParentJob: SchedulerJob | null = null\r\n\r\nconst RECURSION_LIMIT = 100\r\ntype CountMap = Map<SchedulerJob, number>\r\n\r\nexport function nextTick<T = void>(\r\n  this: T,\r\n  fn?: (this: T) => void\r\n): Promise<void> {\r\n  const p = currentFlushPromise || resolvedPromise\r\n  return fn ? p.then(this ? fn.bind(this) : fn) : p\r\n}\r\n\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(id: number) {\r\n  // the start index should be `flushIndex + 1`\r\n  let start = flushIndex + 1\r\n  let end = queue.length\r\n\r\n  while (start < end) {\r\n    const middle = (start + end) >>> 1\r\n    const middleJobId = getId(queue[middle])\r\n    middleJobId < id ? (start = middle + 1) : (end = middle)\r\n  }\r\n\r\n  return start\r\n}\r\n\r\nexport function queueJob(job: SchedulerJob) {\r\n  // the dedupe search uses the startIndex argument of Array.includes()\r\n  // by default the search index includes the current job that is being run\r\n  // so it cannot recursively trigger itself again.\r\n  // if the job is a watch() callback, the search will start with a +1 index to\r\n  // allow it recursively trigger itself - it is the user's responsibility to\r\n  // ensure it doesn't end up in an infinite loop.\r\n  if (\r\n    (!queue.length ||\r\n      !queue.includes(\r\n        job,\r\n        isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex\r\n      )) &&\r\n    job !== currentPreFlushParentJob\r\n  ) {\r\n    if (job.id == null) {\r\n      queue.push(job)\r\n    } else {\r\n      queue.splice(findInsertionIndex(job.id), 0, job)\r\n    }\r\n    queueFlush()\r\n  }\r\n}\r\n\r\nfunction queueFlush() {\r\n  if (!isFlushing && !isFlushPending) {\r\n    isFlushPending = true\r\n    currentFlushPromise = resolvedPromise.then(flushJobs)\r\n  }\r\n}\r\n\r\nexport function invalidateJob(job: SchedulerJob) {\r\n  const i = queue.indexOf(job)\r\n  if (i > flushIndex) {\r\n    queue.splice(i, 1)\r\n  }\r\n}\r\n\r\nfunction queueCb(\r\n  cb: SchedulerJobs,\r\n  activeQueue: SchedulerJob[] | null,\r\n  pendingQueue: SchedulerJob[],\r\n  index: number\r\n) {\r\n  if (!isArray(cb)) {\r\n    if (\r\n      !activeQueue ||\r\n      !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)\r\n    ) {\r\n      pendingQueue.push(cb)\r\n    }\r\n  } else {\r\n    // if cb is an array, it is a component lifecycle hook which can only be\r\n    // triggered by a job, which is already deduped in the main queue, so\r\n    // we can skip duplicate check here to improve perf\r\n    pendingQueue.push(...cb)\r\n  }\r\n  queueFlush()\r\n}\r\n\r\nexport function queuePreFlushCb(cb: SchedulerJob) {\r\n  queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex)\r\n}\r\n\r\nexport function queuePostFlushCb(cb: SchedulerJobs) {\r\n  queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex)\r\n}\r\n\r\nexport function flushPreFlushCbs(\r\n  seen?: CountMap,\r\n  parentJob: SchedulerJob | null = null\r\n) {\r\n  if (pendingPreFlushCbs.length) {\r\n    currentPreFlushParentJob = parentJob\r\n    activePreFlushCbs = [...new Set(pendingPreFlushCbs)]\r\n    pendingPreFlushCbs.length = 0\r\n    if (__DEV__) {\r\n      seen = seen || new Map()\r\n    }\r\n    for (\r\n      preFlushIndex = 0;\r\n      preFlushIndex < activePreFlushCbs.length;\r\n      preFlushIndex++\r\n    ) {\r\n      if (\r\n        __DEV__ &&\r\n        checkRecursiveUpdates(seen!, activePreFlushCbs[preFlushIndex])\r\n      ) {\r\n        continue\r\n      }\r\n      activePreFlushCbs[preFlushIndex]()\r\n    }\r\n    activePreFlushCbs = null\r\n    preFlushIndex = 0\r\n    currentPreFlushParentJob = null\r\n    // recursively flush until it drains\r\n    flushPreFlushCbs(seen, parentJob)\r\n  }\r\n}\r\n\r\nexport function flushPostFlushCbs(seen?: CountMap) {\r\n  // flush any pre cbs queued during the flush (e.g. pre watchers)\r\n  flushPreFlushCbs()\r\n  if (pendingPostFlushCbs.length) {\r\n    const deduped = [...new Set(pendingPostFlushCbs)]\r\n    pendingPostFlushCbs.length = 0\r\n\r\n    // #1947 already has active queue, nested flushPostFlushCbs call\r\n    if (activePostFlushCbs) {\r\n      activePostFlushCbs.push(...deduped)\r\n      return\r\n    }\r\n\r\n    activePostFlushCbs = deduped\r\n    if (__DEV__) {\r\n      seen = seen || new Map()\r\n    }\r\n\r\n    activePostFlushCbs.sort((a, b) => getId(a) - getId(b))\r\n\r\n    for (\r\n      postFlushIndex = 0;\r\n      postFlushIndex < activePostFlushCbs.length;\r\n      postFlushIndex++\r\n    ) {\r\n      if (\r\n        __DEV__ &&\r\n        checkRecursiveUpdates(seen!, activePostFlushCbs[postFlushIndex])\r\n      ) {\r\n        continue\r\n      }\r\n      activePostFlushCbs[postFlushIndex]()\r\n    }\r\n    activePostFlushCbs = null\r\n    postFlushIndex = 0\r\n  }\r\n}\r\n\r\nconst getId = (job: SchedulerJob): number =>\r\n  job.id == null ? Infinity : job.id\r\n\r\nfunction flushJobs(seen?: CountMap) {\r\n  isFlushPending = false\r\n  isFlushing = true\r\n  if (__DEV__) {\r\n    seen = seen || new Map()\r\n  }\r\n\r\n  flushPreFlushCbs(seen)\r\n\r\n  // Sort queue before flush.\r\n  // This ensures that:\r\n  // 1. Components are updated from parent to child. (because parent is always\r\n  //    created before the child so its render effect will have smaller\r\n  //    priority number)\r\n  // 2. If a component is unmounted during a parent component's update,\r\n  //    its update can be skipped.\r\n  queue.sort((a, b) => getId(a) - getId(b))\r\n\r\n  // conditional usage of checkRecursiveUpdate must be determined out of\r\n  // try ... catch block since Rollup by default de-optimizes treeshaking\r\n  // inside try-catch. This can leave all warning code unshaked. Although\r\n  // they would get eventually shaken by a minifier like terser, some minifiers\r\n  // would fail to do that (e.g. https://github.com/evanw/esbuild/issues/1610)\r\n  const check = __DEV__\r\n    ? (job: SchedulerJob) => checkRecursiveUpdates(seen!, job)\r\n    : NOOP\r\n\r\n  try {\r\n    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n      const job = queue[flushIndex]\r\n      if (job && job.active !== false) {\r\n        if (__DEV__ && check(job)) {\r\n          continue\r\n        }\r\n        // console.log(`running:`, job.id)\r\n        callWithErrorHandling(job, null, ErrorCodes.SCHEDULER)\r\n      }\r\n    }\r\n  } finally {\r\n    flushIndex = 0\r\n    queue.length = 0\r\n\r\n    flushPostFlushCbs(seen)\r\n\r\n    isFlushing = false\r\n    currentFlushPromise = null\r\n    // some postFlushCb queued jobs!\r\n    // keep flushing until it drains.\r\n    if (\r\n      queue.length ||\r\n      pendingPreFlushCbs.length ||\r\n      pendingPostFlushCbs.length\r\n    ) {\r\n      flushJobs(seen)\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkRecursiveUpdates(seen: CountMap, fn: SchedulerJob) {\r\n  if (!seen.has(fn)) {\r\n    seen.set(fn, 1)\r\n  } else {\r\n    const count = seen.get(fn)!\r\n    if (count > RECURSION_LIMIT) {\r\n      const instance = fn.ownerInstance\r\n      const componentName = instance && getComponentName(instance.type)\r\n      warn(\r\n        `Maximum recursive updates exceeded${\r\n          componentName ? ` in component <${componentName}>` : ``\r\n        }. ` +\r\n          `This means you have a reactive effect that is mutating its own ` +\r\n          `dependencies and thus recursively triggering itself. Possible sources ` +\r\n          `include component template, render function, updated hook or ` +\r\n          `watcher source function.`\r\n      )\r\n      return true\r\n    } else {\r\n      seen.set(fn, count + 1)\r\n    }\r\n  }\r\n}\r\n","/* eslint-disable no-restricted-globals */\r\nimport { App } from './apiCreateApp'\r\nimport { Fragment, Text, Comment, Static } from './vnode'\r\nimport { ComponentInternalInstance } from './component'\r\n\r\ninterface AppRecord {\r\n  id: number\r\n  app: App\r\n  version: string\r\n  types: Record<string, string | Symbol>\r\n}\r\n\r\nconst enum DevtoolsHooks {\r\n  APP_INIT = 'app:init',\r\n  APP_UNMOUNT = 'app:unmount',\r\n  COMPONENT_UPDATED = 'component:updated',\r\n  COMPONENT_ADDED = 'component:added',\r\n  COMPONENT_REMOVED = 'component:removed',\r\n  COMPONENT_EMIT = 'component:emit',\r\n  PERFORMANCE_START = 'perf:start',\r\n  PERFORMANCE_END = 'perf:end'\r\n}\r\n\r\ninterface DevtoolsHook {\r\n  enabled?: boolean\r\n  emit: (event: string, ...payload: any[]) => void\r\n  on: (event: string, handler: Function) => void\r\n  once: (event: string, handler: Function) => void\r\n  off: (event: string, handler: Function) => void\r\n  appRecords: AppRecord[]\r\n}\r\n\r\nexport let devtools: DevtoolsHook\r\n\r\nlet buffer: { event: string; args: any[] }[] = []\r\n\r\nlet devtoolsNotInstalled = false\r\n\r\nfunction emit(event: string, ...args: any[]) {\r\n  if (devtools) {\r\n    devtools.emit(event, ...args)\r\n  } else if (!devtoolsNotInstalled) {\r\n    buffer.push({ event, args })\r\n  }\r\n}\r\n\r\nexport function setDevtoolsHook(hook: DevtoolsHook, target: any) {\r\n  devtools = hook\r\n  if (devtools) {\r\n    devtools.enabled = true\r\n    buffer.forEach(({ event, args }) => devtools.emit(event, ...args))\r\n    buffer = []\r\n  } else if (\r\n    // handle late devtools injection - only do this if we are in an actual\r\n    // browser environment to avoid the timer handle stalling test runner exit\r\n    // (#4815)\r\n    typeof window !== 'undefined' &&\r\n    // some envs mock window but not fully\r\n    window.HTMLElement &&\r\n    // also exclude jsdom\r\n    !window.navigator?.userAgent?.includes('jsdom')\r\n  ) {\r\n    const replay = (target.__VUE_DEVTOOLS_HOOK_REPLAY__ =\r\n      target.__VUE_DEVTOOLS_HOOK_REPLAY__ || [])\r\n    replay.push((newHook: DevtoolsHook) => {\r\n      setDevtoolsHook(newHook, target)\r\n    })\r\n    // clear buffer after 3s - the user probably doesn't have devtools installed\r\n    // at all, and keeping the buffer will cause memory leaks (#4738)\r\n    setTimeout(() => {\r\n      if (!devtools) {\r\n        target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null\r\n        devtoolsNotInstalled = true\r\n        buffer = []\r\n      }\r\n    }, 3000)\r\n  } else {\r\n    // non-browser env, assume not installed\r\n    devtoolsNotInstalled = true\r\n    buffer = []\r\n  }\r\n}\r\n\r\nexport function devtoolsInitApp(app: App, version: string) {\r\n  emit(DevtoolsHooks.APP_INIT, app, version, {\r\n    Fragment,\r\n    Text,\r\n    Comment,\r\n    Static\r\n  })\r\n}\r\n\r\nexport function devtoolsUnmountApp(app: App) {\r\n  emit(DevtoolsHooks.APP_UNMOUNT, app)\r\n}\r\n\r\nexport const devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\r\n  DevtoolsHooks.COMPONENT_ADDED\r\n)\r\n\r\nexport const devtoolsComponentUpdated =\r\n  /*#__PURE__*/ createDevtoolsComponentHook(DevtoolsHooks.COMPONENT_UPDATED)\r\n\r\nexport const devtoolsComponentRemoved =\r\n  /*#__PURE__*/ createDevtoolsComponentHook(DevtoolsHooks.COMPONENT_REMOVED)\r\n\r\nfunction createDevtoolsComponentHook(hook: DevtoolsHooks) {\r\n  return (component: ComponentInternalInstance) => {\r\n    emit(\r\n      hook,\r\n      component.appContext.app,\r\n      component.uid,\r\n      component.parent ? component.parent.uid : undefined,\r\n      component\r\n    )\r\n  }\r\n}\r\n\r\nexport const devtoolsPerfStart = /*#__PURE__*/ createDevtoolsPerformanceHook(\r\n  DevtoolsHooks.PERFORMANCE_START\r\n)\r\n\r\nexport const devtoolsPerfEnd = /*#__PURE__*/ createDevtoolsPerformanceHook(\r\n  DevtoolsHooks.PERFORMANCE_END\r\n)\r\n\r\nfunction createDevtoolsPerformanceHook(hook: DevtoolsHooks) {\r\n  return (component: ComponentInternalInstance, type: string, time: number) => {\r\n    emit(hook, component.appContext.app, component.uid, component, type, time)\r\n  }\r\n}\r\n\r\nexport function devtoolsComponentEmit(\r\n  component: ComponentInternalInstance,\r\n  event: string,\r\n  params: any[]\r\n) {\r\n  emit(\r\n    DevtoolsHooks.COMPONENT_EMIT,\r\n    component.appContext.app,\r\n    component,\r\n    event,\r\n    params\r\n  )\r\n}\r\n","import { extend, hasOwn, isArray, isFunction } from '@vue/shared'\r\nimport {\r\n  Component,\r\n  ComponentInternalInstance,\r\n  ComponentOptions,\r\n  formatComponentName,\r\n  getComponentName,\r\n  getCurrentInstance,\r\n  isRuntimeOnly\r\n} from '../component'\r\nimport { warn } from '../warning'\r\n\r\nexport const enum DeprecationTypes {\r\n  GLOBAL_MOUNT = 'GLOBAL_MOUNT',\r\n  GLOBAL_MOUNT_CONTAINER = 'GLOBAL_MOUNT_CONTAINER',\r\n  GLOBAL_EXTEND = 'GLOBAL_EXTEND',\r\n  GLOBAL_PROTOTYPE = 'GLOBAL_PROTOTYPE',\r\n  GLOBAL_SET = 'GLOBAL_SET',\r\n  GLOBAL_DELETE = 'GLOBAL_DELETE',\r\n  GLOBAL_OBSERVABLE = 'GLOBAL_OBSERVABLE',\r\n  GLOBAL_PRIVATE_UTIL = 'GLOBAL_PRIVATE_UTIL',\r\n\r\n  CONFIG_SILENT = 'CONFIG_SILENT',\r\n  CONFIG_DEVTOOLS = 'CONFIG_DEVTOOLS',\r\n  CONFIG_KEY_CODES = 'CONFIG_KEY_CODES',\r\n  CONFIG_PRODUCTION_TIP = 'CONFIG_PRODUCTION_TIP',\r\n  CONFIG_IGNORED_ELEMENTS = 'CONFIG_IGNORED_ELEMENTS',\r\n  CONFIG_WHITESPACE = 'CONFIG_WHITESPACE',\r\n  CONFIG_OPTION_MERGE_STRATS = 'CONFIG_OPTION_MERGE_STRATS',\r\n\r\n  INSTANCE_SET = 'INSTANCE_SET',\r\n  INSTANCE_DELETE = 'INSTANCE_DELETE',\r\n  INSTANCE_DESTROY = 'INSTANCE_DESTROY',\r\n  INSTANCE_EVENT_EMITTER = 'INSTANCE_EVENT_EMITTER',\r\n  INSTANCE_EVENT_HOOKS = 'INSTANCE_EVENT_HOOKS',\r\n  INSTANCE_CHILDREN = 'INSTANCE_CHILDREN',\r\n  INSTANCE_LISTENERS = 'INSTANCE_LISTENERS',\r\n  INSTANCE_SCOPED_SLOTS = 'INSTANCE_SCOPED_SLOTS',\r\n  INSTANCE_ATTRS_CLASS_STYLE = 'INSTANCE_ATTRS_CLASS_STYLE',\r\n\r\n  OPTIONS_DATA_FN = 'OPTIONS_DATA_FN',\r\n  OPTIONS_DATA_MERGE = 'OPTIONS_DATA_MERGE',\r\n  OPTIONS_BEFORE_DESTROY = 'OPTIONS_BEFORE_DESTROY',\r\n  OPTIONS_DESTROYED = 'OPTIONS_DESTROYED',\r\n\r\n  WATCH_ARRAY = 'WATCH_ARRAY',\r\n  PROPS_DEFAULT_THIS = 'PROPS_DEFAULT_THIS',\r\n\r\n  V_ON_KEYCODE_MODIFIER = 'V_ON_KEYCODE_MODIFIER',\r\n  CUSTOM_DIR = 'CUSTOM_DIR',\r\n\r\n  ATTR_FALSE_VALUE = 'ATTR_FALSE_VALUE',\r\n  ATTR_ENUMERATED_COERCION = 'ATTR_ENUMERATED_COERCION',\r\n\r\n  TRANSITION_CLASSES = 'TRANSITION_CLASSES',\r\n  TRANSITION_GROUP_ROOT = 'TRANSITION_GROUP_ROOT',\r\n\r\n  COMPONENT_ASYNC = 'COMPONENT_ASYNC',\r\n  COMPONENT_FUNCTIONAL = 'COMPONENT_FUNCTIONAL',\r\n  COMPONENT_V_MODEL = 'COMPONENT_V_MODEL',\r\n\r\n  RENDER_FUNCTION = 'RENDER_FUNCTION',\r\n\r\n  FILTERS = 'FILTERS',\r\n\r\n  PRIVATE_APIS = 'PRIVATE_APIS'\r\n}\r\n\r\ntype DeprecationData = {\r\n  message: string | ((...args: any[]) => string)\r\n  link?: string\r\n}\r\n\r\nexport const deprecationData: Record<DeprecationTypes, DeprecationData> = {\r\n  [DeprecationTypes.GLOBAL_MOUNT]: {\r\n    message:\r\n      `The global app bootstrapping API has changed: vm.$mount() and the \"el\" ` +\r\n      `option have been removed. Use createApp(RootComponent).mount() instead.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/global-api.html#mounting-app-instance`\r\n  },\r\n\r\n  [DeprecationTypes.GLOBAL_MOUNT_CONTAINER]: {\r\n    message:\r\n      `Vue detected directives on the mount container. ` +\r\n      `In Vue 3, the container is no longer considered part of the template ` +\r\n      `and will not be processed/replaced.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/mount-changes.html`\r\n  },\r\n\r\n  [DeprecationTypes.GLOBAL_EXTEND]: {\r\n    message:\r\n      `Vue.extend() has been removed in Vue 3. ` +\r\n      `Use defineComponent() instead.`,\r\n    link: `https://vuejs.org/api/general.html#definecomponent`\r\n  },\r\n\r\n  [DeprecationTypes.GLOBAL_PROTOTYPE]: {\r\n    message:\r\n      `Vue.prototype is no longer available in Vue 3. ` +\r\n      `Use app.config.globalProperties instead.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/global-api.html#vue-prototype-replaced-by-config-globalproperties`\r\n  },\r\n\r\n  [DeprecationTypes.GLOBAL_SET]: {\r\n    message:\r\n      `Vue.set() has been removed as it is no longer needed in Vue 3. ` +\r\n      `Simply use native JavaScript mutations.`\r\n  },\r\n\r\n  [DeprecationTypes.GLOBAL_DELETE]: {\r\n    message:\r\n      `Vue.delete() has been removed as it is no longer needed in Vue 3. ` +\r\n      `Simply use native JavaScript mutations.`\r\n  },\r\n\r\n  [DeprecationTypes.GLOBAL_OBSERVABLE]: {\r\n    message:\r\n      `Vue.observable() has been removed. ` +\r\n      `Use \\`import { reactive } from \"vue\"\\` from Composition API instead.`,\r\n    link: `https://vuejs.org/api/reactivity-core.html#reactive`\r\n  },\r\n\r\n  [DeprecationTypes.GLOBAL_PRIVATE_UTIL]: {\r\n    message:\r\n      `Vue.util has been removed. Please refactor to avoid its usage ` +\r\n      `since it was an internal API even in Vue 2.`\r\n  },\r\n\r\n  [DeprecationTypes.CONFIG_SILENT]: {\r\n    message:\r\n      `config.silent has been removed because it is not good practice to ` +\r\n      `intentionally suppress warnings. You can use your browser console's ` +\r\n      `filter features to focus on relevant messages.`\r\n  },\r\n\r\n  [DeprecationTypes.CONFIG_DEVTOOLS]: {\r\n    message:\r\n      `config.devtools has been removed. To enable devtools for ` +\r\n      `production, configure the __VUE_PROD_DEVTOOLS__ compile-time flag.`,\r\n    link: `https://github.com/vuejs/core/tree/main/packages/vue#bundler-build-feature-flags`\r\n  },\r\n\r\n  [DeprecationTypes.CONFIG_KEY_CODES]: {\r\n    message:\r\n      `config.keyCodes has been removed. ` +\r\n      `In Vue 3, you can directly use the kebab-case key names as v-on modifiers.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/keycode-modifiers.html`\r\n  },\r\n\r\n  [DeprecationTypes.CONFIG_PRODUCTION_TIP]: {\r\n    message: `config.productionTip has been removed.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/global-api.html#config-productiontip-removed`\r\n  },\r\n\r\n  [DeprecationTypes.CONFIG_IGNORED_ELEMENTS]: {\r\n    message: () => {\r\n      let msg = `config.ignoredElements has been removed.`\r\n      if (isRuntimeOnly()) {\r\n        msg += ` Pass the \"isCustomElement\" option to @vue/compiler-dom instead.`\r\n      } else {\r\n        msg += ` Use config.isCustomElement instead.`\r\n      }\r\n      return msg\r\n    },\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/global-api.html#config-ignoredelements-is-now-config-iscustomelement`\r\n  },\r\n\r\n  [DeprecationTypes.CONFIG_WHITESPACE]: {\r\n    // this warning is only relevant in the full build when using runtime\r\n    // compilation, so it's put in the runtime compatConfig list.\r\n    message:\r\n      `Vue 3 compiler's whitespace option will default to \"condense\" instead of ` +\r\n      `\"preserve\". To suppress this warning, provide an explicit value for ` +\r\n      `\\`config.compilerOptions.whitespace\\`.`\r\n  },\r\n\r\n  [DeprecationTypes.CONFIG_OPTION_MERGE_STRATS]: {\r\n    message:\r\n      `config.optionMergeStrategies no longer exposes internal strategies. ` +\r\n      `Use custom merge functions instead.`\r\n  },\r\n\r\n  [DeprecationTypes.INSTANCE_SET]: {\r\n    message:\r\n      `vm.$set() has been removed as it is no longer needed in Vue 3. ` +\r\n      `Simply use native JavaScript mutations.`\r\n  },\r\n\r\n  [DeprecationTypes.INSTANCE_DELETE]: {\r\n    message:\r\n      `vm.$delete() has been removed as it is no longer needed in Vue 3. ` +\r\n      `Simply use native JavaScript mutations.`\r\n  },\r\n\r\n  [DeprecationTypes.INSTANCE_DESTROY]: {\r\n    message: `vm.$destroy() has been removed. Use app.unmount() instead.`,\r\n    link: `https://vuejs.org/api/application.html#app-unmount`\r\n  },\r\n\r\n  [DeprecationTypes.INSTANCE_EVENT_EMITTER]: {\r\n    message:\r\n      `vm.$on/$once/$off() have been removed. ` +\r\n      `Use an external event emitter library instead.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/events-api.html`\r\n  },\r\n\r\n  [DeprecationTypes.INSTANCE_EVENT_HOOKS]: {\r\n    message: event =>\r\n      `\"${event}\" lifecycle events are no longer supported. From templates, ` +\r\n      `use the \"vnode\" prefix instead of \"hook:\". For example, @${event} ` +\r\n      `should be changed to @vnode-${event.slice(5)}. ` +\r\n      `From JavaScript, use Composition API to dynamically register lifecycle ` +\r\n      `hooks.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/vnode-lifecycle-events.html`\r\n  },\r\n\r\n  [DeprecationTypes.INSTANCE_CHILDREN]: {\r\n    message:\r\n      `vm.$children has been removed. Consider refactoring your logic ` +\r\n      `to avoid relying on direct access to child components.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/children.html`\r\n  },\r\n\r\n  [DeprecationTypes.INSTANCE_LISTENERS]: {\r\n    message:\r\n      `vm.$listeners has been removed. In Vue 3, parent v-on listeners are ` +\r\n      `included in vm.$attrs and it is no longer necessary to separately use ` +\r\n      `v-on=\"$listeners\" if you are already using v-bind=\"$attrs\". ` +\r\n      `(Note: the Vue 3 behavior only applies if this compat config is disabled)`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/listeners-removed.html`\r\n  },\r\n\r\n  [DeprecationTypes.INSTANCE_SCOPED_SLOTS]: {\r\n    message: `vm.$scopedSlots has been removed. Use vm.$slots instead.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/slots-unification.html`\r\n  },\r\n\r\n  [DeprecationTypes.INSTANCE_ATTRS_CLASS_STYLE]: {\r\n    message: componentName =>\r\n      `Component <${\r\n        componentName || 'Anonymous'\r\n      }> has \\`inheritAttrs: false\\` but is ` +\r\n      `relying on class/style fallthrough from parent. In Vue 3, class/style ` +\r\n      `are now included in $attrs and will no longer fallthrough when ` +\r\n      `inheritAttrs is false. If you are already using v-bind=\"$attrs\" on ` +\r\n      `component root it should render the same end result. ` +\r\n      `If you are binding $attrs to a non-root element and expecting ` +\r\n      `class/style to fallthrough on root, you will need to now manually bind ` +\r\n      `them on root via :class=\"$attrs.class\".`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/attrs-includes-class-style.html`\r\n  },\r\n\r\n  [DeprecationTypes.OPTIONS_DATA_FN]: {\r\n    message:\r\n      `The \"data\" option can no longer be a plain object. ` +\r\n      `Always use a function.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/data-option.html`\r\n  },\r\n\r\n  [DeprecationTypes.OPTIONS_DATA_MERGE]: {\r\n    message: (key: string) =>\r\n      `Detected conflicting key \"${key}\" when merging data option values. ` +\r\n      `In Vue 3, data keys are merged shallowly and will override one another.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/data-option.html#mixin-merge-behavior-change`\r\n  },\r\n\r\n  [DeprecationTypes.OPTIONS_BEFORE_DESTROY]: {\r\n    message: `\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`\r\n  },\r\n\r\n  [DeprecationTypes.OPTIONS_DESTROYED]: {\r\n    message: `\\`destroyed\\` has been renamed to \\`unmounted\\`.`\r\n  },\r\n\r\n  [DeprecationTypes.WATCH_ARRAY]: {\r\n    message:\r\n      `\"watch\" option or vm.$watch on an array value will no longer ` +\r\n      `trigger on array mutation unless the \"deep\" option is specified. ` +\r\n      `If current usage is intended, you can disable the compat behavior and ` +\r\n      `suppress this warning with:` +\r\n      `\\n\\n  configureCompat({ ${DeprecationTypes.WATCH_ARRAY}: false })\\n`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/watch.html`\r\n  },\r\n\r\n  [DeprecationTypes.PROPS_DEFAULT_THIS]: {\r\n    message: (key: string) =>\r\n      `props default value function no longer has access to \"this\". The compat ` +\r\n      `build only offers access to this.$options.` +\r\n      `(found in prop \"${key}\")`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/props-default-this.html`\r\n  },\r\n\r\n  [DeprecationTypes.CUSTOM_DIR]: {\r\n    message: (legacyHook: string, newHook: string) =>\r\n      `Custom directive hook \"${legacyHook}\" has been removed. ` +\r\n      `Use \"${newHook}\" instead.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/custom-directives.html`\r\n  },\r\n\r\n  [DeprecationTypes.V_ON_KEYCODE_MODIFIER]: {\r\n    message:\r\n      `Using keyCode as v-on modifier is no longer supported. ` +\r\n      `Use kebab-case key name modifiers instead.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/keycode-modifiers.html`\r\n  },\r\n\r\n  [DeprecationTypes.ATTR_FALSE_VALUE]: {\r\n    message: (name: string) =>\r\n      `Attribute \"${name}\" with v-bind value \\`false\\` will render ` +\r\n      `${name}=\"false\" instead of removing it in Vue 3. To remove the attribute, ` +\r\n      `use \\`null\\` or \\`undefined\\` instead. If the usage is intended, ` +\r\n      `you can disable the compat behavior and suppress this warning with:` +\r\n      `\\n\\n  configureCompat({ ${DeprecationTypes.ATTR_FALSE_VALUE}: false })\\n`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html`\r\n  },\r\n\r\n  [DeprecationTypes.ATTR_ENUMERATED_COERCION]: {\r\n    message: (name: string, value: any, coerced: string) =>\r\n      `Enumerated attribute \"${name}\" with v-bind value \\`${value}\\` will ` +\r\n      `${\r\n        value === null ? `be removed` : `render the value as-is`\r\n      } instead of coercing the value to \"${coerced}\" in Vue 3. ` +\r\n      `Always use explicit \"true\" or \"false\" values for enumerated attributes. ` +\r\n      `If the usage is intended, ` +\r\n      `you can disable the compat behavior and suppress this warning with:` +\r\n      `\\n\\n  configureCompat({ ${DeprecationTypes.ATTR_ENUMERATED_COERCION}: false })\\n`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html`\r\n  },\r\n\r\n  [DeprecationTypes.TRANSITION_CLASSES]: {\r\n    message: `` // this feature cannot be runtime-detected\r\n  },\r\n\r\n  [DeprecationTypes.TRANSITION_GROUP_ROOT]: {\r\n    message:\r\n      `<TransitionGroup> no longer renders a root <span> element by ` +\r\n      `default if no \"tag\" prop is specified. If you do not rely on the span ` +\r\n      `for styling, you can disable the compat behavior and suppress this ` +\r\n      `warning with:` +\r\n      `\\n\\n  configureCompat({ ${DeprecationTypes.TRANSITION_GROUP_ROOT}: false })\\n`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/transition-group.html`\r\n  },\r\n\r\n  [DeprecationTypes.COMPONENT_ASYNC]: {\r\n    message: (comp: any) => {\r\n      const name = getComponentName(comp)\r\n      return (\r\n        `Async component${\r\n          name ? ` <${name}>` : `s`\r\n        } should be explicitly created via \\`defineAsyncComponent()\\` ` +\r\n        `in Vue 3. Plain functions will be treated as functional components in ` +\r\n        `non-compat build. If you have already migrated all async component ` +\r\n        `usage and intend to use plain functions for functional components, ` +\r\n        `you can disable the compat behavior and suppress this ` +\r\n        `warning with:` +\r\n        `\\n\\n  configureCompat({ ${DeprecationTypes.COMPONENT_ASYNC}: false })\\n`\r\n      )\r\n    },\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/async-components.html`\r\n  },\r\n\r\n  [DeprecationTypes.COMPONENT_FUNCTIONAL]: {\r\n    message: (comp: any) => {\r\n      const name = getComponentName(comp)\r\n      return (\r\n        `Functional component${\r\n          name ? ` <${name}>` : `s`\r\n        } should be defined as a plain function in Vue 3. The \"functional\" ` +\r\n        `option has been removed. NOTE: Before migrating to use plain ` +\r\n        `functions for functional components, first make sure that all async ` +\r\n        `components usage have been migrated and its compat behavior has ` +\r\n        `been disabled.`\r\n      )\r\n    },\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/functional-components.html`\r\n  },\r\n\r\n  [DeprecationTypes.COMPONENT_V_MODEL]: {\r\n    message: (comp: ComponentOptions) => {\r\n      const configMsg =\r\n        `opt-in to ` +\r\n        `Vue 3 behavior on a per-component basis with \\`compatConfig: { ${DeprecationTypes.COMPONENT_V_MODEL}: false }\\`.`\r\n      if (\r\n        comp.props &&\r\n        (isArray(comp.props)\r\n          ? comp.props.includes('modelValue')\r\n          : hasOwn(comp.props, 'modelValue'))\r\n      ) {\r\n        return (\r\n          `Component declares \"modelValue\" prop, which is Vue 3 usage, but ` +\r\n          `is running under Vue 2 compat v-model behavior. You can ${configMsg}`\r\n        )\r\n      }\r\n      return (\r\n        `v-model usage on component has changed in Vue 3. Component that expects ` +\r\n        `to work with v-model should now use the \"modelValue\" prop and emit the ` +\r\n        `\"update:modelValue\" event. You can update the usage and then ${configMsg}`\r\n      )\r\n    },\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\r\n  },\r\n\r\n  [DeprecationTypes.RENDER_FUNCTION]: {\r\n    message:\r\n      `Vue 3's render function API has changed. ` +\r\n      `You can opt-in to the new API with:` +\r\n      `\\n\\n  configureCompat({ ${DeprecationTypes.RENDER_FUNCTION}: false })\\n` +\r\n      `\\n  (This can also be done per-component via the \"compatConfig\" option.)`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/render-function-api.html`\r\n  },\r\n\r\n  [DeprecationTypes.FILTERS]: {\r\n    message:\r\n      `filters have been removed in Vue 3. ` +\r\n      `The \"|\" symbol will be treated as native JavaScript bitwise OR operator. ` +\r\n      `Use method calls or computed properties instead.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\r\n  },\r\n\r\n  [DeprecationTypes.PRIVATE_APIS]: {\r\n    message: name =>\r\n      `\"${name}\" is a Vue 2 private API that no longer exists in Vue 3. ` +\r\n      `If you are seeing this warning only due to a dependency, you can ` +\r\n      `suppress this warning via { PRIVATE_APIS: 'suppress-warning' }.`\r\n  }\r\n}\r\n\r\nconst instanceWarned: Record<string, true> = Object.create(null)\r\nconst warnCount: Record<string, number> = Object.create(null)\r\n\r\n// test only\r\nlet warningEnabled = true\r\n\r\nexport function toggleDeprecationWarning(flag: boolean) {\r\n  warningEnabled = flag\r\n}\r\n\r\nexport function warnDeprecation(\r\n  key: DeprecationTypes,\r\n  instance: ComponentInternalInstance | null,\r\n  ...args: any[]\r\n) {\r\n  if (!__DEV__) {\r\n    return\r\n  }\r\n  if (__TEST__ && !warningEnabled) {\r\n    return\r\n  }\r\n\r\n  instance = instance || getCurrentInstance()\r\n\r\n  // check user config\r\n  const config = getCompatConfigForKey(key, instance)\r\n  if (config === 'suppress-warning') {\r\n    return\r\n  }\r\n\r\n  const dupKey = key + args.join('')\r\n  let compId: string | number | null =\r\n    instance && formatComponentName(instance, instance.type)\r\n  if (compId === 'Anonymous' && instance) {\r\n    compId = instance.uid\r\n  }\r\n\r\n  // skip if the same warning is emitted for the same component type\r\n  const componentDupKey = dupKey + compId\r\n  if (!__TEST__ && componentDupKey in instanceWarned) {\r\n    return\r\n  }\r\n  instanceWarned[componentDupKey] = true\r\n\r\n  // same warning, but different component. skip the long message and just\r\n  // log the key and count.\r\n  if (!__TEST__ && dupKey in warnCount) {\r\n    warn(`(deprecation ${key}) (${++warnCount[dupKey] + 1})`)\r\n    return\r\n  }\r\n\r\n  warnCount[dupKey] = 0\r\n\r\n  const { message, link } = deprecationData[key]\r\n  warn(\r\n    `(deprecation ${key}) ${\r\n      typeof message === 'function' ? message(...args) : message\r\n    }${link ? `\\n  Details: ${link}` : ``}`\r\n  )\r\n  if (!isCompatEnabled(key, instance, true)) {\r\n    console.error(\r\n      `^ The above deprecation's compat behavior is disabled and will likely ` +\r\n        `lead to runtime errors.`\r\n    )\r\n  }\r\n}\r\n\r\nexport type CompatConfig = Partial<\r\n  Record<DeprecationTypes, boolean | 'suppress-warning'>\r\n> & {\r\n  MODE?: 2 | 3 | ((comp: Component | null) => 2 | 3)\r\n}\r\n\r\nexport const globalCompatConfig: CompatConfig = {\r\n  MODE: 2\r\n}\r\n\r\nexport function configureCompat(config: CompatConfig) {\r\n  if (__DEV__) {\r\n    validateCompatConfig(config)\r\n  }\r\n  extend(globalCompatConfig, config)\r\n}\r\n\r\nconst seenConfigObjects = /*#__PURE__*/ new WeakSet<CompatConfig>()\r\nconst warnedInvalidKeys: Record<string, boolean> = {}\r\n\r\n// dev only\r\nexport function validateCompatConfig(\r\n  config: CompatConfig,\r\n  instance?: ComponentInternalInstance\r\n) {\r\n  if (seenConfigObjects.has(config)) {\r\n    return\r\n  }\r\n  seenConfigObjects.add(config)\r\n\r\n  for (const key of Object.keys(config)) {\r\n    if (\r\n      key !== 'MODE' &&\r\n      !(key in deprecationData) &&\r\n      !(key in warnedInvalidKeys)\r\n    ) {\r\n      if (key.startsWith('COMPILER_')) {\r\n        if (isRuntimeOnly()) {\r\n          warn(\r\n            `Deprecation config \"${key}\" is compiler-specific and you are ` +\r\n              `running a runtime-only build of Vue. This deprecation should be ` +\r\n              `configured via compiler options in your build setup instead.\\n` +\r\n              `Details: https://v3-migration.vuejs.org/breaking-changes/migration-build.html`\r\n          )\r\n        }\r\n      } else {\r\n        warn(`Invalid deprecation config \"${key}\".`)\r\n      }\r\n      warnedInvalidKeys[key] = true\r\n    }\r\n  }\r\n\r\n  if (instance && config[DeprecationTypes.OPTIONS_DATA_MERGE] != null) {\r\n    warn(\r\n      `Deprecation config \"${DeprecationTypes.OPTIONS_DATA_MERGE}\" can only be configured globally.`\r\n    )\r\n  }\r\n}\r\n\r\nexport function getCompatConfigForKey(\r\n  key: DeprecationTypes | 'MODE',\r\n  instance: ComponentInternalInstance | null\r\n) {\r\n  const instanceConfig =\r\n    instance && (instance.type as ComponentOptions).compatConfig\r\n  if (instanceConfig && key in instanceConfig) {\r\n    return instanceConfig[key]\r\n  }\r\n  return globalCompatConfig[key]\r\n}\r\n\r\nexport function isCompatEnabled(\r\n  key: DeprecationTypes,\r\n  instance: ComponentInternalInstance | null,\r\n  enableForBuiltIn = false\r\n): boolean {\r\n  // skip compat for built-in components\r\n  if (!enableForBuiltIn && instance && instance.type.__isBuiltIn) {\r\n    return false\r\n  }\r\n\r\n  const rawMode = getCompatConfigForKey('MODE', instance) || 2\r\n  const val = getCompatConfigForKey(key, instance)\r\n\r\n  const mode = isFunction(rawMode)\r\n    ? rawMode(instance && instance.type)\r\n    : rawMode\r\n\r\n  if (mode === 2) {\r\n    return val !== false\r\n  } else {\r\n    return val === true || val === 'suppress-warning'\r\n  }\r\n}\r\n\r\n/**\r\n * Use this for features that are completely removed in non-compat build.\r\n */\r\nexport function assertCompatEnabled(\r\n  key: DeprecationTypes,\r\n  instance: ComponentInternalInstance | null,\r\n  ...args: any[]\r\n) {\r\n  if (!isCompatEnabled(key, instance)) {\r\n    throw new Error(`${key} compat has been disabled.`)\r\n  } else if (__DEV__) {\r\n    warnDeprecation(key, instance, ...args)\r\n  }\r\n}\r\n\r\n/**\r\n * Use this for features where legacy usage is still possible, but will likely\r\n * lead to runtime error if compat is disabled. (warn in all cases)\r\n */\r\nexport function softAssertCompatEnabled(\r\n  key: DeprecationTypes,\r\n  instance: ComponentInternalInstance | null,\r\n  ...args: any[]\r\n) {\r\n  if (__DEV__) {\r\n    warnDeprecation(key, instance, ...args)\r\n  }\r\n  return isCompatEnabled(key, instance)\r\n}\r\n\r\n/**\r\n * Use this for features with the same syntax but with mutually exclusive\r\n * behavior in 2 vs 3. Only warn if compat is enabled.\r\n * e.g. render function\r\n */\r\nexport function checkCompatEnabled(\r\n  key: DeprecationTypes,\r\n  instance: ComponentInternalInstance | null,\r\n  ...args: any[]\r\n) {\r\n  const enabled = isCompatEnabled(key, instance)\r\n  if (__DEV__ && enabled) {\r\n    warnDeprecation(key, instance, ...args)\r\n  }\r\n  return enabled\r\n}\r\n\r\n// run tests in v3 mode by default\r\nif (__TEST__) {\r\n  configureCompat({\r\n    MODE: 3\r\n  })\r\n}\r\n","import { isArray } from '@vue/shared'\r\nimport { ComponentInternalInstance } from '../component'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from '../errorHandling'\r\nimport { assertCompatEnabled, DeprecationTypes } from './compatConfig'\r\n\r\ninterface EventRegistry {\r\n  [event: string]: Function[] | undefined\r\n}\r\n\r\nconst eventRegistryMap = /*#__PURE__*/ new WeakMap<\r\n  ComponentInternalInstance,\r\n  EventRegistry\r\n>()\r\n\r\nexport function getRegistry(\r\n  instance: ComponentInternalInstance\r\n): EventRegistry {\r\n  let events = eventRegistryMap.get(instance)\r\n  if (!events) {\r\n    eventRegistryMap.set(instance, (events = Object.create(null)))\r\n  }\r\n  return events!\r\n}\r\n\r\nexport function on(\r\n  instance: ComponentInternalInstance,\r\n  event: string | string[],\r\n  fn: Function\r\n) {\r\n  if (isArray(event)) {\r\n    event.forEach(e => on(instance, e, fn))\r\n  } else {\r\n    if (event.startsWith('hook:')) {\r\n      assertCompatEnabled(\r\n        DeprecationTypes.INSTANCE_EVENT_HOOKS,\r\n        instance,\r\n        event\r\n      )\r\n    } else {\r\n      assertCompatEnabled(DeprecationTypes.INSTANCE_EVENT_EMITTER, instance)\r\n    }\r\n    const events = getRegistry(instance)\r\n    ;(events[event] || (events[event] = [])).push(fn)\r\n  }\r\n  return instance.proxy\r\n}\r\n\r\nexport function once(\r\n  instance: ComponentInternalInstance,\r\n  event: string,\r\n  fn: Function\r\n) {\r\n  const wrapped = (...args: any[]) => {\r\n    off(instance, event, wrapped)\r\n    fn.call(instance.proxy, ...args)\r\n  }\r\n  wrapped.fn = fn\r\n  on(instance, event, wrapped)\r\n  return instance.proxy\r\n}\r\n\r\nexport function off(\r\n  instance: ComponentInternalInstance,\r\n  event?: string | string[],\r\n  fn?: Function\r\n) {\r\n  assertCompatEnabled(DeprecationTypes.INSTANCE_EVENT_EMITTER, instance)\r\n  const vm = instance.proxy\r\n  // all\r\n  if (!event) {\r\n    eventRegistryMap.set(instance, Object.create(null))\r\n    return vm\r\n  }\r\n  // array of events\r\n  if (isArray(event)) {\r\n    event.forEach(e => off(instance, e, fn))\r\n    return vm\r\n  }\r\n  // specific event\r\n  const events = getRegistry(instance)\r\n  const cbs = events[event!]\r\n  if (!cbs) {\r\n    return vm\r\n  }\r\n  if (!fn) {\r\n    events[event!] = undefined\r\n    return vm\r\n  }\r\n  events[event!] = cbs.filter(cb => !(cb === fn || (cb as any).fn === fn))\r\n  return vm\r\n}\r\n\r\nexport function emit(\r\n  instance: ComponentInternalInstance,\r\n  event: string,\r\n  args: any[]\r\n) {\r\n  const cbs = getRegistry(instance)[event]\r\n  if (cbs) {\r\n    callWithAsyncErrorHandling(\r\n      cbs.map(cb => cb.bind(instance.proxy)),\r\n      instance,\r\n      ErrorCodes.COMPONENT_EVENT_HANDLER,\r\n      args\r\n    )\r\n  }\r\n  return instance.proxy\r\n}\r\n","import { extend, ShapeFlags } from '@vue/shared'\r\nimport { ComponentInternalInstance, ComponentOptions } from '../component'\r\nimport { callWithErrorHandling, ErrorCodes } from '../errorHandling'\r\nimport { VNode } from '../vnode'\r\nimport { popWarningContext, pushWarningContext } from '../warning'\r\nimport {\r\n  DeprecationTypes,\r\n  warnDeprecation,\r\n  isCompatEnabled\r\n} from './compatConfig'\r\n\r\nexport const compatModelEventPrefix = `onModelCompat:`\r\n\r\nconst warnedTypes = new WeakSet()\r\n\r\nexport function convertLegacyVModelProps(vnode: VNode) {\r\n  const { type, shapeFlag, props, dynamicProps } = vnode\r\n  const comp = type as ComponentOptions\r\n  if (shapeFlag & ShapeFlags.COMPONENT && props && 'modelValue' in props) {\r\n    if (\r\n      !isCompatEnabled(\r\n        DeprecationTypes.COMPONENT_V_MODEL,\r\n        // this is a special case where we want to use the vnode component's\r\n        // compat config instead of the current rendering instance (which is the\r\n        // parent of the component that exposes v-model)\r\n        { type } as any\r\n      )\r\n    ) {\r\n      return\r\n    }\r\n\r\n    if (__DEV__ && !warnedTypes.has(comp)) {\r\n      pushWarningContext(vnode)\r\n      warnDeprecation(DeprecationTypes.COMPONENT_V_MODEL, { type } as any, comp)\r\n      popWarningContext()\r\n      warnedTypes.add(comp)\r\n    }\r\n\r\n    // v3 compiled model code -> v2 compat props\r\n    // modelValue -> value\r\n    // onUpdate:modelValue -> onModelCompat:input\r\n    const model = comp.model || {}\r\n    applyModelFromMixins(model, comp.mixins)\r\n    const { prop = 'value', event = 'input' } = model\r\n    if (prop !== 'modelValue') {\r\n      props[prop] = props.modelValue\r\n      delete props.modelValue\r\n    }\r\n    // important: update dynamic props\r\n    if (dynamicProps) {\r\n      dynamicProps[dynamicProps.indexOf('modelValue')] = prop\r\n    }\r\n    props[compatModelEventPrefix + event] = props['onUpdate:modelValue']\r\n    delete props['onUpdate:modelValue']\r\n  }\r\n}\r\n\r\nfunction applyModelFromMixins(model: any, mixins?: ComponentOptions[]) {\r\n  if (mixins) {\r\n    mixins.forEach(m => {\r\n      if (m.model) extend(model, m.model)\r\n      if (m.mixins) applyModelFromMixins(model, m.mixins)\r\n    })\r\n  }\r\n}\r\n\r\nexport function compatModelEmit(\r\n  instance: ComponentInternalInstance,\r\n  event: string,\r\n  args: any[]\r\n) {\r\n  if (!isCompatEnabled(DeprecationTypes.COMPONENT_V_MODEL, instance)) {\r\n    return\r\n  }\r\n  const props = instance.vnode.props\r\n  const modelHandler = props && props[compatModelEventPrefix + event]\r\n  if (modelHandler) {\r\n    callWithErrorHandling(\r\n      modelHandler,\r\n      instance,\r\n      ErrorCodes.COMPONENT_EVENT_HANDLER,\r\n      args\r\n    )\r\n  }\r\n}\r\n","import {\r\n  camelize,\r\n  EMPTY_OBJ,\r\n  toHandlerKey,\r\n  extend,\r\n  hasOwn,\r\n  hyphenate,\r\n  isArray,\r\n  isFunction,\r\n  isOn,\r\n  toNumber,\r\n  UnionToIntersection\r\n} from '@vue/shared'\r\nimport {\r\n  ComponentInternalInstance,\r\n  ComponentOptions,\r\n  ConcreteComponent,\r\n  formatComponentName\r\n} from './component'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from './errorHandling'\r\nimport { warn } from './warning'\r\nimport { devtoolsComponentEmit } from './devtools'\r\nimport { AppContext } from './apiCreateApp'\r\nimport { emit as compatInstanceEmit } from './compat/instanceEventEmitter'\r\nimport {\r\n  compatModelEventPrefix,\r\n  compatModelEmit\r\n} from './compat/componentVModel'\r\n\r\nexport type ObjectEmitsOptions = Record<\r\n  string,\r\n  ((...args: any[]) => any) | null\r\n>\r\n\r\nexport type EmitsOptions = ObjectEmitsOptions | string[]\r\n\r\nexport type EmitsToProps<T extends EmitsOptions> = T extends string[]\r\n  ? {\r\n      [K in string & `on${Capitalize<T[number]>}`]?: (...args: any[]) => any\r\n    }\r\n  : T extends ObjectEmitsOptions\r\n  ? {\r\n      [K in string &\r\n        `on${Capitalize<string & keyof T>}`]?: K extends `on${infer C}`\r\n        ? T[Uncapitalize<C>] extends null\r\n          ? (...args: any[]) => any\r\n          : (\r\n              ...args: T[Uncapitalize<C>] extends (...args: infer P) => any\r\n                ? P\r\n                : never\r\n            ) => any\r\n        : never\r\n    }\r\n  : {}\r\n\r\nexport type EmitFn<\r\n  Options = ObjectEmitsOptions,\r\n  Event extends keyof Options = keyof Options\r\n> = Options extends Array<infer V>\r\n  ? (event: V, ...args: any[]) => void\r\n  : {} extends Options // if the emit is empty object (usually the default value for emit) should be converted to function\r\n  ? (event: string, ...args: any[]) => void\r\n  : UnionToIntersection<\r\n      {\r\n        [key in Event]: Options[key] extends (...args: infer Args) => any\r\n          ? (event: key, ...args: Args) => void\r\n          : (event: key, ...args: any[]) => void\r\n      }[Event]\r\n    >\r\n\r\nexport function emit(\r\n  instance: ComponentInternalInstance,\r\n  event: string,\r\n  ...rawArgs: any[]\r\n) {\r\n  if (instance.isUnmounted) return\r\n  const props = instance.vnode.props || EMPTY_OBJ\r\n\r\n  if (__DEV__) {\r\n    const {\r\n      emitsOptions,\r\n      propsOptions: [propsOptions]\r\n    } = instance\r\n    if (emitsOptions) {\r\n      if (\r\n        !(event in emitsOptions) &&\r\n        !(\r\n          __COMPAT__ &&\r\n          (event.startsWith('hook:') ||\r\n            event.startsWith(compatModelEventPrefix))\r\n        )\r\n      ) {\r\n        if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n          warn(\r\n            `Component emitted event \"${event}\" but it is neither declared in ` +\r\n              `the emits option nor as an \"${toHandlerKey(event)}\" prop.`\r\n          )\r\n        }\r\n      } else {\r\n        const validator = emitsOptions[event]\r\n        if (isFunction(validator)) {\r\n          const isValid = validator(...rawArgs)\r\n          if (!isValid) {\r\n            warn(\r\n              `Invalid event arguments: event validation failed for event \"${event}\".`\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let args = rawArgs\r\n  const isModelListener = event.startsWith('update:')\r\n\r\n  // for v-model update:xxx events, apply modifiers on args\r\n  const modelArg = isModelListener && event.slice(7)\r\n  if (modelArg && modelArg in props) {\r\n    const modifiersKey = `${\r\n      modelArg === 'modelValue' ? 'model' : modelArg\r\n    }Modifiers`\r\n    const { number, trim } = props[modifiersKey] || EMPTY_OBJ\r\n    if (trim) {\r\n      args = rawArgs.map(a => a.trim())\r\n    }\r\n    if (number) {\r\n      args = rawArgs.map(toNumber)\r\n    }\r\n  }\r\n\r\n  if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n    devtoolsComponentEmit(instance, event, args)\r\n  }\r\n\r\n  if (__DEV__) {\r\n    const lowerCaseEvent = event.toLowerCase()\r\n    if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n      warn(\r\n        `Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n          `${formatComponentName(\r\n            instance,\r\n            instance.type\r\n          )} but the handler is registered for \"${event}\". ` +\r\n          `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n          `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n          `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`\r\n      )\r\n    }\r\n  }\r\n\r\n  let handlerName\r\n  let handler =\r\n    props[(handlerName = toHandlerKey(event))] ||\r\n    // also try camelCase event handler (#2249)\r\n    props[(handlerName = toHandlerKey(camelize(event)))]\r\n  // for v-model update:xxx events, also trigger kebab-case equivalent\r\n  // for props passed via kebab-case\r\n  if (!handler && isModelListener) {\r\n    handler = props[(handlerName = toHandlerKey(hyphenate(event)))]\r\n  }\r\n\r\n  if (handler) {\r\n    callWithAsyncErrorHandling(\r\n      handler,\r\n      instance,\r\n      ErrorCodes.COMPONENT_EVENT_HANDLER,\r\n      args\r\n    )\r\n  }\r\n\r\n  const onceHandler = props[handlerName + `Once`]\r\n  if (onceHandler) {\r\n    if (!instance.emitted) {\r\n      instance.emitted = {} as Record<any, boolean>\r\n    } else if (instance.emitted[handlerName]) {\r\n      return\r\n    }\r\n    instance.emitted[handlerName] = true\r\n    callWithAsyncErrorHandling(\r\n      onceHandler,\r\n      instance,\r\n      ErrorCodes.COMPONENT_EVENT_HANDLER,\r\n      args\r\n    )\r\n  }\r\n\r\n  if (__COMPAT__) {\r\n    compatModelEmit(instance, event, args)\r\n    return compatInstanceEmit(instance, event, args)\r\n  }\r\n}\r\n\r\nexport function normalizeEmitsOptions(\r\n  comp: ConcreteComponent,\r\n  appContext: AppContext,\r\n  asMixin = false\r\n): ObjectEmitsOptions | null {\r\n  const cache = appContext.emitsCache\r\n  const cached = cache.get(comp)\r\n  if (cached !== undefined) {\r\n    return cached\r\n  }\r\n\r\n  const raw = comp.emits\r\n  let normalized: ObjectEmitsOptions = {}\r\n\r\n  // apply mixin/extends props\r\n  let hasExtends = false\r\n  if (__FEATURE_OPTIONS_API__ && !isFunction(comp)) {\r\n    const extendEmits = (raw: ComponentOptions) => {\r\n      const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true)\r\n      if (normalizedFromExtend) {\r\n        hasExtends = true\r\n        extend(normalized, normalizedFromExtend)\r\n      }\r\n    }\r\n    if (!asMixin && appContext.mixins.length) {\r\n      appContext.mixins.forEach(extendEmits)\r\n    }\r\n    if (comp.extends) {\r\n      extendEmits(comp.extends)\r\n    }\r\n    if (comp.mixins) {\r\n      comp.mixins.forEach(extendEmits)\r\n    }\r\n  }\r\n\r\n  if (!raw && !hasExtends) {\r\n    cache.set(comp, null)\r\n    return null\r\n  }\r\n\r\n  if (isArray(raw)) {\r\n    raw.forEach(key => (normalized[key] = null))\r\n  } else {\r\n    extend(normalized, raw)\r\n  }\r\n\r\n  cache.set(comp, normalized)\r\n  return normalized\r\n}\r\n\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nexport function isEmitListener(\r\n  options: ObjectEmitsOptions | null,\r\n  key: string\r\n): boolean {\r\n  if (!options || !isOn(key)) {\r\n    return false\r\n  }\r\n\r\n  if (__COMPAT__ && key.startsWith(compatModelEventPrefix)) {\r\n    return true\r\n  }\r\n\r\n  key = key.slice(2).replace(/Once$/, '')\r\n  return (\r\n    hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n    hasOwn(options, hyphenate(key)) ||\r\n    hasOwn(options, key)\r\n  )\r\n}\r\n","import { ComponentInternalInstance } from './component'\r\nimport { devtoolsComponentUpdated } from './devtools'\r\nimport { setBlockTracking } from './vnode'\r\n\r\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nexport let currentRenderingInstance: ComponentInternalInstance | null = null\r\nexport let currentScopeId: string | null = null\r\n\r\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\r\nexport function setCurrentRenderingInstance(\r\n  instance: ComponentInternalInstance | null\r\n): ComponentInternalInstance | null {\r\n  const prev = currentRenderingInstance\r\n  currentRenderingInstance = instance\r\n  currentScopeId = (instance && instance.type.__scopeId) || null\r\n  // v2 pre-compiled components uses _scopeId instead of __scopeId\r\n  if (__COMPAT__ && !currentScopeId) {\r\n    currentScopeId = (instance && (instance.type as any)._scopeId) || null\r\n  }\r\n  return prev\r\n}\r\n\r\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\r\nexport function pushScopeId(id: string | null) {\r\n  currentScopeId = id\r\n}\r\n\r\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\r\nexport function popScopeId() {\r\n  currentScopeId = null\r\n}\r\n\r\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\r\nexport const withScopeId = (_id: string) => withCtx\r\n\r\nexport type ContextualRenderFn = {\r\n  (...args: any[]): any\r\n  _n: boolean /* already normalized */\r\n  _c: boolean /* compiled */\r\n  _d: boolean /* disableTracking */\r\n  _ns: boolean /* nonScoped */\r\n}\r\n\r\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\r\nexport function withCtx(\r\n  fn: Function,\r\n  ctx: ComponentInternalInstance | null = currentRenderingInstance,\r\n  isNonScopedSlot?: boolean // __COMPAT__ only\r\n) {\r\n  if (!ctx) return fn\r\n\r\n  // already normalized\r\n  if ((fn as ContextualRenderFn)._n) {\r\n    return fn\r\n  }\r\n\r\n  const renderFnWithContext: ContextualRenderFn = (...args: any[]) => {\r\n    // If a user calls a compiled slot inside a template expression (#1745), it\r\n    // can mess up block tracking, so by default we disable block tracking and\r\n    // force bail out when invoking a compiled slot (indicated by the ._d flag).\r\n    // This isn't necessary if rendering a compiled `<slot>`, so we flip the\r\n    // ._d flag off when invoking the wrapped fn inside `renderSlot`.\r\n    if (renderFnWithContext._d) {\r\n      setBlockTracking(-1)\r\n    }\r\n    const prevInstance = setCurrentRenderingInstance(ctx)\r\n    const res = fn(...args)\r\n    setCurrentRenderingInstance(prevInstance)\r\n    if (renderFnWithContext._d) {\r\n      setBlockTracking(1)\r\n    }\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      devtoolsComponentUpdated(ctx)\r\n    }\r\n\r\n    return res\r\n  }\r\n\r\n  // mark normalized to avoid duplicated wrapping\r\n  renderFnWithContext._n = true\r\n  // mark this as compiled by default\r\n  // this is used in vnode.ts -> normalizeChildren() to set the slot\r\n  // rendering flag.\r\n  renderFnWithContext._c = true\r\n  // disable block tracking by default\r\n  renderFnWithContext._d = true\r\n  // compat build only flag to distinguish scoped slots from non-scoped ones\r\n  if (__COMPAT__ && isNonScopedSlot) {\r\n    renderFnWithContext._ns = true\r\n  }\r\n  return renderFnWithContext\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  FunctionalComponent,\r\n  Data,\r\n  getComponentName\r\n} from './component'\r\nimport {\r\n  VNode,\r\n  normalizeVNode,\r\n  createVNode,\r\n  Comment,\r\n  cloneVNode,\r\n  VNodeArrayChildren,\r\n  isVNode,\r\n  blockStack\r\n} from './vnode'\r\nimport { handleError, ErrorCodes } from './errorHandling'\r\nimport { PatchFlags, ShapeFlags, isOn, isModelListener } from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { isHmrUpdating } from './hmr'\r\nimport { NormalizedProps } from './componentProps'\r\nimport { isEmitListener } from './componentEmits'\r\nimport { setCurrentRenderingInstance } from './componentRenderContext'\r\nimport {\r\n  DeprecationTypes,\r\n  isCompatEnabled,\r\n  warnDeprecation\r\n} from './compat/compatConfig'\r\n\r\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs: boolean = false\r\n\r\nexport function markAttrsAccessed() {\r\n  accessedAttrs = true\r\n}\r\n\r\ntype SetRootFn = ((root: VNode) => void) | undefined\r\n\r\nexport function renderComponentRoot(\r\n  instance: ComponentInternalInstance\r\n): VNode {\r\n  const {\r\n    type: Component,\r\n    vnode,\r\n    proxy,\r\n    withProxy,\r\n    props,\r\n    propsOptions: [propsOptions],\r\n    slots,\r\n    attrs,\r\n    emit,\r\n    render,\r\n    renderCache,\r\n    data,\r\n    setupState,\r\n    ctx,\r\n    inheritAttrs\r\n  } = instance\r\n\r\n  let result\r\n  let fallthroughAttrs\r\n  const prev = setCurrentRenderingInstance(instance)\r\n  if (__DEV__) {\r\n    accessedAttrs = false\r\n  }\r\n\r\n  try {\r\n    if (vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\r\n      // withProxy is a proxy with a different `has` trap only for\r\n      // runtime-compiled render functions using `with` block.\r\n      const proxyToUse = withProxy || proxy\r\n      result = normalizeVNode(\r\n        render!.call(\r\n          proxyToUse,\r\n          proxyToUse!,\r\n          renderCache,\r\n          props,\r\n          setupState,\r\n          data,\r\n          ctx\r\n        )\r\n      )\r\n      fallthroughAttrs = attrs\r\n    } else {\r\n      // functional\r\n      const render = Component as FunctionalComponent\r\n      // in dev, mark attrs accessed if optional props (attrs === props)\r\n      if (__DEV__ && attrs === props) {\r\n        markAttrsAccessed()\r\n      }\r\n      result = normalizeVNode(\r\n        render.length > 1\r\n          ? render(\r\n              props,\r\n              __DEV__\r\n                ? {\r\n                    get attrs() {\r\n                      markAttrsAccessed()\r\n                      return attrs\r\n                    },\r\n                    slots,\r\n                    emit\r\n                  }\r\n                : { attrs, slots, emit }\r\n            )\r\n          : render(props, null as any /* we know it doesn't need it */)\r\n      )\r\n      fallthroughAttrs = Component.props\r\n        ? attrs\r\n        : getFunctionalFallthrough(attrs)\r\n    }\r\n  } catch (err) {\r\n    blockStack.length = 0\r\n    handleError(err, instance, ErrorCodes.RENDER_FUNCTION)\r\n    result = createVNode(Comment)\r\n  }\r\n\r\n  // attr merging\r\n  // in dev mode, comments are preserved, and it's possible for a template\r\n  // to have comments along side the root element which makes it a fragment\r\n  let root = result\r\n  let setRoot: SetRootFn = undefined\r\n  if (\r\n    __DEV__ &&\r\n    result.patchFlag > 0 &&\r\n    result.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT\r\n  ) {\r\n    ;[root, setRoot] = getChildRoot(result)\r\n  }\r\n\r\n  if (fallthroughAttrs && inheritAttrs !== false) {\r\n    const keys = Object.keys(fallthroughAttrs)\r\n    const { shapeFlag } = root\r\n    if (keys.length) {\r\n      if (shapeFlag & (ShapeFlags.ELEMENT | ShapeFlags.COMPONENT)) {\r\n        if (propsOptions && keys.some(isModelListener)) {\r\n          // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n          // prop, it indicates this component expects to handle v-model and\r\n          // it should not fallthrough.\r\n          // related: #1543, #1643, #1989\r\n          fallthroughAttrs = filterModelListeners(\r\n            fallthroughAttrs,\r\n            propsOptions\r\n          )\r\n        }\r\n        root = cloneVNode(root, fallthroughAttrs)\r\n      } else if (__DEV__ && !accessedAttrs && root.type !== Comment) {\r\n        const allAttrs = Object.keys(attrs)\r\n        const eventAttrs: string[] = []\r\n        const extraAttrs: string[] = []\r\n        for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n          const key = allAttrs[i]\r\n          if (isOn(key)) {\r\n            // ignore v-model handlers when they fail to fallthrough\r\n            if (!isModelListener(key)) {\r\n              // remove `on`, lowercase first letter to reflect event casing\r\n              // accurately\r\n              eventAttrs.push(key[2].toLowerCase() + key.slice(3))\r\n            }\r\n          } else {\r\n            extraAttrs.push(key)\r\n          }\r\n        }\r\n        if (extraAttrs.length) {\r\n          warn(\r\n            `Extraneous non-props attributes (` +\r\n              `${extraAttrs.join(', ')}) ` +\r\n              `were passed to component but could not be automatically inherited ` +\r\n              `because component renders fragment or text root nodes.`\r\n          )\r\n        }\r\n        if (eventAttrs.length) {\r\n          warn(\r\n            `Extraneous non-emits event listeners (` +\r\n              `${eventAttrs.join(', ')}) ` +\r\n              `were passed to component but could not be automatically inherited ` +\r\n              `because component renders fragment or text root nodes. ` +\r\n              `If the listener is intended to be a component custom event listener only, ` +\r\n              `declare it using the \"emits\" option.`\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (\r\n    __COMPAT__ &&\r\n    isCompatEnabled(DeprecationTypes.INSTANCE_ATTRS_CLASS_STYLE, instance) &&\r\n    vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT &&\r\n    root.shapeFlag & (ShapeFlags.ELEMENT | ShapeFlags.COMPONENT)\r\n  ) {\r\n    const { class: cls, style } = vnode.props || {}\r\n    if (cls || style) {\r\n      if (__DEV__ && inheritAttrs === false) {\r\n        warnDeprecation(\r\n          DeprecationTypes.INSTANCE_ATTRS_CLASS_STYLE,\r\n          instance,\r\n          getComponentName(instance.type)\r\n        )\r\n      }\r\n      root = cloneVNode(root, {\r\n        class: cls,\r\n        style: style\r\n      })\r\n    }\r\n  }\r\n\r\n  // inherit directives\r\n  if (vnode.dirs) {\r\n    if (__DEV__ && !isElementRoot(root)) {\r\n      warn(\r\n        `Runtime directive used on component with non-element root node. ` +\r\n          `The directives will not function as intended.`\r\n      )\r\n    }\r\n    // clone before mutating since the root may be a hoisted vnode\r\n    root = cloneVNode(root)\r\n    root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs\r\n  }\r\n  // inherit transition data\r\n  if (vnode.transition) {\r\n    if (__DEV__ && !isElementRoot(root)) {\r\n      warn(\r\n        `Component inside <Transition> renders non-element root node ` +\r\n          `that cannot be animated.`\r\n      )\r\n    }\r\n    root.transition = vnode.transition\r\n  }\r\n\r\n  if (__DEV__ && setRoot) {\r\n    setRoot(root)\r\n  } else {\r\n    result = root\r\n  }\r\n\r\n  setCurrentRenderingInstance(prev)\r\n  return result\r\n}\r\n\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode: VNode): [VNode, SetRootFn] => {\r\n  const rawChildren = vnode.children as VNodeArrayChildren\r\n  const dynamicChildren = vnode.dynamicChildren\r\n  const childRoot = filterSingleRoot(rawChildren)\r\n  if (!childRoot) {\r\n    return [vnode, undefined]\r\n  }\r\n  const index = rawChildren.indexOf(childRoot)\r\n  const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1\r\n  const setRoot: SetRootFn = (updatedRoot: VNode) => {\r\n    rawChildren[index] = updatedRoot\r\n    if (dynamicChildren) {\r\n      if (dynamicIndex > -1) {\r\n        dynamicChildren[dynamicIndex] = updatedRoot\r\n      } else if (updatedRoot.patchFlag > 0) {\r\n        vnode.dynamicChildren = [...dynamicChildren, updatedRoot]\r\n      }\r\n    }\r\n  }\r\n  return [normalizeVNode(childRoot), setRoot]\r\n}\r\n\r\nexport function filterSingleRoot(\r\n  children: VNodeArrayChildren\r\n): VNode | undefined {\r\n  let singleRoot\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    if (isVNode(child)) {\r\n      // ignore user comment\r\n      if (child.type !== Comment || child.children === 'v-if') {\r\n        if (singleRoot) {\r\n          // has more than 1 non-comment child, return now\r\n          return\r\n        } else {\r\n          singleRoot = child\r\n        }\r\n      }\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n  return singleRoot\r\n}\r\n\r\nconst getFunctionalFallthrough = (attrs: Data): Data | undefined => {\r\n  let res: Data | undefined\r\n  for (const key in attrs) {\r\n    if (key === 'class' || key === 'style' || isOn(key)) {\r\n      ;(res || (res = {}))[key] = attrs[key]\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nconst filterModelListeners = (attrs: Data, props: NormalizedProps): Data => {\r\n  const res: Data = {}\r\n  for (const key in attrs) {\r\n    if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n      res[key] = attrs[key]\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nconst isElementRoot = (vnode: VNode) => {\r\n  return (\r\n    vnode.shapeFlag & (ShapeFlags.COMPONENT | ShapeFlags.ELEMENT) ||\r\n    vnode.type === Comment // potential v-if branch switch\r\n  )\r\n}\r\n\r\nexport function shouldUpdateComponent(\r\n  prevVNode: VNode,\r\n  nextVNode: VNode,\r\n  optimized?: boolean\r\n): boolean {\r\n  const { props: prevProps, children: prevChildren, component } = prevVNode\r\n  const { props: nextProps, children: nextChildren, patchFlag } = nextVNode\r\n  const emits = component!.emitsOptions\r\n\r\n  // Parent component's render function was hot-updated. Since this may have\r\n  // caused the child component's slots content to have changed, we need to\r\n  // force the child to update as well.\r\n  if (__DEV__ && (prevChildren || nextChildren) && isHmrUpdating) {\r\n    return true\r\n  }\r\n\r\n  // force child update for runtime directive or transition on component vnode.\r\n  if (nextVNode.dirs || nextVNode.transition) {\r\n    return true\r\n  }\r\n\r\n  if (optimized && patchFlag >= 0) {\r\n    if (patchFlag & PatchFlags.DYNAMIC_SLOTS) {\r\n      // slot content that references values that might have changed,\r\n      // e.g. in a v-for\r\n      return true\r\n    }\r\n    if (patchFlag & PatchFlags.FULL_PROPS) {\r\n      if (!prevProps) {\r\n        return !!nextProps\r\n      }\r\n      // presence of this flag indicates props are always non-null\r\n      return hasPropsChanged(prevProps, nextProps!, emits)\r\n    } else if (patchFlag & PatchFlags.PROPS) {\r\n      const dynamicProps = nextVNode.dynamicProps!\r\n      for (let i = 0; i < dynamicProps.length; i++) {\r\n        const key = dynamicProps[i]\r\n        if (\r\n          nextProps![key] !== prevProps![key] &&\r\n          !isEmitListener(emits, key)\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // this path is only taken by manually written render functions\r\n    // so presence of any children leads to a forced update\r\n    if (prevChildren || nextChildren) {\r\n      if (!nextChildren || !(nextChildren as any).$stable) {\r\n        return true\r\n      }\r\n    }\r\n    if (prevProps === nextProps) {\r\n      return false\r\n    }\r\n    if (!prevProps) {\r\n      return !!nextProps\r\n    }\r\n    if (!nextProps) {\r\n      return true\r\n    }\r\n    return hasPropsChanged(prevProps, nextProps, emits)\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nfunction hasPropsChanged(\r\n  prevProps: Data,\r\n  nextProps: Data,\r\n  emitsOptions: ComponentInternalInstance['emitsOptions']\r\n): boolean {\r\n  const nextKeys = Object.keys(nextProps)\r\n  if (nextKeys.length !== Object.keys(prevProps).length) {\r\n    return true\r\n  }\r\n  for (let i = 0; i < nextKeys.length; i++) {\r\n    const key = nextKeys[i]\r\n    if (\r\n      nextProps[key] !== prevProps[key] &&\r\n      !isEmitListener(emitsOptions, key)\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport function updateHOCHostEl(\r\n  { vnode, parent }: ComponentInternalInstance,\r\n  el: typeof vnode.el // HostNode\r\n) {\r\n  while (parent && parent.subTree === vnode) {\r\n    ;(vnode = parent.vnode).el = el\r\n    parent = parent.parent\r\n  }\r\n}\r\n","import {\r\n  VNode,\r\n  normalizeVNode,\r\n  VNodeProps,\r\n  isSameVNodeType,\r\n  openBlock,\r\n  closeBlock,\r\n  currentBlock,\r\n  Comment,\r\n  createVNode,\r\n  isBlockTreeEnabled\r\n} from '../vnode'\r\nimport { isFunction, isArray, ShapeFlags, toNumber } from '@vue/shared'\r\nimport { ComponentInternalInstance, handleSetupResult } from '../component'\r\nimport { Slots } from '../componentSlots'\r\nimport {\r\n  RendererInternals,\r\n  MoveType,\r\n  SetupRenderEffectFn,\r\n  RendererNode,\r\n  RendererElement\r\n} from '../renderer'\r\nimport { queuePostFlushCb } from '../scheduler'\r\nimport { filterSingleRoot, updateHOCHostEl } from '../componentRenderUtils'\r\nimport { pushWarningContext, popWarningContext, warn } from '../warning'\r\nimport { handleError, ErrorCodes } from '../errorHandling'\r\n\r\nexport interface SuspenseProps {\r\n  onResolve?: () => void\r\n  onPending?: () => void\r\n  onFallback?: () => void\r\n  timeout?: string | number\r\n}\r\n\r\nexport const isSuspense = (type: any): boolean => type.__isSuspense\r\n\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nexport const SuspenseImpl = {\r\n  name: 'Suspense',\r\n  // In order to make Suspense tree-shakable, we need to avoid importing it\r\n  // directly in the renderer. The renderer checks for the __isSuspense flag\r\n  // on a vnode's type and calls the `process` method, passing in renderer\r\n  // internals.\r\n  __isSuspense: true,\r\n  process(\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n    // platform-specific impl passed from renderer\r\n    rendererInternals: RendererInternals\r\n  ) {\r\n    if (n1 == null) {\r\n      mountSuspense(\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized,\r\n        rendererInternals\r\n      )\r\n    } else {\r\n      patchSuspense(\r\n        n1,\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized,\r\n        rendererInternals\r\n      )\r\n    }\r\n  },\r\n  hydrate: hydrateSuspense,\r\n  create: createSuspenseBoundary,\r\n  normalize: normalizeSuspenseChildren\r\n}\r\n\r\n// Force-casted public typing for h and TSX props inference\r\nexport const Suspense = (__FEATURE_SUSPENSE__ ? SuspenseImpl : null) as any as {\r\n  __isSuspense: true\r\n  new (): { $props: VNodeProps & SuspenseProps }\r\n}\r\n\r\nfunction triggerEvent(\r\n  vnode: VNode,\r\n  name: 'onResolve' | 'onPending' | 'onFallback'\r\n) {\r\n  const eventListener = vnode.props && vnode.props[name]\r\n  if (isFunction(eventListener)) {\r\n    eventListener()\r\n  }\r\n}\r\n\r\nfunction mountSuspense(\r\n  vnode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals\r\n) {\r\n  const {\r\n    p: patch,\r\n    o: { createElement }\r\n  } = rendererInternals\r\n  const hiddenContainer = createElement('div')\r\n  const suspense = (vnode.suspense = createSuspenseBoundary(\r\n    vnode,\r\n    parentSuspense,\r\n    parentComponent,\r\n    container,\r\n    hiddenContainer,\r\n    anchor,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized,\r\n    rendererInternals\r\n  ))\r\n\r\n  // start mounting the content subtree in an off-dom container\r\n  patch(\r\n    null,\r\n    (suspense.pendingBranch = vnode.ssContent!),\r\n    hiddenContainer,\r\n    null,\r\n    parentComponent,\r\n    suspense,\r\n    isSVG,\r\n    slotScopeIds\r\n  )\r\n  // now check if we have encountered any async deps\r\n  if (suspense.deps > 0) {\r\n    // has async\r\n    // invoke @fallback event\r\n    triggerEvent(vnode, 'onPending')\r\n    triggerEvent(vnode, 'onFallback')\r\n\r\n    // mount the fallback tree\r\n    patch(\r\n      null,\r\n      vnode.ssFallback!,\r\n      container,\r\n      anchor,\r\n      parentComponent,\r\n      null, // fallback tree will not have suspense context\r\n      isSVG,\r\n      slotScopeIds\r\n    )\r\n    setActiveBranch(suspense, vnode.ssFallback!)\r\n  } else {\r\n    // Suspense has no async deps. Just resolve.\r\n    suspense.resolve()\r\n  }\r\n}\r\n\r\nfunction patchSuspense(\r\n  n1: VNode,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  { p: patch, um: unmount, o: { createElement } }: RendererInternals\r\n) {\r\n  const suspense = (n2.suspense = n1.suspense)!\r\n  suspense.vnode = n2\r\n  n2.el = n1.el\r\n  const newBranch = n2.ssContent!\r\n  const newFallback = n2.ssFallback!\r\n\r\n  const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense\r\n  if (pendingBranch) {\r\n    suspense.pendingBranch = newBranch\r\n    if (isSameVNodeType(newBranch, pendingBranch)) {\r\n      // same root type but content may have changed.\r\n      patch(\r\n        pendingBranch,\r\n        newBranch,\r\n        suspense.hiddenContainer,\r\n        null,\r\n        parentComponent,\r\n        suspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n      if (suspense.deps <= 0) {\r\n        suspense.resolve()\r\n      } else if (isInFallback) {\r\n        patch(\r\n          activeBranch,\r\n          newFallback,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          null, // fallback tree will not have suspense context\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        setActiveBranch(suspense, newFallback)\r\n      }\r\n    } else {\r\n      // toggled before pending tree is resolved\r\n      suspense.pendingId++\r\n      if (isHydrating) {\r\n        // if toggled before hydration is finished, the current DOM tree is\r\n        // no longer valid. set it as the active branch so it will be unmounted\r\n        // when resolved\r\n        suspense.isHydrating = false\r\n        suspense.activeBranch = pendingBranch\r\n      } else {\r\n        unmount(pendingBranch, parentComponent, suspense)\r\n      }\r\n      // increment pending ID. this is used to invalidate async callbacks\r\n      // reset suspense state\r\n      suspense.deps = 0\r\n      // discard effects from pending branch\r\n      suspense.effects.length = 0\r\n      // discard previous container\r\n      suspense.hiddenContainer = createElement('div')\r\n\r\n      if (isInFallback) {\r\n        // already in fallback state\r\n        patch(\r\n          null,\r\n          newBranch,\r\n          suspense.hiddenContainer,\r\n          null,\r\n          parentComponent,\r\n          suspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        if (suspense.deps <= 0) {\r\n          suspense.resolve()\r\n        } else {\r\n          patch(\r\n            activeBranch,\r\n            newFallback,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            null, // fallback tree will not have suspense context\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n          setActiveBranch(suspense, newFallback)\r\n        }\r\n      } else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n        // toggled \"back\" to current active branch\r\n        patch(\r\n          activeBranch,\r\n          newBranch,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          suspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        // force resolve\r\n        suspense.resolve(true)\r\n      } else {\r\n        // switched to a 3rd branch\r\n        patch(\r\n          null,\r\n          newBranch,\r\n          suspense.hiddenContainer,\r\n          null,\r\n          parentComponent,\r\n          suspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        if (suspense.deps <= 0) {\r\n          suspense.resolve()\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n      // root did not change, just normal patch\r\n      patch(\r\n        activeBranch,\r\n        newBranch,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        suspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n      setActiveBranch(suspense, newBranch)\r\n    } else {\r\n      // root node toggled\r\n      // invoke @pending event\r\n      triggerEvent(n2, 'onPending')\r\n      // mount pending branch in off-dom container\r\n      suspense.pendingBranch = newBranch\r\n      suspense.pendingId++\r\n      patch(\r\n        null,\r\n        newBranch,\r\n        suspense.hiddenContainer,\r\n        null,\r\n        parentComponent,\r\n        suspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n      if (suspense.deps <= 0) {\r\n        // incoming branch has no async deps, resolve now.\r\n        suspense.resolve()\r\n      } else {\r\n        const { timeout, pendingId } = suspense\r\n        if (timeout > 0) {\r\n          setTimeout(() => {\r\n            if (suspense.pendingId === pendingId) {\r\n              suspense.fallback(newFallback)\r\n            }\r\n          }, timeout)\r\n        } else if (timeout === 0) {\r\n          suspense.fallback(newFallback)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport interface SuspenseBoundary {\r\n  vnode: VNode<RendererNode, RendererElement, SuspenseProps>\r\n  parent: SuspenseBoundary | null\r\n  parentComponent: ComponentInternalInstance | null\r\n  isSVG: boolean\r\n  container: RendererElement\r\n  hiddenContainer: RendererElement\r\n  anchor: RendererNode | null\r\n  activeBranch: VNode | null\r\n  pendingBranch: VNode | null\r\n  deps: number\r\n  pendingId: number\r\n  timeout: number\r\n  isInFallback: boolean\r\n  isHydrating: boolean\r\n  isUnmounted: boolean\r\n  effects: Function[]\r\n  resolve(force?: boolean): void\r\n  fallback(fallbackVNode: VNode): void\r\n  move(\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    type: MoveType\r\n  ): void\r\n  next(): RendererNode | null\r\n  registerDep(\r\n    instance: ComponentInternalInstance,\r\n    setupRenderEffect: SetupRenderEffectFn\r\n  ): void\r\n  unmount(parentSuspense: SuspenseBoundary | null, doRemove?: boolean): void\r\n}\r\n\r\nlet hasWarned = false\r\n\r\nfunction createSuspenseBoundary(\r\n  vnode: VNode,\r\n  parent: SuspenseBoundary | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  container: RendererElement,\r\n  hiddenContainer: RendererElement,\r\n  anchor: RendererNode | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals,\r\n  isHydrating = false\r\n): SuspenseBoundary {\r\n  /* istanbul ignore if */\r\n  if (__DEV__ && !__TEST__ && !hasWarned) {\r\n    hasWarned = true\r\n    // @ts-ignore `console.info` cannot be null error\r\n    console[console.info ? 'info' : 'log'](\r\n      `<Suspense> is an experimental feature and its API will likely change.`\r\n    )\r\n  }\r\n\r\n  const {\r\n    p: patch,\r\n    m: move,\r\n    um: unmount,\r\n    n: next,\r\n    o: { parentNode, remove }\r\n  } = rendererInternals\r\n\r\n  const timeout = toNumber(vnode.props && vnode.props.timeout)\r\n  const suspense: SuspenseBoundary = {\r\n    vnode,\r\n    parent,\r\n    parentComponent,\r\n    isSVG,\r\n    container,\r\n    hiddenContainer,\r\n    anchor,\r\n    deps: 0,\r\n    pendingId: 0,\r\n    timeout: typeof timeout === 'number' ? timeout : -1,\r\n    activeBranch: null,\r\n    pendingBranch: null,\r\n    isInFallback: true,\r\n    isHydrating,\r\n    isUnmounted: false,\r\n    effects: [],\r\n\r\n    resolve(resume = false) {\r\n      if (__DEV__) {\r\n        if (!resume && !suspense.pendingBranch) {\r\n          throw new Error(\r\n            `suspense.resolve() is called without a pending branch.`\r\n          )\r\n        }\r\n        if (suspense.isUnmounted) {\r\n          throw new Error(\r\n            `suspense.resolve() is called on an already unmounted suspense boundary.`\r\n          )\r\n        }\r\n      }\r\n      const {\r\n        vnode,\r\n        activeBranch,\r\n        pendingBranch,\r\n        pendingId,\r\n        effects,\r\n        parentComponent,\r\n        container\r\n      } = suspense\r\n\r\n      if (suspense.isHydrating) {\r\n        suspense.isHydrating = false\r\n      } else if (!resume) {\r\n        const delayEnter =\r\n          activeBranch &&\r\n          pendingBranch!.transition &&\r\n          pendingBranch!.transition.mode === 'out-in'\r\n        if (delayEnter) {\r\n          activeBranch!.transition!.afterLeave = () => {\r\n            if (pendingId === suspense.pendingId) {\r\n              move(pendingBranch!, container, anchor, MoveType.ENTER)\r\n            }\r\n          }\r\n        }\r\n        // this is initial anchor on mount\r\n        let { anchor } = suspense\r\n        // unmount current active tree\r\n        if (activeBranch) {\r\n          // if the fallback tree was mounted, it may have been moved\r\n          // as part of a parent suspense. get the latest anchor for insertion\r\n          anchor = next(activeBranch)\r\n          unmount(activeBranch, parentComponent, suspense, true)\r\n        }\r\n        if (!delayEnter) {\r\n          // move content from off-dom container to actual container\r\n          move(pendingBranch!, container, anchor, MoveType.ENTER)\r\n        }\r\n      }\r\n\r\n      setActiveBranch(suspense, pendingBranch!)\r\n      suspense.pendingBranch = null\r\n      suspense.isInFallback = false\r\n\r\n      // flush buffered effects\r\n      // check if there is a pending parent suspense\r\n      let parent = suspense.parent\r\n      let hasUnresolvedAncestor = false\r\n      while (parent) {\r\n        if (parent.pendingBranch) {\r\n          // found a pending parent suspense, merge buffered post jobs\r\n          // into that parent\r\n          parent.effects.push(...effects)\r\n          hasUnresolvedAncestor = true\r\n          break\r\n        }\r\n        parent = parent.parent\r\n      }\r\n      // no pending parent suspense, flush all jobs\r\n      if (!hasUnresolvedAncestor) {\r\n        queuePostFlushCb(effects)\r\n      }\r\n      suspense.effects = []\r\n\r\n      // invoke @resolve event\r\n      triggerEvent(vnode, 'onResolve')\r\n    },\r\n\r\n    fallback(fallbackVNode) {\r\n      if (!suspense.pendingBranch) {\r\n        return\r\n      }\r\n\r\n      const { vnode, activeBranch, parentComponent, container, isSVG } =\r\n        suspense\r\n\r\n      // invoke @fallback event\r\n      triggerEvent(vnode, 'onFallback')\r\n\r\n      const anchor = next(activeBranch!)\r\n      const mountFallback = () => {\r\n        if (!suspense.isInFallback) {\r\n          return\r\n        }\r\n        // mount the fallback tree\r\n        patch(\r\n          null,\r\n          fallbackVNode,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          null, // fallback tree will not have suspense context\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        setActiveBranch(suspense, fallbackVNode)\r\n      }\r\n\r\n      const delayEnter =\r\n        fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in'\r\n      if (delayEnter) {\r\n        activeBranch!.transition!.afterLeave = mountFallback\r\n      }\r\n      suspense.isInFallback = true\r\n\r\n      // unmount current active branch\r\n      unmount(\r\n        activeBranch!,\r\n        parentComponent,\r\n        null, // no suspense so unmount hooks fire now\r\n        true // shouldRemove\r\n      )\r\n\r\n      if (!delayEnter) {\r\n        mountFallback()\r\n      }\r\n    },\r\n\r\n    move(container, anchor, type) {\r\n      suspense.activeBranch &&\r\n        move(suspense.activeBranch, container, anchor, type)\r\n      suspense.container = container\r\n    },\r\n\r\n    next() {\r\n      return suspense.activeBranch && next(suspense.activeBranch)\r\n    },\r\n\r\n    registerDep(instance, setupRenderEffect) {\r\n      const isInPendingSuspense = !!suspense.pendingBranch\r\n      if (isInPendingSuspense) {\r\n        suspense.deps++\r\n      }\r\n      const hydratedEl = instance.vnode.el\r\n      instance\r\n        .asyncDep!.catch(err => {\r\n          handleError(err, instance, ErrorCodes.SETUP_FUNCTION)\r\n        })\r\n        .then(asyncSetupResult => {\r\n          // retry when the setup() promise resolves.\r\n          // component may have been unmounted before resolve.\r\n          if (\r\n            instance.isUnmounted ||\r\n            suspense.isUnmounted ||\r\n            suspense.pendingId !== instance.suspenseId\r\n          ) {\r\n            return\r\n          }\r\n          // retry from this component\r\n          instance.asyncResolved = true\r\n          const { vnode } = instance\r\n          if (__DEV__) {\r\n            pushWarningContext(vnode)\r\n          }\r\n          handleSetupResult(instance, asyncSetupResult, false)\r\n          if (hydratedEl) {\r\n            // vnode may have been replaced if an update happened before the\r\n            // async dep is resolved.\r\n            vnode.el = hydratedEl\r\n          }\r\n          const placeholder = !hydratedEl && instance.subTree.el\r\n          setupRenderEffect(\r\n            instance,\r\n            vnode,\r\n            // component may have been moved before resolve.\r\n            // if this is not a hydration, instance.subTree will be the comment\r\n            // placeholder.\r\n            parentNode(hydratedEl || instance.subTree.el!)!,\r\n            // anchor will not be used if this is hydration, so only need to\r\n            // consider the comment placeholder case.\r\n            hydratedEl ? null : next(instance.subTree),\r\n            suspense,\r\n            isSVG,\r\n            optimized\r\n          )\r\n          if (placeholder) {\r\n            remove(placeholder)\r\n          }\r\n          updateHOCHostEl(instance, vnode.el)\r\n          if (__DEV__) {\r\n            popWarningContext()\r\n          }\r\n          // only decrease deps count if suspense is not already resolved\r\n          if (isInPendingSuspense && --suspense.deps === 0) {\r\n            suspense.resolve()\r\n          }\r\n        })\r\n    },\r\n\r\n    unmount(parentSuspense, doRemove) {\r\n      suspense.isUnmounted = true\r\n      if (suspense.activeBranch) {\r\n        unmount(\r\n          suspense.activeBranch,\r\n          parentComponent,\r\n          parentSuspense,\r\n          doRemove\r\n        )\r\n      }\r\n      if (suspense.pendingBranch) {\r\n        unmount(\r\n          suspense.pendingBranch,\r\n          parentComponent,\r\n          parentSuspense,\r\n          doRemove\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  return suspense\r\n}\r\n\r\nfunction hydrateSuspense(\r\n  node: Node,\r\n  vnode: VNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals,\r\n  hydrateNode: (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => Node | null\r\n): Node | null {\r\n  /* eslint-disable no-restricted-globals */\r\n  const suspense = (vnode.suspense = createSuspenseBoundary(\r\n    vnode,\r\n    parentSuspense,\r\n    parentComponent,\r\n    node.parentNode!,\r\n    document.createElement('div'),\r\n    null,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized,\r\n    rendererInternals,\r\n    true /* hydrating */\r\n  ))\r\n  // there are two possible scenarios for server-rendered suspense:\r\n  // - success: ssr content should be fully resolved\r\n  // - failure: ssr content should be the fallback branch.\r\n  // however, on the client we don't really know if it has failed or not\r\n  // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n  // need to construct a suspense boundary first\r\n  const result = hydrateNode(\r\n    node,\r\n    (suspense.pendingBranch = vnode.ssContent!),\r\n    parentComponent,\r\n    suspense,\r\n    slotScopeIds,\r\n    optimized\r\n  )\r\n  if (suspense.deps === 0) {\r\n    suspense.resolve()\r\n  }\r\n  return result\r\n  /* eslint-enable no-restricted-globals */\r\n}\r\n\r\nfunction normalizeSuspenseChildren(vnode: VNode) {\r\n  const { shapeFlag, children } = vnode\r\n  const isSlotChildren = shapeFlag & ShapeFlags.SLOTS_CHILDREN\r\n  vnode.ssContent = normalizeSuspenseSlot(\r\n    isSlotChildren ? (children as Slots).default : children\r\n  )\r\n  vnode.ssFallback = isSlotChildren\r\n    ? normalizeSuspenseSlot((children as Slots).fallback)\r\n    : createVNode(Comment)\r\n}\r\n\r\nfunction normalizeSuspenseSlot(s: any) {\r\n  let block: VNode[] | null | undefined\r\n  if (isFunction(s)) {\r\n    const trackBlock = isBlockTreeEnabled && s._c\r\n    if (trackBlock) {\r\n      // disableTracking: false\r\n      // allow block tracking for compiled slots\r\n      // (see ./componentRenderContext.ts)\r\n      s._d = false\r\n      openBlock()\r\n    }\r\n    s = s()\r\n    if (trackBlock) {\r\n      s._d = true\r\n      block = currentBlock\r\n      closeBlock()\r\n    }\r\n  }\r\n  if (isArray(s)) {\r\n    const singleChild = filterSingleRoot(s)\r\n    if (__DEV__ && !singleChild) {\r\n      warn(`<Suspense> slots expect a single root node.`)\r\n    }\r\n    s = singleChild\r\n  }\r\n  s = normalizeVNode(s)\r\n  if (block && !s.dynamicChildren) {\r\n    s.dynamicChildren = block.filter(c => c !== s)\r\n  }\r\n  return s\r\n}\r\n\r\nexport function queueEffectWithSuspense(\r\n  fn: Function | Function[],\r\n  suspense: SuspenseBoundary | null\r\n): void {\r\n  if (suspense && suspense.pendingBranch) {\r\n    if (isArray(fn)) {\r\n      suspense.effects.push(...fn)\r\n    } else {\r\n      suspense.effects.push(fn)\r\n    }\r\n  } else {\r\n    queuePostFlushCb(fn)\r\n  }\r\n}\r\n\r\nfunction setActiveBranch(suspense: SuspenseBoundary, branch: VNode) {\r\n  suspense.activeBranch = branch\r\n  const { vnode, parentComponent } = suspense\r\n  const el = (vnode.el = branch.el)\r\n  // in case suspense is the root node of a component,\r\n  // recursively update the HOC el\r\n  if (parentComponent && parentComponent.subTree === vnode) {\r\n    parentComponent.vnode.el = el\r\n    updateHOCHostEl(parentComponent, el)\r\n  }\r\n}\r\n","import { isFunction } from '@vue/shared'\r\nimport { currentInstance } from './component'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { warn } from './warning'\r\n\r\nexport interface InjectionKey<T> extends Symbol {}\r\n\r\nexport function provide<T>(key: InjectionKey<T> | string | number, value: T) {\r\n  if (!currentInstance) {\r\n    if (__DEV__) {\r\n      warn(`provide() can only be used inside setup().`)\r\n    }\r\n  } else {\r\n    let provides = currentInstance.provides\r\n    // by default an instance inherits its parent's provides object\r\n    // but when it needs to provide values of its own, it creates its\r\n    // own provides object using parent provides object as prototype.\r\n    // this way in `inject` we can simply look up injections from direct\r\n    // parent and let the prototype chain do the work.\r\n    const parentProvides =\r\n      currentInstance.parent && currentInstance.parent.provides\r\n    if (parentProvides === provides) {\r\n      provides = currentInstance.provides = Object.create(parentProvides)\r\n    }\r\n    // TS doesn't allow symbol as index type\r\n    provides[key as string] = value\r\n  }\r\n}\r\n\r\nexport function inject<T>(key: InjectionKey<T> | string): T | undefined\r\nexport function inject<T>(\r\n  key: InjectionKey<T> | string,\r\n  defaultValue: T,\r\n  treatDefaultAsFactory?: false\r\n): T\r\nexport function inject<T>(\r\n  key: InjectionKey<T> | string,\r\n  defaultValue: T | (() => T),\r\n  treatDefaultAsFactory: true\r\n): T\r\nexport function inject(\r\n  key: InjectionKey<any> | string,\r\n  defaultValue?: unknown,\r\n  treatDefaultAsFactory = false\r\n) {\r\n  // fallback to `currentRenderingInstance` so that this can be called in\r\n  // a functional component\r\n  const instance = currentInstance || currentRenderingInstance\r\n  if (instance) {\r\n    // #2400\r\n    // to support `app.use` plugins,\r\n    // fallback to appContext's `provides` if the instance is at root\r\n    const provides =\r\n      instance.parent == null\r\n        ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n        : instance.parent.provides\r\n\r\n    if (provides && (key as string | symbol) in provides) {\r\n      // TS doesn't allow symbol as index type\r\n      return provides[key as string]\r\n    } else if (arguments.length > 1) {\r\n      return treatDefaultAsFactory && isFunction(defaultValue)\r\n        ? defaultValue.call(instance.proxy)\r\n        : defaultValue\r\n    } else if (__DEV__) {\r\n      warn(`injection \"${String(key)}\" not found.`)\r\n    }\r\n  } else if (__DEV__) {\r\n    warn(`inject() can only be used inside setup() or functional components.`)\r\n  }\r\n}\r\n","import {\r\n  isRef,\r\n  isShallow,\r\n  Ref,\r\n  ComputedRef,\r\n  ReactiveEffect,\r\n  isReactive,\r\n  ReactiveFlags,\r\n  EffectScheduler,\r\n  DebuggerOptions\r\n} from '@vue/reactivity'\r\nimport { SchedulerJob, queuePreFlushCb } from './scheduler'\r\nimport {\r\n  EMPTY_OBJ,\r\n  isObject,\r\n  isArray,\r\n  isFunction,\r\n  isString,\r\n  hasChanged,\r\n  NOOP,\r\n  remove,\r\n  isMap,\r\n  isSet,\r\n  isPlainObject\r\n} from '@vue/shared'\r\nimport {\r\n  currentInstance,\r\n  ComponentInternalInstance,\r\n  isInSSRComponentSetup,\r\n  setCurrentInstance,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport {\r\n  ErrorCodes,\r\n  callWithErrorHandling,\r\n  callWithAsyncErrorHandling\r\n} from './errorHandling'\r\nimport { queuePostRenderEffect } from './renderer'\r\nimport { warn } from './warning'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport { checkCompatEnabled, isCompatEnabled } from './compat/compatConfig'\r\nimport { ObjectWatchOptionItem } from './componentOptions'\r\n\r\nexport type WatchEffect = (onCleanup: OnCleanup) => void\r\n\r\nexport type WatchSource<T = any> = Ref<T> | ComputedRef<T> | (() => T)\r\n\r\nexport type WatchCallback<V = any, OV = any> = (\r\n  value: V,\r\n  oldValue: OV,\r\n  onCleanup: OnCleanup\r\n) => any\r\n\r\ntype MapSources<T, Immediate> = {\r\n  [K in keyof T]: T[K] extends WatchSource<infer V>\r\n    ? Immediate extends true\r\n      ? V | undefined\r\n      : V\r\n    : T[K] extends object\r\n    ? Immediate extends true\r\n      ? T[K] | undefined\r\n      : T[K]\r\n    : never\r\n}\r\n\r\ntype OnCleanup = (cleanupFn: () => void) => void\r\n\r\nexport interface WatchOptionsBase extends DebuggerOptions {\r\n  flush?: 'pre' | 'post' | 'sync'\r\n}\r\n\r\nexport interface WatchOptions<Immediate = boolean> extends WatchOptionsBase {\r\n  immediate?: Immediate\r\n  deep?: boolean\r\n}\r\n\r\nexport type WatchStopHandle = () => void\r\n\r\n// Simple effect.\r\nexport function watchEffect(\r\n  effect: WatchEffect,\r\n  options?: WatchOptionsBase\r\n): WatchStopHandle {\r\n  return doWatch(effect, null, options)\r\n}\r\n\r\nexport function watchPostEffect(\r\n  effect: WatchEffect,\r\n  options?: DebuggerOptions\r\n) {\r\n  return doWatch(\r\n    effect,\r\n    null,\r\n    (__DEV__\r\n      ? { ...options, flush: 'post' }\r\n      : { flush: 'post' }) as WatchOptionsBase\r\n  )\r\n}\r\n\r\nexport function watchSyncEffect(\r\n  effect: WatchEffect,\r\n  options?: DebuggerOptions\r\n) {\r\n  return doWatch(\r\n    effect,\r\n    null,\r\n    (__DEV__\r\n      ? { ...options, flush: 'sync' }\r\n      : { flush: 'sync' }) as WatchOptionsBase\r\n  )\r\n}\r\n\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {}\r\n\r\ntype MultiWatchSources = (WatchSource<unknown> | object)[]\r\n\r\n// overload: array of multiple sources + cb\r\nexport function watch<\r\n  T extends MultiWatchSources,\r\n  Immediate extends Readonly<boolean> = false\r\n>(\r\n  sources: [...T],\r\n  cb: WatchCallback<MapSources<T, false>, MapSources<T, Immediate>>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// overload: multiple sources w/ `as const`\r\n// watch([foo, bar] as const, () => {})\r\n// somehow [...T] breaks when the type is readonly\r\nexport function watch<\r\n  T extends Readonly<MultiWatchSources>,\r\n  Immediate extends Readonly<boolean> = false\r\n>(\r\n  source: T,\r\n  cb: WatchCallback<MapSources<T, false>, MapSources<T, Immediate>>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// overload: single source + cb\r\nexport function watch<T, Immediate extends Readonly<boolean> = false>(\r\n  source: WatchSource<T>,\r\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// overload: watching reactive object w/ cb\r\nexport function watch<\r\n  T extends object,\r\n  Immediate extends Readonly<boolean> = false\r\n>(\r\n  source: T,\r\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// implementation\r\nexport function watch<T = any, Immediate extends Readonly<boolean> = false>(\r\n  source: T | WatchSource<T>,\r\n  cb: any,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle {\r\n  if (__DEV__ && !isFunction(cb)) {\r\n    warn(\r\n      `\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n        `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n        `supports \\`watch(source, cb, options?) signature.`\r\n    )\r\n  }\r\n  return doWatch(source as any, cb, options)\r\n}\r\n\r\nfunction doWatch(\r\n  source: WatchSource | WatchSource[] | WatchEffect | object,\r\n  cb: WatchCallback | null,\r\n  { immediate, deep, flush, onTrack, onTrigger }: WatchOptions = EMPTY_OBJ\r\n): WatchStopHandle {\r\n  if (__DEV__ && !cb) {\r\n    if (immediate !== undefined) {\r\n      warn(\r\n        `watch() \"immediate\" option is only respected when using the ` +\r\n          `watch(source, callback, options?) signature.`\r\n      )\r\n    }\r\n    if (deep !== undefined) {\r\n      warn(\r\n        `watch() \"deep\" option is only respected when using the ` +\r\n          `watch(source, callback, options?) signature.`\r\n      )\r\n    }\r\n  }\r\n\r\n  const warnInvalidSource = (s: unknown) => {\r\n    warn(\r\n      `Invalid watch source: `,\r\n      s,\r\n      `A watch source can only be a getter/effect function, a ref, ` +\r\n        `a reactive object, or an array of these types.`\r\n    )\r\n  }\r\n\r\n  const instance = currentInstance\r\n  let getter: () => any\r\n  let forceTrigger = false\r\n  let isMultiSource = false\r\n\r\n  if (isRef(source)) {\r\n    getter = () => source.value\r\n    forceTrigger = isShallow(source)\r\n  } else if (isReactive(source)) {\r\n    getter = () => source\r\n    deep = true\r\n  } else if (isArray(source)) {\r\n    isMultiSource = true\r\n    forceTrigger = source.some(s => isReactive(s) || isShallow(s))\r\n    getter = () =>\r\n      source.map(s => {\r\n        if (isRef(s)) {\r\n          return s.value\r\n        } else if (isReactive(s)) {\r\n          return traverse(s)\r\n        } else if (isFunction(s)) {\r\n          return callWithErrorHandling(s, instance, ErrorCodes.WATCH_GETTER)\r\n        } else {\r\n          __DEV__ && warnInvalidSource(s)\r\n        }\r\n      })\r\n  } else if (isFunction(source)) {\r\n    if (cb) {\r\n      // getter with cb\r\n      getter = () =>\r\n        callWithErrorHandling(source, instance, ErrorCodes.WATCH_GETTER)\r\n    } else {\r\n      // no cb -> simple effect\r\n      getter = () => {\r\n        if (instance && instance.isUnmounted) {\r\n          return\r\n        }\r\n        if (cleanup) {\r\n          cleanup()\r\n        }\r\n        return callWithAsyncErrorHandling(\r\n          source,\r\n          instance,\r\n          ErrorCodes.WATCH_CALLBACK,\r\n          [onCleanup]\r\n        )\r\n      }\r\n    }\r\n  } else {\r\n    getter = NOOP\r\n    __DEV__ && warnInvalidSource(source)\r\n  }\r\n\r\n  // 2.x array mutation watch compat\r\n  if (__COMPAT__ && cb && !deep) {\r\n    const baseGetter = getter\r\n    getter = () => {\r\n      const val = baseGetter()\r\n      if (\r\n        isArray(val) &&\r\n        checkCompatEnabled(DeprecationTypes.WATCH_ARRAY, instance)\r\n      ) {\r\n        traverse(val)\r\n      }\r\n      return val\r\n    }\r\n  }\r\n\r\n  if (cb && deep) {\r\n    const baseGetter = getter\r\n    getter = () => traverse(baseGetter())\r\n  }\r\n\r\n  let cleanup: () => void\r\n  let onCleanup: OnCleanup = (fn: () => void) => {\r\n    cleanup = effect.onStop = () => {\r\n      callWithErrorHandling(fn, instance, ErrorCodes.WATCH_CLEANUP)\r\n    }\r\n  }\r\n\r\n  // in SSR there is no need to setup an actual effect, and it should be noop\r\n  // unless it's eager\r\n  if (__SSR__ && isInSSRComponentSetup) {\r\n    // we will also not call the invalidate callback (+ runner is not set up)\r\n    onCleanup = NOOP\r\n    if (!cb) {\r\n      getter()\r\n    } else if (immediate) {\r\n      callWithAsyncErrorHandling(cb, instance, ErrorCodes.WATCH_CALLBACK, [\r\n        getter(),\r\n        isMultiSource ? [] : undefined,\r\n        onCleanup\r\n      ])\r\n    }\r\n    return NOOP\r\n  }\r\n\r\n  let oldValue = isMultiSource ? [] : INITIAL_WATCHER_VALUE\r\n  const job: SchedulerJob = () => {\r\n    if (!effect.active) {\r\n      return\r\n    }\r\n    if (cb) {\r\n      // watch(source, cb)\r\n      const newValue = effect.run()\r\n      if (\r\n        deep ||\r\n        forceTrigger ||\r\n        (isMultiSource\r\n          ? (newValue as any[]).some((v, i) =>\r\n              hasChanged(v, (oldValue as any[])[i])\r\n            )\r\n          : hasChanged(newValue, oldValue)) ||\r\n        (__COMPAT__ &&\r\n          isArray(newValue) &&\r\n          isCompatEnabled(DeprecationTypes.WATCH_ARRAY, instance))\r\n      ) {\r\n        // cleanup before running cb again\r\n        if (cleanup) {\r\n          cleanup()\r\n        }\r\n        callWithAsyncErrorHandling(cb, instance, ErrorCodes.WATCH_CALLBACK, [\r\n          newValue,\r\n          // pass undefined as the old value when it's changed for the first time\r\n          oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n          onCleanup\r\n        ])\r\n        oldValue = newValue\r\n      }\r\n    } else {\r\n      // watchEffect\r\n      effect.run()\r\n    }\r\n  }\r\n\r\n  // important: mark the job as a watcher callback so that scheduler knows\r\n  // it is allowed to self-trigger (#1727)\r\n  job.allowRecurse = !!cb\r\n\r\n  let scheduler: EffectScheduler\r\n  if (flush === 'sync') {\r\n    scheduler = job as any // the scheduler function gets called directly\r\n  } else if (flush === 'post') {\r\n    scheduler = () => queuePostRenderEffect(job, instance && instance.suspense)\r\n  } else {\r\n    // default: 'pre'\r\n    scheduler = () => queuePreFlushCb(job)\r\n  }\r\n\r\n  const effect = new ReactiveEffect(getter, scheduler)\r\n\r\n  if (__DEV__) {\r\n    effect.onTrack = onTrack\r\n    effect.onTrigger = onTrigger\r\n  }\r\n\r\n  // initial run\r\n  if (cb) {\r\n    if (immediate) {\r\n      job()\r\n    } else {\r\n      oldValue = effect.run()\r\n    }\r\n  } else if (flush === 'post') {\r\n    queuePostRenderEffect(\r\n      effect.run.bind(effect),\r\n      instance && instance.suspense\r\n    )\r\n  } else {\r\n    effect.run()\r\n  }\r\n\r\n  return () => {\r\n    effect.stop()\r\n    if (instance && instance.scope) {\r\n      remove(instance.scope.effects!, effect)\r\n    }\r\n  }\r\n}\r\n\r\n// this.$watch\r\nexport function instanceWatch(\r\n  this: ComponentInternalInstance,\r\n  source: string | Function,\r\n  value: WatchCallback | ObjectWatchOptionItem,\r\n  options?: WatchOptions\r\n): WatchStopHandle {\r\n  const publicThis = this.proxy as any\r\n  const getter = isString(source)\r\n    ? source.includes('.')\r\n      ? createPathGetter(publicThis, source)\r\n      : () => publicThis[source]\r\n    : source.bind(publicThis, publicThis)\r\n  let cb\r\n  if (isFunction(value)) {\r\n    cb = value\r\n  } else {\r\n    cb = value.handler as Function\r\n    options = value\r\n  }\r\n  const cur = currentInstance\r\n  setCurrentInstance(this)\r\n  const res = doWatch(getter, cb.bind(publicThis), options)\r\n  if (cur) {\r\n    setCurrentInstance(cur)\r\n  } else {\r\n    unsetCurrentInstance()\r\n  }\r\n  return res\r\n}\r\n\r\nexport function createPathGetter(ctx: any, path: string) {\r\n  const segments = path.split('.')\r\n  return () => {\r\n    let cur = ctx\r\n    for (let i = 0; i < segments.length && cur; i++) {\r\n      cur = cur[segments[i]]\r\n    }\r\n    return cur\r\n  }\r\n}\r\n\r\nexport function traverse(value: unknown, seen?: Set<unknown>) {\r\n  if (!isObject(value) || (value as any)[ReactiveFlags.SKIP]) {\r\n    return value\r\n  }\r\n  seen = seen || new Set()\r\n  if (seen.has(value)) {\r\n    return value\r\n  }\r\n  seen.add(value)\r\n  if (isRef(value)) {\r\n    traverse(value.value, seen)\r\n  } else if (isArray(value)) {\r\n    for (let i = 0; i < value.length; i++) {\r\n      traverse(value[i], seen)\r\n    }\r\n  } else if (isSet(value) || isMap(value)) {\r\n    value.forEach((v: any) => {\r\n      traverse(v, seen)\r\n    })\r\n  } else if (isPlainObject(value)) {\r\n    for (const key in value) {\r\n      traverse((value as any)[key], seen)\r\n    }\r\n  }\r\n  return value\r\n}\r\n","import {\r\n  getCurrentInstance,\r\n  SetupContext,\r\n  ComponentInternalInstance,\r\n  ComponentOptions\r\n} from '../component'\r\nimport {\r\n  cloneVNode,\r\n  Comment,\r\n  isSameVNodeType,\r\n  VNode,\r\n  VNodeArrayChildren,\r\n  Fragment\r\n} from '../vnode'\r\nimport { warn } from '../warning'\r\nimport { isKeepAlive } from './KeepAlive'\r\nimport { toRaw } from '@vue/reactivity'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from '../errorHandling'\r\nimport { ShapeFlags, PatchFlags, isArray } from '@vue/shared'\r\nimport { onBeforeUnmount, onMounted } from '../apiLifecycle'\r\nimport { RendererElement } from '../renderer'\r\n\r\ntype Hook<T = () => void> = T | T[]\r\n\r\nexport interface BaseTransitionProps<HostElement = RendererElement> {\r\n  mode?: 'in-out' | 'out-in' | 'default'\r\n  appear?: boolean\r\n\r\n  // If true, indicates this is a transition that doesn't actually insert/remove\r\n  // the element, but toggles the show / hidden status instead.\r\n  // The transition hooks are injected, but will be skipped by the renderer.\r\n  // Instead, a custom directive can control the transition by calling the\r\n  // injected hooks (e.g. v-show).\r\n  persisted?: boolean\r\n\r\n  // Hooks. Using camel case for easier usage in render functions & JSX.\r\n  // In templates these can be written as @before-enter=\"xxx\" as prop names\r\n  // are camelized.\r\n  onBeforeEnter?: Hook<(el: HostElement) => void>\r\n  onEnter?: Hook<(el: HostElement, done: () => void) => void>\r\n  onAfterEnter?: Hook<(el: HostElement) => void>\r\n  onEnterCancelled?: Hook<(el: HostElement) => void>\r\n  // leave\r\n  onBeforeLeave?: Hook<(el: HostElement) => void>\r\n  onLeave?: Hook<(el: HostElement, done: () => void) => void>\r\n  onAfterLeave?: Hook<(el: HostElement) => void>\r\n  onLeaveCancelled?: Hook<(el: HostElement) => void> // only fired in persisted mode\r\n  // appear\r\n  onBeforeAppear?: Hook<(el: HostElement) => void>\r\n  onAppear?: Hook<(el: HostElement, done: () => void) => void>\r\n  onAfterAppear?: Hook<(el: HostElement) => void>\r\n  onAppearCancelled?: Hook<(el: HostElement) => void>\r\n}\r\n\r\nexport interface TransitionHooks<\r\n  HostElement extends RendererElement = RendererElement\r\n> {\r\n  mode: BaseTransitionProps['mode']\r\n  persisted: boolean\r\n  beforeEnter(el: HostElement): void\r\n  enter(el: HostElement): void\r\n  leave(el: HostElement, remove: () => void): void\r\n  clone(vnode: VNode): TransitionHooks<HostElement>\r\n  // optional\r\n  afterLeave?(): void\r\n  delayLeave?(\r\n    el: HostElement,\r\n    earlyRemove: () => void,\r\n    delayedLeave: () => void\r\n  ): void\r\n  delayedLeave?(): void\r\n}\r\n\r\nexport type TransitionHookCaller = <T extends any[] = [el: any]>(\r\n  hook: Hook<(...args: T) => void> | undefined,\r\n  args?: T\r\n) => void\r\n\r\nexport type PendingCallback = (cancelled?: boolean) => void\r\n\r\nexport interface TransitionState {\r\n  isMounted: boolean\r\n  isLeaving: boolean\r\n  isUnmounting: boolean\r\n  // Track pending leave callbacks for children of the same key.\r\n  // This is used to force remove leaving a child when a new copy is entering.\r\n  leavingVNodes: Map<any, Record<string, VNode>>\r\n}\r\n\r\nexport interface TransitionElement {\r\n  // in persisted mode (e.g. v-show), the same element is toggled, so the\r\n  // pending enter/leave callbacks may need to be cancelled if the state is toggled\r\n  // before it finishes.\r\n  _enterCb?: PendingCallback\r\n  _leaveCb?: PendingCallback\r\n}\r\n\r\nexport function useTransitionState(): TransitionState {\r\n  const state: TransitionState = {\r\n    isMounted: false,\r\n    isLeaving: false,\r\n    isUnmounting: false,\r\n    leavingVNodes: new Map()\r\n  }\r\n  onMounted(() => {\r\n    state.isMounted = true\r\n  })\r\n  onBeforeUnmount(() => {\r\n    state.isUnmounting = true\r\n  })\r\n  return state\r\n}\r\n\r\nconst TransitionHookValidator = [Function, Array]\r\n\r\nconst BaseTransitionImpl: ComponentOptions = {\r\n  name: `BaseTransition`,\r\n\r\n  props: {\r\n    mode: String,\r\n    appear: Boolean,\r\n    persisted: Boolean,\r\n    // enter\r\n    onBeforeEnter: TransitionHookValidator,\r\n    onEnter: TransitionHookValidator,\r\n    onAfterEnter: TransitionHookValidator,\r\n    onEnterCancelled: TransitionHookValidator,\r\n    // leave\r\n    onBeforeLeave: TransitionHookValidator,\r\n    onLeave: TransitionHookValidator,\r\n    onAfterLeave: TransitionHookValidator,\r\n    onLeaveCancelled: TransitionHookValidator,\r\n    // appear\r\n    onBeforeAppear: TransitionHookValidator,\r\n    onAppear: TransitionHookValidator,\r\n    onAfterAppear: TransitionHookValidator,\r\n    onAppearCancelled: TransitionHookValidator\r\n  },\r\n\r\n  setup(props: BaseTransitionProps, { slots }: SetupContext) {\r\n    const instance = getCurrentInstance()!\r\n    const state = useTransitionState()\r\n\r\n    let prevTransitionKey: any\r\n\r\n    return () => {\r\n      const children =\r\n        slots.default && getTransitionRawChildren(slots.default(), true)\r\n      if (!children || !children.length) {\r\n        return\r\n      }\r\n\r\n      let child: VNode = children[0]\r\n      if (children.length > 1) {\r\n        let hasFound = false\r\n        // locate first non-comment child\r\n        for (const c of children) {\r\n          if (c.type !== Comment) {\r\n            if (__DEV__ && hasFound) {\r\n              // warn more than one non-comment child\r\n              warn(\r\n                '<transition> can only be used on a single element or component. ' +\r\n                  'Use <transition-group> for lists.'\r\n              )\r\n              break\r\n            }\r\n            child = c\r\n            hasFound = true\r\n            if (!__DEV__) break\r\n          }\r\n        }\r\n      }\r\n\r\n      // there's no need to track reactivity for these props so use the raw\r\n      // props for a bit better perf\r\n      const rawProps = toRaw(props)\r\n      const { mode } = rawProps\r\n      // check mode\r\n      if (\r\n        __DEV__ &&\r\n        mode &&\r\n        mode !== 'in-out' &&\r\n        mode !== 'out-in' &&\r\n        mode !== 'default'\r\n      ) {\r\n        warn(`invalid <transition> mode: ${mode}`)\r\n      }\r\n\r\n      if (state.isLeaving) {\r\n        return emptyPlaceholder(child)\r\n      }\r\n\r\n      // in the case of <transition><keep-alive/></transition>, we need to\r\n      // compare the type of the kept-alive children.\r\n      const innerChild = getKeepAliveChild(child)\r\n      if (!innerChild) {\r\n        return emptyPlaceholder(child)\r\n      }\r\n\r\n      const enterHooks = resolveTransitionHooks(\r\n        innerChild,\r\n        rawProps,\r\n        state,\r\n        instance\r\n      )\r\n      setTransitionHooks(innerChild, enterHooks)\r\n\r\n      const oldChild = instance.subTree\r\n      const oldInnerChild = oldChild && getKeepAliveChild(oldChild)\r\n\r\n      let transitionKeyChanged = false\r\n      const { getTransitionKey } = innerChild.type as any\r\n      if (getTransitionKey) {\r\n        const key = getTransitionKey()\r\n        if (prevTransitionKey === undefined) {\r\n          prevTransitionKey = key\r\n        } else if (key !== prevTransitionKey) {\r\n          prevTransitionKey = key\r\n          transitionKeyChanged = true\r\n        }\r\n      }\r\n\r\n      // handle mode\r\n      if (\r\n        oldInnerChild &&\r\n        oldInnerChild.type !== Comment &&\r\n        (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)\r\n      ) {\r\n        const leavingHooks = resolveTransitionHooks(\r\n          oldInnerChild,\r\n          rawProps,\r\n          state,\r\n          instance\r\n        )\r\n        // update old tree's hooks in case of dynamic transition\r\n        setTransitionHooks(oldInnerChild, leavingHooks)\r\n        // switching between different views\r\n        if (mode === 'out-in') {\r\n          state.isLeaving = true\r\n          // return placeholder node and queue update when leave finishes\r\n          leavingHooks.afterLeave = () => {\r\n            state.isLeaving = false\r\n            instance.update()\r\n          }\r\n          return emptyPlaceholder(child)\r\n        } else if (mode === 'in-out' && innerChild.type !== Comment) {\r\n          leavingHooks.delayLeave = (\r\n            el: TransitionElement,\r\n            earlyRemove,\r\n            delayedLeave\r\n          ) => {\r\n            const leavingVNodesCache = getLeavingNodesForType(\r\n              state,\r\n              oldInnerChild\r\n            )\r\n            leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild\r\n            // early removal callback\r\n            el._leaveCb = () => {\r\n              earlyRemove()\r\n              el._leaveCb = undefined\r\n              delete enterHooks.delayedLeave\r\n            }\r\n            enterHooks.delayedLeave = delayedLeave\r\n          }\r\n        }\r\n      }\r\n\r\n      return child\r\n    }\r\n  }\r\n}\r\n\r\nif (__COMPAT__) {\r\n  BaseTransitionImpl.__isBuiltIn = true\r\n}\r\n\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nexport const BaseTransition = BaseTransitionImpl as any as {\r\n  new (): {\r\n    $props: BaseTransitionProps<any>\r\n  }\r\n}\r\n\r\nfunction getLeavingNodesForType(\r\n  state: TransitionState,\r\n  vnode: VNode\r\n): Record<string, VNode> {\r\n  const { leavingVNodes } = state\r\n  let leavingVNodesCache = leavingVNodes.get(vnode.type)!\r\n  if (!leavingVNodesCache) {\r\n    leavingVNodesCache = Object.create(null)\r\n    leavingVNodes.set(vnode.type, leavingVNodesCache)\r\n  }\r\n  return leavingVNodesCache\r\n}\r\n\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nexport function resolveTransitionHooks(\r\n  vnode: VNode,\r\n  props: BaseTransitionProps<any>,\r\n  state: TransitionState,\r\n  instance: ComponentInternalInstance\r\n): TransitionHooks {\r\n  const {\r\n    appear,\r\n    mode,\r\n    persisted = false,\r\n    onBeforeEnter,\r\n    onEnter,\r\n    onAfterEnter,\r\n    onEnterCancelled,\r\n    onBeforeLeave,\r\n    onLeave,\r\n    onAfterLeave,\r\n    onLeaveCancelled,\r\n    onBeforeAppear,\r\n    onAppear,\r\n    onAfterAppear,\r\n    onAppearCancelled\r\n  } = props\r\n  const key = String(vnode.key)\r\n  const leavingVNodesCache = getLeavingNodesForType(state, vnode)\r\n\r\n  const callHook: TransitionHookCaller = (hook, args) => {\r\n    hook &&\r\n      callWithAsyncErrorHandling(\r\n        hook,\r\n        instance,\r\n        ErrorCodes.TRANSITION_HOOK,\r\n        args\r\n      )\r\n  }\r\n\r\n  const callAsyncHook = (\r\n    hook: Hook<(el: any, done: () => void) => void>,\r\n    args: [TransitionElement, () => void]\r\n  ) => {\r\n    const done = args[1]\r\n    callHook(hook, args)\r\n    if (isArray(hook)) {\r\n      if (hook.every(hook => hook.length <= 1)) done()\r\n    } else if (hook.length <= 1) {\r\n      done()\r\n    }\r\n  }\r\n\r\n  const hooks: TransitionHooks<TransitionElement> = {\r\n    mode,\r\n    persisted,\r\n    beforeEnter(el) {\r\n      let hook = onBeforeEnter\r\n      if (!state.isMounted) {\r\n        if (appear) {\r\n          hook = onBeforeAppear || onBeforeEnter\r\n        } else {\r\n          return\r\n        }\r\n      }\r\n      // for same element (v-show)\r\n      if (el._leaveCb) {\r\n        el._leaveCb(true /* cancelled */)\r\n      }\r\n      // for toggled element with same key (v-if)\r\n      const leavingVNode = leavingVNodesCache[key]\r\n      if (\r\n        leavingVNode &&\r\n        isSameVNodeType(vnode, leavingVNode) &&\r\n        leavingVNode.el!._leaveCb\r\n      ) {\r\n        // force early removal (not cancelled)\r\n        leavingVNode.el!._leaveCb()\r\n      }\r\n      callHook(hook, [el])\r\n    },\r\n\r\n    enter(el) {\r\n      let hook = onEnter\r\n      let afterHook = onAfterEnter\r\n      let cancelHook = onEnterCancelled\r\n      if (!state.isMounted) {\r\n        if (appear) {\r\n          hook = onAppear || onEnter\r\n          afterHook = onAfterAppear || onAfterEnter\r\n          cancelHook = onAppearCancelled || onEnterCancelled\r\n        } else {\r\n          return\r\n        }\r\n      }\r\n      let called = false\r\n      const done = (el._enterCb = (cancelled?) => {\r\n        if (called) return\r\n        called = true\r\n        if (cancelled) {\r\n          callHook(cancelHook, [el])\r\n        } else {\r\n          callHook(afterHook, [el])\r\n        }\r\n        if (hooks.delayedLeave) {\r\n          hooks.delayedLeave()\r\n        }\r\n        el._enterCb = undefined\r\n      })\r\n      if (hook) {\r\n        callAsyncHook(hook, [el, done])\r\n      } else {\r\n        done()\r\n      }\r\n    },\r\n\r\n    leave(el, remove) {\r\n      const key = String(vnode.key)\r\n      if (el._enterCb) {\r\n        el._enterCb(true /* cancelled */)\r\n      }\r\n      if (state.isUnmounting) {\r\n        return remove()\r\n      }\r\n      callHook(onBeforeLeave, [el])\r\n      let called = false\r\n      const done = (el._leaveCb = (cancelled?) => {\r\n        if (called) return\r\n        called = true\r\n        remove()\r\n        if (cancelled) {\r\n          callHook(onLeaveCancelled, [el])\r\n        } else {\r\n          callHook(onAfterLeave, [el])\r\n        }\r\n        el._leaveCb = undefined\r\n        if (leavingVNodesCache[key] === vnode) {\r\n          delete leavingVNodesCache[key]\r\n        }\r\n      })\r\n      leavingVNodesCache[key] = vnode\r\n      if (onLeave) {\r\n        callAsyncHook(onLeave, [el, done])\r\n      } else {\r\n        done()\r\n      }\r\n    },\r\n\r\n    clone(vnode) {\r\n      return resolveTransitionHooks(vnode, props, state, instance)\r\n    }\r\n  }\r\n\r\n  return hooks\r\n}\r\n\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode: VNode): VNode | undefined {\r\n  if (isKeepAlive(vnode)) {\r\n    vnode = cloneVNode(vnode)\r\n    vnode.children = null\r\n    return vnode\r\n  }\r\n}\r\n\r\nfunction getKeepAliveChild(vnode: VNode): VNode | undefined {\r\n  return isKeepAlive(vnode)\r\n    ? vnode.children\r\n      ? ((vnode.children as VNodeArrayChildren)[0] as VNode)\r\n      : undefined\r\n    : vnode\r\n}\r\n\r\nexport function setTransitionHooks(vnode: VNode, hooks: TransitionHooks) {\r\n  if (vnode.shapeFlag & ShapeFlags.COMPONENT && vnode.component) {\r\n    setTransitionHooks(vnode.component.subTree, hooks)\r\n  } else if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n    vnode.ssContent!.transition = hooks.clone(vnode.ssContent!)\r\n    vnode.ssFallback!.transition = hooks.clone(vnode.ssFallback!)\r\n  } else {\r\n    vnode.transition = hooks\r\n  }\r\n}\r\n\r\nexport function getTransitionRawChildren(\r\n  children: VNode[],\r\n  keepComment: boolean = false,\r\n  parentKey?: VNode['key']\r\n): VNode[] {\r\n  let ret: VNode[] = []\r\n  let keyedFragmentCount = 0\r\n  for (let i = 0; i < children.length; i++) {\r\n    let child = children[i]\r\n    // #5360 inherit parent key in case of <template v-for>\r\n    const key =\r\n      parentKey == null\r\n        ? child.key\r\n        : String(parentKey) + String(child.key != null ? child.key : i)\r\n    // handle fragment children case, e.g. v-for\r\n    if (child.type === Fragment) {\r\n      if (child.patchFlag & PatchFlags.KEYED_FRAGMENT) keyedFragmentCount++\r\n      ret = ret.concat(\r\n        getTransitionRawChildren(child.children as VNode[], keepComment, key)\r\n      )\r\n    }\r\n    // comment placeholders should be skipped, e.g. v-if\r\n    else if (keepComment || child.type !== Comment) {\r\n      ret.push(key != null ? cloneVNode(child, { key }) : child)\r\n    }\r\n  }\r\n  // #1126 if a transition children list contains multiple sub fragments, these\r\n  // fragments will be merged into a flat children array. Since each v-for\r\n  // fragment may contain different static bindings inside, we need to de-op\r\n  // these children to force full diffs to ensure correct behavior.\r\n  if (keyedFragmentCount > 1) {\r\n    for (let i = 0; i < ret.length; i++) {\r\n      ret[i].patchFlag = PatchFlags.BAIL\r\n    }\r\n  }\r\n  return ret\r\n}\r\n","import {\r\n  ComputedOptions,\r\n  MethodOptions,\r\n  ComponentOptionsWithoutProps,\r\n  ComponentOptionsWithArrayProps,\r\n  ComponentOptionsWithObjectProps,\r\n  ComponentOptionsMixin,\r\n  RenderFunction,\r\n  ComponentOptionsBase\r\n} from './componentOptions'\r\nimport {\r\n  SetupContext,\r\n  AllowedComponentProps,\r\n  ComponentCustomProps\r\n} from './component'\r\nimport {\r\n  ExtractPropTypes,\r\n  ComponentPropsOptions,\r\n  ExtractDefaultPropTypes\r\n} from './componentProps'\r\nimport { EmitsOptions, EmitsToProps } from './componentEmits'\r\nimport { isFunction } from '@vue/shared'\r\nimport { VNodeProps } from './vnode'\r\nimport {\r\n  CreateComponentPublicInstance,\r\n  ComponentPublicInstanceConstructor\r\n} from './componentPublicInstance'\r\n\r\nexport type PublicProps = VNodeProps &\r\n  AllowedComponentProps &\r\n  ComponentCustomProps\r\n\r\nexport type DefineComponent<\r\n  PropsOrPropOptions = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions,\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  EE extends string = string,\r\n  PP = PublicProps,\r\n  Props = Readonly<\r\n    PropsOrPropOptions extends ComponentPropsOptions\r\n      ? ExtractPropTypes<PropsOrPropOptions>\r\n      : PropsOrPropOptions\r\n  > &\r\n    ({} extends E ? {} : EmitsToProps<E>),\r\n  Defaults = ExtractDefaultPropTypes<PropsOrPropOptions>\r\n> = ComponentPublicInstanceConstructor<\r\n  CreateComponentPublicInstance<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    PP & Props,\r\n    Defaults,\r\n    true\r\n  > &\r\n    Props\r\n> &\r\n  ComponentOptionsBase<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE,\r\n    Defaults\r\n  > &\r\n  PP\r\n\r\n// defineComponent is a utility that is primarily used for type inference\r\n// when declaring components. Type inference is provided in the component\r\n// options (provided as the argument). The returned value has artificial types\r\n// for TSX / manual render function / IDE support.\r\n\r\n// overload 1: direct setup function\r\n// (uses user defined props interface)\r\nexport function defineComponent<Props, RawBindings = object>(\r\n  setup: (\r\n    props: Readonly<Props>,\r\n    ctx: SetupContext\r\n  ) => RawBindings | RenderFunction\r\n): DefineComponent<Props, RawBindings>\r\n\r\n// overload 2: object format with no props\r\n// (uses user defined props interface)\r\n// return type is for Vetur and TSX support\r\nexport function defineComponent<\r\n  Props = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithoutProps<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n): DefineComponent<Props, RawBindings, D, C, M, Mixin, Extends, E, EE>\r\n\r\n// overload 3: object format with array props declaration\r\n// props inferred as { [key in PropNames]?: any }\r\n// return type is for Vetur and TSX support\r\nexport function defineComponent<\r\n  PropNames extends string,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithArrayProps<\r\n    PropNames,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n): DefineComponent<\r\n  Readonly<{ [key in PropNames]?: any }>,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE\r\n>\r\n\r\n// overload 4: object format with object props declaration\r\n// see `ExtractPropTypes` in ./componentProps.ts\r\nexport function defineComponent<\r\n  // the Readonly constraint allows TS to treat the type of { required: true }\r\n  // as constant instead of boolean.\r\n  PropsOptions extends Readonly<ComponentPropsOptions>,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithObjectProps<\r\n    PropsOptions,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n): DefineComponent<PropsOptions, RawBindings, D, C, M, Mixin, Extends, E, EE>\r\n\r\n// implementation, close to no-op\r\nexport function defineComponent(options: unknown) {\r\n  return isFunction(options) ? { setup: options, name: options.name } : options\r\n}\r\n","import {\r\n  Component,\r\n  ConcreteComponent,\r\n  currentInstance,\r\n  ComponentInternalInstance,\r\n  isInSSRComponentSetup,\r\n  ComponentOptions\r\n} from './component'\r\nimport { isFunction, isObject } from '@vue/shared'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { createVNode, VNode } from './vnode'\r\nimport { defineComponent } from './apiDefineComponent'\r\nimport { warn } from './warning'\r\nimport { ref } from '@vue/reactivity'\r\nimport { handleError, ErrorCodes } from './errorHandling'\r\nimport { isKeepAlive } from './components/KeepAlive'\r\nimport { queueJob } from './scheduler'\r\n\r\nexport type AsyncComponentResolveResult<T = Component> = T | { default: T } // es modules\r\n\r\nexport type AsyncComponentLoader<T = any> = () => Promise<\r\n  AsyncComponentResolveResult<T>\r\n>\r\n\r\nexport interface AsyncComponentOptions<T = any> {\r\n  loader: AsyncComponentLoader<T>\r\n  loadingComponent?: Component\r\n  errorComponent?: Component\r\n  delay?: number\r\n  timeout?: number\r\n  suspensible?: boolean\r\n  onError?: (\r\n    error: Error,\r\n    retry: () => void,\r\n    fail: () => void,\r\n    attempts: number\r\n  ) => any\r\n}\r\n\r\nexport const isAsyncWrapper = (i: ComponentInternalInstance | VNode): boolean =>\r\n  !!(i.type as ComponentOptions).__asyncLoader\r\n\r\nexport function defineAsyncComponent<\r\n  T extends Component = { new (): ComponentPublicInstance }\r\n>(source: AsyncComponentLoader<T> | AsyncComponentOptions<T>): T {\r\n  if (isFunction(source)) {\r\n    source = { loader: source }\r\n  }\r\n\r\n  const {\r\n    loader,\r\n    loadingComponent,\r\n    errorComponent,\r\n    delay = 200,\r\n    timeout, // undefined = never times out\r\n    suspensible = true,\r\n    onError: userOnError\r\n  } = source\r\n\r\n  let pendingRequest: Promise<ConcreteComponent> | null = null\r\n  let resolvedComp: ConcreteComponent | undefined\r\n\r\n  let retries = 0\r\n  const retry = () => {\r\n    retries++\r\n    pendingRequest = null\r\n    return load()\r\n  }\r\n\r\n  const load = (): Promise<ConcreteComponent> => {\r\n    let thisRequest: Promise<ConcreteComponent>\r\n    return (\r\n      pendingRequest ||\r\n      (thisRequest = pendingRequest =\r\n        loader()\r\n          .catch(err => {\r\n            err = err instanceof Error ? err : new Error(String(err))\r\n            if (userOnError) {\r\n              return new Promise((resolve, reject) => {\r\n                const userRetry = () => resolve(retry())\r\n                const userFail = () => reject(err)\r\n                userOnError(err, userRetry, userFail, retries + 1)\r\n              })\r\n            } else {\r\n              throw err\r\n            }\r\n          })\r\n          .then((comp: any) => {\r\n            if (thisRequest !== pendingRequest && pendingRequest) {\r\n              return pendingRequest\r\n            }\r\n            if (__DEV__ && !comp) {\r\n              warn(\r\n                `Async component loader resolved to undefined. ` +\r\n                  `If you are using retry(), make sure to return its return value.`\r\n              )\r\n            }\r\n            // interop module default\r\n            if (\r\n              comp &&\r\n              (comp.__esModule || comp[Symbol.toStringTag] === 'Module')\r\n            ) {\r\n              comp = comp.default\r\n            }\r\n            if (__DEV__ && comp && !isObject(comp) && !isFunction(comp)) {\r\n              throw new Error(`Invalid async component load result: ${comp}`)\r\n            }\r\n            resolvedComp = comp\r\n            return comp\r\n          }))\r\n    )\r\n  }\r\n\r\n  return defineComponent({\r\n    name: 'AsyncComponentWrapper',\r\n\r\n    __asyncLoader: load,\r\n\r\n    get __asyncResolved() {\r\n      return resolvedComp\r\n    },\r\n\r\n    setup() {\r\n      const instance = currentInstance!\r\n\r\n      // already resolved\r\n      if (resolvedComp) {\r\n        return () => createInnerComp(resolvedComp!, instance)\r\n      }\r\n\r\n      const onError = (err: Error) => {\r\n        pendingRequest = null\r\n        handleError(\r\n          err,\r\n          instance,\r\n          ErrorCodes.ASYNC_COMPONENT_LOADER,\r\n          !errorComponent /* do not throw in dev if user provided error component */\r\n        )\r\n      }\r\n\r\n      // suspense-controlled or SSR.\r\n      if (\r\n        (__FEATURE_SUSPENSE__ && suspensible && instance.suspense) ||\r\n        (__SSR__ && isInSSRComponentSetup)\r\n      ) {\r\n        return load()\r\n          .then(comp => {\r\n            return () => createInnerComp(comp, instance)\r\n          })\r\n          .catch(err => {\r\n            onError(err)\r\n            return () =>\r\n              errorComponent\r\n                ? createVNode(errorComponent as ConcreteComponent, {\r\n                    error: err\r\n                  })\r\n                : null\r\n          })\r\n      }\r\n\r\n      const loaded = ref(false)\r\n      const error = ref()\r\n      const delayed = ref(!!delay)\r\n\r\n      if (delay) {\r\n        setTimeout(() => {\r\n          delayed.value = false\r\n        }, delay)\r\n      }\r\n\r\n      if (timeout != null) {\r\n        setTimeout(() => {\r\n          if (!loaded.value && !error.value) {\r\n            const err = new Error(\r\n              `Async component timed out after ${timeout}ms.`\r\n            )\r\n            onError(err)\r\n            error.value = err\r\n          }\r\n        }, timeout)\r\n      }\r\n\r\n      load()\r\n        .then(() => {\r\n          loaded.value = true\r\n          if (instance.parent && isKeepAlive(instance.parent.vnode)) {\r\n            // parent is keep-alive, force update so the loaded component's\r\n            // name is taken into account\r\n            queueJob(instance.parent.update)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          onError(err)\r\n          error.value = err\r\n        })\r\n\r\n      return () => {\r\n        if (loaded.value && resolvedComp) {\r\n          return createInnerComp(resolvedComp, instance)\r\n        } else if (error.value && errorComponent) {\r\n          return createVNode(errorComponent as ConcreteComponent, {\r\n            error: error.value\r\n          })\r\n        } else if (loadingComponent && !delayed.value) {\r\n          return createVNode(loadingComponent as ConcreteComponent)\r\n        }\r\n      }\r\n    }\r\n  }) as T\r\n}\r\n\r\nfunction createInnerComp(\r\n  comp: ConcreteComponent,\r\n  {\r\n    vnode: { ref, props, children, shapeFlag },\r\n    parent\r\n  }: ComponentInternalInstance\r\n) {\r\n  const vnode = createVNode(comp, props, children)\r\n  // ensure inner component inherits the async wrapper's ref owner\r\n  vnode.ref = ref\r\n  return vnode\r\n}\r\n","import {\r\n  ConcreteComponent,\r\n  getCurrentInstance,\r\n  SetupContext,\r\n  ComponentInternalInstance,\r\n  LifecycleHooks,\r\n  currentInstance,\r\n  getComponentName,\r\n  ComponentOptions\r\n} from '../component'\r\nimport {\r\n  VNode,\r\n  cloneVNode,\r\n  isVNode,\r\n  VNodeProps,\r\n  invokeVNodeHook\r\n} from '../vnode'\r\nimport { warn } from '../warning'\r\nimport {\r\n  onBeforeUnmount,\r\n  injectHook,\r\n  onUnmounted,\r\n  onMounted,\r\n  onUpdated\r\n} from '../apiLifecycle'\r\nimport {\r\n  isString,\r\n  isArray,\r\n  ShapeFlags,\r\n  remove,\r\n  invokeArrayFns\r\n} from '@vue/shared'\r\nimport { watch } from '../apiWatch'\r\nimport {\r\n  RendererInternals,\r\n  queuePostRenderEffect,\r\n  MoveType,\r\n  RendererElement,\r\n  RendererNode\r\n} from '../renderer'\r\nimport { setTransitionHooks } from './BaseTransition'\r\nimport { ComponentRenderContext } from '../componentPublicInstance'\r\nimport { devtoolsComponentAdded } from '../devtools'\r\nimport { isAsyncWrapper } from '../apiAsyncComponent'\r\nimport { isSuspense } from './Suspense'\r\n\r\ntype MatchPattern = string | RegExp | (string | RegExp)[]\r\n\r\nexport interface KeepAliveProps {\r\n  include?: MatchPattern\r\n  exclude?: MatchPattern\r\n  max?: number | string\r\n}\r\n\r\ntype CacheKey = string | number | symbol | ConcreteComponent\r\ntype Cache = Map<CacheKey, VNode>\r\ntype Keys = Set<CacheKey>\r\n\r\nexport interface KeepAliveContext extends ComponentRenderContext {\r\n  renderer: RendererInternals\r\n  activate: (\r\n    vnode: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    isSVG: boolean,\r\n    optimized: boolean\r\n  ) => void\r\n  deactivate: (vnode: VNode) => void\r\n}\r\n\r\nexport const isKeepAlive = (vnode: VNode): boolean =>\r\n  (vnode.type as any).__isKeepAlive\r\n\r\nconst KeepAliveImpl: ComponentOptions = {\r\n  name: `KeepAlive`,\r\n\r\n  // Marker for special handling inside the renderer. We are not using a ===\r\n  // check directly on KeepAlive in the renderer, because importing it directly\r\n  // would prevent it from being tree-shaken.\r\n  __isKeepAlive: true,\r\n\r\n  props: {\r\n    include: [String, RegExp, Array],\r\n    exclude: [String, RegExp, Array],\r\n    max: [String, Number]\r\n  },\r\n\r\n  setup(props: KeepAliveProps, { slots }: SetupContext) {\r\n    const instance = getCurrentInstance()!\r\n    // KeepAlive communicates with the instantiated renderer via the\r\n    // ctx where the renderer passes in its internals,\r\n    // and the KeepAlive instance exposes activate/deactivate implementations.\r\n    // The whole point of this is to avoid importing KeepAlive directly in the\r\n    // renderer to facilitate tree-shaking.\r\n    const sharedContext = instance.ctx as KeepAliveContext\r\n\r\n    // if the internal renderer is not registered, it indicates that this is server-side rendering,\r\n    // for KeepAlive, we just need to render its children\r\n    if (__SSR__ && !sharedContext.renderer) {\r\n      return () => {\r\n        const children = slots.default && slots.default()\r\n        return children && children.length === 1 ? children[0] : children\r\n      }\r\n    }\r\n\r\n    const cache: Cache = new Map()\r\n    const keys: Keys = new Set()\r\n    let current: VNode | null = null\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      ;(instance as any).__v_cache = cache\r\n    }\r\n\r\n    const parentSuspense = instance.suspense\r\n\r\n    const {\r\n      renderer: {\r\n        p: patch,\r\n        m: move,\r\n        um: _unmount,\r\n        o: { createElement }\r\n      }\r\n    } = sharedContext\r\n    const storageContainer = createElement('div')\r\n\r\n    sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n      const instance = vnode.component!\r\n      move(vnode, container, anchor, MoveType.ENTER, parentSuspense)\r\n      // in case props have changed\r\n      patch(\r\n        instance.vnode,\r\n        vnode,\r\n        container,\r\n        anchor,\r\n        instance,\r\n        parentSuspense,\r\n        isSVG,\r\n        vnode.slotScopeIds,\r\n        optimized\r\n      )\r\n      queuePostRenderEffect(() => {\r\n        instance.isDeactivated = false\r\n        if (instance.a) {\r\n          invokeArrayFns(instance.a)\r\n        }\r\n        const vnodeHook = vnode.props && vnode.props.onVnodeMounted\r\n        if (vnodeHook) {\r\n          invokeVNodeHook(vnodeHook, instance.parent, vnode)\r\n        }\r\n      }, parentSuspense)\r\n\r\n      if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n        // Update components tree\r\n        devtoolsComponentAdded(instance)\r\n      }\r\n    }\r\n\r\n    sharedContext.deactivate = (vnode: VNode) => {\r\n      const instance = vnode.component!\r\n      move(vnode, storageContainer, null, MoveType.LEAVE, parentSuspense)\r\n      queuePostRenderEffect(() => {\r\n        if (instance.da) {\r\n          invokeArrayFns(instance.da)\r\n        }\r\n        const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted\r\n        if (vnodeHook) {\r\n          invokeVNodeHook(vnodeHook, instance.parent, vnode)\r\n        }\r\n        instance.isDeactivated = true\r\n      }, parentSuspense)\r\n\r\n      if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n        // Update components tree\r\n        devtoolsComponentAdded(instance)\r\n      }\r\n    }\r\n\r\n    function unmount(vnode: VNode) {\r\n      // reset the shapeFlag so it can be properly unmounted\r\n      resetShapeFlag(vnode)\r\n      _unmount(vnode, instance, parentSuspense, true)\r\n    }\r\n\r\n    function pruneCache(filter?: (name: string) => boolean) {\r\n      cache.forEach((vnode, key) => {\r\n        const name = getComponentName(vnode.type as ConcreteComponent)\r\n        if (name && (!filter || !filter(name))) {\r\n          pruneCacheEntry(key)\r\n        }\r\n      })\r\n    }\r\n\r\n    function pruneCacheEntry(key: CacheKey) {\r\n      const cached = cache.get(key) as VNode\r\n      if (!current || cached.type !== current.type) {\r\n        unmount(cached)\r\n      } else if (current) {\r\n        // current active instance should no longer be kept-alive.\r\n        // we can't unmount it now but it might be later, so reset its flag now.\r\n        resetShapeFlag(current)\r\n      }\r\n      cache.delete(key)\r\n      keys.delete(key)\r\n    }\r\n\r\n    // prune cache on include/exclude prop change\r\n    watch(\r\n      () => [props.include, props.exclude],\r\n      ([include, exclude]) => {\r\n        include && pruneCache(name => matches(include, name))\r\n        exclude && pruneCache(name => !matches(exclude, name))\r\n      },\r\n      // prune post-render after `current` has been updated\r\n      { flush: 'post', deep: true }\r\n    )\r\n\r\n    // cache sub tree after render\r\n    let pendingCacheKey: CacheKey | null = null\r\n    const cacheSubtree = () => {\r\n      // fix #1621, the pendingCacheKey could be 0\r\n      if (pendingCacheKey != null) {\r\n        cache.set(pendingCacheKey, getInnerChild(instance.subTree))\r\n      }\r\n    }\r\n    onMounted(cacheSubtree)\r\n    onUpdated(cacheSubtree)\r\n\r\n    onBeforeUnmount(() => {\r\n      cache.forEach(cached => {\r\n        const { subTree, suspense } = instance\r\n        const vnode = getInnerChild(subTree)\r\n        if (cached.type === vnode.type) {\r\n          // current instance will be unmounted as part of keep-alive's unmount\r\n          resetShapeFlag(vnode)\r\n          // but invoke its deactivated hook here\r\n          const da = vnode.component!.da\r\n          da && queuePostRenderEffect(da, suspense)\r\n          return\r\n        }\r\n        unmount(cached)\r\n      })\r\n    })\r\n\r\n    return () => {\r\n      pendingCacheKey = null\r\n\r\n      if (!slots.default) {\r\n        return null\r\n      }\r\n\r\n      const children = slots.default()\r\n      const rawVNode = children[0]\r\n      if (children.length > 1) {\r\n        if (__DEV__) {\r\n          warn(`KeepAlive should contain exactly one component child.`)\r\n        }\r\n        current = null\r\n        return children\r\n      } else if (\r\n        !isVNode(rawVNode) ||\r\n        (!(rawVNode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) &&\r\n          !(rawVNode.shapeFlag & ShapeFlags.SUSPENSE))\r\n      ) {\r\n        current = null\r\n        return rawVNode\r\n      }\r\n\r\n      let vnode = getInnerChild(rawVNode)\r\n      const comp = vnode.type as ConcreteComponent\r\n\r\n      // for async components, name check should be based in its loaded\r\n      // inner component if available\r\n      const name = getComponentName(\r\n        isAsyncWrapper(vnode)\r\n          ? (vnode.type as ComponentOptions).__asyncResolved || {}\r\n          : comp\r\n      )\r\n\r\n      const { include, exclude, max } = props\r\n\r\n      if (\r\n        (include && (!name || !matches(include, name))) ||\r\n        (exclude && name && matches(exclude, name))\r\n      ) {\r\n        current = vnode\r\n        return rawVNode\r\n      }\r\n\r\n      const key = vnode.key == null ? comp : vnode.key\r\n      const cachedVNode = cache.get(key)\r\n\r\n      // clone vnode if it's reused because we are going to mutate it\r\n      if (vnode.el) {\r\n        vnode = cloneVNode(vnode)\r\n        if (rawVNode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n          rawVNode.ssContent = vnode\r\n        }\r\n      }\r\n      // #1513 it's possible for the returned vnode to be cloned due to attr\r\n      // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n      // that is mounted. Instead of caching it directly, we store the pending\r\n      // key and cache `instance.subTree` (the normalized vnode) in\r\n      // beforeMount/beforeUpdate hooks.\r\n      pendingCacheKey = key\r\n\r\n      if (cachedVNode) {\r\n        // copy over mounted state\r\n        vnode.el = cachedVNode.el\r\n        vnode.component = cachedVNode.component\r\n        if (vnode.transition) {\r\n          // recursively update transition hooks on subTree\r\n          setTransitionHooks(vnode, vnode.transition!)\r\n        }\r\n        // avoid vnode being mounted as fresh\r\n        vnode.shapeFlag |= ShapeFlags.COMPONENT_KEPT_ALIVE\r\n        // make this key the freshest\r\n        keys.delete(key)\r\n        keys.add(key)\r\n      } else {\r\n        keys.add(key)\r\n        // prune oldest entry\r\n        if (max && keys.size > parseInt(max as string, 10)) {\r\n          pruneCacheEntry(keys.values().next().value)\r\n        }\r\n      }\r\n      // avoid vnode being unmounted\r\n      vnode.shapeFlag |= ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\r\n\r\n      current = vnode\r\n      return isSuspense(rawVNode.type) ? rawVNode : vnode\r\n    }\r\n  }\r\n}\r\n\r\nif (__COMPAT__) {\r\n  KeepAliveImpl.__isBuildIn = true\r\n}\r\n\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nexport const KeepAlive = KeepAliveImpl as any as {\r\n  __isKeepAlive: true\r\n  new (): {\r\n    $props: VNodeProps & KeepAliveProps\r\n  }\r\n}\r\n\r\nfunction matches(pattern: MatchPattern, name: string): boolean {\r\n  if (isArray(pattern)) {\r\n    return pattern.some((p: string | RegExp) => matches(p, name))\r\n  } else if (isString(pattern)) {\r\n    return pattern.split(',').includes(name)\r\n  } else if (pattern.test) {\r\n    return pattern.test(name)\r\n  }\r\n  /* istanbul ignore next */\r\n  return false\r\n}\r\n\r\nexport function onActivated(\r\n  hook: Function,\r\n  target?: ComponentInternalInstance | null\r\n) {\r\n  registerKeepAliveHook(hook, LifecycleHooks.ACTIVATED, target)\r\n}\r\n\r\nexport function onDeactivated(\r\n  hook: Function,\r\n  target?: ComponentInternalInstance | null\r\n) {\r\n  registerKeepAliveHook(hook, LifecycleHooks.DEACTIVATED, target)\r\n}\r\n\r\nfunction registerKeepAliveHook(\r\n  hook: Function & { __wdc?: Function },\r\n  type: LifecycleHooks,\r\n  target: ComponentInternalInstance | null = currentInstance\r\n) {\r\n  // cache the deactivate branch check wrapper for injected hooks so the same\r\n  // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n  // deactivation check\".\r\n  const wrappedHook =\r\n    hook.__wdc ||\r\n    (hook.__wdc = () => {\r\n      // only fire the hook if the target instance is NOT in a deactivated branch.\r\n      let current: ComponentInternalInstance | null = target\r\n      while (current) {\r\n        if (current.isDeactivated) {\r\n          return\r\n        }\r\n        current = current.parent\r\n      }\r\n      return hook()\r\n    })\r\n  injectHook(type, wrappedHook, target)\r\n  // In addition to registering it on the target instance, we walk up the parent\r\n  // chain and register it on all ancestor instances that are keep-alive roots.\r\n  // This avoids the need to walk the entire component tree when invoking these\r\n  // hooks, and more importantly, avoids the need to track child components in\r\n  // arrays.\r\n  if (target) {\r\n    let current = target.parent\r\n    while (current && current.parent) {\r\n      if (isKeepAlive(current.parent.vnode)) {\r\n        injectToKeepAliveRoot(wrappedHook, type, target, current)\r\n      }\r\n      current = current.parent\r\n    }\r\n  }\r\n}\r\n\r\nfunction injectToKeepAliveRoot(\r\n  hook: Function & { __weh?: Function },\r\n  type: LifecycleHooks,\r\n  target: ComponentInternalInstance,\r\n  keepAliveRoot: ComponentInternalInstance\r\n) {\r\n  // injectHook wraps the original for error handling, so make sure to remove\r\n  // the wrapped version.\r\n  const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */)\r\n  onUnmounted(() => {\r\n    remove(keepAliveRoot[type]!, injected)\r\n  }, target)\r\n}\r\n\r\nfunction resetShapeFlag(vnode: VNode) {\r\n  let shapeFlag = vnode.shapeFlag\r\n  if (shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE) {\r\n    shapeFlag -= ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\r\n  }\r\n  if (shapeFlag & ShapeFlags.COMPONENT_KEPT_ALIVE) {\r\n    shapeFlag -= ShapeFlags.COMPONENT_KEPT_ALIVE\r\n  }\r\n  vnode.shapeFlag = shapeFlag\r\n}\r\n\r\nfunction getInnerChild(vnode: VNode) {\r\n  return vnode.shapeFlag & ShapeFlags.SUSPENSE ? vnode.ssContent! : vnode\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  currentInstance,\r\n  isInSSRComponentSetup,\r\n  LifecycleHooks,\r\n  setCurrentInstance,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { callWithAsyncErrorHandling, ErrorTypeStrings } from './errorHandling'\r\nimport { warn } from './warning'\r\nimport { toHandlerKey } from '@vue/shared'\r\nimport { DebuggerEvent, pauseTracking, resetTracking } from '@vue/reactivity'\r\n\r\nexport { onActivated, onDeactivated } from './components/KeepAlive'\r\n\r\nexport function injectHook(\r\n  type: LifecycleHooks,\r\n  hook: Function & { __weh?: Function },\r\n  target: ComponentInternalInstance | null = currentInstance,\r\n  prepend: boolean = false\r\n): Function | undefined {\r\n  if (target) {\r\n    const hooks = target[type] || (target[type] = [])\r\n    // cache the error handling wrapper for injected hooks so the same hook\r\n    // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n    // handling\".\r\n    const wrappedHook =\r\n      hook.__weh ||\r\n      (hook.__weh = (...args: unknown[]) => {\r\n        if (target.isUnmounted) {\r\n          return\r\n        }\r\n        // disable tracking inside all lifecycle hooks\r\n        // since they can potentially be called inside effects.\r\n        pauseTracking()\r\n        // Set currentInstance during hook invocation.\r\n        // This assumes the hook does not synchronously trigger other hooks, which\r\n        // can only be false when the user does something really funky.\r\n        setCurrentInstance(target)\r\n        const res = callWithAsyncErrorHandling(hook, target, type, args)\r\n        unsetCurrentInstance()\r\n        resetTracking()\r\n        return res\r\n      })\r\n    if (prepend) {\r\n      hooks.unshift(wrappedHook)\r\n    } else {\r\n      hooks.push(wrappedHook)\r\n    }\r\n    return wrappedHook\r\n  } else if (__DEV__) {\r\n    const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''))\r\n    warn(\r\n      `${apiName} is called when there is no active component instance to be ` +\r\n        `associated with. ` +\r\n        `Lifecycle injection APIs can only be used during execution of setup().` +\r\n        (__FEATURE_SUSPENSE__\r\n          ? ` If you are using async setup(), make sure to register lifecycle ` +\r\n            `hooks before the first await statement.`\r\n          : ``)\r\n    )\r\n  }\r\n}\r\n\r\nexport const createHook =\r\n  <T extends Function = () => any>(lifecycle: LifecycleHooks) =>\r\n  (hook: T, target: ComponentInternalInstance | null = currentInstance) =>\r\n    // post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\r\n    (!isInSSRComponentSetup || lifecycle === LifecycleHooks.SERVER_PREFETCH) &&\r\n    injectHook(lifecycle, hook, target)\r\n\r\nexport const onBeforeMount = createHook(LifecycleHooks.BEFORE_MOUNT)\r\nexport const onMounted = createHook(LifecycleHooks.MOUNTED)\r\nexport const onBeforeUpdate = createHook(LifecycleHooks.BEFORE_UPDATE)\r\nexport const onUpdated = createHook(LifecycleHooks.UPDATED)\r\nexport const onBeforeUnmount = createHook(LifecycleHooks.BEFORE_UNMOUNT)\r\nexport const onUnmounted = createHook(LifecycleHooks.UNMOUNTED)\r\nexport const onServerPrefetch = createHook(LifecycleHooks.SERVER_PREFETCH)\r\n\r\nexport type DebuggerHook = (e: DebuggerEvent) => void\r\nexport const onRenderTriggered = createHook<DebuggerHook>(\r\n  LifecycleHooks.RENDER_TRIGGERED\r\n)\r\nexport const onRenderTracked = createHook<DebuggerHook>(\r\n  LifecycleHooks.RENDER_TRACKED\r\n)\r\n\r\nexport type ErrorCapturedHook<TError = unknown> = (\r\n  err: TError,\r\n  instance: ComponentPublicInstance | null,\r\n  info: string\r\n) => boolean | void\r\n\r\nexport function onErrorCaptured<TError = Error>(\r\n  hook: ErrorCapturedHook<TError>,\r\n  target: ComponentInternalInstance | null = currentInstance\r\n) {\r\n  injectHook(LifecycleHooks.ERROR_CAPTURED, hook, target)\r\n}\r\n","import { ShapeFlags } from '@vue/shared'\r\nimport { ComponentInternalInstance } from '../component'\r\nimport { ComponentPublicInstance } from '../componentPublicInstance'\r\nimport { VNode } from '../vnode'\r\nimport { assertCompatEnabled, DeprecationTypes } from './compatConfig'\r\n\r\nexport function getCompatChildren(\r\n  instance: ComponentInternalInstance\r\n): ComponentPublicInstance[] {\r\n  assertCompatEnabled(DeprecationTypes.INSTANCE_CHILDREN, instance)\r\n  const root = instance.subTree\r\n  const children: ComponentPublicInstance[] = []\r\n  if (root) {\r\n    walk(root, children)\r\n  }\r\n  return children\r\n}\r\n\r\nfunction walk(vnode: VNode, children: ComponentPublicInstance[]) {\r\n  if (vnode.component) {\r\n    children.push(vnode.component.proxy!)\r\n  } else if (vnode.shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n    const vnodes = vnode.children as VNode[]\r\n    for (let i = 0; i < vnodes.length; i++) {\r\n      walk(vnodes[i], children)\r\n    }\r\n  }\r\n}\r\n","import { isOn } from '@vue/shared'\r\nimport { ComponentInternalInstance } from '../component'\r\nimport { assertCompatEnabled, DeprecationTypes } from './compatConfig'\r\n\r\nexport function getCompatListeners(instance: ComponentInternalInstance) {\r\n  assertCompatEnabled(DeprecationTypes.INSTANCE_LISTENERS, instance)\r\n\r\n  const listeners: Record<string, Function | Function[]> = {}\r\n  const rawProps = instance.vnode.props\r\n  if (!rawProps) {\r\n    return listeners\r\n  }\r\n  for (const key in rawProps) {\r\n    if (isOn(key)) {\r\n      listeners[key[2].toLowerCase() + key.slice(3)] = rawProps[key]\r\n    }\r\n  }\r\n  return listeners\r\n}\r\n","import { isArray } from '@vue/shared'\r\nimport { ComponentInternalInstance } from '../component'\r\nimport { ObjectDirective, DirectiveHook } from '../directives'\r\nimport { softAssertCompatEnabled, DeprecationTypes } from './compatConfig'\r\n\r\nexport interface LegacyDirective {\r\n  bind?: DirectiveHook\r\n  inserted?: DirectiveHook\r\n  update?: DirectiveHook\r\n  componentUpdated?: DirectiveHook\r\n  unbind?: DirectiveHook\r\n}\r\n\r\nconst legacyDirectiveHookMap: Partial<\r\n  Record<\r\n    keyof ObjectDirective,\r\n    keyof LegacyDirective | (keyof LegacyDirective)[]\r\n  >\r\n> = {\r\n  beforeMount: 'bind',\r\n  mounted: 'inserted',\r\n  updated: ['update', 'componentUpdated'],\r\n  unmounted: 'unbind'\r\n}\r\n\r\nexport function mapCompatDirectiveHook(\r\n  name: keyof ObjectDirective,\r\n  dir: ObjectDirective & LegacyDirective,\r\n  instance: ComponentInternalInstance | null\r\n): DirectiveHook | DirectiveHook[] | undefined {\r\n  const mappedName = legacyDirectiveHookMap[name]\r\n  if (mappedName) {\r\n    if (isArray(mappedName)) {\r\n      const hook: DirectiveHook[] = []\r\n      mappedName.forEach(mapped => {\r\n        const mappedHook = dir[mapped]\r\n        if (mappedHook) {\r\n          softAssertCompatEnabled(\r\n            DeprecationTypes.CUSTOM_DIR,\r\n            instance,\r\n            mapped,\r\n            name\r\n          )\r\n          hook.push(mappedHook)\r\n        }\r\n      })\r\n      return hook.length ? hook : undefined\r\n    } else {\r\n      if (dir[mappedName]) {\r\n        softAssertCompatEnabled(\r\n          DeprecationTypes.CUSTOM_DIR,\r\n          instance,\r\n          mappedName,\r\n          name\r\n        )\r\n      }\r\n      return dir[mappedName]\r\n    }\r\n  }\r\n}\r\n","/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\r\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\r\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\n\r\nimport { VNode } from './vnode'\r\nimport { isFunction, EMPTY_OBJ, isBuiltInDirective } from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { ComponentInternalInstance, Data, getExposeProxy } from './component'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from './errorHandling'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { mapCompatDirectiveHook } from './compat/customDirective'\r\nimport { pauseTracking, resetTracking } from '@vue/reactivity'\r\nimport { traverse } from './apiWatch'\r\n\r\nexport interface DirectiveBinding<V = any> {\r\n  instance: ComponentPublicInstance | null\r\n  value: V\r\n  oldValue: V | null\r\n  arg?: string\r\n  modifiers: DirectiveModifiers\r\n  dir: ObjectDirective<any, V>\r\n}\r\n\r\nexport type DirectiveHook<T = any, Prev = VNode<any, T> | null, V = any> = (\r\n  el: T,\r\n  binding: DirectiveBinding<V>,\r\n  vnode: VNode<any, T>,\r\n  prevVNode: Prev\r\n) => void\r\n\r\nexport type SSRDirectiveHook = (\r\n  binding: DirectiveBinding,\r\n  vnode: VNode\r\n) => Data | undefined\r\n\r\nexport interface ObjectDirective<T = any, V = any> {\r\n  created?: DirectiveHook<T, null, V>\r\n  beforeMount?: DirectiveHook<T, null, V>\r\n  mounted?: DirectiveHook<T, null, V>\r\n  beforeUpdate?: DirectiveHook<T, VNode<any, T>, V>\r\n  updated?: DirectiveHook<T, VNode<any, T>, V>\r\n  beforeUnmount?: DirectiveHook<T, null, V>\r\n  unmounted?: DirectiveHook<T, null, V>\r\n  getSSRProps?: SSRDirectiveHook\r\n  deep?: boolean\r\n}\r\n\r\nexport type FunctionDirective<T = any, V = any> = DirectiveHook<T, any, V>\r\n\r\nexport type Directive<T = any, V = any> =\r\n  | ObjectDirective<T, V>\r\n  | FunctionDirective<T, V>\r\n\r\nexport type DirectiveModifiers = Record<string, boolean>\r\n\r\nexport function validateDirectiveName(name: string) {\r\n  if (isBuiltInDirective(name)) {\r\n    warn('Do not use built-in directive ids as custom directive id: ' + name)\r\n  }\r\n}\r\n\r\n// Directive, value, argument, modifiers\r\nexport type DirectiveArguments = Array<\r\n  | [Directive]\r\n  | [Directive, any]\r\n  | [Directive, any, string]\r\n  | [Directive, any, string, DirectiveModifiers]\r\n>\r\n\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nexport function withDirectives<T extends VNode>(\r\n  vnode: T,\r\n  directives: DirectiveArguments\r\n): T {\r\n  const internalInstance = currentRenderingInstance\r\n  if (internalInstance === null) {\r\n    __DEV__ && warn(`withDirectives can only be used inside render functions.`)\r\n    return vnode\r\n  }\r\n  const instance =\r\n    (getExposeProxy(internalInstance) as ComponentPublicInstance) ||\r\n    internalInstance.proxy\r\n  const bindings: DirectiveBinding[] = vnode.dirs || (vnode.dirs = [])\r\n  for (let i = 0; i < directives.length; i++) {\r\n    let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i]\r\n    if (isFunction(dir)) {\r\n      dir = {\r\n        mounted: dir,\r\n        updated: dir\r\n      } as ObjectDirective\r\n    }\r\n    if (dir.deep) {\r\n      traverse(value)\r\n    }\r\n    bindings.push({\r\n      dir,\r\n      instance,\r\n      value,\r\n      oldValue: void 0,\r\n      arg,\r\n      modifiers\r\n    })\r\n  }\r\n  return vnode\r\n}\r\n\r\nexport function invokeDirectiveHook(\r\n  vnode: VNode,\r\n  prevVNode: VNode | null,\r\n  instance: ComponentInternalInstance | null,\r\n  name: keyof ObjectDirective\r\n) {\r\n  const bindings = vnode.dirs!\r\n  const oldBindings = prevVNode && prevVNode.dirs!\r\n  for (let i = 0; i < bindings.length; i++) {\r\n    const binding = bindings[i]\r\n    if (oldBindings) {\r\n      binding.oldValue = oldBindings[i].value\r\n    }\r\n    let hook = binding.dir[name] as DirectiveHook | DirectiveHook[] | undefined\r\n    if (__COMPAT__ && !hook) {\r\n      hook = mapCompatDirectiveHook(name, binding.dir, instance)\r\n    }\r\n    if (hook) {\r\n      // disable tracking inside all lifecycle hooks\r\n      // since they can potentially be called inside effects.\r\n      pauseTracking()\r\n      callWithAsyncErrorHandling(hook, instance, ErrorCodes.DIRECTIVE_HOOK, [\r\n        vnode.el,\r\n        binding,\r\n        vnode,\r\n        prevVNode\r\n      ])\r\n      resetTracking()\r\n    }\r\n  }\r\n}\r\n","import {\r\n  currentInstance,\r\n  ConcreteComponent,\r\n  ComponentOptions,\r\n  getComponentName\r\n} from '../component'\r\nimport { currentRenderingInstance } from '../componentRenderContext'\r\nimport { Directive } from '../directives'\r\nimport { camelize, capitalize, isString } from '@vue/shared'\r\nimport { warn } from '../warning'\r\nimport { VNodeTypes } from '../vnode'\r\n\r\nexport const COMPONENTS = 'components'\r\nexport const DIRECTIVES = 'directives'\r\nexport const FILTERS = 'filters'\r\n\r\nexport type AssetTypes = typeof COMPONENTS | typeof DIRECTIVES | typeof FILTERS\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveComponent(\r\n  name: string,\r\n  maybeSelfReference?: boolean\r\n): ConcreteComponent | string {\r\n  return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name\r\n}\r\n\r\nexport const NULL_DYNAMIC_COMPONENT = Symbol()\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveDynamicComponent(component: unknown): VNodeTypes {\r\n  if (isString(component)) {\r\n    return resolveAsset(COMPONENTS, component, false) || component\r\n  } else {\r\n    // invalid types will fallthrough to createVNode and raise warning\r\n    return (component || NULL_DYNAMIC_COMPONENT) as any\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveDirective(name: string): Directive | undefined {\r\n  return resolveAsset(DIRECTIVES, name)\r\n}\r\n\r\n/**\r\n * v2 compat only\r\n * @internal\r\n */\r\nexport function resolveFilter(name: string): Function | undefined {\r\n  return resolveAsset(FILTERS, name)\r\n}\r\n\r\n/**\r\n * @private\r\n * overload 1: components\r\n */\r\nfunction resolveAsset(\r\n  type: typeof COMPONENTS,\r\n  name: string,\r\n  warnMissing?: boolean,\r\n  maybeSelfReference?: boolean\r\n): ConcreteComponent | undefined\r\n// overload 2: directives\r\nfunction resolveAsset(\r\n  type: typeof DIRECTIVES,\r\n  name: string\r\n): Directive | undefined\r\n// implementation\r\n// overload 3: filters (compat only)\r\nfunction resolveAsset(type: typeof FILTERS, name: string): Function | undefined\r\n// implementation\r\nfunction resolveAsset(\r\n  type: AssetTypes,\r\n  name: string,\r\n  warnMissing = true,\r\n  maybeSelfReference = false\r\n) {\r\n  const instance = currentRenderingInstance || currentInstance\r\n  if (instance) {\r\n    const Component = instance.type\r\n\r\n    // explicit self name has highest priority\r\n    if (type === COMPONENTS) {\r\n      const selfName = getComponentName(\r\n        Component,\r\n        false /* do not include inferred name to avoid breaking existing code */\r\n      )\r\n      if (\r\n        selfName &&\r\n        (selfName === name ||\r\n          selfName === camelize(name) ||\r\n          selfName === capitalize(camelize(name)))\r\n      ) {\r\n        return Component\r\n      }\r\n    }\r\n\r\n    const res =\r\n      // local registration\r\n      // check instance[type] first which is resolved for options API\r\n      resolve(instance[type] || (Component as ComponentOptions)[type], name) ||\r\n      // global registration\r\n      resolve(instance.appContext[type], name)\r\n\r\n    if (!res && maybeSelfReference) {\r\n      // fallback to implicit self-reference\r\n      return Component\r\n    }\r\n\r\n    if (__DEV__ && warnMissing && !res) {\r\n      const extra =\r\n        type === COMPONENTS\r\n          ? `\\nIf this is a native custom element, make sure to exclude it from ` +\r\n            `component resolution via compilerOptions.isCustomElement.`\r\n          : ``\r\n      warn(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`)\r\n    }\r\n\r\n    return res\r\n  } else if (__DEV__) {\r\n    warn(\r\n      `resolve${capitalize(type.slice(0, -1))} ` +\r\n        `can only be used in render() or setup().`\r\n    )\r\n  }\r\n}\r\n\r\nfunction resolve(registry: Record<string, any> | undefined, name: string) {\r\n  return (\r\n    registry &&\r\n    (registry[name] ||\r\n      registry[camelize(name)] ||\r\n      registry[capitalize(camelize(name))])\r\n  )\r\n}\r\n","import {\r\n  extend,\r\n  hyphenate,\r\n  isArray,\r\n  isObject,\r\n  isString,\r\n  makeMap,\r\n  normalizeClass,\r\n  normalizeStyle,\r\n  ShapeFlags,\r\n  toHandlerKey\r\n} from '@vue/shared'\r\nimport {\r\n  Component,\r\n  ComponentInternalInstance,\r\n  ComponentOptions,\r\n  Data,\r\n  InternalRenderFunction\r\n} from '../component'\r\nimport { currentRenderingInstance } from '../componentRenderContext'\r\nimport { DirectiveArguments, withDirectives } from '../directives'\r\nimport {\r\n  resolveDirective,\r\n  resolveDynamicComponent\r\n} from '../helpers/resolveAssets'\r\nimport {\r\n  Comment,\r\n  createVNode,\r\n  isVNode,\r\n  normalizeChildren,\r\n  VNode,\r\n  VNodeArrayChildren,\r\n  VNodeProps\r\n} from '../vnode'\r\nimport {\r\n  checkCompatEnabled,\r\n  DeprecationTypes,\r\n  isCompatEnabled\r\n} from './compatConfig'\r\nimport { compatModelEventPrefix } from './componentVModel'\r\n\r\nexport function convertLegacyRenderFn(instance: ComponentInternalInstance) {\r\n  const Component = instance.type as ComponentOptions\r\n  const render = Component.render as InternalRenderFunction | undefined\r\n\r\n  // v3 runtime compiled, or already checked / wrapped\r\n  if (!render || render._rc || render._compatChecked || render._compatWrapped) {\r\n    return\r\n  }\r\n\r\n  if (render.length >= 2) {\r\n    // v3 pre-compiled function, since v2 render functions never need more than\r\n    // 2 arguments, and v2 functional render functions would have already been\r\n    // normalized into v3 functional components\r\n    render._compatChecked = true\r\n    return\r\n  }\r\n\r\n  // v2 render function, try to provide compat\r\n  if (checkCompatEnabled(DeprecationTypes.RENDER_FUNCTION, instance)) {\r\n    const wrapped = (Component.render = function compatRender() {\r\n      // @ts-ignore\r\n      return render.call(this, compatH)\r\n    })\r\n    // @ts-ignore\r\n    wrapped._compatWrapped = true\r\n  }\r\n}\r\n\r\ninterface LegacyVNodeProps {\r\n  key?: string | number\r\n  ref?: string\r\n  refInFor?: boolean\r\n\r\n  staticClass?: string\r\n  class?: unknown\r\n  staticStyle?: Record<string, unknown>\r\n  style?: Record<string, unknown>\r\n  attrs?: Record<string, unknown>\r\n  domProps?: Record<string, unknown>\r\n  on?: Record<string, Function | Function[]>\r\n  nativeOn?: Record<string, Function | Function[]>\r\n  directives?: LegacyVNodeDirective[]\r\n\r\n  // component only\r\n  props?: Record<string, unknown>\r\n  slot?: string\r\n  scopedSlots?: Record<string, Function>\r\n  model?: {\r\n    value: any\r\n    callback: (v: any) => void\r\n    expression: string\r\n  }\r\n}\r\n\r\ninterface LegacyVNodeDirective {\r\n  name: string\r\n  value: unknown\r\n  arg?: string\r\n  modifiers?: Record<string, boolean>\r\n}\r\n\r\ntype LegacyVNodeChildren =\r\n  | string\r\n  | number\r\n  | boolean\r\n  | VNode\r\n  | VNodeArrayChildren\r\n\r\nexport function compatH(\r\n  type: string | Component,\r\n  children?: LegacyVNodeChildren\r\n): VNode\r\nexport function compatH(\r\n  type: string | Component,\r\n  props?: Data & LegacyVNodeProps,\r\n  children?: LegacyVNodeChildren\r\n): VNode\r\n\r\nexport function compatH(\r\n  type: any,\r\n  propsOrChildren?: any,\r\n  children?: any\r\n): VNode {\r\n  if (!type) {\r\n    type = Comment\r\n  }\r\n\r\n  // to support v2 string component name look!up\r\n  if (typeof type === 'string') {\r\n    const t = hyphenate(type)\r\n    if (t === 'transition' || t === 'transition-group' || t === 'keep-alive') {\r\n      // since transition and transition-group are runtime-dom-specific,\r\n      // we cannot import them directly here. Instead they are registered using\r\n      // special keys in @vue/compat entry.\r\n      type = `__compat__${t}`\r\n    }\r\n    type = resolveDynamicComponent(type)\r\n  }\r\n\r\n  const l = arguments.length\r\n  const is2ndArgArrayChildren = isArray(propsOrChildren)\r\n  if (l === 2 || is2ndArgArrayChildren) {\r\n    if (isObject(propsOrChildren) && !is2ndArgArrayChildren) {\r\n      // single vnode without props\r\n      if (isVNode(propsOrChildren)) {\r\n        return convertLegacySlots(createVNode(type, null, [propsOrChildren]))\r\n      }\r\n      // props without children\r\n      return convertLegacySlots(\r\n        convertLegacyDirectives(\r\n          createVNode(type, convertLegacyProps(propsOrChildren, type)),\r\n          propsOrChildren\r\n        )\r\n      )\r\n    } else {\r\n      // omit props\r\n      return convertLegacySlots(createVNode(type, null, propsOrChildren))\r\n    }\r\n  } else {\r\n    if (isVNode(children)) {\r\n      children = [children]\r\n    }\r\n    return convertLegacySlots(\r\n      convertLegacyDirectives(\r\n        createVNode(type, convertLegacyProps(propsOrChildren, type), children),\r\n        propsOrChildren\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\nconst skipLegacyRootLevelProps = /*#__PURE__*/ makeMap(\r\n  'staticStyle,staticClass,directives,model,hook'\r\n)\r\n\r\nfunction convertLegacyProps(\r\n  legacyProps: LegacyVNodeProps | undefined,\r\n  type: any\r\n): (Data & VNodeProps) | null {\r\n  if (!legacyProps) {\r\n    return null\r\n  }\r\n\r\n  const converted: Data & VNodeProps = {}\r\n\r\n  for (const key in legacyProps) {\r\n    if (key === 'attrs' || key === 'domProps' || key === 'props') {\r\n      extend(converted, legacyProps[key])\r\n    } else if (key === 'on' || key === 'nativeOn') {\r\n      const listeners = legacyProps[key]\r\n      for (const event in listeners) {\r\n        let handlerKey = convertLegacyEventKey(event)\r\n        if (key === 'nativeOn') handlerKey += `Native`\r\n        const existing = converted[handlerKey]\r\n        const incoming = listeners[event]\r\n        if (existing !== incoming) {\r\n          if (existing) {\r\n            converted[handlerKey] = [].concat(existing as any, incoming as any)\r\n          } else {\r\n            converted[handlerKey] = incoming\r\n          }\r\n        }\r\n      }\r\n    } else if (!skipLegacyRootLevelProps(key)) {\r\n      converted[key] = legacyProps[key as keyof LegacyVNodeProps]\r\n    }\r\n  }\r\n\r\n  if (legacyProps.staticClass) {\r\n    converted.class = normalizeClass([legacyProps.staticClass, converted.class])\r\n  }\r\n  if (legacyProps.staticStyle) {\r\n    converted.style = normalizeStyle([legacyProps.staticStyle, converted.style])\r\n  }\r\n\r\n  if (legacyProps.model && isObject(type)) {\r\n    // v2 compiled component v-model\r\n    const { prop = 'value', event = 'input' } = (type as any).model || {}\r\n    converted[prop] = legacyProps.model.value\r\n    converted[compatModelEventPrefix + event] = legacyProps.model.callback\r\n  }\r\n\r\n  return converted\r\n}\r\n\r\nfunction convertLegacyEventKey(event: string): string {\r\n  // normalize v2 event prefixes\r\n  if (event[0] === '&') {\r\n    event = event.slice(1) + 'Passive'\r\n  }\r\n  if (event[0] === '~') {\r\n    event = event.slice(1) + 'Once'\r\n  }\r\n  if (event[0] === '!') {\r\n    event = event.slice(1) + 'Capture'\r\n  }\r\n  return toHandlerKey(event)\r\n}\r\n\r\nfunction convertLegacyDirectives(\r\n  vnode: VNode,\r\n  props?: LegacyVNodeProps\r\n): VNode {\r\n  if (props && props.directives) {\r\n    return withDirectives(\r\n      vnode,\r\n      props.directives.map(({ name, value, arg, modifiers }) => {\r\n        return [\r\n          resolveDirective(name)!,\r\n          value,\r\n          arg,\r\n          modifiers\r\n        ] as DirectiveArguments[number]\r\n      })\r\n    )\r\n  }\r\n  return vnode\r\n}\r\n\r\nfunction convertLegacySlots(vnode: VNode): VNode {\r\n  const { props, children } = vnode\r\n\r\n  let slots: Record<string, any> | undefined\r\n\r\n  if (vnode.shapeFlag & ShapeFlags.COMPONENT && isArray(children)) {\r\n    slots = {}\r\n    // check \"slot\" property on vnodes and turn them into v3 function slots\r\n    for (let i = 0; i < children.length; i++) {\r\n      const child = children[i]\r\n      const slotName =\r\n        (isVNode(child) && child.props && child.props.slot) || 'default'\r\n      const slot = slots[slotName] || (slots[slotName] = [] as any[])\r\n      if (isVNode(child) && child.type === 'template') {\r\n        slot.push(child.children)\r\n      } else {\r\n        slot.push(child)\r\n      }\r\n    }\r\n    if (slots) {\r\n      for (const key in slots) {\r\n        const slotChildren = slots[key]\r\n        slots[key] = () => slotChildren\r\n        slots[key]._ns = true /* non-scoped slot */\r\n      }\r\n    }\r\n  }\r\n\r\n  const scopedSlots = props && props.scopedSlots\r\n  if (scopedSlots) {\r\n    delete props!.scopedSlots\r\n    if (slots) {\r\n      extend(slots, scopedSlots)\r\n    } else {\r\n      slots = scopedSlots\r\n    }\r\n  }\r\n\r\n  if (slots) {\r\n    normalizeChildren(vnode, slots)\r\n  }\r\n\r\n  return vnode\r\n}\r\n\r\nexport function defineLegacyVNodeProperties(vnode: VNode) {\r\n  /* istanbul ignore if */\r\n  if (\r\n    isCompatEnabled(\r\n      DeprecationTypes.RENDER_FUNCTION,\r\n      currentRenderingInstance,\r\n      true /* enable for built-ins */\r\n    ) &&\r\n    isCompatEnabled(\r\n      DeprecationTypes.PRIVATE_APIS,\r\n      currentRenderingInstance,\r\n      true /* enable for built-ins */\r\n    )\r\n  ) {\r\n    const context = currentRenderingInstance\r\n    const getInstance = () => vnode.component && vnode.component.proxy\r\n    let componentOptions: any\r\n    Object.defineProperties(vnode, {\r\n      tag: { get: () => vnode.type },\r\n      data: { get: () => vnode.props || {}, set: p => (vnode.props = p) },\r\n      elm: { get: () => vnode.el },\r\n      componentInstance: { get: getInstance },\r\n      child: { get: getInstance },\r\n      text: { get: () => (isString(vnode.children) ? vnode.children : null) },\r\n      context: { get: () => context && context.proxy },\r\n      componentOptions: {\r\n        get: () => {\r\n          if (vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\r\n            if (componentOptions) {\r\n              return componentOptions\r\n            }\r\n            return (componentOptions = {\r\n              Ctor: vnode.type,\r\n              propsData: vnode.props,\r\n              children: vnode.children\r\n            })\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n","import {\r\n  ComponentOptions,\r\n  FunctionalComponent,\r\n  getCurrentInstance\r\n} from '../component'\r\nimport { resolveInjections } from '../componentOptions'\r\nimport { InternalSlots } from '../componentSlots'\r\nimport { getCompatListeners } from './instanceListeners'\r\nimport { compatH } from './renderFn'\r\n\r\nconst normalizedFunctionalComponentMap = new Map<\r\n  ComponentOptions,\r\n  FunctionalComponent\r\n>()\r\n\r\nexport const legacySlotProxyHandlers: ProxyHandler<InternalSlots> = {\r\n  get(target, key: string) {\r\n    const slot = target[key]\r\n    return slot && slot()\r\n  }\r\n}\r\n\r\nexport function convertLegacyFunctionalComponent(comp: ComponentOptions) {\r\n  if (normalizedFunctionalComponentMap.has(comp)) {\r\n    return normalizedFunctionalComponentMap.get(comp)!\r\n  }\r\n\r\n  const legacyFn = comp.render as any\r\n\r\n  const Func: FunctionalComponent = (props, ctx) => {\r\n    const instance = getCurrentInstance()!\r\n\r\n    const legacyCtx = {\r\n      props,\r\n      children: instance.vnode.children || [],\r\n      data: instance.vnode.props || {},\r\n      scopedSlots: ctx.slots,\r\n      parent: instance.parent && instance.parent.proxy,\r\n      slots() {\r\n        return new Proxy(ctx.slots, legacySlotProxyHandlers)\r\n      },\r\n      get listeners() {\r\n        return getCompatListeners(instance)\r\n      },\r\n      get injections() {\r\n        if (comp.inject) {\r\n          const injections = {}\r\n          resolveInjections(comp.inject, injections)\r\n          return injections\r\n        }\r\n        return {}\r\n      }\r\n    }\r\n    return legacyFn(compatH, legacyCtx)\r\n  }\r\n  Func.props = comp.props\r\n  Func.displayName = comp.name\r\n  Func.compatConfig = comp.compatConfig\r\n  // v2 functional components do not inherit attrs\r\n  Func.inheritAttrs = false\r\n\r\n  normalizedFunctionalComponentMap.set(comp, Func)\r\n  return Func\r\n}\r\n","import { VNode, VNodeChild } from '../vnode'\r\nimport { isArray, isString, isObject } from '@vue/shared'\r\nimport { warn } from '../warning'\r\n\r\n/**\r\n * v-for string\r\n * @private\r\n */\r\nexport function renderList(\r\n  source: string,\r\n  renderItem: (value: string, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for number\r\n */\r\nexport function renderList(\r\n  source: number,\r\n  renderItem: (value: number, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for array\r\n */\r\nexport function renderList<T>(\r\n  source: T[],\r\n  renderItem: (value: T, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for iterable\r\n */\r\nexport function renderList<T>(\r\n  source: Iterable<T>,\r\n  renderItem: (value: T, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for object\r\n */\r\nexport function renderList<T>(\r\n  source: T,\r\n  renderItem: <K extends keyof T>(\r\n    value: T[K],\r\n    key: K,\r\n    index: number\r\n  ) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * Actual implementation\r\n */\r\nexport function renderList(\r\n  source: any,\r\n  renderItem: (...args: any[]) => VNodeChild,\r\n  cache?: any[],\r\n  index?: number\r\n): VNodeChild[] {\r\n  let ret: VNodeChild[]\r\n  const cached = (cache && cache[index!]) as VNode[] | undefined\r\n\r\n  if (isArray(source) || isString(source)) {\r\n    ret = new Array(source.length)\r\n    for (let i = 0, l = source.length; i < l; i++) {\r\n      ret[i] = renderItem(source[i], i, undefined, cached && cached[i])\r\n    }\r\n  } else if (typeof source === 'number') {\r\n    if (__DEV__ && !Number.isInteger(source)) {\r\n      warn(`The v-for range expect an integer value but got ${source}.`)\r\n    }\r\n    ret = new Array(source)\r\n    for (let i = 0; i < source; i++) {\r\n      ret[i] = renderItem(i + 1, i, undefined, cached && cached[i])\r\n    }\r\n  } else if (isObject(source)) {\r\n    if (source[Symbol.iterator as any]) {\r\n      ret = Array.from(source as Iterable<any>, (item, i) =>\r\n        renderItem(item, i, undefined, cached && cached[i])\r\n      )\r\n    } else {\r\n      const keys = Object.keys(source)\r\n      ret = new Array(keys.length)\r\n      for (let i = 0, l = keys.length; i < l; i++) {\r\n        const key = keys[i]\r\n        ret[i] = renderItem(source[key], key, i, cached && cached[i])\r\n      }\r\n    }\r\n  } else {\r\n    ret = []\r\n  }\r\n\r\n  if (cache) {\r\n    cache[index!] = ret\r\n  }\r\n  return ret\r\n}\r\n","import { Slot } from '../componentSlots'\r\nimport { isArray } from '@vue/shared'\r\n\r\ninterface CompiledSlotDescriptor {\r\n  name: string\r\n  fn: Slot\r\n}\r\n\r\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nexport function createSlots(\r\n  slots: Record<string, Slot>,\r\n  dynamicSlots: (\r\n    | CompiledSlotDescriptor\r\n    | CompiledSlotDescriptor[]\r\n    | undefined\r\n  )[]\r\n): Record<string, Slot> {\r\n  for (let i = 0; i < dynamicSlots.length; i++) {\r\n    const slot = dynamicSlots[i]\r\n    // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n    if (isArray(slot)) {\r\n      for (let j = 0; j < slot.length; j++) {\r\n        slots[slot[j].name] = slot[j].fn\r\n      }\r\n    } else if (slot) {\r\n      // conditional single slot generated by <template v-if=\"...\" #foo>\r\n      slots[slot.name] = slot.fn\r\n    }\r\n  }\r\n  return slots\r\n}\r\n","import { Data } from '../component'\r\nimport { Slots, RawSlots } from '../componentSlots'\r\nimport {\r\n  ContextualRenderFn,\r\n  currentRenderingInstance\r\n} from '../componentRenderContext'\r\nimport {\r\n  Comment,\r\n  isVNode,\r\n  VNodeArrayChildren,\r\n  openBlock,\r\n  createBlock,\r\n  Fragment,\r\n  VNode\r\n} from '../vnode'\r\nimport { PatchFlags, SlotFlags } from '@vue/shared'\r\nimport { warn } from '../warning'\r\nimport { createVNode } from '@vue/runtime-core'\r\nimport { isAsyncWrapper } from '../apiAsyncComponent'\r\n\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nexport function renderSlot(\r\n  slots: Slots,\r\n  name: string,\r\n  props: Data = {},\r\n  // this is not a user-facing function, so the fallback is always generated by\r\n  // the compiler and guaranteed to be a function returning an array\r\n  fallback?: () => VNodeArrayChildren,\r\n  noSlotted?: boolean\r\n): VNode {\r\n  if (\r\n    currentRenderingInstance!.isCE ||\r\n    (currentRenderingInstance!.parent &&\r\n      isAsyncWrapper(currentRenderingInstance!.parent) &&\r\n      currentRenderingInstance!.parent.isCE)\r\n  ) {\r\n    return createVNode(\r\n      'slot',\r\n      name === 'default' ? null : { name },\r\n      fallback && fallback()\r\n    )\r\n  }\r\n\r\n  let slot = slots[name]\r\n\r\n  if (__DEV__ && slot && slot.length > 1) {\r\n    warn(\r\n      `SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n        `function. You need to mark this component with $dynamic-slots in the ` +\r\n        `parent template.`\r\n    )\r\n    slot = () => []\r\n  }\r\n\r\n  // a compiled slot disables block tracking by default to avoid manual\r\n  // invocation interfering with template-based block tracking, but in\r\n  // `renderSlot` we can be sure that it's template-based so we can force\r\n  // enable it.\r\n  if (slot && (slot as ContextualRenderFn)._c) {\r\n    ;(slot as ContextualRenderFn)._d = false\r\n  }\r\n  openBlock()\r\n  const validSlotContent = slot && ensureValidVNode(slot(props))\r\n  const rendered = createBlock(\r\n    Fragment,\r\n    { key: props.key || `_${name}` },\r\n    validSlotContent || (fallback ? fallback() : []),\r\n    validSlotContent && (slots as RawSlots)._ === SlotFlags.STABLE\r\n      ? PatchFlags.STABLE_FRAGMENT\r\n      : PatchFlags.BAIL\r\n  )\r\n  if (!noSlotted && rendered.scopeId) {\r\n    rendered.slotScopeIds = [rendered.scopeId + '-s']\r\n  }\r\n  if (slot && (slot as ContextualRenderFn)._c) {\r\n    ;(slot as ContextualRenderFn)._d = true\r\n  }\r\n  return rendered\r\n}\r\n\r\nfunction ensureValidVNode(vnodes: VNodeArrayChildren) {\r\n  return vnodes.some(child => {\r\n    if (!isVNode(child)) return true\r\n    if (child.type === Comment) return false\r\n    if (\r\n      child.type === Fragment &&\r\n      !ensureValidVNode(child.children as VNodeArrayChildren)\r\n    )\r\n      return false\r\n    return true\r\n  })\r\n    ? vnodes\r\n    : null\r\n}\r\n","import { toHandlerKey, isObject } from '@vue/shared'\r\nimport { warn } from '../warning'\r\n\r\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nexport function toHandlers(obj: Record<string, any>): Record<string, any> {\r\n  const ret: Record<string, any> = {}\r\n  if (__DEV__ && !isObject(obj)) {\r\n    warn(`v-on with no argument expects an object value.`)\r\n    return ret\r\n  }\r\n  for (const key in obj) {\r\n    ret[toHandlerKey(key)] = obj[key]\r\n  }\r\n  return ret\r\n}\r\n","import {\r\n  camelize,\r\n  extend,\r\n  hyphenate,\r\n  isArray,\r\n  isObject,\r\n  isReservedProp,\r\n  normalizeClass\r\n} from '@vue/shared'\r\nimport { ComponentInternalInstance } from '../component'\r\nimport { Slot } from '../componentSlots'\r\nimport { createSlots } from '../helpers/createSlots'\r\nimport { renderSlot } from '../helpers/renderSlot'\r\nimport { toHandlers } from '../helpers/toHandlers'\r\nimport { mergeProps, VNode } from '../vnode'\r\n\r\nfunction toObject(arr: Array<any>): Object {\r\n  const res = {}\r\n  for (let i = 0; i < arr.length; i++) {\r\n    if (arr[i]) {\r\n      extend(res, arr[i])\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nexport function legacyBindObjectProps(\r\n  data: any,\r\n  _tag: string,\r\n  value: any,\r\n  _asProp: boolean,\r\n  isSync?: boolean\r\n) {\r\n  if (value && isObject(value)) {\r\n    if (isArray(value)) {\r\n      value = toObject(value)\r\n    }\r\n    for (const key in value) {\r\n      if (isReservedProp(key)) {\r\n        data[key] = value[key]\r\n      } else if (key === 'class') {\r\n        data.class = normalizeClass([data.class, value.class])\r\n      } else if (key === 'style') {\r\n        data.style = normalizeClass([data.style, value.style])\r\n      } else {\r\n        const attrs = data.attrs || (data.attrs = {})\r\n        const camelizedKey = camelize(key)\r\n        const hyphenatedKey = hyphenate(key)\r\n        if (!(camelizedKey in attrs) && !(hyphenatedKey in attrs)) {\r\n          attrs[key] = value[key]\r\n\r\n          if (isSync) {\r\n            const on = data.on || (data.on = {})\r\n            on[`update:${key}`] = function ($event: any) {\r\n              value[key] = $event\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return data\r\n}\r\n\r\nexport function legacyBindObjectListeners(props: any, listeners: any) {\r\n  return mergeProps(props, toHandlers(listeners))\r\n}\r\n\r\nexport function legacyRenderSlot(\r\n  instance: ComponentInternalInstance,\r\n  name: string,\r\n  fallback?: VNode[],\r\n  props?: any,\r\n  bindObject?: any\r\n) {\r\n  if (bindObject) {\r\n    props = mergeProps(props, bindObject)\r\n  }\r\n  return renderSlot(instance.slots, name, props, fallback && (() => fallback))\r\n}\r\n\r\ntype LegacyScopedSlotsData = Array<\r\n  | {\r\n      key: string\r\n      fn: Function\r\n    }\r\n  | LegacyScopedSlotsData\r\n>\r\n\r\nexport function legacyresolveScopedSlots(\r\n  fns: LegacyScopedSlotsData,\r\n  raw?: Record<string, Slot>,\r\n  // the following are added in 2.6\r\n  hasDynamicKeys?: boolean\r\n) {\r\n  // v2 default slot doesn't have name\r\n  return createSlots(\r\n    raw || ({ $stable: !hasDynamicKeys } as any),\r\n    mapKeyToName(fns)\r\n  )\r\n}\r\n\r\nfunction mapKeyToName(slots: LegacyScopedSlotsData) {\r\n  for (let i = 0; i < slots.length; i++) {\r\n    const fn = slots[i]\r\n    if (fn) {\r\n      if (isArray(fn)) {\r\n        mapKeyToName(fn)\r\n      } else {\r\n        ;(fn as any).name = fn.key || 'default'\r\n      }\r\n    }\r\n  }\r\n  return slots as any\r\n}\r\n\r\nconst staticCacheMap = /*#__PURE__*/ new WeakMap<\r\n  ComponentInternalInstance,\r\n  any[]\r\n>()\r\n\r\nexport function legacyRenderStatic(\r\n  instance: ComponentInternalInstance,\r\n  index: number\r\n) {\r\n  let cache = staticCacheMap.get(instance)\r\n  if (!cache) {\r\n    staticCacheMap.set(instance, (cache = []))\r\n  }\r\n  if (cache[index]) {\r\n    return cache[index]\r\n  }\r\n  const fn = (instance.type as any).staticRenderFns[index]\r\n  const ctx = instance.proxy\r\n  return (cache[index] = fn.call(ctx, null, ctx))\r\n}\r\n\r\nexport function legacyCheckKeyCodes(\r\n  instance: ComponentInternalInstance,\r\n  eventKeyCode: number,\r\n  key: string,\r\n  builtInKeyCode?: number | number[],\r\n  eventKeyName?: string,\r\n  builtInKeyName?: string | string[]\r\n) {\r\n  const config = instance.appContext.config as any\r\n  const configKeyCodes = config.keyCodes || {}\r\n  const mappedKeyCode = configKeyCodes[key] || builtInKeyCode\r\n  if (builtInKeyName && eventKeyName && !configKeyCodes[key]) {\r\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\r\n  } else if (mappedKeyCode) {\r\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\r\n  } else if (eventKeyName) {\r\n    return hyphenate(eventKeyName) !== key\r\n  }\r\n}\r\n\r\nfunction isKeyNotMatch<T>(expect: T | T[], actual: T): boolean {\r\n  if (isArray(expect)) {\r\n    return !expect.includes(actual)\r\n  } else {\r\n    return expect !== actual\r\n  }\r\n}\r\n\r\nexport function legacyMarkOnce(tree: VNode) {\r\n  return tree\r\n}\r\n\r\nexport function legacyBindDynamicKeys(props: any, values: any[]) {\r\n  for (let i = 0; i < values.length; i += 2) {\r\n    const key = values[i]\r\n    if (typeof key === 'string' && key) {\r\n      props[values[i]] = values[i + 1]\r\n    }\r\n  }\r\n  return props\r\n}\r\n\r\nexport function legacyPrependModifier(value: any, symbol: string) {\r\n  return typeof value === 'string' ? symbol + value : value\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  Data,\r\n  getExposeProxy,\r\n  isStatefulComponent\r\n} from './component'\r\nimport { nextTick, queueJob } from './scheduler'\r\nimport { instanceWatch, WatchOptions, WatchStopHandle } from './apiWatch'\r\nimport {\r\n  EMPTY_OBJ,\r\n  hasOwn,\r\n  isGloballyWhitelisted,\r\n  NOOP,\r\n  extend,\r\n  isString,\r\n  isFunction,\r\n  UnionToIntersection\r\n} from '@vue/shared'\r\nimport {\r\n  toRaw,\r\n  shallowReadonly,\r\n  track,\r\n  TrackOpTypes,\r\n  ShallowUnwrapRef,\r\n  UnwrapNestedRefs\r\n} from '@vue/reactivity'\r\nimport {\r\n  ExtractComputedReturns,\r\n  ComponentOptionsBase,\r\n  ComputedOptions,\r\n  MethodOptions,\r\n  ComponentOptionsMixin,\r\n  OptionTypesType,\r\n  OptionTypesKeys,\r\n  resolveMergedOptions,\r\n  shouldCacheAccess,\r\n  MergedComponentOptionsOverride\r\n} from './componentOptions'\r\nimport { EmitsOptions, EmitFn } from './componentEmits'\r\nimport { Slots } from './componentSlots'\r\nimport { markAttrsAccessed } from './componentRenderUtils'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { warn } from './warning'\r\nimport { installCompatInstanceProperties } from './compat/instance'\r\n\r\n/**\r\n * Custom properties added to component instances in any way and can be accessed through `this`\r\n *\r\n * @example\r\n * Here is an example of adding a property `$router` to every component instance:\r\n * ```ts\r\n * import { createApp } from 'vue'\r\n * import { Router, createRouter } from 'vue-router'\r\n *\r\n * declare module '@vue/runtime-core' {\r\n *   interface ComponentCustomProperties {\r\n *     $router: Router\r\n *   }\r\n * }\r\n *\r\n * // effectively adding the router to every component instance\r\n * const app = createApp({})\r\n * const router = createRouter()\r\n * app.config.globalProperties.$router = router\r\n *\r\n * const vm = app.mount('#app')\r\n * // we can access the router from the instance\r\n * vm.$router.push('/')\r\n * ```\r\n */\r\nexport interface ComponentCustomProperties {}\r\n\r\ntype IsDefaultMixinComponent<T> = T extends ComponentOptionsMixin\r\n  ? ComponentOptionsMixin extends T\r\n    ? true\r\n    : false\r\n  : false\r\n\r\ntype MixinToOptionTypes<T> = T extends ComponentOptionsBase<\r\n  infer P,\r\n  infer B,\r\n  infer D,\r\n  infer C,\r\n  infer M,\r\n  infer Mixin,\r\n  infer Extends,\r\n  any,\r\n  any,\r\n  infer Defaults\r\n>\r\n  ? OptionTypesType<P & {}, B & {}, D & {}, C & {}, M & {}, Defaults & {}> &\r\n      IntersectionMixin<Mixin> &\r\n      IntersectionMixin<Extends>\r\n  : never\r\n\r\n// ExtractMixin(map type) is used to resolve circularly references\r\ntype ExtractMixin<T> = {\r\n  Mixin: MixinToOptionTypes<T>\r\n}[T extends ComponentOptionsMixin ? 'Mixin' : never]\r\n\r\ntype IntersectionMixin<T> = IsDefaultMixinComponent<T> extends true\r\n  ? OptionTypesType<{}, {}, {}, {}, {}>\r\n  : UnionToIntersection<ExtractMixin<T>>\r\n\r\ntype UnwrapMixinsType<\r\n  T,\r\n  Type extends OptionTypesKeys\r\n> = T extends OptionTypesType ? T[Type] : never\r\n\r\ntype EnsureNonVoid<T> = T extends void ? {} : T\r\n\r\nexport type ComponentPublicInstanceConstructor<\r\n  T extends ComponentPublicInstance<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M\r\n  > = ComponentPublicInstance<any>,\r\n  Props = any,\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions\r\n> = {\r\n  __isFragment?: never\r\n  __isTeleport?: never\r\n  __isSuspense?: never\r\n  new (...args: any[]): T\r\n}\r\n\r\nexport type CreateComponentPublicInstance<\r\n  P = {},\r\n  B = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  PublicProps = P,\r\n  Defaults = {},\r\n  MakeDefaultsOptional extends boolean = false,\r\n  PublicMixin = IntersectionMixin<Mixin> & IntersectionMixin<Extends>,\r\n  PublicP = UnwrapMixinsType<PublicMixin, 'P'> & EnsureNonVoid<P>,\r\n  PublicB = UnwrapMixinsType<PublicMixin, 'B'> & EnsureNonVoid<B>,\r\n  PublicD = UnwrapMixinsType<PublicMixin, 'D'> & EnsureNonVoid<D>,\r\n  PublicC extends ComputedOptions = UnwrapMixinsType<PublicMixin, 'C'> &\r\n    EnsureNonVoid<C>,\r\n  PublicM extends MethodOptions = UnwrapMixinsType<PublicMixin, 'M'> &\r\n    EnsureNonVoid<M>,\r\n  PublicDefaults = UnwrapMixinsType<PublicMixin, 'Defaults'> &\r\n    EnsureNonVoid<Defaults>\r\n> = ComponentPublicInstance<\r\n  PublicP,\r\n  PublicB,\r\n  PublicD,\r\n  PublicC,\r\n  PublicM,\r\n  E,\r\n  PublicProps,\r\n  PublicDefaults,\r\n  MakeDefaultsOptional,\r\n  ComponentOptionsBase<P, B, D, C, M, Mixin, Extends, E, string, Defaults>\r\n>\r\n\r\n// public properties exposed on the proxy, which is used as the render context\r\n// in templates (as `this` in the render option)\r\nexport type ComponentPublicInstance<\r\n  P = {}, // props type extracted from props option\r\n  B = {}, // raw bindings returned from setup()\r\n  D = {}, // return from data()\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  E extends EmitsOptions = {},\r\n  PublicProps = P,\r\n  Defaults = {},\r\n  MakeDefaultsOptional extends boolean = false,\r\n  Options = ComponentOptionsBase<any, any, any, any, any, any, any, any, any>\r\n> = {\r\n  $: ComponentInternalInstance\r\n  $data: D\r\n  $props: MakeDefaultsOptional extends true\r\n    ? Partial<Defaults> & Omit<P & PublicProps, keyof Defaults>\r\n    : P & PublicProps\r\n  $attrs: Data\r\n  $refs: Data\r\n  $slots: Slots\r\n  $root: ComponentPublicInstance | null\r\n  $parent: ComponentPublicInstance | null\r\n  $emit: EmitFn<E>\r\n  $el: any\r\n  $options: Options & MergedComponentOptionsOverride\r\n  $forceUpdate: () => void\r\n  $nextTick: typeof nextTick\r\n  $watch(\r\n    source: string | Function,\r\n    cb: Function,\r\n    options?: WatchOptions\r\n  ): WatchStopHandle\r\n} & P &\r\n  ShallowUnwrapRef<B> &\r\n  UnwrapNestedRefs<D> &\r\n  ExtractComputedReturns<C> &\r\n  M &\r\n  ComponentCustomProperties\r\n\r\nexport type PublicPropertiesMap = Record<\r\n  string,\r\n  (i: ComponentInternalInstance) => any\r\n>\r\n\r\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (\r\n  i: ComponentInternalInstance | null\r\n): ComponentPublicInstance | ComponentInternalInstance['exposed'] | null => {\r\n  if (!i) return null\r\n  if (isStatefulComponent(i)) return getExposeProxy(i) || i.proxy\r\n  return getPublicInstance(i.parent)\r\n}\r\n\r\nexport const publicPropertiesMap: PublicPropertiesMap =\r\n  // Move PURE marker to new line to workaround compiler discarding it\r\n  // due to type annotation\r\n  /*#__PURE__*/ extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => (__DEV__ ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => (__DEV__ ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => (__DEV__ ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => (__DEV__ ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (__FEATURE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => i.f || (i.f = () => queueJob(i.update)),\r\n    $nextTick: i => i.n || (i.n = nextTick.bind(i.proxy!)),\r\n    $watch: i => (__FEATURE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n  } as PublicPropertiesMap)\r\n\r\nif (__COMPAT__) {\r\n  installCompatInstanceProperties(publicPropertiesMap)\r\n}\r\n\r\nconst enum AccessTypes {\r\n  OTHER,\r\n  SETUP,\r\n  DATA,\r\n  PROPS,\r\n  CONTEXT\r\n}\r\n\r\nexport interface ComponentRenderContext {\r\n  [key: string]: any\r\n  _: ComponentInternalInstance\r\n}\r\n\r\nexport const isReservedPrefix = (key: string) => key === '_' || key === '$'\r\n\r\nexport const PublicInstanceProxyHandlers: ProxyHandler<any> = {\r\n  get({ _: instance }: ComponentRenderContext, key: string) {\r\n    const { ctx, setupState, data, props, accessCache, type, appContext } =\r\n      instance\r\n\r\n    // for internal formatters to know that this is a Vue instance\r\n    if (__DEV__ && key === '__isVue') {\r\n      return true\r\n    }\r\n\r\n    // prioritize <script setup> bindings during dev.\r\n    // this allows even properties that start with _ or $ to be used - so that\r\n    // it aligns with the production behavior where the render fn is inlined and\r\n    // indeed has access to all declared variables.\r\n    if (\r\n      __DEV__ &&\r\n      setupState !== EMPTY_OBJ &&\r\n      setupState.__isScriptSetup &&\r\n      hasOwn(setupState, key)\r\n    ) {\r\n      return setupState[key]\r\n    }\r\n\r\n    // data / props / ctx\r\n    // This getter gets called for every property access on the render context\r\n    // during render and is a major hotspot. The most expensive part of this\r\n    // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n    // access on a plain object, so we use an accessCache object (with null\r\n    // prototype) to memoize what access type a key corresponds to.\r\n    let normalizedProps\r\n    if (key[0] !== '$') {\r\n      const n = accessCache![key]\r\n      if (n !== undefined) {\r\n        switch (n) {\r\n          case AccessTypes.SETUP:\r\n            return setupState[key]\r\n          case AccessTypes.DATA:\r\n            return data[key]\r\n          case AccessTypes.CONTEXT:\r\n            return ctx[key]\r\n          case AccessTypes.PROPS:\r\n            return props![key]\r\n          // default: just fallthrough\r\n        }\r\n      } else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n        accessCache![key] = AccessTypes.SETUP\r\n        return setupState[key]\r\n      } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n        accessCache![key] = AccessTypes.DATA\r\n        return data[key]\r\n      } else if (\r\n        // only cache other properties when instance has declared (thus stable)\r\n        // props\r\n        (normalizedProps = instance.propsOptions[0]) &&\r\n        hasOwn(normalizedProps, key)\r\n      ) {\r\n        accessCache![key] = AccessTypes.PROPS\r\n        return props![key]\r\n      } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n        accessCache![key] = AccessTypes.CONTEXT\r\n        return ctx[key]\r\n      } else if (!__FEATURE_OPTIONS_API__ || shouldCacheAccess) {\r\n        accessCache![key] = AccessTypes.OTHER\r\n      }\r\n    }\r\n\r\n    const publicGetter = publicPropertiesMap[key]\r\n    let cssModule, globalProperties\r\n    // public $xxx properties\r\n    if (publicGetter) {\r\n      if (key === '$attrs') {\r\n        track(instance, TrackOpTypes.GET, key)\r\n        __DEV__ && markAttrsAccessed()\r\n      }\r\n      return publicGetter(instance)\r\n    } else if (\r\n      // css module (injected by vue-loader)\r\n      (cssModule = type.__cssModules) &&\r\n      (cssModule = cssModule[key])\r\n    ) {\r\n      return cssModule\r\n    } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n      // user may set custom properties to `this` that start with `$`\r\n      accessCache![key] = AccessTypes.CONTEXT\r\n      return ctx[key]\r\n    } else if (\r\n      // global properties\r\n      ((globalProperties = appContext.config.globalProperties),\r\n      hasOwn(globalProperties, key))\r\n    ) {\r\n      if (__COMPAT__) {\r\n        const desc = Object.getOwnPropertyDescriptor(globalProperties, key)!\r\n        if (desc.get) {\r\n          return desc.get.call(instance.proxy)\r\n        } else {\r\n          const val = globalProperties[key]\r\n          return isFunction(val)\r\n            ? Object.assign(val.bind(instance.proxy), val)\r\n            : val\r\n        }\r\n      } else {\r\n        return globalProperties[key]\r\n      }\r\n    } else if (\r\n      __DEV__ &&\r\n      currentRenderingInstance &&\r\n      (!isString(key) ||\r\n        // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n        // to infinite warning loop\r\n        key.indexOf('__v') !== 0)\r\n    ) {\r\n      if (data !== EMPTY_OBJ && isReservedPrefix(key[0]) && hasOwn(data, key)) {\r\n        warn(\r\n          `Property ${JSON.stringify(\r\n            key\r\n          )} must be accessed via $data because it starts with a reserved ` +\r\n            `character (\"$\" or \"_\") and is not proxied on the render context.`\r\n        )\r\n      } else if (instance === currentRenderingInstance) {\r\n        warn(\r\n          `Property ${JSON.stringify(key)} was accessed during render ` +\r\n            `but is not defined on instance.`\r\n        )\r\n      }\r\n    }\r\n  },\r\n\r\n  set(\r\n    { _: instance }: ComponentRenderContext,\r\n    key: string,\r\n    value: any\r\n  ): boolean {\r\n    const { data, setupState, ctx } = instance\r\n    if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n      setupState[key] = value\r\n      return true\r\n    } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n      data[key] = value\r\n      return true\r\n    } else if (hasOwn(instance.props, key)) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Attempting to mutate prop \"${key}\". Props are readonly.`,\r\n          instance\r\n        )\r\n      return false\r\n    }\r\n    if (key[0] === '$' && key.slice(1) in instance) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Attempting to mutate public property \"${key}\". ` +\r\n            `Properties starting with $ are reserved and readonly.`,\r\n          instance\r\n        )\r\n      return false\r\n    } else {\r\n      if (__DEV__ && key in instance.appContext.config.globalProperties) {\r\n        Object.defineProperty(ctx, key, {\r\n          enumerable: true,\r\n          configurable: true,\r\n          value\r\n        })\r\n      } else {\r\n        ctx[key] = value\r\n      }\r\n    }\r\n    return true\r\n  },\r\n\r\n  has(\r\n    {\r\n      _: { data, setupState, accessCache, ctx, appContext, propsOptions }\r\n    }: ComponentRenderContext,\r\n    key: string\r\n  ) {\r\n    let normalizedProps\r\n    return (\r\n      !!accessCache![key] ||\r\n      (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n      (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n      ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n      hasOwn(ctx, key) ||\r\n      hasOwn(publicPropertiesMap, key) ||\r\n      hasOwn(appContext.config.globalProperties, key)\r\n    )\r\n  },\r\n\r\n  defineProperty(\r\n    target: ComponentRenderContext,\r\n    key: string,\r\n    descriptor: PropertyDescriptor\r\n  ) {\r\n    if (descriptor.get != null) {\r\n      // invalidate key cache of a getter based property #5417\r\n      target._.accessCache![key] = 0\r\n    } else if (hasOwn(descriptor, 'value')) {\r\n      this.set!(target, key, descriptor.value, null)\r\n    }\r\n    return Reflect.defineProperty(target, key, descriptor)\r\n  }\r\n}\r\n\r\nif (__DEV__ && !__TEST__) {\r\n  PublicInstanceProxyHandlers.ownKeys = (target: ComponentRenderContext) => {\r\n    warn(\r\n      `Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n        `The keys will be empty in production mode to avoid performance overhead.`\r\n    )\r\n    return Reflect.ownKeys(target)\r\n  }\r\n}\r\n\r\nexport const RuntimeCompiledPublicInstanceProxyHandlers = /*#__PURE__*/ extend(\r\n  {},\r\n  PublicInstanceProxyHandlers,\r\n  {\r\n    get(target: ComponentRenderContext, key: string) {\r\n      // fast path for unscopables when using `with` block\r\n      if ((key as any) === Symbol.unscopables) {\r\n        return\r\n      }\r\n      return PublicInstanceProxyHandlers.get!(target, key, target)\r\n    },\r\n    has(_: ComponentRenderContext, key: string) {\r\n      const has = key[0] !== '_' && !isGloballyWhitelisted(key)\r\n      if (__DEV__ && !has && PublicInstanceProxyHandlers.has!(_, key)) {\r\n        warn(\r\n          `Property ${JSON.stringify(\r\n            key\r\n          )} should not start with _ which is a reserved prefix for Vue internals.`\r\n        )\r\n      }\r\n      return has\r\n    }\r\n  }\r\n)\r\n\r\n// dev only\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nexport function createDevRenderContext(instance: ComponentInternalInstance) {\r\n  const target: Record<string, any> = {}\r\n\r\n  // expose internal instance for proxy handlers\r\n  Object.defineProperty(target, `_`, {\r\n    configurable: true,\r\n    enumerable: false,\r\n    get: () => instance\r\n  })\r\n\r\n  // expose public properties\r\n  Object.keys(publicPropertiesMap).forEach(key => {\r\n    Object.defineProperty(target, key, {\r\n      configurable: true,\r\n      enumerable: false,\r\n      get: () => publicPropertiesMap[key](instance),\r\n      // intercepted by the proxy so no need for implementation,\r\n      // but needed to prevent set errors\r\n      set: NOOP\r\n    })\r\n  })\r\n\r\n  return target as ComponentRenderContext\r\n}\r\n\r\n// dev only\r\nexport function exposePropsOnRenderContext(\r\n  instance: ComponentInternalInstance\r\n) {\r\n  const {\r\n    ctx,\r\n    propsOptions: [propsOptions]\r\n  } = instance\r\n  if (propsOptions) {\r\n    Object.keys(propsOptions).forEach(key => {\r\n      Object.defineProperty(ctx, key, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get: () => instance.props[key],\r\n        set: NOOP\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// dev only\r\nexport function exposeSetupStateOnRenderContext(\r\n  instance: ComponentInternalInstance\r\n) {\r\n  const { ctx, setupState } = instance\r\n  Object.keys(toRaw(setupState)).forEach(key => {\r\n    if (!setupState.__isScriptSetup) {\r\n      if (isReservedPrefix(key[0])) {\r\n        warn(\r\n          `setup() return property ${JSON.stringify(\r\n            key\r\n          )} should not start with \"$\" or \"_\" ` +\r\n            `which are reserved prefixes for Vue internals.`\r\n        )\r\n        return\r\n      }\r\n      Object.defineProperty(ctx, key, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get: () => setupState[key],\r\n        set: NOOP\r\n      })\r\n    }\r\n  })\r\n}\r\n","import {\r\n  extend,\r\n  looseEqual,\r\n  looseIndexOf,\r\n  NOOP,\r\n  toDisplayString,\r\n  toNumber\r\n} from '@vue/shared'\r\nimport {\r\n  ComponentPublicInstance,\r\n  PublicPropertiesMap\r\n} from '../componentPublicInstance'\r\nimport { getCompatChildren } from './instanceChildren'\r\nimport {\r\n  DeprecationTypes,\r\n  assertCompatEnabled,\r\n  isCompatEnabled\r\n} from './compatConfig'\r\nimport { off, on, once } from './instanceEventEmitter'\r\nimport { getCompatListeners } from './instanceListeners'\r\nimport { shallowReadonly } from '@vue/reactivity'\r\nimport { legacySlotProxyHandlers } from './componentFunctional'\r\nimport { compatH } from './renderFn'\r\nimport { createCommentVNode, createTextVNode } from '../vnode'\r\nimport { renderList } from '../helpers/renderList'\r\nimport {\r\n  legacyBindDynamicKeys,\r\n  legacyBindObjectListeners,\r\n  legacyBindObjectProps,\r\n  legacyCheckKeyCodes,\r\n  legacyMarkOnce,\r\n  legacyPrependModifier,\r\n  legacyRenderSlot,\r\n  legacyRenderStatic,\r\n  legacyresolveScopedSlots\r\n} from './renderHelpers'\r\nimport { resolveFilter } from '../helpers/resolveAssets'\r\nimport { InternalSlots, Slots } from '../componentSlots'\r\nimport { ContextualRenderFn } from '../componentRenderContext'\r\nimport { resolveMergedOptions } from '../componentOptions'\r\n\r\nexport type LegacyPublicInstance = ComponentPublicInstance &\r\n  LegacyPublicProperties\r\n\r\nexport interface LegacyPublicProperties {\r\n  $set(target: object, key: string, value: any): void\r\n  $delete(target: object, key: string): void\r\n  $mount(el?: string | Element): this\r\n  $destroy(): void\r\n  $scopedSlots: Slots\r\n  $on(event: string | string[], fn: Function): this\r\n  $once(event: string, fn: Function): this\r\n  $off(event?: string | string[], fn?: Function): this\r\n  $children: LegacyPublicProperties[]\r\n  $listeners: Record<string, Function | Function[]>\r\n}\r\n\r\nexport function installCompatInstanceProperties(map: PublicPropertiesMap) {\r\n  const set = (target: any, key: any, val: any) => {\r\n    target[key] = val\r\n  }\r\n\r\n  const del = (target: any, key: any) => {\r\n    delete target[key]\r\n  }\r\n\r\n  extend(map, {\r\n    $set: i => {\r\n      assertCompatEnabled(DeprecationTypes.INSTANCE_SET, i)\r\n      return set\r\n    },\r\n\r\n    $delete: i => {\r\n      assertCompatEnabled(DeprecationTypes.INSTANCE_DELETE, i)\r\n      return del\r\n    },\r\n\r\n    $mount: i => {\r\n      assertCompatEnabled(\r\n        DeprecationTypes.GLOBAL_MOUNT,\r\n        null /* this warning is global */\r\n      )\r\n      // root mount override from ./global.ts in installCompatMount\r\n      return i.ctx._compat_mount || NOOP\r\n    },\r\n\r\n    $destroy: i => {\r\n      assertCompatEnabled(DeprecationTypes.INSTANCE_DESTROY, i)\r\n      // root destroy override from ./global.ts in installCompatMount\r\n      return i.ctx._compat_destroy || NOOP\r\n    },\r\n\r\n    // overrides existing accessor\r\n    $slots: i => {\r\n      if (\r\n        isCompatEnabled(DeprecationTypes.RENDER_FUNCTION, i) &&\r\n        i.render &&\r\n        i.render._compatWrapped\r\n      ) {\r\n        return new Proxy(i.slots, legacySlotProxyHandlers)\r\n      }\r\n      return __DEV__ ? shallowReadonly(i.slots) : i.slots\r\n    },\r\n\r\n    $scopedSlots: i => {\r\n      assertCompatEnabled(DeprecationTypes.INSTANCE_SCOPED_SLOTS, i)\r\n      const res: InternalSlots = {}\r\n      for (const key in i.slots) {\r\n        const fn = i.slots[key]!\r\n        if (!(fn as ContextualRenderFn)._ns /* non-scoped slot */) {\r\n          res[key] = fn\r\n        }\r\n      }\r\n      return res\r\n    },\r\n\r\n    $on: i => on.bind(null, i),\r\n    $once: i => once.bind(null, i),\r\n    $off: i => off.bind(null, i),\r\n\r\n    $children: getCompatChildren,\r\n    $listeners: getCompatListeners\r\n  } as PublicPropertiesMap)\r\n\r\n  /* istanbul ignore if */\r\n  if (isCompatEnabled(DeprecationTypes.PRIVATE_APIS, null)) {\r\n    extend(map, {\r\n      // needed by many libs / render fns\r\n      $vnode: i => i.vnode,\r\n\r\n      // inject additional properties into $options for compat\r\n      // e.g. vuex needs this.$options.parent\r\n      $options: i => {\r\n        const res = extend({}, resolveMergedOptions(i))\r\n        res.parent = i.proxy!.$parent\r\n        res.propsData = i.vnode.props\r\n        return res\r\n      },\r\n\r\n      // some private properties that are likely accessed...\r\n      _self: i => i.proxy,\r\n      _uid: i => i.uid,\r\n      _data: i => i.data,\r\n      _isMounted: i => i.isMounted,\r\n      _isDestroyed: i => i.isUnmounted,\r\n\r\n      // v2 render helpers\r\n      $createElement: () => compatH,\r\n      _c: () => compatH,\r\n      _o: () => legacyMarkOnce,\r\n      _n: () => toNumber,\r\n      _s: () => toDisplayString,\r\n      _l: () => renderList,\r\n      _t: i => legacyRenderSlot.bind(null, i),\r\n      _q: () => looseEqual,\r\n      _i: () => looseIndexOf,\r\n      _m: i => legacyRenderStatic.bind(null, i),\r\n      _f: () => resolveFilter,\r\n      _k: i => legacyCheckKeyCodes.bind(null, i),\r\n      _b: () => legacyBindObjectProps,\r\n      _v: () => createTextVNode,\r\n      _e: () => createCommentVNode,\r\n      _u: () => legacyresolveScopedSlots,\r\n      _g: () => legacyBindObjectListeners,\r\n      _d: () => legacyBindDynamicKeys,\r\n      _p: () => legacyPrependModifier\r\n    } as PublicPropertiesMap)\r\n  }\r\n}\r\n","import { isPlainObject } from '@vue/shared'\r\nimport { DeprecationTypes, warnDeprecation } from './compatConfig'\r\n\r\nexport function deepMergeData(to: any, from: any) {\r\n  for (const key in from) {\r\n    const toVal = to[key]\r\n    const fromVal = from[key]\r\n    if (key in to && isPlainObject(toVal) && isPlainObject(fromVal)) {\r\n      __DEV__ && warnDeprecation(DeprecationTypes.OPTIONS_DATA_MERGE, null, key)\r\n      deepMergeData(toVal, fromVal)\r\n    } else {\r\n      to[key] = fromVal\r\n    }\r\n  }\r\n  return to\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  Data,\r\n  SetupContext,\r\n  ComponentInternalOptions,\r\n  Component,\r\n  ConcreteComponent,\r\n  InternalRenderFunction,\r\n  LifecycleHooks\r\n} from './component'\r\nimport {\r\n  isFunction,\r\n  extend,\r\n  isString,\r\n  isObject,\r\n  isArray,\r\n  NOOP,\r\n  isPromise,\r\n  LooseRequired,\r\n  UnionToIntersection\r\n} from '@vue/shared'\r\nimport { isRef, Ref } from '@vue/reactivity'\r\nimport { computed } from './apiComputed'\r\nimport {\r\n  watch,\r\n  WatchOptions,\r\n  WatchCallback,\r\n  createPathGetter\r\n} from './apiWatch'\r\nimport { provide, inject } from './apiInject'\r\nimport {\r\n  onBeforeMount,\r\n  onMounted,\r\n  onBeforeUpdate,\r\n  onUpdated,\r\n  onErrorCaptured,\r\n  onRenderTracked,\r\n  onBeforeUnmount,\r\n  onUnmounted,\r\n  onActivated,\r\n  onDeactivated,\r\n  onRenderTriggered,\r\n  DebuggerHook,\r\n  ErrorCapturedHook,\r\n  onServerPrefetch\r\n} from './apiLifecycle'\r\nimport {\r\n  reactive,\r\n  ComputedGetter,\r\n  WritableComputedOptions\r\n} from '@vue/reactivity'\r\nimport {\r\n  ComponentObjectPropsOptions,\r\n  ExtractPropTypes,\r\n  ExtractDefaultPropTypes\r\n} from './componentProps'\r\nimport { EmitsOptions, EmitsToProps } from './componentEmits'\r\nimport { Directive } from './directives'\r\nimport {\r\n  CreateComponentPublicInstance,\r\n  ComponentPublicInstance,\r\n  isReservedPrefix\r\n} from './componentPublicInstance'\r\nimport { warn } from './warning'\r\nimport { VNodeChild } from './vnode'\r\nimport { callWithAsyncErrorHandling } from './errorHandling'\r\nimport { deepMergeData } from './compat/data'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport {\r\n  CompatConfig,\r\n  isCompatEnabled,\r\n  softAssertCompatEnabled\r\n} from './compat/compatConfig'\r\nimport { OptionMergeFunction } from './apiCreateApp'\r\n\r\n/**\r\n * Interface for declaring custom options.\r\n *\r\n * @example\r\n * ```ts\r\n * declare module '@vue/runtime-core' {\r\n *   interface ComponentCustomOptions {\r\n *     beforeRouteUpdate?(\r\n *       to: Route,\r\n *       from: Route,\r\n *       next: () => void\r\n *     ): void\r\n *   }\r\n * }\r\n * ```\r\n */\r\nexport interface ComponentCustomOptions {}\r\n\r\nexport type RenderFunction = () => VNodeChild\r\n\r\ntype ExtractOptionProp<T> = T extends ComponentOptionsBase<\r\n  infer P, // Props\r\n  any, // RawBindings\r\n  any, // D\r\n  any, // C\r\n  any, // M\r\n  any, // Mixin\r\n  any, // Extends\r\n  any // EmitsOptions\r\n>\r\n  ? unknown extends P\r\n    ? {}\r\n    : P\r\n  : {}\r\n\r\nexport interface ComponentOptionsBase<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions,\r\n  M extends MethodOptions,\r\n  Mixin extends ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin,\r\n  E extends EmitsOptions,\r\n  EE extends string = string,\r\n  Defaults = {}\r\n> extends LegacyOptions<Props, D, C, M, Mixin, Extends>,\r\n    ComponentInternalOptions,\r\n    ComponentCustomOptions {\r\n  setup?: (\r\n    this: void,\r\n    props: Readonly<\r\n      LooseRequired<\r\n        Props &\r\n          UnionToIntersection<ExtractOptionProp<Mixin>> &\r\n          UnionToIntersection<ExtractOptionProp<Extends>>\r\n      >\r\n    >,\r\n    ctx: SetupContext<E>\r\n  ) => Promise<RawBindings> | RawBindings | RenderFunction | void\r\n  name?: string\r\n  template?: string | object // can be a direct DOM node\r\n  // Note: we are intentionally using the signature-less `Function` type here\r\n  // since any type with signature will cause the whole inference to fail when\r\n  // the return expression contains reference to `this`.\r\n  // Luckily `render()` doesn't need any arguments nor does it care about return\r\n  // type.\r\n  render?: Function\r\n  components?: Record<string, Component>\r\n  directives?: Record<string, Directive>\r\n  inheritAttrs?: boolean\r\n  emits?: (E | EE[]) & ThisType<void>\r\n  // TODO infer public instance type based on exposed keys\r\n  expose?: string[]\r\n  serverPrefetch?(): Promise<any>\r\n\r\n  // Runtime compiler only -----------------------------------------------------\r\n  compilerOptions?: RuntimeCompilerOptions\r\n\r\n  // Internal ------------------------------------------------------------------\r\n\r\n  /**\r\n   * SSR only. This is produced by compiler-ssr and attached in compiler-sfc\r\n   * not user facing, so the typing is lax and for test only.\r\n   * @internal\r\n   */\r\n  ssrRender?: (\r\n    ctx: any,\r\n    push: (item: any) => void,\r\n    parentInstance: ComponentInternalInstance,\r\n    attrs: Data | undefined,\r\n    // for compiler-optimized bindings\r\n    $props: ComponentInternalInstance['props'],\r\n    $setup: ComponentInternalInstance['setupState'],\r\n    $data: ComponentInternalInstance['data'],\r\n    $options: ComponentInternalInstance['ctx']\r\n  ) => void\r\n\r\n  /**\r\n   * Only generated by compiler-sfc to mark a ssr render function inlined and\r\n   * returned from setup()\r\n   * @internal\r\n   */\r\n  __ssrInlineRender?: boolean\r\n\r\n  /**\r\n   * marker for AsyncComponentWrapper\r\n   * @internal\r\n   */\r\n  __asyncLoader?: () => Promise<ConcreteComponent>\r\n  /**\r\n   * the inner component resolved by the AsyncComponentWrapper\r\n   * @internal\r\n   */\r\n  __asyncResolved?: ConcreteComponent\r\n\r\n  // Type differentiators ------------------------------------------------------\r\n\r\n  // Note these are internal but need to be exposed in d.ts for type inference\r\n  // to work!\r\n\r\n  // type-only differentiator to separate OptionWithoutProps from a constructor\r\n  // type returned by defineComponent() or FunctionalComponent\r\n  call?: (this: unknown, ...args: unknown[]) => never\r\n  // type-only differentiators for built-in Vnode types\r\n  __isFragment?: never\r\n  __isTeleport?: never\r\n  __isSuspense?: never\r\n\r\n  __defaults?: Defaults\r\n}\r\n\r\n/**\r\n * Subset of compiler options that makes sense for the runtime.\r\n */\r\nexport interface RuntimeCompilerOptions {\r\n  isCustomElement?: (tag: string) => boolean\r\n  whitespace?: 'preserve' | 'condense'\r\n  comments?: boolean\r\n  delimiters?: [string, string]\r\n}\r\n\r\nexport type ComponentOptionsWithoutProps<\r\n  Props = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  PE = Props & EmitsToProps<E>\r\n> = ComponentOptionsBase<\r\n  PE,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  {}\r\n> & {\r\n  props?: undefined\r\n} & ThisType<\r\n    CreateComponentPublicInstance<PE, RawBindings, D, C, M, Mixin, Extends, E>\r\n  >\r\n\r\nexport type ComponentOptionsWithArrayProps<\r\n  PropNames extends string = string,\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  Props = Readonly<{ [key in PropNames]?: any }> & EmitsToProps<E>\r\n> = ComponentOptionsBase<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  {}\r\n> & {\r\n  props: PropNames[]\r\n} & ThisType<\r\n    CreateComponentPublicInstance<\r\n      Props,\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E\r\n    >\r\n  >\r\n\r\nexport type ComponentOptionsWithObjectProps<\r\n  PropsOptions = ComponentObjectPropsOptions,\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  Props = Readonly<ExtractPropTypes<PropsOptions>> & EmitsToProps<E>,\r\n  Defaults = ExtractDefaultPropTypes<PropsOptions>\r\n> = ComponentOptionsBase<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  Defaults\r\n> & {\r\n  props: PropsOptions & ThisType<void>\r\n} & ThisType<\r\n    CreateComponentPublicInstance<\r\n      Props,\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E,\r\n      Props,\r\n      Defaults,\r\n      false\r\n    >\r\n  >\r\n\r\nexport type ComponentOptions<\r\n  Props = {},\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = any,\r\n  M extends MethodOptions = any,\r\n  Mixin extends ComponentOptionsMixin = any,\r\n  Extends extends ComponentOptionsMixin = any,\r\n  E extends EmitsOptions = any\r\n> = ComponentOptionsBase<Props, RawBindings, D, C, M, Mixin, Extends, E> &\r\n  ThisType<\r\n    CreateComponentPublicInstance<\r\n      {},\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E,\r\n      Readonly<Props>\r\n    >\r\n  >\r\n\r\nexport type ComponentOptionsMixin = ComponentOptionsBase<\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any\r\n>\r\n\r\nexport type ComputedOptions = Record<\r\n  string,\r\n  ComputedGetter<any> | WritableComputedOptions<any>\r\n>\r\n\r\nexport interface MethodOptions {\r\n  [key: string]: Function\r\n}\r\n\r\nexport type ExtractComputedReturns<T extends any> = {\r\n  [key in keyof T]: T[key] extends { get: (...args: any[]) => infer TReturn }\r\n    ? TReturn\r\n    : T[key] extends (...args: any[]) => infer TReturn\r\n    ? TReturn\r\n    : never\r\n}\r\n\r\nexport type ObjectWatchOptionItem = {\r\n  handler: WatchCallback | string\r\n} & WatchOptions\r\n\r\ntype WatchOptionItem = string | WatchCallback | ObjectWatchOptionItem\r\n\r\ntype ComponentWatchOptionItem = WatchOptionItem | WatchOptionItem[]\r\n\r\ntype ComponentWatchOptions = Record<string, ComponentWatchOptionItem>\r\n\r\nexport type ComponentProvideOptions = ObjectProvideOptions | Function\r\n\r\ntype ObjectProvideOptions = Record<string | symbol, unknown>\r\n\r\ntype ComponentInjectOptions = string[] | ObjectInjectOptions\r\n\r\ntype ObjectInjectOptions = Record<\r\n  string | symbol,\r\n  string | symbol | { from?: string | symbol; default?: unknown }\r\n>\r\n\r\ninterface LegacyOptions<\r\n  Props,\r\n  D,\r\n  C extends ComputedOptions,\r\n  M extends MethodOptions,\r\n  Mixin extends ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin\r\n> {\r\n  compatConfig?: CompatConfig\r\n\r\n  // allow any custom options\r\n  [key: string]: any\r\n\r\n  // state\r\n  // Limitation: we cannot expose RawBindings on the `this` context for data\r\n  // since that leads to some sort of circular inference and breaks ThisType\r\n  // for the entire component.\r\n  data?: (\r\n    this: CreateComponentPublicInstance<\r\n      Props,\r\n      {},\r\n      {},\r\n      {},\r\n      MethodOptions,\r\n      Mixin,\r\n      Extends\r\n    >,\r\n    vm: CreateComponentPublicInstance<\r\n      Props,\r\n      {},\r\n      {},\r\n      {},\r\n      MethodOptions,\r\n      Mixin,\r\n      Extends\r\n    >\r\n  ) => D\r\n  computed?: C\r\n  methods?: M\r\n  watch?: ComponentWatchOptions\r\n  provide?: ComponentProvideOptions\r\n  inject?: ComponentInjectOptions\r\n\r\n  // assets\r\n  filters?: Record<string, Function>\r\n\r\n  // composition\r\n  mixins?: Mixin[]\r\n  extends?: Extends\r\n\r\n  // lifecycle\r\n  beforeCreate?(): void\r\n  created?(): void\r\n  beforeMount?(): void\r\n  mounted?(): void\r\n  beforeUpdate?(): void\r\n  updated?(): void\r\n  activated?(): void\r\n  deactivated?(): void\r\n  /** @deprecated use `beforeUnmount` instead */\r\n  beforeDestroy?(): void\r\n  beforeUnmount?(): void\r\n  /** @deprecated use `unmounted` instead */\r\n  destroyed?(): void\r\n  unmounted?(): void\r\n  renderTracked?: DebuggerHook\r\n  renderTriggered?: DebuggerHook\r\n  errorCaptured?: ErrorCapturedHook\r\n\r\n  /**\r\n   * runtime compile only\r\n   * @deprecated use `compilerOptions.delimiters` instead.\r\n   */\r\n  delimiters?: [string, string]\r\n\r\n  /**\r\n   * #3468\r\n   *\r\n   * type-only, used to assist Mixin's type inference,\r\n   * typescript will try to simplify the inferred `Mixin` type,\r\n   * with the `__differentiator`, typescript won't be able to combine different mixins,\r\n   * because the `__differentiator` will be different\r\n   */\r\n  __differentiator?: keyof D | keyof C | keyof M\r\n}\r\n\r\ntype MergedHook<T = () => void> = T | T[]\r\n\r\nexport type MergedComponentOptions = ComponentOptions &\r\n  MergedComponentOptionsOverride\r\n\r\nexport type MergedComponentOptionsOverride = {\r\n  beforeCreate?: MergedHook\r\n  created?: MergedHook\r\n  beforeMount?: MergedHook\r\n  mounted?: MergedHook\r\n  beforeUpdate?: MergedHook\r\n  updated?: MergedHook\r\n  activated?: MergedHook\r\n  deactivated?: MergedHook\r\n  /** @deprecated use `beforeUnmount` instead */\r\n  beforeDestroy?: MergedHook\r\n  beforeUnmount?: MergedHook\r\n  /** @deprecated use `unmounted` instead */\r\n  destroyed?: MergedHook\r\n  unmounted?: MergedHook\r\n  renderTracked?: MergedHook<DebuggerHook>\r\n  renderTriggered?: MergedHook<DebuggerHook>\r\n  errorCaptured?: MergedHook<ErrorCapturedHook>\r\n}\r\n\r\nexport type OptionTypesKeys = 'P' | 'B' | 'D' | 'C' | 'M' | 'Defaults'\r\n\r\nexport type OptionTypesType<\r\n  P = {},\r\n  B = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Defaults = {}\r\n> = {\r\n  P: P\r\n  B: B\r\n  D: D\r\n  C: C\r\n  M: M\r\n  Defaults: Defaults\r\n}\r\n\r\nconst enum OptionTypes {\r\n  PROPS = 'Props',\r\n  DATA = 'Data',\r\n  COMPUTED = 'Computed',\r\n  METHODS = 'Methods',\r\n  INJECT = 'Inject'\r\n}\r\n\r\nfunction createDuplicateChecker() {\r\n  const cache = Object.create(null)\r\n  return (type: OptionTypes, key: string) => {\r\n    if (cache[key]) {\r\n      warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`)\r\n    } else {\r\n      cache[key] = type\r\n    }\r\n  }\r\n}\r\n\r\nexport let shouldCacheAccess = true\r\n\r\nexport function applyOptions(instance: ComponentInternalInstance) {\r\n  const options = resolveMergedOptions(instance)\r\n  const publicThis = instance.proxy! as any\r\n  const ctx = instance.ctx\r\n\r\n  // do not cache property access on public proxy during state initialization\r\n  shouldCacheAccess = false\r\n\r\n  // call beforeCreate first before accessing other options since\r\n  // the hook may mutate resolved options (#2791)\r\n  if (options.beforeCreate) {\r\n    callHook(options.beforeCreate, instance, LifecycleHooks.BEFORE_CREATE)\r\n  }\r\n\r\n  const {\r\n    // state\r\n    data: dataOptions,\r\n    computed: computedOptions,\r\n    methods,\r\n    watch: watchOptions,\r\n    provide: provideOptions,\r\n    inject: injectOptions,\r\n    // lifecycle\r\n    created,\r\n    beforeMount,\r\n    mounted,\r\n    beforeUpdate,\r\n    updated,\r\n    activated,\r\n    deactivated,\r\n    beforeDestroy,\r\n    beforeUnmount,\r\n    destroyed,\r\n    unmounted,\r\n    render,\r\n    renderTracked,\r\n    renderTriggered,\r\n    errorCaptured,\r\n    serverPrefetch,\r\n    // public API\r\n    expose,\r\n    inheritAttrs,\r\n    // assets\r\n    components,\r\n    directives,\r\n    filters\r\n  } = options\r\n\r\n  const checkDuplicateProperties = __DEV__ ? createDuplicateChecker() : null\r\n\r\n  if (__DEV__) {\r\n    const [propsOptions] = instance.propsOptions\r\n    if (propsOptions) {\r\n      for (const key in propsOptions) {\r\n        checkDuplicateProperties!(OptionTypes.PROPS, key)\r\n      }\r\n    }\r\n  }\r\n\r\n  // options initialization order (to be consistent with Vue 2):\r\n  // - props (already done outside of this function)\r\n  // - inject\r\n  // - methods\r\n  // - data (deferred since it relies on `this` access)\r\n  // - computed\r\n  // - watch (deferred since it relies on `this` access)\r\n\r\n  if (injectOptions) {\r\n    resolveInjections(\r\n      injectOptions,\r\n      ctx,\r\n      checkDuplicateProperties,\r\n      instance.appContext.config.unwrapInjectedRef\r\n    )\r\n  }\r\n\r\n  if (methods) {\r\n    for (const key in methods) {\r\n      const methodHandler = (methods as MethodOptions)[key]\r\n      if (isFunction(methodHandler)) {\r\n        // In dev mode, we use the `createRenderContext` function to define\r\n        // methods to the proxy target, and those are read-only but\r\n        // reconfigurable, so it needs to be redefined here\r\n        if (__DEV__) {\r\n          Object.defineProperty(ctx, key, {\r\n            value: methodHandler.bind(publicThis),\r\n            configurable: true,\r\n            enumerable: true,\r\n            writable: true\r\n          })\r\n        } else {\r\n          ctx[key] = methodHandler.bind(publicThis)\r\n        }\r\n        if (__DEV__) {\r\n          checkDuplicateProperties!(OptionTypes.METHODS, key)\r\n        }\r\n      } else if (__DEV__) {\r\n        warn(\r\n          `Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n            `Did you reference the function correctly?`\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  if (dataOptions) {\r\n    if (__DEV__ && !isFunction(dataOptions)) {\r\n      warn(\r\n        `The data option must be a function. ` +\r\n          `Plain object usage is no longer supported.`\r\n      )\r\n    }\r\n    const data = dataOptions.call(publicThis, publicThis)\r\n    if (__DEV__ && isPromise(data)) {\r\n      warn(\r\n        `data() returned a Promise - note data() cannot be async; If you ` +\r\n          `intend to perform data fetching before component renders, use ` +\r\n          `async setup() + <Suspense>.`\r\n      )\r\n    }\r\n    if (!isObject(data)) {\r\n      __DEV__ && warn(`data() should return an object.`)\r\n    } else {\r\n      instance.data = reactive(data)\r\n      if (__DEV__) {\r\n        for (const key in data) {\r\n          checkDuplicateProperties!(OptionTypes.DATA, key)\r\n          // expose data on ctx during dev\r\n          if (!isReservedPrefix(key[0])) {\r\n            Object.defineProperty(ctx, key, {\r\n              configurable: true,\r\n              enumerable: true,\r\n              get: () => data[key],\r\n              set: NOOP\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // state initialization complete at this point - start caching access\r\n  shouldCacheAccess = true\r\n\r\n  if (computedOptions) {\r\n    for (const key in computedOptions) {\r\n      const opt = (computedOptions as ComputedOptions)[key]\r\n      const get = isFunction(opt)\r\n        ? opt.bind(publicThis, publicThis)\r\n        : isFunction(opt.get)\r\n        ? opt.get.bind(publicThis, publicThis)\r\n        : NOOP\r\n      if (__DEV__ && get === NOOP) {\r\n        warn(`Computed property \"${key}\" has no getter.`)\r\n      }\r\n      const set =\r\n        !isFunction(opt) && isFunction(opt.set)\r\n          ? opt.set.bind(publicThis)\r\n          : __DEV__\r\n          ? () => {\r\n              warn(\r\n                `Write operation failed: computed property \"${key}\" is readonly.`\r\n              )\r\n            }\r\n          : NOOP\r\n      const c = computed({\r\n        get,\r\n        set\r\n      })\r\n      Object.defineProperty(ctx, key, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get: () => c.value,\r\n        set: v => (c.value = v)\r\n      })\r\n      if (__DEV__) {\r\n        checkDuplicateProperties!(OptionTypes.COMPUTED, key)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (watchOptions) {\r\n    for (const key in watchOptions) {\r\n      createWatcher(watchOptions[key], ctx, publicThis, key)\r\n    }\r\n  }\r\n\r\n  if (provideOptions) {\r\n    const provides = isFunction(provideOptions)\r\n      ? provideOptions.call(publicThis)\r\n      : provideOptions\r\n    Reflect.ownKeys(provides).forEach(key => {\r\n      provide(key, provides[key])\r\n    })\r\n  }\r\n\r\n  if (created) {\r\n    callHook(created, instance, LifecycleHooks.CREATED)\r\n  }\r\n\r\n  function registerLifecycleHook(\r\n    register: Function,\r\n    hook?: Function | Function[]\r\n  ) {\r\n    if (isArray(hook)) {\r\n      hook.forEach(_hook => register(_hook.bind(publicThis)))\r\n    } else if (hook) {\r\n      register((hook as Function).bind(publicThis))\r\n    }\r\n  }\r\n\r\n  registerLifecycleHook(onBeforeMount, beforeMount)\r\n  registerLifecycleHook(onMounted, mounted)\r\n  registerLifecycleHook(onBeforeUpdate, beforeUpdate)\r\n  registerLifecycleHook(onUpdated, updated)\r\n  registerLifecycleHook(onActivated, activated)\r\n  registerLifecycleHook(onDeactivated, deactivated)\r\n  registerLifecycleHook(onErrorCaptured, errorCaptured)\r\n  registerLifecycleHook(onRenderTracked, renderTracked)\r\n  registerLifecycleHook(onRenderTriggered, renderTriggered)\r\n  registerLifecycleHook(onBeforeUnmount, beforeUnmount)\r\n  registerLifecycleHook(onUnmounted, unmounted)\r\n  registerLifecycleHook(onServerPrefetch, serverPrefetch)\r\n\r\n  if (__COMPAT__) {\r\n    if (\r\n      beforeDestroy &&\r\n      softAssertCompatEnabled(DeprecationTypes.OPTIONS_BEFORE_DESTROY, instance)\r\n    ) {\r\n      registerLifecycleHook(onBeforeUnmount, beforeDestroy)\r\n    }\r\n    if (\r\n      destroyed &&\r\n      softAssertCompatEnabled(DeprecationTypes.OPTIONS_DESTROYED, instance)\r\n    ) {\r\n      registerLifecycleHook(onUnmounted, destroyed)\r\n    }\r\n  }\r\n\r\n  if (isArray(expose)) {\r\n    if (expose.length) {\r\n      const exposed = instance.exposed || (instance.exposed = {})\r\n      expose.forEach(key => {\r\n        Object.defineProperty(exposed, key, {\r\n          get: () => publicThis[key],\r\n          set: val => (publicThis[key] = val)\r\n        })\r\n      })\r\n    } else if (!instance.exposed) {\r\n      instance.exposed = {}\r\n    }\r\n  }\r\n\r\n  // options that are handled when creating the instance but also need to be\r\n  // applied from mixins\r\n  if (render && instance.render === NOOP) {\r\n    instance.render = render as InternalRenderFunction\r\n  }\r\n  if (inheritAttrs != null) {\r\n    instance.inheritAttrs = inheritAttrs\r\n  }\r\n\r\n  // asset options.\r\n  if (components) instance.components = components as any\r\n  if (directives) instance.directives = directives\r\n  if (\r\n    __COMPAT__ &&\r\n    filters &&\r\n    isCompatEnabled(DeprecationTypes.FILTERS, instance)\r\n  ) {\r\n    instance.filters = filters\r\n  }\r\n}\r\n\r\nexport function resolveInjections(\r\n  injectOptions: ComponentInjectOptions,\r\n  ctx: any,\r\n  checkDuplicateProperties = NOOP as any,\r\n  unwrapRef = false\r\n) {\r\n  if (isArray(injectOptions)) {\r\n    injectOptions = normalizeInject(injectOptions)!\r\n  }\r\n  for (const key in injectOptions) {\r\n    const opt = (injectOptions as ObjectInjectOptions)[key]\r\n    let injected: unknown\r\n    if (isObject(opt)) {\r\n      if ('default' in opt) {\r\n        injected = inject(\r\n          opt.from || key,\r\n          opt.default,\r\n          true /* treat default function as factory */\r\n        )\r\n      } else {\r\n        injected = inject(opt.from || key)\r\n      }\r\n    } else {\r\n      injected = inject(opt)\r\n    }\r\n    if (isRef(injected)) {\r\n      // TODO remove the check in 3.3\r\n      if (unwrapRef) {\r\n        Object.defineProperty(ctx, key, {\r\n          enumerable: true,\r\n          configurable: true,\r\n          get: () => (injected as Ref).value,\r\n          set: v => ((injected as Ref).value = v)\r\n        })\r\n      } else {\r\n        if (__DEV__) {\r\n          warn(\r\n            `injected property \"${key}\" is a ref and will be auto-unwrapped ` +\r\n              `and no longer needs \\`.value\\` in the next minor release. ` +\r\n              `To opt-in to the new behavior now, ` +\r\n              `set \\`app.config.unwrapInjectedRef = true\\` (this config is ` +\r\n              `temporary and will not be needed in the future.)`\r\n          )\r\n        }\r\n        ctx[key] = injected\r\n      }\r\n    } else {\r\n      ctx[key] = injected\r\n    }\r\n    if (__DEV__) {\r\n      checkDuplicateProperties!(OptionTypes.INJECT, key)\r\n    }\r\n  }\r\n}\r\n\r\nfunction callHook(\r\n  hook: Function,\r\n  instance: ComponentInternalInstance,\r\n  type: LifecycleHooks\r\n) {\r\n  callWithAsyncErrorHandling(\r\n    isArray(hook)\r\n      ? hook.map(h => h.bind(instance.proxy!))\r\n      : hook.bind(instance.proxy!),\r\n    instance,\r\n    type\r\n  )\r\n}\r\n\r\nexport function createWatcher(\r\n  raw: ComponentWatchOptionItem,\r\n  ctx: Data,\r\n  publicThis: ComponentPublicInstance,\r\n  key: string\r\n) {\r\n  const getter = key.includes('.')\r\n    ? createPathGetter(publicThis, key)\r\n    : () => (publicThis as any)[key]\r\n  if (isString(raw)) {\r\n    const handler = ctx[raw]\r\n    if (isFunction(handler)) {\r\n      watch(getter, handler as WatchCallback)\r\n    } else if (__DEV__) {\r\n      warn(`Invalid watch handler specified by key \"${raw}\"`, handler)\r\n    }\r\n  } else if (isFunction(raw)) {\r\n    watch(getter, raw.bind(publicThis))\r\n  } else if (isObject(raw)) {\r\n    if (isArray(raw)) {\r\n      raw.forEach(r => createWatcher(r, ctx, publicThis, key))\r\n    } else {\r\n      const handler = isFunction(raw.handler)\r\n        ? raw.handler.bind(publicThis)\r\n        : (ctx[raw.handler] as WatchCallback)\r\n      if (isFunction(handler)) {\r\n        watch(getter, handler, raw)\r\n      } else if (__DEV__) {\r\n        warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler)\r\n      }\r\n    }\r\n  } else if (__DEV__) {\r\n    warn(`Invalid watch option: \"${key}\"`, raw)\r\n  }\r\n}\r\n\r\n/**\r\n * Resolve merged options and cache it on the component.\r\n * This is done only once per-component since the merging does not involve\r\n * instances.\r\n */\r\nexport function resolveMergedOptions(\r\n  instance: ComponentInternalInstance\r\n): MergedComponentOptions {\r\n  const base = instance.type as ComponentOptions\r\n  const { mixins, extends: extendsOptions } = base\r\n  const {\r\n    mixins: globalMixins,\r\n    optionsCache: cache,\r\n    config: { optionMergeStrategies }\r\n  } = instance.appContext\r\n  const cached = cache.get(base)\r\n\r\n  let resolved: MergedComponentOptions\r\n\r\n  if (cached) {\r\n    resolved = cached\r\n  } else if (!globalMixins.length && !mixins && !extendsOptions) {\r\n    if (\r\n      __COMPAT__ &&\r\n      isCompatEnabled(DeprecationTypes.PRIVATE_APIS, instance)\r\n    ) {\r\n      resolved = extend({}, base) as MergedComponentOptions\r\n      resolved.parent = instance.parent && instance.parent.proxy\r\n      resolved.propsData = instance.vnode.props\r\n    } else {\r\n      resolved = base as MergedComponentOptions\r\n    }\r\n  } else {\r\n    resolved = {}\r\n    if (globalMixins.length) {\r\n      globalMixins.forEach(m =>\r\n        mergeOptions(resolved, m, optionMergeStrategies, true)\r\n      )\r\n    }\r\n    mergeOptions(resolved, base, optionMergeStrategies)\r\n  }\r\n\r\n  cache.set(base, resolved)\r\n  return resolved\r\n}\r\n\r\nexport function mergeOptions(\r\n  to: any,\r\n  from: any,\r\n  strats: Record<string, OptionMergeFunction>,\r\n  asMixin = false\r\n) {\r\n  if (__COMPAT__ && isFunction(from)) {\r\n    from = from.options\r\n  }\r\n\r\n  const { mixins, extends: extendsOptions } = from\r\n\r\n  if (extendsOptions) {\r\n    mergeOptions(to, extendsOptions, strats, true)\r\n  }\r\n  if (mixins) {\r\n    mixins.forEach((m: ComponentOptionsMixin) =>\r\n      mergeOptions(to, m, strats, true)\r\n    )\r\n  }\r\n\r\n  for (const key in from) {\r\n    if (asMixin && key === 'expose') {\r\n      __DEV__ &&\r\n        warn(\r\n          `\"expose\" option is ignored when declared in mixins or extends. ` +\r\n            `It should only be declared in the base component itself.`\r\n        )\r\n    } else {\r\n      const strat = internalOptionMergeStrats[key] || (strats && strats[key])\r\n      to[key] = strat ? strat(to[key], from[key]) : from[key]\r\n    }\r\n  }\r\n  return to\r\n}\r\n\r\nexport const internalOptionMergeStrats: Record<string, Function> = {\r\n  data: mergeDataFn,\r\n  props: mergeObjectOptions, // TODO\r\n  emits: mergeObjectOptions, // TODO\r\n  // objects\r\n  methods: mergeObjectOptions,\r\n  computed: mergeObjectOptions,\r\n  // lifecycle\r\n  beforeCreate: mergeAsArray,\r\n  created: mergeAsArray,\r\n  beforeMount: mergeAsArray,\r\n  mounted: mergeAsArray,\r\n  beforeUpdate: mergeAsArray,\r\n  updated: mergeAsArray,\r\n  beforeDestroy: mergeAsArray,\r\n  beforeUnmount: mergeAsArray,\r\n  destroyed: mergeAsArray,\r\n  unmounted: mergeAsArray,\r\n  activated: mergeAsArray,\r\n  deactivated: mergeAsArray,\r\n  errorCaptured: mergeAsArray,\r\n  serverPrefetch: mergeAsArray,\r\n  // assets\r\n  components: mergeObjectOptions,\r\n  directives: mergeObjectOptions,\r\n  // watch\r\n  watch: mergeWatchOptions,\r\n  // provide / inject\r\n  provide: mergeDataFn,\r\n  inject: mergeInject\r\n}\r\n\r\nif (__COMPAT__) {\r\n  internalOptionMergeStrats.filters = mergeObjectOptions\r\n}\r\n\r\nfunction mergeDataFn(to: any, from: any) {\r\n  if (!from) {\r\n    return to\r\n  }\r\n  if (!to) {\r\n    return from\r\n  }\r\n  return function mergedDataFn(this: ComponentPublicInstance) {\r\n    return (\r\n      __COMPAT__ && isCompatEnabled(DeprecationTypes.OPTIONS_DATA_MERGE, null)\r\n        ? deepMergeData\r\n        : extend\r\n    )(\r\n      isFunction(to) ? to.call(this, this) : to,\r\n      isFunction(from) ? from.call(this, this) : from\r\n    )\r\n  }\r\n}\r\n\r\nfunction mergeInject(\r\n  to: ComponentInjectOptions | undefined,\r\n  from: ComponentInjectOptions\r\n) {\r\n  return mergeObjectOptions(normalizeInject(to), normalizeInject(from))\r\n}\r\n\r\nfunction normalizeInject(\r\n  raw: ComponentInjectOptions | undefined\r\n): ObjectInjectOptions | undefined {\r\n  if (isArray(raw)) {\r\n    const res: ObjectInjectOptions = {}\r\n    for (let i = 0; i < raw.length; i++) {\r\n      res[raw[i]] = raw[i]\r\n    }\r\n    return res\r\n  }\r\n  return raw\r\n}\r\n\r\nfunction mergeAsArray<T = Function>(to: T[] | T | undefined, from: T | T[]) {\r\n  return to ? [...new Set([].concat(to as any, from as any))] : from\r\n}\r\n\r\nfunction mergeObjectOptions(to: Object | undefined, from: Object | undefined) {\r\n  return to ? extend(extend(Object.create(null), to), from) : from\r\n}\r\n\r\nfunction mergeWatchOptions(\r\n  to: ComponentWatchOptions | undefined,\r\n  from: ComponentWatchOptions | undefined\r\n) {\r\n  if (!to) return from\r\n  if (!from) return to\r\n  const merged = extend(Object.create(null), to)\r\n  for (const key in from) {\r\n    merged[key] = mergeAsArray(to[key], from[key])\r\n  }\r\n  return merged\r\n}\r\n","import { isOn } from '@vue/shared'\r\nimport { ComponentInternalInstance } from '../component'\r\nimport { DeprecationTypes, isCompatEnabled } from './compatConfig'\r\n\r\nexport function shouldSkipAttr(\r\n  key: string,\r\n  instance: ComponentInternalInstance\r\n): boolean {\r\n  if (key === 'is') {\r\n    return true\r\n  }\r\n  if (\r\n    (key === 'class' || key === 'style') &&\r\n    isCompatEnabled(DeprecationTypes.INSTANCE_ATTRS_CLASS_STYLE, instance)\r\n  ) {\r\n    return true\r\n  }\r\n  if (\r\n    isOn(key) &&\r\n    isCompatEnabled(DeprecationTypes.INSTANCE_LISTENERS, instance)\r\n  ) {\r\n    return true\r\n  }\r\n  // vue-router\r\n  if (key.startsWith('routerView') || key === 'registerRouteInstance') {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n","import {\r\n  toRaw,\r\n  shallowReactive,\r\n  trigger,\r\n  TriggerOpTypes\r\n} from '@vue/reactivity'\r\nimport {\r\n  EMPTY_OBJ,\r\n  camelize,\r\n  hyphenate,\r\n  capitalize,\r\n  isString,\r\n  isFunction,\r\n  isArray,\r\n  isObject,\r\n  hasOwn,\r\n  toRawType,\r\n  PatchFlags,\r\n  makeMap,\r\n  isReservedProp,\r\n  EMPTY_ARR,\r\n  def,\r\n  extend,\r\n  isOn,\r\n  IfAny\r\n} from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport {\r\n  Data,\r\n  ComponentInternalInstance,\r\n  ComponentOptions,\r\n  ConcreteComponent,\r\n  setCurrentInstance,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport { isEmitListener } from './componentEmits'\r\nimport { InternalObjectKey } from './vnode'\r\nimport { AppContext } from './apiCreateApp'\r\nimport { createPropsDefaultThis } from './compat/props'\r\nimport { isCompatEnabled, softAssertCompatEnabled } from './compat/compatConfig'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport { shouldSkipAttr } from './compat/attrsFallthrough'\r\n\r\nexport type ComponentPropsOptions<P = Data> =\r\n  | ComponentObjectPropsOptions<P>\r\n  | string[]\r\n\r\nexport type ComponentObjectPropsOptions<P = Data> = {\r\n  [K in keyof P]: Prop<P[K]> | null\r\n}\r\n\r\nexport type Prop<T, D = T> = PropOptions<T, D> | PropType<T>\r\n\r\ntype DefaultFactory<T> = (props: Data) => T | null | undefined\r\n\r\nexport interface PropOptions<T = any, D = T> {\r\n  type?: PropType<T> | true | null\r\n  required?: boolean\r\n  default?: D | DefaultFactory<D> | null | undefined | object\r\n  validator?(value: unknown): boolean\r\n}\r\n\r\nexport type PropType<T> = PropConstructor<T> | PropConstructor<T>[]\r\n\r\ntype PropConstructor<T = any> =\r\n  | { new (...args: any[]): T & {} }\r\n  | { (): T }\r\n  | PropMethod<T>\r\n\r\ntype PropMethod<T, TConstructor = any> = [T] extends [\r\n  ((...args: any) => any) | undefined\r\n] // if is function with args, allowing non-required functions\r\n  ? { new (): TConstructor; (): T; readonly prototype: TConstructor } // Create Function like constructor\r\n  : never\r\n\r\ntype RequiredKeys<T> = {\r\n  [K in keyof T]: T[K] extends\r\n    | { required: true }\r\n    | { default: any }\r\n    // don't mark Boolean props as undefined\r\n    | BooleanConstructor\r\n    | { type: BooleanConstructor }\r\n    ? T[K] extends { default: undefined | (() => undefined) }\r\n      ? never\r\n      : K\r\n    : never\r\n}[keyof T]\r\n\r\ntype OptionalKeys<T> = Exclude<keyof T, RequiredKeys<T>>\r\n\r\ntype DefaultKeys<T> = {\r\n  [K in keyof T]: T[K] extends\r\n    | { default: any }\r\n    // Boolean implicitly defaults to false\r\n    | BooleanConstructor\r\n    | { type: BooleanConstructor }\r\n    ? T[K] extends { type: BooleanConstructor; required: true } // not default if Boolean is marked as required\r\n      ? never\r\n      : K\r\n    : never\r\n}[keyof T]\r\n\r\ntype InferPropType<T> = [T] extends [null]\r\n  ? any // null & true would fail to infer\r\n  : [T] extends [{ type: null | true }]\r\n  ? any // As TS issue https://github.com/Microsoft/TypeScript/issues/14829 // somehow `ObjectConstructor` when inferred from { (): T } becomes `any` // `BooleanConstructor` when inferred from PropConstructor(with PropMethod) becomes `Boolean`\r\n  : [T] extends [ObjectConstructor | { type: ObjectConstructor }]\r\n  ? Record<string, any>\r\n  : [T] extends [BooleanConstructor | { type: BooleanConstructor }]\r\n  ? boolean\r\n  : [T] extends [DateConstructor | { type: DateConstructor }]\r\n  ? Date\r\n  : [T] extends [(infer U)[] | { type: (infer U)[] }]\r\n  ? U extends DateConstructor\r\n    ? Date | InferPropType<U>\r\n    : InferPropType<U>\r\n  : [T] extends [Prop<infer V, infer D>]\r\n  ? unknown extends V\r\n    ? IfAny<V, V, D>\r\n    : V\r\n  : T\r\n\r\nexport type ExtractPropTypes<O> = {\r\n  // use `keyof Pick<O, RequiredKeys<O>>` instead of `RequiredKeys<O>` to support IDE features\r\n  [K in keyof Pick<O, RequiredKeys<O>>]: InferPropType<O[K]>\r\n} & {\r\n  // use `keyof Pick<O, OptionalKeys<O>>` instead of `OptionalKeys<O>` to support IDE features\r\n  [K in keyof Pick<O, OptionalKeys<O>>]?: InferPropType<O[K]>\r\n}\r\n\r\nconst enum BooleanFlags {\r\n  shouldCast,\r\n  shouldCastTrue\r\n}\r\n\r\n// extract props which defined with default from prop options\r\nexport type ExtractDefaultPropTypes<O> = O extends object\r\n  ? // use `keyof Pick<O, DefaultKeys<O>>` instead of `DefaultKeys<O>` to support IDE features\r\n    { [K in keyof Pick<O, DefaultKeys<O>>]: InferPropType<O[K]> }\r\n  : {}\r\n\r\ntype NormalizedProp =\r\n  | null\r\n  | (PropOptions & {\r\n      [BooleanFlags.shouldCast]?: boolean\r\n      [BooleanFlags.shouldCastTrue]?: boolean\r\n    })\r\n\r\n// normalized value is a tuple of the actual normalized options\r\n// and an array of prop keys that need value casting (booleans and defaults)\r\nexport type NormalizedProps = Record<string, NormalizedProp>\r\nexport type NormalizedPropsOptions = [NormalizedProps, string[]] | []\r\n\r\nexport function initProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  isStateful: number, // result of bitwise flag comparison\r\n  isSSR = false\r\n) {\r\n  const props: Data = {}\r\n  const attrs: Data = {}\r\n  def(attrs, InternalObjectKey, 1)\r\n\r\n  instance.propsDefaults = Object.create(null)\r\n\r\n  setFullProps(instance, rawProps, props, attrs)\r\n\r\n  // ensure all declared prop keys are present\r\n  for (const key in instance.propsOptions[0]) {\r\n    if (!(key in props)) {\r\n      props[key] = undefined\r\n    }\r\n  }\r\n\r\n  // validation\r\n  if (__DEV__) {\r\n    validateProps(rawProps || {}, props, instance)\r\n  }\r\n\r\n  if (isStateful) {\r\n    // stateful\r\n    instance.props = isSSR ? props : shallowReactive(props)\r\n  } else {\r\n    if (!instance.type.props) {\r\n      // functional w/ optional props, props === attrs\r\n      instance.props = attrs\r\n    } else {\r\n      // functional w/ declared props\r\n      instance.props = props\r\n    }\r\n  }\r\n  instance.attrs = attrs\r\n}\r\n\r\nexport function updateProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  rawPrevProps: Data | null,\r\n  optimized: boolean\r\n) {\r\n  const {\r\n    props,\r\n    attrs,\r\n    vnode: { patchFlag }\r\n  } = instance\r\n  const rawCurrentProps = toRaw(props)\r\n  const [options] = instance.propsOptions\r\n  let hasAttrsChanged = false\r\n\r\n  if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !(\r\n      __DEV__ &&\r\n      (instance.type.__hmrId ||\r\n        (instance.parent && instance.parent.type.__hmrId))\r\n    ) &&\r\n    (optimized || patchFlag > 0) &&\r\n    !(patchFlag & PatchFlags.FULL_PROPS)\r\n  ) {\r\n    if (patchFlag & PatchFlags.PROPS) {\r\n      // Compiler-generated props & no keys change, just set the updated\r\n      // the props.\r\n      const propsToUpdate = instance.vnode.dynamicProps!\r\n      for (let i = 0; i < propsToUpdate.length; i++) {\r\n        let key = propsToUpdate[i]\r\n        // skip if the prop key is a declared emit event listener\r\n        if (isEmitListener(instance.emitsOptions, key)) {\r\n          continue\r\n        }\r\n        // PROPS flag guarantees rawProps to be non-null\r\n        const value = rawProps![key]\r\n        if (options) {\r\n          // attr / props separation was done on init and will be consistent\r\n          // in this code path, so just check if attrs have it.\r\n          if (hasOwn(attrs, key)) {\r\n            if (value !== attrs[key]) {\r\n              attrs[key] = value\r\n              hasAttrsChanged = true\r\n            }\r\n          } else {\r\n            const camelizedKey = camelize(key)\r\n            props[camelizedKey] = resolvePropValue(\r\n              options,\r\n              rawCurrentProps,\r\n              camelizedKey,\r\n              value,\r\n              instance,\r\n              false /* isAbsent */\r\n            )\r\n          }\r\n        } else {\r\n          if (__COMPAT__) {\r\n            if (isOn(key) && key.endsWith('Native')) {\r\n              key = key.slice(0, -6) // remove Native postfix\r\n            } else if (shouldSkipAttr(key, instance)) {\r\n              continue\r\n            }\r\n          }\r\n          if (value !== attrs[key]) {\r\n            attrs[key] = value\r\n            hasAttrsChanged = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // full props update.\r\n    if (setFullProps(instance, rawProps, props, attrs)) {\r\n      hasAttrsChanged = true\r\n    }\r\n    // in case of dynamic props, check if we need to delete keys from\r\n    // the props object\r\n    let kebabKey: string\r\n    for (const key in rawCurrentProps) {\r\n      if (\r\n        !rawProps ||\r\n        // for camelCase\r\n        (!hasOwn(rawProps, key) &&\r\n          // it's possible the original props was passed in as kebab-case\r\n          // and converted to camelCase (#955)\r\n          ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))\r\n      ) {\r\n        if (options) {\r\n          if (\r\n            rawPrevProps &&\r\n            // for camelCase\r\n            (rawPrevProps[key] !== undefined ||\r\n              // for kebab-case\r\n              rawPrevProps[kebabKey!] !== undefined)\r\n          ) {\r\n            props[key] = resolvePropValue(\r\n              options,\r\n              rawCurrentProps,\r\n              key,\r\n              undefined,\r\n              instance,\r\n              true /* isAbsent */\r\n            )\r\n          }\r\n        } else {\r\n          delete props[key]\r\n        }\r\n      }\r\n    }\r\n    // in the case of functional component w/o props declaration, props and\r\n    // attrs point to the same object so it should already have been updated.\r\n    if (attrs !== rawCurrentProps) {\r\n      for (const key in attrs) {\r\n        if (\r\n          !rawProps ||\r\n          (!hasOwn(rawProps, key) &&\r\n            (!__COMPAT__ || !hasOwn(rawProps, key + 'Native')))\r\n        ) {\r\n          delete attrs[key]\r\n          hasAttrsChanged = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // trigger updates for $attrs in case it's used in component slots\r\n  if (hasAttrsChanged) {\r\n    trigger(instance, TriggerOpTypes.SET, '$attrs')\r\n  }\r\n\r\n  if (__DEV__) {\r\n    validateProps(rawProps || {}, props, instance)\r\n  }\r\n}\r\n\r\nfunction setFullProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  props: Data,\r\n  attrs: Data\r\n) {\r\n  const [options, needCastKeys] = instance.propsOptions\r\n  let hasAttrsChanged = false\r\n  let rawCastValues: Data | undefined\r\n  if (rawProps) {\r\n    for (let key in rawProps) {\r\n      // key, ref are reserved and never passed down\r\n      if (isReservedProp(key)) {\r\n        continue\r\n      }\r\n\r\n      if (__COMPAT__) {\r\n        if (key.startsWith('onHook:')) {\r\n          softAssertCompatEnabled(\r\n            DeprecationTypes.INSTANCE_EVENT_HOOKS,\r\n            instance,\r\n            key.slice(2).toLowerCase()\r\n          )\r\n        }\r\n        if (key === 'inline-template') {\r\n          continue\r\n        }\r\n      }\r\n\r\n      const value = rawProps[key]\r\n      // prop option names are camelized during normalization, so to support\r\n      // kebab -> camel conversion here we need to camelize the key.\r\n      let camelKey\r\n      if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n        if (!needCastKeys || !needCastKeys.includes(camelKey)) {\r\n          props[camelKey] = value\r\n        } else {\r\n          ;(rawCastValues || (rawCastValues = {}))[camelKey] = value\r\n        }\r\n      } else if (!isEmitListener(instance.emitsOptions, key)) {\r\n        // Any non-declared (either as a prop or an emitted event) props are put\r\n        // into a separate `attrs` object for spreading. Make sure to preserve\r\n        // original key casing\r\n        if (__COMPAT__) {\r\n          if (isOn(key) && key.endsWith('Native')) {\r\n            key = key.slice(0, -6) // remove Native postfix\r\n          } else if (shouldSkipAttr(key, instance)) {\r\n            continue\r\n          }\r\n        }\r\n        if (!(key in attrs) || value !== attrs[key]) {\r\n          attrs[key] = value\r\n          hasAttrsChanged = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (needCastKeys) {\r\n    const rawCurrentProps = toRaw(props)\r\n    const castValues = rawCastValues || EMPTY_OBJ\r\n    for (let i = 0; i < needCastKeys.length; i++) {\r\n      const key = needCastKeys[i]\r\n      props[key] = resolvePropValue(\r\n        options!,\r\n        rawCurrentProps,\r\n        key,\r\n        castValues[key],\r\n        instance,\r\n        !hasOwn(castValues, key)\r\n      )\r\n    }\r\n  }\r\n\r\n  return hasAttrsChanged\r\n}\r\n\r\nfunction resolvePropValue(\r\n  options: NormalizedProps,\r\n  props: Data,\r\n  key: string,\r\n  value: unknown,\r\n  instance: ComponentInternalInstance,\r\n  isAbsent: boolean\r\n) {\r\n  const opt = options[key]\r\n  if (opt != null) {\r\n    const hasDefault = hasOwn(opt, 'default')\r\n    // default values\r\n    if (hasDefault && value === undefined) {\r\n      const defaultValue = opt.default\r\n      if (opt.type !== Function && isFunction(defaultValue)) {\r\n        const { propsDefaults } = instance\r\n        if (key in propsDefaults) {\r\n          value = propsDefaults[key]\r\n        } else {\r\n          setCurrentInstance(instance)\r\n          value = propsDefaults[key] = defaultValue.call(\r\n            __COMPAT__ &&\r\n              isCompatEnabled(DeprecationTypes.PROPS_DEFAULT_THIS, instance)\r\n              ? createPropsDefaultThis(instance, props, key)\r\n              : null,\r\n            props\r\n          )\r\n          unsetCurrentInstance()\r\n        }\r\n      } else {\r\n        value = defaultValue\r\n      }\r\n    }\r\n    // boolean casting\r\n    if (opt[BooleanFlags.shouldCast]) {\r\n      if (isAbsent && !hasDefault) {\r\n        value = false\r\n      } else if (\r\n        opt[BooleanFlags.shouldCastTrue] &&\r\n        (value === '' || value === hyphenate(key))\r\n      ) {\r\n        value = true\r\n      }\r\n    }\r\n  }\r\n  return value\r\n}\r\n\r\nexport function normalizePropsOptions(\r\n  comp: ConcreteComponent,\r\n  appContext: AppContext,\r\n  asMixin = false\r\n): NormalizedPropsOptions {\r\n  const cache = appContext.propsCache\r\n  const cached = cache.get(comp)\r\n  if (cached) {\r\n    return cached\r\n  }\r\n\r\n  const raw = comp.props\r\n  const normalized: NormalizedPropsOptions[0] = {}\r\n  const needCastKeys: NormalizedPropsOptions[1] = []\r\n\r\n  // apply mixin/extends props\r\n  let hasExtends = false\r\n  if (__FEATURE_OPTIONS_API__ && !isFunction(comp)) {\r\n    const extendProps = (raw: ComponentOptions) => {\r\n      if (__COMPAT__ && isFunction(raw)) {\r\n        raw = raw.options\r\n      }\r\n      hasExtends = true\r\n      const [props, keys] = normalizePropsOptions(raw, appContext, true)\r\n      extend(normalized, props)\r\n      if (keys) needCastKeys.push(...keys)\r\n    }\r\n    if (!asMixin && appContext.mixins.length) {\r\n      appContext.mixins.forEach(extendProps)\r\n    }\r\n    if (comp.extends) {\r\n      extendProps(comp.extends)\r\n    }\r\n    if (comp.mixins) {\r\n      comp.mixins.forEach(extendProps)\r\n    }\r\n  }\r\n\r\n  if (!raw && !hasExtends) {\r\n    cache.set(comp, EMPTY_ARR as any)\r\n    return EMPTY_ARR as any\r\n  }\r\n\r\n  if (isArray(raw)) {\r\n    for (let i = 0; i < raw.length; i++) {\r\n      if (__DEV__ && !isString(raw[i])) {\r\n        warn(`props must be strings when using array syntax.`, raw[i])\r\n      }\r\n      const normalizedKey = camelize(raw[i])\r\n      if (validatePropName(normalizedKey)) {\r\n        normalized[normalizedKey] = EMPTY_OBJ\r\n      }\r\n    }\r\n  } else if (raw) {\r\n    if (__DEV__ && !isObject(raw)) {\r\n      warn(`invalid props options`, raw)\r\n    }\r\n    for (const key in raw) {\r\n      const normalizedKey = camelize(key)\r\n      if (validatePropName(normalizedKey)) {\r\n        const opt = raw[key]\r\n        const prop: NormalizedProp = (normalized[normalizedKey] =\r\n          isArray(opt) || isFunction(opt) ? { type: opt } : opt)\r\n        if (prop) {\r\n          const booleanIndex = getTypeIndex(Boolean, prop.type)\r\n          const stringIndex = getTypeIndex(String, prop.type)\r\n          prop[BooleanFlags.shouldCast] = booleanIndex > -1\r\n          prop[BooleanFlags.shouldCastTrue] =\r\n            stringIndex < 0 || booleanIndex < stringIndex\r\n          // if the prop needs boolean casting or default value\r\n          if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n            needCastKeys.push(normalizedKey)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const res: NormalizedPropsOptions = [normalized, needCastKeys]\r\n  cache.set(comp, res)\r\n  return res\r\n}\r\n\r\nfunction validatePropName(key: string) {\r\n  if (key[0] !== '$') {\r\n    return true\r\n  } else if (__DEV__) {\r\n    warn(`Invalid prop name: \"${key}\" is a reserved property.`)\r\n  }\r\n  return false\r\n}\r\n\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor: Prop<any>): string {\r\n  const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/)\r\n  return match ? match[1] : ctor === null ? 'null' : ''\r\n}\r\n\r\nfunction isSameType(a: Prop<any>, b: Prop<any>): boolean {\r\n  return getType(a) === getType(b)\r\n}\r\n\r\nfunction getTypeIndex(\r\n  type: Prop<any>,\r\n  expectedTypes: PropType<any> | void | null | true\r\n): number {\r\n  if (isArray(expectedTypes)) {\r\n    return expectedTypes.findIndex(t => isSameType(t, type))\r\n  } else if (isFunction(expectedTypes)) {\r\n    return isSameType(expectedTypes, type) ? 0 : -1\r\n  }\r\n  return -1\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(\r\n  rawProps: Data,\r\n  props: Data,\r\n  instance: ComponentInternalInstance\r\n) {\r\n  const resolvedValues = toRaw(props)\r\n  const options = instance.propsOptions[0]\r\n  for (const key in options) {\r\n    let opt = options[key]\r\n    if (opt == null) continue\r\n    validateProp(\r\n      key,\r\n      resolvedValues[key],\r\n      opt,\r\n      !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key))\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(\r\n  name: string,\r\n  value: unknown,\r\n  prop: PropOptions,\r\n  isAbsent: boolean\r\n) {\r\n  const { type, required, validator } = prop\r\n  // required!\r\n  if (required && isAbsent) {\r\n    warn('Missing required prop: \"' + name + '\"')\r\n    return\r\n  }\r\n  // missing but optional\r\n  if (value == null && !prop.required) {\r\n    return\r\n  }\r\n  // type check\r\n  if (type != null && type !== true) {\r\n    let isValid = false\r\n    const types = isArray(type) ? type : [type]\r\n    const expectedTypes = []\r\n    // value is valid as long as one of the specified types match\r\n    for (let i = 0; i < types.length && !isValid; i++) {\r\n      const { valid, expectedType } = assertType(value, types[i])\r\n      expectedTypes.push(expectedType || '')\r\n      isValid = valid\r\n    }\r\n    if (!isValid) {\r\n      warn(getInvalidTypeMessage(name, value, expectedTypes))\r\n      return\r\n    }\r\n  }\r\n  // custom validator\r\n  if (validator && !validator(value)) {\r\n    warn('Invalid prop: custom validator check failed for prop \"' + name + '\".')\r\n  }\r\n}\r\n\r\nconst isSimpleType = /*#__PURE__*/ makeMap(\r\n  'String,Number,Boolean,Function,Symbol,BigInt'\r\n)\r\n\r\ntype AssertionResult = {\r\n  valid: boolean\r\n  expectedType: string\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value: unknown, type: PropConstructor): AssertionResult {\r\n  let valid\r\n  const expectedType = getType(type)\r\n  if (isSimpleType(expectedType)) {\r\n    const t = typeof value\r\n    valid = t === expectedType.toLowerCase()\r\n    // for primitive wrapper objects\r\n    if (!valid && t === 'object') {\r\n      valid = value instanceof type\r\n    }\r\n  } else if (expectedType === 'Object') {\r\n    valid = isObject(value)\r\n  } else if (expectedType === 'Array') {\r\n    valid = isArray(value)\r\n  } else if (expectedType === 'null') {\r\n    valid = value === null\r\n  } else {\r\n    valid = value instanceof type\r\n  }\r\n  return {\r\n    valid,\r\n    expectedType\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(\r\n  name: string,\r\n  value: unknown,\r\n  expectedTypes: string[]\r\n): string {\r\n  let message =\r\n    `Invalid prop: type check failed for prop \"${name}\".` +\r\n    ` Expected ${expectedTypes.map(capitalize).join(' | ')}`\r\n  const expectedType = expectedTypes[0]\r\n  const receivedType = toRawType(value)\r\n  const expectedValue = styleValue(value, expectedType)\r\n  const receivedValue = styleValue(value, receivedType)\r\n  // check if we need to specify expected value\r\n  if (\r\n    expectedTypes.length === 1 &&\r\n    isExplicable(expectedType) &&\r\n    !isBoolean(expectedType, receivedType)\r\n  ) {\r\n    message += ` with value ${expectedValue}`\r\n  }\r\n  message += `, got ${receivedType} `\r\n  // check if we need to specify received value\r\n  if (isExplicable(receivedType)) {\r\n    message += `with value ${receivedValue}.`\r\n  }\r\n  return message\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value: unknown, type: string): string {\r\n  if (type === 'String') {\r\n    return `\"${value}\"`\r\n  } else if (type === 'Number') {\r\n    return `${Number(value)}`\r\n  } else {\r\n    return `${value}`\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type: string): boolean {\r\n  const explicitTypes = ['string', 'number', 'boolean']\r\n  return explicitTypes.some(elem => type.toLowerCase() === elem)\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args: string[]): boolean {\r\n  return args.some(elem => elem.toLowerCase() === 'boolean')\r\n}\r\n","import { isArray } from '@vue/shared'\r\nimport { inject } from '../apiInject'\r\nimport { ComponentInternalInstance, Data } from '../component'\r\nimport { ComponentOptions, resolveMergedOptions } from '../componentOptions'\r\nimport { DeprecationTypes, warnDeprecation } from './compatConfig'\r\n\r\nexport function createPropsDefaultThis(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data,\r\n  propKey: string\r\n) {\r\n  return new Proxy(\r\n    {},\r\n    {\r\n      get(_, key: string) {\r\n        __DEV__ &&\r\n          warnDeprecation(DeprecationTypes.PROPS_DEFAULT_THIS, null, propKey)\r\n        // $options\r\n        if (key === '$options') {\r\n          return resolveMergedOptions(instance)\r\n        }\r\n        // props\r\n        if (key in rawProps) {\r\n          return rawProps[key]\r\n        }\r\n        // injections\r\n        const injections = (instance.type as ComponentOptions).inject\r\n        if (injections) {\r\n          if (isArray(injections)) {\r\n            if (injections.includes(key)) {\r\n              return inject(key)\r\n            }\r\n          } else if (key in injections) {\r\n            return inject(key)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  )\r\n}\r\n","import { ComponentInternalInstance, currentInstance } from './component'\r\nimport {\r\n  VNode,\r\n  VNodeNormalizedChildren,\r\n  normalizeVNode,\r\n  VNodeChild,\r\n  InternalObjectKey\r\n} from './vnode'\r\nimport {\r\n  isArray,\r\n  isFunction,\r\n  EMPTY_OBJ,\r\n  ShapeFlags,\r\n  extend,\r\n  def,\r\n  SlotFlags\r\n} from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { isKeepAlive } from './components/KeepAlive'\r\nimport { ContextualRenderFn, withCtx } from './componentRenderContext'\r\nimport { isHmrUpdating } from './hmr'\r\nimport { DeprecationTypes, isCompatEnabled } from './compat/compatConfig'\r\nimport { toRaw } from '@vue/reactivity'\r\n\r\nexport type Slot = (...args: any[]) => VNode[]\r\n\r\nexport type InternalSlots = {\r\n  [name: string]: Slot | undefined\r\n}\r\n\r\nexport type Slots = Readonly<InternalSlots>\r\n\r\nexport type RawSlots = {\r\n  [name: string]: unknown\r\n  // manual render fn hint to skip forced children updates\r\n  $stable?: boolean\r\n  /**\r\n   * for tracking slot owner instance. This is attached during\r\n   * normalizeChildren when the component vnode is created.\r\n   * @internal\r\n   */\r\n  _ctx?: ComponentInternalInstance | null\r\n  /**\r\n   * indicates compiler generated slots\r\n   * we use a reserved property instead of a vnode patchFlag because the slots\r\n   * object may be directly passed down to a child component in a manual\r\n   * render function, and the optimization hint need to be on the slot object\r\n   * itself to be preserved.\r\n   * @internal\r\n   */\r\n  _?: SlotFlags\r\n}\r\n\r\nconst isInternalKey = (key: string) => key[0] === '_' || key === '$stable'\r\n\r\nconst normalizeSlotValue = (value: unknown): VNode[] =>\r\n  isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value as VNodeChild)]\r\n\r\nconst normalizeSlot = (\r\n  key: string,\r\n  rawSlot: Function,\r\n  ctx: ComponentInternalInstance | null | undefined\r\n): Slot => {\r\n  if ((rawSlot as any)._n) {\r\n    // already normalized - #5353\r\n    return rawSlot as Slot\r\n  }\r\n  const normalized = withCtx((...args: any[]) => {\r\n    if (__DEV__ && currentInstance) {\r\n      warn(\r\n        `Slot \"${key}\" invoked outside of the render function: ` +\r\n          `this will not track dependencies used in the slot. ` +\r\n          `Invoke the slot function inside the render function instead.`\r\n      )\r\n    }\r\n    return normalizeSlotValue(rawSlot(...args))\r\n  }, ctx) as Slot\r\n  // NOT a compiled slot\r\n  ;(normalized as ContextualRenderFn)._c = false\r\n  return normalized\r\n}\r\n\r\nconst normalizeObjectSlots = (\r\n  rawSlots: RawSlots,\r\n  slots: InternalSlots,\r\n  instance: ComponentInternalInstance\r\n) => {\r\n  const ctx = rawSlots._ctx\r\n  for (const key in rawSlots) {\r\n    if (isInternalKey(key)) continue\r\n    const value = rawSlots[key]\r\n    if (isFunction(value)) {\r\n      slots[key] = normalizeSlot(key, value, ctx)\r\n    } else if (value != null) {\r\n      if (\r\n        __DEV__ &&\r\n        !(\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.RENDER_FUNCTION, instance)\r\n        )\r\n      ) {\r\n        warn(\r\n          `Non-function value encountered for slot \"${key}\". ` +\r\n            `Prefer function slots for better performance.`\r\n        )\r\n      }\r\n      const normalized = normalizeSlotValue(value)\r\n      slots[key] = () => normalized\r\n    }\r\n  }\r\n}\r\n\r\nconst normalizeVNodeSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren\r\n) => {\r\n  if (\r\n    __DEV__ &&\r\n    !isKeepAlive(instance.vnode) &&\r\n    !(__COMPAT__ && isCompatEnabled(DeprecationTypes.RENDER_FUNCTION, instance))\r\n  ) {\r\n    warn(\r\n      `Non-function value encountered for default slot. ` +\r\n        `Prefer function slots for better performance.`\r\n    )\r\n  }\r\n  const normalized = normalizeSlotValue(children)\r\n  instance.slots.default = () => normalized\r\n}\r\n\r\nexport const initSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren\r\n) => {\r\n  if (instance.vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\r\n    const type = (children as RawSlots)._\r\n    if (type) {\r\n      // users can get the shallow readonly version of the slots object through `this.$slots`,\r\n      // we should avoid the proxy object polluting the slots of the internal instance\r\n      instance.slots = toRaw(children as InternalSlots)\r\n      // make compiler marker non-enumerable\r\n      def(children as InternalSlots, '_', type)\r\n    } else {\r\n      normalizeObjectSlots(\r\n        children as RawSlots,\r\n        (instance.slots = {}),\r\n        instance\r\n      )\r\n    }\r\n  } else {\r\n    instance.slots = {}\r\n    if (children) {\r\n      normalizeVNodeSlots(instance, children)\r\n    }\r\n  }\r\n  def(instance.slots, InternalObjectKey, 1)\r\n}\r\n\r\nexport const updateSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren,\r\n  optimized: boolean\r\n) => {\r\n  const { vnode, slots } = instance\r\n  let needDeletionCheck = true\r\n  let deletionComparisonTarget = EMPTY_OBJ\r\n  if (vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\r\n    const type = (children as RawSlots)._\r\n    if (type) {\r\n      // compiled slots.\r\n      if (__DEV__ && isHmrUpdating) {\r\n        // Parent was HMR updated so slot content may have changed.\r\n        // force update slots and mark instance for hmr as well\r\n        extend(slots, children as Slots)\r\n      } else if (optimized && type === SlotFlags.STABLE) {\r\n        // compiled AND stable.\r\n        // no need to update, and skip stale slots removal.\r\n        needDeletionCheck = false\r\n      } else {\r\n        // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n        // normalization.\r\n        extend(slots, children as Slots)\r\n        // #2893\r\n        // when rendering the optimized slots by manually written render function,\r\n        // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\r\n        // i.e. let the `renderSlot` create the bailed Fragment\r\n        if (!optimized && type === SlotFlags.STABLE) {\r\n          delete slots._\r\n        }\r\n      }\r\n    } else {\r\n      needDeletionCheck = !(children as RawSlots).$stable\r\n      normalizeObjectSlots(children as RawSlots, slots, instance)\r\n    }\r\n    deletionComparisonTarget = children as RawSlots\r\n  } else if (children) {\r\n    // non slot object children (direct value) passed to a component\r\n    normalizeVNodeSlots(instance, children)\r\n    deletionComparisonTarget = { default: 1 }\r\n  }\r\n\r\n  // delete stale slots\r\n  if (needDeletionCheck) {\r\n    for (const key in slots) {\r\n      if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n        delete slots[key]\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {\r\n  isReactive,\r\n  reactive,\r\n  track,\r\n  TrackOpTypes,\r\n  trigger,\r\n  TriggerOpTypes\r\n} from '@vue/reactivity'\r\nimport {\r\n  isFunction,\r\n  extend,\r\n  NOOP,\r\n  isArray,\r\n  isObject,\r\n  isString,\r\n  invokeArrayFns\r\n} from '@vue/shared'\r\nimport { warn } from '../warning'\r\nimport { cloneVNode, createVNode } from '../vnode'\r\nimport { RootRenderFunction } from '../renderer'\r\nimport {\r\n  App,\r\n  AppConfig,\r\n  AppContext,\r\n  CreateAppFunction,\r\n  Plugin\r\n} from '../apiCreateApp'\r\nimport {\r\n  Component,\r\n  ComponentOptions,\r\n  createComponentInstance,\r\n  finishComponentSetup,\r\n  isRuntimeOnly,\r\n  setupComponent\r\n} from '../component'\r\nimport {\r\n  RenderFunction,\r\n  mergeOptions,\r\n  internalOptionMergeStrats\r\n} from '../componentOptions'\r\nimport { ComponentPublicInstance } from '../componentPublicInstance'\r\nimport { devtoolsInitApp, devtoolsUnmountApp } from '../devtools'\r\nimport { Directive } from '../directives'\r\nimport { nextTick } from '../scheduler'\r\nimport { version } from '..'\r\nimport {\r\n  installLegacyConfigWarnings,\r\n  installLegacyOptionMergeStrats,\r\n  LegacyConfig\r\n} from './globalConfig'\r\nimport { LegacyDirective } from './customDirective'\r\nimport {\r\n  warnDeprecation,\r\n  DeprecationTypes,\r\n  assertCompatEnabled,\r\n  configureCompat,\r\n  isCompatEnabled,\r\n  softAssertCompatEnabled\r\n} from './compatConfig'\r\nimport { LegacyPublicInstance } from './instance'\r\n\r\n/**\r\n * @deprecated the default `Vue` export has been removed in Vue 3. The type for\r\n * the default export is provided only for migration purposes. Please use\r\n * named imports instead - e.g. `import { createApp } from 'vue'`.\r\n */\r\nexport type CompatVue = Pick<App, 'version' | 'component' | 'directive'> & {\r\n  configureCompat: typeof configureCompat\r\n\r\n  // no inference here since these types are not meant for actual use - they\r\n  // are merely here to provide type checks for internal implementation and\r\n  // information for migration.\r\n  new (options?: ComponentOptions): LegacyPublicInstance\r\n\r\n  version: string\r\n  config: AppConfig & LegacyConfig\r\n\r\n  nextTick: typeof nextTick\r\n\r\n  use(plugin: Plugin, ...options: any[]): CompatVue\r\n  mixin(mixin: ComponentOptions): CompatVue\r\n\r\n  component(name: string): Component | undefined\r\n  component(name: string, component: Component): CompatVue\r\n  directive(name: string): Directive | undefined\r\n  directive(name: string, directive: Directive): CompatVue\r\n\r\n  compile(template: string): RenderFunction\r\n\r\n  /**\r\n   * @deprecated Vue 3 no longer supports extending constructors.\r\n   */\r\n  extend: (options?: ComponentOptions) => CompatVue\r\n  /**\r\n   * @deprecated Vue 3 no longer needs set() for adding new properties.\r\n   */\r\n  set(target: any, key: string | number | symbol, value: any): void\r\n  /**\r\n   * @deprecated Vue 3 no longer needs delete() for property deletions.\r\n   */\r\n  delete(target: any, key: string | number | symbol): void\r\n  /**\r\n   * @deprecated use `reactive` instead.\r\n   */\r\n  observable: typeof reactive\r\n  /**\r\n   * @deprecated filters have been removed from Vue 3.\r\n   */\r\n  filter(name: string, arg?: any): null\r\n  /**\r\n   * @internal\r\n   */\r\n  cid: number\r\n  /**\r\n   * @internal\r\n   */\r\n  options: ComponentOptions\r\n  /**\r\n   * @internal\r\n   */\r\n  util: any\r\n  /**\r\n   * @internal\r\n   */\r\n  super: CompatVue\r\n}\r\n\r\nexport let isCopyingConfig = false\r\n\r\n// exported only for test\r\nexport let singletonApp: App\r\nlet singletonCtor: CompatVue\r\n\r\n// Legacy global Vue constructor\r\nexport function createCompatVue(\r\n  createApp: CreateAppFunction<Element>,\r\n  createSingletonApp: CreateAppFunction<Element>\r\n): CompatVue {\r\n  singletonApp = createSingletonApp({})\r\n\r\n  const Vue: CompatVue = (singletonCtor = function Vue(\r\n    options: ComponentOptions = {}\r\n  ) {\r\n    return createCompatApp(options, Vue)\r\n  } as any)\r\n\r\n  function createCompatApp(options: ComponentOptions = {}, Ctor: any) {\r\n    assertCompatEnabled(DeprecationTypes.GLOBAL_MOUNT, null)\r\n\r\n    const { data } = options\r\n    if (\r\n      data &&\r\n      !isFunction(data) &&\r\n      softAssertCompatEnabled(DeprecationTypes.OPTIONS_DATA_FN, null)\r\n    ) {\r\n      options.data = () => data\r\n    }\r\n\r\n    const app = createApp(options)\r\n\r\n    if (Ctor !== Vue) {\r\n      applySingletonPrototype(app, Ctor)\r\n    }\r\n\r\n    const vm = app._createRoot!(options)\r\n    if (options.el) {\r\n      return (vm as any).$mount(options.el)\r\n    } else {\r\n      return vm\r\n    }\r\n  }\r\n\r\n  Vue.version = `2.6.14-compat:${__VERSION__}`\r\n  Vue.config = singletonApp.config\r\n\r\n  Vue.use = (p, ...options) => {\r\n    if (p && isFunction(p.install)) {\r\n      p.install(Vue as any, ...options)\r\n    } else if (isFunction(p)) {\r\n      p(Vue as any, ...options)\r\n    }\r\n    return Vue\r\n  }\r\n\r\n  Vue.mixin = m => {\r\n    singletonApp.mixin(m)\r\n    return Vue\r\n  }\r\n\r\n  Vue.component = ((name: string, comp: Component) => {\r\n    if (comp) {\r\n      singletonApp.component(name, comp)\r\n      return Vue\r\n    } else {\r\n      return singletonApp.component(name)\r\n    }\r\n  }) as any\r\n\r\n  Vue.directive = ((name: string, dir: Directive | LegacyDirective) => {\r\n    if (dir) {\r\n      singletonApp.directive(name, dir as Directive)\r\n      return Vue\r\n    } else {\r\n      return singletonApp.directive(name)\r\n    }\r\n  }) as any\r\n\r\n  Vue.options = { _base: Vue }\r\n\r\n  let cid = 1\r\n  Vue.cid = cid\r\n\r\n  Vue.nextTick = nextTick\r\n\r\n  const extendCache = new WeakMap()\r\n\r\n  function extendCtor(this: any, extendOptions: ComponentOptions = {}) {\r\n    assertCompatEnabled(DeprecationTypes.GLOBAL_EXTEND, null)\r\n    if (isFunction(extendOptions)) {\r\n      extendOptions = extendOptions.options\r\n    }\r\n\r\n    if (extendCache.has(extendOptions)) {\r\n      return extendCache.get(extendOptions)\r\n    }\r\n\r\n    const Super = this\r\n    function SubVue(inlineOptions?: ComponentOptions) {\r\n      if (!inlineOptions) {\r\n        return createCompatApp(SubVue.options, SubVue)\r\n      } else {\r\n        return createCompatApp(\r\n          mergeOptions(\r\n            extend({}, SubVue.options),\r\n            inlineOptions,\r\n            internalOptionMergeStrats as any\r\n          ),\r\n          SubVue\r\n        )\r\n      }\r\n    }\r\n    SubVue.super = Super\r\n    SubVue.prototype = Object.create(Vue.prototype)\r\n    SubVue.prototype.constructor = SubVue\r\n\r\n    // clone non-primitive base option values for edge case of mutating\r\n    // extended options\r\n    const mergeBase: any = {}\r\n    for (const key in Super.options) {\r\n      const superValue = Super.options[key]\r\n      mergeBase[key] = isArray(superValue)\r\n        ? superValue.slice()\r\n        : isObject(superValue)\r\n        ? extend(Object.create(null), superValue)\r\n        : superValue\r\n    }\r\n\r\n    SubVue.options = mergeOptions(\r\n      mergeBase,\r\n      extendOptions,\r\n      internalOptionMergeStrats as any\r\n    )\r\n\r\n    SubVue.options._base = SubVue\r\n    SubVue.extend = extendCtor.bind(SubVue)\r\n    SubVue.mixin = Super.mixin\r\n    SubVue.use = Super.use\r\n    SubVue.cid = ++cid\r\n\r\n    extendCache.set(extendOptions, SubVue)\r\n    return SubVue\r\n  }\r\n\r\n  Vue.extend = extendCtor.bind(Vue) as any\r\n\r\n  Vue.set = (target, key, value) => {\r\n    assertCompatEnabled(DeprecationTypes.GLOBAL_SET, null)\r\n    target[key] = value\r\n  }\r\n\r\n  Vue.delete = (target, key) => {\r\n    assertCompatEnabled(DeprecationTypes.GLOBAL_DELETE, null)\r\n    delete target[key]\r\n  }\r\n\r\n  Vue.observable = (target: any) => {\r\n    assertCompatEnabled(DeprecationTypes.GLOBAL_OBSERVABLE, null)\r\n    return reactive(target)\r\n  }\r\n\r\n  Vue.filter = ((name: string, filter?: any) => {\r\n    if (filter) {\r\n      singletonApp.filter!(name, filter)\r\n      return Vue\r\n    } else {\r\n      return singletonApp.filter!(name)\r\n    }\r\n  }) as any\r\n\r\n  // internal utils - these are technically internal but some plugins use it.\r\n  const util = {\r\n    warn: __DEV__ ? warn : NOOP,\r\n    extend,\r\n    mergeOptions: (parent: any, child: any, vm?: ComponentPublicInstance) =>\r\n      mergeOptions(\r\n        parent,\r\n        child,\r\n        vm ? undefined : (internalOptionMergeStrats as any)\r\n      ),\r\n    defineReactive\r\n  }\r\n  Object.defineProperty(Vue, 'util', {\r\n    get() {\r\n      assertCompatEnabled(DeprecationTypes.GLOBAL_PRIVATE_UTIL, null)\r\n      return util\r\n    }\r\n  })\r\n\r\n  Vue.configureCompat = configureCompat\r\n\r\n  return Vue\r\n}\r\n\r\nexport function installAppCompatProperties(\r\n  app: App,\r\n  context: AppContext,\r\n  render: RootRenderFunction\r\n) {\r\n  installFilterMethod(app, context)\r\n  installLegacyOptionMergeStrats(app.config)\r\n\r\n  if (!singletonApp) {\r\n    // this is the call of creating the singleton itself so the rest is\r\n    // unnecessary\r\n    return\r\n  }\r\n\r\n  installCompatMount(app, context, render)\r\n  installLegacyAPIs(app)\r\n  applySingletonAppMutations(app)\r\n  if (__DEV__) installLegacyConfigWarnings(app.config)\r\n}\r\n\r\nfunction installFilterMethod(app: App, context: AppContext) {\r\n  context.filters = {}\r\n  app.filter = (name: string, filter?: Function): any => {\r\n    assertCompatEnabled(DeprecationTypes.FILTERS, null)\r\n    if (!filter) {\r\n      return context.filters![name]\r\n    }\r\n    if (__DEV__ && context.filters![name]) {\r\n      warn(`Filter \"${name}\" has already been registered.`)\r\n    }\r\n    context.filters![name] = filter\r\n    return app\r\n  }\r\n}\r\n\r\nfunction installLegacyAPIs(app: App) {\r\n  // expose global API on app instance for legacy plugins\r\n  Object.defineProperties(app, {\r\n    // so that app.use() can work with legacy plugins that extend prototypes\r\n    prototype: {\r\n      get() {\r\n        __DEV__ && warnDeprecation(DeprecationTypes.GLOBAL_PROTOTYPE, null)\r\n        return app.config.globalProperties\r\n      }\r\n    },\r\n    nextTick: { value: nextTick },\r\n    extend: { value: singletonCtor.extend },\r\n    set: { value: singletonCtor.set },\r\n    delete: { value: singletonCtor.delete },\r\n    observable: { value: singletonCtor.observable },\r\n    util: {\r\n      get() {\r\n        return singletonCtor.util\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nfunction applySingletonAppMutations(app: App) {\r\n  // copy over asset registries and deopt flag\r\n  app._context.mixins = [...singletonApp._context.mixins]\r\n  ;['components', 'directives', 'filters'].forEach(key => {\r\n    // @ts-ignore\r\n    app._context[key] = Object.create(singletonApp._context[key])\r\n  })\r\n\r\n  // copy over global config mutations\r\n  isCopyingConfig = true\r\n  for (const key in singletonApp.config) {\r\n    if (key === 'isNativeTag') continue\r\n    if (\r\n      isRuntimeOnly() &&\r\n      (key === 'isCustomElement' || key === 'compilerOptions')\r\n    ) {\r\n      continue\r\n    }\r\n    const val = singletonApp.config[key as keyof AppConfig]\r\n    // @ts-ignore\r\n    app.config[key] = isObject(val) ? Object.create(val) : val\r\n\r\n    // compat for runtime ignoredElements -> isCustomElement\r\n    if (\r\n      key === 'ignoredElements' &&\r\n      isCompatEnabled(DeprecationTypes.CONFIG_IGNORED_ELEMENTS, null) &&\r\n      !isRuntimeOnly() &&\r\n      isArray(val)\r\n    ) {\r\n      app.config.compilerOptions.isCustomElement = tag => {\r\n        return val.some(v => (isString(v) ? v === tag : v.test(tag)))\r\n      }\r\n    }\r\n  }\r\n  isCopyingConfig = false\r\n  applySingletonPrototype(app, singletonCtor)\r\n}\r\n\r\nfunction applySingletonPrototype(app: App, Ctor: Function) {\r\n  // copy prototype augmentations as config.globalProperties\r\n  const enabled = isCompatEnabled(DeprecationTypes.GLOBAL_PROTOTYPE, null)\r\n  if (enabled) {\r\n    app.config.globalProperties = Object.create(Ctor.prototype)\r\n  }\r\n  let hasPrototypeAugmentations = false\r\n  const descriptors = Object.getOwnPropertyDescriptors(Ctor.prototype)\r\n  for (const key in descriptors) {\r\n    if (key !== 'constructor') {\r\n      hasPrototypeAugmentations = true\r\n      if (enabled) {\r\n        Object.defineProperty(\r\n          app.config.globalProperties,\r\n          key,\r\n          descriptors[key]\r\n        )\r\n      }\r\n    }\r\n  }\r\n  if (__DEV__ && hasPrototypeAugmentations) {\r\n    warnDeprecation(DeprecationTypes.GLOBAL_PROTOTYPE, null)\r\n  }\r\n}\r\n\r\nfunction installCompatMount(\r\n  app: App,\r\n  context: AppContext,\r\n  render: RootRenderFunction\r\n) {\r\n  let isMounted = false\r\n\r\n  /**\r\n   * Vue 2 supports the behavior of creating a component instance but not\r\n   * mounting it, which is no longer possible in Vue 3 - this internal\r\n   * function simulates that behavior.\r\n   */\r\n  app._createRoot = options => {\r\n    const component = app._component\r\n    const vnode = createVNode(component, options.propsData || null)\r\n    vnode.appContext = context\r\n\r\n    const hasNoRender =\r\n      !isFunction(component) && !component.render && !component.template\r\n    const emptyRender = () => {}\r\n\r\n    // create root instance\r\n    const instance = createComponentInstance(vnode, null, null)\r\n    // suppress \"missing render fn\" warning since it can't be determined\r\n    // until $mount is called\r\n    if (hasNoRender) {\r\n      instance.render = emptyRender\r\n    }\r\n    setupComponent(instance)\r\n    vnode.component = instance\r\n    vnode.isCompatRoot = true\r\n\r\n    // $mount & $destroy\r\n    // these are defined on ctx and picked up by the $mount/$destroy\r\n    // public property getters on the instance proxy.\r\n    // Note: the following assumes DOM environment since the compat build\r\n    // only targets web. It essentially includes logic for app.mount from\r\n    // both runtime-core AND runtime-dom.\r\n    instance.ctx._compat_mount = (selectorOrEl?: string | Element) => {\r\n      if (isMounted) {\r\n        __DEV__ && warn(`Root instance is already mounted.`)\r\n        return\r\n      }\r\n\r\n      let container: Element\r\n      if (typeof selectorOrEl === 'string') {\r\n        // eslint-disable-next-line\r\n        const result = document.querySelector(selectorOrEl)\r\n        if (!result) {\r\n          __DEV__ &&\r\n            warn(\r\n              `Failed to mount root instance: selector \"${selectorOrEl}\" returned null.`\r\n            )\r\n          return\r\n        }\r\n        container = result\r\n      } else {\r\n        // eslint-disable-next-line\r\n        container = selectorOrEl || document.createElement('div')\r\n      }\r\n\r\n      const isSVG = container instanceof SVGElement\r\n\r\n      // HMR root reload\r\n      if (__DEV__) {\r\n        context.reload = () => {\r\n          const cloned = cloneVNode(vnode)\r\n          // compat mode will use instance if not reset to null\r\n          cloned.component = null\r\n          render(cloned, container, isSVG)\r\n        }\r\n      }\r\n\r\n      // resolve in-DOM template if component did not provide render\r\n      // and no setup/mixin render functions are provided (by checking\r\n      // that the instance is still using the placeholder render fn)\r\n      if (hasNoRender && instance.render === emptyRender) {\r\n        // root directives check\r\n        if (__DEV__) {\r\n          for (let i = 0; i < container.attributes.length; i++) {\r\n            const attr = container.attributes[i]\r\n            if (attr.name !== 'v-cloak' && /^(v-|:|@)/.test(attr.name)) {\r\n              warnDeprecation(DeprecationTypes.GLOBAL_MOUNT_CONTAINER, null)\r\n              break\r\n            }\r\n          }\r\n        }\r\n        instance.render = null\r\n        ;(component as ComponentOptions).template = container.innerHTML\r\n        finishComponentSetup(instance, false, true /* skip options */)\r\n      }\r\n\r\n      // clear content before mounting\r\n      container.innerHTML = ''\r\n\r\n      // TODO hydration\r\n      render(vnode, container, isSVG)\r\n\r\n      if (container instanceof Element) {\r\n        container.removeAttribute('v-cloak')\r\n        container.setAttribute('data-v-app', '')\r\n      }\r\n\r\n      isMounted = true\r\n      app._container = container\r\n      // for devtools and telemetry\r\n      ;(container as any).__vue_app__ = app\r\n      if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n        devtoolsInitApp(app, version)\r\n      }\r\n\r\n      return instance.proxy!\r\n    }\r\n\r\n    instance.ctx._compat_destroy = () => {\r\n      if (isMounted) {\r\n        render(null, app._container)\r\n        if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n          devtoolsUnmountApp(app)\r\n        }\r\n        delete app._container.__vue_app__\r\n      } else {\r\n        const { bum, scope, um } = instance\r\n        // beforeDestroy hooks\r\n        if (bum) {\r\n          invokeArrayFns(bum)\r\n        }\r\n        if (isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)) {\r\n          instance.emit('hook:beforeDestroy')\r\n        }\r\n        // stop effects\r\n        if (scope) {\r\n          scope.stop()\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n          invokeArrayFns(um)\r\n        }\r\n        if (isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)) {\r\n          instance.emit('hook:destroyed')\r\n        }\r\n      }\r\n    }\r\n\r\n    return instance.proxy!\r\n  }\r\n}\r\n\r\nconst methodsToPatch = [\r\n  'push',\r\n  'pop',\r\n  'shift',\r\n  'unshift',\r\n  'splice',\r\n  'sort',\r\n  'reverse'\r\n]\r\n\r\nconst patched = new WeakSet<object>()\r\n\r\nfunction defineReactive(obj: any, key: string, val: any) {\r\n  // it's possible for the original object to be mutated after being defined\r\n  // and expecting reactivity... we are covering it here because this seems to\r\n  // be a bit more common.\r\n  if (isObject(val) && !isReactive(val) && !patched.has(val)) {\r\n    const reactiveVal = reactive(val)\r\n    if (isArray(val)) {\r\n      methodsToPatch.forEach(m => {\r\n        // @ts-ignore\r\n        val[m] = (...args: any[]) => {\r\n          // @ts-ignore\r\n          Array.prototype[m].call(reactiveVal, ...args)\r\n        }\r\n      })\r\n    } else {\r\n      Object.keys(val).forEach(key => {\r\n        try {\r\n          defineReactiveSimple(val, key, val[key])\r\n        } catch (e: any) {}\r\n      })\r\n    }\r\n  }\r\n\r\n  const i = obj.$\r\n  if (i && obj === i.proxy) {\r\n    // target is a Vue instance - define on instance.ctx\r\n    defineReactiveSimple(i.ctx, key, val)\r\n    i.accessCache = Object.create(null)\r\n  } else if (isReactive(obj)) {\r\n    obj[key] = val\r\n  } else {\r\n    defineReactiveSimple(obj, key, val)\r\n  }\r\n}\r\n\r\nfunction defineReactiveSimple(obj: any, key: string, val: any) {\r\n  val = isObject(val) ? reactive(val) : val\r\n  Object.defineProperty(obj, key, {\r\n    enumerable: true,\r\n    configurable: true,\r\n    get() {\r\n      track(obj, TrackOpTypes.GET, key)\r\n      return val\r\n    },\r\n    set(newVal) {\r\n      val = isObject(newVal) ? reactive(newVal) : newVal\r\n      trigger(obj, TriggerOpTypes.SET, key, newVal)\r\n    }\r\n  })\r\n}\r\n","import { AppConfig } from '../apiCreateApp'\r\nimport {\r\n  DeprecationTypes,\r\n  softAssertCompatEnabled,\r\n  warnDeprecation\r\n} from './compatConfig'\r\nimport { isCopyingConfig } from './global'\r\nimport { internalOptionMergeStrats } from '../componentOptions'\r\n\r\n// legacy config warnings\r\nexport type LegacyConfig = {\r\n  /**\r\n   * @deprecated `config.silent` option has been removed\r\n   */\r\n  silent?: boolean\r\n  /**\r\n   * @deprecated use __VUE_PROD_DEVTOOLS__ compile-time feature flag instead\r\n   * https://github.com/vuejs/core/tree/main/packages/vue#bundler-build-feature-flags\r\n   */\r\n  devtools?: boolean\r\n  /**\r\n   * @deprecated use `config.isCustomElement` instead\r\n   * https://v3-migration.vuejs.org/breaking-changes/global-api.html#config-ignoredelements-is-now-config-iscustomelement\r\n   */\r\n  ignoredElements?: (string | RegExp)[]\r\n  /**\r\n   * @deprecated\r\n   * https://v3-migration.vuejs.org/breaking-changes/keycode-modifiers.html\r\n   */\r\n  keyCodes?: Record<string, number | number[]>\r\n  /**\r\n   * @deprecated\r\n   * https://v3-migration.vuejs.org/breaking-changes/global-api.html#config-productiontip-removed\r\n   */\r\n  productionTip?: boolean\r\n}\r\n\r\n// dev only\r\nexport function installLegacyConfigWarnings(config: AppConfig) {\r\n  const legacyConfigOptions: Record<string, DeprecationTypes> = {\r\n    silent: DeprecationTypes.CONFIG_SILENT,\r\n    devtools: DeprecationTypes.CONFIG_DEVTOOLS,\r\n    ignoredElements: DeprecationTypes.CONFIG_IGNORED_ELEMENTS,\r\n    keyCodes: DeprecationTypes.CONFIG_KEY_CODES,\r\n    productionTip: DeprecationTypes.CONFIG_PRODUCTION_TIP\r\n  }\r\n\r\n  Object.keys(legacyConfigOptions).forEach(key => {\r\n    let val = (config as any)[key]\r\n    Object.defineProperty(config, key, {\r\n      enumerable: true,\r\n      get() {\r\n        return val\r\n      },\r\n      set(newVal) {\r\n        if (!isCopyingConfig) {\r\n          warnDeprecation(legacyConfigOptions[key], null)\r\n        }\r\n        val = newVal\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\nexport function installLegacyOptionMergeStrats(config: AppConfig) {\r\n  config.optionMergeStrategies = new Proxy({} as any, {\r\n    get(target, key) {\r\n      if (key in target) {\r\n        return target[key]\r\n      }\r\n      if (\r\n        key in internalOptionMergeStrats &&\r\n        softAssertCompatEnabled(\r\n          DeprecationTypes.CONFIG_OPTION_MERGE_STRATS,\r\n          null\r\n        )\r\n      ) {\r\n        return internalOptionMergeStrats[\r\n          key as keyof typeof internalOptionMergeStrats\r\n        ]\r\n      }\r\n    }\r\n  })\r\n}\r\n","import {\r\n  ConcreteComponent,\r\n  Data,\r\n  validateComponentName,\r\n  Component,\r\n  ComponentInternalInstance,\r\n  getExposeProxy\r\n} from './component'\r\nimport {\r\n  ComponentOptions,\r\n  MergedComponentOptions,\r\n  RuntimeCompilerOptions\r\n} from './componentOptions'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { Directive, validateDirectiveName } from './directives'\r\nimport { RootRenderFunction } from './renderer'\r\nimport { InjectionKey } from './apiInject'\r\nimport { warn } from './warning'\r\nimport { createVNode, cloneVNode, VNode } from './vnode'\r\nimport { RootHydrateFunction } from './hydration'\r\nimport { devtoolsInitApp, devtoolsUnmountApp } from './devtools'\r\nimport { isFunction, NO, isObject } from '@vue/shared'\r\nimport { version } from '.'\r\nimport { installAppCompatProperties } from './compat/global'\r\nimport { NormalizedPropsOptions } from './componentProps'\r\nimport { ObjectEmitsOptions } from './componentEmits'\r\n\r\nexport interface App<HostElement = any> {\r\n  version: string\r\n  config: AppConfig\r\n  use(plugin: Plugin, ...options: any[]): this\r\n  mixin(mixin: ComponentOptions): this\r\n  component(name: string): Component | undefined\r\n  component(name: string, component: Component): this\r\n  directive(name: string): Directive | undefined\r\n  directive(name: string, directive: Directive): this\r\n  mount(\r\n    rootContainer: HostElement | string,\r\n    isHydrate?: boolean,\r\n    isSVG?: boolean\r\n  ): ComponentPublicInstance\r\n  unmount(): void\r\n  provide<T>(key: InjectionKey<T> | string, value: T): this\r\n\r\n  // internal, but we need to expose these for the server-renderer and devtools\r\n  _uid: number\r\n  _component: ConcreteComponent\r\n  _props: Data | null\r\n  _container: HostElement | null\r\n  _context: AppContext\r\n  _instance: ComponentInternalInstance | null\r\n\r\n  /**\r\n   * v2 compat only\r\n   */\r\n  filter?(name: string): Function | undefined\r\n  filter?(name: string, filter: Function): this\r\n\r\n  /**\r\n   * @internal v3 compat only\r\n   */\r\n  _createRoot?(options: ComponentOptions): ComponentPublicInstance\r\n}\r\n\r\nexport type OptionMergeFunction = (to: unknown, from: unknown) => any\r\n\r\nexport interface AppConfig {\r\n  // @private\r\n  readonly isNativeTag?: (tag: string) => boolean\r\n\r\n  performance: boolean\r\n  optionMergeStrategies: Record<string, OptionMergeFunction>\r\n  globalProperties: Record<string, any>\r\n  errorHandler?: (\r\n    err: unknown,\r\n    instance: ComponentPublicInstance | null,\r\n    info: string\r\n  ) => void\r\n  warnHandler?: (\r\n    msg: string,\r\n    instance: ComponentPublicInstance | null,\r\n    trace: string\r\n  ) => void\r\n\r\n  /**\r\n   * Options to pass to `@vue/compiler-dom`.\r\n   * Only supported in runtime compiler build.\r\n   */\r\n  compilerOptions: RuntimeCompilerOptions\r\n\r\n  /**\r\n   * @deprecated use config.compilerOptions.isCustomElement\r\n   */\r\n  isCustomElement?: (tag: string) => boolean\r\n\r\n  /**\r\n   * Temporary config for opt-in to unwrap injected refs.\r\n   * TODO deprecate in 3.3\r\n   */\r\n  unwrapInjectedRef?: boolean\r\n}\r\n\r\nexport interface AppContext {\r\n  app: App // for devtools\r\n  config: AppConfig\r\n  mixins: ComponentOptions[]\r\n  components: Record<string, Component>\r\n  directives: Record<string, Directive>\r\n  provides: Record<string | symbol, any>\r\n\r\n  /**\r\n   * Cache for merged/normalized component options\r\n   * Each app instance has its own cache because app-level global mixins and\r\n   * optionMergeStrategies can affect merge behavior.\r\n   * @internal\r\n   */\r\n  optionsCache: WeakMap<ComponentOptions, MergedComponentOptions>\r\n  /**\r\n   * Cache for normalized props options\r\n   * @internal\r\n   */\r\n  propsCache: WeakMap<ConcreteComponent, NormalizedPropsOptions>\r\n  /**\r\n   * Cache for normalized emits options\r\n   * @internal\r\n   */\r\n  emitsCache: WeakMap<ConcreteComponent, ObjectEmitsOptions | null>\r\n  /**\r\n   * HMR only\r\n   * @internal\r\n   */\r\n  reload?: () => void\r\n  /**\r\n   * v2 compat only\r\n   * @internal\r\n   */\r\n  filters?: Record<string, Function>\r\n}\r\n\r\ntype PluginInstallFunction = (app: App, ...options: any[]) => any\r\n\r\nexport type Plugin =\r\n  | (PluginInstallFunction & { install?: PluginInstallFunction })\r\n  | {\r\n      install: PluginInstallFunction\r\n    }\r\n\r\nexport function createAppContext(): AppContext {\r\n  return {\r\n    app: null as any,\r\n    config: {\r\n      isNativeTag: NO,\r\n      performance: false,\r\n      globalProperties: {},\r\n      optionMergeStrategies: {},\r\n      errorHandler: undefined,\r\n      warnHandler: undefined,\r\n      compilerOptions: {}\r\n    },\r\n    mixins: [],\r\n    components: {},\r\n    directives: {},\r\n    provides: Object.create(null),\r\n    optionsCache: new WeakMap(),\r\n    propsCache: new WeakMap(),\r\n    emitsCache: new WeakMap()\r\n  }\r\n}\r\n\r\nexport type CreateAppFunction<HostElement> = (\r\n  rootComponent: Component,\r\n  rootProps?: Data | null\r\n) => App<HostElement>\r\n\r\nlet uid = 0\r\n\r\nexport function createAppAPI<HostElement>(\r\n  render: RootRenderFunction,\r\n  hydrate?: RootHydrateFunction\r\n): CreateAppFunction<HostElement> {\r\n  return function createApp(rootComponent, rootProps = null) {\r\n    if (!isFunction(rootComponent)) {\r\n      rootComponent = { ...rootComponent }\r\n    }\r\n\r\n    if (rootProps != null && !isObject(rootProps)) {\r\n      __DEV__ && warn(`root props passed to app.mount() must be an object.`)\r\n      rootProps = null\r\n    }\r\n\r\n    const context = createAppContext()\r\n    const installedPlugins = new Set()\r\n\r\n    let isMounted = false\r\n\r\n    const app: App = (context.app = {\r\n      _uid: uid++,\r\n      _component: rootComponent as ConcreteComponent,\r\n      _props: rootProps,\r\n      _container: null,\r\n      _context: context,\r\n      _instance: null,\r\n\r\n      version,\r\n\r\n      get config() {\r\n        return context.config\r\n      },\r\n\r\n      set config(v) {\r\n        if (__DEV__) {\r\n          warn(\r\n            `app.config cannot be replaced. Modify individual options instead.`\r\n          )\r\n        }\r\n      },\r\n\r\n      use(plugin: Plugin, ...options: any[]) {\r\n        if (installedPlugins.has(plugin)) {\r\n          __DEV__ && warn(`Plugin has already been applied to target app.`)\r\n        } else if (plugin && isFunction(plugin.install)) {\r\n          installedPlugins.add(plugin)\r\n          plugin.install(app, ...options)\r\n        } else if (isFunction(plugin)) {\r\n          installedPlugins.add(plugin)\r\n          plugin(app, ...options)\r\n        } else if (__DEV__) {\r\n          warn(\r\n            `A plugin must either be a function or an object with an \"install\" ` +\r\n              `function.`\r\n          )\r\n        }\r\n        return app\r\n      },\r\n\r\n      mixin(mixin: ComponentOptions) {\r\n        if (__FEATURE_OPTIONS_API__) {\r\n          if (!context.mixins.includes(mixin)) {\r\n            context.mixins.push(mixin)\r\n          } else if (__DEV__) {\r\n            warn(\r\n              'Mixin has already been applied to target app' +\r\n                (mixin.name ? `: ${mixin.name}` : '')\r\n            )\r\n          }\r\n        } else if (__DEV__) {\r\n          warn('Mixins are only available in builds supporting Options API')\r\n        }\r\n        return app\r\n      },\r\n\r\n      component(name: string, component?: Component): any {\r\n        if (__DEV__) {\r\n          validateComponentName(name, context.config)\r\n        }\r\n        if (!component) {\r\n          return context.components[name]\r\n        }\r\n        if (__DEV__ && context.components[name]) {\r\n          warn(`Component \"${name}\" has already been registered in target app.`)\r\n        }\r\n        context.components[name] = component\r\n        return app\r\n      },\r\n\r\n      directive(name: string, directive?: Directive) {\r\n        if (__DEV__) {\r\n          validateDirectiveName(name)\r\n        }\r\n\r\n        if (!directive) {\r\n          return context.directives[name] as any\r\n        }\r\n        if (__DEV__ && context.directives[name]) {\r\n          warn(`Directive \"${name}\" has already been registered in target app.`)\r\n        }\r\n        context.directives[name] = directive\r\n        return app\r\n      },\r\n\r\n      mount(\r\n        rootContainer: HostElement,\r\n        isHydrate?: boolean,\r\n        isSVG?: boolean\r\n      ): any {\r\n        if (!isMounted) {\r\n          // #5571\r\n          if (__DEV__ && (rootContainer as any).__vue_app__) {\r\n            warn(\r\n              `There is already an app instance mounted on the host container.\\n` +\r\n                ` If you want to mount another app on the same host container,` +\r\n                ` you need to unmount the previous app by calling \\`app.unmount()\\` first.`\r\n            )\r\n          }\r\n          const vnode = createVNode(\r\n            rootComponent as ConcreteComponent,\r\n            rootProps\r\n          )\r\n          // store app context on the root VNode.\r\n          // this will be set on the root instance on initial mount.\r\n          vnode.appContext = context\r\n\r\n          // HMR root reload\r\n          if (__DEV__) {\r\n            context.reload = () => {\r\n              render(cloneVNode(vnode), rootContainer, isSVG)\r\n            }\r\n          }\r\n\r\n          if (isHydrate && hydrate) {\r\n            hydrate(vnode as VNode<Node, Element>, rootContainer as any)\r\n          } else {\r\n            render(vnode, rootContainer, isSVG)\r\n          }\r\n          isMounted = true\r\n          app._container = rootContainer\r\n          // for devtools and telemetry\r\n          ;(rootContainer as any).__vue_app__ = app\r\n\r\n          if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n            app._instance = vnode.component\r\n            devtoolsInitApp(app, version)\r\n          }\r\n\r\n          return getExposeProxy(vnode.component!) || vnode.component!.proxy\r\n        } else if (__DEV__) {\r\n          warn(\r\n            `App has already been mounted.\\n` +\r\n              `If you want to remount the same app, move your app creation logic ` +\r\n              `into a factory function and create fresh app instances for each ` +\r\n              `mount - e.g. \\`const createMyApp = () => createApp(App)\\``\r\n          )\r\n        }\r\n      },\r\n\r\n      unmount() {\r\n        if (isMounted) {\r\n          render(null, app._container)\r\n          if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n            app._instance = null\r\n            devtoolsUnmountApp(app)\r\n          }\r\n          delete app._container.__vue_app__\r\n        } else if (__DEV__) {\r\n          warn(`Cannot unmount an app that is not mounted.`)\r\n        }\r\n      },\r\n\r\n      provide(key, value) {\r\n        if (__DEV__ && (key as string | symbol) in context.provides) {\r\n          warn(\r\n            `App already provides property with key \"${String(key)}\". ` +\r\n              `It will be overwritten with the new value.`\r\n          )\r\n        }\r\n\r\n        context.provides[key as string | symbol] = value\r\n\r\n        return app\r\n      }\r\n    })\r\n\r\n    if (__COMPAT__) {\r\n      installAppCompatProperties(app, context, render)\r\n    }\r\n\r\n    return app\r\n  }\r\n}\r\n","import { SuspenseBoundary } from './components/Suspense'\r\nimport { VNode, VNodeNormalizedRef, VNodeNormalizedRefAtom } from './vnode'\r\nimport {\r\n  EMPTY_OBJ,\r\n  hasOwn,\r\n  isArray,\r\n  isFunction,\r\n  isString,\r\n  remove,\r\n  ShapeFlags\r\n} from '@vue/shared'\r\nimport { isAsyncWrapper } from './apiAsyncComponent'\r\nimport { getExposeProxy } from './component'\r\nimport { warn } from './warning'\r\nimport { isRef } from '@vue/reactivity'\r\nimport { callWithErrorHandling, ErrorCodes } from './errorHandling'\r\nimport { SchedulerJob } from './scheduler'\r\nimport { queuePostRenderEffect } from './renderer'\r\n\r\n/**\r\n * Function for handling a template ref\r\n */\r\nexport function setRef(\r\n  rawRef: VNodeNormalizedRef,\r\n  oldRawRef: VNodeNormalizedRef | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  vnode: VNode,\r\n  isUnmount = false\r\n) {\r\n  if (isArray(rawRef)) {\r\n    rawRef.forEach((r, i) =>\r\n      setRef(\r\n        r,\r\n        oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef),\r\n        parentSuspense,\r\n        vnode,\r\n        isUnmount\r\n      )\r\n    )\r\n    return\r\n  }\r\n\r\n  if (isAsyncWrapper(vnode) && !isUnmount) {\r\n    // when mounting async components, nothing needs to be done,\r\n    // because the template ref is forwarded to inner component\r\n    return\r\n  }\r\n\r\n  const refValue =\r\n    vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT\r\n      ? getExposeProxy(vnode.component!) || vnode.component!.proxy\r\n      : vnode.el\r\n  const value = isUnmount ? null : refValue\r\n\r\n  const { i: owner, r: ref } = rawRef\r\n  if (__DEV__ && !owner) {\r\n    warn(\r\n      `Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n        `A vnode with ref must be created inside the render function.`\r\n    )\r\n    return\r\n  }\r\n  const oldRef = oldRawRef && (oldRawRef as VNodeNormalizedRefAtom).r\r\n  const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs\r\n  const setupState = owner.setupState\r\n\r\n  // dynamic ref changed. unset old ref\r\n  if (oldRef != null && oldRef !== ref) {\r\n    if (isString(oldRef)) {\r\n      refs[oldRef] = null\r\n      if (hasOwn(setupState, oldRef)) {\r\n        setupState[oldRef] = null\r\n      }\r\n    } else if (isRef(oldRef)) {\r\n      oldRef.value = null\r\n    }\r\n  }\r\n\r\n  if (isFunction(ref)) {\r\n    callWithErrorHandling(ref, owner, ErrorCodes.FUNCTION_REF, [value, refs])\r\n  } else {\r\n    const _isString = isString(ref)\r\n    const _isRef = isRef(ref)\r\n    if (_isString || _isRef) {\r\n      const doSet = () => {\r\n        if (rawRef.f) {\r\n          const existing = _isString ? refs[ref] : ref.value\r\n          if (isUnmount) {\r\n            isArray(existing) && remove(existing, refValue)\r\n          } else {\r\n            if (!isArray(existing)) {\r\n              if (_isString) {\r\n                refs[ref] = [refValue]\r\n                if (hasOwn(setupState, ref)) {\r\n                  setupState[ref] = refs[ref]\r\n                }\r\n              } else {\r\n                ref.value = [refValue]\r\n                if (rawRef.k) refs[rawRef.k] = ref.value\r\n              }\r\n            } else if (!existing.includes(refValue)) {\r\n              existing.push(refValue)\r\n            }\r\n          }\r\n        } else if (_isString) {\r\n          refs[ref] = value\r\n          if (hasOwn(setupState, ref)) {\r\n            setupState[ref] = value\r\n          }\r\n        } else if (_isRef) {\r\n          ref.value = value\r\n          if (rawRef.k) refs[rawRef.k] = value\r\n        } else if (__DEV__) {\r\n          warn('Invalid template ref type:', ref, `(${typeof ref})`)\r\n        }\r\n      }\r\n      if (value) {\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        ;(doSet as SchedulerJob).id = -1\r\n        queuePostRenderEffect(doSet, parentSuspense)\r\n      } else {\r\n        doSet()\r\n      }\r\n    } else if (__DEV__) {\r\n      warn('Invalid template ref type:', ref, `(${typeof ref})`)\r\n    }\r\n  }\r\n}\r\n","import {\r\n  VNode,\r\n  normalizeVNode,\r\n  Text,\r\n  Comment,\r\n  Static,\r\n  Fragment,\r\n  VNodeHook,\r\n  createVNode,\r\n  createTextVNode,\r\n  invokeVNodeHook\r\n} from './vnode'\r\nimport { flushPostFlushCbs } from './scheduler'\r\nimport { ComponentInternalInstance } from './component'\r\nimport { invokeDirectiveHook } from './directives'\r\nimport { warn } from './warning'\r\nimport { PatchFlags, ShapeFlags, isReservedProp, isOn } from '@vue/shared'\r\nimport { RendererInternals } from './renderer'\r\nimport { setRef } from './rendererTemplateRef'\r\nimport {\r\n  SuspenseImpl,\r\n  SuspenseBoundary,\r\n  queueEffectWithSuspense\r\n} from './components/Suspense'\r\nimport { TeleportImpl, TeleportVNode } from './components/Teleport'\r\nimport { isAsyncWrapper } from './apiAsyncComponent'\r\n\r\nexport type RootHydrateFunction = (\r\n  vnode: VNode<Node, Element>,\r\n  container: (Element | ShadowRoot) & { _vnode?: VNode }\r\n) => void\r\n\r\nconst enum DOMNodeTypes {\r\n  ELEMENT = 1,\r\n  TEXT = 3,\r\n  COMMENT = 8\r\n}\r\n\r\nlet hasMismatch = false\r\n\r\nconst isSVGContainer = (container: Element) =>\r\n  /svg/.test(container.namespaceURI!) && container.tagName !== 'foreignObject'\r\n\r\nconst isComment = (node: Node): node is Comment =>\r\n  node.nodeType === DOMNodeTypes.COMMENT\r\n\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nexport function createHydrationFunctions(\r\n  rendererInternals: RendererInternals<Node, Element>\r\n) {\r\n  const {\r\n    mt: mountComponent,\r\n    p: patch,\r\n    o: {\r\n      patchProp,\r\n      createText,\r\n      nextSibling,\r\n      parentNode,\r\n      remove,\r\n      insert,\r\n      createComment\r\n    }\r\n  } = rendererInternals\r\n\r\n  const hydrate: RootHydrateFunction = (vnode, container) => {\r\n    if (!container.hasChildNodes()) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Attempting to hydrate existing markup but container is empty. ` +\r\n            `Performing full mount instead.`\r\n        )\r\n      patch(null, vnode, container)\r\n      flushPostFlushCbs()\r\n      container._vnode = vnode\r\n      return\r\n    }\r\n    hasMismatch = false\r\n    hydrateNode(container.firstChild!, vnode, null, null, null)\r\n    flushPostFlushCbs()\r\n    container._vnode = vnode\r\n    if (hasMismatch && !__TEST__) {\r\n      // this error should show up in production\r\n      console.error(`Hydration completed but contains mismatches.`)\r\n    }\r\n  }\r\n\r\n  const hydrateNode = (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized = false\r\n  ): Node | null => {\r\n    const isFragmentStart = isComment(node) && node.data === '['\r\n    const onMismatch = () =>\r\n      handleMismatch(\r\n        node,\r\n        vnode,\r\n        parentComponent,\r\n        parentSuspense,\r\n        slotScopeIds,\r\n        isFragmentStart\r\n      )\r\n\r\n    const { type, ref, shapeFlag, patchFlag } = vnode\r\n    const domType = node.nodeType\r\n    vnode.el = node\r\n\r\n    if (patchFlag === PatchFlags.BAIL) {\r\n      optimized = false\r\n      vnode.dynamicChildren = null\r\n    }\r\n\r\n    let nextNode: Node | null = null\r\n    switch (type) {\r\n      case Text:\r\n        if (domType !== DOMNodeTypes.TEXT) {\r\n          // #5728 empty text node inside a slot can cause hydration failure\r\n          // because the server rendered HTML won't contain a text node\r\n          if (vnode.children === '') {\r\n            insert((vnode.el = createText('')), parentNode(node)!, node)\r\n            nextNode = node\r\n          } else {\r\n            nextNode = onMismatch()\r\n          }\r\n        } else {\r\n          if ((node as Text).data !== vnode.children) {\r\n            hasMismatch = true\r\n            __DEV__ &&\r\n              warn(\r\n                `Hydration text mismatch:` +\r\n                  `\\n- Client: ${JSON.stringify((node as Text).data)}` +\r\n                  `\\n- Server: ${JSON.stringify(vnode.children)}`\r\n              )\r\n            ;(node as Text).data = vnode.children as string\r\n          }\r\n          nextNode = nextSibling(node)\r\n        }\r\n        break\r\n      case Comment:\r\n        if (domType !== DOMNodeTypes.COMMENT || isFragmentStart) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          nextNode = nextSibling(node)\r\n        }\r\n        break\r\n      case Static:\r\n        if (domType !== DOMNodeTypes.ELEMENT && domType !== DOMNodeTypes.TEXT) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          // determine anchor, adopt content\r\n          nextNode = node\r\n          // if the static vnode has its content stripped during build,\r\n          // adopt it from the server-rendered HTML.\r\n          const needToAdoptContent = !(vnode.children as string).length\r\n          for (let i = 0; i < vnode.staticCount!; i++) {\r\n            if (needToAdoptContent)\r\n              vnode.children +=\r\n                nextNode.nodeType === DOMNodeTypes.ELEMENT\r\n                  ? (nextNode as Element).outerHTML\r\n                  : (nextNode as Text).data\r\n            if (i === vnode.staticCount! - 1) {\r\n              vnode.anchor = nextNode\r\n            }\r\n            nextNode = nextSibling(nextNode)!\r\n          }\r\n          return nextNode\r\n        }\r\n        break\r\n      case Fragment:\r\n        if (!isFragmentStart) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          nextNode = hydrateFragment(\r\n            node as Comment,\r\n            vnode,\r\n            parentComponent,\r\n            parentSuspense,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        }\r\n        break\r\n      default:\r\n        if (shapeFlag & ShapeFlags.ELEMENT) {\r\n          if (\r\n            domType !== DOMNodeTypes.ELEMENT ||\r\n            (vnode.type as string).toLowerCase() !==\r\n              (node as Element).tagName.toLowerCase()\r\n          ) {\r\n            nextNode = onMismatch()\r\n          } else {\r\n            nextNode = hydrateElement(\r\n              node as Element,\r\n              vnode,\r\n              parentComponent,\r\n              parentSuspense,\r\n              slotScopeIds,\r\n              optimized\r\n            )\r\n          }\r\n        } else if (shapeFlag & ShapeFlags.COMPONENT) {\r\n          // when setting up the render effect, if the initial vnode already\r\n          // has .el set, the component will perform hydration instead of mount\r\n          // on its sub-tree.\r\n          vnode.slotScopeIds = slotScopeIds\r\n          const container = parentNode(node)!\r\n          mountComponent(\r\n            vnode,\r\n            container,\r\n            null,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVGContainer(container),\r\n            optimized\r\n          )\r\n\r\n          // component may be async, so in the case of fragments we cannot rely\r\n          // on component's rendered output to determine the end of the fragment\r\n          // instead, we do a lookahead to find the end anchor node.\r\n          nextNode = isFragmentStart\r\n            ? locateClosingAsyncAnchor(node)\r\n            : nextSibling(node)\r\n\r\n          // #4293 teleport as component root\r\n          if (\r\n            nextNode &&\r\n            isComment(nextNode) &&\r\n            nextNode.data === 'teleport end'\r\n          ) {\r\n            nextNode = nextSibling(nextNode)\r\n          }\r\n\r\n          // #3787\r\n          // if component is async, it may get moved / unmounted before its\r\n          // inner component is loaded, so we need to give it a placeholder\r\n          // vnode that matches its adopted DOM.\r\n          if (isAsyncWrapper(vnode)) {\r\n            let subTree\r\n            if (isFragmentStart) {\r\n              subTree = createVNode(Fragment)\r\n              subTree.anchor = nextNode\r\n                ? nextNode.previousSibling\r\n                : container.lastChild\r\n            } else {\r\n              subTree =\r\n                node.nodeType === 3 ? createTextVNode('') : createVNode('div')\r\n            }\r\n            subTree.el = node\r\n            vnode.component!.subTree = subTree\r\n          }\r\n        } else if (shapeFlag & ShapeFlags.TELEPORT) {\r\n          if (domType !== DOMNodeTypes.COMMENT) {\r\n            nextNode = onMismatch()\r\n          } else {\r\n            nextNode = (vnode.type as typeof TeleportImpl).hydrate(\r\n              node,\r\n              vnode as TeleportVNode,\r\n              parentComponent,\r\n              parentSuspense,\r\n              slotScopeIds,\r\n              optimized,\r\n              rendererInternals,\r\n              hydrateChildren\r\n            )\r\n          }\r\n        } else if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n          nextNode = (vnode.type as typeof SuspenseImpl).hydrate(\r\n            node,\r\n            vnode,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVGContainer(parentNode(node)!),\r\n            slotScopeIds,\r\n            optimized,\r\n            rendererInternals,\r\n            hydrateNode\r\n          )\r\n        } else if (__DEV__) {\r\n          warn('Invalid HostVNode type:', type, `(${typeof type})`)\r\n        }\r\n    }\r\n\r\n    if (ref != null) {\r\n      setRef(ref, null, parentSuspense, vnode)\r\n    }\r\n\r\n    return nextNode\r\n  }\r\n\r\n  const hydrateElement = (\r\n    el: Element,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    optimized = optimized || !!vnode.dynamicChildren\r\n    const { type, props, patchFlag, shapeFlag, dirs } = vnode\r\n    // #4006 for form elements with non-string v-model value bindings\r\n    // e.g. <option :value=\"obj\">, <input type=\"checkbox\" :true-value=\"1\">\r\n    const forcePatchValue = (type === 'input' && dirs) || type === 'option'\r\n    // skip props & children if this is hoisted static nodes\r\n    // #5405 in dev, always hydrate children for HMR\r\n    if (__DEV__ || forcePatchValue || patchFlag !== PatchFlags.HOISTED) {\r\n      if (dirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'created')\r\n      }\r\n      // props\r\n      if (props) {\r\n        if (\r\n          forcePatchValue ||\r\n          !optimized ||\r\n          patchFlag & (PatchFlags.FULL_PROPS | PatchFlags.HYDRATE_EVENTS)\r\n        ) {\r\n          for (const key in props) {\r\n            if (\r\n              (forcePatchValue && key.endsWith('value')) ||\r\n              (isOn(key) && !isReservedProp(key))\r\n            ) {\r\n              patchProp(\r\n                el,\r\n                key,\r\n                null,\r\n                props[key],\r\n                false,\r\n                undefined,\r\n                parentComponent\r\n              )\r\n            }\r\n          }\r\n        } else if (props.onClick) {\r\n          // Fast path for click listeners (which is most often) to avoid\r\n          // iterating through props.\r\n          patchProp(\r\n            el,\r\n            'onClick',\r\n            null,\r\n            props.onClick,\r\n            false,\r\n            undefined,\r\n            parentComponent\r\n          )\r\n        }\r\n      }\r\n      // vnode / directive hooks\r\n      let vnodeHooks: VNodeHook | null | undefined\r\n      if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n        invokeVNodeHook(vnodeHooks, parentComponent, vnode)\r\n      }\r\n      if (dirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount')\r\n      }\r\n      if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n        queueEffectWithSuspense(() => {\r\n          vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode)\r\n          dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted')\r\n        }, parentSuspense)\r\n      }\r\n      // children\r\n      if (\r\n        shapeFlag & ShapeFlags.ARRAY_CHILDREN &&\r\n        // skip if element has innerHTML / textContent\r\n        !(props && (props.innerHTML || props.textContent))\r\n      ) {\r\n        let next = hydrateChildren(\r\n          el.firstChild,\r\n          vnode,\r\n          el,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        let hasWarned = false\r\n        while (next) {\r\n          hasMismatch = true\r\n          if (__DEV__ && !hasWarned) {\r\n            warn(\r\n              `Hydration children mismatch in <${vnode.type as string}>: ` +\r\n                `server rendered element contains more child nodes than client vdom.`\r\n            )\r\n            hasWarned = true\r\n          }\r\n          // The SSRed DOM contains more nodes than it should. Remove them.\r\n          const cur = next\r\n          next = next.nextSibling\r\n          remove(cur)\r\n        }\r\n      } else if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n        if (el.textContent !== vnode.children) {\r\n          hasMismatch = true\r\n          __DEV__ &&\r\n            warn(\r\n              `Hydration text content mismatch in <${\r\n                vnode.type as string\r\n              }>:\\n` +\r\n                `- Client: ${el.textContent}\\n` +\r\n                `- Server: ${vnode.children as string}`\r\n            )\r\n          el.textContent = vnode.children as string\r\n        }\r\n      }\r\n    }\r\n    return el.nextSibling\r\n  }\r\n\r\n  const hydrateChildren = (\r\n    node: Node | null,\r\n    parentVNode: VNode,\r\n    container: Element,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ): Node | null => {\r\n    optimized = optimized || !!parentVNode.dynamicChildren\r\n    const children = parentVNode.children as VNode[]\r\n    const l = children.length\r\n    let hasWarned = false\r\n    for (let i = 0; i < l; i++) {\r\n      const vnode = optimized\r\n        ? children[i]\r\n        : (children[i] = normalizeVNode(children[i]))\r\n      if (node) {\r\n        node = hydrateNode(\r\n          node,\r\n          vnode,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      } else if (vnode.type === Text && !vnode.children) {\r\n        continue\r\n      } else {\r\n        hasMismatch = true\r\n        if (__DEV__ && !hasWarned) {\r\n          warn(\r\n            `Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n              `server rendered element contains fewer child nodes than client vdom.`\r\n          )\r\n          hasWarned = true\r\n        }\r\n        // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n        patch(\r\n          null,\r\n          vnode,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVGContainer(container),\r\n          slotScopeIds\r\n        )\r\n      }\r\n    }\r\n    return node\r\n  }\r\n\r\n  const hydrateFragment = (\r\n    node: Comment,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    const { slotScopeIds: fragmentSlotScopeIds } = vnode\r\n    if (fragmentSlotScopeIds) {\r\n      slotScopeIds = slotScopeIds\r\n        ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n        : fragmentSlotScopeIds\r\n    }\r\n\r\n    const container = parentNode(node)!\r\n    const next = hydrateChildren(\r\n      nextSibling(node)!,\r\n      vnode,\r\n      container,\r\n      parentComponent,\r\n      parentSuspense,\r\n      slotScopeIds,\r\n      optimized\r\n    )\r\n    if (next && isComment(next) && next.data === ']') {\r\n      return nextSibling((vnode.anchor = next))\r\n    } else {\r\n      // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n      // back. This should have led to node/children mismatch warnings.\r\n      hasMismatch = true\r\n      // since the anchor is missing, we need to create one and insert it\r\n      insert((vnode.anchor = createComment(`]`)), container, next)\r\n      return next\r\n    }\r\n  }\r\n\r\n  const handleMismatch = (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    isFragment: boolean\r\n  ): Node | null => {\r\n    hasMismatch = true\r\n    __DEV__ &&\r\n      warn(\r\n        `Hydration node mismatch:\\n- Client vnode:`,\r\n        vnode.type,\r\n        `\\n- Server rendered DOM:`,\r\n        node,\r\n        node.nodeType === DOMNodeTypes.TEXT\r\n          ? `(text)`\r\n          : isComment(node) && node.data === '['\r\n          ? `(start of fragment)`\r\n          : ``\r\n      )\r\n    vnode.el = null\r\n\r\n    if (isFragment) {\r\n      // remove excessive fragment nodes\r\n      const end = locateClosingAsyncAnchor(node)\r\n      while (true) {\r\n        const next = nextSibling(node)\r\n        if (next && next !== end) {\r\n          remove(next)\r\n        } else {\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    const next = nextSibling(node)\r\n    const container = parentNode(node)!\r\n    remove(node)\r\n\r\n    patch(\r\n      null,\r\n      vnode,\r\n      container,\r\n      next,\r\n      parentComponent,\r\n      parentSuspense,\r\n      isSVGContainer(container),\r\n      slotScopeIds\r\n    )\r\n    return next\r\n  }\r\n\r\n  const locateClosingAsyncAnchor = (node: Node | null): Node | null => {\r\n    let match = 0\r\n    while (node) {\r\n      node = nextSibling(node)\r\n      if (node && isComment(node)) {\r\n        if (node.data === '[') match++\r\n        if (node.data === ']') {\r\n          if (match === 0) {\r\n            return nextSibling(node)\r\n          } else {\r\n            match--\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return node\r\n  }\r\n\r\n  return [hydrate, hydrateNode] as const\r\n}\r\n","import {\r\n  Text,\r\n  Fragment,\r\n  Comment,\r\n  cloneIfMounted,\r\n  normalizeVNode,\r\n  VNode,\r\n  VNodeArrayChildren,\r\n  createVNode,\r\n  isSameVNodeType,\r\n  Static,\r\n  VNodeHook,\r\n  VNodeProps,\r\n  invokeVNodeHook\r\n} from './vnode'\r\nimport {\r\n  ComponentInternalInstance,\r\n  ComponentOptions,\r\n  createComponentInstance,\r\n  Data,\r\n  setupComponent\r\n} from './component'\r\nimport {\r\n  filterSingleRoot,\r\n  renderComponentRoot,\r\n  shouldUpdateComponent,\r\n  updateHOCHostEl\r\n} from './componentRenderUtils'\r\nimport {\r\n  EMPTY_OBJ,\r\n  EMPTY_ARR,\r\n  isReservedProp,\r\n  PatchFlags,\r\n  ShapeFlags,\r\n  NOOP,\r\n  invokeArrayFns,\r\n  isArray,\r\n  getGlobalThis\r\n} from '@vue/shared'\r\nimport {\r\n  queueJob,\r\n  queuePostFlushCb,\r\n  flushPostFlushCbs,\r\n  invalidateJob,\r\n  flushPreFlushCbs,\r\n  SchedulerJob\r\n} from './scheduler'\r\nimport { pauseTracking, resetTracking, ReactiveEffect } from '@vue/reactivity'\r\nimport { updateProps } from './componentProps'\r\nimport { updateSlots } from './componentSlots'\r\nimport { pushWarningContext, popWarningContext, warn } from './warning'\r\nimport { createAppAPI, CreateAppFunction } from './apiCreateApp'\r\nimport { setRef } from './rendererTemplateRef'\r\nimport {\r\n  SuspenseBoundary,\r\n  queueEffectWithSuspense,\r\n  SuspenseImpl\r\n} from './components/Suspense'\r\nimport { TeleportImpl, TeleportVNode } from './components/Teleport'\r\nimport { isKeepAlive, KeepAliveContext } from './components/KeepAlive'\r\nimport { registerHMR, unregisterHMR, isHmrUpdating } from './hmr'\r\nimport { createHydrationFunctions, RootHydrateFunction } from './hydration'\r\nimport { invokeDirectiveHook } from './directives'\r\nimport { startMeasure, endMeasure } from './profiling'\r\nimport {\r\n  devtoolsComponentAdded,\r\n  devtoolsComponentRemoved,\r\n  devtoolsComponentUpdated,\r\n  setDevtoolsHook\r\n} from './devtools'\r\nimport { initFeatureFlags } from './featureFlags'\r\nimport { isAsyncWrapper } from './apiAsyncComponent'\r\nimport { isCompatEnabled } from './compat/compatConfig'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\n\r\nexport interface Renderer<HostElement = RendererElement> {\r\n  render: RootRenderFunction<HostElement>\r\n  createApp: CreateAppFunction<HostElement>\r\n}\r\n\r\nexport interface HydrationRenderer extends Renderer<Element | ShadowRoot> {\r\n  hydrate: RootHydrateFunction\r\n}\r\n\r\nexport type RootRenderFunction<HostElement = RendererElement> = (\r\n  vnode: VNode | null,\r\n  container: HostElement,\r\n  isSVG?: boolean\r\n) => void\r\n\r\nexport interface RendererOptions<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n> {\r\n  patchProp(\r\n    el: HostElement,\r\n    key: string,\r\n    prevValue: any,\r\n    nextValue: any,\r\n    isSVG?: boolean,\r\n    prevChildren?: VNode<HostNode, HostElement>[],\r\n    parentComponent?: ComponentInternalInstance | null,\r\n    parentSuspense?: SuspenseBoundary | null,\r\n    unmountChildren?: UnmountChildrenFn\r\n  ): void\r\n  insert(el: HostNode, parent: HostElement, anchor?: HostNode | null): void\r\n  remove(el: HostNode): void\r\n  createElement(\r\n    type: string,\r\n    isSVG?: boolean,\r\n    isCustomizedBuiltIn?: string,\r\n    vnodeProps?: (VNodeProps & { [key: string]: any }) | null\r\n  ): HostElement\r\n  createText(text: string): HostNode\r\n  createComment(text: string): HostNode\r\n  setText(node: HostNode, text: string): void\r\n  setElementText(node: HostElement, text: string): void\r\n  parentNode(node: HostNode): HostElement | null\r\n  nextSibling(node: HostNode): HostNode | null\r\n  querySelector?(selector: string): HostElement | null\r\n  setScopeId?(el: HostElement, id: string): void\r\n  cloneNode?(node: HostNode): HostNode\r\n  insertStaticContent?(\r\n    content: string,\r\n    parent: HostElement,\r\n    anchor: HostNode | null,\r\n    isSVG: boolean,\r\n    start?: HostNode | null,\r\n    end?: HostNode | null\r\n  ): [HostNode, HostNode]\r\n}\r\n\r\n// Renderer Node can technically be any object in the context of core renderer\r\n// logic - they are never directly operated on and always passed to the node op\r\n// functions provided via options, so the internal constraint is really just\r\n// a generic object.\r\nexport interface RendererNode {\r\n  [key: string]: any\r\n}\r\n\r\nexport interface RendererElement extends RendererNode {}\r\n\r\n// An object exposing the internals of a renderer, passed to tree-shakeable\r\n// features so that they can be decoupled from this file. Keys are shortened\r\n// to optimize bundle size.\r\nexport interface RendererInternals<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n> {\r\n  p: PatchFn\r\n  um: UnmountFn\r\n  r: RemoveFn\r\n  m: MoveFn\r\n  mt: MountComponentFn\r\n  mc: MountChildrenFn\r\n  pc: PatchChildrenFn\r\n  pbc: PatchBlockChildrenFn\r\n  n: NextFn\r\n  o: RendererOptions<HostNode, HostElement>\r\n}\r\n\r\n// These functions are created inside a closure and therefore their types cannot\r\n// be directly exported. In order to avoid maintaining function signatures in\r\n// two places, we declare them once here and use them inside the closure.\r\ntype PatchFn = (\r\n  n1: VNode | null, // null means this is a mount\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor?: RendererNode | null,\r\n  parentComponent?: ComponentInternalInstance | null,\r\n  parentSuspense?: SuspenseBoundary | null,\r\n  isSVG?: boolean,\r\n  slotScopeIds?: string[] | null,\r\n  optimized?: boolean\r\n) => void\r\n\r\ntype MountChildrenFn = (\r\n  children: VNodeArrayChildren,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  start?: number\r\n) => void\r\n\r\ntype PatchChildrenFn = (\r\n  n1: VNode | null,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean\r\n) => void\r\n\r\ntype PatchBlockChildrenFn = (\r\n  oldChildren: VNode[],\r\n  newChildren: VNode[],\r\n  fallbackContainer: RendererElement,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null\r\n) => void\r\n\r\ntype MoveFn = (\r\n  vnode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  type: MoveType,\r\n  parentSuspense?: SuspenseBoundary | null\r\n) => void\r\n\r\ntype NextFn = (vnode: VNode) => RendererNode | null\r\n\r\ntype UnmountFn = (\r\n  vnode: VNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  doRemove?: boolean,\r\n  optimized?: boolean\r\n) => void\r\n\r\ntype RemoveFn = (vnode: VNode) => void\r\n\r\ntype UnmountChildrenFn = (\r\n  children: VNode[],\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  doRemove?: boolean,\r\n  optimized?: boolean,\r\n  start?: number\r\n) => void\r\n\r\nexport type MountComponentFn = (\r\n  initialVNode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  optimized: boolean\r\n) => void\r\n\r\ntype ProcessTextOrCommentFn = (\r\n  n1: VNode | null,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null\r\n) => void\r\n\r\nexport type SetupRenderEffectFn = (\r\n  instance: ComponentInternalInstance,\r\n  initialVNode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  optimized: boolean\r\n) => void\r\n\r\nexport const enum MoveType {\r\n  ENTER,\r\n  LEAVE,\r\n  REORDER\r\n}\r\n\r\nexport const queuePostRenderEffect = __FEATURE_SUSPENSE__\r\n  ? queueEffectWithSuspense\r\n  : queuePostFlushCb\r\n\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nexport function createRenderer<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n>(options: RendererOptions<HostNode, HostElement>) {\r\n  return baseCreateRenderer<HostNode, HostElement>(options)\r\n}\r\n\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nexport function createHydrationRenderer(\r\n  options: RendererOptions<Node, Element>\r\n) {\r\n  return baseCreateRenderer(options, createHydrationFunctions)\r\n}\r\n\r\n// overload 1: no hydration\r\nfunction baseCreateRenderer<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n>(options: RendererOptions<HostNode, HostElement>): Renderer<HostElement>\r\n\r\n// overload 2: with hydration\r\nfunction baseCreateRenderer(\r\n  options: RendererOptions<Node, Element>,\r\n  createHydrationFns: typeof createHydrationFunctions\r\n): HydrationRenderer\r\n\r\n// implementation\r\nfunction baseCreateRenderer(\r\n  options: RendererOptions,\r\n  createHydrationFns?: typeof createHydrationFunctions\r\n): any {\r\n  // compile-time feature flags check\r\n  if (__ESM_BUNDLER__ && !__TEST__) {\r\n    initFeatureFlags()\r\n  }\r\n\r\n  const target = getGlobalThis()\r\n  target.__VUE__ = true\r\n  if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n    setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target)\r\n  }\r\n\r\n  const {\r\n    insert: hostInsert,\r\n    remove: hostRemove,\r\n    patchProp: hostPatchProp,\r\n    createElement: hostCreateElement,\r\n    createText: hostCreateText,\r\n    createComment: hostCreateComment,\r\n    setText: hostSetText,\r\n    setElementText: hostSetElementText,\r\n    parentNode: hostParentNode,\r\n    nextSibling: hostNextSibling,\r\n    setScopeId: hostSetScopeId = NOOP,\r\n    cloneNode: hostCloneNode,\r\n    insertStaticContent: hostInsertStaticContent\r\n  } = options\r\n\r\n  // Note: functions inside this closure should use `const xxx = () => {}`\r\n  // style in order to prevent being inlined by minifiers.\r\n  const patch: PatchFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor = null,\r\n    parentComponent = null,\r\n    parentSuspense = null,\r\n    isSVG = false,\r\n    slotScopeIds = null,\r\n    optimized = __DEV__ && isHmrUpdating ? false : !!n2.dynamicChildren\r\n  ) => {\r\n    if (n1 === n2) {\r\n      return\r\n    }\r\n\r\n    // patching & not same type, unmount old tree\r\n    if (n1 && !isSameVNodeType(n1, n2)) {\r\n      anchor = getNextHostNode(n1)\r\n      unmount(n1, parentComponent, parentSuspense, true)\r\n      n1 = null\r\n    }\r\n\r\n    if (n2.patchFlag === PatchFlags.BAIL) {\r\n      optimized = false\r\n      n2.dynamicChildren = null\r\n    }\r\n\r\n    const { type, ref, shapeFlag } = n2\r\n    switch (type) {\r\n      case Text:\r\n        processText(n1, n2, container, anchor)\r\n        break\r\n      case Comment:\r\n        processCommentNode(n1, n2, container, anchor)\r\n        break\r\n      case Static:\r\n        if (n1 == null) {\r\n          mountStaticNode(n2, container, anchor, isSVG)\r\n        } else if (__DEV__) {\r\n          patchStaticNode(n1, n2, container, isSVG)\r\n        }\r\n        break\r\n      case Fragment:\r\n        processFragment(\r\n          n1,\r\n          n2,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        break\r\n      default:\r\n        if (shapeFlag & ShapeFlags.ELEMENT) {\r\n          processElement(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else if (shapeFlag & ShapeFlags.COMPONENT) {\r\n          processComponent(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else if (shapeFlag & ShapeFlags.TELEPORT) {\r\n          ;(type as typeof TeleportImpl).process(\r\n            n1 as TeleportVNode,\r\n            n2 as TeleportVNode,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized,\r\n            internals\r\n          )\r\n        } else if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n          ;(type as typeof SuspenseImpl).process(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized,\r\n            internals\r\n          )\r\n        } else if (__DEV__) {\r\n          warn('Invalid VNode type:', type, `(${typeof type})`)\r\n        }\r\n    }\r\n\r\n    // set ref\r\n    if (ref != null && parentComponent) {\r\n      setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2)\r\n    }\r\n  }\r\n\r\n  const processText: ProcessTextOrCommentFn = (n1, n2, container, anchor) => {\r\n    if (n1 == null) {\r\n      hostInsert(\r\n        (n2.el = hostCreateText(n2.children as string)),\r\n        container,\r\n        anchor\r\n      )\r\n    } else {\r\n      const el = (n2.el = n1.el!)\r\n      if (n2.children !== n1.children) {\r\n        hostSetText(el, n2.children as string)\r\n      }\r\n    }\r\n  }\r\n\r\n  const processCommentNode: ProcessTextOrCommentFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor\r\n  ) => {\r\n    if (n1 == null) {\r\n      hostInsert(\r\n        (n2.el = hostCreateComment((n2.children as string) || '')),\r\n        container,\r\n        anchor\r\n      )\r\n    } else {\r\n      // there's no support for dynamic comments\r\n      n2.el = n1.el\r\n    }\r\n  }\r\n\r\n  const mountStaticNode = (\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    isSVG: boolean\r\n  ) => {\r\n    // static nodes are only present when used with compiler-dom/runtime-dom\r\n    // which guarantees presence of hostInsertStaticContent.\r\n    ;[n2.el, n2.anchor] = hostInsertStaticContent!(\r\n      n2.children as string,\r\n      container,\r\n      anchor,\r\n      isSVG,\r\n      n2.el,\r\n      n2.anchor\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Dev / HMR only\r\n   */\r\n  const patchStaticNode = (\r\n    n1: VNode,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    isSVG: boolean\r\n  ) => {\r\n    // static nodes are only patched during dev for HMR\r\n    if (n2.children !== n1.children) {\r\n      const anchor = hostNextSibling(n1.anchor!)\r\n      // remove existing\r\n      removeStaticNode(n1)\r\n      // insert new\r\n      ;[n2.el, n2.anchor] = hostInsertStaticContent!(\r\n        n2.children as string,\r\n        container,\r\n        anchor,\r\n        isSVG\r\n      )\r\n    } else {\r\n      n2.el = n1.el\r\n      n2.anchor = n1.anchor\r\n    }\r\n  }\r\n\r\n  const moveStaticNode = (\r\n    { el, anchor }: VNode,\r\n    container: RendererElement,\r\n    nextSibling: RendererNode | null\r\n  ) => {\r\n    let next\r\n    while (el && el !== anchor) {\r\n      next = hostNextSibling(el)\r\n      hostInsert(el, container, nextSibling)\r\n      el = next\r\n    }\r\n    hostInsert(anchor!, container, nextSibling)\r\n  }\r\n\r\n  const removeStaticNode = ({ el, anchor }: VNode) => {\r\n    let next\r\n    while (el && el !== anchor) {\r\n      next = hostNextSibling(el)\r\n      hostRemove(el)\r\n      el = next\r\n    }\r\n    hostRemove(anchor!)\r\n  }\r\n\r\n  const processElement = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    isSVG = isSVG || (n2.type as string) === 'svg'\r\n    if (n1 == null) {\r\n      mountElement(\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    } else {\r\n      patchElement(\r\n        n1,\r\n        n2,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    }\r\n  }\r\n\r\n  const mountElement = (\r\n    vnode: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    let el: RendererElement\r\n    let vnodeHook: VNodeHook | undefined | null\r\n    const { type, props, shapeFlag, transition, patchFlag, dirs } = vnode\r\n    if (\r\n      !__DEV__ &&\r\n      vnode.el &&\r\n      hostCloneNode !== undefined &&\r\n      patchFlag === PatchFlags.HOISTED\r\n    ) {\r\n      // If a vnode has non-null el, it means it's being reused.\r\n      // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n      // exactly the same, and we can simply do a clone here.\r\n      // only do this in production since cloned trees cannot be HMR updated.\r\n      el = vnode.el = hostCloneNode(vnode.el)\r\n    } else {\r\n      el = vnode.el = hostCreateElement(\r\n        vnode.type as string,\r\n        isSVG,\r\n        props && props.is,\r\n        props\r\n      )\r\n\r\n      // mount children first, since some props may rely on child content\r\n      // being already rendered, e.g. `<select value>`\r\n      if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n        hostSetElementText(el, vnode.children as string)\r\n      } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        mountChildren(\r\n          vnode.children as VNodeArrayChildren,\r\n          el,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG && type !== 'foreignObject',\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      }\r\n\r\n      if (dirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'created')\r\n      }\r\n      // props\r\n      if (props) {\r\n        for (const key in props) {\r\n          if (key !== 'value' && !isReservedProp(key)) {\r\n            hostPatchProp(\r\n              el,\r\n              key,\r\n              null,\r\n              props[key],\r\n              isSVG,\r\n              vnode.children as VNode[],\r\n              parentComponent,\r\n              parentSuspense,\r\n              unmountChildren\r\n            )\r\n          }\r\n        }\r\n        /**\r\n         * Special case for setting value on DOM elements:\r\n         * - it can be order-sensitive (e.g. should be set *after* min/max, #2325, #4024)\r\n         * - it needs to be forced (#1471)\r\n         * #2353 proposes adding another renderer option to configure this, but\r\n         * the properties affects are so finite it is worth special casing it\r\n         * here to reduce the complexity. (Special casing it also should not\r\n         * affect non-DOM renderers)\r\n         */\r\n        if ('value' in props) {\r\n          hostPatchProp(el, 'value', null, props.value)\r\n        }\r\n        if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n          invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n        }\r\n      }\r\n      // scopeId\r\n      setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent)\r\n    }\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      Object.defineProperty(el, '__vnode', {\r\n        value: vnode,\r\n        enumerable: false\r\n      })\r\n      Object.defineProperty(el, '__vueParentComponent', {\r\n        value: parentComponent,\r\n        enumerable: false\r\n      })\r\n    }\r\n    if (dirs) {\r\n      invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount')\r\n    }\r\n    // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n    // #1689 For inside suspense + suspense resolved case, just call it\r\n    const needCallTransitionHooks =\r\n      (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n      transition &&\r\n      !transition.persisted\r\n    if (needCallTransitionHooks) {\r\n      transition!.beforeEnter(el)\r\n    }\r\n    hostInsert(el, container, anchor)\r\n    if (\r\n      (vnodeHook = props && props.onVnodeMounted) ||\r\n      needCallTransitionHooks ||\r\n      dirs\r\n    ) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n        needCallTransitionHooks && transition!.enter(el)\r\n        dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  const setScopeId = (\r\n    el: RendererElement,\r\n    vnode: VNode,\r\n    scopeId: string | null,\r\n    slotScopeIds: string[] | null,\r\n    parentComponent: ComponentInternalInstance | null\r\n  ) => {\r\n    if (scopeId) {\r\n      hostSetScopeId(el, scopeId)\r\n    }\r\n    if (slotScopeIds) {\r\n      for (let i = 0; i < slotScopeIds.length; i++) {\r\n        hostSetScopeId(el, slotScopeIds[i])\r\n      }\r\n    }\r\n    if (parentComponent) {\r\n      let subTree = parentComponent.subTree\r\n      if (\r\n        __DEV__ &&\r\n        subTree.patchFlag > 0 &&\r\n        subTree.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT\r\n      ) {\r\n        subTree =\r\n          filterSingleRoot(subTree.children as VNodeArrayChildren) || subTree\r\n      }\r\n      if (vnode === subTree) {\r\n        const parentVNode = parentComponent.vnode\r\n        setScopeId(\r\n          el,\r\n          parentVNode,\r\n          parentVNode.scopeId,\r\n          parentVNode.slotScopeIds,\r\n          parentComponent.parent\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const mountChildren: MountChildrenFn = (\r\n    children,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized,\r\n    start = 0\r\n  ) => {\r\n    for (let i = start; i < children.length; i++) {\r\n      const child = (children[i] = optimized\r\n        ? cloneIfMounted(children[i] as VNode)\r\n        : normalizeVNode(children[i]))\r\n      patch(\r\n        null,\r\n        child,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    }\r\n  }\r\n\r\n  const patchElement = (\r\n    n1: VNode,\r\n    n2: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    const el = (n2.el = n1.el!)\r\n    let { patchFlag, dynamicChildren, dirs } = n2\r\n    // #1426 take the old vnode's patch flag into account since user may clone a\r\n    // compiler-generated vnode, which de-opts to FULL_PROPS\r\n    patchFlag |= n1.patchFlag & PatchFlags.FULL_PROPS\r\n    const oldProps = n1.props || EMPTY_OBJ\r\n    const newProps = n2.props || EMPTY_OBJ\r\n    let vnodeHook: VNodeHook | undefined | null\r\n\r\n    // disable recurse in beforeUpdate hooks\r\n    parentComponent && toggleRecurse(parentComponent, false)\r\n    if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n      invokeVNodeHook(vnodeHook, parentComponent, n2, n1)\r\n    }\r\n    if (dirs) {\r\n      invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate')\r\n    }\r\n    parentComponent && toggleRecurse(parentComponent, true)\r\n\r\n    if (__DEV__ && isHmrUpdating) {\r\n      // HMR updated, force full diff\r\n      patchFlag = 0\r\n      optimized = false\r\n      dynamicChildren = null\r\n    }\r\n\r\n    const areChildrenSVG = isSVG && n2.type !== 'foreignObject'\r\n    if (dynamicChildren) {\r\n      patchBlockChildren(\r\n        n1.dynamicChildren!,\r\n        dynamicChildren,\r\n        el,\r\n        parentComponent,\r\n        parentSuspense,\r\n        areChildrenSVG,\r\n        slotScopeIds\r\n      )\r\n      if (__DEV__ && parentComponent && parentComponent.type.__hmrId) {\r\n        traverseStaticChildren(n1, n2)\r\n      }\r\n    } else if (!optimized) {\r\n      // full diff\r\n      patchChildren(\r\n        n1,\r\n        n2,\r\n        el,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        areChildrenSVG,\r\n        slotScopeIds,\r\n        false\r\n      )\r\n    }\r\n\r\n    if (patchFlag > 0) {\r\n      // the presence of a patchFlag means this element's render code was\r\n      // generated by the compiler and can take the fast path.\r\n      // in this path old node and new node are guaranteed to have the same shape\r\n      // (i.e. at the exact same position in the source template)\r\n      if (patchFlag & PatchFlags.FULL_PROPS) {\r\n        // element props contain dynamic keys, full diff needed\r\n        patchProps(\r\n          el,\r\n          n2,\r\n          oldProps,\r\n          newProps,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG\r\n        )\r\n      } else {\r\n        // class\r\n        // this flag is matched when the element has dynamic class bindings.\r\n        if (patchFlag & PatchFlags.CLASS) {\r\n          if (oldProps.class !== newProps.class) {\r\n            hostPatchProp(el, 'class', null, newProps.class, isSVG)\r\n          }\r\n        }\r\n\r\n        // style\r\n        // this flag is matched when the element has dynamic style bindings\r\n        if (patchFlag & PatchFlags.STYLE) {\r\n          hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG)\r\n        }\r\n\r\n        // props\r\n        // This flag is matched when the element has dynamic prop/attr bindings\r\n        // other than class and style. The keys of dynamic prop/attrs are saved for\r\n        // faster iteration.\r\n        // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n        // bail out and go through a full diff because we need to unset the old key\r\n        if (patchFlag & PatchFlags.PROPS) {\r\n          // if the flag is present then dynamicProps must be non-null\r\n          const propsToUpdate = n2.dynamicProps!\r\n          for (let i = 0; i < propsToUpdate.length; i++) {\r\n            const key = propsToUpdate[i]\r\n            const prev = oldProps[key]\r\n            const next = newProps[key]\r\n            // #1471 force patch value\r\n            if (next !== prev || key === 'value') {\r\n              hostPatchProp(\r\n                el,\r\n                key,\r\n                prev,\r\n                next,\r\n                isSVG,\r\n                n1.children as VNode[],\r\n                parentComponent,\r\n                parentSuspense,\r\n                unmountChildren\r\n              )\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // text\r\n      // This flag is matched when the element has only dynamic text children.\r\n      if (patchFlag & PatchFlags.TEXT) {\r\n        if (n1.children !== n2.children) {\r\n          hostSetElementText(el, n2.children as string)\r\n        }\r\n      }\r\n    } else if (!optimized && dynamicChildren == null) {\r\n      // unoptimized, full diff\r\n      patchProps(\r\n        el,\r\n        n2,\r\n        oldProps,\r\n        newProps,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG\r\n      )\r\n    }\r\n\r\n    if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1)\r\n        dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  // The fast path for blocks.\r\n  const patchBlockChildren: PatchBlockChildrenFn = (\r\n    oldChildren,\r\n    newChildren,\r\n    fallbackContainer,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    slotScopeIds\r\n  ) => {\r\n    for (let i = 0; i < newChildren.length; i++) {\r\n      const oldVNode = oldChildren[i]\r\n      const newVNode = newChildren[i]\r\n      // Determine the container (parent element) for the patch.\r\n      const container =\r\n        // oldVNode may be an errored async setup() component inside Suspense\r\n        // which will not have a mounted element\r\n        oldVNode.el &&\r\n        // - In the case of a Fragment, we need to provide the actual parent\r\n        // of the Fragment itself so it can move its children.\r\n        (oldVNode.type === Fragment ||\r\n          // - In the case of different nodes, there is going to be a replacement\r\n          // which also requires the correct parent container\r\n          !isSameVNodeType(oldVNode, newVNode) ||\r\n          // - In the case of a component, it could contain anything.\r\n          oldVNode.shapeFlag & (ShapeFlags.COMPONENT | ShapeFlags.TELEPORT))\r\n          ? hostParentNode(oldVNode.el)!\r\n          : // In other cases, the parent container is not actually used so we\r\n            // just pass the block element here to avoid a DOM parentNode call.\r\n            fallbackContainer\r\n      patch(\r\n        oldVNode,\r\n        newVNode,\r\n        container,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        true\r\n      )\r\n    }\r\n  }\r\n\r\n  const patchProps = (\r\n    el: RendererElement,\r\n    vnode: VNode,\r\n    oldProps: Data,\r\n    newProps: Data,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean\r\n  ) => {\r\n    if (oldProps !== newProps) {\r\n      for (const key in newProps) {\r\n        // empty string is not valid prop\r\n        if (isReservedProp(key)) continue\r\n        const next = newProps[key]\r\n        const prev = oldProps[key]\r\n        // defer patching value\r\n        if (next !== prev && key !== 'value') {\r\n          hostPatchProp(\r\n            el,\r\n            key,\r\n            prev,\r\n            next,\r\n            isSVG,\r\n            vnode.children as VNode[],\r\n            parentComponent,\r\n            parentSuspense,\r\n            unmountChildren\r\n          )\r\n        }\r\n      }\r\n      if (oldProps !== EMPTY_OBJ) {\r\n        for (const key in oldProps) {\r\n          if (!isReservedProp(key) && !(key in newProps)) {\r\n            hostPatchProp(\r\n              el,\r\n              key,\r\n              oldProps[key],\r\n              null,\r\n              isSVG,\r\n              vnode.children as VNode[],\r\n              parentComponent,\r\n              parentSuspense,\r\n              unmountChildren\r\n            )\r\n          }\r\n        }\r\n      }\r\n      if ('value' in newProps) {\r\n        hostPatchProp(el, 'value', oldProps.value, newProps.value)\r\n      }\r\n    }\r\n  }\r\n\r\n  const processFragment = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''))!\r\n    const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''))!\r\n\r\n    let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2\r\n\r\n    if (\r\n      __DEV__ &&\r\n      // #5523 dev root fragment may inherit directives\r\n      (isHmrUpdating || patchFlag & PatchFlags.DEV_ROOT_FRAGMENT)\r\n    ) {\r\n      // HMR updated / Dev root fragment (w/ comments), force full diff\r\n      patchFlag = 0\r\n      optimized = false\r\n      dynamicChildren = null\r\n    }\r\n\r\n    // check if this is a slot fragment with :slotted scope ids\r\n    if (fragmentSlotScopeIds) {\r\n      slotScopeIds = slotScopeIds\r\n        ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n        : fragmentSlotScopeIds\r\n    }\r\n\r\n    if (n1 == null) {\r\n      hostInsert(fragmentStartAnchor, container, anchor)\r\n      hostInsert(fragmentEndAnchor, container, anchor)\r\n      // a fragment can only have array children\r\n      // since they are either generated by the compiler, or implicitly created\r\n      // from arrays.\r\n      mountChildren(\r\n        n2.children as VNodeArrayChildren,\r\n        container,\r\n        fragmentEndAnchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    } else {\r\n      if (\r\n        patchFlag > 0 &&\r\n        patchFlag & PatchFlags.STABLE_FRAGMENT &&\r\n        dynamicChildren &&\r\n        // #2715 the previous fragment could've been a BAILed one as a result\r\n        // of renderSlot() with no valid children\r\n        n1.dynamicChildren\r\n      ) {\r\n        // a stable fragment (template root or <template v-for>) doesn't need to\r\n        // patch children order, but it may contain dynamicChildren.\r\n        patchBlockChildren(\r\n          n1.dynamicChildren,\r\n          dynamicChildren,\r\n          container,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds\r\n        )\r\n        if (__DEV__ && parentComponent && parentComponent.type.__hmrId) {\r\n          traverseStaticChildren(n1, n2)\r\n        } else if (\r\n          // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n          //  get moved around. Make sure all root level vnodes inherit el.\r\n          // #2134 or if it's a component root, it may also get moved around\r\n          // as the component is being moved.\r\n          n2.key != null ||\r\n          (parentComponent && n2 === parentComponent.subTree)\r\n        ) {\r\n          traverseStaticChildren(n1, n2, true /* shallow */)\r\n        }\r\n      } else {\r\n        // keyed / unkeyed, or manual fragments.\r\n        // for keyed & unkeyed, since they are compiler generated from v-for,\r\n        // each child is guaranteed to be a block so the fragment will never\r\n        // have dynamicChildren.\r\n        patchChildren(\r\n          n1,\r\n          n2,\r\n          container,\r\n          fragmentEndAnchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const processComponent = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    n2.slotScopeIds = slotScopeIds\r\n    if (n1 == null) {\r\n      if (n2.shapeFlag & ShapeFlags.COMPONENT_KEPT_ALIVE) {\r\n        ;(parentComponent!.ctx as KeepAliveContext).activate(\r\n          n2,\r\n          container,\r\n          anchor,\r\n          isSVG,\r\n          optimized\r\n        )\r\n      } else {\r\n        mountComponent(\r\n          n2,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          optimized\r\n        )\r\n      }\r\n    } else {\r\n      updateComponent(n1, n2, optimized)\r\n    }\r\n  }\r\n\r\n  const mountComponent: MountComponentFn = (\r\n    initialVNode,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    optimized\r\n  ) => {\r\n    // 2.x compat may pre-create the component instance before actually\r\n    // mounting\r\n    const compatMountInstance =\r\n      __COMPAT__ && initialVNode.isCompatRoot && initialVNode.component\r\n    const instance: ComponentInternalInstance =\r\n      compatMountInstance ||\r\n      (initialVNode.component = createComponentInstance(\r\n        initialVNode,\r\n        parentComponent,\r\n        parentSuspense\r\n      ))\r\n\r\n    if (__DEV__ && instance.type.__hmrId) {\r\n      registerHMR(instance)\r\n    }\r\n\r\n    if (__DEV__) {\r\n      pushWarningContext(initialVNode)\r\n      startMeasure(instance, `mount`)\r\n    }\r\n\r\n    // inject renderer internals for keepAlive\r\n    if (isKeepAlive(initialVNode)) {\r\n      ;(instance.ctx as KeepAliveContext).renderer = internals\r\n    }\r\n\r\n    // resolve props and slots for setup context\r\n    if (!(__COMPAT__ && compatMountInstance)) {\r\n      if (__DEV__) {\r\n        startMeasure(instance, `init`)\r\n      }\r\n      setupComponent(instance)\r\n      if (__DEV__) {\r\n        endMeasure(instance, `init`)\r\n      }\r\n    }\r\n\r\n    // setup() is async. This component relies on async logic to be resolved\r\n    // before proceeding\r\n    if (__FEATURE_SUSPENSE__ && instance.asyncDep) {\r\n      parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect)\r\n\r\n      // Give it a placeholder if this is not hydration\r\n      // TODO handle self-defined fallback\r\n      if (!initialVNode.el) {\r\n        const placeholder = (instance.subTree = createVNode(Comment))\r\n        processCommentNode(null, placeholder, container!, anchor)\r\n      }\r\n      return\r\n    }\r\n\r\n    setupRenderEffect(\r\n      instance,\r\n      initialVNode,\r\n      container,\r\n      anchor,\r\n      parentSuspense,\r\n      isSVG,\r\n      optimized\r\n    )\r\n\r\n    if (__DEV__) {\r\n      popWarningContext()\r\n      endMeasure(instance, `mount`)\r\n    }\r\n  }\r\n\r\n  const updateComponent = (n1: VNode, n2: VNode, optimized: boolean) => {\r\n    const instance = (n2.component = n1.component)!\r\n    if (shouldUpdateComponent(n1, n2, optimized)) {\r\n      if (\r\n        __FEATURE_SUSPENSE__ &&\r\n        instance.asyncDep &&\r\n        !instance.asyncResolved\r\n      ) {\r\n        // async & still pending - just update props and slots\r\n        // since the component's reactive effect for render isn't set-up yet\r\n        if (__DEV__) {\r\n          pushWarningContext(n2)\r\n        }\r\n        updateComponentPreRender(instance, n2, optimized)\r\n        if (__DEV__) {\r\n          popWarningContext()\r\n        }\r\n        return\r\n      } else {\r\n        // normal update\r\n        instance.next = n2\r\n        // in case the child component is also queued, remove it to avoid\r\n        // double updating the same child component in the same flush.\r\n        invalidateJob(instance.update)\r\n        // instance.update is the reactive effect.\r\n        instance.update()\r\n      }\r\n    } else {\r\n      // no update needed. just copy over properties\r\n      n2.el = n1.el\r\n      instance.vnode = n2\r\n    }\r\n  }\r\n\r\n  const setupRenderEffect: SetupRenderEffectFn = (\r\n    instance,\r\n    initialVNode,\r\n    container,\r\n    anchor,\r\n    parentSuspense,\r\n    isSVG,\r\n    optimized\r\n  ) => {\r\n    const componentUpdateFn = () => {\r\n      if (!instance.isMounted) {\r\n        let vnodeHook: VNodeHook | null | undefined\r\n        const { el, props } = initialVNode\r\n        const { bm, m, parent } = instance\r\n        const isAsyncWrapperVNode = isAsyncWrapper(initialVNode)\r\n\r\n        toggleRecurse(instance, false)\r\n        // beforeMount hook\r\n        if (bm) {\r\n          invokeArrayFns(bm)\r\n        }\r\n        // onVnodeBeforeMount\r\n        if (\r\n          !isAsyncWrapperVNode &&\r\n          (vnodeHook = props && props.onVnodeBeforeMount)\r\n        ) {\r\n          invokeVNodeHook(vnodeHook, parent, initialVNode)\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          instance.emit('hook:beforeMount')\r\n        }\r\n        toggleRecurse(instance, true)\r\n\r\n        if (el && hydrateNode) {\r\n          // vnode has adopted host node - perform hydration instead of mount.\r\n          const hydrateSubTree = () => {\r\n            if (__DEV__) {\r\n              startMeasure(instance, `render`)\r\n            }\r\n            instance.subTree = renderComponentRoot(instance)\r\n            if (__DEV__) {\r\n              endMeasure(instance, `render`)\r\n            }\r\n            if (__DEV__) {\r\n              startMeasure(instance, `hydrate`)\r\n            }\r\n            hydrateNode!(\r\n              el as Node,\r\n              instance.subTree,\r\n              instance,\r\n              parentSuspense,\r\n              null\r\n            )\r\n            if (__DEV__) {\r\n              endMeasure(instance, `hydrate`)\r\n            }\r\n          }\r\n\r\n          if (isAsyncWrapperVNode) {\r\n            ;(initialVNode.type as ComponentOptions).__asyncLoader!().then(\r\n              // note: we are moving the render call into an async callback,\r\n              // which means it won't track dependencies - but it's ok because\r\n              // a server-rendered async wrapper is already in resolved state\r\n              // and it will never need to change.\r\n              () => !instance.isUnmounted && hydrateSubTree()\r\n            )\r\n          } else {\r\n            hydrateSubTree()\r\n          }\r\n        } else {\r\n          if (__DEV__) {\r\n            startMeasure(instance, `render`)\r\n          }\r\n          const subTree = (instance.subTree = renderComponentRoot(instance))\r\n          if (__DEV__) {\r\n            endMeasure(instance, `render`)\r\n          }\r\n          if (__DEV__) {\r\n            startMeasure(instance, `patch`)\r\n          }\r\n          patch(\r\n            null,\r\n            subTree,\r\n            container,\r\n            anchor,\r\n            instance,\r\n            parentSuspense,\r\n            isSVG\r\n          )\r\n          if (__DEV__) {\r\n            endMeasure(instance, `patch`)\r\n          }\r\n          initialVNode.el = subTree.el\r\n        }\r\n        // mounted hook\r\n        if (m) {\r\n          queuePostRenderEffect(m, parentSuspense)\r\n        }\r\n        // onVnodeMounted\r\n        if (\r\n          !isAsyncWrapperVNode &&\r\n          (vnodeHook = props && props.onVnodeMounted)\r\n        ) {\r\n          const scopedInitialVNode = initialVNode\r\n          queuePostRenderEffect(\r\n            () => invokeVNodeHook(vnodeHook!, parent, scopedInitialVNode),\r\n            parentSuspense\r\n          )\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          queuePostRenderEffect(\r\n            () => instance.emit('hook:mounted'),\r\n            parentSuspense\r\n          )\r\n        }\r\n\r\n        // activated hook for keep-alive roots.\r\n        // #1742 activated hook must be accessed after first render\r\n        // since the hook may be injected by a child keep-alive\r\n        if (\r\n          initialVNode.shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE ||\r\n          (parent &&\r\n            isAsyncWrapper(parent.vnode) &&\r\n            parent.vnode.shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE)\r\n        ) {\r\n          instance.a && queuePostRenderEffect(instance.a, parentSuspense)\r\n          if (\r\n            __COMPAT__ &&\r\n            isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n          ) {\r\n            queuePostRenderEffect(\r\n              () => instance.emit('hook:activated'),\r\n              parentSuspense\r\n            )\r\n          }\r\n        }\r\n        instance.isMounted = true\r\n\r\n        if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n          devtoolsComponentAdded(instance)\r\n        }\r\n\r\n        // #2458: deference mount-only object parameters to prevent memleaks\r\n        initialVNode = container = anchor = null as any\r\n      } else {\r\n        // updateComponent\r\n        // This is triggered by mutation of component's own state (next: null)\r\n        // OR parent calling processComponent (next: VNode)\r\n        let { next, bu, u, parent, vnode } = instance\r\n        let originNext = next\r\n        let vnodeHook: VNodeHook | null | undefined\r\n        if (__DEV__) {\r\n          pushWarningContext(next || instance.vnode)\r\n        }\r\n\r\n        // Disallow component effect recursion during pre-lifecycle hooks.\r\n        toggleRecurse(instance, false)\r\n        if (next) {\r\n          next.el = vnode.el\r\n          updateComponentPreRender(instance, next, optimized)\r\n        } else {\r\n          next = vnode\r\n        }\r\n\r\n        // beforeUpdate hook\r\n        if (bu) {\r\n          invokeArrayFns(bu)\r\n        }\r\n        // onVnodeBeforeUpdate\r\n        if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n          invokeVNodeHook(vnodeHook, parent, next, vnode)\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          instance.emit('hook:beforeUpdate')\r\n        }\r\n        toggleRecurse(instance, true)\r\n\r\n        // render\r\n        if (__DEV__) {\r\n          startMeasure(instance, `render`)\r\n        }\r\n        const nextTree = renderComponentRoot(instance)\r\n        if (__DEV__) {\r\n          endMeasure(instance, `render`)\r\n        }\r\n        const prevTree = instance.subTree\r\n        instance.subTree = nextTree\r\n\r\n        if (__DEV__) {\r\n          startMeasure(instance, `patch`)\r\n        }\r\n        patch(\r\n          prevTree,\r\n          nextTree,\r\n          // parent may have changed if it's in a teleport\r\n          hostParentNode(prevTree.el!)!,\r\n          // anchor may have changed if it's in a fragment\r\n          getNextHostNode(prevTree),\r\n          instance,\r\n          parentSuspense,\r\n          isSVG\r\n        )\r\n        if (__DEV__) {\r\n          endMeasure(instance, `patch`)\r\n        }\r\n        next.el = nextTree.el\r\n        if (originNext === null) {\r\n          // self-triggered update. In case of HOC, update parent component\r\n          // vnode el. HOC is indicated by parent instance's subTree pointing\r\n          // to child component's vnode\r\n          updateHOCHostEl(instance, nextTree.el)\r\n        }\r\n        // updated hook\r\n        if (u) {\r\n          queuePostRenderEffect(u, parentSuspense)\r\n        }\r\n        // onVnodeUpdated\r\n        if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n          queuePostRenderEffect(\r\n            () => invokeVNodeHook(vnodeHook!, parent, next!, vnode),\r\n            parentSuspense\r\n          )\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          queuePostRenderEffect(\r\n            () => instance.emit('hook:updated'),\r\n            parentSuspense\r\n          )\r\n        }\r\n\r\n        if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n          devtoolsComponentUpdated(instance)\r\n        }\r\n\r\n        if (__DEV__) {\r\n          popWarningContext()\r\n        }\r\n      }\r\n    }\r\n\r\n    // create reactive effect for rendering\r\n    const effect = (instance.effect = new ReactiveEffect(\r\n      componentUpdateFn,\r\n      () => queueJob(update),\r\n      instance.scope // track it in component's effect scope\r\n    ))\r\n\r\n    const update: SchedulerJob = (instance.update = () => effect.run())\r\n    update.id = instance.uid\r\n    // allowRecurse\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    toggleRecurse(instance, true)\r\n\r\n    if (__DEV__) {\r\n      effect.onTrack = instance.rtc\r\n        ? e => invokeArrayFns(instance.rtc!, e)\r\n        : void 0\r\n      effect.onTrigger = instance.rtg\r\n        ? e => invokeArrayFns(instance.rtg!, e)\r\n        : void 0\r\n      update.ownerInstance = instance\r\n    }\r\n\r\n    update()\r\n  }\r\n\r\n  const updateComponentPreRender = (\r\n    instance: ComponentInternalInstance,\r\n    nextVNode: VNode,\r\n    optimized: boolean\r\n  ) => {\r\n    nextVNode.component = instance\r\n    const prevProps = instance.vnode.props\r\n    instance.vnode = nextVNode\r\n    instance.next = null\r\n    updateProps(instance, nextVNode.props, prevProps, optimized)\r\n    updateSlots(instance, nextVNode.children, optimized)\r\n\r\n    pauseTracking()\r\n    // props update may have triggered pre-flush watchers.\r\n    // flush them before the render update.\r\n    flushPreFlushCbs(undefined, instance.update)\r\n    resetTracking()\r\n  }\r\n\r\n  const patchChildren: PatchChildrenFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized = false\r\n  ) => {\r\n    const c1 = n1 && n1.children\r\n    const prevShapeFlag = n1 ? n1.shapeFlag : 0\r\n    const c2 = n2.children\r\n\r\n    const { patchFlag, shapeFlag } = n2\r\n    // fast path\r\n    if (patchFlag > 0) {\r\n      if (patchFlag & PatchFlags.KEYED_FRAGMENT) {\r\n        // this could be either fully-keyed or mixed (some keyed some not)\r\n        // presence of patchFlag means children are guaranteed to be arrays\r\n        patchKeyedChildren(\r\n          c1 as VNode[],\r\n          c2 as VNodeArrayChildren,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        return\r\n      } else if (patchFlag & PatchFlags.UNKEYED_FRAGMENT) {\r\n        // unkeyed\r\n        patchUnkeyedChildren(\r\n          c1 as VNode[],\r\n          c2 as VNodeArrayChildren,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        return\r\n      }\r\n    }\r\n\r\n    // children has 3 possibilities: text, array or no children.\r\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n      // text children fast path\r\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        unmountChildren(c1 as VNode[], parentComponent, parentSuspense)\r\n      }\r\n      if (c2 !== c1) {\r\n        hostSetElementText(container, c2 as string)\r\n      }\r\n    } else {\r\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        // prev children was array\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          // two arrays, cannot assume anything, do full diff\r\n          patchKeyedChildren(\r\n            c1 as VNode[],\r\n            c2 as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else {\r\n          // no new children, just unmount old\r\n          unmountChildren(c1 as VNode[], parentComponent, parentSuspense, true)\r\n        }\r\n      } else {\r\n        // prev children was text OR null\r\n        // new children is array OR null\r\n        if (prevShapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n          hostSetElementText(container, '')\r\n        }\r\n        // mount new if array\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          mountChildren(\r\n            c2 as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const patchUnkeyedChildren = (\r\n    c1: VNode[],\r\n    c2: VNodeArrayChildren,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    c1 = c1 || EMPTY_ARR\r\n    c2 = c2 || EMPTY_ARR\r\n    const oldLength = c1.length\r\n    const newLength = c2.length\r\n    const commonLength = Math.min(oldLength, newLength)\r\n    let i\r\n    for (i = 0; i < commonLength; i++) {\r\n      const nextChild = (c2[i] = optimized\r\n        ? cloneIfMounted(c2[i] as VNode)\r\n        : normalizeVNode(c2[i]))\r\n      patch(\r\n        c1[i],\r\n        nextChild,\r\n        container,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    }\r\n    if (oldLength > newLength) {\r\n      // remove old\r\n      unmountChildren(\r\n        c1,\r\n        parentComponent,\r\n        parentSuspense,\r\n        true,\r\n        false,\r\n        commonLength\r\n      )\r\n    } else {\r\n      // mount new\r\n      mountChildren(\r\n        c2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized,\r\n        commonLength\r\n      )\r\n    }\r\n  }\r\n\r\n  // can be all-keyed or mixed\r\n  const patchKeyedChildren = (\r\n    c1: VNode[],\r\n    c2: VNodeArrayChildren,\r\n    container: RendererElement,\r\n    parentAnchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    let i = 0\r\n    const l2 = c2.length\r\n    let e1 = c1.length - 1 // prev ending index\r\n    let e2 = l2 - 1 // next ending index\r\n\r\n    // 1. sync from start\r\n    // (a b) c\r\n    // (a b) d e\r\n    while (i <= e1 && i <= e2) {\r\n      const n1 = c1[i]\r\n      const n2 = (c2[i] = optimized\r\n        ? cloneIfMounted(c2[i] as VNode)\r\n        : normalizeVNode(c2[i]))\r\n      if (isSameVNodeType(n1, n2)) {\r\n        patch(\r\n          n1,\r\n          n2,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      } else {\r\n        break\r\n      }\r\n      i++\r\n    }\r\n\r\n    // 2. sync from end\r\n    // a (b c)\r\n    // d e (b c)\r\n    while (i <= e1 && i <= e2) {\r\n      const n1 = c1[e1]\r\n      const n2 = (c2[e2] = optimized\r\n        ? cloneIfMounted(c2[e2] as VNode)\r\n        : normalizeVNode(c2[e2]))\r\n      if (isSameVNodeType(n1, n2)) {\r\n        patch(\r\n          n1,\r\n          n2,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      } else {\r\n        break\r\n      }\r\n      e1--\r\n      e2--\r\n    }\r\n\r\n    // 3. common sequence + mount\r\n    // (a b)\r\n    // (a b) c\r\n    // i = 2, e1 = 1, e2 = 2\r\n    // (a b)\r\n    // c (a b)\r\n    // i = 0, e1 = -1, e2 = 0\r\n    if (i > e1) {\r\n      if (i <= e2) {\r\n        const nextPos = e2 + 1\r\n        const anchor = nextPos < l2 ? (c2[nextPos] as VNode).el : parentAnchor\r\n        while (i <= e2) {\r\n          patch(\r\n            null,\r\n            (c2[i] = optimized\r\n              ? cloneIfMounted(c2[i] as VNode)\r\n              : normalizeVNode(c2[i])),\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n          i++\r\n        }\r\n      }\r\n    }\r\n\r\n    // 4. common sequence + unmount\r\n    // (a b) c\r\n    // (a b)\r\n    // i = 2, e1 = 2, e2 = 1\r\n    // a (b c)\r\n    // (b c)\r\n    // i = 0, e1 = 0, e2 = -1\r\n    else if (i > e2) {\r\n      while (i <= e1) {\r\n        unmount(c1[i], parentComponent, parentSuspense, true)\r\n        i++\r\n      }\r\n    }\r\n\r\n    // 5. unknown sequence\r\n    // [i ... e1 + 1]: a b [c d e] f g\r\n    // [i ... e2 + 1]: a b [e d c h] f g\r\n    // i = 2, e1 = 4, e2 = 5\r\n    else {\r\n      const s1 = i // prev starting index\r\n      const s2 = i // next starting index\r\n\r\n      // 5.1 build key:index map for newChildren\r\n      const keyToNewIndexMap: Map<string | number | symbol, number> = new Map()\r\n      for (i = s2; i <= e2; i++) {\r\n        const nextChild = (c2[i] = optimized\r\n          ? cloneIfMounted(c2[i] as VNode)\r\n          : normalizeVNode(c2[i]))\r\n        if (nextChild.key != null) {\r\n          if (__DEV__ && keyToNewIndexMap.has(nextChild.key)) {\r\n            warn(\r\n              `Duplicate keys found during update:`,\r\n              JSON.stringify(nextChild.key),\r\n              `Make sure keys are unique.`\r\n            )\r\n          }\r\n          keyToNewIndexMap.set(nextChild.key, i)\r\n        }\r\n      }\r\n\r\n      // 5.2 loop through old children left to be patched and try to patch\r\n      // matching nodes & remove nodes that are no longer present\r\n      let j\r\n      let patched = 0\r\n      const toBePatched = e2 - s2 + 1\r\n      let moved = false\r\n      // used to track whether any node has moved\r\n      let maxNewIndexSoFar = 0\r\n      // works as Map<newIndex, oldIndex>\r\n      // Note that oldIndex is offset by +1\r\n      // and oldIndex = 0 is a special value indicating the new node has\r\n      // no corresponding old node.\r\n      // used for determining longest stable subsequence\r\n      const newIndexToOldIndexMap = new Array(toBePatched)\r\n      for (i = 0; i < toBePatched; i++) newIndexToOldIndexMap[i] = 0\r\n\r\n      for (i = s1; i <= e1; i++) {\r\n        const prevChild = c1[i]\r\n        if (patched >= toBePatched) {\r\n          // all new children have been patched so this can only be a removal\r\n          unmount(prevChild, parentComponent, parentSuspense, true)\r\n          continue\r\n        }\r\n        let newIndex\r\n        if (prevChild.key != null) {\r\n          newIndex = keyToNewIndexMap.get(prevChild.key)\r\n        } else {\r\n          // key-less node, try to locate a key-less node of the same type\r\n          for (j = s2; j <= e2; j++) {\r\n            if (\r\n              newIndexToOldIndexMap[j - s2] === 0 &&\r\n              isSameVNodeType(prevChild, c2[j] as VNode)\r\n            ) {\r\n              newIndex = j\r\n              break\r\n            }\r\n          }\r\n        }\r\n        if (newIndex === undefined) {\r\n          unmount(prevChild, parentComponent, parentSuspense, true)\r\n        } else {\r\n          newIndexToOldIndexMap[newIndex - s2] = i + 1\r\n          if (newIndex >= maxNewIndexSoFar) {\r\n            maxNewIndexSoFar = newIndex\r\n          } else {\r\n            moved = true\r\n          }\r\n          patch(\r\n            prevChild,\r\n            c2[newIndex] as VNode,\r\n            container,\r\n            null,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n          patched++\r\n        }\r\n      }\r\n\r\n      // 5.3 move and mount\r\n      // generate longest stable subsequence only when nodes have moved\r\n      const increasingNewIndexSequence = moved\r\n        ? getSequence(newIndexToOldIndexMap)\r\n        : EMPTY_ARR\r\n      j = increasingNewIndexSequence.length - 1\r\n      // looping backwards so that we can use last patched node as anchor\r\n      for (i = toBePatched - 1; i >= 0; i--) {\r\n        const nextIndex = s2 + i\r\n        const nextChild = c2[nextIndex] as VNode\r\n        const anchor =\r\n          nextIndex + 1 < l2 ? (c2[nextIndex + 1] as VNode).el : parentAnchor\r\n        if (newIndexToOldIndexMap[i] === 0) {\r\n          // mount new\r\n          patch(\r\n            null,\r\n            nextChild,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else if (moved) {\r\n          // move if:\r\n          // There is no stable subsequence (e.g. a reverse)\r\n          // OR current node is not among the stable sequence\r\n          if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n            move(nextChild, container, anchor, MoveType.REORDER)\r\n          } else {\r\n            j--\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const move: MoveFn = (\r\n    vnode,\r\n    container,\r\n    anchor,\r\n    moveType,\r\n    parentSuspense = null\r\n  ) => {\r\n    const { el, type, transition, children, shapeFlag } = vnode\r\n    if (shapeFlag & ShapeFlags.COMPONENT) {\r\n      move(vnode.component!.subTree, container, anchor, moveType)\r\n      return\r\n    }\r\n\r\n    if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n      vnode.suspense!.move(container, anchor, moveType)\r\n      return\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.TELEPORT) {\r\n      ;(type as typeof TeleportImpl).move(vnode, container, anchor, internals)\r\n      return\r\n    }\r\n\r\n    if (type === Fragment) {\r\n      hostInsert(el!, container, anchor)\r\n      for (let i = 0; i < (children as VNode[]).length; i++) {\r\n        move((children as VNode[])[i], container, anchor, moveType)\r\n      }\r\n      hostInsert(vnode.anchor!, container, anchor)\r\n      return\r\n    }\r\n\r\n    if (type === Static) {\r\n      moveStaticNode(vnode, container, anchor)\r\n      return\r\n    }\r\n\r\n    // single nodes\r\n    const needTransition =\r\n      moveType !== MoveType.REORDER &&\r\n      shapeFlag & ShapeFlags.ELEMENT &&\r\n      transition\r\n    if (needTransition) {\r\n      if (moveType === MoveType.ENTER) {\r\n        transition!.beforeEnter(el!)\r\n        hostInsert(el!, container, anchor)\r\n        queuePostRenderEffect(() => transition!.enter(el!), parentSuspense)\r\n      } else {\r\n        const { leave, delayLeave, afterLeave } = transition!\r\n        const remove = () => hostInsert(el!, container, anchor)\r\n        const performLeave = () => {\r\n          leave(el!, () => {\r\n            remove()\r\n            afterLeave && afterLeave()\r\n          })\r\n        }\r\n        if (delayLeave) {\r\n          delayLeave(el!, remove, performLeave)\r\n        } else {\r\n          performLeave()\r\n        }\r\n      }\r\n    } else {\r\n      hostInsert(el!, container, anchor)\r\n    }\r\n  }\r\n\r\n  const unmount: UnmountFn = (\r\n    vnode,\r\n    parentComponent,\r\n    parentSuspense,\r\n    doRemove = false,\r\n    optimized = false\r\n  ) => {\r\n    const {\r\n      type,\r\n      props,\r\n      ref,\r\n      children,\r\n      dynamicChildren,\r\n      shapeFlag,\r\n      patchFlag,\r\n      dirs\r\n    } = vnode\r\n    // unset ref\r\n    if (ref != null) {\r\n      setRef(ref, null, parentSuspense, vnode, true)\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE) {\r\n      ;(parentComponent!.ctx as KeepAliveContext).deactivate(vnode)\r\n      return\r\n    }\r\n\r\n    const shouldInvokeDirs = shapeFlag & ShapeFlags.ELEMENT && dirs\r\n    const shouldInvokeVnodeHook = !isAsyncWrapper(vnode)\r\n\r\n    let vnodeHook: VNodeHook | undefined | null\r\n    if (\r\n      shouldInvokeVnodeHook &&\r\n      (vnodeHook = props && props.onVnodeBeforeUnmount)\r\n    ) {\r\n      invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.COMPONENT) {\r\n      unmountComponent(vnode.component!, parentSuspense, doRemove)\r\n    } else {\r\n      if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n        vnode.suspense!.unmount(parentSuspense, doRemove)\r\n        return\r\n      }\r\n\r\n      if (shouldInvokeDirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount')\r\n      }\r\n\r\n      if (shapeFlag & ShapeFlags.TELEPORT) {\r\n        ;(vnode.type as typeof TeleportImpl).remove(\r\n          vnode,\r\n          parentComponent,\r\n          parentSuspense,\r\n          optimized,\r\n          internals,\r\n          doRemove\r\n        )\r\n      } else if (\r\n        dynamicChildren &&\r\n        // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n        (type !== Fragment ||\r\n          (patchFlag > 0 && patchFlag & PatchFlags.STABLE_FRAGMENT))\r\n      ) {\r\n        // fast path for block nodes: only need to unmount dynamic children.\r\n        unmountChildren(\r\n          dynamicChildren,\r\n          parentComponent,\r\n          parentSuspense,\r\n          false,\r\n          true\r\n        )\r\n      } else if (\r\n        (type === Fragment &&\r\n          patchFlag &\r\n            (PatchFlags.KEYED_FRAGMENT | PatchFlags.UNKEYED_FRAGMENT)) ||\r\n        (!optimized && shapeFlag & ShapeFlags.ARRAY_CHILDREN)\r\n      ) {\r\n        unmountChildren(children as VNode[], parentComponent, parentSuspense)\r\n      }\r\n\r\n      if (doRemove) {\r\n        remove(vnode)\r\n      }\r\n    }\r\n\r\n    if (\r\n      (shouldInvokeVnodeHook &&\r\n        (vnodeHook = props && props.onVnodeUnmounted)) ||\r\n      shouldInvokeDirs\r\n    ) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n        shouldInvokeDirs &&\r\n          invokeDirectiveHook(vnode, null, parentComponent, 'unmounted')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  const remove: RemoveFn = vnode => {\r\n    const { type, el, anchor, transition } = vnode\r\n    if (type === Fragment) {\r\n      if (\r\n        __DEV__ &&\r\n        vnode.patchFlag > 0 &&\r\n        vnode.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT &&\r\n        transition &&\r\n        !transition.persisted\r\n      ) {\r\n        ;(vnode.children as VNode[]).forEach(child => {\r\n          if (child.type === Comment) {\r\n            hostRemove(child.el!)\r\n          } else {\r\n            remove(child)\r\n          }\r\n        })\r\n      } else {\r\n        removeFragment(el!, anchor!)\r\n      }\r\n      return\r\n    }\r\n\r\n    if (type === Static) {\r\n      removeStaticNode(vnode)\r\n      return\r\n    }\r\n\r\n    const performRemove = () => {\r\n      hostRemove(el!)\r\n      if (transition && !transition.persisted && transition.afterLeave) {\r\n        transition.afterLeave()\r\n      }\r\n    }\r\n\r\n    if (\r\n      vnode.shapeFlag & ShapeFlags.ELEMENT &&\r\n      transition &&\r\n      !transition.persisted\r\n    ) {\r\n      const { leave, delayLeave } = transition\r\n      const performLeave = () => leave(el!, performRemove)\r\n      if (delayLeave) {\r\n        delayLeave(vnode.el!, performRemove, performLeave)\r\n      } else {\r\n        performLeave()\r\n      }\r\n    } else {\r\n      performRemove()\r\n    }\r\n  }\r\n\r\n  const removeFragment = (cur: RendererNode, end: RendererNode) => {\r\n    // For fragments, directly remove all contained DOM nodes.\r\n    // (fragment child nodes cannot have transition)\r\n    let next\r\n    while (cur !== end) {\r\n      next = hostNextSibling(cur)!\r\n      hostRemove(cur)\r\n      cur = next\r\n    }\r\n    hostRemove(end)\r\n  }\r\n\r\n  const unmountComponent = (\r\n    instance: ComponentInternalInstance,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    doRemove?: boolean\r\n  ) => {\r\n    if (__DEV__ && instance.type.__hmrId) {\r\n      unregisterHMR(instance)\r\n    }\r\n\r\n    const { bum, scope, update, subTree, um } = instance\r\n\r\n    // beforeUnmount hook\r\n    if (bum) {\r\n      invokeArrayFns(bum)\r\n    }\r\n\r\n    if (\r\n      __COMPAT__ &&\r\n      isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n    ) {\r\n      instance.emit('hook:beforeDestroy')\r\n    }\r\n\r\n    // stop effects in component scope\r\n    scope.stop()\r\n\r\n    // update may be null if a component is unmounted before its async\r\n    // setup has resolved.\r\n    if (update) {\r\n      // so that scheduler will no longer invoke it\r\n      update.active = false\r\n      unmount(subTree, instance, parentSuspense, doRemove)\r\n    }\r\n    // unmounted hook\r\n    if (um) {\r\n      queuePostRenderEffect(um, parentSuspense)\r\n    }\r\n    if (\r\n      __COMPAT__ &&\r\n      isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n    ) {\r\n      queuePostRenderEffect(\r\n        () => instance.emit('hook:destroyed'),\r\n        parentSuspense\r\n      )\r\n    }\r\n    queuePostRenderEffect(() => {\r\n      instance.isUnmounted = true\r\n    }, parentSuspense)\r\n\r\n    // A component with async dep inside a pending suspense is unmounted before\r\n    // its async dep resolves. This should remove the dep from the suspense, and\r\n    // cause the suspense to resolve immediately if that was the last dep.\r\n    if (\r\n      __FEATURE_SUSPENSE__ &&\r\n      parentSuspense &&\r\n      parentSuspense.pendingBranch &&\r\n      !parentSuspense.isUnmounted &&\r\n      instance.asyncDep &&\r\n      !instance.asyncResolved &&\r\n      instance.suspenseId === parentSuspense.pendingId\r\n    ) {\r\n      parentSuspense.deps--\r\n      if (parentSuspense.deps === 0) {\r\n        parentSuspense.resolve()\r\n      }\r\n    }\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      devtoolsComponentRemoved(instance)\r\n    }\r\n  }\r\n\r\n  const unmountChildren: UnmountChildrenFn = (\r\n    children,\r\n    parentComponent,\r\n    parentSuspense,\r\n    doRemove = false,\r\n    optimized = false,\r\n    start = 0\r\n  ) => {\r\n    for (let i = start; i < children.length; i++) {\r\n      unmount(children[i], parentComponent, parentSuspense, doRemove, optimized)\r\n    }\r\n  }\r\n\r\n  const getNextHostNode: NextFn = vnode => {\r\n    if (vnode.shapeFlag & ShapeFlags.COMPONENT) {\r\n      return getNextHostNode(vnode.component!.subTree)\r\n    }\r\n    if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n      return vnode.suspense!.next()\r\n    }\r\n    return hostNextSibling((vnode.anchor || vnode.el)!)\r\n  }\r\n\r\n  const render: RootRenderFunction = (vnode, container, isSVG) => {\r\n    if (vnode == null) {\r\n      if (container._vnode) {\r\n        unmount(container._vnode, null, null, true)\r\n      }\r\n    } else {\r\n      patch(container._vnode || null, vnode, container, null, null, null, isSVG)\r\n    }\r\n    flushPostFlushCbs()\r\n    container._vnode = vnode\r\n  }\r\n\r\n  const internals: RendererInternals = {\r\n    p: patch,\r\n    um: unmount,\r\n    m: move,\r\n    r: remove,\r\n    mt: mountComponent,\r\n    mc: mountChildren,\r\n    pc: patchChildren,\r\n    pbc: patchBlockChildren,\r\n    n: getNextHostNode,\r\n    o: options\r\n  }\r\n\r\n  let hydrate: ReturnType<typeof createHydrationFunctions>[0] | undefined\r\n  let hydrateNode: ReturnType<typeof createHydrationFunctions>[1] | undefined\r\n  if (createHydrationFns) {\r\n    ;[hydrate, hydrateNode] = createHydrationFns(\r\n      internals as RendererInternals<Node, Element>\r\n    )\r\n  }\r\n\r\n  return {\r\n    render,\r\n    hydrate,\r\n    createApp: createAppAPI(render, hydrate)\r\n  }\r\n}\r\n\r\nfunction toggleRecurse(\r\n  { effect, update }: ComponentInternalInstance,\r\n  allowed: boolean\r\n) {\r\n  effect.allowRecurse = update.allowRecurse = allowed\r\n}\r\n\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always be moved. Therefore, in order to ensure correct move\r\n * position, el should be inherited from previous nodes.\r\n */\r\nexport function traverseStaticChildren(n1: VNode, n2: VNode, shallow = false) {\r\n  const ch1 = n1.children\r\n  const ch2 = n2.children\r\n  if (isArray(ch1) && isArray(ch2)) {\r\n    for (let i = 0; i < ch1.length; i++) {\r\n      // this is only called in the optimized path so array children are\r\n      // guaranteed to be vnodes\r\n      const c1 = ch1[i] as VNode\r\n      let c2 = ch2[i] as VNode\r\n      if (c2.shapeFlag & ShapeFlags.ELEMENT && !c2.dynamicChildren) {\r\n        if (c2.patchFlag <= 0 || c2.patchFlag === PatchFlags.HYDRATE_EVENTS) {\r\n          c2 = ch2[i] = cloneIfMounted(ch2[i] as VNode)\r\n          c2.el = c1.el\r\n        }\r\n        if (!shallow) traverseStaticChildren(c1, c2)\r\n      }\r\n      // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n      // would have received .el during block patch)\r\n      if (__DEV__ && c2.type === Comment && !c2.el) {\r\n        c2.el = c1.el\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr: number[]): number[] {\r\n  const p = arr.slice()\r\n  const result = [0]\r\n  let i, j, u, v, c\r\n  const len = arr.length\r\n  for (i = 0; i < len; i++) {\r\n    const arrI = arr[i]\r\n    if (arrI !== 0) {\r\n      j = result[result.length - 1]\r\n      if (arr[j] < arrI) {\r\n        p[i] = j\r\n        result.push(i)\r\n        continue\r\n      }\r\n      u = 0\r\n      v = result.length - 1\r\n      while (u < v) {\r\n        c = (u + v) >> 1\r\n        if (arr[result[c]] < arrI) {\r\n          u = c + 1\r\n        } else {\r\n          v = c\r\n        }\r\n      }\r\n      if (arrI < arr[result[u]]) {\r\n        if (u > 0) {\r\n          p[i] = result[u - 1]\r\n        }\r\n        result[u] = i\r\n      }\r\n    }\r\n  }\r\n  u = result.length\r\n  v = result[u - 1]\r\n  while (u-- > 0) {\r\n    result[u] = v\r\n    v = p[v]\r\n  }\r\n  return result\r\n}\r\n","import { ComponentInternalInstance } from '../component'\r\nimport { SuspenseBoundary } from './Suspense'\r\nimport {\r\n  RendererInternals,\r\n  MoveType,\r\n  RendererElement,\r\n  RendererNode,\r\n  RendererOptions,\r\n  traverseStaticChildren\r\n} from '../renderer'\r\nimport { VNode, VNodeArrayChildren, VNodeProps } from '../vnode'\r\nimport { isString, ShapeFlags } from '@vue/shared'\r\nimport { warn } from '../warning'\r\nimport { isHmrUpdating } from '../hmr'\r\n\r\nexport type TeleportVNode = VNode<RendererNode, RendererElement, TeleportProps>\r\n\r\nexport interface TeleportProps {\r\n  to: string | RendererElement | null | undefined\r\n  disabled?: boolean\r\n}\r\n\r\nexport const isTeleport = (type: any): boolean => type.__isTeleport\r\n\r\nconst isTeleportDisabled = (props: VNode['props']): boolean =>\r\n  props && (props.disabled || props.disabled === '')\r\n\r\nconst isTargetSVG = (target: RendererElement): boolean =>\r\n  typeof SVGElement !== 'undefined' && target instanceof SVGElement\r\n\r\nconst resolveTarget = <T = RendererElement>(\r\n  props: TeleportProps | null,\r\n  select: RendererOptions['querySelector']\r\n): T | null => {\r\n  const targetSelector = props && props.to\r\n  if (isString(targetSelector)) {\r\n    if (!select) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Current renderer does not support string target for Teleports. ` +\r\n            `(missing querySelector renderer option)`\r\n        )\r\n      return null\r\n    } else {\r\n      const target = select(targetSelector)\r\n      if (!target) {\r\n        __DEV__ &&\r\n          warn(\r\n            `Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n              `Note the target element must exist before the component is mounted - ` +\r\n              `i.e. the target cannot be rendered by the component itself, and ` +\r\n              `ideally should be outside of the entire Vue component tree.`\r\n          )\r\n      }\r\n      return target as any\r\n    }\r\n  } else {\r\n    if (__DEV__ && !targetSelector && !isTeleportDisabled(props)) {\r\n      warn(`Invalid Teleport target: ${targetSelector}`)\r\n    }\r\n    return targetSelector as any\r\n  }\r\n}\r\n\r\nexport const TeleportImpl = {\r\n  __isTeleport: true,\r\n  process(\r\n    n1: TeleportVNode | null,\r\n    n2: TeleportVNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n    internals: RendererInternals\r\n  ) {\r\n    const {\r\n      mc: mountChildren,\r\n      pc: patchChildren,\r\n      pbc: patchBlockChildren,\r\n      o: { insert, querySelector, createText, createComment }\r\n    } = internals\r\n\r\n    const disabled = isTeleportDisabled(n2.props)\r\n    let { shapeFlag, children, dynamicChildren } = n2\r\n\r\n    // #3302\r\n    // HMR updated, force full diff\r\n    if (__DEV__ && isHmrUpdating) {\r\n      optimized = false\r\n      dynamicChildren = null\r\n    }\r\n\r\n    if (n1 == null) {\r\n      // insert anchors in the main view\r\n      const placeholder = (n2.el = __DEV__\r\n        ? createComment('teleport start')\r\n        : createText(''))\r\n      const mainAnchor = (n2.anchor = __DEV__\r\n        ? createComment('teleport end')\r\n        : createText(''))\r\n      insert(placeholder, container, anchor)\r\n      insert(mainAnchor, container, anchor)\r\n      const target = (n2.target = resolveTarget(n2.props, querySelector))\r\n      const targetAnchor = (n2.targetAnchor = createText(''))\r\n      if (target) {\r\n        insert(targetAnchor, target)\r\n        // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n        isSVG = isSVG || isTargetSVG(target)\r\n      } else if (__DEV__ && !disabled) {\r\n        warn('Invalid Teleport target on mount:', target, `(${typeof target})`)\r\n      }\r\n\r\n      const mount = (container: RendererElement, anchor: RendererNode) => {\r\n        // Teleport *always* has Array children. This is enforced in both the\r\n        // compiler and vnode children normalization.\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          mountChildren(\r\n            children as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        }\r\n      }\r\n\r\n      if (disabled) {\r\n        mount(container, mainAnchor)\r\n      } else if (target) {\r\n        mount(target, targetAnchor)\r\n      }\r\n    } else {\r\n      // update content\r\n      n2.el = n1.el\r\n      const mainAnchor = (n2.anchor = n1.anchor)!\r\n      const target = (n2.target = n1.target)!\r\n      const targetAnchor = (n2.targetAnchor = n1.targetAnchor)!\r\n      const wasDisabled = isTeleportDisabled(n1.props)\r\n      const currentContainer = wasDisabled ? container : target\r\n      const currentAnchor = wasDisabled ? mainAnchor : targetAnchor\r\n      isSVG = isSVG || isTargetSVG(target)\r\n\r\n      if (dynamicChildren) {\r\n        // fast path when the teleport happens to be a block root\r\n        patchBlockChildren(\r\n          n1.dynamicChildren!,\r\n          dynamicChildren,\r\n          currentContainer,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds\r\n        )\r\n        // even in block tree mode we need to make sure all root-level nodes\r\n        // in the teleport inherit previous DOM references so that they can\r\n        // be moved in future patches.\r\n        traverseStaticChildren(n1, n2, true)\r\n      } else if (!optimized) {\r\n        patchChildren(\r\n          n1,\r\n          n2,\r\n          currentContainer,\r\n          currentAnchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          false\r\n        )\r\n      }\r\n\r\n      if (disabled) {\r\n        if (!wasDisabled) {\r\n          // enabled -> disabled\r\n          // move into main container\r\n          moveTeleport(\r\n            n2,\r\n            container,\r\n            mainAnchor,\r\n            internals,\r\n            TeleportMoveTypes.TOGGLE\r\n          )\r\n        }\r\n      } else {\r\n        // target changed\r\n        if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n          const nextTarget = (n2.target = resolveTarget(\r\n            n2.props,\r\n            querySelector\r\n          ))\r\n          if (nextTarget) {\r\n            moveTeleport(\r\n              n2,\r\n              nextTarget,\r\n              null,\r\n              internals,\r\n              TeleportMoveTypes.TARGET_CHANGE\r\n            )\r\n          } else if (__DEV__) {\r\n            warn(\r\n              'Invalid Teleport target on update:',\r\n              target,\r\n              `(${typeof target})`\r\n            )\r\n          }\r\n        } else if (wasDisabled) {\r\n          // disabled -> enabled\r\n          // move into teleport target\r\n          moveTeleport(\r\n            n2,\r\n            target,\r\n            targetAnchor,\r\n            internals,\r\n            TeleportMoveTypes.TOGGLE\r\n          )\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  remove(\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    optimized: boolean,\r\n    { um: unmount, o: { remove: hostRemove } }: RendererInternals,\r\n    doRemove: Boolean\r\n  ) {\r\n    const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode\r\n\r\n    if (target) {\r\n      hostRemove(targetAnchor!)\r\n    }\r\n\r\n    // an unmounted teleport should always remove its children if not disabled\r\n    if (doRemove || !isTeleportDisabled(props)) {\r\n      hostRemove(anchor!)\r\n      if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        for (let i = 0; i < (children as VNode[]).length; i++) {\r\n          const child = (children as VNode[])[i]\r\n          unmount(\r\n            child,\r\n            parentComponent,\r\n            parentSuspense,\r\n            true,\r\n            !!child.dynamicChildren\r\n          )\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  move: moveTeleport,\r\n  hydrate: hydrateTeleport\r\n}\r\n\r\nexport const enum TeleportMoveTypes {\r\n  TARGET_CHANGE,\r\n  TOGGLE, // enable / disable\r\n  REORDER // moved in the main view\r\n}\r\n\r\nfunction moveTeleport(\r\n  vnode: VNode,\r\n  container: RendererElement,\r\n  parentAnchor: RendererNode | null,\r\n  { o: { insert }, m: move }: RendererInternals,\r\n  moveType: TeleportMoveTypes = TeleportMoveTypes.REORDER\r\n) {\r\n  // move target anchor if this is a target change.\r\n  if (moveType === TeleportMoveTypes.TARGET_CHANGE) {\r\n    insert(vnode.targetAnchor!, container, parentAnchor)\r\n  }\r\n  const { el, anchor, shapeFlag, children, props } = vnode\r\n  const isReorder = moveType === TeleportMoveTypes.REORDER\r\n  // move main view anchor if this is a re-order.\r\n  if (isReorder) {\r\n    insert(el!, container, parentAnchor)\r\n  }\r\n  // if this is a re-order and teleport is enabled (content is in target)\r\n  // do not move children. So the opposite is: only move children if this\r\n  // is not a reorder, or the teleport is disabled\r\n  if (!isReorder || isTeleportDisabled(props)) {\r\n    // Teleport has either Array children or no children.\r\n    if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n      for (let i = 0; i < (children as VNode[]).length; i++) {\r\n        move(\r\n          (children as VNode[])[i],\r\n          container,\r\n          parentAnchor,\r\n          MoveType.REORDER\r\n        )\r\n      }\r\n    }\r\n  }\r\n  // move main view anchor if this is a re-order.\r\n  if (isReorder) {\r\n    insert(anchor!, container, parentAnchor)\r\n  }\r\n}\r\n\r\ninterface TeleportTargetElement extends Element {\r\n  // last teleport target\r\n  _lpa?: Node | null\r\n}\r\n\r\nfunction hydrateTeleport(\r\n  node: Node,\r\n  vnode: TeleportVNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  {\r\n    o: { nextSibling, parentNode, querySelector }\r\n  }: RendererInternals<Node, Element>,\r\n  hydrateChildren: (\r\n    node: Node | null,\r\n    vnode: VNode,\r\n    container: Element,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => Node | null\r\n): Node | null {\r\n  const target = (vnode.target = resolveTarget<Element>(\r\n    vnode.props,\r\n    querySelector\r\n  ))\r\n  if (target) {\r\n    // if multiple teleports rendered to the same target element, we need to\r\n    // pick up from where the last teleport finished instead of the first node\r\n    const targetNode =\r\n      (target as TeleportTargetElement)._lpa || target.firstChild\r\n    if (vnode.shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n      if (isTeleportDisabled(vnode.props)) {\r\n        vnode.anchor = hydrateChildren(\r\n          nextSibling(node),\r\n          vnode,\r\n          parentNode(node)!,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        vnode.targetAnchor = targetNode\r\n      } else {\r\n        vnode.anchor = nextSibling(node)\r\n\r\n        // lookahead until we find the target anchor\r\n        // we cannot rely on return value of hydrateChildren() because there\r\n        // could be nested teleports\r\n        let targetAnchor = targetNode\r\n        while (targetAnchor) {\r\n          targetAnchor = nextSibling(targetAnchor)\r\n          if (\r\n            targetAnchor &&\r\n            targetAnchor.nodeType === 8 &&\r\n            (targetAnchor as Comment).data === 'teleport anchor'\r\n          ) {\r\n            vnode.targetAnchor = targetAnchor\r\n            ;(target as TeleportTargetElement)._lpa =\r\n              vnode.targetAnchor && nextSibling(vnode.targetAnchor as Node)\r\n            break\r\n          }\r\n        }\r\n\r\n        hydrateChildren(\r\n          targetNode,\r\n          vnode,\r\n          target,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      }\r\n    }\r\n  }\r\n  return vnode.anchor && nextSibling(vnode.anchor as Node)\r\n}\r\n\r\n// Force-casted public typing for h and TSX props inference\r\nexport const Teleport = TeleportImpl as any as {\r\n  __isTeleport: true\r\n  new (): { $props: VNodeProps & TeleportProps }\r\n}\r\n","import { isArray, isObject, isPromise } from '@vue/shared'\r\nimport { defineAsyncComponent } from '../apiAsyncComponent'\r\nimport { Component } from '../component'\r\nimport { isVNode } from '../vnode'\r\n\r\ninterface LegacyAsyncOptions {\r\n  component: Promise<Component>\r\n  loading?: Component\r\n  error?: Component\r\n  delay?: number\r\n  timeout?: number\r\n}\r\n\r\ntype LegacyAsyncReturnValue = Promise<Component> | LegacyAsyncOptions\r\n\r\ntype LegacyAsyncComponent = (\r\n  resolve?: (res: LegacyAsyncReturnValue) => void,\r\n  reject?: (reason?: any) => void\r\n) => LegacyAsyncReturnValue | undefined\r\n\r\nconst normalizedAsyncComponentMap = new Map<LegacyAsyncComponent, Component>()\r\n\r\nexport function convertLegacyAsyncComponent(comp: LegacyAsyncComponent) {\r\n  if (normalizedAsyncComponentMap.has(comp)) {\r\n    return normalizedAsyncComponentMap.get(comp)!\r\n  }\r\n\r\n  // we have to call the function here due to how v2's API won't expose the\r\n  // options until we call it\r\n  let resolve: (res: LegacyAsyncReturnValue) => void\r\n  let reject: (reason?: any) => void\r\n  const fallbackPromise = new Promise<Component>((r, rj) => {\r\n    ;(resolve = r), (reject = rj)\r\n  })\r\n\r\n  const res = comp(resolve!, reject!)\r\n\r\n  let converted: Component\r\n  if (isPromise(res)) {\r\n    converted = defineAsyncComponent(() => res)\r\n  } else if (isObject(res) && !isVNode(res) && !isArray(res)) {\r\n    converted = defineAsyncComponent({\r\n      loader: () => res.component,\r\n      loadingComponent: res.loading,\r\n      errorComponent: res.error,\r\n      delay: res.delay,\r\n      timeout: res.timeout\r\n    })\r\n  } else if (res == null) {\r\n    converted = defineAsyncComponent(() => fallbackPromise)\r\n  } else {\r\n    converted = comp as any // probably a v3 functional comp\r\n  }\r\n  normalizedAsyncComponentMap.set(comp, converted)\r\n  return converted\r\n}\r\n","import { isFunction, isObject } from '@vue/shared'\r\nimport { Component, ComponentInternalInstance } from '../component'\r\nimport {\r\n  checkCompatEnabled,\r\n  DeprecationTypes,\r\n  softAssertCompatEnabled\r\n} from './compatConfig'\r\nimport { convertLegacyAsyncComponent } from './componentAsync'\r\nimport { convertLegacyFunctionalComponent } from './componentFunctional'\r\n\r\nexport function convertLegacyComponent(\r\n  comp: any,\r\n  instance: ComponentInternalInstance | null\r\n): Component {\r\n  if (comp.__isBuiltIn) {\r\n    return comp\r\n  }\r\n\r\n  // 2.x constructor\r\n  if (isFunction(comp) && comp.cid) {\r\n    comp = comp.options\r\n  }\r\n\r\n  // 2.x async component\r\n  if (\r\n    isFunction(comp) &&\r\n    checkCompatEnabled(DeprecationTypes.COMPONENT_ASYNC, instance, comp)\r\n  ) {\r\n    // since after disabling this, plain functions are still valid usage, do not\r\n    // use softAssert here.\r\n    return convertLegacyAsyncComponent(comp)\r\n  }\r\n\r\n  // 2.x functional component\r\n  if (\r\n    isObject(comp) &&\r\n    comp.functional &&\r\n    softAssertCompatEnabled(\r\n      DeprecationTypes.COMPONENT_FUNCTIONAL,\r\n      instance,\r\n      comp\r\n    )\r\n  ) {\r\n    return convertLegacyFunctionalComponent(comp)\r\n  }\r\n\r\n  return comp\r\n}\r\n","import {\r\n  isArray,\r\n  isFunction,\r\n  isString,\r\n  isObject,\r\n  EMPTY_ARR,\r\n  extend,\r\n  normalizeClass,\r\n  normalizeStyle,\r\n  PatchFlags,\r\n  ShapeFlags,\r\n  SlotFlags,\r\n  isOn\r\n} from '@vue/shared'\r\nimport {\r\n  ComponentInternalInstance,\r\n  Data,\r\n  ConcreteComponent,\r\n  ClassComponent,\r\n  Component,\r\n  isClassComponent\r\n} from './component'\r\nimport { RawSlots } from './componentSlots'\r\nimport { isProxy, Ref, toRaw, ReactiveFlags, isRef } from '@vue/reactivity'\r\nimport { AppContext } from './apiCreateApp'\r\nimport {\r\n  SuspenseImpl,\r\n  isSuspense,\r\n  SuspenseBoundary\r\n} from './components/Suspense'\r\nimport { DirectiveBinding } from './directives'\r\nimport { TransitionHooks } from './components/BaseTransition'\r\nimport { warn } from './warning'\r\nimport { TeleportImpl, isTeleport } from './components/Teleport'\r\nimport {\r\n  currentRenderingInstance,\r\n  currentScopeId\r\n} from './componentRenderContext'\r\nimport { RendererNode, RendererElement } from './renderer'\r\nimport { NULL_DYNAMIC_COMPONENT } from './helpers/resolveAssets'\r\nimport { hmrDirtyComponents } from './hmr'\r\nimport { convertLegacyComponent } from './compat/component'\r\nimport { convertLegacyVModelProps } from './compat/componentVModel'\r\nimport { defineLegacyVNodeProperties } from './compat/renderFn'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from './errorHandling'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\n\r\nexport const Fragment = Symbol(__DEV__ ? 'Fragment' : undefined) as any as {\r\n  __isFragment: true\r\n  new (): {\r\n    $props: VNodeProps\r\n  }\r\n}\r\nexport const Text = Symbol(__DEV__ ? 'Text' : undefined)\r\nexport const Comment = Symbol(__DEV__ ? 'Comment' : undefined)\r\nexport const Static = Symbol(__DEV__ ? 'Static' : undefined)\r\n\r\nexport type VNodeTypes =\r\n  | string\r\n  | VNode\r\n  | Component\r\n  | typeof Text\r\n  | typeof Static\r\n  | typeof Comment\r\n  | typeof Fragment\r\n  | typeof TeleportImpl\r\n  | typeof SuspenseImpl\r\n\r\nexport type VNodeRef =\r\n  | string\r\n  | Ref\r\n  | ((\r\n      ref: Element | ComponentPublicInstance | null,\r\n      refs: Record<string, any>\r\n    ) => void)\r\n\r\nexport type VNodeNormalizedRefAtom = {\r\n  i: ComponentInternalInstance\r\n  r: VNodeRef\r\n  k?: string // setup ref key\r\n  f?: boolean // refInFor marker\r\n}\r\n\r\nexport type VNodeNormalizedRef =\r\n  | VNodeNormalizedRefAtom\r\n  | VNodeNormalizedRefAtom[]\r\n\r\ntype VNodeMountHook = (vnode: VNode) => void\r\ntype VNodeUpdateHook = (vnode: VNode, oldVNode: VNode) => void\r\nexport type VNodeHook =\r\n  | VNodeMountHook\r\n  | VNodeUpdateHook\r\n  | VNodeMountHook[]\r\n  | VNodeUpdateHook[]\r\n\r\n// https://github.com/microsoft/TypeScript/issues/33099\r\nexport type VNodeProps = {\r\n  key?: string | number | symbol\r\n  ref?: VNodeRef\r\n  ref_for?: boolean\r\n  ref_key?: string\r\n\r\n  // vnode hooks\r\n  onVnodeBeforeMount?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeMounted?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeBeforeUpdate?: VNodeUpdateHook | VNodeUpdateHook[]\r\n  onVnodeUpdated?: VNodeUpdateHook | VNodeUpdateHook[]\r\n  onVnodeBeforeUnmount?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeUnmounted?: VNodeMountHook | VNodeMountHook[]\r\n}\r\n\r\ntype VNodeChildAtom =\r\n  | VNode\r\n  | string\r\n  | number\r\n  | boolean\r\n  | null\r\n  | undefined\r\n  | void\r\n\r\nexport type VNodeArrayChildren = Array<VNodeArrayChildren | VNodeChildAtom>\r\n\r\nexport type VNodeChild = VNodeChildAtom | VNodeArrayChildren\r\n\r\nexport type VNodeNormalizedChildren =\r\n  | string\r\n  | VNodeArrayChildren\r\n  | RawSlots\r\n  | null\r\n\r\nexport interface VNode<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement,\r\n  ExtraProps = { [key: string]: any }\r\n> {\r\n  /**\r\n   * @internal\r\n   */\r\n  __v_isVNode: true\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  [ReactiveFlags.SKIP]: true\r\n\r\n  type: VNodeTypes\r\n  props: (VNodeProps & ExtraProps) | null\r\n  key: string | number | symbol | null\r\n  ref: VNodeNormalizedRef | null\r\n  /**\r\n   * SFC only. This is assigned on vnode creation using currentScopeId\r\n   * which is set alongside currentRenderingInstance.\r\n   */\r\n  scopeId: string | null\r\n  /**\r\n   * SFC only. This is assigned to:\r\n   * - Slot fragment vnodes with :slotted SFC styles.\r\n   * - Component vnodes (during patch/hydration) so that its root node can\r\n   *   inherit the component's slotScopeIds\r\n   * @internal\r\n   */\r\n  slotScopeIds: string[] | null\r\n  children: VNodeNormalizedChildren\r\n  component: ComponentInternalInstance | null\r\n  dirs: DirectiveBinding[] | null\r\n  transition: TransitionHooks<HostElement> | null\r\n\r\n  // DOM\r\n  el: HostNode | null\r\n  anchor: HostNode | null // fragment anchor\r\n  target: HostElement | null // teleport target\r\n  targetAnchor: HostNode | null // teleport target anchor\r\n  /**\r\n   * number of elements contained in a static vnode\r\n   * @internal\r\n   */\r\n  staticCount: number\r\n\r\n  // suspense\r\n  suspense: SuspenseBoundary | null\r\n  /**\r\n   * @internal\r\n   */\r\n  ssContent: VNode | null\r\n  /**\r\n   * @internal\r\n   */\r\n  ssFallback: VNode | null\r\n\r\n  // optimization only\r\n  shapeFlag: number\r\n  patchFlag: number\r\n  /**\r\n   * @internal\r\n   */\r\n  dynamicProps: string[] | null\r\n  /**\r\n   * @internal\r\n   */\r\n  dynamicChildren: VNode[] | null\r\n\r\n  // application root node only\r\n  appContext: AppContext | null\r\n\r\n  /**\r\n   * @internal attached by v-memo\r\n   */\r\n  memo?: any[]\r\n  /**\r\n   * @internal __COMPAT__ only\r\n   */\r\n  isCompatRoot?: true\r\n  /**\r\n   * @internal custom element interception hook\r\n   */\r\n  ce?: (instance: ComponentInternalInstance) => void\r\n}\r\n\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nexport const blockStack: (VNode[] | null)[] = []\r\nexport let currentBlock: VNode[] | null = null\r\n\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nexport function openBlock(disableTracking = false) {\r\n  blockStack.push((currentBlock = disableTracking ? null : []))\r\n}\r\n\r\nexport function closeBlock() {\r\n  blockStack.pop()\r\n  currentBlock = blockStack[blockStack.length - 1] || null\r\n}\r\n\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nexport let isBlockTreeEnabled = 1\r\n\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nexport function setBlockTracking(value: number) {\r\n  isBlockTreeEnabled += value\r\n}\r\n\r\nfunction setupBlock(vnode: VNode) {\r\n  // save current block children on the block vnode\r\n  vnode.dynamicChildren =\r\n    isBlockTreeEnabled > 0 ? currentBlock || (EMPTY_ARR as any) : null\r\n  // close block\r\n  closeBlock()\r\n  // a block is always going to be patched, so track it as a child of its\r\n  // parent block\r\n  if (isBlockTreeEnabled > 0 && currentBlock) {\r\n    currentBlock.push(vnode)\r\n  }\r\n  return vnode\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createElementBlock(\r\n  type: string | typeof Fragment,\r\n  props?: Record<string, any> | null,\r\n  children?: any,\r\n  patchFlag?: number,\r\n  dynamicProps?: string[],\r\n  shapeFlag?: number\r\n) {\r\n  return setupBlock(\r\n    createBaseVNode(\r\n      type,\r\n      props,\r\n      children,\r\n      patchFlag,\r\n      dynamicProps,\r\n      shapeFlag,\r\n      true /* isBlock */\r\n    )\r\n  )\r\n}\r\n\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nexport function createBlock(\r\n  type: VNodeTypes | ClassComponent,\r\n  props?: Record<string, any> | null,\r\n  children?: any,\r\n  patchFlag?: number,\r\n  dynamicProps?: string[]\r\n): VNode {\r\n  return setupBlock(\r\n    createVNode(\r\n      type,\r\n      props,\r\n      children,\r\n      patchFlag,\r\n      dynamicProps,\r\n      true /* isBlock: prevent a block from tracking itself */\r\n    )\r\n  )\r\n}\r\n\r\nexport function isVNode(value: any): value is VNode {\r\n  return value ? value.__v_isVNode === true : false\r\n}\r\n\r\nexport function isSameVNodeType(n1: VNode, n2: VNode): boolean {\r\n  if (\r\n    __DEV__ &&\r\n    n2.shapeFlag & ShapeFlags.COMPONENT &&\r\n    hmrDirtyComponents.has(n2.type as ConcreteComponent)\r\n  ) {\r\n    // HMR only: if the component has been hot-updated, force a reload.\r\n    return false\r\n  }\r\n  return n1.type === n2.type && n1.key === n2.key\r\n}\r\n\r\nlet vnodeArgsTransformer:\r\n  | ((\r\n      args: Parameters<typeof _createVNode>,\r\n      instance: ComponentInternalInstance | null\r\n    ) => Parameters<typeof _createVNode>)\r\n  | undefined\r\n\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nexport function transformVNodeArgs(transformer?: typeof vnodeArgsTransformer) {\r\n  vnodeArgsTransformer = transformer\r\n}\r\n\r\nconst createVNodeWithArgsTransform = (\r\n  ...args: Parameters<typeof _createVNode>\r\n): VNode => {\r\n  return _createVNode(\r\n    ...(vnodeArgsTransformer\r\n      ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n      : args)\r\n  )\r\n}\r\n\r\nexport const InternalObjectKey = `__vInternal`\r\n\r\nconst normalizeKey = ({ key }: VNodeProps): VNode['key'] =>\r\n  key != null ? key : null\r\n\r\nconst normalizeRef = ({\r\n  ref,\r\n  ref_key,\r\n  ref_for\r\n}: VNodeProps): VNodeNormalizedRefAtom | null => {\r\n  return (\r\n    ref != null\r\n      ? isString(ref) || isRef(ref) || isFunction(ref)\r\n        ? { i: currentRenderingInstance, r: ref, k: ref_key, f: !!ref_for }\r\n        : ref\r\n      : null\r\n  ) as any\r\n}\r\n\r\nfunction createBaseVNode(\r\n  type: VNodeTypes | ClassComponent | typeof NULL_DYNAMIC_COMPONENT,\r\n  props: (Data & VNodeProps) | null = null,\r\n  children: unknown = null,\r\n  patchFlag = 0,\r\n  dynamicProps: string[] | null = null,\r\n  shapeFlag = type === Fragment ? 0 : ShapeFlags.ELEMENT,\r\n  isBlockNode = false,\r\n  needFullChildrenNormalization = false\r\n) {\r\n  const vnode = {\r\n    __v_isVNode: true,\r\n    __v_skip: true,\r\n    type,\r\n    props,\r\n    key: props && normalizeKey(props),\r\n    ref: props && normalizeRef(props),\r\n    scopeId: currentScopeId,\r\n    slotScopeIds: null,\r\n    children,\r\n    component: null,\r\n    suspense: null,\r\n    ssContent: null,\r\n    ssFallback: null,\r\n    dirs: null,\r\n    transition: null,\r\n    el: null,\r\n    anchor: null,\r\n    target: null,\r\n    targetAnchor: null,\r\n    staticCount: 0,\r\n    shapeFlag,\r\n    patchFlag,\r\n    dynamicProps,\r\n    dynamicChildren: null,\r\n    appContext: null\r\n  } as VNode\r\n\r\n  if (needFullChildrenNormalization) {\r\n    normalizeChildren(vnode, children)\r\n    // normalize suspense children\r\n    if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n      ;(type as typeof SuspenseImpl).normalize(vnode)\r\n    }\r\n  } else if (children) {\r\n    // compiled element vnode - if children is passed, only possible types are\r\n    // string or Array.\r\n    vnode.shapeFlag |= isString(children)\r\n      ? ShapeFlags.TEXT_CHILDREN\r\n      : ShapeFlags.ARRAY_CHILDREN\r\n  }\r\n\r\n  // validate key\r\n  if (__DEV__ && vnode.key !== vnode.key) {\r\n    warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type)\r\n  }\r\n\r\n  // track vnode for block tree\r\n  if (\r\n    isBlockTreeEnabled > 0 &&\r\n    // avoid a block node from tracking itself\r\n    !isBlockNode &&\r\n    // has current parent block\r\n    currentBlock &&\r\n    // presence of a patch flag indicates this node needs patching on updates.\r\n    // component nodes also should always be patched, because even if the\r\n    // component doesn't need to update, it needs to persist the instance on to\r\n    // the next vnode so that it can be properly unmounted later.\r\n    (vnode.patchFlag > 0 || shapeFlag & ShapeFlags.COMPONENT) &&\r\n    // the EVENTS flag is only for hydration and if it is the only flag, the\r\n    // vnode should not be considered dynamic due to handler caching.\r\n    vnode.patchFlag !== PatchFlags.HYDRATE_EVENTS\r\n  ) {\r\n    currentBlock.push(vnode)\r\n  }\r\n\r\n  if (__COMPAT__) {\r\n    convertLegacyVModelProps(vnode)\r\n    defineLegacyVNodeProperties(vnode)\r\n  }\r\n\r\n  return vnode\r\n}\r\n\r\nexport { createBaseVNode as createElementVNode }\r\n\r\nexport const createVNode = (\r\n  __DEV__ ? createVNodeWithArgsTransform : _createVNode\r\n) as typeof _createVNode\r\n\r\nfunction _createVNode(\r\n  type: VNodeTypes | ClassComponent | typeof NULL_DYNAMIC_COMPONENT,\r\n  props: (Data & VNodeProps) | null = null,\r\n  children: unknown = null,\r\n  patchFlag: number = 0,\r\n  dynamicProps: string[] | null = null,\r\n  isBlockNode = false\r\n): VNode {\r\n  if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n    if (__DEV__ && !type) {\r\n      warn(`Invalid vnode type when creating vnode: ${type}.`)\r\n    }\r\n    type = Comment\r\n  }\r\n\r\n  if (isVNode(type)) {\r\n    // createVNode receiving an existing vnode. This happens in cases like\r\n    // <component :is=\"vnode\"/>\r\n    // #2078 make sure to merge refs during the clone instead of overwriting it\r\n    const cloned = cloneVNode(type, props, true /* mergeRef: true */)\r\n    if (children) {\r\n      normalizeChildren(cloned, children)\r\n    }\r\n    if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {\r\n      if (cloned.shapeFlag & ShapeFlags.COMPONENT) {\r\n        currentBlock[currentBlock.indexOf(type)] = cloned\r\n      } else {\r\n        currentBlock.push(cloned)\r\n      }\r\n    }\r\n    cloned.patchFlag |= PatchFlags.BAIL\r\n    return cloned\r\n  }\r\n\r\n  // class component normalization.\r\n  if (isClassComponent(type)) {\r\n    type = type.__vccOpts\r\n  }\r\n\r\n  // 2.x async/functional component compat\r\n  if (__COMPAT__) {\r\n    type = convertLegacyComponent(type, currentRenderingInstance)\r\n  }\r\n\r\n  // class & style normalization.\r\n  if (props) {\r\n    // for reactive or proxy objects, we need to clone it to enable mutation.\r\n    props = guardReactiveProps(props)!\r\n    let { class: klass, style } = props\r\n    if (klass && !isString(klass)) {\r\n      props.class = normalizeClass(klass)\r\n    }\r\n    if (isObject(style)) {\r\n      // reactive state objects need to be cloned since they are likely to be\r\n      // mutated\r\n      if (isProxy(style) && !isArray(style)) {\r\n        style = extend({}, style)\r\n      }\r\n      props.style = normalizeStyle(style)\r\n    }\r\n  }\r\n\r\n  // encode the vnode type information into a bitmap\r\n  const shapeFlag = isString(type)\r\n    ? ShapeFlags.ELEMENT\r\n    : __FEATURE_SUSPENSE__ && isSuspense(type)\r\n    ? ShapeFlags.SUSPENSE\r\n    : isTeleport(type)\r\n    ? ShapeFlags.TELEPORT\r\n    : isObject(type)\r\n    ? ShapeFlags.STATEFUL_COMPONENT\r\n    : isFunction(type)\r\n    ? ShapeFlags.FUNCTIONAL_COMPONENT\r\n    : 0\r\n\r\n  if (__DEV__ && shapeFlag & ShapeFlags.STATEFUL_COMPONENT && isProxy(type)) {\r\n    type = toRaw(type)\r\n    warn(\r\n      `Vue received a Component which was made a reactive object. This can ` +\r\n        `lead to unnecessary performance overhead, and should be avoided by ` +\r\n        `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n        `instead of \\`ref\\`.`,\r\n      `\\nComponent that was made reactive: `,\r\n      type\r\n    )\r\n  }\r\n\r\n  return createBaseVNode(\r\n    type,\r\n    props,\r\n    children,\r\n    patchFlag,\r\n    dynamicProps,\r\n    shapeFlag,\r\n    isBlockNode,\r\n    true\r\n  )\r\n}\r\n\r\nexport function guardReactiveProps(props: (Data & VNodeProps) | null) {\r\n  if (!props) return null\r\n  return isProxy(props) || InternalObjectKey in props\r\n    ? extend({}, props)\r\n    : props\r\n}\r\n\r\nexport function cloneVNode<T, U>(\r\n  vnode: VNode<T, U>,\r\n  extraProps?: (Data & VNodeProps) | null,\r\n  mergeRef = false\r\n): VNode<T, U> {\r\n  // This is intentionally NOT using spread or extend to avoid the runtime\r\n  // key enumeration cost.\r\n  const { props, ref, patchFlag, children } = vnode\r\n  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props\r\n  const cloned: VNode = {\r\n    __v_isVNode: true,\r\n    __v_skip: true,\r\n    type: vnode.type,\r\n    props: mergedProps,\r\n    key: mergedProps && normalizeKey(mergedProps),\r\n    ref:\r\n      extraProps && extraProps.ref\r\n        ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n          // if the vnode itself already has a ref, cloneVNode will need to merge\r\n          // the refs so the single vnode can be set on multiple refs\r\n          mergeRef && ref\r\n          ? isArray(ref)\r\n            ? ref.concat(normalizeRef(extraProps)!)\r\n            : [ref, normalizeRef(extraProps)!]\r\n          : normalizeRef(extraProps)\r\n        : ref,\r\n    scopeId: vnode.scopeId,\r\n    slotScopeIds: vnode.slotScopeIds,\r\n    children:\r\n      __DEV__ && patchFlag === PatchFlags.HOISTED && isArray(children)\r\n        ? (children as VNode[]).map(deepCloneVNode)\r\n        : children,\r\n    target: vnode.target,\r\n    targetAnchor: vnode.targetAnchor,\r\n    staticCount: vnode.staticCount,\r\n    shapeFlag: vnode.shapeFlag,\r\n    // if the vnode is cloned with extra props, we can no longer assume its\r\n    // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n    // note: preserve flag for fragments since they use the flag for children\r\n    // fast paths only.\r\n    patchFlag:\r\n      extraProps && vnode.type !== Fragment\r\n        ? patchFlag === -1 // hoisted node\r\n          ? PatchFlags.FULL_PROPS\r\n          : patchFlag | PatchFlags.FULL_PROPS\r\n        : patchFlag,\r\n    dynamicProps: vnode.dynamicProps,\r\n    dynamicChildren: vnode.dynamicChildren,\r\n    appContext: vnode.appContext,\r\n    dirs: vnode.dirs,\r\n    transition: vnode.transition,\r\n\r\n    // These should technically only be non-null on mounted VNodes. However,\r\n    // they *should* be copied for kept-alive vnodes. So we just always copy\r\n    // them since them being non-null during a mount doesn't affect the logic as\r\n    // they will simply be overwritten.\r\n    component: vnode.component,\r\n    suspense: vnode.suspense,\r\n    ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n    ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n    el: vnode.el,\r\n    anchor: vnode.anchor\r\n  }\r\n  if (__COMPAT__) {\r\n    defineLegacyVNodeProperties(cloned)\r\n  }\r\n  return cloned as any\r\n}\r\n\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode: VNode): VNode {\r\n  const cloned = cloneVNode(vnode)\r\n  if (isArray(vnode.children)) {\r\n    cloned.children = (vnode.children as VNode[]).map(deepCloneVNode)\r\n  }\r\n  return cloned\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createTextVNode(text: string = ' ', flag: number = 0): VNode {\r\n  return createVNode(Text, null, text, flag)\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createStaticVNode(\r\n  content: string,\r\n  numberOfNodes: number\r\n): VNode {\r\n  // A static vnode can contain multiple stringified elements, and the number\r\n  // of elements is necessary for hydration.\r\n  const vnode = createVNode(Static, null, content)\r\n  vnode.staticCount = numberOfNodes\r\n  return vnode\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createCommentVNode(\r\n  text: string = '',\r\n  // when used as the v-else branch, the comment node must be created as a\r\n  // block to ensure correct updates.\r\n  asBlock: boolean = false\r\n): VNode {\r\n  return asBlock\r\n    ? (openBlock(), createBlock(Comment, null, text))\r\n    : createVNode(Comment, null, text)\r\n}\r\n\r\nexport function normalizeVNode(child: VNodeChild): VNode {\r\n  if (child == null || typeof child === 'boolean') {\r\n    // empty placeholder\r\n    return createVNode(Comment)\r\n  } else if (isArray(child)) {\r\n    // fragment\r\n    return createVNode(\r\n      Fragment,\r\n      null,\r\n      // #3666, avoid reference pollution when reusing vnode\r\n      child.slice()\r\n    )\r\n  } else if (typeof child === 'object') {\r\n    // already vnode, this should be the most common since compiled templates\r\n    // always produce all-vnode children arrays\r\n    return cloneIfMounted(child)\r\n  } else {\r\n    // strings and numbers\r\n    return createVNode(Text, null, String(child))\r\n  }\r\n}\r\n\r\n// optimized normalization for template-compiled render fns\r\nexport function cloneIfMounted(child: VNode): VNode {\r\n  return child.el === null || child.memo ? child : cloneVNode(child)\r\n}\r\n\r\nexport function normalizeChildren(vnode: VNode, children: unknown) {\r\n  let type = 0\r\n  const { shapeFlag } = vnode\r\n  if (children == null) {\r\n    children = null\r\n  } else if (isArray(children)) {\r\n    type = ShapeFlags.ARRAY_CHILDREN\r\n  } else if (typeof children === 'object') {\r\n    if (shapeFlag & (ShapeFlags.ELEMENT | ShapeFlags.TELEPORT)) {\r\n      // Normalize slot to plain children for plain element and Teleport\r\n      const slot = (children as any).default\r\n      if (slot) {\r\n        // _c marker is added by withCtx() indicating this is a compiled slot\r\n        slot._c && (slot._d = false)\r\n        normalizeChildren(vnode, slot())\r\n        slot._c && (slot._d = true)\r\n      }\r\n      return\r\n    } else {\r\n      type = ShapeFlags.SLOTS_CHILDREN\r\n      const slotFlag = (children as RawSlots)._\r\n      if (!slotFlag && !(InternalObjectKey in children!)) {\r\n        // if slots are not normalized, attach context instance\r\n        // (compiled / normalized slots already have context)\r\n        ;(children as RawSlots)._ctx = currentRenderingInstance\r\n      } else if (slotFlag === SlotFlags.FORWARDED && currentRenderingInstance) {\r\n        // a child component receives forwarded slots from the parent.\r\n        // its slot type is determined by its parent's slot type.\r\n        if (\r\n          (currentRenderingInstance.slots as RawSlots)._ === SlotFlags.STABLE\r\n        ) {\r\n          ;(children as RawSlots)._ = SlotFlags.STABLE\r\n        } else {\r\n          ;(children as RawSlots)._ = SlotFlags.DYNAMIC\r\n          vnode.patchFlag |= PatchFlags.DYNAMIC_SLOTS\r\n        }\r\n      }\r\n    }\r\n  } else if (isFunction(children)) {\r\n    children = { default: children, _ctx: currentRenderingInstance }\r\n    type = ShapeFlags.SLOTS_CHILDREN\r\n  } else {\r\n    children = String(children)\r\n    // force teleport children to array so it can be moved around\r\n    if (shapeFlag & ShapeFlags.TELEPORT) {\r\n      type = ShapeFlags.ARRAY_CHILDREN\r\n      children = [createTextVNode(children as string)]\r\n    } else {\r\n      type = ShapeFlags.TEXT_CHILDREN\r\n    }\r\n  }\r\n  vnode.children = children as VNodeNormalizedChildren\r\n  vnode.shapeFlag |= type\r\n}\r\n\r\nexport function mergeProps(...args: (Data & VNodeProps)[]) {\r\n  const ret: Data = {}\r\n  for (let i = 0; i < args.length; i++) {\r\n    const toMerge = args[i]\r\n    for (const key in toMerge) {\r\n      if (key === 'class') {\r\n        if (ret.class !== toMerge.class) {\r\n          ret.class = normalizeClass([ret.class, toMerge.class])\r\n        }\r\n      } else if (key === 'style') {\r\n        ret.style = normalizeStyle([ret.style, toMerge.style])\r\n      } else if (isOn(key)) {\r\n        const existing = ret[key]\r\n        const incoming = toMerge[key]\r\n        if (\r\n          incoming &&\r\n          existing !== incoming &&\r\n          !(isArray(existing) && existing.includes(incoming))\r\n        ) {\r\n          ret[key] = existing\r\n            ? [].concat(existing as any, incoming as any)\r\n            : incoming\r\n        }\r\n      } else if (key !== '') {\r\n        ret[key] = toMerge[key]\r\n      }\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\nexport function invokeVNodeHook(\r\n  hook: VNodeHook,\r\n  instance: ComponentInternalInstance | null,\r\n  vnode: VNode,\r\n  prevVNode: VNode | null = null\r\n) {\r\n  callWithAsyncErrorHandling(hook, instance, ErrorCodes.VNODE_HOOK, [\r\n    vnode,\r\n    prevVNode\r\n  ])\r\n}\r\n","import { VNode, VNodeChild, isVNode } from './vnode'\r\nimport {\r\n  pauseTracking,\r\n  resetTracking,\r\n  shallowReadonly,\r\n  proxyRefs,\r\n  EffectScope,\r\n  markRaw,\r\n  track,\r\n  TrackOpTypes,\r\n  ReactiveEffect\r\n} from '@vue/reactivity'\r\nimport {\r\n  ComponentPublicInstance,\r\n  PublicInstanceProxyHandlers,\r\n  createDevRenderContext,\r\n  exposePropsOnRenderContext,\r\n  exposeSetupStateOnRenderContext,\r\n  ComponentPublicInstanceConstructor,\r\n  publicPropertiesMap,\r\n  RuntimeCompiledPublicInstanceProxyHandlers\r\n} from './componentPublicInstance'\r\nimport {\r\n  ComponentPropsOptions,\r\n  NormalizedPropsOptions,\r\n  initProps,\r\n  normalizePropsOptions\r\n} from './componentProps'\r\nimport { Slots, initSlots, InternalSlots } from './componentSlots'\r\nimport { warn } from './warning'\r\nimport { ErrorCodes, callWithErrorHandling, handleError } from './errorHandling'\r\nimport { AppContext, createAppContext, AppConfig } from './apiCreateApp'\r\nimport { Directive, validateDirectiveName } from './directives'\r\nimport {\r\n  applyOptions,\r\n  ComponentOptions,\r\n  ComputedOptions,\r\n  MethodOptions\r\n} from './componentOptions'\r\nimport {\r\n  EmitsOptions,\r\n  ObjectEmitsOptions,\r\n  EmitFn,\r\n  emit,\r\n  normalizeEmitsOptions\r\n} from './componentEmits'\r\nimport {\r\n  EMPTY_OBJ,\r\n  isFunction,\r\n  NOOP,\r\n  isObject,\r\n  NO,\r\n  makeMap,\r\n  isPromise,\r\n  ShapeFlags,\r\n  extend\r\n} from '@vue/shared'\r\nimport { SuspenseBoundary } from './components/Suspense'\r\nimport { CompilerOptions } from '@vue/compiler-core'\r\nimport { markAttrsAccessed } from './componentRenderUtils'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { startMeasure, endMeasure } from './profiling'\r\nimport { convertLegacyRenderFn } from './compat/renderFn'\r\nimport {\r\n  CompatConfig,\r\n  globalCompatConfig,\r\n  validateCompatConfig\r\n} from './compat/compatConfig'\r\nimport { SchedulerJob } from './scheduler'\r\n\r\nexport type Data = Record<string, unknown>\r\n\r\n/**\r\n * For extending allowed non-declared props on components in TSX\r\n */\r\nexport interface ComponentCustomProps {}\r\n\r\n/**\r\n * Default allowed non-declared props on component in TSX\r\n */\r\nexport interface AllowedComponentProps {\r\n  class?: unknown\r\n  style?: unknown\r\n}\r\n\r\n// Note: can't mark this whole interface internal because some public interfaces\r\n// extend it.\r\nexport interface ComponentInternalOptions {\r\n  /**\r\n   * @internal\r\n   */\r\n  __scopeId?: string\r\n  /**\r\n   * @internal\r\n   */\r\n  __cssModules?: Data\r\n  /**\r\n   * @internal\r\n   */\r\n  __hmrId?: string\r\n  /**\r\n   * Compat build only, for bailing out of certain compatibility behavior\r\n   */\r\n  __isBuiltIn?: boolean\r\n  /**\r\n   * This one should be exposed so that devtools can make use of it\r\n   */\r\n  __file?: string\r\n  /**\r\n   * name inferred from filename\r\n   */\r\n  __name?: string\r\n}\r\n\r\nexport interface FunctionalComponent<P = {}, E extends EmitsOptions = {}>\r\n  extends ComponentInternalOptions {\r\n  // use of any here is intentional so it can be a valid JSX Element constructor\r\n  (props: P, ctx: Omit<SetupContext<E>, 'expose'>): any\r\n  props?: ComponentPropsOptions<P>\r\n  emits?: E | (keyof E)[]\r\n  inheritAttrs?: boolean\r\n  displayName?: string\r\n  compatConfig?: CompatConfig\r\n}\r\n\r\nexport interface ClassComponent {\r\n  new (...args: any[]): ComponentPublicInstance<any, any, any, any, any>\r\n  __vccOpts: ComponentOptions\r\n}\r\n\r\n/**\r\n * Concrete component type matches its actual value: it's either an options\r\n * object, or a function. Use this where the code expects to work with actual\r\n * values, e.g. checking if its a function or not. This is mostly for internal\r\n * implementation code.\r\n */\r\nexport type ConcreteComponent<\r\n  Props = {},\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions\r\n> =\r\n  | ComponentOptions<Props, RawBindings, D, C, M>\r\n  | FunctionalComponent<Props, any>\r\n\r\n/**\r\n * A type used in public APIs where a component type is expected.\r\n * The constructor type is an artificial type returned by defineComponent().\r\n */\r\nexport type Component<\r\n  Props = any,\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions\r\n> =\r\n  | ConcreteComponent<Props, RawBindings, D, C, M>\r\n  | ComponentPublicInstanceConstructor<Props>\r\n\r\nexport { ComponentOptions }\r\n\r\ntype LifecycleHook<TFn = Function> = TFn[] | null\r\n\r\nexport const enum LifecycleHooks {\r\n  BEFORE_CREATE = 'bc',\r\n  CREATED = 'c',\r\n  BEFORE_MOUNT = 'bm',\r\n  MOUNTED = 'm',\r\n  BEFORE_UPDATE = 'bu',\r\n  UPDATED = 'u',\r\n  BEFORE_UNMOUNT = 'bum',\r\n  UNMOUNTED = 'um',\r\n  DEACTIVATED = 'da',\r\n  ACTIVATED = 'a',\r\n  RENDER_TRIGGERED = 'rtg',\r\n  RENDER_TRACKED = 'rtc',\r\n  ERROR_CAPTURED = 'ec',\r\n  SERVER_PREFETCH = 'sp'\r\n}\r\n\r\nexport interface SetupContext<E = EmitsOptions> {\r\n  attrs: Data\r\n  slots: Slots\r\n  emit: EmitFn<E>\r\n  expose: (exposed?: Record<string, any>) => void\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type InternalRenderFunction = {\r\n  (\r\n    ctx: ComponentPublicInstance,\r\n    cache: ComponentInternalInstance['renderCache'],\r\n    // for compiler-optimized bindings\r\n    $props: ComponentInternalInstance['props'],\r\n    $setup: ComponentInternalInstance['setupState'],\r\n    $data: ComponentInternalInstance['data'],\r\n    $options: ComponentInternalInstance['ctx']\r\n  ): VNodeChild\r\n  _rc?: boolean // isRuntimeCompiled\r\n\r\n  // __COMPAT__ only\r\n  _compatChecked?: boolean // v3 and already checked for v2 compat\r\n  _compatWrapped?: boolean // is wrapped for v2 compat\r\n}\r\n\r\n/**\r\n * We expose a subset of properties on the internal instance as they are\r\n * useful for advanced external libraries and tools.\r\n */\r\nexport interface ComponentInternalInstance {\r\n  uid: number\r\n  type: ConcreteComponent\r\n  parent: ComponentInternalInstance | null\r\n  root: ComponentInternalInstance\r\n  appContext: AppContext\r\n  /**\r\n   * Vnode representing this component in its parent's vdom tree\r\n   */\r\n  vnode: VNode\r\n  /**\r\n   * The pending new vnode from parent updates\r\n   * @internal\r\n   */\r\n  next: VNode | null\r\n  /**\r\n   * Root vnode of this component's own vdom tree\r\n   */\r\n  subTree: VNode\r\n  /**\r\n   * Render effect instance\r\n   */\r\n  effect: ReactiveEffect\r\n  /**\r\n   * Bound effect runner to be passed to schedulers\r\n   */\r\n  update: SchedulerJob\r\n  /**\r\n   * The render function that returns vdom tree.\r\n   * @internal\r\n   */\r\n  render: InternalRenderFunction | null\r\n  /**\r\n   * SSR render function\r\n   * @internal\r\n   */\r\n  ssrRender?: Function | null\r\n  /**\r\n   * Object containing values this component provides for its descendents\r\n   * @internal\r\n   */\r\n  provides: Data\r\n  /**\r\n   * Tracking reactive effects (e.g. watchers) associated with this component\r\n   * so that they can be automatically stopped on component unmount\r\n   * @internal\r\n   */\r\n  scope: EffectScope\r\n  /**\r\n   * cache for proxy access type to avoid hasOwnProperty calls\r\n   * @internal\r\n   */\r\n  accessCache: Data | null\r\n  /**\r\n   * cache for render function values that rely on _ctx but won't need updates\r\n   * after initialized (e.g. inline handlers)\r\n   * @internal\r\n   */\r\n  renderCache: (Function | VNode)[]\r\n\r\n  /**\r\n   * Resolved component registry, only for components with mixins or extends\r\n   * @internal\r\n   */\r\n  components: Record<string, ConcreteComponent> | null\r\n  /**\r\n   * Resolved directive registry, only for components with mixins or extends\r\n   * @internal\r\n   */\r\n  directives: Record<string, Directive> | null\r\n  /**\r\n   * Resolved filters registry, v2 compat only\r\n   * @internal\r\n   */\r\n  filters?: Record<string, Function>\r\n  /**\r\n   * resolved props options\r\n   * @internal\r\n   */\r\n  propsOptions: NormalizedPropsOptions\r\n  /**\r\n   * resolved emits options\r\n   * @internal\r\n   */\r\n  emitsOptions: ObjectEmitsOptions | null\r\n  /**\r\n   * resolved inheritAttrs options\r\n   * @internal\r\n   */\r\n  inheritAttrs?: boolean\r\n  /**\r\n   * is custom element?\r\n   */\r\n  isCE?: boolean\r\n  /**\r\n   * custom element specific HMR method\r\n   */\r\n  ceReload?: (newStyles?: string[]) => void\r\n\r\n  // the rest are only for stateful components ---------------------------------\r\n\r\n  // main proxy that serves as the public instance (`this`)\r\n  proxy: ComponentPublicInstance | null\r\n\r\n  // exposed properties via expose()\r\n  exposed: Record<string, any> | null\r\n  exposeProxy: Record<string, any> | null\r\n\r\n  /**\r\n   * alternative proxy used only for runtime-compiled render functions using\r\n   * `with` block\r\n   * @internal\r\n   */\r\n  withProxy: ComponentPublicInstance | null\r\n  /**\r\n   * This is the target for the public instance proxy. It also holds properties\r\n   * injected by user options (computed, methods etc.) and user-attached\r\n   * custom properties (via `this.x = ...`)\r\n   * @internal\r\n   */\r\n  ctx: Data\r\n\r\n  // state\r\n  data: Data\r\n  props: Data\r\n  attrs: Data\r\n  slots: InternalSlots\r\n  refs: Data\r\n  emit: EmitFn\r\n  /**\r\n   * used for keeping track of .once event handlers on components\r\n   * @internal\r\n   */\r\n  emitted: Record<string, boolean> | null\r\n  /**\r\n   * used for caching the value returned from props default factory functions to\r\n   * avoid unnecessary watcher trigger\r\n   * @internal\r\n   */\r\n  propsDefaults: Data\r\n  /**\r\n   * setup related\r\n   * @internal\r\n   */\r\n  setupState: Data\r\n  /**\r\n   * devtools access to additional info\r\n   * @internal\r\n   */\r\n  devtoolsRawSetupState?: any\r\n  /**\r\n   * @internal\r\n   */\r\n  setupContext: SetupContext | null\r\n\r\n  /**\r\n   * suspense related\r\n   * @internal\r\n   */\r\n  suspense: SuspenseBoundary | null\r\n  /**\r\n   * suspense pending batch id\r\n   * @internal\r\n   */\r\n  suspenseId: number\r\n  /**\r\n   * @internal\r\n   */\r\n  asyncDep: Promise<any> | null\r\n  /**\r\n   * @internal\r\n   */\r\n  asyncResolved: boolean\r\n\r\n  // lifecycle\r\n  isMounted: boolean\r\n  isUnmounted: boolean\r\n  isDeactivated: boolean\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_CREATE]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.CREATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_MOUNT]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.MOUNTED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_UPDATE]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.UPDATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_UNMOUNT]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.UNMOUNTED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.RENDER_TRACKED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.RENDER_TRIGGERED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.ACTIVATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.DEACTIVATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.ERROR_CAPTURED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.SERVER_PREFETCH]: LifecycleHook<() => Promise<unknown>>\r\n\r\n  /**\r\n   * For caching bound $forceUpdate on public proxy access\r\n   */\r\n  f?: () => void\r\n  /**\r\n   * For caching bound $nextTick on public proxy access\r\n   */\r\n  n?: () => Promise<void>\r\n}\r\n\r\nconst emptyAppContext = createAppContext()\r\n\r\nlet uid = 0\r\n\r\nexport function createComponentInstance(\r\n  vnode: VNode,\r\n  parent: ComponentInternalInstance | null,\r\n  suspense: SuspenseBoundary | null\r\n) {\r\n  const type = vnode.type as ConcreteComponent\r\n  // inherit parent app context - or - if root, adopt from root vnode\r\n  const appContext =\r\n    (parent ? parent.appContext : vnode.appContext) || emptyAppContext\r\n\r\n  const instance: ComponentInternalInstance = {\r\n    uid: uid++,\r\n    vnode,\r\n    type,\r\n    parent,\r\n    appContext,\r\n    root: null!, // to be immediately set\r\n    next: null,\r\n    subTree: null!, // will be set synchronously right after creation\r\n    effect: null!,\r\n    update: null!, // will be set synchronously right after creation\r\n    scope: new EffectScope(true /* detached */),\r\n    render: null,\r\n    proxy: null,\r\n    exposed: null,\r\n    exposeProxy: null,\r\n    withProxy: null,\r\n    provides: parent ? parent.provides : Object.create(appContext.provides),\r\n    accessCache: null!,\r\n    renderCache: [],\r\n\r\n    // local resolved assets\r\n    components: null,\r\n    directives: null,\r\n\r\n    // resolved props and emits options\r\n    propsOptions: normalizePropsOptions(type, appContext),\r\n    emitsOptions: normalizeEmitsOptions(type, appContext),\r\n\r\n    // emit\r\n    emit: null!, // to be set immediately\r\n    emitted: null,\r\n\r\n    // props default value\r\n    propsDefaults: EMPTY_OBJ,\r\n\r\n    // inheritAttrs\r\n    inheritAttrs: type.inheritAttrs,\r\n\r\n    // state\r\n    ctx: EMPTY_OBJ,\r\n    data: EMPTY_OBJ,\r\n    props: EMPTY_OBJ,\r\n    attrs: EMPTY_OBJ,\r\n    slots: EMPTY_OBJ,\r\n    refs: EMPTY_OBJ,\r\n    setupState: EMPTY_OBJ,\r\n    setupContext: null,\r\n\r\n    // suspense related\r\n    suspense,\r\n    suspenseId: suspense ? suspense.pendingId : 0,\r\n    asyncDep: null,\r\n    asyncResolved: false,\r\n\r\n    // lifecycle hooks\r\n    // not using enums here because it results in computed properties\r\n    isMounted: false,\r\n    isUnmounted: false,\r\n    isDeactivated: false,\r\n    bc: null,\r\n    c: null,\r\n    bm: null,\r\n    m: null,\r\n    bu: null,\r\n    u: null,\r\n    um: null,\r\n    bum: null,\r\n    da: null,\r\n    a: null,\r\n    rtg: null,\r\n    rtc: null,\r\n    ec: null,\r\n    sp: null\r\n  }\r\n  if (__DEV__) {\r\n    instance.ctx = createDevRenderContext(instance)\r\n  } else {\r\n    instance.ctx = { _: instance }\r\n  }\r\n  instance.root = parent ? parent.root : instance\r\n  instance.emit = emit.bind(null, instance)\r\n\r\n  // apply custom element special handling\r\n  if (vnode.ce) {\r\n    vnode.ce(instance)\r\n  }\r\n\r\n  return instance\r\n}\r\n\r\nexport let currentInstance: ComponentInternalInstance | null = null\r\n\r\nexport const getCurrentInstance: () => ComponentInternalInstance | null = () =>\r\n  currentInstance || currentRenderingInstance\r\n\r\nexport const setCurrentInstance = (instance: ComponentInternalInstance) => {\r\n  currentInstance = instance\r\n  instance.scope.on()\r\n}\r\n\r\nexport const unsetCurrentInstance = () => {\r\n  currentInstance && currentInstance.scope.off()\r\n  currentInstance = null\r\n}\r\n\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component')\r\n\r\nexport function validateComponentName(name: string, config: AppConfig) {\r\n  const appIsNativeTag = config.isNativeTag || NO\r\n  if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n    warn(\r\n      'Do not use built-in or reserved HTML elements as component id: ' + name\r\n    )\r\n  }\r\n}\r\n\r\nexport function isStatefulComponent(instance: ComponentInternalInstance) {\r\n  return instance.vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT\r\n}\r\n\r\nexport let isInSSRComponentSetup = false\r\n\r\nexport function setupComponent(\r\n  instance: ComponentInternalInstance,\r\n  isSSR = false\r\n) {\r\n  isInSSRComponentSetup = isSSR\r\n\r\n  const { props, children } = instance.vnode\r\n  const isStateful = isStatefulComponent(instance)\r\n  initProps(instance, props, isStateful, isSSR)\r\n  initSlots(instance, children)\r\n\r\n  const setupResult = isStateful\r\n    ? setupStatefulComponent(instance, isSSR)\r\n    : undefined\r\n  isInSSRComponentSetup = false\r\n  return setupResult\r\n}\r\n\r\nfunction setupStatefulComponent(\r\n  instance: ComponentInternalInstance,\r\n  isSSR: boolean\r\n) {\r\n  const Component = instance.type as ComponentOptions\r\n\r\n  if (__DEV__) {\r\n    if (Component.name) {\r\n      validateComponentName(Component.name, instance.appContext.config)\r\n    }\r\n    if (Component.components) {\r\n      const names = Object.keys(Component.components)\r\n      for (let i = 0; i < names.length; i++) {\r\n        validateComponentName(names[i], instance.appContext.config)\r\n      }\r\n    }\r\n    if (Component.directives) {\r\n      const names = Object.keys(Component.directives)\r\n      for (let i = 0; i < names.length; i++) {\r\n        validateDirectiveName(names[i])\r\n      }\r\n    }\r\n    if (Component.compilerOptions && isRuntimeOnly()) {\r\n      warn(\r\n        `\"compilerOptions\" is only supported when using a build of Vue that ` +\r\n          `includes the runtime compiler. Since you are using a runtime-only ` +\r\n          `build, the options should be passed via your build tool config instead.`\r\n      )\r\n    }\r\n  }\r\n  // 0. create render proxy property access cache\r\n  instance.accessCache = Object.create(null)\r\n  // 1. create public instance / render proxy\r\n  // also mark it raw so it's never observed\r\n  instance.proxy = markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers))\r\n  if (__DEV__) {\r\n    exposePropsOnRenderContext(instance)\r\n  }\r\n  // 2. call setup()\r\n  const { setup } = Component\r\n  if (setup) {\r\n    const setupContext = (instance.setupContext =\r\n      setup.length > 1 ? createSetupContext(instance) : null)\r\n\r\n    setCurrentInstance(instance)\r\n    pauseTracking()\r\n    const setupResult = callWithErrorHandling(\r\n      setup,\r\n      instance,\r\n      ErrorCodes.SETUP_FUNCTION,\r\n      [__DEV__ ? shallowReadonly(instance.props) : instance.props, setupContext]\r\n    )\r\n    resetTracking()\r\n    unsetCurrentInstance()\r\n\r\n    if (isPromise(setupResult)) {\r\n      setupResult.then(unsetCurrentInstance, unsetCurrentInstance)\r\n      if (isSSR) {\r\n        // return the promise so server-renderer can wait on it\r\n        return setupResult\r\n          .then((resolvedResult: unknown) => {\r\n            handleSetupResult(instance, resolvedResult, isSSR)\r\n          })\r\n          .catch(e => {\r\n            handleError(e, instance, ErrorCodes.SETUP_FUNCTION)\r\n          })\r\n      } else if (__FEATURE_SUSPENSE__) {\r\n        // async setup returned Promise.\r\n        // bail here and wait for re-entry.\r\n        instance.asyncDep = setupResult\r\n        if (__DEV__ && !instance.suspense) {\r\n          const name = Component.name ?? 'Anonymous'\r\n          warn(\r\n            `Component <${name}>: setup function returned a promise, but no ` +\r\n              `<Suspense> boundary was found in the parent component tree. ` +\r\n              `A component with async setup() must be nested in a <Suspense> ` +\r\n              `in order to be rendered.`\r\n          )\r\n        }\r\n      } else if (__DEV__) {\r\n        warn(\r\n          `setup() returned a Promise, but the version of Vue you are using ` +\r\n            `does not support it yet.`\r\n        )\r\n      }\r\n    } else {\r\n      handleSetupResult(instance, setupResult, isSSR)\r\n    }\r\n  } else {\r\n    finishComponentSetup(instance, isSSR)\r\n  }\r\n}\r\n\r\nexport function handleSetupResult(\r\n  instance: ComponentInternalInstance,\r\n  setupResult: unknown,\r\n  isSSR: boolean\r\n) {\r\n  if (isFunction(setupResult)) {\r\n    // setup returned an inline render function\r\n    if (__SSR__ && (instance.type as ComponentOptions).__ssrInlineRender) {\r\n      // when the function's name is `ssrRender` (compiled by SFC inline mode),\r\n      // set it as ssrRender instead.\r\n      instance.ssrRender = setupResult\r\n    } else {\r\n      instance.render = setupResult as InternalRenderFunction\r\n    }\r\n  } else if (isObject(setupResult)) {\r\n    if (__DEV__ && isVNode(setupResult)) {\r\n      warn(\r\n        `setup() should not return VNodes directly - ` +\r\n          `return a render function instead.`\r\n      )\r\n    }\r\n    // setup returned bindings.\r\n    // assuming a render function compiled from template is present.\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      instance.devtoolsRawSetupState = setupResult\r\n    }\r\n    instance.setupState = proxyRefs(setupResult)\r\n    if (__DEV__) {\r\n      exposeSetupStateOnRenderContext(instance)\r\n    }\r\n  } else if (__DEV__ && setupResult !== undefined) {\r\n    warn(\r\n      `setup() should return an object. Received: ${\r\n        setupResult === null ? 'null' : typeof setupResult\r\n      }`\r\n    )\r\n  }\r\n  finishComponentSetup(instance, isSSR)\r\n}\r\n\r\ntype CompileFunction = (\r\n  template: string | object,\r\n  options?: CompilerOptions\r\n) => InternalRenderFunction\r\n\r\nlet compile: CompileFunction | undefined\r\nlet installWithProxy: (i: ComponentInternalInstance) => void\r\n\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nexport function registerRuntimeCompiler(_compile: any) {\r\n  compile = _compile\r\n  installWithProxy = i => {\r\n    if (i.render!._rc) {\r\n      i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers)\r\n    }\r\n  }\r\n}\r\n\r\n// dev only\r\nexport const isRuntimeOnly = () => !compile\r\n\r\nexport function finishComponentSetup(\r\n  instance: ComponentInternalInstance,\r\n  isSSR: boolean,\r\n  skipOptions?: boolean\r\n) {\r\n  const Component = instance.type as ComponentOptions\r\n\r\n  if (__COMPAT__) {\r\n    convertLegacyRenderFn(instance)\r\n\r\n    if (__DEV__ && Component.compatConfig) {\r\n      validateCompatConfig(Component.compatConfig)\r\n    }\r\n  }\r\n\r\n  // template / render function normalization\r\n  // could be already set when returned from setup()\r\n  if (!instance.render) {\r\n    // only do on-the-fly compile if not in SSR - SSR on-the-fly compilation\r\n    // is done by server-renderer\r\n    if (!isSSR && compile && !Component.render) {\r\n      const template =\r\n        (__COMPAT__ &&\r\n          instance.vnode.props &&\r\n          instance.vnode.props['inline-template']) ||\r\n        Component.template\r\n      if (template) {\r\n        if (__DEV__) {\r\n          startMeasure(instance, `compile`)\r\n        }\r\n        const { isCustomElement, compilerOptions } = instance.appContext.config\r\n        const { delimiters, compilerOptions: componentCompilerOptions } =\r\n          Component\r\n        const finalCompilerOptions: CompilerOptions = extend(\r\n          extend(\r\n            {\r\n              isCustomElement,\r\n              delimiters\r\n            },\r\n            compilerOptions\r\n          ),\r\n          componentCompilerOptions\r\n        )\r\n        if (__COMPAT__) {\r\n          // pass runtime compat config into the compiler\r\n          finalCompilerOptions.compatConfig = Object.create(globalCompatConfig)\r\n          if (Component.compatConfig) {\r\n            // @ts-expect-error types are not compatible\r\n            extend(finalCompilerOptions.compatConfig, Component.compatConfig)\r\n          }\r\n        }\r\n        Component.render = compile(template, finalCompilerOptions)\r\n        if (__DEV__) {\r\n          endMeasure(instance, `compile`)\r\n        }\r\n      }\r\n    }\r\n\r\n    instance.render = (Component.render || NOOP) as InternalRenderFunction\r\n\r\n    // for runtime-compiled render functions using `with` blocks, the render\r\n    // proxy used needs a different `has` handler which is more performant and\r\n    // also only allows a whitelist of globals to fallthrough.\r\n    if (installWithProxy) {\r\n      installWithProxy(instance)\r\n    }\r\n  }\r\n\r\n  // support for 2.x options\r\n  if (__FEATURE_OPTIONS_API__ && !(__COMPAT__ && skipOptions)) {\r\n    setCurrentInstance(instance)\r\n    pauseTracking()\r\n    applyOptions(instance)\r\n    resetTracking()\r\n    unsetCurrentInstance()\r\n  }\r\n\r\n  // warn missing template/render\r\n  // the runtime compilation of template in SSR is done by server-render\r\n  if (__DEV__ && !Component.render && instance.render === NOOP && !isSSR) {\r\n    /* istanbul ignore if */\r\n    if (!compile && Component.template) {\r\n      warn(\r\n        `Component provided template option but ` +\r\n          `runtime compilation is not supported in this build of Vue.` +\r\n          (__ESM_BUNDLER__\r\n            ? ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n            : __ESM_BROWSER__\r\n            ? ` Use \"vue.esm-browser.js\" instead.`\r\n            : __GLOBAL__\r\n            ? ` Use \"vue.global.js\" instead.`\r\n            : ``) /* should not happen */\r\n      )\r\n    } else {\r\n      warn(`Component is missing template or render function.`)\r\n    }\r\n  }\r\n}\r\n\r\nfunction createAttrsProxy(instance: ComponentInternalInstance): Data {\r\n  return new Proxy(\r\n    instance.attrs,\r\n    __DEV__\r\n      ? {\r\n          get(target, key: string) {\r\n            markAttrsAccessed()\r\n            track(instance, TrackOpTypes.GET, '$attrs')\r\n            return target[key]\r\n          },\r\n          set() {\r\n            warn(`setupContext.attrs is readonly.`)\r\n            return false\r\n          },\r\n          deleteProperty() {\r\n            warn(`setupContext.attrs is readonly.`)\r\n            return false\r\n          }\r\n        }\r\n      : {\r\n          get(target, key: string) {\r\n            track(instance, TrackOpTypes.GET, '$attrs')\r\n            return target[key]\r\n          }\r\n        }\r\n  )\r\n}\r\n\r\nexport function createSetupContext(\r\n  instance: ComponentInternalInstance\r\n): SetupContext {\r\n  const expose: SetupContext['expose'] = exposed => {\r\n    if (__DEV__ && instance.exposed) {\r\n      warn(`expose() should be called only once per setup().`)\r\n    }\r\n    instance.exposed = exposed || {}\r\n  }\r\n\r\n  let attrs: Data\r\n  if (__DEV__) {\r\n    // We use getters in dev in case libs like test-utils overwrite instance\r\n    // properties (overwrites should not be done in prod)\r\n    return Object.freeze({\r\n      get attrs() {\r\n        return attrs || (attrs = createAttrsProxy(instance))\r\n      },\r\n      get slots() {\r\n        return shallowReadonly(instance.slots)\r\n      },\r\n      get emit() {\r\n        return (event: string, ...args: any[]) => instance.emit(event, ...args)\r\n      },\r\n      expose\r\n    })\r\n  } else {\r\n    return {\r\n      get attrs() {\r\n        return attrs || (attrs = createAttrsProxy(instance))\r\n      },\r\n      slots: instance.slots,\r\n      emit: instance.emit,\r\n      expose\r\n    }\r\n  }\r\n}\r\n\r\nexport function getExposeProxy(instance: ComponentInternalInstance) {\r\n  if (instance.exposed) {\r\n    return (\r\n      instance.exposeProxy ||\r\n      (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\r\n        get(target, key: string) {\r\n          if (key in target) {\r\n            return target[key]\r\n          } else if (key in publicPropertiesMap) {\r\n            return publicPropertiesMap[key](instance)\r\n          }\r\n        }\r\n      }))\r\n    )\r\n  }\r\n}\r\n\r\nconst classifyRE = /(?:^|[-_])(\\w)/g\r\nconst classify = (str: string): string =>\r\n  str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '')\r\n\r\nexport function getComponentName(\r\n  Component: ConcreteComponent,\r\n  includeInferred = true\r\n): string | false | undefined {\r\n  return isFunction(Component)\r\n    ? Component.displayName || Component.name\r\n    : Component.name || (includeInferred && Component.__name)\r\n}\r\n\r\n/* istanbul ignore next */\r\nexport function formatComponentName(\r\n  instance: ComponentInternalInstance | null,\r\n  Component: ConcreteComponent,\r\n  isRoot = false\r\n): string {\r\n  let name = getComponentName(Component)\r\n  if (!name && Component.__file) {\r\n    const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/)\r\n    if (match) {\r\n      name = match[1]\r\n    }\r\n  }\r\n\r\n  if (!name && instance && instance.parent) {\r\n    // try to infer the name based on reverse resolution\r\n    const inferFromRegistry = (registry: Record<string, any> | undefined) => {\r\n      for (const key in registry) {\r\n        if (registry[key] === Component) {\r\n          return key\r\n        }\r\n      }\r\n    }\r\n    name =\r\n      inferFromRegistry(\r\n        instance.components ||\r\n          (instance.parent.type as ComponentOptions).components\r\n      ) || inferFromRegistry(instance.appContext.components)\r\n  }\r\n\r\n  return name ? classify(name) : isRoot ? `App` : `Anonymous`\r\n}\r\n\r\nexport function isClassComponent(value: unknown): value is ClassComponent {\r\n  return isFunction(value) && '__vccOpts' in value\r\n}\r\n","import { computed as _computed } from '@vue/reactivity'\r\nimport { isInSSRComponentSetup } from './component'\r\n\r\nexport const computed = ((getterOrOptions: any, debugOptions?: any) => {\r\n  // @ts-ignore\r\n  return _computed(getterOrOptions, debugOptions, isInSSRComponentSetup)\r\n}) as typeof _computed\r\n","import { ComponentPropsOptions } from '@vue/runtime-core'\r\nimport { isArray, isPromise, isFunction } from '@vue/shared'\r\nimport {\r\n  getCurrentInstance,\r\n  setCurrentInstance,\r\n  SetupContext,\r\n  createSetupContext,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport { EmitFn, EmitsOptions } from './componentEmits'\r\nimport { ComponentObjectPropsOptions, ExtractPropTypes } from './componentProps'\r\nimport { warn } from './warning'\r\n\r\n// dev only\r\nconst warnRuntimeUsage = (method: string) =>\r\n  warn(\r\n    `${method}() is a compiler-hint helper that is only usable inside ` +\r\n      `<script setup> of a single file component. Its arguments should be ` +\r\n      `compiled away and passing it at runtime has no effect.`\r\n  )\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring component props. The\r\n * expected argument is the same as the component `props` option.\r\n *\r\n * Example runtime declaration:\r\n * ```js\r\n * // using Array syntax\r\n * const props = defineProps(['foo', 'bar'])\r\n * // using Object syntax\r\n * const props = defineProps({\r\n *   foo: String,\r\n *   bar: {\r\n *     type: Number,\r\n *     required: true\r\n *   }\r\n * })\r\n * ```\r\n *\r\n * Equivalent type-based declaration:\r\n * ```ts\r\n * // will be compiled into equivalent runtime declarations\r\n * const props = defineProps<{\r\n *   foo?: string\r\n *   bar: number\r\n * }>()\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\n// overload 1: runtime props w/ array\r\nexport function defineProps<PropNames extends string = string>(\r\n  props: PropNames[]\r\n): Readonly<{ [key in PropNames]?: any }>\r\n// overload 2: runtime props w/ object\r\nexport function defineProps<\r\n  PP extends ComponentObjectPropsOptions = ComponentObjectPropsOptions\r\n>(props: PP): Readonly<ExtractPropTypes<PP>>\r\n// overload 3: typed-based declaration\r\nexport function defineProps<TypeProps>(): Readonly<TypeProps>\r\n// implementation\r\nexport function defineProps() {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`defineProps`)\r\n  }\r\n  return null as any\r\n}\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's emitted\r\n * events. The expected argument is the same as the component `emits` option.\r\n *\r\n * Example runtime declaration:\r\n * ```js\r\n * const emit = defineEmits(['change', 'update'])\r\n * ```\r\n *\r\n * Example type-based declaration:\r\n * ```ts\r\n * const emit = defineEmits<{\r\n *   (event: 'change'): void\r\n *   (event: 'update', id: number): void\r\n * }>()\r\n *\r\n * emit('change')\r\n * emit('update', 1)\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\n// overload 1: runtime emits w/ array\r\nexport function defineEmits<EE extends string = string>(\r\n  emitOptions: EE[]\r\n): EmitFn<EE[]>\r\nexport function defineEmits<E extends EmitsOptions = EmitsOptions>(\r\n  emitOptions: E\r\n): EmitFn<E>\r\nexport function defineEmits<TypeEmit>(): TypeEmit\r\n// implementation\r\nexport function defineEmits() {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`defineEmits`)\r\n  }\r\n  return null as any\r\n}\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's exposed\r\n * instance properties when it is accessed by a parent component via template\r\n * refs.\r\n *\r\n * `<script setup>` components are closed by default - i.e. variables inside\r\n * the `<script setup>` scope is not exposed to parent unless explicitly exposed\r\n * via `defineExpose`.\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\nexport function defineExpose<\r\n  Exposed extends Record<string, any> = Record<string, any>\r\n>(exposed?: Exposed) {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`defineExpose`)\r\n  }\r\n}\r\n\r\ntype NotUndefined<T> = T extends undefined ? never : T\r\n\r\ntype InferDefaults<T> = {\r\n  [K in keyof T]?: InferDefault<T, NotUndefined<T[K]>>\r\n}\r\n\r\ntype InferDefault<P, T> = T extends\r\n  | null\r\n  | number\r\n  | string\r\n  | boolean\r\n  | symbol\r\n  | Function\r\n  ? T | ((props: P) => T)\r\n  : (props: P) => T\r\n\r\ntype PropsWithDefaults<Base, Defaults> = Base & {\r\n  [K in keyof Defaults]: K extends keyof Base ? NotUndefined<Base[K]> : never\r\n}\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for providing props default values when\r\n * using type-based `defineProps` declaration.\r\n *\r\n * Example usage:\r\n * ```ts\r\n * withDefaults(defineProps<{\r\n *   size?: number\r\n *   labels?: string[]\r\n * }>(), {\r\n *   size: 3,\r\n *   labels: () => ['default label']\r\n * })\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the output\r\n * and should **not** be actually called at runtime.\r\n */\r\nexport function withDefaults<Props, Defaults extends InferDefaults<Props>>(\r\n  props: Props,\r\n  defaults: Defaults\r\n): PropsWithDefaults<Props, Defaults> {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`withDefaults`)\r\n  }\r\n  return null as any\r\n}\r\n\r\nexport function useSlots(): SetupContext['slots'] {\r\n  return getContext().slots\r\n}\r\n\r\nexport function useAttrs(): SetupContext['attrs'] {\r\n  return getContext().attrs\r\n}\r\n\r\nfunction getContext(): SetupContext {\r\n  const i = getCurrentInstance()!\r\n  if (__DEV__ && !i) {\r\n    warn(`useContext() called without active instance.`)\r\n  }\r\n  return i.setupContext || (i.setupContext = createSetupContext(i))\r\n}\r\n\r\n/**\r\n * Runtime helper for merging default declarations. Imported by compiled code\r\n * only.\r\n * @internal\r\n */\r\nexport function mergeDefaults(\r\n  raw: ComponentPropsOptions,\r\n  defaults: Record<string, any>\r\n): ComponentObjectPropsOptions {\r\n  const props = isArray(raw)\r\n    ? raw.reduce(\r\n        (normalized, p) => ((normalized[p] = {}), normalized),\r\n        {} as ComponentObjectPropsOptions\r\n      )\r\n    : raw\r\n  for (const key in defaults) {\r\n    const opt = props[key]\r\n    if (opt) {\r\n      if (isArray(opt) || isFunction(opt)) {\r\n        props[key] = { type: opt, default: defaults[key] }\r\n      } else {\r\n        opt.default = defaults[key]\r\n      }\r\n    } else if (opt === null) {\r\n      props[key] = { default: defaults[key] }\r\n    } else if (__DEV__) {\r\n      warn(`props default key \"${key}\" has no corresponding declaration.`)\r\n    }\r\n  }\r\n  return props\r\n}\r\n\r\n/**\r\n * Used to create a proxy for the rest element when destructuring props with\r\n * defineProps().\r\n * @internal\r\n */\r\nexport function createPropsRestProxy(\r\n  props: any,\r\n  excludedKeys: string[]\r\n): Record<string, any> {\r\n  const ret: Record<string, any> = {}\r\n  for (const key in props) {\r\n    if (!excludedKeys.includes(key)) {\r\n      Object.defineProperty(ret, key, {\r\n        enumerable: true,\r\n        get: () => props[key]\r\n      })\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\n/**\r\n * `<script setup>` helper for persisting the current instance context over\r\n * async/await flows.\r\n *\r\n * `@vue/compiler-sfc` converts the following:\r\n *\r\n * ```ts\r\n * const x = await foo()\r\n * ```\r\n *\r\n * into:\r\n *\r\n * ```ts\r\n * let __temp, __restore\r\n * const x = (([__temp, __restore] = withAsyncContext(() => foo())),__temp=await __temp,__restore(),__temp)\r\n * ```\r\n * @internal\r\n */\r\nexport function withAsyncContext(getAwaitable: () => any) {\r\n  const ctx = getCurrentInstance()!\r\n  if (__DEV__ && !ctx) {\r\n    warn(\r\n      `withAsyncContext called without active current instance. ` +\r\n        `This is likely a bug.`\r\n    )\r\n  }\r\n  let awaitable = getAwaitable()\r\n  unsetCurrentInstance()\r\n  if (isPromise(awaitable)) {\r\n    awaitable = awaitable.catch(e => {\r\n      setCurrentInstance(ctx)\r\n      throw e\r\n    })\r\n  }\r\n  return [awaitable, () => setCurrentInstance(ctx)]\r\n}\r\n","import {\r\n  VNode,\r\n  VNodeProps,\r\n  createVNode,\r\n  VNodeArrayChildren,\r\n  Fragment,\r\n  Text,\r\n  Comment,\r\n  isVNode\r\n} from './vnode'\r\nimport { Teleport, TeleportProps } from './components/Teleport'\r\nimport { Suspense, SuspenseProps } from './components/Suspense'\r\nimport { isObject, isArray } from '@vue/shared'\r\nimport { RawSlots } from './componentSlots'\r\nimport {\r\n  FunctionalComponent,\r\n  Component,\r\n  ComponentOptions,\r\n  ConcreteComponent\r\n} from './component'\r\nimport { EmitsOptions } from './componentEmits'\r\nimport { DefineComponent } from './apiDefineComponent'\r\n\r\n// `h` is a more user-friendly version of `createVNode` that allows omitting the\r\n// props when possible. It is intended for manually written render functions.\r\n// Compiler-generated code uses `createVNode` because\r\n// 1. it is monomorphic and avoids the extra call overhead\r\n// 2. it allows specifying patchFlags for optimization\r\n\r\n/*\r\n// type only\r\nh('div')\r\n\r\n// type + props\r\nh('div', {})\r\n\r\n// type + omit props + children\r\n// Omit props does NOT support named slots\r\nh('div', []) // array\r\nh('div', 'foo') // text\r\nh('div', h('br')) // vnode\r\nh(Component, () => {}) // default slot\r\n\r\n// type + props + children\r\nh('div', {}, []) // array\r\nh('div', {}, 'foo') // text\r\nh('div', {}, h('br')) // vnode\r\nh(Component, {}, () => {}) // default slot\r\nh(Component, {}, {}) // named slots\r\n\r\n// named slots without props requires explicit `null` to avoid ambiguity\r\nh(Component, null, {})\r\n**/\r\n\r\ntype RawProps = VNodeProps & {\r\n  // used to differ from a single VNode object as children\r\n  __v_isVNode?: never\r\n  // used to differ from Array children\r\n  [Symbol.iterator]?: never\r\n} & Record<string, any>\r\n\r\ntype RawChildren =\r\n  | string\r\n  | number\r\n  | boolean\r\n  | VNode\r\n  | VNodeArrayChildren\r\n  | (() => any)\r\n\r\n// fake constructor type returned from `defineComponent`\r\ninterface Constructor<P = any> {\r\n  __isFragment?: never\r\n  __isTeleport?: never\r\n  __isSuspense?: never\r\n  new (...args: any[]): { $props: P }\r\n}\r\n\r\n// The following is a series of overloads for providing props validation of\r\n// manually written render functions.\r\n\r\n// element\r\nexport function h(type: string, children?: RawChildren): VNode\r\nexport function h(\r\n  type: string,\r\n  props?: RawProps | null,\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// text/comment\r\nexport function h(\r\n  type: typeof Text | typeof Comment,\r\n  children?: string | number | boolean\r\n): VNode\r\nexport function h(\r\n  type: typeof Text | typeof Comment,\r\n  props?: null,\r\n  children?: string | number | boolean\r\n): VNode\r\n// fragment\r\nexport function h(type: typeof Fragment, children?: VNodeArrayChildren): VNode\r\nexport function h(\r\n  type: typeof Fragment,\r\n  props?: RawProps | null,\r\n  children?: VNodeArrayChildren\r\n): VNode\r\n\r\n// teleport (target prop is required)\r\nexport function h(\r\n  type: typeof Teleport,\r\n  props: RawProps & TeleportProps,\r\n  children: RawChildren\r\n): VNode\r\n\r\n// suspense\r\nexport function h(type: typeof Suspense, children?: RawChildren): VNode\r\nexport function h(\r\n  type: typeof Suspense,\r\n  props?: (RawProps & SuspenseProps) | null,\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// functional component\r\nexport function h<P, E extends EmitsOptions = {}>(\r\n  type: FunctionalComponent<P, E>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// catch-all for generic component types\r\nexport function h(type: Component, children?: RawChildren): VNode\r\n\r\n// concrete component\r\nexport function h<P>(\r\n  type: ConcreteComponent | string,\r\n  children?: RawChildren\r\n): VNode\r\nexport function h<P>(\r\n  type: ConcreteComponent<P> | string,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren\r\n): VNode\r\n\r\n// component without props\r\nexport function h(\r\n  type: Component,\r\n  props: null,\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// exclude `defineComponent` constructors\r\nexport function h<P>(\r\n  type: ComponentOptions<P>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// fake constructor type returned by `defineComponent` or class component\r\nexport function h(type: Constructor, children?: RawChildren): VNode\r\nexport function h<P>(\r\n  type: Constructor<P>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// fake constructor type returned by `defineComponent`\r\nexport function h(type: DefineComponent, children?: RawChildren): VNode\r\nexport function h<P>(\r\n  type: DefineComponent<P>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// Actual implementation\r\nexport function h(type: any, propsOrChildren?: any, children?: any): VNode {\r\n  const l = arguments.length\r\n  if (l === 2) {\r\n    if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n      // single vnode without props\r\n      if (isVNode(propsOrChildren)) {\r\n        return createVNode(type, null, [propsOrChildren])\r\n      }\r\n      // props without children\r\n      return createVNode(type, propsOrChildren)\r\n    } else {\r\n      // omit props\r\n      return createVNode(type, null, propsOrChildren)\r\n    }\r\n  } else {\r\n    if (l > 3) {\r\n      children = Array.prototype.slice.call(arguments, 2)\r\n    } else if (l === 3 && isVNode(children)) {\r\n      children = [children]\r\n    }\r\n    return createVNode(type, propsOrChildren, children)\r\n  }\r\n}\r\n","import { inject } from '../apiInject'\r\nimport { warn } from '../warning'\r\n\r\nexport const ssrContextKey = Symbol(__DEV__ ? `ssrContext` : ``)\r\n\r\nexport const useSSRContext = <T = Record<string, any>>() => {\r\n  if (!__GLOBAL__) {\r\n    const ctx = inject<T>(ssrContextKey)\r\n    if (!ctx) {\r\n      warn(\r\n        `Server rendering context not provided. Make sure to only call ` +\r\n          `useSSRContext() conditionally in the server build.`\r\n      )\r\n    }\r\n    return ctx\r\n  } else if (__DEV__) {\r\n    warn(`useSSRContext() is not supported in the global build.`)\r\n  }\r\n}\r\n","import { isReactive, isReadonly, isRef, Ref, toRaw } from '@vue/reactivity'\r\nimport { EMPTY_OBJ, extend, isArray, isFunction, isObject } from '@vue/shared'\r\nimport { isShallow } from '../../reactivity/src/reactive'\r\nimport { ComponentInternalInstance, ComponentOptions } from './component'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\n\r\nexport function initCustomFormatter() {\r\n  /* eslint-disable no-restricted-globals */\r\n  if (!__DEV__ || typeof window === 'undefined') {\r\n    return\r\n  }\r\n\r\n  const vueStyle = { style: 'color:#3ba776' }\r\n  const numberStyle = { style: 'color:#0b1bc9' }\r\n  const stringStyle = { style: 'color:#b62e24' }\r\n  const keywordStyle = { style: 'color:#9d288c' }\r\n\r\n  // custom formatter for Chrome\r\n  // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n  const formatter = {\r\n    header(obj: unknown) {\r\n      // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n      if (!isObject(obj)) {\r\n        return null\r\n      }\r\n\r\n      if (obj.__isVue) {\r\n        return ['div', vueStyle, `VueInstance`]\r\n      } else if (isRef(obj)) {\r\n        return [\r\n          'div',\r\n          {},\r\n          ['span', vueStyle, genRefFlag(obj)],\r\n          '<',\r\n          formatValue(obj.value),\r\n          `>`\r\n        ]\r\n      } else if (isReactive(obj)) {\r\n        return [\r\n          'div',\r\n          {},\r\n          ['span', vueStyle, isShallow(obj) ? 'ShallowReactive' : 'Reactive'],\r\n          '<',\r\n          formatValue(obj),\r\n          `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n        ]\r\n      } else if (isReadonly(obj)) {\r\n        return [\r\n          'div',\r\n          {},\r\n          ['span', vueStyle, isShallow(obj) ? 'ShallowReadonly' : 'Readonly'],\r\n          '<',\r\n          formatValue(obj),\r\n          '>'\r\n        ]\r\n      }\r\n      return null\r\n    },\r\n    hasBody(obj: unknown) {\r\n      return obj && (obj as any).__isVue\r\n    },\r\n    body(obj: unknown) {\r\n      if (obj && (obj as any).__isVue) {\r\n        return [\r\n          'div',\r\n          {},\r\n          ...formatInstance((obj as ComponentPublicInstance).$)\r\n        ]\r\n      }\r\n    }\r\n  }\r\n\r\n  function formatInstance(instance: ComponentInternalInstance) {\r\n    const blocks = []\r\n    if (instance.type.props && instance.props) {\r\n      blocks.push(createInstanceBlock('props', toRaw(instance.props)))\r\n    }\r\n    if (instance.setupState !== EMPTY_OBJ) {\r\n      blocks.push(createInstanceBlock('setup', instance.setupState))\r\n    }\r\n    if (instance.data !== EMPTY_OBJ) {\r\n      blocks.push(createInstanceBlock('data', toRaw(instance.data)))\r\n    }\r\n    const computed = extractKeys(instance, 'computed')\r\n    if (computed) {\r\n      blocks.push(createInstanceBlock('computed', computed))\r\n    }\r\n    const injected = extractKeys(instance, 'inject')\r\n    if (injected) {\r\n      blocks.push(createInstanceBlock('injected', injected))\r\n    }\r\n\r\n    blocks.push([\r\n      'div',\r\n      {},\r\n      [\r\n        'span',\r\n        {\r\n          style: keywordStyle.style + ';opacity:0.66'\r\n        },\r\n        '$ (internal): '\r\n      ],\r\n      ['object', { object: instance }]\r\n    ])\r\n    return blocks\r\n  }\r\n\r\n  function createInstanceBlock(type: string, target: any) {\r\n    target = extend({}, target)\r\n    if (!Object.keys(target).length) {\r\n      return ['span', {}]\r\n    }\r\n    return [\r\n      'div',\r\n      { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n      [\r\n        'div',\r\n        {\r\n          style: 'color:#476582'\r\n        },\r\n        type\r\n      ],\r\n      [\r\n        'div',\r\n        {\r\n          style: 'padding-left:1.25em'\r\n        },\r\n        ...Object.keys(target).map(key => {\r\n          return [\r\n            'div',\r\n            {},\r\n            ['span', keywordStyle, key + ': '],\r\n            formatValue(target[key], false)\r\n          ]\r\n        })\r\n      ]\r\n    ]\r\n  }\r\n\r\n  function formatValue(v: unknown, asRaw = true) {\r\n    if (typeof v === 'number') {\r\n      return ['span', numberStyle, v]\r\n    } else if (typeof v === 'string') {\r\n      return ['span', stringStyle, JSON.stringify(v)]\r\n    } else if (typeof v === 'boolean') {\r\n      return ['span', keywordStyle, v]\r\n    } else if (isObject(v)) {\r\n      return ['object', { object: asRaw ? toRaw(v) : v }]\r\n    } else {\r\n      return ['span', stringStyle, String(v)]\r\n    }\r\n  }\r\n\r\n  function extractKeys(instance: ComponentInternalInstance, type: string) {\r\n    const Comp = instance.type\r\n    if (isFunction(Comp)) {\r\n      return\r\n    }\r\n    const extracted: Record<string, any> = {}\r\n    for (const key in instance.ctx) {\r\n      if (isKeyOfType(Comp, key, type)) {\r\n        extracted[key] = instance.ctx[key]\r\n      }\r\n    }\r\n    return extracted\r\n  }\r\n\r\n  function isKeyOfType(Comp: ComponentOptions, key: string, type: string) {\r\n    const opts = Comp[type]\r\n    if (\r\n      (isArray(opts) && opts.includes(key)) ||\r\n      (isObject(opts) && key in opts)\r\n    ) {\r\n      return true\r\n    }\r\n    if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n      return true\r\n    }\r\n    if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  function genRefFlag(v: Ref) {\r\n    if (isShallow(v)) {\r\n      return `ShallowRef`\r\n    }\r\n    if ((v as any).effect) {\r\n      return `ComputedRef`\r\n    }\r\n    return `Ref`\r\n  }\r\n\r\n  if ((window as any).devtoolsFormatters) {\r\n    ;(window as any).devtoolsFormatters.push(formatter)\r\n  } else {\r\n    ;(window as any).devtoolsFormatters = [formatter]\r\n  }\r\n}\r\n","import { hasChanged } from '@vue/shared'\r\nimport { currentBlock, isBlockTreeEnabled, VNode } from '../vnode'\r\n\r\nexport function withMemo(\r\n  memo: any[],\r\n  render: () => VNode<any, any>,\r\n  cache: any[],\r\n  index: number\r\n) {\r\n  const cached = cache[index] as VNode | undefined\r\n  if (cached && isMemoSame(cached, memo)) {\r\n    return cached\r\n  }\r\n  const ret = render()\r\n\r\n  // shallow clone\r\n  ret.memo = memo.slice()\r\n  return (cache[index] = ret)\r\n}\r\n\r\nexport function isMemoSame(cached: VNode, memo: any[]) {\r\n  const prev: any[] = cached.memo!\r\n  if (prev.length != memo.length) {\r\n    return false\r\n  }\r\n  \r\n  for (let i = 0; i < prev.length; i++) {\r\n    if (hasChanged(prev[i], memo[i])) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // make sure to let parent block track it when returning cached\r\n  if (isBlockTreeEnabled > 0 && currentBlock) {\r\n    currentBlock.push(cached)\r\n  }\r\n  return true\r\n}\r\n","// Core API ------------------------------------------------------------------\r\n\r\nexport const version = __VERSION__\r\nexport {\r\n  // core\r\n  reactive,\r\n  ref,\r\n  readonly,\r\n  // utilities\r\n  unref,\r\n  proxyRefs,\r\n  isRef,\r\n  toRef,\r\n  toRefs,\r\n  isProxy,\r\n  isReactive,\r\n  isReadonly,\r\n  isShallow,\r\n  // advanced\r\n  customRef,\r\n  triggerRef,\r\n  shallowRef,\r\n  shallowReactive,\r\n  shallowReadonly,\r\n  markRaw,\r\n  toRaw,\r\n  // effect\r\n  effect,\r\n  stop,\r\n  ReactiveEffect,\r\n  // effect scope\r\n  effectScope,\r\n  EffectScope,\r\n  getCurrentScope,\r\n  onScopeDispose\r\n} from '@vue/reactivity'\r\nexport { computed } from './apiComputed'\r\nexport {\r\n  watch,\r\n  watchEffect,\r\n  watchPostEffect,\r\n  watchSyncEffect\r\n} from './apiWatch'\r\nexport {\r\n  onBeforeMount,\r\n  onMounted,\r\n  onBeforeUpdate,\r\n  onUpdated,\r\n  onBeforeUnmount,\r\n  onUnmounted,\r\n  onActivated,\r\n  onDeactivated,\r\n  onRenderTracked,\r\n  onRenderTriggered,\r\n  onErrorCaptured,\r\n  onServerPrefetch\r\n} from './apiLifecycle'\r\nexport { provide, inject } from './apiInject'\r\nexport { nextTick } from './scheduler'\r\nexport { defineComponent } from './apiDefineComponent'\r\nexport { defineAsyncComponent } from './apiAsyncComponent'\r\nexport { useAttrs, useSlots } from './apiSetupHelpers'\r\n\r\n// <script setup> API ----------------------------------------------------------\r\n\r\nexport {\r\n  // macros runtime, for typing and warnings only\r\n  defineProps,\r\n  defineEmits,\r\n  defineExpose,\r\n  withDefaults,\r\n  // internal\r\n  mergeDefaults,\r\n  createPropsRestProxy,\r\n  withAsyncContext\r\n} from './apiSetupHelpers'\r\n\r\n// Advanced API ----------------------------------------------------------------\r\n\r\n// For getting a hold of the internal instance in setup() - useful for advanced\r\n// plugins\r\nexport { getCurrentInstance } from './component'\r\n\r\n// For raw render function users\r\nexport { h } from './h'\r\n// Advanced render function utilities\r\nexport { createVNode, cloneVNode, mergeProps, isVNode } from './vnode'\r\n// VNode types\r\nexport { Fragment, Text, Comment, Static, VNodeRef } from './vnode'\r\n// Built-in components\r\nexport { Teleport, TeleportProps } from './components/Teleport'\r\nexport { Suspense, SuspenseProps } from './components/Suspense'\r\nexport { KeepAlive, KeepAliveProps } from './components/KeepAlive'\r\nexport {\r\n  BaseTransition,\r\n  BaseTransitionProps\r\n} from './components/BaseTransition'\r\n// For using custom directives\r\nexport { withDirectives } from './directives'\r\n// SSR context\r\nexport { useSSRContext, ssrContextKey } from './helpers/useSsrContext'\r\n\r\n// Custom Renderer API ---------------------------------------------------------\r\n\r\nexport { createRenderer, createHydrationRenderer } from './renderer'\r\nexport { queuePostFlushCb } from './scheduler'\r\nexport { warn } from './warning'\r\nexport {\r\n  handleError,\r\n  callWithErrorHandling,\r\n  callWithAsyncErrorHandling,\r\n  ErrorCodes\r\n} from './errorHandling'\r\nexport {\r\n  resolveComponent,\r\n  resolveDirective,\r\n  resolveDynamicComponent\r\n} from './helpers/resolveAssets'\r\n// For integration with runtime compiler\r\nexport { registerRuntimeCompiler, isRuntimeOnly } from './component'\r\nexport {\r\n  useTransitionState,\r\n  resolveTransitionHooks,\r\n  setTransitionHooks,\r\n  getTransitionRawChildren\r\n} from './components/BaseTransition'\r\nexport { initCustomFormatter } from './customFormatter'\r\n\r\n// For devtools\r\nexport { devtools, setDevtoolsHook } from './devtools'\r\n\r\n// Types -------------------------------------------------------------------------\r\n\r\nimport { VNode } from './vnode'\r\nimport { ComponentInternalInstance } from './component'\r\n\r\n// Augment Ref unwrap bail types.\r\n// Note: if updating this, also update `types/refBail.d.ts`.\r\ndeclare module '@vue/reactivity' {\r\n  export interface RefUnwrapBailTypes {\r\n    runtimeCoreBailTypes:\r\n      | VNode\r\n      | {\r\n          // directly bailing on ComponentPublicInstance results in recursion\r\n          // so we use this as a bail hint\r\n          $: ComponentInternalInstance\r\n        }\r\n  }\r\n}\r\n\r\nexport {\r\n  Ref,\r\n  ToRef,\r\n  ToRefs,\r\n  UnwrapRef,\r\n  ShallowRef,\r\n  ShallowUnwrapRef,\r\n  CustomRefFactory,\r\n  ReactiveFlags,\r\n  DeepReadonly,\r\n  ShallowReactive,\r\n  UnwrapNestedRefs,\r\n  ComputedRef,\r\n  WritableComputedRef,\r\n  WritableComputedOptions,\r\n  ComputedGetter,\r\n  ComputedSetter,\r\n  ReactiveEffectRunner,\r\n  ReactiveEffectOptions,\r\n  EffectScheduler,\r\n  DebuggerOptions,\r\n  DebuggerEvent,\r\n  DebuggerEventExtraInfo,\r\n  TrackOpTypes,\r\n  TriggerOpTypes\r\n} from '@vue/reactivity'\r\nexport {\r\n  WatchEffect,\r\n  WatchOptions,\r\n  WatchOptionsBase,\r\n  WatchCallback,\r\n  WatchSource,\r\n  WatchStopHandle\r\n} from './apiWatch'\r\nexport { InjectionKey } from './apiInject'\r\nexport {\r\n  App,\r\n  AppConfig,\r\n  AppContext,\r\n  Plugin,\r\n  CreateAppFunction,\r\n  OptionMergeFunction\r\n} from './apiCreateApp'\r\nexport {\r\n  VNode,\r\n  VNodeChild,\r\n  VNodeTypes,\r\n  VNodeProps,\r\n  VNodeArrayChildren,\r\n  VNodeNormalizedChildren\r\n} from './vnode'\r\nexport {\r\n  Component,\r\n  ConcreteComponent,\r\n  FunctionalComponent,\r\n  ComponentInternalInstance,\r\n  SetupContext,\r\n  ComponentCustomProps,\r\n  AllowedComponentProps\r\n} from './component'\r\nexport { DefineComponent } from './apiDefineComponent'\r\nexport {\r\n  ComponentOptions,\r\n  ComponentOptionsMixin,\r\n  ComponentOptionsWithoutProps,\r\n  ComponentOptionsWithObjectProps,\r\n  ComponentOptionsWithArrayProps,\r\n  ComponentCustomOptions,\r\n  ComponentOptionsBase,\r\n  ComponentProvideOptions,\r\n  RenderFunction,\r\n  MethodOptions,\r\n  ComputedOptions,\r\n  RuntimeCompilerOptions\r\n} from './componentOptions'\r\nexport { EmitsOptions, ObjectEmitsOptions } from './componentEmits'\r\nexport {\r\n  ComponentPublicInstance,\r\n  ComponentCustomProperties,\r\n  CreateComponentPublicInstance\r\n} from './componentPublicInstance'\r\nexport {\r\n  Renderer,\r\n  RendererNode,\r\n  RendererElement,\r\n  HydrationRenderer,\r\n  RendererOptions,\r\n  RootRenderFunction\r\n} from './renderer'\r\nexport { RootHydrateFunction } from './hydration'\r\nexport { Slot, Slots } from './componentSlots'\r\nexport {\r\n  Prop,\r\n  PropType,\r\n  ComponentPropsOptions,\r\n  ComponentObjectPropsOptions,\r\n  ExtractPropTypes,\r\n  ExtractDefaultPropTypes\r\n} from './componentProps'\r\nexport {\r\n  Directive,\r\n  DirectiveBinding,\r\n  DirectiveHook,\r\n  ObjectDirective,\r\n  FunctionDirective,\r\n  DirectiveArguments\r\n} from './directives'\r\nexport { SuspenseBoundary } from './components/Suspense'\r\nexport { TransitionState, TransitionHooks } from './components/BaseTransition'\r\nexport {\r\n  AsyncComponentOptions,\r\n  AsyncComponentLoader\r\n} from './apiAsyncComponent'\r\nexport { HMRRuntime } from './hmr'\r\n\r\n// Internal API ----------------------------------------------------------------\r\n\r\n// **IMPORTANT** Internal APIs may change without notice between versions and\r\n// user code should avoid relying on them.\r\n\r\n// For compiler generated code\r\n// should sync with '@vue/compiler-core/src/runtimeHelpers.ts'\r\nexport {\r\n  withCtx,\r\n  pushScopeId,\r\n  popScopeId,\r\n  withScopeId\r\n} from './componentRenderContext'\r\nexport { renderList } from './helpers/renderList'\r\nexport { toHandlers } from './helpers/toHandlers'\r\nexport { renderSlot } from './helpers/renderSlot'\r\nexport { createSlots } from './helpers/createSlots'\r\nexport { withMemo, isMemoSame } from './helpers/withMemo'\r\nexport {\r\n  openBlock,\r\n  createBlock,\r\n  setBlockTracking,\r\n  createTextVNode,\r\n  createCommentVNode,\r\n  createStaticVNode,\r\n  createElementVNode,\r\n  createElementBlock,\r\n  guardReactiveProps\r\n} from './vnode'\r\nexport {\r\n  toDisplayString,\r\n  camelize,\r\n  capitalize,\r\n  toHandlerKey,\r\n  normalizeProps,\r\n  normalizeClass,\r\n  normalizeStyle\r\n} from '@vue/shared'\r\n\r\n// For test-utils\r\nexport { transformVNodeArgs } from './vnode'\r\n\r\n// SSR -------------------------------------------------------------------------\r\n\r\n// **IMPORTANT** These APIs are exposed solely for @vue/server-renderer and may\r\n// change without notice between versions. User code should never rely on them.\r\n\r\nimport { createComponentInstance, setupComponent } from './component'\r\nimport { renderComponentRoot } from './componentRenderUtils'\r\nimport { setCurrentRenderingInstance } from './componentRenderContext'\r\nimport { isVNode, normalizeVNode } from './vnode'\r\n\r\nconst _ssrUtils = {\r\n  createComponentInstance,\r\n  setupComponent,\r\n  renderComponentRoot,\r\n  setCurrentRenderingInstance,\r\n  isVNode,\r\n  normalizeVNode\r\n}\r\n\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in ssr-possible builds.\r\n * @internal\r\n */\r\nexport const ssrUtils = (__SSR__ ? _ssrUtils : null) as typeof _ssrUtils\r\n\r\n// 2.x COMPAT ------------------------------------------------------------------\r\n\r\nexport { DeprecationTypes } from './compat/compatConfig'\r\nexport { CompatVue } from './compat/global'\r\nexport { LegacyConfig } from './compat/globalConfig'\r\n\r\nimport { warnDeprecation } from './compat/compatConfig'\r\nimport { createCompatVue } from './compat/global'\r\nimport {\r\n  isCompatEnabled,\r\n  checkCompatEnabled,\r\n  softAssertCompatEnabled\r\n} from './compat/compatConfig'\r\nimport { resolveFilter as _resolveFilter } from './helpers/resolveAssets'\r\n\r\n/**\r\n * @internal only exposed in compat builds\r\n */\r\nexport const resolveFilter = __COMPAT__ ? _resolveFilter : null\r\n\r\nconst _compatUtils = {\r\n  warnDeprecation,\r\n  createCompatVue,\r\n  isCompatEnabled,\r\n  checkCompatEnabled,\r\n  softAssertCompatEnabled\r\n}\r\n\r\n/**\r\n * @internal only exposed in compat builds.\r\n */\r\nexport const compatUtils = (\r\n  __COMPAT__ ? _compatUtils : null\r\n) as typeof _compatUtils\r\n","import { RendererOptions } from '@vue/runtime-core'\r\n\r\nexport const svgNS = 'http://www.w3.org/2000/svg'\r\n\r\nconst doc = (typeof document !== 'undefined' ? document : null) as Document\r\n\r\nconst templateContainer = doc && /*#__PURE__*/ doc.createElement('template')\r\n\r\nexport const nodeOps: Omit<RendererOptions<Node, Element>, 'patchProp'> = {\r\n  insert: (child, parent, anchor) => {\r\n    parent.insertBefore(child, anchor || null)\r\n  },\r\n\r\n  remove: child => {\r\n    const parent = child.parentNode\r\n    if (parent) {\r\n      parent.removeChild(child)\r\n    }\r\n  },\r\n\r\n  createElement: (tag, isSVG, is, props): Element => {\r\n    const el = isSVG\r\n      ? doc.createElementNS(svgNS, tag)\r\n      : doc.createElement(tag, is ? { is } : undefined)\r\n\r\n    if (tag === 'select' && props && props.multiple != null) {\r\n      ;(el as HTMLSelectElement).setAttribute('multiple', props.multiple)\r\n    }\r\n\r\n    return el\r\n  },\r\n\r\n  createText: text => doc.createTextNode(text),\r\n\r\n  createComment: text => doc.createComment(text),\r\n\r\n  setText: (node, text) => {\r\n    node.nodeValue = text\r\n  },\r\n\r\n  setElementText: (el, text) => {\r\n    el.textContent = text\r\n  },\r\n\r\n  parentNode: node => node.parentNode as Element | null,\r\n\r\n  nextSibling: node => node.nextSibling,\r\n\r\n  querySelector: selector => doc.querySelector(selector),\r\n\r\n  setScopeId(el, id) {\r\n    el.setAttribute(id, '')\r\n  },\r\n\r\n  cloneNode(el) {\r\n    const cloned = el.cloneNode(true)\r\n    // #3072\r\n    // - in `patchDOMProp`, we store the actual value in the `el._value` property.\r\n    // - normally, elements using `:value` bindings will not be hoisted, but if\r\n    //   the bound value is a constant, e.g. `:value=\"true\"` - they do get\r\n    //   hoisted.\r\n    // - in production, hoisted nodes are cloned when subsequent inserts, but\r\n    //   cloneNode() does not copy the custom property we attached.\r\n    // - This may need to account for other custom DOM properties we attach to\r\n    //   elements in addition to `_value` in the future.\r\n    if (`_value` in el) {\r\n      ;(cloned as any)._value = (el as any)._value\r\n    }\r\n    return cloned\r\n  },\r\n\r\n  // __UNSAFE__\r\n  // Reason: innerHTML.\r\n  // Static content here can only come from compiled templates.\r\n  // As long as the user only uses trusted templates, this is safe.\r\n  insertStaticContent(content, parent, anchor, isSVG, start, end) {\r\n    // <parent> before | first ... last | anchor </parent>\r\n    const before = anchor ? anchor.previousSibling : parent.lastChild\r\n    // #5308 can only take cached path if:\r\n    // - has a single root node\r\n    // - nextSibling info is still available\r\n    if (start && (start === end || start.nextSibling)) {\r\n      // cached\r\n      while (true) {\r\n        parent.insertBefore(start!.cloneNode(true), anchor)\r\n        if (start === end || !(start = start!.nextSibling)) break\r\n      }\r\n    } else {\r\n      // fresh insert\r\n      templateContainer.innerHTML = isSVG ? `<svg>${content}</svg>` : content\r\n      const template = templateContainer.content\r\n      if (isSVG) {\r\n        // remove outer svg wrapper\r\n        const wrapper = template.firstChild!\r\n        while (wrapper.firstChild) {\r\n          template.appendChild(wrapper.firstChild)\r\n        }\r\n        template.removeChild(wrapper)\r\n      }\r\n      parent.insertBefore(template, anchor)\r\n    }\r\n    return [\r\n      // first\r\n      before ? before.nextSibling! : parent.firstChild!,\r\n      // last\r\n      anchor ? anchor.previousSibling! : parent.lastChild!\r\n    ]\r\n  }\r\n}\r\n","import { isString, hyphenate, capitalize, isArray } from '@vue/shared'\r\nimport { camelize } from '@vue/runtime-core'\r\n\r\ntype Style = string | Record<string, string | string[]> | null\r\n\r\nexport function patchStyle(el: Element, prev: Style, next: Style) {\r\n  const style = (el as HTMLElement).style\r\n  const isCssString = isString(next)\r\n  if (next && !isCssString) {\r\n    for (const key in next) {\r\n      setStyle(style, key, next[key])\r\n    }\r\n    if (prev && !isString(prev)) {\r\n      for (const key in prev) {\r\n        if (next[key] == null) {\r\n          setStyle(style, key, '')\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    const currentDisplay = style.display\r\n    if (isCssString) {\r\n      if (prev !== next) {\r\n        style.cssText = next as string\r\n      }\r\n    } else if (prev) {\r\n      el.removeAttribute('style')\r\n    }\r\n    // indicates that the `display` of the element is controlled by `v-show`,\r\n    // so we always keep the current `display` value regardless of the `style`\r\n    // value, thus handing over control to `v-show`.\r\n    if ('_vod' in el) {\r\n      style.display = currentDisplay\r\n    }\r\n  }\r\n}\r\n\r\nconst importantRE = /\\s*!important$/\r\n\r\nfunction setStyle(\r\n  style: CSSStyleDeclaration,\r\n  name: string,\r\n  val: string | string[]\r\n) {\r\n  if (isArray(val)) {\r\n    val.forEach(v => setStyle(style, name, v))\r\n  } else {\r\n    if (val == null) val = ''\r\n    if (name.startsWith('--')) {\r\n      // custom property definition\r\n      style.setProperty(name, val)\r\n    } else {\r\n      const prefixed = autoPrefix(style, name)\r\n      if (importantRE.test(val)) {\r\n        // !important\r\n        style.setProperty(\r\n          hyphenate(prefixed),\r\n          val.replace(importantRE, ''),\r\n          'important'\r\n        )\r\n      } else {\r\n        style[prefixed as any] = val\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst prefixes = ['Webkit', 'Moz', 'ms']\r\nconst prefixCache: Record<string, string> = {}\r\n\r\nfunction autoPrefix(style: CSSStyleDeclaration, rawName: string): string {\r\n  const cached = prefixCache[rawName]\r\n  if (cached) {\r\n    return cached\r\n  }\r\n  let name = camelize(rawName)\r\n  if (name !== 'filter' && name in style) {\r\n    return (prefixCache[rawName] = name)\r\n  }\r\n  name = capitalize(name)\r\n  for (let i = 0; i < prefixes.length; i++) {\r\n    const prefixed = prefixes[i] + name\r\n    if (prefixed in style) {\r\n      return (prefixCache[rawName] = prefixed)\r\n    }\r\n  }\r\n  return rawName\r\n}\r\n","import {\r\n  includeBooleanAttr,\r\n  isSpecialBooleanAttr,\r\n  makeMap,\r\n  NOOP\r\n} from '@vue/shared'\r\nimport {\r\n  compatUtils,\r\n  ComponentInternalInstance,\r\n  DeprecationTypes\r\n} from '@vue/runtime-core'\r\n\r\nexport const xlinkNS = 'http://www.w3.org/1999/xlink'\r\n\r\nexport function patchAttr(\r\n  el: Element,\r\n  key: string,\r\n  value: any,\r\n  isSVG: boolean,\r\n  instance?: ComponentInternalInstance | null\r\n) {\r\n  if (isSVG && key.startsWith('xlink:')) {\r\n    if (value == null) {\r\n      el.removeAttributeNS(xlinkNS, key.slice(6, key.length))\r\n    } else {\r\n      el.setAttributeNS(xlinkNS, key, value)\r\n    }\r\n  } else {\r\n    if (__COMPAT__ && compatCoerceAttr(el, key, value, instance)) {\r\n      return\r\n    }\r\n\r\n    // note we are only checking boolean attributes that don't have a\r\n    // corresponding dom prop of the same name here.\r\n    const isBoolean = isSpecialBooleanAttr(key)\r\n    if (value == null || (isBoolean && !includeBooleanAttr(value))) {\r\n      el.removeAttribute(key)\r\n    } else {\r\n      el.setAttribute(key, isBoolean ? '' : value)\r\n    }\r\n  }\r\n}\r\n\r\n// 2.x compat\r\nconst isEnumeratedAttr = __COMPAT__\r\n  ? /*#__PURE__*/ makeMap('contenteditable,draggable,spellcheck')\r\n  : NOOP\r\n\r\nexport function compatCoerceAttr(\r\n  el: Element,\r\n  key: string,\r\n  value: unknown,\r\n  instance: ComponentInternalInstance | null = null\r\n): boolean {\r\n  if (isEnumeratedAttr(key)) {\r\n    const v2CocercedValue =\r\n      value === null\r\n        ? 'false'\r\n        : typeof value !== 'boolean' && value !== undefined\r\n        ? 'true'\r\n        : null\r\n    if (\r\n      v2CocercedValue &&\r\n      compatUtils.softAssertCompatEnabled(\r\n        DeprecationTypes.ATTR_ENUMERATED_COERCION,\r\n        instance,\r\n        key,\r\n        value,\r\n        v2CocercedValue\r\n      )\r\n    ) {\r\n      el.setAttribute(key, v2CocercedValue)\r\n      return true\r\n    }\r\n  } else if (\r\n    value === false &&\r\n    !isSpecialBooleanAttr(key) &&\r\n    compatUtils.softAssertCompatEnabled(\r\n      DeprecationTypes.ATTR_FALSE_VALUE,\r\n      instance,\r\n      key\r\n    )\r\n  ) {\r\n    el.removeAttribute(key)\r\n    return true\r\n  }\r\n  return false\r\n}\r\n","import { hyphenate, isArray } from '@vue/shared'\r\nimport {\r\n  ComponentInternalInstance,\r\n  callWithAsyncErrorHandling\r\n} from '@vue/runtime-core'\r\nimport { ErrorCodes } from 'packages/runtime-core/src/errorHandling'\r\n\r\ninterface Invoker extends EventListener {\r\n  value: EventValue\r\n  attached: number\r\n}\r\n\r\ntype EventValue = Function | Function[]\r\n\r\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nconst [_getNow, skipTimestampCheck] = /*#__PURE__*/ (() => {\r\n  let _getNow = Date.now\r\n  let skipTimestampCheck = false\r\n  if (typeof window !== 'undefined') {\r\n    // Determine what event timestamp the browser is using. Annoyingly, the\r\n    // timestamp can either be hi-res (relative to page load) or low-res\r\n    // (relative to UNIX epoch), so in order to compare time we have to use the\r\n    // same timestamp type when saving the flush timestamp.\r\n    if (Date.now() > document.createEvent('Event').timeStamp) {\r\n      // if the low-res timestamp which is bigger than the event timestamp\r\n      // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n      // and we need to use the hi-res version for event listeners as well.\r\n      _getNow = performance.now.bind(performance)\r\n    }\r\n    // #3485: Firefox <= 53 has incorrect Event.timeStamp implementation\r\n    // and does not fire microtasks in between event propagation, so safe to exclude.\r\n    const ffMatch = navigator.userAgent.match(/firefox\\/(\\d+)/i)\r\n    skipTimestampCheck = !!(ffMatch && Number(ffMatch[1]) <= 53)\r\n  }\r\n  return [_getNow, skipTimestampCheck]\r\n})()\r\n\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow: number = 0\r\nconst p = /*#__PURE__*/ Promise.resolve()\r\nconst reset = () => {\r\n  cachedNow = 0\r\n}\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()))\r\n\r\nexport function addEventListener(\r\n  el: Element,\r\n  event: string,\r\n  handler: EventListener,\r\n  options?: EventListenerOptions\r\n) {\r\n  el.addEventListener(event, handler, options)\r\n}\r\n\r\nexport function removeEventListener(\r\n  el: Element,\r\n  event: string,\r\n  handler: EventListener,\r\n  options?: EventListenerOptions\r\n) {\r\n  el.removeEventListener(event, handler, options)\r\n}\r\n\r\nexport function patchEvent(\r\n  el: Element & { _vei?: Record<string, Invoker | undefined> },\r\n  rawName: string,\r\n  prevValue: EventValue | null,\r\n  nextValue: EventValue | null,\r\n  instance: ComponentInternalInstance | null = null\r\n) {\r\n  // vei = vue event invokers\r\n  const invokers = el._vei || (el._vei = {})\r\n  const existingInvoker = invokers[rawName]\r\n  if (nextValue && existingInvoker) {\r\n    // patch\r\n    existingInvoker.value = nextValue\r\n  } else {\r\n    const [name, options] = parseName(rawName)\r\n    if (nextValue) {\r\n      // add\r\n      const invoker = (invokers[rawName] = createInvoker(nextValue, instance))\r\n      addEventListener(el, name, invoker, options)\r\n    } else if (existingInvoker) {\r\n      // remove\r\n      removeEventListener(el, name, existingInvoker, options)\r\n      invokers[rawName] = undefined\r\n    }\r\n  }\r\n}\r\n\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/\r\n\r\nfunction parseName(name: string): [string, EventListenerOptions | undefined] {\r\n  let options: EventListenerOptions | undefined\r\n  if (optionsModifierRE.test(name)) {\r\n    options = {}\r\n    let m\r\n    while ((m = name.match(optionsModifierRE))) {\r\n      name = name.slice(0, name.length - m[0].length)\r\n      ;(options as any)[m[0].toLowerCase()] = true\r\n    }\r\n  }\r\n  return [hyphenate(name.slice(2)), options]\r\n}\r\n\r\nfunction createInvoker(\r\n  initialValue: EventValue,\r\n  instance: ComponentInternalInstance | null\r\n) {\r\n  const invoker: Invoker = (e: Event) => {\r\n    // async edge case #6566: inner click event triggers patch, event handler\r\n    // attached to outer element during patch, and triggered again. This\r\n    // happens because browsers fire microtask ticks between event propagation.\r\n    // the solution is simple: we save the timestamp when a handler is attached,\r\n    // and the handler would only fire if the event passed to it was fired\r\n    // AFTER it was attached.\r\n    const timeStamp = e.timeStamp || _getNow()\r\n\r\n    if (skipTimestampCheck || timeStamp >= invoker.attached - 1) {\r\n      callWithAsyncErrorHandling(\r\n        patchStopImmediatePropagation(e, invoker.value),\r\n        instance,\r\n        ErrorCodes.NATIVE_EVENT_HANDLER,\r\n        [e]\r\n      )\r\n    }\r\n  }\r\n  invoker.value = initialValue\r\n  invoker.attached = getNow()\r\n  return invoker\r\n}\r\n\r\nfunction patchStopImmediatePropagation(\r\n  e: Event,\r\n  value: EventValue\r\n): EventValue {\r\n  if (isArray(value)) {\r\n    const originalStop = e.stopImmediatePropagation\r\n    e.stopImmediatePropagation = () => {\r\n      originalStop.call(e)\r\n      ;(e as any)._stopped = true\r\n    }\r\n    return value.map(fn => (e: Event) => !(e as any)._stopped && fn && fn(e))\r\n  } else {\r\n    return value\r\n  }\r\n}\r\n","import { patchClass } from './modules/class'\r\nimport { patchStyle } from './modules/style'\r\nimport { patchAttr } from './modules/attrs'\r\nimport { patchDOMProp } from './modules/props'\r\nimport { patchEvent } from './modules/events'\r\nimport { isOn, isString, isFunction, isModelListener } from '@vue/shared'\r\nimport { RendererOptions } from '@vue/runtime-core'\r\n\r\nconst nativeOnRE = /^on[a-z]/\r\n\r\ntype DOMRendererOptions = RendererOptions<Node, Element>\r\n\r\nexport const patchProp: DOMRendererOptions['patchProp'] = (\r\n  el,\r\n  key,\r\n  prevValue,\r\n  nextValue,\r\n  isSVG = false,\r\n  prevChildren,\r\n  parentComponent,\r\n  parentSuspense,\r\n  unmountChildren\r\n) => {\r\n  if (key === 'class') {\r\n    patchClass(el, nextValue, isSVG)\r\n  } else if (key === 'style') {\r\n    patchStyle(el, prevValue, nextValue)\r\n  } else if (isOn(key)) {\r\n    // ignore v-model listeners\r\n    if (!isModelListener(key)) {\r\n      patchEvent(el, key, prevValue, nextValue, parentComponent)\r\n    }\r\n  } else if (\r\n    key[0] === '.'\r\n      ? ((key = key.slice(1)), true)\r\n      : key[0] === '^'\r\n      ? ((key = key.slice(1)), false)\r\n      : shouldSetAsProp(el, key, nextValue, isSVG)\r\n  ) {\r\n    patchDOMProp(\r\n      el,\r\n      key,\r\n      nextValue,\r\n      prevChildren,\r\n      parentComponent,\r\n      parentSuspense,\r\n      unmountChildren\r\n    )\r\n  } else {\r\n    // special case for <input v-model type=\"checkbox\"> with\r\n    // :true-value & :false-value\r\n    // store value as dom properties since non-string values will be\r\n    // stringified.\r\n    if (key === 'true-value') {\r\n      ;(el as any)._trueValue = nextValue\r\n    } else if (key === 'false-value') {\r\n      ;(el as any)._falseValue = nextValue\r\n    }\r\n    patchAttr(el, key, nextValue, isSVG, parentComponent)\r\n  }\r\n}\r\n\r\nfunction shouldSetAsProp(\r\n  el: Element,\r\n  key: string,\r\n  value: unknown,\r\n  isSVG: boolean\r\n) {\r\n  if (isSVG) {\r\n    // most keys must be set as attribute on svg elements to work\r\n    // ...except innerHTML & textContent\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n      return true\r\n    }\r\n    // or native onclick with function values\r\n    if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  // these are enumerated attrs, however their corresponding DOM properties\r\n  // are actually booleans - this leads to setting it with a string \"false\"\r\n  // value leading it to be coerced to `true`, so we need to always treat\r\n  // them as attributes.\r\n  // Note that `contentEditable` doesn't have this problem: its DOM\r\n  // property is also enumerated string values.\r\n  if (key === 'spellcheck' || key === 'draggable' || key === 'translate') {\r\n    return false\r\n  }\r\n\r\n  // #1787, #2840 form property on form elements is readonly and must be set as\r\n  // attribute.\r\n  if (key === 'form') {\r\n    return false\r\n  }\r\n\r\n  // #1526 <input list> must be set as attribute\r\n  if (key === 'list' && el.tagName === 'INPUT') {\r\n    return false\r\n  }\r\n\r\n  // #2766 <textarea type> must be set as attribute\r\n  if (key === 'type' && el.tagName === 'TEXTAREA') {\r\n    return false\r\n  }\r\n\r\n  // native onclick with string value, must be set as attribute\r\n  if (nativeOnRE.test(key) && isString(value)) {\r\n    return false\r\n  }\r\n\r\n  return key in el\r\n}\r\n","import {\r\n  ComponentOptionsMixin,\r\n  ComponentOptionsWithArrayProps,\r\n  ComponentOptionsWithObjectProps,\r\n  ComponentOptionsWithoutProps,\r\n  ComponentPropsOptions,\r\n  ComponentPublicInstance,\r\n  ComputedOptions,\r\n  EmitsOptions,\r\n  MethodOptions,\r\n  RenderFunction,\r\n  SetupContext,\r\n  ComponentInternalInstance,\r\n  VNode,\r\n  RootHydrateFunction,\r\n  ExtractPropTypes,\r\n  createVNode,\r\n  defineComponent,\r\n  nextTick,\r\n  warn,\r\n  ConcreteComponent,\r\n  ComponentOptions\r\n} from '@vue/runtime-core'\r\nimport { camelize, extend, hyphenate, isArray, toNumber } from '@vue/shared'\r\nimport { hydrate, render } from '.'\r\n\r\nexport type VueElementConstructor<P = {}> = {\r\n  new (initialProps?: Record<string, any>): VueElement & P\r\n}\r\n\r\n// defineCustomElement provides the same type inference as defineComponent\r\n// so most of the following overloads should be kept in sync w/ defineComponent.\r\n\r\n// overload 1: direct setup function\r\nexport function defineCustomElement<Props, RawBindings = object>(\r\n  setup: (\r\n    props: Readonly<Props>,\r\n    ctx: SetupContext\r\n  ) => RawBindings | RenderFunction\r\n): VueElementConstructor<Props>\r\n\r\n// overload 2: object format with no props\r\nexport function defineCustomElement<\r\n  Props = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithoutProps<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  > & { styles?: string[] }\r\n): VueElementConstructor<Props>\r\n\r\n// overload 3: object format with array props declaration\r\nexport function defineCustomElement<\r\n  PropNames extends string,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = Record<string, any>,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithArrayProps<\r\n    PropNames,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  > & { styles?: string[] }\r\n): VueElementConstructor<{ [K in PropNames]: any }>\r\n\r\n// overload 4: object format with object props declaration\r\nexport function defineCustomElement<\r\n  PropsOptions extends Readonly<ComponentPropsOptions>,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = Record<string, any>,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithObjectProps<\r\n    PropsOptions,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  > & { styles?: string[] }\r\n): VueElementConstructor<ExtractPropTypes<PropsOptions>>\r\n\r\n// overload 5: defining a custom element from the returned value of\r\n// `defineComponent`\r\nexport function defineCustomElement(options: {\r\n  new (...args: any[]): ComponentPublicInstance\r\n}): VueElementConstructor\r\n\r\nexport function defineCustomElement(\r\n  options: any,\r\n  hydrate?: RootHydrateFunction\r\n): VueElementConstructor {\r\n  const Comp = defineComponent(options as any)\r\n  class VueCustomElement extends VueElement {\r\n    static def = Comp\r\n    constructor(initialProps?: Record<string, any>) {\r\n      super(Comp, initialProps, hydrate)\r\n    }\r\n  }\r\n\r\n  return VueCustomElement\r\n}\r\n\r\nexport const defineSSRCustomElement = ((options: any) => {\r\n  // @ts-ignore\r\n  return defineCustomElement(options, hydrate)\r\n}) as typeof defineCustomElement\r\n\r\nconst BaseClass = (\r\n  typeof HTMLElement !== 'undefined' ? HTMLElement : class {}\r\n) as typeof HTMLElement\r\n\r\ntype InnerComponentDef = ConcreteComponent & { styles?: string[] }\r\n\r\nexport class VueElement extends BaseClass {\r\n  /**\r\n   * @internal\r\n   */\r\n  _instance: ComponentInternalInstance | null = null\r\n\r\n  private _connected = false\r\n  private _resolved = false\r\n  private _numberProps: Record<string, true> | null = null\r\n  private _styles?: HTMLStyleElement[]\r\n\r\n  constructor(\r\n    private _def: InnerComponentDef,\r\n    private _props: Record<string, any> = {},\r\n    hydrate?: RootHydrateFunction\r\n  ) {\r\n    super()\r\n    if (this.shadowRoot && hydrate) {\r\n      hydrate(this._createVNode(), this.shadowRoot)\r\n    } else {\r\n      if (__DEV__ && this.shadowRoot) {\r\n        warn(\r\n          `Custom element has pre-rendered declarative shadow root but is not ` +\r\n            `defined as hydratable. Use \\`defineSSRCustomElement\\`.`\r\n        )\r\n      }\r\n      this.attachShadow({ mode: 'open' })\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    this._connected = true\r\n    if (!this._instance) {\r\n      this._resolveDef()\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this._connected = false\r\n    nextTick(() => {\r\n      if (!this._connected) {\r\n        render(null, this.shadowRoot!)\r\n        this._instance = null\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * resolve inner component definition (handle possible async component)\r\n   */\r\n  private _resolveDef() {\r\n    if (this._resolved) {\r\n      return\r\n    }\r\n    this._resolved = true\r\n\r\n    // set initial attrs\r\n    for (let i = 0; i < this.attributes.length; i++) {\r\n      this._setAttr(this.attributes[i].name)\r\n    }\r\n\r\n    // watch future attr changes\r\n    new MutationObserver(mutations => {\r\n      for (const m of mutations) {\r\n        this._setAttr(m.attributeName!)\r\n      }\r\n    }).observe(this, { attributes: true })\r\n\r\n    const resolve = (def: InnerComponentDef) => {\r\n      const { props, styles } = def\r\n      const hasOptions = !isArray(props)\r\n      const rawKeys = props ? (hasOptions ? Object.keys(props) : props) : []\r\n\r\n      // cast Number-type props set before resolve\r\n      let numberProps\r\n      if (hasOptions) {\r\n        for (const key in this._props) {\r\n          const opt = props[key]\r\n          if (opt === Number || (opt && opt.type === Number)) {\r\n            this._props[key] = toNumber(this._props[key])\r\n            ;(numberProps || (numberProps = Object.create(null)))[key] = true\r\n          }\r\n        }\r\n      }\r\n      this._numberProps = numberProps\r\n\r\n      // check if there are props set pre-upgrade or connect\r\n      for (const key of Object.keys(this)) {\r\n        if (key[0] !== '_') {\r\n          this._setProp(key, this[key as keyof this], true, false)\r\n        }\r\n      }\r\n\r\n      // defining getter/setters on prototype\r\n      for (const key of rawKeys.map(camelize)) {\r\n        Object.defineProperty(this, key, {\r\n          get() {\r\n            return this._getProp(key)\r\n          },\r\n          set(val) {\r\n            this._setProp(key, val)\r\n          }\r\n        })\r\n      }\r\n\r\n      // apply CSS\r\n      this._applyStyles(styles)\r\n\r\n      // initial render\r\n      this._update()\r\n    }\r\n\r\n    const asyncDef = (this._def as ComponentOptions).__asyncLoader\r\n    if (asyncDef) {\r\n      asyncDef().then(resolve)\r\n    } else {\r\n      resolve(this._def)\r\n    }\r\n  }\r\n\r\n  protected _setAttr(key: string) {\r\n    let value = this.getAttribute(key)\r\n    if (this._numberProps && this._numberProps[key]) {\r\n      value = toNumber(value)\r\n    }\r\n    this._setProp(camelize(key), value, false)\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  protected _getProp(key: string) {\r\n    return this._props[key]\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  protected _setProp(\r\n    key: string,\r\n    val: any,\r\n    shouldReflect = true,\r\n    shouldUpdate = true\r\n  ) {\r\n    if (val !== this._props[key]) {\r\n      this._props[key] = val\r\n      if (shouldUpdate && this._instance) {\r\n        this._update()\r\n      }\r\n      // reflect\r\n      if (shouldReflect) {\r\n        if (val === true) {\r\n          this.setAttribute(hyphenate(key), '')\r\n        } else if (typeof val === 'string' || typeof val === 'number') {\r\n          this.setAttribute(hyphenate(key), val + '')\r\n        } else if (!val) {\r\n          this.removeAttribute(hyphenate(key))\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private _update() {\r\n    render(this._createVNode(), this.shadowRoot!)\r\n  }\r\n\r\n  private _createVNode(): VNode<any, any> {\r\n    const vnode = createVNode(this._def, extend({}, this._props))\r\n    if (!this._instance) {\r\n      vnode.ce = instance => {\r\n        this._instance = instance\r\n        instance.isCE = true\r\n        // HMR\r\n        if (__DEV__) {\r\n          instance.ceReload = newStyles => {\r\n            // always reset styles\r\n            if (this._styles) {\r\n              this._styles.forEach(s => this.shadowRoot!.removeChild(s))\r\n              this._styles.length = 0\r\n            }\r\n            this._applyStyles(newStyles)\r\n            // if this is an async component, ceReload is called from the inner\r\n            // component so no need to reload the async wrapper\r\n            if (!(this._def as ComponentOptions).__asyncLoader) {\r\n              // reload\r\n              this._instance = null\r\n              this._update()\r\n            }\r\n          }\r\n        }\r\n\r\n        // intercept emit\r\n        instance.emit = (event: string, ...args: any[]) => {\r\n          this.dispatchEvent(\r\n            new CustomEvent(event, {\r\n              detail: args\r\n            })\r\n          )\r\n        }\r\n\r\n        // locate nearest Vue custom element parent for provide/inject\r\n        let parent: Node | null = this\r\n        while (\r\n          (parent =\r\n            parent && (parent.parentNode || (parent as ShadowRoot).host))\r\n        ) {\r\n          if (parent instanceof VueElement) {\r\n            instance.parent = parent._instance\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return vnode\r\n  }\r\n\r\n  private _applyStyles(styles: string[] | undefined) {\r\n    if (styles) {\r\n      styles.forEach(css => {\r\n        const s = document.createElement('style')\r\n        s.textContent = css\r\n        this.shadowRoot!.appendChild(s)\r\n        // record for HMR\r\n        if (__DEV__) {\r\n          ;(this._styles || (this._styles = [])).push(s)\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n","import { warn, getCurrentInstance } from '@vue/runtime-core'\r\nimport { EMPTY_OBJ } from '@vue/shared'\r\n\r\nexport function useCssModule(name = '$style'): Record<string, string> {\r\n  /* istanbul ignore else */\r\n  if (!__GLOBAL__) {\r\n    const instance = getCurrentInstance()!\r\n    if (!instance) {\r\n      __DEV__ && warn(`useCssModule must be called inside setup()`)\r\n      return EMPTY_OBJ\r\n    }\r\n    const modules = instance.type.__cssModules\r\n    if (!modules) {\r\n      __DEV__ && warn(`Current instance does not have CSS modules injected.`)\r\n      return EMPTY_OBJ\r\n    }\r\n    const mod = modules[name]\r\n    if (!mod) {\r\n      __DEV__ &&\r\n        warn(`Current instance does not have CSS module named \"${name}\".`)\r\n      return EMPTY_OBJ\r\n    }\r\n    return mod as Record<string, string>\r\n  } else {\r\n    if (__DEV__) {\r\n      warn(`useCssModule() is not supported in the global build.`)\r\n    }\r\n    return EMPTY_OBJ\r\n  }\r\n}\r\n","import {\r\n  getCurrentInstance,\r\n  warn,\r\n  VNode,\r\n  Fragment,\r\n  Static,\r\n  watchPostEffect,\r\n  onMounted,\r\n  onUnmounted\r\n} from '@vue/runtime-core'\r\nimport { ShapeFlags } from '@vue/shared'\r\n\r\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nexport function useCssVars(getter: (ctx: any) => Record<string, string>) {\r\n  if (!__BROWSER__ && !__TEST__) return\r\n\r\n  const instance = getCurrentInstance()\r\n  /* istanbul ignore next */\r\n  if (!instance) {\r\n    __DEV__ &&\r\n      warn(`useCssVars is called without current active component instance.`)\r\n    return\r\n  }\r\n\r\n  const setVars = () =>\r\n    setVarsOnVNode(instance.subTree, getter(instance.proxy!))\r\n  watchPostEffect(setVars)\r\n  onMounted(() => {\r\n    const ob = new MutationObserver(setVars)\r\n    ob.observe(instance.subTree.el!.parentNode, { childList: true })\r\n    onUnmounted(() => ob.disconnect())\r\n  })\r\n}\r\n\r\nfunction setVarsOnVNode(vnode: VNode, vars: Record<string, string>) {\r\n  if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n    const suspense = vnode.suspense!\r\n    vnode = suspense.activeBranch!\r\n    if (suspense.pendingBranch && !suspense.isHydrating) {\r\n      suspense.effects.push(() => {\r\n        setVarsOnVNode(suspense.activeBranch!, vars)\r\n      })\r\n    }\r\n  }\r\n\r\n  // drill down HOCs until it's a non-component vnode\r\n  while (vnode.component) {\r\n    vnode = vnode.component.subTree\r\n  }\r\n\r\n  if (vnode.shapeFlag & ShapeFlags.ELEMENT && vnode.el) {\r\n    setVarsOnNode(vnode.el as Node, vars)\r\n  } else if (vnode.type === Fragment) {\r\n    ;(vnode.children as VNode[]).forEach(c => setVarsOnVNode(c, vars))\r\n  } else if (vnode.type === Static) {\r\n    let { el, anchor } = vnode\r\n    while (el) {\r\n      setVarsOnNode(el as Node, vars)\r\n      if (el === anchor) break\r\n      el = el.nextSibling\r\n    }\r\n  }\r\n}\r\n\r\nfunction setVarsOnNode(el: Node, vars: Record<string, string>) {\r\n  if (el.nodeType === 1) {\r\n    const style = (el as HTMLElement).style\r\n    for (const key in vars) {\r\n      style.setProperty(`--${key}`, vars[key])\r\n    }\r\n  }\r\n}\r\n","import {\r\n  BaseTransition,\r\n  BaseTransitionProps,\r\n  h,\r\n  warn,\r\n  FunctionalComponent,\r\n  compatUtils,\r\n  DeprecationTypes\r\n} from '@vue/runtime-core'\r\nimport { isObject, toNumber, extend, isArray } from '@vue/shared'\r\n\r\nconst TRANSITION = 'transition'\r\nconst ANIMATION = 'animation'\r\n\r\nexport interface TransitionProps extends BaseTransitionProps<Element> {\r\n  name?: string\r\n  type?: typeof TRANSITION | typeof ANIMATION\r\n  css?: boolean\r\n  duration?: number | { enter: number; leave: number }\r\n  // custom transition classes\r\n  enterFromClass?: string\r\n  enterActiveClass?: string\r\n  enterToClass?: string\r\n  appearFromClass?: string\r\n  appearActiveClass?: string\r\n  appearToClass?: string\r\n  leaveFromClass?: string\r\n  leaveActiveClass?: string\r\n  leaveToClass?: string\r\n}\r\n\r\nexport interface ElementWithTransition extends HTMLElement {\r\n  // _vtc = Vue Transition Classes.\r\n  // Store the temporarily-added transition classes on the element\r\n  // so that we can avoid overwriting them if the element's class is patched\r\n  // during the transition.\r\n  _vtc?: Set<string>\r\n}\r\n\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nexport const Transition: FunctionalComponent<TransitionProps> = (\r\n  props,\r\n  { slots }\r\n) => h(BaseTransition, resolveTransitionProps(props), slots)\r\n\r\nTransition.displayName = 'Transition'\r\n\r\nif (__COMPAT__) {\r\n  Transition.__isBuiltIn = true\r\n}\r\n\r\nconst DOMTransitionPropsValidators = {\r\n  name: String,\r\n  type: String,\r\n  css: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  duration: [String, Number, Object],\r\n  enterFromClass: String,\r\n  enterActiveClass: String,\r\n  enterToClass: String,\r\n  appearFromClass: String,\r\n  appearActiveClass: String,\r\n  appearToClass: String,\r\n  leaveFromClass: String,\r\n  leaveActiveClass: String,\r\n  leaveToClass: String\r\n}\r\n\r\nexport const TransitionPropsValidators = (Transition.props =\r\n  /*#__PURE__*/ extend(\r\n    {},\r\n    (BaseTransition as any).props,\r\n    DOMTransitionPropsValidators\r\n  ))\r\n\r\n/**\r\n * #3227 Incoming hooks may be merged into arrays when wrapping Transition\r\n * with custom HOCs.\r\n */\r\nconst callHook = (\r\n  hook: Function | Function[] | undefined,\r\n  args: any[] = []\r\n) => {\r\n  if (isArray(hook)) {\r\n    hook.forEach(h => h(...args))\r\n  } else if (hook) {\r\n    hook(...args)\r\n  }\r\n}\r\n\r\n/**\r\n * Check if a hook expects a callback (2nd arg), which means the user\r\n * intends to explicitly control the end of the transition.\r\n */\r\nconst hasExplicitCallback = (\r\n  hook: Function | Function[] | undefined\r\n): boolean => {\r\n  return hook\r\n    ? isArray(hook)\r\n      ? hook.some(h => h.length > 1)\r\n      : hook.length > 1\r\n    : false\r\n}\r\n\r\nexport function resolveTransitionProps(\r\n  rawProps: TransitionProps\r\n): BaseTransitionProps<Element> {\r\n  const baseProps: BaseTransitionProps<Element> = {}\r\n  for (const key in rawProps) {\r\n    if (!(key in DOMTransitionPropsValidators)) {\r\n      ;(baseProps as any)[key] = (rawProps as any)[key]\r\n    }\r\n  }\r\n\r\n  if (rawProps.css === false) {\r\n    return baseProps\r\n  }\r\n\r\n  const {\r\n    name = 'v',\r\n    type,\r\n    duration,\r\n    enterFromClass = `${name}-enter-from`,\r\n    enterActiveClass = `${name}-enter-active`,\r\n    enterToClass = `${name}-enter-to`,\r\n    appearFromClass = enterFromClass,\r\n    appearActiveClass = enterActiveClass,\r\n    appearToClass = enterToClass,\r\n    leaveFromClass = `${name}-leave-from`,\r\n    leaveActiveClass = `${name}-leave-active`,\r\n    leaveToClass = `${name}-leave-to`\r\n  } = rawProps\r\n\r\n  // legacy transition class compat\r\n  const legacyClassEnabled =\r\n    __COMPAT__ &&\r\n    compatUtils.isCompatEnabled(DeprecationTypes.TRANSITION_CLASSES, null)\r\n  let legacyEnterFromClass: string\r\n  let legacyAppearFromClass: string\r\n  let legacyLeaveFromClass: string\r\n  if (__COMPAT__ && legacyClassEnabled) {\r\n    const toLegacyClass = (cls: string) => cls.replace(/-from$/, '')\r\n    if (!rawProps.enterFromClass) {\r\n      legacyEnterFromClass = toLegacyClass(enterFromClass)\r\n    }\r\n    if (!rawProps.appearFromClass) {\r\n      legacyAppearFromClass = toLegacyClass(appearFromClass)\r\n    }\r\n    if (!rawProps.leaveFromClass) {\r\n      legacyLeaveFromClass = toLegacyClass(leaveFromClass)\r\n    }\r\n  }\r\n\r\n  const durations = normalizeDuration(duration)\r\n  const enterDuration = durations && durations[0]\r\n  const leaveDuration = durations && durations[1]\r\n  const {\r\n    onBeforeEnter,\r\n    onEnter,\r\n    onEnterCancelled,\r\n    onLeave,\r\n    onLeaveCancelled,\r\n    onBeforeAppear = onBeforeEnter,\r\n    onAppear = onEnter,\r\n    onAppearCancelled = onEnterCancelled\r\n  } = baseProps\r\n\r\n  const finishEnter = (el: Element, isAppear: boolean, done?: () => void) => {\r\n    removeTransitionClass(el, isAppear ? appearToClass : enterToClass)\r\n    removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass)\r\n    done && done()\r\n  }\r\n\r\n  const finishLeave = (\r\n    el: Element & { _isLeaving?: boolean },\r\n    done?: () => void\r\n  ) => {\r\n    el._isLeaving = false\r\n    removeTransitionClass(el, leaveFromClass)\r\n    removeTransitionClass(el, leaveToClass)\r\n    removeTransitionClass(el, leaveActiveClass)\r\n    done && done()\r\n  }\r\n\r\n  const makeEnterHook = (isAppear: boolean) => {\r\n    return (el: Element, done: () => void) => {\r\n      const hook = isAppear ? onAppear : onEnter\r\n      const resolve = () => finishEnter(el, isAppear, done)\r\n      callHook(hook, [el, resolve])\r\n      nextFrame(() => {\r\n        removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass)\r\n        if (__COMPAT__ && legacyClassEnabled) {\r\n          removeTransitionClass(\r\n            el,\r\n            isAppear ? legacyAppearFromClass : legacyEnterFromClass\r\n          )\r\n        }\r\n        addTransitionClass(el, isAppear ? appearToClass : enterToClass)\r\n        if (!hasExplicitCallback(hook)) {\r\n          whenTransitionEnds(el, type, enterDuration, resolve)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return extend(baseProps, {\r\n    onBeforeEnter(el) {\r\n      callHook(onBeforeEnter, [el])\r\n      addTransitionClass(el, enterFromClass)\r\n      if (__COMPAT__ && legacyClassEnabled) {\r\n        addTransitionClass(el, legacyEnterFromClass)\r\n      }\r\n      addTransitionClass(el, enterActiveClass)\r\n    },\r\n    onBeforeAppear(el) {\r\n      callHook(onBeforeAppear, [el])\r\n      addTransitionClass(el, appearFromClass)\r\n      if (__COMPAT__ && legacyClassEnabled) {\r\n        addTransitionClass(el, legacyAppearFromClass)\r\n      }\r\n      addTransitionClass(el, appearActiveClass)\r\n    },\r\n    onEnter: makeEnterHook(false),\r\n    onAppear: makeEnterHook(true),\r\n    onLeave(el: Element & { _isLeaving?: boolean }, done) {\r\n      el._isLeaving = true\r\n      const resolve = () => finishLeave(el, done)\r\n      addTransitionClass(el, leaveFromClass)\r\n      if (__COMPAT__ && legacyClassEnabled) {\r\n        addTransitionClass(el, legacyLeaveFromClass)\r\n      }\r\n      // force reflow so *-leave-from classes immediately take effect (#2593)\r\n      forceReflow()\r\n      addTransitionClass(el, leaveActiveClass)\r\n      nextFrame(() => {\r\n        if (!el._isLeaving) {\r\n          // cancelled\r\n          return\r\n        }\r\n        removeTransitionClass(el, leaveFromClass)\r\n        if (__COMPAT__ && legacyClassEnabled) {\r\n          removeTransitionClass(el, legacyLeaveFromClass)\r\n        }\r\n        addTransitionClass(el, leaveToClass)\r\n        if (!hasExplicitCallback(onLeave)) {\r\n          whenTransitionEnds(el, type, leaveDuration, resolve)\r\n        }\r\n      })\r\n      callHook(onLeave, [el, resolve])\r\n    },\r\n    onEnterCancelled(el) {\r\n      finishEnter(el, false)\r\n      callHook(onEnterCancelled, [el])\r\n    },\r\n    onAppearCancelled(el) {\r\n      finishEnter(el, true)\r\n      callHook(onAppearCancelled, [el])\r\n    },\r\n    onLeaveCancelled(el) {\r\n      finishLeave(el)\r\n      callHook(onLeaveCancelled, [el])\r\n    }\r\n  } as BaseTransitionProps<Element>)\r\n}\r\n\r\nfunction normalizeDuration(\r\n  duration: TransitionProps['duration']\r\n): [number, number] | null {\r\n  if (duration == null) {\r\n    return null\r\n  } else if (isObject(duration)) {\r\n    return [NumberOf(duration.enter), NumberOf(duration.leave)]\r\n  } else {\r\n    const n = NumberOf(duration)\r\n    return [n, n]\r\n  }\r\n}\r\n\r\nfunction NumberOf(val: unknown): number {\r\n  const res = toNumber(val)\r\n  if (__DEV__) validateDuration(res)\r\n  return res\r\n}\r\n\r\nfunction validateDuration(val: unknown) {\r\n  if (typeof val !== 'number') {\r\n    warn(\r\n      `<transition> explicit duration is not a valid number - ` +\r\n        `got ${JSON.stringify(val)}.`\r\n    )\r\n  } else if (isNaN(val)) {\r\n    warn(\r\n      `<transition> explicit duration is NaN - ` +\r\n        'the duration expression might be incorrect.'\r\n    )\r\n  }\r\n}\r\n\r\nexport function addTransitionClass(el: Element, cls: string) {\r\n  cls.split(/\\s+/).forEach(c => c && el.classList.add(c))\r\n  ;(\r\n    (el as ElementWithTransition)._vtc ||\r\n    ((el as ElementWithTransition)._vtc = new Set())\r\n  ).add(cls)\r\n}\r\n\r\nexport function removeTransitionClass(el: Element, cls: string) {\r\n  cls.split(/\\s+/).forEach(c => c && el.classList.remove(c))\r\n  const { _vtc } = el as ElementWithTransition\r\n  if (_vtc) {\r\n    _vtc.delete(cls)\r\n    if (!_vtc!.size) {\r\n      ;(el as ElementWithTransition)._vtc = undefined\r\n    }\r\n  }\r\n}\r\n\r\nfunction nextFrame(cb: () => void) {\r\n  requestAnimationFrame(() => {\r\n    requestAnimationFrame(cb)\r\n  })\r\n}\r\n\r\nlet endId = 0\r\n\r\nfunction whenTransitionEnds(\r\n  el: Element & { _endId?: number },\r\n  expectedType: TransitionProps['type'] | undefined,\r\n  explicitTimeout: number | null,\r\n  resolve: () => void\r\n) {\r\n  const id = (el._endId = ++endId)\r\n  const resolveIfNotStale = () => {\r\n    if (id === el._endId) {\r\n      resolve()\r\n    }\r\n  }\r\n\r\n  if (explicitTimeout) {\r\n    return setTimeout(resolveIfNotStale, explicitTimeout)\r\n  }\r\n\r\n  const { type, timeout, propCount } = getTransitionInfo(el, expectedType)\r\n  if (!type) {\r\n    return resolve()\r\n  }\r\n\r\n  const endEvent = type + 'end'\r\n  let ended = 0\r\n  const end = () => {\r\n    el.removeEventListener(endEvent, onEnd)\r\n    resolveIfNotStale()\r\n  }\r\n  const onEnd = (e: Event) => {\r\n    if (e.target === el && ++ended >= propCount) {\r\n      end()\r\n    }\r\n  }\r\n  setTimeout(() => {\r\n    if (ended < propCount) {\r\n      end()\r\n    }\r\n  }, timeout + 1)\r\n  el.addEventListener(endEvent, onEnd)\r\n}\r\n\r\ninterface CSSTransitionInfo {\r\n  type: typeof TRANSITION | typeof ANIMATION | null\r\n  propCount: number\r\n  timeout: number\r\n  hasTransform: boolean\r\n}\r\n\r\nexport function getTransitionInfo(\r\n  el: Element,\r\n  expectedType?: TransitionProps['type']\r\n): CSSTransitionInfo {\r\n  const styles: any = window.getComputedStyle(el)\r\n  // JSDOM may return undefined for transition properties\r\n  const getStyleProperties = (key: string) => (styles[key] || '').split(', ')\r\n  const transitionDelays = getStyleProperties(TRANSITION + 'Delay')\r\n  const transitionDurations = getStyleProperties(TRANSITION + 'Duration')\r\n  const transitionTimeout = getTimeout(transitionDelays, transitionDurations)\r\n  const animationDelays = getStyleProperties(ANIMATION + 'Delay')\r\n  const animationDurations = getStyleProperties(ANIMATION + 'Duration')\r\n  const animationTimeout = getTimeout(animationDelays, animationDurations)\r\n\r\n  let type: CSSTransitionInfo['type'] = null\r\n  let timeout = 0\r\n  let propCount = 0\r\n  /* istanbul ignore if */\r\n  if (expectedType === TRANSITION) {\r\n    if (transitionTimeout > 0) {\r\n      type = TRANSITION\r\n      timeout = transitionTimeout\r\n      propCount = transitionDurations.length\r\n    }\r\n  } else if (expectedType === ANIMATION) {\r\n    if (animationTimeout > 0) {\r\n      type = ANIMATION\r\n      timeout = animationTimeout\r\n      propCount = animationDurations.length\r\n    }\r\n  } else {\r\n    timeout = Math.max(transitionTimeout, animationTimeout)\r\n    type =\r\n      timeout > 0\r\n        ? transitionTimeout > animationTimeout\r\n          ? TRANSITION\r\n          : ANIMATION\r\n        : null\r\n    propCount = type\r\n      ? type === TRANSITION\r\n        ? transitionDurations.length\r\n        : animationDurations.length\r\n      : 0\r\n  }\r\n  const hasTransform =\r\n    type === TRANSITION &&\r\n    /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property'])\r\n  return {\r\n    type,\r\n    timeout,\r\n    propCount,\r\n    hasTransform\r\n  }\r\n}\r\n\r\nfunction getTimeout(delays: string[], durations: string[]): number {\r\n  while (delays.length < durations.length) {\r\n    delays = delays.concat(delays)\r\n  }\r\n  return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])))\r\n}\r\n\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s: string): number {\r\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\r\n}\r\n\r\n// synchronously force layout to put elements into a certain state\r\nexport function forceReflow() {\r\n  return document.body.offsetHeight\r\n}\r\n","import {\r\n  TransitionProps,\r\n  addTransitionClass,\r\n  removeTransitionClass,\r\n  ElementWithTransition,\r\n  getTransitionInfo,\r\n  resolveTransitionProps,\r\n  TransitionPropsValidators,\r\n  forceReflow\r\n} from './Transition'\r\nimport {\r\n  Fragment,\r\n  VNode,\r\n  warn,\r\n  resolveTransitionHooks,\r\n  useTransitionState,\r\n  getTransitionRawChildren,\r\n  getCurrentInstance,\r\n  setTransitionHooks,\r\n  createVNode,\r\n  onUpdated,\r\n  SetupContext,\r\n  toRaw,\r\n  compatUtils,\r\n  DeprecationTypes,\r\n  ComponentOptions\r\n} from '@vue/runtime-core'\r\nimport { extend } from '@vue/shared'\r\n\r\nconst positionMap = new WeakMap<VNode, DOMRect>()\r\nconst newPositionMap = new WeakMap<VNode, DOMRect>()\r\n\r\nexport type TransitionGroupProps = Omit<TransitionProps, 'mode'> & {\r\n  tag?: string\r\n  moveClass?: string\r\n}\r\n\r\nconst TransitionGroupImpl: ComponentOptions = {\r\n  name: 'TransitionGroup',\r\n\r\n  props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n    tag: String,\r\n    moveClass: String\r\n  }),\r\n\r\n  setup(props: TransitionGroupProps, { slots }: SetupContext) {\r\n    const instance = getCurrentInstance()!\r\n    const state = useTransitionState()\r\n    let prevChildren: VNode[]\r\n    let children: VNode[]\r\n\r\n    onUpdated(() => {\r\n      // children is guaranteed to exist after initial render\r\n      if (!prevChildren.length) {\r\n        return\r\n      }\r\n      const moveClass = props.moveClass || `${props.name || 'v'}-move`\r\n\r\n      if (\r\n        !hasCSSTransform(\r\n          prevChildren[0].el as ElementWithTransition,\r\n          instance.vnode.el as Node,\r\n          moveClass\r\n        )\r\n      ) {\r\n        return\r\n      }\r\n\r\n      // we divide the work into three loops to avoid mixing DOM reads and writes\r\n      // in each iteration - which helps prevent layout thrashing.\r\n      prevChildren.forEach(callPendingCbs)\r\n      prevChildren.forEach(recordPosition)\r\n      const movedChildren = prevChildren.filter(applyTranslation)\r\n\r\n      // force reflow to put everything in position\r\n      forceReflow()\r\n\r\n      movedChildren.forEach(c => {\r\n        const el = c.el as ElementWithTransition\r\n        const style = el.style\r\n        addTransitionClass(el, moveClass)\r\n        style.transform = style.webkitTransform = style.transitionDuration = ''\r\n        const cb = ((el as any)._moveCb = (e: TransitionEvent) => {\r\n          if (e && e.target !== el) {\r\n            return\r\n          }\r\n          if (!e || /transform$/.test(e.propertyName)) {\r\n            el.removeEventListener('transitionend', cb)\r\n            ;(el as any)._moveCb = null\r\n            removeTransitionClass(el, moveClass)\r\n          }\r\n        })\r\n        el.addEventListener('transitionend', cb)\r\n      })\r\n    })\r\n\r\n    return () => {\r\n      const rawProps = toRaw(props)\r\n      const cssTransitionProps = resolveTransitionProps(rawProps)\r\n      let tag = rawProps.tag || Fragment\r\n\r\n      if (\r\n        __COMPAT__ &&\r\n        !rawProps.tag &&\r\n        compatUtils.checkCompatEnabled(\r\n          DeprecationTypes.TRANSITION_GROUP_ROOT,\r\n          instance.parent\r\n        )\r\n      ) {\r\n        tag = 'span'\r\n      }\r\n\r\n      prevChildren = children\r\n      children = slots.default ? getTransitionRawChildren(slots.default()) : []\r\n\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i]\r\n        if (child.key != null) {\r\n          setTransitionHooks(\r\n            child,\r\n            resolveTransitionHooks(child, cssTransitionProps, state, instance)\r\n          )\r\n        } else if (__DEV__) {\r\n          warn(`<TransitionGroup> children must be keyed.`)\r\n        }\r\n      }\r\n\r\n      if (prevChildren) {\r\n        for (let i = 0; i < prevChildren.length; i++) {\r\n          const child = prevChildren[i]\r\n          setTransitionHooks(\r\n            child,\r\n            resolveTransitionHooks(child, cssTransitionProps, state, instance)\r\n          )\r\n          positionMap.set(child, (child.el as Element).getBoundingClientRect())\r\n        }\r\n      }\r\n\r\n      return createVNode(tag, null, children)\r\n    }\r\n  }\r\n}\r\n\r\nif (__COMPAT__) {\r\n  TransitionGroupImpl.__isBuiltIn = true\r\n}\r\n\r\n/**\r\n * TransitionGroup does not support \"mode\" so we need to remove it from the\r\n * props declarations, but direct delete operation is considered a side effect\r\n * and will make the entire transition feature non-tree-shakeable, so we do it\r\n * in a function and mark the function's invocation as pure.\r\n */\r\nconst removeMode = (props: any) => delete props.mode\r\n/*#__PURE__*/ removeMode(TransitionGroupImpl.props)\r\n\r\nexport const TransitionGroup = TransitionGroupImpl as unknown as {\r\n  new (): {\r\n    $props: TransitionGroupProps\r\n  }\r\n}\r\n\r\nfunction callPendingCbs(c: VNode) {\r\n  const el = c.el as any\r\n  if (el._moveCb) {\r\n    el._moveCb()\r\n  }\r\n  if (el._enterCb) {\r\n    el._enterCb()\r\n  }\r\n}\r\n\r\nfunction recordPosition(c: VNode) {\r\n  newPositionMap.set(c, (c.el as Element).getBoundingClientRect())\r\n}\r\n\r\nfunction applyTranslation(c: VNode): VNode | undefined {\r\n  const oldPos = positionMap.get(c)!\r\n  const newPos = newPositionMap.get(c)!\r\n  const dx = oldPos.left - newPos.left\r\n  const dy = oldPos.top - newPos.top\r\n  if (dx || dy) {\r\n    const s = (c.el as HTMLElement).style\r\n    s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`\r\n    s.transitionDuration = '0s'\r\n    return c\r\n  }\r\n}\r\n\r\nfunction hasCSSTransform(\r\n  el: ElementWithTransition,\r\n  root: Node,\r\n  moveClass: string\r\n): boolean {\r\n  // Detect whether an element with the move class applied has\r\n  // CSS transitions. Since the element may be inside an entering\r\n  // transition at this very moment, we make a clone of it and remove\r\n  // all other transition classes applied to ensure only the move class\r\n  // is applied.\r\n  const clone = el.cloneNode() as HTMLElement\r\n  if (el._vtc) {\r\n    el._vtc.forEach(cls => {\r\n      cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c))\r\n    })\r\n  }\r\n  moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c))\r\n  clone.style.display = 'none'\r\n  const container = (\r\n    root.nodeType === 1 ? root : root.parentNode\r\n  ) as HTMLElement\r\n  container.appendChild(clone)\r\n  const { hasTransform } = getTransitionInfo(clone)\r\n  container.removeChild(clone)\r\n  return hasTransform\r\n}\r\n","import {\r\n  ObjectDirective,\r\n  VNode,\r\n  DirectiveHook,\r\n  DirectiveBinding,\r\n  warn\r\n} from '@vue/runtime-core'\r\nimport { addEventListener } from '../modules/events'\r\nimport {\r\n  isArray,\r\n  looseEqual,\r\n  looseIndexOf,\r\n  invokeArrayFns,\r\n  toNumber,\r\n  isSet\r\n} from '@vue/shared'\r\n\r\ntype AssignerFn = (value: any) => void\r\n\r\nconst getModelAssigner = (vnode: VNode): AssignerFn => {\r\n  const fn =\r\n    vnode.props!['onUpdate:modelValue'] ||\r\n    (__COMPAT__ && vnode.props!['onModelCompat:input'])\r\n  return isArray(fn) ? value => invokeArrayFns(fn, value) : fn\r\n}\r\n\r\nfunction onCompositionStart(e: Event) {\r\n  ;(e.target as any).composing = true\r\n}\r\n\r\nfunction onCompositionEnd(e: Event) {\r\n  const target = e.target as any\r\n  if (target.composing) {\r\n    target.composing = false\r\n    target.dispatchEvent(new Event('input'))\r\n  }\r\n}\r\n\r\ntype ModelDirective<T> = ObjectDirective<T & { _assign: AssignerFn }>\r\n\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nexport const vModelText: ModelDirective<\r\n  HTMLInputElement | HTMLTextAreaElement\r\n> = {\r\n  created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    const castToNumber =\r\n      number || (vnode.props && vnode.props.type === 'number')\r\n    addEventListener(el, lazy ? 'change' : 'input', e => {\r\n      if ((e.target as any).composing) return\r\n      let domValue: string | number = el.value\r\n      if (trim) {\r\n        domValue = domValue.trim()\r\n      }\r\n      if (castToNumber) {\r\n        domValue = toNumber(domValue)\r\n      }\r\n      el._assign(domValue)\r\n    })\r\n    if (trim) {\r\n      addEventListener(el, 'change', () => {\r\n        el.value = el.value.trim()\r\n      })\r\n    }\r\n    if (!lazy) {\r\n      addEventListener(el, 'compositionstart', onCompositionStart)\r\n      addEventListener(el, 'compositionend', onCompositionEnd)\r\n      // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n      // switching focus before confirming composition choice\r\n      // this also fixes the issue where some browsers e.g. iOS Chrome\r\n      // fires \"change\" instead of \"input\" on autocomplete.\r\n      addEventListener(el, 'change', onCompositionEnd)\r\n    }\r\n  },\r\n  // set value on mounted so it's after min/max for type=\"range\"\r\n  mounted(el, { value }) {\r\n    el.value = value == null ? '' : value\r\n  },\r\n  beforeUpdate(el, { value, modifiers: { lazy, trim, number } }, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    // avoid clearing unresolved text. #2302\r\n    if ((el as any).composing) return\r\n    if (document.activeElement === el && el.type !== 'range') {\r\n      if (lazy) {\r\n        return\r\n      }\r\n      if (trim && el.value.trim() === value) {\r\n        return\r\n      }\r\n      if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n        return\r\n      }\r\n    }\r\n    const newValue = value == null ? '' : value\r\n    if (el.value !== newValue) {\r\n      el.value = newValue\r\n    }\r\n  }\r\n}\r\n\r\nexport const vModelCheckbox: ModelDirective<HTMLInputElement> = {\r\n  // #4096 array checkboxes need to be deep traversed\r\n  deep: true,\r\n  created(el, _, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    addEventListener(el, 'change', () => {\r\n      const modelValue = (el as any)._modelValue\r\n      const elementValue = getValue(el)\r\n      const checked = el.checked\r\n      const assign = el._assign\r\n      if (isArray(modelValue)) {\r\n        const index = looseIndexOf(modelValue, elementValue)\r\n        const found = index !== -1\r\n        if (checked && !found) {\r\n          assign(modelValue.concat(elementValue))\r\n        } else if (!checked && found) {\r\n          const filtered = [...modelValue]\r\n          filtered.splice(index, 1)\r\n          assign(filtered)\r\n        }\r\n      } else if (isSet(modelValue)) {\r\n        const cloned = new Set(modelValue)\r\n        if (checked) {\r\n          cloned.add(elementValue)\r\n        } else {\r\n          cloned.delete(elementValue)\r\n        }\r\n        assign(cloned)\r\n      } else {\r\n        assign(getCheckboxValue(el, checked))\r\n      }\r\n    })\r\n  },\r\n  // set initial checked on mount to wait for true-value/false-value\r\n  mounted: setChecked,\r\n  beforeUpdate(el, binding, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    setChecked(el, binding, vnode)\r\n  }\r\n}\r\n\r\nfunction setChecked(\r\n  el: HTMLInputElement,\r\n  { value, oldValue }: DirectiveBinding,\r\n  vnode: VNode\r\n) {\r\n  // store the v-model value on the element so it can be accessed by the\r\n  // change listener.\r\n  ;(el as any)._modelValue = value\r\n  if (isArray(value)) {\r\n    el.checked = looseIndexOf(value, vnode.props!.value) > -1\r\n  } else if (isSet(value)) {\r\n    el.checked = value.has(vnode.props!.value)\r\n  } else if (value !== oldValue) {\r\n    el.checked = looseEqual(value, getCheckboxValue(el, true))\r\n  }\r\n}\r\n\r\nexport const vModelRadio: ModelDirective<HTMLInputElement> = {\r\n  created(el, { value }, vnode) {\r\n    el.checked = looseEqual(value, vnode.props!.value)\r\n    el._assign = getModelAssigner(vnode)\r\n    addEventListener(el, 'change', () => {\r\n      el._assign(getValue(el))\r\n    })\r\n  },\r\n  beforeUpdate(el, { value, oldValue }, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    if (value !== oldValue) {\r\n      el.checked = looseEqual(value, vnode.props!.value)\r\n    }\r\n  }\r\n}\r\n\r\nexport const vModelSelect: ModelDirective<HTMLSelectElement> = {\r\n  // <select multiple> value need to be deep traversed\r\n  deep: true,\r\n  created(el, { value, modifiers: { number } }, vnode) {\r\n    const isSetModel = isSet(value)\r\n    addEventListener(el, 'change', () => {\r\n      const selectedVal = Array.prototype.filter\r\n        .call(el.options, (o: HTMLOptionElement) => o.selected)\r\n        .map((o: HTMLOptionElement) =>\r\n          number ? toNumber(getValue(o)) : getValue(o)\r\n        )\r\n      el._assign(\r\n        el.multiple\r\n          ? isSetModel\r\n            ? new Set(selectedVal)\r\n            : selectedVal\r\n          : selectedVal[0]\r\n      )\r\n    })\r\n    el._assign = getModelAssigner(vnode)\r\n  },\r\n  // set value in mounted & updated because <select> relies on its children\r\n  // <option>s.\r\n  mounted(el, { value }) {\r\n    setSelected(el, value)\r\n  },\r\n  beforeUpdate(el, _binding, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n  },\r\n  updated(el, { value }) {\r\n    setSelected(el, value)\r\n  }\r\n}\r\n\r\nfunction setSelected(el: HTMLSelectElement, value: any) {\r\n  const isMultiple = el.multiple\r\n  if (isMultiple && !isArray(value) && !isSet(value)) {\r\n    __DEV__ &&\r\n      warn(\r\n        `<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n          `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`\r\n      )\r\n    return\r\n  }\r\n  for (let i = 0, l = el.options.length; i < l; i++) {\r\n    const option = el.options[i]\r\n    const optionValue = getValue(option)\r\n    if (isMultiple) {\r\n      if (isArray(value)) {\r\n        option.selected = looseIndexOf(value, optionValue) > -1\r\n      } else {\r\n        option.selected = value.has(optionValue)\r\n      }\r\n    } else {\r\n      if (looseEqual(getValue(option), value)) {\r\n        if (el.selectedIndex !== i) el.selectedIndex = i\r\n        return\r\n      }\r\n    }\r\n  }\r\n  if (!isMultiple && el.selectedIndex !== -1) {\r\n    el.selectedIndex = -1\r\n  }\r\n}\r\n\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el: HTMLOptionElement | HTMLInputElement) {\r\n  return '_value' in el ? (el as any)._value : el.value\r\n}\r\n\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(\r\n  el: HTMLInputElement & { _trueValue?: any; _falseValue?: any },\r\n  checked: boolean\r\n) {\r\n  const key = checked ? '_trueValue' : '_falseValue'\r\n  return key in el ? el[key] : checked\r\n}\r\n\r\nexport const vModelDynamic: ObjectDirective<\r\n  HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\r\n> = {\r\n  created(el, binding, vnode) {\r\n    callModelHook(el, binding, vnode, null, 'created')\r\n  },\r\n  mounted(el, binding, vnode) {\r\n    callModelHook(el, binding, vnode, null, 'mounted')\r\n  },\r\n  beforeUpdate(el, binding, vnode, prevVNode) {\r\n    callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate')\r\n  },\r\n  updated(el, binding, vnode, prevVNode) {\r\n    callModelHook(el, binding, vnode, prevVNode, 'updated')\r\n  }\r\n}\r\n\r\nfunction resolveDynamicModel(tagName: string, type: string | undefined) {\r\n  switch (tagName) {\r\n    case 'SELECT':\r\n      return vModelSelect\r\n    case 'TEXTAREA':\r\n      return vModelText\r\n    default:\r\n      switch (type) {\r\n        case 'checkbox':\r\n          return vModelCheckbox\r\n        case 'radio':\r\n          return vModelRadio\r\n        default:\r\n          return vModelText\r\n      }\r\n  }\r\n}\r\n\r\nfunction callModelHook(\r\n  el: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement,\r\n  binding: DirectiveBinding,\r\n  vnode: VNode,\r\n  prevVNode: VNode | null,\r\n  hook: keyof ObjectDirective\r\n) {\r\n  const modelToUse = resolveDynamicModel(\r\n    el.tagName,\r\n    vnode.props && vnode.props.type\r\n  )\r\n  const fn = modelToUse[hook] as DirectiveHook\r\n  fn && fn(el, binding, vnode, prevVNode)\r\n}\r\n\r\n// SSR vnode transforms, only used when user includes client-oriented render\r\n// function in SSR\r\nexport function initVModelForSSR() {\r\n  vModelText.getSSRProps = ({ value }) => ({ value })\r\n\r\n  vModelRadio.getSSRProps = ({ value }, vnode) => {\r\n    if (vnode.props && looseEqual(vnode.props.value, value)) {\r\n      return { checked: true }\r\n    }\r\n  }\r\n\r\n  vModelCheckbox.getSSRProps = ({ value }, vnode) => {\r\n    if (isArray(value)) {\r\n      if (vnode.props && looseIndexOf(value, vnode.props.value) > -1) {\r\n        return { checked: true }\r\n      }\r\n    } else if (isSet(value)) {\r\n      if (vnode.props && value.has(vnode.props.value)) {\r\n        return { checked: true }\r\n      }\r\n    } else if (value) {\r\n      return { checked: true }\r\n    }\r\n  }\r\n\r\n  vModelDynamic.getSSRProps = (binding, vnode) => {\r\n    if (typeof vnode.type !== 'string') {\r\n      return\r\n    }\r\n    const modelToUse = resolveDynamicModel(\r\n      // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase\r\n      vnode.type.toUpperCase(),\r\n      vnode.props && vnode.props.type\r\n    )\r\n    if (modelToUse.getSSRProps) {\r\n      return modelToUse.getSSRProps(binding, vnode)\r\n    }\r\n  }\r\n}\r\n","import {\r\n  getCurrentInstance,\r\n  DeprecationTypes,\r\n  LegacyConfig,\r\n  compatUtils,\r\n  ComponentInternalInstance\r\n} from '@vue/runtime-core'\r\nimport { hyphenate, isArray } from '@vue/shared'\r\n\r\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta']\r\n\r\ntype KeyedEvent = KeyboardEvent | MouseEvent | TouchEvent\r\n\r\nconst modifierGuards: Record<\r\n  string,\r\n  (e: Event, modifiers: string[]) => void | boolean\r\n> = {\r\n  stop: e => e.stopPropagation(),\r\n  prevent: e => e.preventDefault(),\r\n  self: e => e.target !== e.currentTarget,\r\n  ctrl: e => !(e as KeyedEvent).ctrlKey,\r\n  shift: e => !(e as KeyedEvent).shiftKey,\r\n  alt: e => !(e as KeyedEvent).altKey,\r\n  meta: e => !(e as KeyedEvent).metaKey,\r\n  left: e => 'button' in e && (e as MouseEvent).button !== 0,\r\n  middle: e => 'button' in e && (e as MouseEvent).button !== 1,\r\n  right: e => 'button' in e && (e as MouseEvent).button !== 2,\r\n  exact: (e, modifiers) =>\r\n    systemModifiers.some(m => (e as any)[`${m}Key`] && !modifiers.includes(m))\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport const withModifiers = (fn: Function, modifiers: string[]) => {\r\n  return (event: Event, ...args: unknown[]) => {\r\n    for (let i = 0; i < modifiers.length; i++) {\r\n      const guard = modifierGuards[modifiers[i]]\r\n      if (guard && guard(event, modifiers)) return\r\n    }\r\n    return fn(event, ...args)\r\n  }\r\n}\r\n\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames: Record<string, string | string[]> = {\r\n  esc: 'escape',\r\n  space: ' ',\r\n  up: 'arrow-up',\r\n  left: 'arrow-left',\r\n  right: 'arrow-right',\r\n  down: 'arrow-down',\r\n  delete: 'backspace'\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport const withKeys = (fn: Function, modifiers: string[]) => {\r\n  let globalKeyCodes: LegacyConfig['keyCodes']\r\n  let instance: ComponentInternalInstance | null = null\r\n  if (__COMPAT__) {\r\n    instance = getCurrentInstance()\r\n    if (\r\n      compatUtils.isCompatEnabled(DeprecationTypes.CONFIG_KEY_CODES, instance)\r\n    ) {\r\n      if (instance) {\r\n        globalKeyCodes = (instance.appContext.config as LegacyConfig).keyCodes\r\n      }\r\n    }\r\n    if (__DEV__ && modifiers.some(m => /^\\d+$/.test(m))) {\r\n      compatUtils.warnDeprecation(\r\n        DeprecationTypes.V_ON_KEYCODE_MODIFIER,\r\n        instance\r\n      )\r\n    }\r\n  }\r\n\r\n  return (event: KeyboardEvent) => {\r\n    if (!('key' in event)) {\r\n      return\r\n    }\r\n\r\n    const eventKey = hyphenate(event.key)\r\n    if (modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n      return fn(event)\r\n    }\r\n\r\n    if (__COMPAT__) {\r\n      const keyCode = String(event.keyCode)\r\n      if (\r\n        compatUtils.isCompatEnabled(\r\n          DeprecationTypes.V_ON_KEYCODE_MODIFIER,\r\n          instance\r\n        ) &&\r\n        modifiers.some(mod => mod == keyCode)\r\n      ) {\r\n        return fn(event)\r\n      }\r\n      if (globalKeyCodes) {\r\n        for (const mod of modifiers) {\r\n          const codes = globalKeyCodes[mod]\r\n          if (codes) {\r\n            const matches = isArray(codes)\r\n              ? codes.some(code => String(code) === keyCode)\r\n              : String(codes) === keyCode\r\n            if (matches) {\r\n              return fn(event)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { ObjectDirective } from '@vue/runtime-core'\r\n\r\ninterface VShowElement extends HTMLElement {\r\n  // _vod = vue original display\r\n  _vod: string\r\n}\r\n\r\nexport const vShow: ObjectDirective<VShowElement> = {\r\n  beforeMount(el, { value }, { transition }) {\r\n    el._vod = el.style.display === 'none' ? '' : el.style.display\r\n    if (transition && value) {\r\n      transition.beforeEnter(el)\r\n    } else {\r\n      setDisplay(el, value)\r\n    }\r\n  },\r\n  mounted(el, { value }, { transition }) {\r\n    if (transition && value) {\r\n      transition.enter(el)\r\n    }\r\n  },\r\n  updated(el, { value, oldValue }, { transition }) {\r\n    if (!value === !oldValue) return\r\n    if (transition) {\r\n      if (value) {\r\n        transition.beforeEnter(el)\r\n        setDisplay(el, true)\r\n        transition.enter(el)\r\n      } else {\r\n        transition.leave(el, () => {\r\n          setDisplay(el, false)\r\n        })\r\n      }\r\n    } else {\r\n      setDisplay(el, value)\r\n    }\r\n  },\r\n  beforeUnmount(el, { value }) {\r\n    setDisplay(el, value)\r\n  }\r\n}\r\n\r\nfunction setDisplay(el: VShowElement, value: unknown): void {\r\n  el.style.display = value ? el._vod : 'none'\r\n}\r\n\r\n// SSR vnode transforms, only used when user includes client-oriented render\r\n// function in SSR\r\nexport function initVShowForSSR() {\r\n  vShow.getSSRProps = ({ value }) => {\r\n    if (!value) {\r\n      return { style: { display: 'none' } }\r\n    }\r\n  }\r\n}\r\n","import {\r\n  createRenderer,\r\n  createHydrationRenderer,\r\n  warn,\r\n  RootRenderFunction,\r\n  CreateAppFunction,\r\n  Renderer,\r\n  HydrationRenderer,\r\n  App,\r\n  RootHydrateFunction,\r\n  isRuntimeOnly,\r\n  DeprecationTypes,\r\n  compatUtils\r\n} from '@vue/runtime-core'\r\nimport { nodeOps } from './nodeOps'\r\nimport { patchProp } from './patchProp'\r\n// Importing from the compiler, will be tree-shaken in prod\r\nimport {\r\n  isFunction,\r\n  isString,\r\n  isHTMLTag,\r\n  isSVGTag,\r\n  extend,\r\n  NOOP\r\n} from '@vue/shared'\r\n\r\ndeclare module '@vue/reactivity' {\r\n  export interface RefUnwrapBailTypes {\r\n    // Note: if updating this, also update `types/refBail.d.ts`.\r\n    runtimeDOMBailTypes: Node | Window\r\n  }\r\n}\r\n\r\nconst rendererOptions = /*#__PURE__*/ extend({ patchProp }, nodeOps)\r\n\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer: Renderer<Element | ShadowRoot> | HydrationRenderer\r\n\r\nlet enabledHydration = false\r\n\r\nfunction ensureRenderer() {\r\n  return (\r\n    renderer ||\r\n    (renderer = createRenderer<Node, Element | ShadowRoot>(rendererOptions))\r\n  )\r\n}\r\n\r\nfunction ensureHydrationRenderer() {\r\n  renderer = enabledHydration\r\n    ? renderer\r\n    : createHydrationRenderer(rendererOptions)\r\n  enabledHydration = true\r\n  return renderer as HydrationRenderer\r\n}\r\n\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nexport const render = ((...args) => {\r\n  ensureRenderer().render(...args)\r\n}) as RootRenderFunction<Element | ShadowRoot>\r\n\r\nexport const hydrate = ((...args) => {\r\n  ensureHydrationRenderer().hydrate(...args)\r\n}) as RootHydrateFunction\r\n\r\nexport const createApp = ((...args) => {\r\n  const app = ensureRenderer().createApp(...args)\r\n\r\n  if (__DEV__) {\r\n    injectNativeTagCheck(app)\r\n    injectCompilerOptionsCheck(app)\r\n  }\r\n\r\n  const { mount } = app\r\n  app.mount = (containerOrSelector: Element | ShadowRoot | string): any => {\r\n    const container = normalizeContainer(containerOrSelector)\r\n    if (!container) return\r\n\r\n    const component = app._component\r\n    if (!isFunction(component) && !component.render && !component.template) {\r\n      // __UNSAFE__\r\n      // Reason: potential execution of JS expressions in in-DOM template.\r\n      // The user must make sure the in-DOM template is trusted. If it's\r\n      // rendered by the server, the template should not contain any user data.\r\n      component.template = container.innerHTML\r\n      // 2.x compat check\r\n      if (__COMPAT__ && __DEV__) {\r\n        for (let i = 0; i < container.attributes.length; i++) {\r\n          const attr = container.attributes[i]\r\n          if (attr.name !== 'v-cloak' && /^(v-|:|@)/.test(attr.name)) {\r\n            compatUtils.warnDeprecation(\r\n              DeprecationTypes.GLOBAL_MOUNT_CONTAINER,\r\n              null\r\n            )\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // clear content before mounting\r\n    container.innerHTML = ''\r\n    const proxy = mount(container, false, container instanceof SVGElement)\r\n    if (container instanceof Element) {\r\n      container.removeAttribute('v-cloak')\r\n      container.setAttribute('data-v-app', '')\r\n    }\r\n    return proxy\r\n  }\r\n\r\n  return app\r\n}) as CreateAppFunction<Element>\r\n\r\nexport const createSSRApp = ((...args) => {\r\n  const app = ensureHydrationRenderer().createApp(...args)\r\n\r\n  if (__DEV__) {\r\n    injectNativeTagCheck(app)\r\n    injectCompilerOptionsCheck(app)\r\n  }\r\n\r\n  const { mount } = app\r\n  app.mount = (containerOrSelector: Element | ShadowRoot | string): any => {\r\n    const container = normalizeContainer(containerOrSelector)\r\n    if (container) {\r\n      return mount(container, true, container instanceof SVGElement)\r\n    }\r\n  }\r\n\r\n  return app\r\n}) as CreateAppFunction<Element>\r\n\r\nfunction injectNativeTagCheck(app: App) {\r\n  // Inject `isNativeTag`\r\n  // this is used for component name validation (dev only)\r\n  Object.defineProperty(app.config, 'isNativeTag', {\r\n    value: (tag: string) => isHTMLTag(tag) || isSVGTag(tag),\r\n    writable: false\r\n  })\r\n}\r\n\r\n// dev only\r\nfunction injectCompilerOptionsCheck(app: App) {\r\n  if (isRuntimeOnly()) {\r\n    const isCustomElement = app.config.isCustomElement\r\n    Object.defineProperty(app.config, 'isCustomElement', {\r\n      get() {\r\n        return isCustomElement\r\n      },\r\n      set() {\r\n        warn(\r\n          `The \\`isCustomElement\\` config option is deprecated. Use ` +\r\n            `\\`compilerOptions.isCustomElement\\` instead.`\r\n        )\r\n      }\r\n    })\r\n\r\n    const compilerOptions = app.config.compilerOptions\r\n    const msg =\r\n      `The \\`compilerOptions\\` config option is only respected when using ` +\r\n      `a build of Vue.js that includes the runtime compiler (aka \"full build\"). ` +\r\n      `Since you are using the runtime-only build, \\`compilerOptions\\` ` +\r\n      `must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\\n` +\r\n      `- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\\n` +\r\n      `- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\\n` +\r\n      `- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-dom`\r\n\r\n    Object.defineProperty(app.config, 'compilerOptions', {\r\n      get() {\r\n        warn(msg)\r\n        return compilerOptions\r\n      },\r\n      set() {\r\n        warn(msg)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction normalizeContainer(\r\n  container: Element | ShadowRoot | string\r\n): Element | null {\r\n  if (isString(container)) {\r\n    const res = document.querySelector(container)\r\n    if (__DEV__ && !res) {\r\n      warn(\r\n        `Failed to mount app: mount target selector \"${container}\" returned null.`\r\n      )\r\n    }\r\n    return res\r\n  }\r\n  if (\r\n    __DEV__ &&\r\n    window.ShadowRoot &&\r\n    container instanceof window.ShadowRoot &&\r\n    container.mode === 'closed'\r\n  ) {\r\n    warn(\r\n      `mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`\r\n    )\r\n  }\r\n  return container as any\r\n}\r\n\r\n// Custom element support\r\nexport {\r\n  defineCustomElement,\r\n  defineSSRCustomElement,\r\n  VueElement,\r\n  VueElementConstructor\r\n} from './apiCustomElement'\r\n\r\n// SFC CSS utilities\r\nexport { useCssModule } from './helpers/useCssModule'\r\nexport { useCssVars } from './helpers/useCssVars'\r\n\r\n// DOM-only components\r\nexport { Transition, TransitionProps } from './components/Transition'\r\nexport {\r\n  TransitionGroup,\r\n  TransitionGroupProps\r\n} from './components/TransitionGroup'\r\n\r\n// **Internal** DOM-only runtime directive helpers\r\nexport {\r\n  vModelText,\r\n  vModelCheckbox,\r\n  vModelRadio,\r\n  vModelSelect,\r\n  vModelDynamic\r\n} from './directives/vModel'\r\nexport { withModifiers, withKeys } from './directives/vOn'\r\nexport { vShow } from './directives/vShow'\r\n\r\nimport { initVModelForSSR } from './directives/vModel'\r\nimport { initVShowForSSR } from './directives/vShow'\r\n\r\nlet ssrDirectiveInitialized = false\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const initDirectivesForSSR = __SSR__\r\n  ? () => {\r\n      if (!ssrDirectiveInitialized) {\r\n        ssrDirectiveInitialized = true\r\n        initVModelForSSR()\r\n        initVShowForSSR()\r\n      }\r\n    }\r\n  : NOOP\r\n\r\n// re-export everything from core\r\n// h, Component, reactivity API, nextTick, flags & types\r\nexport * from '@vue/runtime-core'\r\n","import { ElementWithTransition } from '../components/Transition'\r\n\r\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nexport function patchClass(el: Element, value: string | null, isSVG: boolean) {\r\n  // directly setting className should be faster than setAttribute in theory\r\n  // if this is an element during a transition, take the temporary transition\r\n  // classes into account.\r\n  const transitionClasses = (el as ElementWithTransition)._vtc\r\n  if (transitionClasses) {\r\n    value = (\r\n      value ? [value, ...transitionClasses] : [...transitionClasses]\r\n    ).join(' ')\r\n  }\r\n  if (value == null) {\r\n    el.removeAttribute('class')\r\n  } else if (isSVG) {\r\n    el.setAttribute('class', value)\r\n  } else {\r\n    el.className = value\r\n  }\r\n}\r\n","// __UNSAFE__\r\n// Reason: potentially setting innerHTML.\r\n// This can come from explicit usage of v-html or innerHTML as a prop in render\r\n\r\nimport { warn, DeprecationTypes, compatUtils } from '@vue/runtime-core'\r\nimport { includeBooleanAttr } from '@vue/shared'\r\n\r\n// functions. The user is responsible for using them with only trusted content.\r\nexport function patchDOMProp(\r\n  el: any,\r\n  key: string,\r\n  value: any,\r\n  // the following args are passed only due to potential innerHTML/textContent\r\n  // overriding existing VNodes, in which case the old tree must be properly\r\n  // unmounted.\r\n  prevChildren: any,\r\n  parentComponent: any,\r\n  parentSuspense: any,\r\n  unmountChildren: any\r\n) {\r\n  if (key === 'innerHTML' || key === 'textContent') {\r\n    if (prevChildren) {\r\n      unmountChildren(prevChildren, parentComponent, parentSuspense)\r\n    }\r\n    el[key] = value == null ? '' : value\r\n    return\r\n  }\r\n\r\n  if (\r\n    key === 'value' &&\r\n    el.tagName !== 'PROGRESS' &&\r\n    // custom elements may use _value internally\r\n    !el.tagName.includes('-')\r\n  ) {\r\n    // store value as _value as well since\r\n    // non-string values will be stringified.\r\n    el._value = value\r\n    const newValue = value == null ? '' : value\r\n    if (\r\n      el.value !== newValue ||\r\n      // #4956: always set for OPTION elements because its value falls back to\r\n      // textContent if no value attribute is present. And setting .value for\r\n      // OPTION has no side effect\r\n      el.tagName === 'OPTION'\r\n    ) {\r\n      el.value = newValue\r\n    }\r\n    if (value == null) {\r\n      el.removeAttribute(key)\r\n    }\r\n    return\r\n  }\r\n\r\n  let needRemove = false\r\n  if (value === '' || value == null) {\r\n    const type = typeof el[key]\r\n    if (type === 'boolean') {\r\n      // e.g. <select multiple> compiles to { multiple: '' }\r\n      value = includeBooleanAttr(value)\r\n    } else if (value == null && type === 'string') {\r\n      // e.g. <div :id=\"null\">\r\n      value = ''\r\n      needRemove = true\r\n    } else if (type === 'number') {\r\n      // e.g. <img :width=\"null\">\r\n      // the value of some IDL attr must be greater than 0, e.g. input.size = 0 -> error\r\n      value = 0\r\n      needRemove = true\r\n    }\r\n  } else {\r\n    if (\r\n      __COMPAT__ &&\r\n      value === false &&\r\n      compatUtils.isCompatEnabled(\r\n        DeprecationTypes.ATTR_FALSE_VALUE,\r\n        parentComponent\r\n      )\r\n    ) {\r\n      const type = typeof el[key]\r\n      if (type === 'string' || type === 'number') {\r\n        __DEV__ &&\r\n          compatUtils.warnDeprecation(\r\n            DeprecationTypes.ATTR_FALSE_VALUE,\r\n            parentComponent,\r\n            key\r\n          )\r\n        value = type === 'number' ? 0 : ''\r\n        needRemove = true\r\n      }\r\n    }\r\n  }\r\n\r\n  // some properties perform value validation and throw,\r\n  // some properties has getter, no setter, will error in 'use strict'\r\n  // eg. <select :type=\"null\"></select> <select :willValidate=\"null\"></select>\r\n  try {\r\n    el[key] = value\r\n  } catch (e: any) {\r\n    if (__DEV__) {\r\n      warn(\r\n        `Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n          `value ${value} is invalid.`,\r\n        e\r\n      )\r\n    }\r\n  }\r\n  needRemove && el.removeAttribute(key)\r\n}\r\n","// This entry exports the runtime only, and is built as\r\n// `dist/vue.esm-bundler.js` which is used by default for bundlers.\r\nimport { initDev } from './dev'\r\nimport {\r\n  compatUtils,\r\n  createApp,\r\n  Transition,\r\n  TransitionGroup,\r\n  KeepAlive,\r\n  DeprecationTypes,\r\n  vShow,\r\n  vModelDynamic\r\n} from '@vue/runtime-dom'\r\nimport { extend } from '@vue/shared'\r\n\r\nif (__DEV__) {\r\n  initDev()\r\n}\r\n\r\nimport * as runtimeDom from '@vue/runtime-dom'\r\n\r\nfunction wrappedCreateApp(...args: any[]) {\r\n  // @ts-ignore\r\n  const app = createApp(...args)\r\n  if (compatUtils.isCompatEnabled(DeprecationTypes.RENDER_FUNCTION, null)) {\r\n    // register built-in components so that they can be resolved via strings\r\n    // in the legacy h() call. The __compat__ prefix is to ensure that v3 h()\r\n    // doesn't get affected.\r\n    app.component('__compat__transition', Transition)\r\n    app.component('__compat__transition-group', TransitionGroup)\r\n    app.component('__compat__keep-alive', KeepAlive)\r\n    // built-in directives. No need for prefix since there's no render fn API\r\n    // for resolving directives via string in v3.\r\n    app._context.directives.show = vShow\r\n    app._context.directives.model = vModelDynamic\r\n  }\r\n  return app\r\n}\r\n\r\nexport function createCompatVue() {\r\n  const Vue = compatUtils.createCompatVue(createApp, wrappedCreateApp)\r\n  extend(Vue, runtimeDom)\r\n  return Vue\r\n}\r\n","import { SourceLocation } from './ast'\r\n\r\nexport interface CompilerError extends SyntaxError {\r\n  code: number | string\r\n  loc?: SourceLocation\r\n}\r\n\r\nexport interface CoreCompilerError extends CompilerError {\r\n  code: ErrorCodes\r\n}\r\n\r\nexport function defaultOnError(error: CompilerError) {\r\n  throw error\r\n}\r\n\r\nexport function defaultOnWarn(msg: CompilerError) {\r\n  __DEV__ && console.warn(`[Vue warn] ${msg.message}`)\r\n}\r\n\r\ntype InferCompilerError<T> = T extends ErrorCodes\r\n  ? CoreCompilerError\r\n  : CompilerError\r\n\r\nexport function createCompilerError<T extends number>(\r\n  code: T,\r\n  loc?: SourceLocation,\r\n  messages?: { [code: number]: string },\r\n  additionalMessage?: string\r\n): InferCompilerError<T> {\r\n  const msg =\r\n    __DEV__ || !__BROWSER__\r\n      ? (messages || errorMessages)[code] + (additionalMessage || ``)\r\n      : code\r\n  const error = new SyntaxError(String(msg)) as InferCompilerError<T>\r\n  error.code = code\r\n  error.loc = loc\r\n  return error\r\n}\r\n\r\nexport const enum ErrorCodes {\r\n  // parse errors\r\n  ABRUPT_CLOSING_OF_EMPTY_COMMENT,\r\n  CDATA_IN_HTML_CONTENT,\r\n  DUPLICATE_ATTRIBUTE,\r\n  END_TAG_WITH_ATTRIBUTES,\r\n  END_TAG_WITH_TRAILING_SOLIDUS,\r\n  EOF_BEFORE_TAG_NAME,\r\n  EOF_IN_CDATA,\r\n  EOF_IN_COMMENT,\r\n  EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT,\r\n  EOF_IN_TAG,\r\n  INCORRECTLY_CLOSED_COMMENT,\r\n  INCORRECTLY_OPENED_COMMENT,\r\n  INVALID_FIRST_CHARACTER_OF_TAG_NAME,\r\n  MISSING_ATTRIBUTE_VALUE,\r\n  MISSING_END_TAG_NAME,\r\n  MISSING_WHITESPACE_BETWEEN_ATTRIBUTES,\r\n  NESTED_COMMENT,\r\n  UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME,\r\n  UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE,\r\n  UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME,\r\n  UNEXPECTED_NULL_CHARACTER,\r\n  UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME,\r\n  UNEXPECTED_SOLIDUS_IN_TAG,\r\n\r\n  // Vue-specific parse errors\r\n  X_INVALID_END_TAG,\r\n  X_MISSING_END_TAG,\r\n  X_MISSING_INTERPOLATION_END,\r\n  X_MISSING_DIRECTIVE_NAME,\r\n  X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END,\r\n\r\n  // transform errors\r\n  X_V_IF_NO_EXPRESSION,\r\n  X_V_IF_SAME_KEY,\r\n  X_V_ELSE_NO_ADJACENT_IF,\r\n  X_V_FOR_NO_EXPRESSION,\r\n  X_V_FOR_MALFORMED_EXPRESSION,\r\n  X_V_FOR_TEMPLATE_KEY_PLACEMENT,\r\n  X_V_BIND_NO_EXPRESSION,\r\n  X_V_ON_NO_EXPRESSION,\r\n  X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET,\r\n  X_V_SLOT_MIXED_SLOT_USAGE,\r\n  X_V_SLOT_DUPLICATE_SLOT_NAMES,\r\n  X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN,\r\n  X_V_SLOT_MISPLACED,\r\n  X_V_MODEL_NO_EXPRESSION,\r\n  X_V_MODEL_MALFORMED_EXPRESSION,\r\n  X_V_MODEL_ON_SCOPE_VARIABLE,\r\n  X_INVALID_EXPRESSION,\r\n  X_KEEP_ALIVE_INVALID_CHILDREN,\r\n\r\n  // generic errors\r\n  X_PREFIX_ID_NOT_SUPPORTED,\r\n  X_MODULE_MODE_NOT_SUPPORTED,\r\n  X_CACHE_HANDLER_NOT_SUPPORTED,\r\n  X_SCOPE_ID_NOT_SUPPORTED,\r\n\r\n  // Special value for higher-order compilers to pick up the last code\r\n  // to avoid collision of error codes. This should always be kept as the last\r\n  // item.\r\n  __EXTEND_POINT__\r\n}\r\n\r\nexport const errorMessages: Record<ErrorCodes, string> = {\r\n  // parse errors\r\n  [ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT]: 'Illegal comment.',\r\n  [ErrorCodes.CDATA_IN_HTML_CONTENT]:\r\n    'CDATA section is allowed only in XML context.',\r\n  [ErrorCodes.DUPLICATE_ATTRIBUTE]: 'Duplicate attribute.',\r\n  [ErrorCodes.END_TAG_WITH_ATTRIBUTES]: 'End tag cannot have attributes.',\r\n  [ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS]: \"Illegal '/' in tags.\",\r\n  [ErrorCodes.EOF_BEFORE_TAG_NAME]: 'Unexpected EOF in tag.',\r\n  [ErrorCodes.EOF_IN_CDATA]: 'Unexpected EOF in CDATA section.',\r\n  [ErrorCodes.EOF_IN_COMMENT]: 'Unexpected EOF in comment.',\r\n  [ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT]:\r\n    'Unexpected EOF in script.',\r\n  [ErrorCodes.EOF_IN_TAG]: 'Unexpected EOF in tag.',\r\n  [ErrorCodes.INCORRECTLY_CLOSED_COMMENT]: 'Incorrectly closed comment.',\r\n  [ErrorCodes.INCORRECTLY_OPENED_COMMENT]: 'Incorrectly opened comment.',\r\n  [ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME]:\r\n    \"Illegal tag name. Use '&lt;' to print '<'.\",\r\n  [ErrorCodes.MISSING_ATTRIBUTE_VALUE]: 'Attribute value was expected.',\r\n  [ErrorCodes.MISSING_END_TAG_NAME]: 'End tag name was expected.',\r\n  [ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES]:\r\n    'Whitespace was expected.',\r\n  [ErrorCodes.NESTED_COMMENT]: \"Unexpected '<!--' in comment.\",\r\n  [ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME]:\r\n    'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\r\n  [ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE]:\r\n    'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\r\n  [ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME]:\r\n    \"Attribute name cannot start with '='.\",\r\n  [ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME]:\r\n    \"'<?' is allowed only in XML context.\",\r\n  [ErrorCodes.UNEXPECTED_NULL_CHARACTER]: `Unexpected null character.`,\r\n  [ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG]: \"Illegal '/' in tags.\",\r\n\r\n  // Vue-specific parse errors\r\n  [ErrorCodes.X_INVALID_END_TAG]: 'Invalid end tag.',\r\n  [ErrorCodes.X_MISSING_END_TAG]: 'Element is missing end tag.',\r\n  [ErrorCodes.X_MISSING_INTERPOLATION_END]:\r\n    'Interpolation end sign was not found.',\r\n  [ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END]:\r\n    'End bracket for dynamic directive argument was not found. ' +\r\n    'Note that dynamic directive argument cannot contain spaces.',\r\n  [ErrorCodes.X_MISSING_DIRECTIVE_NAME]: 'Legal directive name was expected.',\r\n\r\n  // transform errors\r\n  [ErrorCodes.X_V_IF_NO_EXPRESSION]: `v-if/v-else-if is missing expression.`,\r\n  [ErrorCodes.X_V_IF_SAME_KEY]: `v-if/else branches must use unique keys.`,\r\n  [ErrorCodes.X_V_ELSE_NO_ADJACENT_IF]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\r\n  [ErrorCodes.X_V_FOR_NO_EXPRESSION]: `v-for is missing expression.`,\r\n  [ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION]: `v-for has invalid expression.`,\r\n  [ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT]: `<template v-for> key should be placed on the <template> tag.`,\r\n  [ErrorCodes.X_V_BIND_NO_EXPRESSION]: `v-bind is missing expression.`,\r\n  [ErrorCodes.X_V_ON_NO_EXPRESSION]: `v-on is missing expression.`,\r\n  [ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET]: `Unexpected custom directive on <slot> outlet.`,\r\n  [ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE]:\r\n    `Mixed v-slot usage on both the component and nested <template>.` +\r\n    `When there are multiple named slots, all slots should use <template> ` +\r\n    `syntax to avoid scope ambiguity.`,\r\n  [ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES]: `Duplicate slot names found. `,\r\n  [ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN]:\r\n    `Extraneous children found when component already has explicitly named ` +\r\n    `default slot. These children will be ignored.`,\r\n  [ErrorCodes.X_V_SLOT_MISPLACED]: `v-slot can only be used on components or <template> tags.`,\r\n  [ErrorCodes.X_V_MODEL_NO_EXPRESSION]: `v-model is missing expression.`,\r\n  [ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION]: `v-model value must be a valid JavaScript member expression.`,\r\n  [ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\r\n  [ErrorCodes.X_INVALID_EXPRESSION]: `Error parsing JavaScript expression: `,\r\n  [ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN]: `<KeepAlive> expects exactly one child component.`,\r\n\r\n  // generic errors\r\n  [ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\r\n  [ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED]: `ES module mode is not supported in this build of compiler.`,\r\n  [ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\r\n  [ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED]: `\"scopeId\" option is only supported in module mode.`,\r\n\r\n  // just to fulfill types\r\n  [ErrorCodes.__EXTEND_POINT__]: ``\r\n}\r\n","export const FRAGMENT = Symbol(__DEV__ ? `Fragment` : ``)\r\nexport const TELEPORT = Symbol(__DEV__ ? `Teleport` : ``)\r\nexport const SUSPENSE = Symbol(__DEV__ ? `Suspense` : ``)\r\nexport const KEEP_ALIVE = Symbol(__DEV__ ? `KeepAlive` : ``)\r\nexport const BASE_TRANSITION = Symbol(__DEV__ ? `BaseTransition` : ``)\r\nexport const OPEN_BLOCK = Symbol(__DEV__ ? `openBlock` : ``)\r\nexport const CREATE_BLOCK = Symbol(__DEV__ ? `createBlock` : ``)\r\nexport const CREATE_ELEMENT_BLOCK = Symbol(__DEV__ ? `createElementBlock` : ``)\r\nexport const CREATE_VNODE = Symbol(__DEV__ ? `createVNode` : ``)\r\nexport const CREATE_ELEMENT_VNODE = Symbol(__DEV__ ? `createElementVNode` : ``)\r\nexport const CREATE_COMMENT = Symbol(__DEV__ ? `createCommentVNode` : ``)\r\nexport const CREATE_TEXT = Symbol(__DEV__ ? `createTextVNode` : ``)\r\nexport const CREATE_STATIC = Symbol(__DEV__ ? `createStaticVNode` : ``)\r\nexport const RESOLVE_COMPONENT = Symbol(__DEV__ ? `resolveComponent` : ``)\r\nexport const RESOLVE_DYNAMIC_COMPONENT = Symbol(\r\n  __DEV__ ? `resolveDynamicComponent` : ``\r\n)\r\nexport const RESOLVE_DIRECTIVE = Symbol(__DEV__ ? `resolveDirective` : ``)\r\nexport const RESOLVE_FILTER = Symbol(__DEV__ ? `resolveFilter` : ``)\r\nexport const WITH_DIRECTIVES = Symbol(__DEV__ ? `withDirectives` : ``)\r\nexport const RENDER_LIST = Symbol(__DEV__ ? `renderList` : ``)\r\nexport const RENDER_SLOT = Symbol(__DEV__ ? `renderSlot` : ``)\r\nexport const CREATE_SLOTS = Symbol(__DEV__ ? `createSlots` : ``)\r\nexport const TO_DISPLAY_STRING = Symbol(__DEV__ ? `toDisplayString` : ``)\r\nexport const MERGE_PROPS = Symbol(__DEV__ ? `mergeProps` : ``)\r\nexport const NORMALIZE_CLASS = Symbol(__DEV__ ? `normalizeClass` : ``)\r\nexport const NORMALIZE_STYLE = Symbol(__DEV__ ? `normalizeStyle` : ``)\r\nexport const NORMALIZE_PROPS = Symbol(__DEV__ ? `normalizeProps` : ``)\r\nexport const GUARD_REACTIVE_PROPS = Symbol(__DEV__ ? `guardReactiveProps` : ``)\r\nexport const TO_HANDLERS = Symbol(__DEV__ ? `toHandlers` : ``)\r\nexport const CAMELIZE = Symbol(__DEV__ ? `camelize` : ``)\r\nexport const CAPITALIZE = Symbol(__DEV__ ? `capitalize` : ``)\r\nexport const TO_HANDLER_KEY = Symbol(__DEV__ ? `toHandlerKey` : ``)\r\nexport const SET_BLOCK_TRACKING = Symbol(__DEV__ ? `setBlockTracking` : ``)\r\nexport const PUSH_SCOPE_ID = Symbol(__DEV__ ? `pushScopeId` : ``)\r\nexport const POP_SCOPE_ID = Symbol(__DEV__ ? `popScopeId` : ``)\r\nexport const WITH_CTX = Symbol(__DEV__ ? `withCtx` : ``)\r\nexport const UNREF = Symbol(__DEV__ ? `unref` : ``)\r\nexport const IS_REF = Symbol(__DEV__ ? `isRef` : ``)\r\nexport const WITH_MEMO = Symbol(__DEV__ ? `withMemo` : ``)\r\nexport const IS_MEMO_SAME = Symbol(__DEV__ ? `isMemoSame` : ``)\r\n\r\n// Name mapping for runtime helpers that need to be imported from 'vue' in\r\n// generated code. Make sure these are correctly exported in the runtime!\r\n// Using `any` here because TS doesn't allow symbols as index type.\r\nexport const helperNameMap: any = {\r\n  [FRAGMENT]: `Fragment`,\r\n  [TELEPORT]: `Teleport`,\r\n  [SUSPENSE]: `Suspense`,\r\n  [KEEP_ALIVE]: `KeepAlive`,\r\n  [BASE_TRANSITION]: `BaseTransition`,\r\n  [OPEN_BLOCK]: `openBlock`,\r\n  [CREATE_BLOCK]: `createBlock`,\r\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\r\n  [CREATE_VNODE]: `createVNode`,\r\n  [CREATE_ELEMENT_VNODE]: `createElementVNode`,\r\n  [CREATE_COMMENT]: `createCommentVNode`,\r\n  [CREATE_TEXT]: `createTextVNode`,\r\n  [CREATE_STATIC]: `createStaticVNode`,\r\n  [RESOLVE_COMPONENT]: `resolveComponent`,\r\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\r\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\r\n  [RESOLVE_FILTER]: `resolveFilter`,\r\n  [WITH_DIRECTIVES]: `withDirectives`,\r\n  [RENDER_LIST]: `renderList`,\r\n  [RENDER_SLOT]: `renderSlot`,\r\n  [CREATE_SLOTS]: `createSlots`,\r\n  [TO_DISPLAY_STRING]: `toDisplayString`,\r\n  [MERGE_PROPS]: `mergeProps`,\r\n  [NORMALIZE_CLASS]: `normalizeClass`,\r\n  [NORMALIZE_STYLE]: `normalizeStyle`,\r\n  [NORMALIZE_PROPS]: `normalizeProps`,\r\n  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\r\n  [TO_HANDLERS]: `toHandlers`,\r\n  [CAMELIZE]: `camelize`,\r\n  [CAPITALIZE]: `capitalize`,\r\n  [TO_HANDLER_KEY]: `toHandlerKey`,\r\n  [SET_BLOCK_TRACKING]: `setBlockTracking`,\r\n  [PUSH_SCOPE_ID]: `pushScopeId`,\r\n  [POP_SCOPE_ID]: `popScopeId`,\r\n  [WITH_CTX]: `withCtx`,\r\n  [UNREF]: `unref`,\r\n  [IS_REF]: `isRef`,\r\n  [WITH_MEMO]: `withMemo`,\r\n  [IS_MEMO_SAME]: `isMemoSame`\r\n}\r\n\r\nexport function registerRuntimeHelpers(helpers: any) {\r\n  Object.getOwnPropertySymbols(helpers).forEach(s => {\r\n    helperNameMap[s] = helpers[s]\r\n  })\r\n}\r\n","import { isString } from '@vue/shared'\r\nimport { ForParseResult } from './transforms/vFor'\r\nimport {\r\n  RENDER_SLOT,\r\n  CREATE_SLOTS,\r\n  RENDER_LIST,\r\n  OPEN_BLOCK,\r\n  FRAGMENT,\r\n  WITH_DIRECTIVES,\r\n  WITH_MEMO\r\n} from './runtimeHelpers'\r\nimport { PropsExpression } from './transforms/transformElement'\r\nimport { ImportItem, TransformContext } from './transform'\r\nimport { getVNodeBlockHelper, getVNodeHelper } from './utils'\r\n\r\n// Vue template is a platform-agnostic superset of HTML (syntax only).\r\n// More namespaces like SVG and MathML are declared by platform specific\r\n// compilers.\r\nexport type Namespace = number\r\n\r\nexport const enum Namespaces {\r\n  HTML\r\n}\r\n\r\nexport const enum NodeTypes {\r\n  ROOT,\r\n  ELEMENT,\r\n  TEXT,\r\n  COMMENT,\r\n  SIMPLE_EXPRESSION,\r\n  INTERPOLATION,\r\n  ATTRIBUTE,\r\n  DIRECTIVE,\r\n  // containers\r\n  COMPOUND_EXPRESSION,\r\n  IF,\r\n  IF_BRANCH,\r\n  FOR,\r\n  TEXT_CALL,\r\n  // codegen\r\n  VNODE_CALL,\r\n  JS_CALL_EXPRESSION,\r\n  JS_OBJECT_EXPRESSION,\r\n  JS_PROPERTY,\r\n  JS_ARRAY_EXPRESSION,\r\n  JS_FUNCTION_EXPRESSION,\r\n  JS_CONDITIONAL_EXPRESSION,\r\n  JS_CACHE_EXPRESSION,\r\n\r\n  // ssr codegen\r\n  JS_BLOCK_STATEMENT,\r\n  JS_TEMPLATE_LITERAL,\r\n  JS_IF_STATEMENT,\r\n  JS_ASSIGNMENT_EXPRESSION,\r\n  JS_SEQUENCE_EXPRESSION,\r\n  JS_RETURN_STATEMENT\r\n}\r\n\r\nexport const enum ElementTypes {\r\n  ELEMENT,\r\n  COMPONENT,\r\n  SLOT,\r\n  TEMPLATE\r\n}\r\n\r\nexport interface Node {\r\n  type: NodeTypes\r\n  loc: SourceLocation\r\n}\r\n\r\n// The node's range. The `start` is inclusive and `end` is exclusive.\r\n// [start, end)\r\nexport interface SourceLocation {\r\n  start: Position\r\n  end: Position\r\n  source: string\r\n}\r\n\r\nexport interface Position {\r\n  offset: number // from start of file\r\n  line: number\r\n  column: number\r\n}\r\n\r\nexport type ParentNode = RootNode | ElementNode | IfBranchNode | ForNode\r\n\r\nexport type ExpressionNode = SimpleExpressionNode | CompoundExpressionNode\r\n\r\nexport type TemplateChildNode =\r\n  | ElementNode\r\n  | InterpolationNode\r\n  | CompoundExpressionNode\r\n  | TextNode\r\n  | CommentNode\r\n  | IfNode\r\n  | IfBranchNode\r\n  | ForNode\r\n  | TextCallNode\r\n\r\nexport interface RootNode extends Node {\r\n  type: NodeTypes.ROOT\r\n  children: TemplateChildNode[]\r\n  helpers: symbol[]\r\n  components: string[]\r\n  directives: string[]\r\n  hoists: (JSChildNode | null)[]\r\n  imports: ImportItem[]\r\n  cached: number\r\n  temps: number\r\n  ssrHelpers?: symbol[]\r\n  codegenNode?: TemplateChildNode | JSChildNode | BlockStatement\r\n\r\n  // v2 compat only\r\n  filters?: string[]\r\n}\r\n\r\nexport type ElementNode =\r\n  | PlainElementNode\r\n  | ComponentNode\r\n  | SlotOutletNode\r\n  | TemplateNode\r\n\r\nexport interface BaseElementNode extends Node {\r\n  type: NodeTypes.ELEMENT\r\n  ns: Namespace\r\n  tag: string\r\n  tagType: ElementTypes\r\n  isSelfClosing: boolean\r\n  props: Array<AttributeNode | DirectiveNode>\r\n  children: TemplateChildNode[]\r\n}\r\n\r\nexport interface PlainElementNode extends BaseElementNode {\r\n  tagType: ElementTypes.ELEMENT\r\n  codegenNode:\r\n    | VNodeCall\r\n    | SimpleExpressionNode // when hoisted\r\n    | CacheExpression // when cached by v-once\r\n    | MemoExpression // when cached by v-memo\r\n    | undefined\r\n  ssrCodegenNode?: TemplateLiteral\r\n}\r\n\r\nexport interface ComponentNode extends BaseElementNode {\r\n  tagType: ElementTypes.COMPONENT\r\n  codegenNode:\r\n    | VNodeCall\r\n    | CacheExpression // when cached by v-once\r\n    | MemoExpression // when cached by v-memo\r\n    | undefined\r\n  ssrCodegenNode?: CallExpression\r\n}\r\n\r\nexport interface SlotOutletNode extends BaseElementNode {\r\n  tagType: ElementTypes.SLOT\r\n  codegenNode:\r\n    | RenderSlotCall\r\n    | CacheExpression // when cached by v-once\r\n    | undefined\r\n  ssrCodegenNode?: CallExpression\r\n}\r\n\r\nexport interface TemplateNode extends BaseElementNode {\r\n  tagType: ElementTypes.TEMPLATE\r\n  // TemplateNode is a container type that always gets compiled away\r\n  codegenNode: undefined\r\n}\r\n\r\nexport interface TextNode extends Node {\r\n  type: NodeTypes.TEXT\r\n  content: string\r\n}\r\n\r\nexport interface CommentNode extends Node {\r\n  type: NodeTypes.COMMENT\r\n  content: string\r\n}\r\n\r\nexport interface AttributeNode extends Node {\r\n  type: NodeTypes.ATTRIBUTE\r\n  name: string\r\n  value: TextNode | undefined\r\n}\r\n\r\nexport interface DirectiveNode extends Node {\r\n  type: NodeTypes.DIRECTIVE\r\n  name: string\r\n  exp: ExpressionNode | undefined\r\n  arg: ExpressionNode | undefined\r\n  modifiers: string[]\r\n  /**\r\n   * optional property to cache the expression parse result for v-for\r\n   */\r\n  parseResult?: ForParseResult\r\n}\r\n\r\n/**\r\n * Static types have several levels.\r\n * Higher levels implies lower levels. e.g. a node that can be stringified\r\n * can always be hoisted and skipped for patch.\r\n */\r\nexport const enum ConstantTypes {\r\n  NOT_CONSTANT = 0,\r\n  CAN_SKIP_PATCH,\r\n  CAN_HOIST,\r\n  CAN_STRINGIFY\r\n}\r\n\r\nexport interface SimpleExpressionNode extends Node {\r\n  type: NodeTypes.SIMPLE_EXPRESSION\r\n  content: string\r\n  isStatic: boolean\r\n  constType: ConstantTypes\r\n  /**\r\n   * Indicates this is an identifier for a hoist vnode call and points to the\r\n   * hoisted node.\r\n   */\r\n  hoisted?: JSChildNode\r\n  /**\r\n   * an expression parsed as the params of a function will track\r\n   * the identifiers declared inside the function body.\r\n   */\r\n  identifiers?: string[]\r\n  isHandlerKey?: boolean\r\n}\r\n\r\nexport interface InterpolationNode extends Node {\r\n  type: NodeTypes.INTERPOLATION\r\n  content: ExpressionNode\r\n}\r\n\r\nexport interface CompoundExpressionNode extends Node {\r\n  type: NodeTypes.COMPOUND_EXPRESSION\r\n  children: (\r\n    | SimpleExpressionNode\r\n    | CompoundExpressionNode\r\n    | InterpolationNode\r\n    | TextNode\r\n    | string\r\n    | symbol\r\n  )[]\r\n\r\n  /**\r\n   * an expression parsed as the params of a function will track\r\n   * the identifiers declared inside the function body.\r\n   */\r\n  identifiers?: string[]\r\n  isHandlerKey?: boolean\r\n}\r\n\r\nexport interface IfNode extends Node {\r\n  type: NodeTypes.IF\r\n  branches: IfBranchNode[]\r\n  codegenNode?: IfConditionalExpression | CacheExpression // <div v-if v-once>\r\n}\r\n\r\nexport interface IfBranchNode extends Node {\r\n  type: NodeTypes.IF_BRANCH\r\n  condition: ExpressionNode | undefined // else\r\n  children: TemplateChildNode[]\r\n  userKey?: AttributeNode | DirectiveNode\r\n  isTemplateIf?: boolean\r\n}\r\n\r\nexport interface ForNode extends Node {\r\n  type: NodeTypes.FOR\r\n  source: ExpressionNode\r\n  valueAlias: ExpressionNode | undefined\r\n  keyAlias: ExpressionNode | undefined\r\n  objectIndexAlias: ExpressionNode | undefined\r\n  parseResult: ForParseResult\r\n  children: TemplateChildNode[]\r\n  codegenNode?: ForCodegenNode\r\n}\r\n\r\nexport interface TextCallNode extends Node {\r\n  type: NodeTypes.TEXT_CALL\r\n  content: TextNode | InterpolationNode | CompoundExpressionNode\r\n  codegenNode: CallExpression | SimpleExpressionNode // when hoisted\r\n}\r\n\r\nexport type TemplateTextChildNode =\r\n  | TextNode\r\n  | InterpolationNode\r\n  | CompoundExpressionNode\r\n\r\nexport interface VNodeCall extends Node {\r\n  type: NodeTypes.VNODE_CALL\r\n  tag: string | symbol | CallExpression\r\n  props: PropsExpression | undefined\r\n  children:\r\n    | TemplateChildNode[] // multiple children\r\n    | TemplateTextChildNode // single text child\r\n    | SlotsExpression // component slots\r\n    | ForRenderListExpression // v-for fragment call\r\n    | SimpleExpressionNode // hoisted\r\n    | undefined\r\n  patchFlag: string | undefined\r\n  dynamicProps: string | SimpleExpressionNode | undefined\r\n  directives: DirectiveArguments | undefined\r\n  isBlock: boolean\r\n  disableTracking: boolean\r\n  isComponent: boolean\r\n}\r\n\r\n// JS Node Types ---------------------------------------------------------------\r\n\r\n// We also include a number of JavaScript AST nodes for code generation.\r\n// The AST is an intentionally minimal subset just to meet the exact needs of\r\n// Vue render function generation.\r\n\r\nexport type JSChildNode =\r\n  | VNodeCall\r\n  | CallExpression\r\n  | ObjectExpression\r\n  | ArrayExpression\r\n  | ExpressionNode\r\n  | FunctionExpression\r\n  | ConditionalExpression\r\n  | CacheExpression\r\n  | AssignmentExpression\r\n  | SequenceExpression\r\n\r\nexport interface CallExpression extends Node {\r\n  type: NodeTypes.JS_CALL_EXPRESSION\r\n  callee: string | symbol\r\n  arguments: (\r\n    | string\r\n    | symbol\r\n    | JSChildNode\r\n    | SSRCodegenNode\r\n    | TemplateChildNode\r\n    | TemplateChildNode[]\r\n  )[]\r\n}\r\n\r\nexport interface ObjectExpression extends Node {\r\n  type: NodeTypes.JS_OBJECT_EXPRESSION\r\n  properties: Array<Property>\r\n}\r\n\r\nexport interface Property extends Node {\r\n  type: NodeTypes.JS_PROPERTY\r\n  key: ExpressionNode\r\n  value: JSChildNode\r\n}\r\n\r\nexport interface ArrayExpression extends Node {\r\n  type: NodeTypes.JS_ARRAY_EXPRESSION\r\n  elements: Array<string | Node>\r\n}\r\n\r\nexport interface FunctionExpression extends Node {\r\n  type: NodeTypes.JS_FUNCTION_EXPRESSION\r\n  params: ExpressionNode | string | (ExpressionNode | string)[] | undefined\r\n  returns?: TemplateChildNode | TemplateChildNode[] | JSChildNode\r\n  body?: BlockStatement | IfStatement\r\n  newline: boolean\r\n  /**\r\n   * This flag is for codegen to determine whether it needs to generate the\r\n   * withScopeId() wrapper\r\n   */\r\n  isSlot: boolean\r\n  /**\r\n   * __COMPAT__ only, indicates a slot function that should be excluded from\r\n   * the legacy $scopedSlots instance property.\r\n   */\r\n  isNonScopedSlot?: boolean\r\n}\r\n\r\nexport interface ConditionalExpression extends Node {\r\n  type: NodeTypes.JS_CONDITIONAL_EXPRESSION\r\n  test: JSChildNode\r\n  consequent: JSChildNode\r\n  alternate: JSChildNode\r\n  newline: boolean\r\n}\r\n\r\nexport interface CacheExpression extends Node {\r\n  type: NodeTypes.JS_CACHE_EXPRESSION\r\n  index: number\r\n  value: JSChildNode\r\n  isVNode: boolean\r\n}\r\n\r\nexport interface MemoExpression extends CallExpression {\r\n  callee: typeof WITH_MEMO\r\n  arguments: [ExpressionNode, MemoFactory, string, string]\r\n}\r\n\r\ninterface MemoFactory extends FunctionExpression {\r\n  returns: BlockCodegenNode\r\n}\r\n\r\n// SSR-specific Node Types -----------------------------------------------------\r\n\r\nexport type SSRCodegenNode =\r\n  | BlockStatement\r\n  | TemplateLiteral\r\n  | IfStatement\r\n  | AssignmentExpression\r\n  | ReturnStatement\r\n  | SequenceExpression\r\n\r\nexport interface BlockStatement extends Node {\r\n  type: NodeTypes.JS_BLOCK_STATEMENT\r\n  body: (JSChildNode | IfStatement)[]\r\n}\r\n\r\nexport interface TemplateLiteral extends Node {\r\n  type: NodeTypes.JS_TEMPLATE_LITERAL\r\n  elements: (string | JSChildNode)[]\r\n}\r\n\r\nexport interface IfStatement extends Node {\r\n  type: NodeTypes.JS_IF_STATEMENT\r\n  test: ExpressionNode\r\n  consequent: BlockStatement\r\n  alternate: IfStatement | BlockStatement | ReturnStatement | undefined\r\n}\r\n\r\nexport interface AssignmentExpression extends Node {\r\n  type: NodeTypes.JS_ASSIGNMENT_EXPRESSION\r\n  left: SimpleExpressionNode\r\n  right: JSChildNode\r\n}\r\n\r\nexport interface SequenceExpression extends Node {\r\n  type: NodeTypes.JS_SEQUENCE_EXPRESSION\r\n  expressions: JSChildNode[]\r\n}\r\n\r\nexport interface ReturnStatement extends Node {\r\n  type: NodeTypes.JS_RETURN_STATEMENT\r\n  returns: TemplateChildNode | TemplateChildNode[] | JSChildNode\r\n}\r\n\r\n// Codegen Node Types ----------------------------------------------------------\r\n\r\nexport interface DirectiveArguments extends ArrayExpression {\r\n  elements: DirectiveArgumentNode[]\r\n}\r\n\r\nexport interface DirectiveArgumentNode extends ArrayExpression {\r\n  elements: // dir, exp, arg, modifiers\r\n  | [string]\r\n    | [string, ExpressionNode]\r\n    | [string, ExpressionNode, ExpressionNode]\r\n    | [string, ExpressionNode, ExpressionNode, ObjectExpression]\r\n}\r\n\r\n// renderSlot(...)\r\nexport interface RenderSlotCall extends CallExpression {\r\n  callee: typeof RENDER_SLOT\r\n  arguments: // $slots, name, props, fallback\r\n  | [string, string | ExpressionNode]\r\n    | [string, string | ExpressionNode, PropsExpression]\r\n    | [\r\n        string,\r\n        string | ExpressionNode,\r\n        PropsExpression | '{}',\r\n        TemplateChildNode[]\r\n      ]\r\n}\r\n\r\nexport type SlotsExpression = SlotsObjectExpression | DynamicSlotsExpression\r\n\r\n// { foo: () => [...] }\r\nexport interface SlotsObjectExpression extends ObjectExpression {\r\n  properties: SlotsObjectProperty[]\r\n}\r\n\r\nexport interface SlotsObjectProperty extends Property {\r\n  value: SlotFunctionExpression\r\n}\r\n\r\nexport interface SlotFunctionExpression extends FunctionExpression {\r\n  returns: TemplateChildNode[]\r\n}\r\n\r\n// createSlots({ ... }, [\r\n//    foo ? () => [] : undefined,\r\n//    renderList(list, i => () => [i])\r\n// ])\r\nexport interface DynamicSlotsExpression extends CallExpression {\r\n  callee: typeof CREATE_SLOTS\r\n  arguments: [SlotsObjectExpression, DynamicSlotEntries]\r\n}\r\n\r\nexport interface DynamicSlotEntries extends ArrayExpression {\r\n  elements: (ConditionalDynamicSlotNode | ListDynamicSlotNode)[]\r\n}\r\n\r\nexport interface ConditionalDynamicSlotNode extends ConditionalExpression {\r\n  consequent: DynamicSlotNode\r\n  alternate: DynamicSlotNode | SimpleExpressionNode\r\n}\r\n\r\nexport interface ListDynamicSlotNode extends CallExpression {\r\n  callee: typeof RENDER_LIST\r\n  arguments: [ExpressionNode, ListDynamicSlotIterator]\r\n}\r\n\r\nexport interface ListDynamicSlotIterator extends FunctionExpression {\r\n  returns: DynamicSlotNode\r\n}\r\n\r\nexport interface DynamicSlotNode extends ObjectExpression {\r\n  properties: [Property, DynamicSlotFnProperty]\r\n}\r\n\r\nexport interface DynamicSlotFnProperty extends Property {\r\n  value: SlotFunctionExpression\r\n}\r\n\r\nexport type BlockCodegenNode = VNodeCall | RenderSlotCall\r\n\r\nexport interface IfConditionalExpression extends ConditionalExpression {\r\n  consequent: BlockCodegenNode | MemoExpression\r\n  alternate: BlockCodegenNode | IfConditionalExpression | MemoExpression\r\n}\r\n\r\nexport interface ForCodegenNode extends VNodeCall {\r\n  isBlock: true\r\n  tag: typeof FRAGMENT\r\n  props: undefined\r\n  children: ForRenderListExpression\r\n  patchFlag: string\r\n  disableTracking: boolean\r\n}\r\n\r\nexport interface ForRenderListExpression extends CallExpression {\r\n  callee: typeof RENDER_LIST\r\n  arguments: [ExpressionNode, ForIteratorExpression]\r\n}\r\n\r\nexport interface ForIteratorExpression extends FunctionExpression {\r\n  returns: BlockCodegenNode\r\n}\r\n\r\n// AST Utilities ---------------------------------------------------------------\r\n\r\n// Some expressions, e.g. sequence and conditional expressions, are never\r\n// associated with template nodes, so their source locations are just a stub.\r\n// Container types like CompoundExpression also don't need a real location.\r\nexport const locStub: SourceLocation = {\r\n  source: '',\r\n  start: { line: 1, column: 1, offset: 0 },\r\n  end: { line: 1, column: 1, offset: 0 }\r\n}\r\n\r\nexport function createRoot(\r\n  children: TemplateChildNode[],\r\n  loc = locStub\r\n): RootNode {\r\n  return {\r\n    type: NodeTypes.ROOT,\r\n    children,\r\n    helpers: [],\r\n    components: [],\r\n    directives: [],\r\n    hoists: [],\r\n    imports: [],\r\n    cached: 0,\r\n    temps: 0,\r\n    codegenNode: undefined,\r\n    loc\r\n  }\r\n}\r\n\r\nexport function createVNodeCall(\r\n  context: TransformContext | null,\r\n  tag: VNodeCall['tag'],\r\n  props?: VNodeCall['props'],\r\n  children?: VNodeCall['children'],\r\n  patchFlag?: VNodeCall['patchFlag'],\r\n  dynamicProps?: VNodeCall['dynamicProps'],\r\n  directives?: VNodeCall['directives'],\r\n  isBlock: VNodeCall['isBlock'] = false,\r\n  disableTracking: VNodeCall['disableTracking'] = false,\r\n  isComponent: VNodeCall['isComponent'] = false,\r\n  loc = locStub\r\n): VNodeCall {\r\n  if (context) {\r\n    if (isBlock) {\r\n      context.helper(OPEN_BLOCK)\r\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent))\r\n    } else {\r\n      context.helper(getVNodeHelper(context.inSSR, isComponent))\r\n    }\r\n    if (directives) {\r\n      context.helper(WITH_DIRECTIVES)\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: NodeTypes.VNODE_CALL,\r\n    tag,\r\n    props,\r\n    children,\r\n    patchFlag,\r\n    dynamicProps,\r\n    directives,\r\n    isBlock,\r\n    disableTracking,\r\n    isComponent,\r\n    loc\r\n  }\r\n}\r\n\r\nexport function createArrayExpression(\r\n  elements: ArrayExpression['elements'],\r\n  loc: SourceLocation = locStub\r\n): ArrayExpression {\r\n  return {\r\n    type: NodeTypes.JS_ARRAY_EXPRESSION,\r\n    loc,\r\n    elements\r\n  }\r\n}\r\n\r\nexport function createObjectExpression(\r\n  properties: ObjectExpression['properties'],\r\n  loc: SourceLocation = locStub\r\n): ObjectExpression {\r\n  return {\r\n    type: NodeTypes.JS_OBJECT_EXPRESSION,\r\n    loc,\r\n    properties\r\n  }\r\n}\r\n\r\nexport function createObjectProperty(\r\n  key: Property['key'] | string,\r\n  value: Property['value']\r\n): Property {\r\n  return {\r\n    type: NodeTypes.JS_PROPERTY,\r\n    loc: locStub,\r\n    key: isString(key) ? createSimpleExpression(key, true) : key,\r\n    value\r\n  }\r\n}\r\n\r\nexport function createSimpleExpression(\r\n  content: SimpleExpressionNode['content'],\r\n  isStatic: SimpleExpressionNode['isStatic'] = false,\r\n  loc: SourceLocation = locStub,\r\n  constType: ConstantTypes = ConstantTypes.NOT_CONSTANT\r\n): SimpleExpressionNode {\r\n  return {\r\n    type: NodeTypes.SIMPLE_EXPRESSION,\r\n    loc,\r\n    content,\r\n    isStatic,\r\n    constType: isStatic ? ConstantTypes.CAN_STRINGIFY : constType\r\n  }\r\n}\r\n\r\nexport function createInterpolation(\r\n  content: InterpolationNode['content'] | string,\r\n  loc: SourceLocation\r\n): InterpolationNode {\r\n  return {\r\n    type: NodeTypes.INTERPOLATION,\r\n    loc,\r\n    content: isString(content)\r\n      ? createSimpleExpression(content, false, loc)\r\n      : content\r\n  }\r\n}\r\n\r\nexport function createCompoundExpression(\r\n  children: CompoundExpressionNode['children'],\r\n  loc: SourceLocation = locStub\r\n): CompoundExpressionNode {\r\n  return {\r\n    type: NodeTypes.COMPOUND_EXPRESSION,\r\n    loc,\r\n    children\r\n  }\r\n}\r\n\r\ntype InferCodegenNodeType<T> = T extends typeof RENDER_SLOT\r\n  ? RenderSlotCall\r\n  : CallExpression\r\n\r\nexport function createCallExpression<T extends CallExpression['callee']>(\r\n  callee: T,\r\n  args: CallExpression['arguments'] = [],\r\n  loc: SourceLocation = locStub\r\n): InferCodegenNodeType<T> {\r\n  return {\r\n    type: NodeTypes.JS_CALL_EXPRESSION,\r\n    loc,\r\n    callee,\r\n    arguments: args\r\n  } as InferCodegenNodeType<T>\r\n}\r\n\r\nexport function createFunctionExpression(\r\n  params: FunctionExpression['params'],\r\n  returns: FunctionExpression['returns'] = undefined,\r\n  newline: boolean = false,\r\n  isSlot: boolean = false,\r\n  loc: SourceLocation = locStub\r\n): FunctionExpression {\r\n  return {\r\n    type: NodeTypes.JS_FUNCTION_EXPRESSION,\r\n    params,\r\n    returns,\r\n    newline,\r\n    isSlot,\r\n    loc\r\n  }\r\n}\r\n\r\nexport function createConditionalExpression(\r\n  test: ConditionalExpression['test'],\r\n  consequent: ConditionalExpression['consequent'],\r\n  alternate: ConditionalExpression['alternate'],\r\n  newline = true\r\n): ConditionalExpression {\r\n  return {\r\n    type: NodeTypes.JS_CONDITIONAL_EXPRESSION,\r\n    test,\r\n    consequent,\r\n    alternate,\r\n    newline,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createCacheExpression(\r\n  index: number,\r\n  value: JSChildNode,\r\n  isVNode: boolean = false\r\n): CacheExpression {\r\n  return {\r\n    type: NodeTypes.JS_CACHE_EXPRESSION,\r\n    index,\r\n    value,\r\n    isVNode,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createBlockStatement(\r\n  body: BlockStatement['body']\r\n): BlockStatement {\r\n  return {\r\n    type: NodeTypes.JS_BLOCK_STATEMENT,\r\n    body,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createTemplateLiteral(\r\n  elements: TemplateLiteral['elements']\r\n): TemplateLiteral {\r\n  return {\r\n    type: NodeTypes.JS_TEMPLATE_LITERAL,\r\n    elements,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createIfStatement(\r\n  test: IfStatement['test'],\r\n  consequent: IfStatement['consequent'],\r\n  alternate?: IfStatement['alternate']\r\n): IfStatement {\r\n  return {\r\n    type: NodeTypes.JS_IF_STATEMENT,\r\n    test,\r\n    consequent,\r\n    alternate,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createAssignmentExpression(\r\n  left: AssignmentExpression['left'],\r\n  right: AssignmentExpression['right']\r\n): AssignmentExpression {\r\n  return {\r\n    type: NodeTypes.JS_ASSIGNMENT_EXPRESSION,\r\n    left,\r\n    right,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createSequenceExpression(\r\n  expressions: SequenceExpression['expressions']\r\n): SequenceExpression {\r\n  return {\r\n    type: NodeTypes.JS_SEQUENCE_EXPRESSION,\r\n    expressions,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createReturnStatement(\r\n  returns: ReturnStatement['returns']\r\n): ReturnStatement {\r\n  return {\r\n    type: NodeTypes.JS_RETURN_STATEMENT,\r\n    returns,\r\n    loc: locStub\r\n  }\r\n}\r\n","import {\r\n  SourceLocation,\r\n  Position,\r\n  ElementNode,\r\n  NodeTypes,\r\n  CallExpression,\r\n  createCallExpression,\r\n  DirectiveNode,\r\n  ElementTypes,\r\n  TemplateChildNode,\r\n  RootNode,\r\n  ObjectExpression,\r\n  Property,\r\n  JSChildNode,\r\n  createObjectExpression,\r\n  SlotOutletNode,\r\n  TemplateNode,\r\n  RenderSlotCall,\r\n  ExpressionNode,\r\n  IfBranchNode,\r\n  TextNode,\r\n  InterpolationNode,\r\n  VNodeCall,\r\n  SimpleExpressionNode,\r\n  BlockCodegenNode,\r\n  MemoExpression\r\n} from './ast'\r\nimport { TransformContext } from './transform'\r\nimport {\r\n  MERGE_PROPS,\r\n  TELEPORT,\r\n  SUSPENSE,\r\n  KEEP_ALIVE,\r\n  BASE_TRANSITION,\r\n  TO_HANDLERS,\r\n  NORMALIZE_PROPS,\r\n  GUARD_REACTIVE_PROPS,\r\n  CREATE_BLOCK,\r\n  CREATE_ELEMENT_BLOCK,\r\n  CREATE_VNODE,\r\n  CREATE_ELEMENT_VNODE,\r\n  WITH_MEMO,\r\n  OPEN_BLOCK\r\n} from './runtimeHelpers'\r\nimport { isString, isObject, hyphenate, extend, NOOP } from '@vue/shared'\r\nimport { PropsExpression } from './transforms/transformElement'\r\nimport { parseExpression } from '@babel/parser'\r\nimport { Expression } from '@babel/types'\r\n\r\nexport const isStaticExp = (p: JSChildNode): p is SimpleExpressionNode =>\r\n  p.type === NodeTypes.SIMPLE_EXPRESSION && p.isStatic\r\n\r\nexport const isBuiltInType = (tag: string, expected: string): boolean =>\r\n  tag === expected || tag === hyphenate(expected)\r\n\r\nexport function isCoreComponent(tag: string): symbol | void {\r\n  if (isBuiltInType(tag, 'Teleport')) {\r\n    return TELEPORT\r\n  } else if (isBuiltInType(tag, 'Suspense')) {\r\n    return SUSPENSE\r\n  } else if (isBuiltInType(tag, 'KeepAlive')) {\r\n    return KEEP_ALIVE\r\n  } else if (isBuiltInType(tag, 'BaseTransition')) {\r\n    return BASE_TRANSITION\r\n  }\r\n}\r\n\r\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/\r\nexport const isSimpleIdentifier = (name: string): boolean =>\r\n  !nonIdentifierRE.test(name)\r\n\r\nconst enum MemberExpLexState {\r\n  inMemberExp,\r\n  inBrackets,\r\n  inParens,\r\n  inString\r\n}\r\n\r\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/\r\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/\r\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g\r\n\r\n/**\r\n * Simple lexer to check if an expression is a member expression. This is\r\n * lax and only checks validity at the root level (i.e. does not validate exps\r\n * inside square brackets), but it's ok since these are only used on template\r\n * expressions and false positives are invalid expressions in the first place.\r\n */\r\nexport const isMemberExpressionBrowser = (path: string): boolean => {\r\n  // remove whitespaces around . or [ first\r\n  path = path.trim().replace(whitespaceRE, s => s.trim())\r\n\r\n  let state = MemberExpLexState.inMemberExp\r\n  let stateStack: MemberExpLexState[] = []\r\n  let currentOpenBracketCount = 0\r\n  let currentOpenParensCount = 0\r\n  let currentStringType: \"'\" | '\"' | '`' | null = null\r\n\r\n  for (let i = 0; i < path.length; i++) {\r\n    const char = path.charAt(i)\r\n    switch (state) {\r\n      case MemberExpLexState.inMemberExp:\r\n        if (char === '[') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inBrackets\r\n          currentOpenBracketCount++\r\n        } else if (char === '(') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inParens\r\n          currentOpenParensCount++\r\n        } else if (\r\n          !(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)\r\n        ) {\r\n          return false\r\n        }\r\n        break\r\n      case MemberExpLexState.inBrackets:\r\n        if (char === `'` || char === `\"` || char === '`') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inString\r\n          currentStringType = char\r\n        } else if (char === `[`) {\r\n          currentOpenBracketCount++\r\n        } else if (char === `]`) {\r\n          if (!--currentOpenBracketCount) {\r\n            state = stateStack.pop()!\r\n          }\r\n        }\r\n        break\r\n      case MemberExpLexState.inParens:\r\n        if (char === `'` || char === `\"` || char === '`') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inString\r\n          currentStringType = char\r\n        } else if (char === `(`) {\r\n          currentOpenParensCount++\r\n        } else if (char === `)`) {\r\n          // if the exp ends as a call then it should not be considered valid\r\n          if (i === path.length - 1) {\r\n            return false\r\n          }\r\n          if (!--currentOpenParensCount) {\r\n            state = stateStack.pop()!\r\n          }\r\n        }\r\n        break\r\n      case MemberExpLexState.inString:\r\n        if (char === currentStringType) {\r\n          state = stateStack.pop()!\r\n          currentStringType = null\r\n        }\r\n        break\r\n    }\r\n  }\r\n  return !currentOpenBracketCount && !currentOpenParensCount\r\n}\r\n\r\nexport const isMemberExpressionNode = __BROWSER__\r\n  ? (NOOP as any as (path: string, context: TransformContext) => boolean)\r\n  : (path: string, context: TransformContext): boolean => {\r\n      try {\r\n        let ret: Expression = parseExpression(path, {\r\n          plugins: context.expressionPlugins\r\n        })\r\n        if (ret.type === 'TSAsExpression' || ret.type === 'TSTypeAssertion') {\r\n          ret = ret.expression\r\n        }\r\n        return (\r\n          ret.type === 'MemberExpression' ||\r\n          ret.type === 'OptionalMemberExpression' ||\r\n          ret.type === 'Identifier'\r\n        )\r\n      } catch (e) {\r\n        return false\r\n      }\r\n    }\r\n\r\nexport const isMemberExpression = __BROWSER__\r\n  ? isMemberExpressionBrowser\r\n  : isMemberExpressionNode\r\n\r\nexport function getInnerRange(\r\n  loc: SourceLocation,\r\n  offset: number,\r\n  length: number\r\n): SourceLocation {\r\n  __TEST__ && assert(offset <= loc.source.length)\r\n  const source = loc.source.slice(offset, offset + length)\r\n  const newLoc: SourceLocation = {\r\n    source,\r\n    start: advancePositionWithClone(loc.start, loc.source, offset),\r\n    end: loc.end\r\n  }\r\n\r\n  if (length != null) {\r\n    __TEST__ && assert(offset + length <= loc.source.length)\r\n    newLoc.end = advancePositionWithClone(\r\n      loc.start,\r\n      loc.source,\r\n      offset + length\r\n    )\r\n  }\r\n\r\n  return newLoc\r\n}\r\n\r\nexport function advancePositionWithClone(\r\n  pos: Position,\r\n  source: string,\r\n  numberOfCharacters: number = source.length\r\n): Position {\r\n  return advancePositionWithMutation(\r\n    extend({}, pos),\r\n    source,\r\n    numberOfCharacters\r\n  )\r\n}\r\n\r\n// advance by mutation without cloning (for performance reasons), since this\r\n// gets called a lot in the parser\r\nexport function advancePositionWithMutation(\r\n  pos: Position,\r\n  source: string,\r\n  numberOfCharacters: number = source.length\r\n): Position {\r\n  let linesCount = 0\r\n  let lastNewLinePos = -1\r\n  for (let i = 0; i < numberOfCharacters; i++) {\r\n    if (source.charCodeAt(i) === 10 /* newline char code */) {\r\n      linesCount++\r\n      lastNewLinePos = i\r\n    }\r\n  }\r\n\r\n  pos.offset += numberOfCharacters\r\n  pos.line += linesCount\r\n  pos.column =\r\n    lastNewLinePos === -1\r\n      ? pos.column + numberOfCharacters\r\n      : numberOfCharacters - lastNewLinePos\r\n\r\n  return pos\r\n}\r\n\r\nexport function assert(condition: boolean, msg?: string) {\r\n  /* istanbul ignore if */\r\n  if (!condition) {\r\n    throw new Error(msg || `unexpected compiler condition`)\r\n  }\r\n}\r\n\r\nexport function findDir(\r\n  node: ElementNode,\r\n  name: string | RegExp,\r\n  allowEmpty: boolean = false\r\n): DirectiveNode | undefined {\r\n  for (let i = 0; i < node.props.length; i++) {\r\n    const p = node.props[i]\r\n    if (\r\n      p.type === NodeTypes.DIRECTIVE &&\r\n      (allowEmpty || p.exp) &&\r\n      (isString(name) ? p.name === name : name.test(p.name))\r\n    ) {\r\n      return p\r\n    }\r\n  }\r\n}\r\n\r\nexport function findProp(\r\n  node: ElementNode,\r\n  name: string,\r\n  dynamicOnly: boolean = false,\r\n  allowEmpty: boolean = false\r\n): ElementNode['props'][0] | undefined {\r\n  for (let i = 0; i < node.props.length; i++) {\r\n    const p = node.props[i]\r\n    if (p.type === NodeTypes.ATTRIBUTE) {\r\n      if (dynamicOnly) continue\r\n      if (p.name === name && (p.value || allowEmpty)) {\r\n        return p\r\n      }\r\n    } else if (\r\n      p.name === 'bind' &&\r\n      (p.exp || allowEmpty) &&\r\n      isStaticArgOf(p.arg, name)\r\n    ) {\r\n      return p\r\n    }\r\n  }\r\n}\r\n\r\nexport function isStaticArgOf(\r\n  arg: DirectiveNode['arg'],\r\n  name: string\r\n): boolean {\r\n  return !!(arg && isStaticExp(arg) && arg.content === name)\r\n}\r\n\r\nexport function hasDynamicKeyVBind(node: ElementNode): boolean {\r\n  return node.props.some(\r\n    p =>\r\n      p.type === NodeTypes.DIRECTIVE &&\r\n      p.name === 'bind' &&\r\n      (!p.arg || // v-bind=\"obj\"\r\n        p.arg.type !== NodeTypes.SIMPLE_EXPRESSION || // v-bind:[_ctx.foo]\r\n        !p.arg.isStatic) // v-bind:[foo]\r\n  )\r\n}\r\n\r\nexport function isText(\r\n  node: TemplateChildNode\r\n): node is TextNode | InterpolationNode {\r\n  return node.type === NodeTypes.INTERPOLATION || node.type === NodeTypes.TEXT\r\n}\r\n\r\nexport function isVSlot(p: ElementNode['props'][0]): p is DirectiveNode {\r\n  return p.type === NodeTypes.DIRECTIVE && p.name === 'slot'\r\n}\r\n\r\nexport function isTemplateNode(\r\n  node: RootNode | TemplateChildNode\r\n): node is TemplateNode {\r\n  return (\r\n    node.type === NodeTypes.ELEMENT && node.tagType === ElementTypes.TEMPLATE\r\n  )\r\n}\r\n\r\nexport function isSlotOutlet(\r\n  node: RootNode | TemplateChildNode\r\n): node is SlotOutletNode {\r\n  return node.type === NodeTypes.ELEMENT && node.tagType === ElementTypes.SLOT\r\n}\r\n\r\nexport function getVNodeHelper(ssr: boolean, isComponent: boolean) {\r\n  return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE\r\n}\r\n\r\nexport function getVNodeBlockHelper(ssr: boolean, isComponent: boolean) {\r\n  return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK\r\n}\r\n\r\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS])\r\n\r\nfunction getUnnormalizedProps(\r\n  props: PropsExpression | '{}',\r\n  callPath: CallExpression[] = []\r\n): [PropsExpression | '{}', CallExpression[]] {\r\n  if (\r\n    props &&\r\n    !isString(props) &&\r\n    props.type === NodeTypes.JS_CALL_EXPRESSION\r\n  ) {\r\n    const callee = props.callee\r\n    if (!isString(callee) && propsHelperSet.has(callee)) {\r\n      return getUnnormalizedProps(\r\n        props.arguments[0] as PropsExpression,\r\n        callPath.concat(props)\r\n      )\r\n    }\r\n  }\r\n  return [props, callPath]\r\n}\r\nexport function injectProp(\r\n  node: VNodeCall | RenderSlotCall,\r\n  prop: Property,\r\n  context: TransformContext\r\n) {\r\n  let propsWithInjection: ObjectExpression | CallExpression | undefined\r\n  /**\r\n   * 1. mergeProps(...)\r\n   * 2. toHandlers(...)\r\n   * 3. normalizeProps(...)\r\n   * 4. normalizeProps(guardReactiveProps(...))\r\n   *\r\n   * we need to get the real props before normalization\r\n   */\r\n  let props =\r\n    node.type === NodeTypes.VNODE_CALL ? node.props : node.arguments[2]\r\n  let callPath: CallExpression[] = []\r\n  let parentCall: CallExpression | undefined\r\n  if (\r\n    props &&\r\n    !isString(props) &&\r\n    props.type === NodeTypes.JS_CALL_EXPRESSION\r\n  ) {\r\n    const ret = getUnnormalizedProps(props)\r\n    props = ret[0]\r\n    callPath = ret[1]\r\n    parentCall = callPath[callPath.length - 1]\r\n  }\r\n\r\n  if (props == null || isString(props)) {\r\n    propsWithInjection = createObjectExpression([prop])\r\n  } else if (props.type === NodeTypes.JS_CALL_EXPRESSION) {\r\n    // merged props... add ours\r\n    // only inject key to object literal if it's the first argument so that\r\n    // if doesn't override user provided keys\r\n    const first = props.arguments[0] as string | JSChildNode\r\n    if (!isString(first) && first.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n      first.properties.unshift(prop)\r\n    } else {\r\n      if (props.callee === TO_HANDLERS) {\r\n        // #2366\r\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n          createObjectExpression([prop]),\r\n          props\r\n        ])\r\n      } else {\r\n        props.arguments.unshift(createObjectExpression([prop]))\r\n      }\r\n    }\r\n    !propsWithInjection && (propsWithInjection = props)\r\n  } else if (props.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n    let alreadyExists = false\r\n    // check existing key to avoid overriding user provided keys\r\n    if (prop.key.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n      const propKeyName = prop.key.content\r\n      alreadyExists = props.properties.some(\r\n        p =>\r\n          p.key.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n          p.key.content === propKeyName\r\n      )\r\n    }\r\n    if (!alreadyExists) {\r\n      props.properties.unshift(prop)\r\n    }\r\n    propsWithInjection = props\r\n  } else {\r\n    // single v-bind with expression, return a merged replacement\r\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n      createObjectExpression([prop]),\r\n      props\r\n    ])\r\n    // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\r\n    // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\r\n    // the `guardReactiveProps` will no longer be needed\r\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\r\n      parentCall = callPath[callPath.length - 2]\r\n    }\r\n  }\r\n  if (node.type === NodeTypes.VNODE_CALL) {\r\n    if (parentCall) {\r\n      parentCall.arguments[0] = propsWithInjection\r\n    } else {\r\n      node.props = propsWithInjection\r\n    }\r\n  } else {\r\n    if (parentCall) {\r\n      parentCall.arguments[0] = propsWithInjection\r\n    } else {\r\n      node.arguments[2] = propsWithInjection\r\n    }\r\n  }\r\n}\r\n\r\nexport function toValidAssetId(\r\n  name: string,\r\n  type: 'component' | 'directive' | 'filter'\r\n): string {\r\n  // see issue#4422, we need adding identifier on validAssetId if variable `name` has specific character\r\n  return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\r\n    return searchValue === '-' ? '_' : name.charCodeAt(replaceValue).toString()\r\n  })}`\r\n}\r\n\r\n// Check if a node contains expressions that reference current context scope ids\r\nexport function hasScopeRef(\r\n  node: TemplateChildNode | IfBranchNode | ExpressionNode | undefined,\r\n  ids: TransformContext['identifiers']\r\n): boolean {\r\n  if (!node || Object.keys(ids).length === 0) {\r\n    return false\r\n  }\r\n  switch (node.type) {\r\n    case NodeTypes.ELEMENT:\r\n      for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i]\r\n        if (\r\n          p.type === NodeTypes.DIRECTIVE &&\r\n          (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n      return node.children.some(c => hasScopeRef(c, ids))\r\n    case NodeTypes.FOR:\r\n      if (hasScopeRef(node.source, ids)) {\r\n        return true\r\n      }\r\n      return node.children.some(c => hasScopeRef(c, ids))\r\n    case NodeTypes.IF:\r\n      return node.branches.some(b => hasScopeRef(b, ids))\r\n    case NodeTypes.IF_BRANCH:\r\n      if (hasScopeRef(node.condition, ids)) {\r\n        return true\r\n      }\r\n      return node.children.some(c => hasScopeRef(c, ids))\r\n    case NodeTypes.SIMPLE_EXPRESSION:\r\n      return (\r\n        !node.isStatic &&\r\n        isSimpleIdentifier(node.content) &&\r\n        !!ids[node.content]\r\n      )\r\n    case NodeTypes.COMPOUND_EXPRESSION:\r\n      return node.children.some(c => isObject(c) && hasScopeRef(c, ids))\r\n    case NodeTypes.INTERPOLATION:\r\n    case NodeTypes.TEXT_CALL:\r\n      return hasScopeRef(node.content, ids)\r\n    case NodeTypes.TEXT:\r\n    case NodeTypes.COMMENT:\r\n      return false\r\n    default:\r\n      if (__DEV__) {\r\n        const exhaustiveCheck: never = node\r\n        exhaustiveCheck\r\n      }\r\n      return false\r\n  }\r\n}\r\n\r\nexport function getMemoedVNodeCall(node: BlockCodegenNode | MemoExpression) {\r\n  if (node.type === NodeTypes.JS_CALL_EXPRESSION && node.callee === WITH_MEMO) {\r\n    return node.arguments[1].returns as VNodeCall\r\n  } else {\r\n    return node\r\n  }\r\n}\r\n\r\nexport function makeBlock(\r\n  node: VNodeCall,\r\n  { helper, removeHelper, inSSR }: TransformContext\r\n) {\r\n  if (!node.isBlock) {\r\n    node.isBlock = true\r\n    removeHelper(getVNodeHelper(inSSR, node.isComponent))\r\n    helper(OPEN_BLOCK)\r\n    helper(getVNodeBlockHelper(inSSR, node.isComponent))\r\n  }\r\n}\r\n","import { SourceLocation } from '../ast'\r\nimport { CompilerError } from '../errors'\r\nimport { ParserContext } from '../parse'\r\nimport { TransformContext } from '../transform'\r\n\r\nexport type CompilerCompatConfig = Partial<\r\n  Record<CompilerDeprecationTypes, boolean | 'suppress-warning'>\r\n> & {\r\n  MODE?: 2 | 3\r\n}\r\n\r\nexport interface CompilerCompatOptions {\r\n  compatConfig?: CompilerCompatConfig\r\n}\r\n\r\nexport const enum CompilerDeprecationTypes {\r\n  COMPILER_IS_ON_ELEMENT = 'COMPILER_IS_ON_ELEMENT',\r\n  COMPILER_V_BIND_SYNC = 'COMPILER_V_BIND_SYNC',\r\n  COMPILER_V_BIND_PROP = 'COMPILER_V_BIND_PROP',\r\n  COMPILER_V_BIND_OBJECT_ORDER = 'COMPILER_V_BIND_OBJECT_ORDER',\r\n  COMPILER_V_ON_NATIVE = 'COMPILER_V_ON_NATIVE',\r\n  COMPILER_V_IF_V_FOR_PRECEDENCE = 'COMPILER_V_IF_V_FOR_PRECEDENCE',\r\n  COMPILER_NATIVE_TEMPLATE = 'COMPILER_NATIVE_TEMPLATE',\r\n  COMPILER_INLINE_TEMPLATE = 'COMPILER_INLINE_TEMPLATE',\r\n  COMPILER_FILTERS = 'COMPILER_FILTER'\r\n}\r\n\r\ntype DeprecationData = {\r\n  message: string | ((...args: any[]) => string)\r\n  link?: string\r\n}\r\n\r\nconst deprecationData: Record<CompilerDeprecationTypes, DeprecationData> = {\r\n  [CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT]: {\r\n    message:\r\n      `Platform-native elements with \"is\" prop will no longer be ` +\r\n      `treated as components in Vue 3 unless the \"is\" value is explicitly ` +\r\n      `prefixed with \"vue:\".`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\r\n  },\r\n\r\n  [CompilerDeprecationTypes.COMPILER_V_BIND_SYNC]: {\r\n    message: key =>\r\n      `.sync modifier for v-bind has been removed. Use v-model with ` +\r\n      `argument instead. \\`v-bind:${key}.sync\\` should be changed to ` +\r\n      `\\`v-model:${key}\\`.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\r\n  },\r\n\r\n  [CompilerDeprecationTypes.COMPILER_V_BIND_PROP]: {\r\n    message:\r\n      `.prop modifier for v-bind has been removed and no longer necessary. ` +\r\n      `Vue 3 will automatically set a binding as DOM property when appropriate.`\r\n  },\r\n\r\n  [CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER]: {\r\n    message:\r\n      `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript ` +\r\n      `object spread: it will now overwrite an existing non-mergeable attribute ` +\r\n      `that appears before v-bind in the case of conflict. ` +\r\n      `To retain 2.x behavior, move v-bind to make it the first attribute. ` +\r\n      `You can also suppress this warning if the usage is intended.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\r\n  },\r\n\r\n  [CompilerDeprecationTypes.COMPILER_V_ON_NATIVE]: {\r\n    message: `.native modifier for v-on has been removed as is no longer necessary.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\r\n  },\r\n\r\n  [CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE]: {\r\n    message:\r\n      `v-if / v-for precedence when used on the same element has changed ` +\r\n      `in Vue 3: v-if now takes higher precedence and will no longer have ` +\r\n      `access to v-for scope variables. It is best to avoid the ambiguity ` +\r\n      `with <template> tags or use a computed property that filters v-for ` +\r\n      `data source.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\r\n  },\r\n\r\n  [CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE]: {\r\n    message:\r\n      `<template> with no special directives will render as a native template ` +\r\n      `element instead of its inner content in Vue 3.`\r\n  },\r\n\r\n  [CompilerDeprecationTypes.COMPILER_INLINE_TEMPLATE]: {\r\n    message: `\"inline-template\" has been removed in Vue 3.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\r\n  },\r\n\r\n  [CompilerDeprecationTypes.COMPILER_FILTERS]: {\r\n    message:\r\n      `filters have been removed in Vue 3. ` +\r\n      `The \"|\" symbol will be treated as native JavaScript bitwise OR operator. ` +\r\n      `Use method calls or computed properties instead.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\r\n  }\r\n}\r\n\r\nfunction getCompatValue(\r\n  key: CompilerDeprecationTypes | 'MODE',\r\n  context: ParserContext | TransformContext\r\n) {\r\n  const config = (context as ParserContext).options\r\n    ? (context as ParserContext).options.compatConfig\r\n    : (context as TransformContext).compatConfig\r\n  const value = config && config[key]\r\n  if (key === 'MODE') {\r\n    return value || 3 // compiler defaults to v3 behavior\r\n  } else {\r\n    return value\r\n  }\r\n}\r\n\r\nexport function isCompatEnabled(\r\n  key: CompilerDeprecationTypes,\r\n  context: ParserContext | TransformContext\r\n) {\r\n  const mode = getCompatValue('MODE', context)\r\n  const value = getCompatValue(key, context)\r\n  // in v3 mode, only enable if explicitly set to true\r\n  // otherwise enable for any non-false value\r\n  return mode === 3 ? value === true : value !== false\r\n}\r\n\r\nexport function checkCompatEnabled(\r\n  key: CompilerDeprecationTypes,\r\n  context: ParserContext | TransformContext,\r\n  loc: SourceLocation | null,\r\n  ...args: any[]\r\n): boolean {\r\n  const enabled = isCompatEnabled(key, context)\r\n  if (__DEV__ && enabled) {\r\n    warnDeprecation(key, context, loc, ...args)\r\n  }\r\n  return enabled\r\n}\r\n\r\nexport function warnDeprecation(\r\n  key: CompilerDeprecationTypes,\r\n  context: ParserContext | TransformContext,\r\n  loc: SourceLocation | null,\r\n  ...args: any[]\r\n) {\r\n  const val = getCompatValue(key, context)\r\n  if (val === 'suppress-warning') {\r\n    return\r\n  }\r\n  const { message, link } = deprecationData[key]\r\n  const msg = `(deprecation ${key}) ${\r\n    typeof message === 'function' ? message(...args) : message\r\n  }${link ? `\\n  Details: ${link}` : ``}`\r\n\r\n  const err = new SyntaxError(msg) as CompilerError\r\n  err.code = key\r\n  if (loc) err.loc = loc\r\n  context.onWarn(err)\r\n}\r\n","import { ErrorHandlingOptions, ParserOptions } from './options'\r\nimport { NO, isArray, makeMap, extend } from '@vue/shared'\r\nimport {\r\n  ErrorCodes,\r\n  createCompilerError,\r\n  defaultOnError,\r\n  defaultOnWarn\r\n} from './errors'\r\nimport {\r\n  assert,\r\n  advancePositionWithMutation,\r\n  advancePositionWithClone,\r\n  isCoreComponent,\r\n  isStaticArgOf\r\n} from './utils'\r\nimport {\r\n  Namespaces,\r\n  AttributeNode,\r\n  CommentNode,\r\n  DirectiveNode,\r\n  ElementNode,\r\n  ElementTypes,\r\n  ExpressionNode,\r\n  NodeTypes,\r\n  Position,\r\n  RootNode,\r\n  SourceLocation,\r\n  TextNode,\r\n  TemplateChildNode,\r\n  InterpolationNode,\r\n  createRoot,\r\n  ConstantTypes\r\n} from './ast'\r\nimport {\r\n  checkCompatEnabled,\r\n  CompilerCompatOptions,\r\n  CompilerDeprecationTypes,\r\n  isCompatEnabled,\r\n  warnDeprecation\r\n} from './compat/compatConfig'\r\n\r\ntype OptionalOptions =\r\n  | 'whitespace'\r\n  | 'isNativeTag'\r\n  | 'isBuiltInComponent'\r\n  | keyof CompilerCompatOptions\r\ntype MergedParserOptions = Omit<Required<ParserOptions>, OptionalOptions> &\r\n  Pick<ParserOptions, OptionalOptions>\r\ntype AttributeValue =\r\n  | {\r\n      content: string\r\n      isQuoted: boolean\r\n      loc: SourceLocation\r\n    }\r\n  | undefined\r\n\r\n// The default decoder only provides escapes for characters reserved as part of\r\n// the template syntax, and is only used if the custom renderer did not provide\r\n// a platform-specific decoder.\r\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g\r\nconst decodeMap: Record<string, string> = {\r\n  gt: '>',\r\n  lt: '<',\r\n  amp: '&',\r\n  apos: \"'\",\r\n  quot: '\"'\r\n}\r\n\r\nexport const defaultParserOptions: MergedParserOptions = {\r\n  delimiters: [`{{`, `}}`],\r\n  getNamespace: () => Namespaces.HTML,\r\n  getTextMode: () => TextModes.DATA,\r\n  isVoidTag: NO,\r\n  isPreTag: NO,\r\n  isCustomElement: NO,\r\n  decodeEntities: (rawText: string): string =>\r\n    rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\r\n  onError: defaultOnError,\r\n  onWarn: defaultOnWarn,\r\n  comments: __DEV__\r\n}\r\n\r\nexport const enum TextModes {\r\n  //          | Elements | Entities | End sign              | Inside of\r\n  DATA, //    | ✔        | ✔        | End tags of ancestors |\r\n  RCDATA, //  | ✘        | ✔        | End tag of the parent | <textarea>\r\n  RAWTEXT, // | ✘        | ✘        | End tag of the parent | <style>,<script>\r\n  CDATA,\r\n  ATTRIBUTE_VALUE\r\n}\r\n\r\nexport interface ParserContext {\r\n  options: MergedParserOptions\r\n  readonly originalSource: string\r\n  source: string\r\n  offset: number\r\n  line: number\r\n  column: number\r\n  inPre: boolean // HTML <pre> tag, preserve whitespaces\r\n  inVPre: boolean // v-pre, do not process directives and interpolations\r\n  onWarn: NonNullable<ErrorHandlingOptions['onWarn']>\r\n}\r\n\r\nexport function baseParse(\r\n  content: string,\r\n  options: ParserOptions = {}\r\n): RootNode {\r\n  const context = createParserContext(content, options)\r\n  const start = getCursor(context)\r\n  return createRoot(\r\n    parseChildren(context, TextModes.DATA, []),\r\n    getSelection(context, start)\r\n  )\r\n}\r\n\r\nfunction createParserContext(\r\n  content: string,\r\n  rawOptions: ParserOptions\r\n): ParserContext {\r\n  const options = extend({}, defaultParserOptions)\r\n\r\n  let key: keyof ParserOptions\r\n  for (key in rawOptions) {\r\n    // @ts-ignore\r\n    options[key] =\r\n      rawOptions[key] === undefined\r\n        ? defaultParserOptions[key]\r\n        : rawOptions[key]\r\n  }\r\n  return {\r\n    options,\r\n    column: 1,\r\n    line: 1,\r\n    offset: 0,\r\n    originalSource: content,\r\n    source: content,\r\n    inPre: false,\r\n    inVPre: false,\r\n    onWarn: options.onWarn\r\n  }\r\n}\r\n\r\nfunction parseChildren(\r\n  context: ParserContext,\r\n  mode: TextModes,\r\n  ancestors: ElementNode[]\r\n): TemplateChildNode[] {\r\n  const parent = last(ancestors)\r\n  const ns = parent ? parent.ns : Namespaces.HTML\r\n  const nodes: TemplateChildNode[] = []\r\n\r\n  while (!isEnd(context, mode, ancestors)) {\r\n    __TEST__ && assert(context.source.length > 0)\r\n    const s = context.source\r\n    let node: TemplateChildNode | TemplateChildNode[] | undefined = undefined\r\n\r\n    if (mode === TextModes.DATA || mode === TextModes.RCDATA) {\r\n      if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\r\n        // '{{'\r\n        node = parseInterpolation(context, mode)\r\n      } else if (mode === TextModes.DATA && s[0] === '<') {\r\n        // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\r\n        if (s.length === 1) {\r\n          emitError(context, ErrorCodes.EOF_BEFORE_TAG_NAME, 1)\r\n        } else if (s[1] === '!') {\r\n          // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\r\n          if (startsWith(s, '<!--')) {\r\n            node = parseComment(context)\r\n          } else if (startsWith(s, '<!DOCTYPE')) {\r\n            // Ignore DOCTYPE by a limitation.\r\n            node = parseBogusComment(context)\r\n          } else if (startsWith(s, '<![CDATA[')) {\r\n            if (ns !== Namespaces.HTML) {\r\n              node = parseCDATA(context, ancestors)\r\n            } else {\r\n              emitError(context, ErrorCodes.CDATA_IN_HTML_CONTENT)\r\n              node = parseBogusComment(context)\r\n            }\r\n          } else {\r\n            emitError(context, ErrorCodes.INCORRECTLY_OPENED_COMMENT)\r\n            node = parseBogusComment(context)\r\n          }\r\n        } else if (s[1] === '/') {\r\n          // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\r\n          if (s.length === 2) {\r\n            emitError(context, ErrorCodes.EOF_BEFORE_TAG_NAME, 2)\r\n          } else if (s[2] === '>') {\r\n            emitError(context, ErrorCodes.MISSING_END_TAG_NAME, 2)\r\n            advanceBy(context, 3)\r\n            continue\r\n          } else if (/[a-z]/i.test(s[2])) {\r\n            emitError(context, ErrorCodes.X_INVALID_END_TAG)\r\n            parseTag(context, TagType.End, parent)\r\n            continue\r\n          } else {\r\n            emitError(\r\n              context,\r\n              ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME,\r\n              2\r\n            )\r\n            node = parseBogusComment(context)\r\n          }\r\n        } else if (/[a-z]/i.test(s[1])) {\r\n          node = parseElement(context, ancestors)\r\n\r\n          // 2.x <template> with no directive compat\r\n          if (\r\n            __COMPAT__ &&\r\n            isCompatEnabled(\r\n              CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE,\r\n              context\r\n            ) &&\r\n            node &&\r\n            node.tag === 'template' &&\r\n            !node.props.some(\r\n              p =>\r\n                p.type === NodeTypes.DIRECTIVE &&\r\n                isSpecialTemplateDirective(p.name)\r\n            )\r\n          ) {\r\n            __DEV__ &&\r\n              warnDeprecation(\r\n                CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE,\r\n                context,\r\n                node.loc\r\n              )\r\n            node = node.children\r\n          }\r\n        } else if (s[1] === '?') {\r\n          emitError(\r\n            context,\r\n            ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME,\r\n            1\r\n          )\r\n          node = parseBogusComment(context)\r\n        } else {\r\n          emitError(context, ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME, 1)\r\n        }\r\n      }\r\n    }\r\n    if (!node) {\r\n      node = parseText(context, mode)\r\n    }\r\n\r\n    if (isArray(node)) {\r\n      for (let i = 0; i < node.length; i++) {\r\n        pushNode(nodes, node[i])\r\n      }\r\n    } else {\r\n      pushNode(nodes, node)\r\n    }\r\n  }\r\n\r\n  // Whitespace handling strategy like v2\r\n  let removedWhitespace = false\r\n  if (mode !== TextModes.RAWTEXT && mode !== TextModes.RCDATA) {\r\n    const shouldCondense = context.options.whitespace !== 'preserve'\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      const node = nodes[i]\r\n      if (!context.inPre && node.type === NodeTypes.TEXT) {\r\n        if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\r\n          const prev = nodes[i - 1]\r\n          const next = nodes[i + 1]\r\n          // Remove if:\r\n          // - the whitespace is the first or last node, or:\r\n          // - (condense mode) the whitespace is adjacent to a comment, or:\r\n          // - (condense mode) the whitespace is between two elements AND contains newline\r\n          if (\r\n            !prev ||\r\n            !next ||\r\n            (shouldCondense &&\r\n              (prev.type === NodeTypes.COMMENT ||\r\n                next.type === NodeTypes.COMMENT ||\r\n                (prev.type === NodeTypes.ELEMENT &&\r\n                  next.type === NodeTypes.ELEMENT &&\r\n                  /[\\r\\n]/.test(node.content))))\r\n          ) {\r\n            removedWhitespace = true\r\n            nodes[i] = null as any\r\n          } else {\r\n            // Otherwise, the whitespace is condensed into a single space\r\n            node.content = ' '\r\n          }\r\n        } else if (shouldCondense) {\r\n          // in condense mode, consecutive whitespaces in text are condensed\r\n          // down to a single space.\r\n          node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ')\r\n        }\r\n      }\r\n      // Remove comment nodes if desired by configuration.\r\n      else if (node.type === NodeTypes.COMMENT && !context.options.comments) {\r\n        removedWhitespace = true\r\n        nodes[i] = null as any\r\n      }\r\n    }\r\n    if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\r\n      // remove leading newline per html spec\r\n      // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\r\n      const first = nodes[0]\r\n      if (first && first.type === NodeTypes.TEXT) {\r\n        first.content = first.content.replace(/^\\r?\\n/, '')\r\n      }\r\n    }\r\n  }\r\n\r\n  return removedWhitespace ? nodes.filter(Boolean) : nodes\r\n}\r\n\r\nfunction pushNode(nodes: TemplateChildNode[], node: TemplateChildNode): void {\r\n  if (node.type === NodeTypes.TEXT) {\r\n    const prev = last(nodes)\r\n    // Merge if both this and the previous node are text and those are\r\n    // consecutive. This happens for cases like \"a < b\".\r\n    if (\r\n      prev &&\r\n      prev.type === NodeTypes.TEXT &&\r\n      prev.loc.end.offset === node.loc.start.offset\r\n    ) {\r\n      prev.content += node.content\r\n      prev.loc.end = node.loc.end\r\n      prev.loc.source += node.loc.source\r\n      return\r\n    }\r\n  }\r\n\r\n  nodes.push(node)\r\n}\r\n\r\nfunction parseCDATA(\r\n  context: ParserContext,\r\n  ancestors: ElementNode[]\r\n): TemplateChildNode[] {\r\n  __TEST__ &&\r\n    assert(last(ancestors) == null || last(ancestors)!.ns !== Namespaces.HTML)\r\n  __TEST__ && assert(startsWith(context.source, '<![CDATA['))\r\n\r\n  advanceBy(context, 9)\r\n  const nodes = parseChildren(context, TextModes.CDATA, ancestors)\r\n  if (context.source.length === 0) {\r\n    emitError(context, ErrorCodes.EOF_IN_CDATA)\r\n  } else {\r\n    __TEST__ && assert(startsWith(context.source, ']]>'))\r\n    advanceBy(context, 3)\r\n  }\r\n\r\n  return nodes\r\n}\r\n\r\nfunction parseComment(context: ParserContext): CommentNode {\r\n  __TEST__ && assert(startsWith(context.source, '<!--'))\r\n\r\n  const start = getCursor(context)\r\n  let content: string\r\n\r\n  // Regular comment.\r\n  const match = /--(\\!)?>/.exec(context.source)\r\n  if (!match) {\r\n    content = context.source.slice(4)\r\n    advanceBy(context, context.source.length)\r\n    emitError(context, ErrorCodes.EOF_IN_COMMENT)\r\n  } else {\r\n    if (match.index <= 3) {\r\n      emitError(context, ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT)\r\n    }\r\n    if (match[1]) {\r\n      emitError(context, ErrorCodes.INCORRECTLY_CLOSED_COMMENT)\r\n    }\r\n    content = context.source.slice(4, match.index)\r\n\r\n    // Advancing with reporting nested comments.\r\n    const s = context.source.slice(0, match.index)\r\n    let prevIndex = 1,\r\n      nestedIndex = 0\r\n    while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\r\n      advanceBy(context, nestedIndex - prevIndex + 1)\r\n      if (nestedIndex + 4 < s.length) {\r\n        emitError(context, ErrorCodes.NESTED_COMMENT)\r\n      }\r\n      prevIndex = nestedIndex + 1\r\n    }\r\n    advanceBy(context, match.index + match[0].length - prevIndex + 1)\r\n  }\r\n\r\n  return {\r\n    type: NodeTypes.COMMENT,\r\n    content,\r\n    loc: getSelection(context, start)\r\n  }\r\n}\r\n\r\nfunction parseBogusComment(context: ParserContext): CommentNode | undefined {\r\n  __TEST__ && assert(/^<(?:[\\!\\?]|\\/[^a-z>])/i.test(context.source))\r\n\r\n  const start = getCursor(context)\r\n  const contentStart = context.source[1] === '?' ? 1 : 2\r\n  let content: string\r\n\r\n  const closeIndex = context.source.indexOf('>')\r\n  if (closeIndex === -1) {\r\n    content = context.source.slice(contentStart)\r\n    advanceBy(context, context.source.length)\r\n  } else {\r\n    content = context.source.slice(contentStart, closeIndex)\r\n    advanceBy(context, closeIndex + 1)\r\n  }\r\n\r\n  return {\r\n    type: NodeTypes.COMMENT,\r\n    content,\r\n    loc: getSelection(context, start)\r\n  }\r\n}\r\n\r\nfunction parseElement(\r\n  context: ParserContext,\r\n  ancestors: ElementNode[]\r\n): ElementNode | undefined {\r\n  __TEST__ && assert(/^<[a-z]/i.test(context.source))\r\n\r\n  // Start tag.\r\n  const wasInPre = context.inPre\r\n  const wasInVPre = context.inVPre\r\n  const parent = last(ancestors)\r\n  const element = parseTag(context, TagType.Start, parent)\r\n  const isPreBoundary = context.inPre && !wasInPre\r\n  const isVPreBoundary = context.inVPre && !wasInVPre\r\n\r\n  if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\r\n    // #4030 self-closing <pre> tag\r\n    if (isPreBoundary) {\r\n      context.inPre = false\r\n    }\r\n    if (isVPreBoundary) {\r\n      context.inVPre = false\r\n    }\r\n    return element\r\n  }\r\n\r\n  // Children.\r\n  ancestors.push(element)\r\n  const mode = context.options.getTextMode(element, parent)\r\n  const children = parseChildren(context, mode, ancestors)\r\n  ancestors.pop()\r\n\r\n  // 2.x inline-template compat\r\n  if (__COMPAT__) {\r\n    const inlineTemplateProp = element.props.find(\r\n      p => p.type === NodeTypes.ATTRIBUTE && p.name === 'inline-template'\r\n    ) as AttributeNode\r\n    if (\r\n      inlineTemplateProp &&\r\n      checkCompatEnabled(\r\n        CompilerDeprecationTypes.COMPILER_INLINE_TEMPLATE,\r\n        context,\r\n        inlineTemplateProp.loc\r\n      )\r\n    ) {\r\n      const loc = getSelection(context, element.loc.end)\r\n      inlineTemplateProp.value = {\r\n        type: NodeTypes.TEXT,\r\n        content: loc.source,\r\n        loc\r\n      }\r\n    }\r\n  }\r\n\r\n  element.children = children\r\n\r\n  // End tag.\r\n  if (startsWithEndTagOpen(context.source, element.tag)) {\r\n    parseTag(context, TagType.End, parent)\r\n  } else {\r\n    emitError(context, ErrorCodes.X_MISSING_END_TAG, 0, element.loc.start)\r\n    if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\r\n      const first = children[0]\r\n      if (first && startsWith(first.loc.source, '<!--')) {\r\n        emitError(context, ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT)\r\n      }\r\n    }\r\n  }\r\n\r\n  element.loc = getSelection(context, element.loc.start)\r\n\r\n  if (isPreBoundary) {\r\n    context.inPre = false\r\n  }\r\n  if (isVPreBoundary) {\r\n    context.inVPre = false\r\n  }\r\n  return element\r\n}\r\n\r\nconst enum TagType {\r\n  Start,\r\n  End\r\n}\r\n\r\nconst isSpecialTemplateDirective = /*#__PURE__*/ makeMap(\r\n  `if,else,else-if,for,slot`\r\n)\r\n\r\n/**\r\n * Parse a tag (E.g. `<div id=a>`) with that type (start tag or end tag).\r\n */\r\nfunction parseTag(\r\n  context: ParserContext,\r\n  type: TagType.Start,\r\n  parent: ElementNode | undefined\r\n): ElementNode\r\nfunction parseTag(\r\n  context: ParserContext,\r\n  type: TagType.End,\r\n  parent: ElementNode | undefined\r\n): void\r\nfunction parseTag(\r\n  context: ParserContext,\r\n  type: TagType,\r\n  parent: ElementNode | undefined\r\n): ElementNode | undefined {\r\n  __TEST__ && assert(/^<\\/?[a-z]/i.test(context.source))\r\n  __TEST__ &&\r\n    assert(\r\n      type === (startsWith(context.source, '</') ? TagType.End : TagType.Start)\r\n    )\r\n\r\n  // Tag open.\r\n  const start = getCursor(context)\r\n  const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source)!\r\n  const tag = match[1]\r\n  const ns = context.options.getNamespace(tag, parent)\r\n\r\n  advanceBy(context, match[0].length)\r\n  advanceSpaces(context)\r\n\r\n  // save current state in case we need to re-parse attributes with v-pre\r\n  const cursor = getCursor(context)\r\n  const currentSource = context.source\r\n\r\n  // check <pre> tag\r\n  if (context.options.isPreTag(tag)) {\r\n    context.inPre = true\r\n  }\r\n\r\n  // Attributes.\r\n  let props = parseAttributes(context, type)\r\n\r\n  // check v-pre\r\n  if (\r\n    type === TagType.Start &&\r\n    !context.inVPre &&\r\n    props.some(p => p.type === NodeTypes.DIRECTIVE && p.name === 'pre')\r\n  ) {\r\n    context.inVPre = true\r\n    // reset context\r\n    extend(context, cursor)\r\n    context.source = currentSource\r\n    // re-parse attrs and filter out v-pre itself\r\n    props = parseAttributes(context, type).filter(p => p.name !== 'v-pre')\r\n  }\r\n\r\n  // Tag close.\r\n  let isSelfClosing = false\r\n  if (context.source.length === 0) {\r\n    emitError(context, ErrorCodes.EOF_IN_TAG)\r\n  } else {\r\n    isSelfClosing = startsWith(context.source, '/>')\r\n    if (type === TagType.End && isSelfClosing) {\r\n      emitError(context, ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS)\r\n    }\r\n    advanceBy(context, isSelfClosing ? 2 : 1)\r\n  }\r\n\r\n  if (type === TagType.End) {\r\n    return\r\n  }\r\n\r\n  // 2.x deprecation checks\r\n  if (\r\n    __COMPAT__ &&\r\n    __DEV__ &&\r\n    isCompatEnabled(\r\n      CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE,\r\n      context\r\n    )\r\n  ) {\r\n    let hasIf = false\r\n    let hasFor = false\r\n    for (let i = 0; i < props.length; i++) {\r\n      const p = props[i]\r\n      if (p.type === NodeTypes.DIRECTIVE) {\r\n        if (p.name === 'if') {\r\n          hasIf = true\r\n        } else if (p.name === 'for') {\r\n          hasFor = true\r\n        }\r\n      }\r\n      if (hasIf && hasFor) {\r\n        warnDeprecation(\r\n          CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE,\r\n          context,\r\n          getSelection(context, start)\r\n        )\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  let tagType = ElementTypes.ELEMENT\r\n  if (!context.inVPre) {\r\n    if (tag === 'slot') {\r\n      tagType = ElementTypes.SLOT\r\n    } else if (tag === 'template') {\r\n      if (\r\n        props.some(\r\n          p =>\r\n            p.type === NodeTypes.DIRECTIVE && isSpecialTemplateDirective(p.name)\r\n        )\r\n      ) {\r\n        tagType = ElementTypes.TEMPLATE\r\n      }\r\n    } else if (isComponent(tag, props, context)) {\r\n      tagType = ElementTypes.COMPONENT\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: NodeTypes.ELEMENT,\r\n    ns,\r\n    tag,\r\n    tagType,\r\n    props,\r\n    isSelfClosing,\r\n    children: [],\r\n    loc: getSelection(context, start),\r\n    codegenNode: undefined // to be created during transform phase\r\n  }\r\n}\r\n\r\nfunction isComponent(\r\n  tag: string,\r\n  props: (AttributeNode | DirectiveNode)[],\r\n  context: ParserContext\r\n) {\r\n  const options = context.options\r\n  if (options.isCustomElement(tag)) {\r\n    return false\r\n  }\r\n  if (\r\n    tag === 'component' ||\r\n    /^[A-Z]/.test(tag) ||\r\n    isCoreComponent(tag) ||\r\n    (options.isBuiltInComponent && options.isBuiltInComponent(tag)) ||\r\n    (options.isNativeTag && !options.isNativeTag(tag))\r\n  ) {\r\n    return true\r\n  }\r\n  // at this point the tag should be a native tag, but check for potential \"is\"\r\n  // casting\r\n  for (let i = 0; i < props.length; i++) {\r\n    const p = props[i]\r\n    if (p.type === NodeTypes.ATTRIBUTE) {\r\n      if (p.name === 'is' && p.value) {\r\n        if (p.value.content.startsWith('vue:')) {\r\n          return true\r\n        } else if (\r\n          __COMPAT__ &&\r\n          checkCompatEnabled(\r\n            CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n            context,\r\n            p.loc\r\n          )\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n    } else {\r\n      // directive\r\n      // v-is (TODO Deprecate)\r\n      if (p.name === 'is') {\r\n        return true\r\n      } else if (\r\n        // :is on plain element - only treat as component in compat mode\r\n        p.name === 'bind' &&\r\n        isStaticArgOf(p.arg, 'is') &&\r\n        __COMPAT__ &&\r\n        checkCompatEnabled(\r\n          CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n          context,\r\n          p.loc\r\n        )\r\n      ) {\r\n        return true\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction parseAttributes(\r\n  context: ParserContext,\r\n  type: TagType\r\n): (AttributeNode | DirectiveNode)[] {\r\n  const props = []\r\n  const attributeNames = new Set<string>()\r\n  while (\r\n    context.source.length > 0 &&\r\n    !startsWith(context.source, '>') &&\r\n    !startsWith(context.source, '/>')\r\n  ) {\r\n    if (startsWith(context.source, '/')) {\r\n      emitError(context, ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG)\r\n      advanceBy(context, 1)\r\n      advanceSpaces(context)\r\n      continue\r\n    }\r\n    if (type === TagType.End) {\r\n      emitError(context, ErrorCodes.END_TAG_WITH_ATTRIBUTES)\r\n    }\r\n\r\n    const attr = parseAttribute(context, attributeNames)\r\n\r\n    // Trim whitespace between class\r\n    // https://github.com/vuejs/core/issues/4251\r\n    if (\r\n      attr.type === NodeTypes.ATTRIBUTE &&\r\n      attr.value &&\r\n      attr.name === 'class'\r\n    ) {\r\n      attr.value.content = attr.value.content.replace(/\\s+/g, ' ').trim()\r\n    }\r\n\r\n    if (type === TagType.Start) {\r\n      props.push(attr)\r\n    }\r\n\r\n    if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\r\n      emitError(context, ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES)\r\n    }\r\n    advanceSpaces(context)\r\n  }\r\n  return props\r\n}\r\n\r\nfunction parseAttribute(\r\n  context: ParserContext,\r\n  nameSet: Set<string>\r\n): AttributeNode | DirectiveNode {\r\n  __TEST__ && assert(/^[^\\t\\r\\n\\f />]/.test(context.source))\r\n\r\n  // Name.\r\n  const start = getCursor(context)\r\n  const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source)!\r\n  const name = match[0]\r\n\r\n  if (nameSet.has(name)) {\r\n    emitError(context, ErrorCodes.DUPLICATE_ATTRIBUTE)\r\n  }\r\n  nameSet.add(name)\r\n\r\n  if (name[0] === '=') {\r\n    emitError(context, ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME)\r\n  }\r\n  {\r\n    const pattern = /[\"'<]/g\r\n    let m: RegExpExecArray | null\r\n    while ((m = pattern.exec(name))) {\r\n      emitError(\r\n        context,\r\n        ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME,\r\n        m.index\r\n      )\r\n    }\r\n  }\r\n\r\n  advanceBy(context, name.length)\r\n\r\n  // Value\r\n  let value: AttributeValue = undefined\r\n\r\n  if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\r\n    advanceSpaces(context)\r\n    advanceBy(context, 1)\r\n    advanceSpaces(context)\r\n    value = parseAttributeValue(context)\r\n    if (!value) {\r\n      emitError(context, ErrorCodes.MISSING_ATTRIBUTE_VALUE)\r\n    }\r\n  }\r\n  const loc = getSelection(context, start)\r\n\r\n  if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\\.|@|#)/.test(name)) {\r\n    const match =\r\n      /(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(\r\n        name\r\n      )!\r\n\r\n    let isPropShorthand = startsWith(name, '.')\r\n    let dirName =\r\n      match[1] ||\r\n      (isPropShorthand || startsWith(name, ':')\r\n        ? 'bind'\r\n        : startsWith(name, '@')\r\n        ? 'on'\r\n        : 'slot')\r\n    let arg: ExpressionNode | undefined\r\n\r\n    if (match[2]) {\r\n      const isSlot = dirName === 'slot'\r\n      const startOffset = name.lastIndexOf(match[2])\r\n      const loc = getSelection(\r\n        context,\r\n        getNewPosition(context, start, startOffset),\r\n        getNewPosition(\r\n          context,\r\n          start,\r\n          startOffset + match[2].length + ((isSlot && match[3]) || '').length\r\n        )\r\n      )\r\n      let content = match[2]\r\n      let isStatic = true\r\n\r\n      if (content.startsWith('[')) {\r\n        isStatic = false\r\n\r\n        if (!content.endsWith(']')) {\r\n          emitError(\r\n            context,\r\n            ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\r\n          )\r\n          content = content.slice(1)\r\n        } else {\r\n          content = content.slice(1, content.length - 1)\r\n        }\r\n      } else if (isSlot) {\r\n        // #1241 special case for v-slot: vuetify relies extensively on slot\r\n        // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\r\n        // supports such usage so we are keeping it consistent with 2.x.\r\n        content += match[3] || ''\r\n      }\r\n\r\n      arg = {\r\n        type: NodeTypes.SIMPLE_EXPRESSION,\r\n        content,\r\n        isStatic,\r\n        constType: isStatic\r\n          ? ConstantTypes.CAN_STRINGIFY\r\n          : ConstantTypes.NOT_CONSTANT,\r\n        loc\r\n      }\r\n    }\r\n\r\n    if (value && value.isQuoted) {\r\n      const valueLoc = value.loc\r\n      valueLoc.start.offset++\r\n      valueLoc.start.column++\r\n      valueLoc.end = advancePositionWithClone(valueLoc.start, value.content)\r\n      valueLoc.source = valueLoc.source.slice(1, -1)\r\n    }\r\n\r\n    const modifiers = match[3] ? match[3].slice(1).split('.') : []\r\n    if (isPropShorthand) modifiers.push('prop')\r\n\r\n    // 2.x compat v-bind:foo.sync -> v-model:foo\r\n    if (__COMPAT__ && dirName === 'bind' && arg) {\r\n      if (\r\n        modifiers.includes('sync') &&\r\n        checkCompatEnabled(\r\n          CompilerDeprecationTypes.COMPILER_V_BIND_SYNC,\r\n          context,\r\n          loc,\r\n          arg.loc.source\r\n        )\r\n      ) {\r\n        dirName = 'model'\r\n        modifiers.splice(modifiers.indexOf('sync'), 1)\r\n      }\r\n\r\n      if (__DEV__ && modifiers.includes('prop')) {\r\n        checkCompatEnabled(\r\n          CompilerDeprecationTypes.COMPILER_V_BIND_PROP,\r\n          context,\r\n          loc\r\n        )\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: NodeTypes.DIRECTIVE,\r\n      name: dirName,\r\n      exp: value && {\r\n        type: NodeTypes.SIMPLE_EXPRESSION,\r\n        content: value.content,\r\n        isStatic: false,\r\n        // Treat as non-constant by default. This can be potentially set to\r\n        // other values by `transformExpression` to make it eligible for hoisting.\r\n        constType: ConstantTypes.NOT_CONSTANT,\r\n        loc: value.loc\r\n      },\r\n      arg,\r\n      modifiers,\r\n      loc\r\n    }\r\n  }\r\n\r\n  // missing directive name or illegal directive name\r\n  if (!context.inVPre && startsWith(name, 'v-')) {\r\n    emitError(context, ErrorCodes.X_MISSING_DIRECTIVE_NAME)\r\n  }\r\n\r\n  return {\r\n    type: NodeTypes.ATTRIBUTE,\r\n    name,\r\n    value: value && {\r\n      type: NodeTypes.TEXT,\r\n      content: value.content,\r\n      loc: value.loc\r\n    },\r\n    loc\r\n  }\r\n}\r\n\r\nfunction parseAttributeValue(context: ParserContext): AttributeValue {\r\n  const start = getCursor(context)\r\n  let content: string\r\n\r\n  const quote = context.source[0]\r\n  const isQuoted = quote === `\"` || quote === `'`\r\n  if (isQuoted) {\r\n    // Quoted value.\r\n    advanceBy(context, 1)\r\n\r\n    const endIndex = context.source.indexOf(quote)\r\n    if (endIndex === -1) {\r\n      content = parseTextData(\r\n        context,\r\n        context.source.length,\r\n        TextModes.ATTRIBUTE_VALUE\r\n      )\r\n    } else {\r\n      content = parseTextData(context, endIndex, TextModes.ATTRIBUTE_VALUE)\r\n      advanceBy(context, 1)\r\n    }\r\n  } else {\r\n    // Unquoted\r\n    const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source)\r\n    if (!match) {\r\n      return undefined\r\n    }\r\n    const unexpectedChars = /[\"'<=`]/g\r\n    let m: RegExpExecArray | null\r\n    while ((m = unexpectedChars.exec(match[0]))) {\r\n      emitError(\r\n        context,\r\n        ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE,\r\n        m.index\r\n      )\r\n    }\r\n    content = parseTextData(context, match[0].length, TextModes.ATTRIBUTE_VALUE)\r\n  }\r\n\r\n  return { content, isQuoted, loc: getSelection(context, start) }\r\n}\r\n\r\nfunction parseInterpolation(\r\n  context: ParserContext,\r\n  mode: TextModes\r\n): InterpolationNode | undefined {\r\n  const [open, close] = context.options.delimiters\r\n  __TEST__ && assert(startsWith(context.source, open))\r\n\r\n  const closeIndex = context.source.indexOf(close, open.length)\r\n  if (closeIndex === -1) {\r\n    emitError(context, ErrorCodes.X_MISSING_INTERPOLATION_END)\r\n    return undefined\r\n  }\r\n\r\n  const start = getCursor(context)\r\n  advanceBy(context, open.length)\r\n  const innerStart = getCursor(context)\r\n  const innerEnd = getCursor(context)\r\n  const rawContentLength = closeIndex - open.length\r\n  const rawContent = context.source.slice(0, rawContentLength)\r\n  const preTrimContent = parseTextData(context, rawContentLength, mode)\r\n  const content = preTrimContent.trim()\r\n  const startOffset = preTrimContent.indexOf(content)\r\n  if (startOffset > 0) {\r\n    advancePositionWithMutation(innerStart, rawContent, startOffset)\r\n  }\r\n  const endOffset =\r\n    rawContentLength - (preTrimContent.length - content.length - startOffset)\r\n  advancePositionWithMutation(innerEnd, rawContent, endOffset)\r\n  advanceBy(context, close.length)\r\n\r\n  return {\r\n    type: NodeTypes.INTERPOLATION,\r\n    content: {\r\n      type: NodeTypes.SIMPLE_EXPRESSION,\r\n      isStatic: false,\r\n      // Set `isConstant` to false by default and will decide in transformExpression\r\n      constType: ConstantTypes.NOT_CONSTANT,\r\n      content,\r\n      loc: getSelection(context, innerStart, innerEnd)\r\n    },\r\n    loc: getSelection(context, start)\r\n  }\r\n}\r\n\r\nfunction parseText(context: ParserContext, mode: TextModes): TextNode {\r\n  __TEST__ && assert(context.source.length > 0)\r\n\r\n  const endTokens =\r\n    mode === TextModes.CDATA ? [']]>'] : ['<', context.options.delimiters[0]]\r\n\r\n  let endIndex = context.source.length\r\n  for (let i = 0; i < endTokens.length; i++) {\r\n    const index = context.source.indexOf(endTokens[i], 1)\r\n    if (index !== -1 && endIndex > index) {\r\n      endIndex = index\r\n    }\r\n  }\r\n\r\n  __TEST__ && assert(endIndex > 0)\r\n\r\n  const start = getCursor(context)\r\n  const content = parseTextData(context, endIndex, mode)\r\n\r\n  return {\r\n    type: NodeTypes.TEXT,\r\n    content,\r\n    loc: getSelection(context, start)\r\n  }\r\n}\r\n\r\n/**\r\n * Get text data with a given length from the current location.\r\n * This translates HTML entities in the text data.\r\n */\r\nfunction parseTextData(\r\n  context: ParserContext,\r\n  length: number,\r\n  mode: TextModes\r\n): string {\r\n  const rawText = context.source.slice(0, length)\r\n  advanceBy(context, length)\r\n  if (\r\n    mode === TextModes.RAWTEXT ||\r\n    mode === TextModes.CDATA ||\r\n    !rawText.includes('&')\r\n  ) {\r\n    return rawText\r\n  } else {\r\n    // DATA or RCDATA containing \"&\"\". Entity decoding required.\r\n    return context.options.decodeEntities(\r\n      rawText,\r\n      mode === TextModes.ATTRIBUTE_VALUE\r\n    )\r\n  }\r\n}\r\n\r\nfunction getCursor(context: ParserContext): Position {\r\n  const { column, line, offset } = context\r\n  return { column, line, offset }\r\n}\r\n\r\nfunction getSelection(\r\n  context: ParserContext,\r\n  start: Position,\r\n  end?: Position\r\n): SourceLocation {\r\n  end = end || getCursor(context)\r\n  return {\r\n    start,\r\n    end,\r\n    source: context.originalSource.slice(start.offset, end.offset)\r\n  }\r\n}\r\n\r\nfunction last<T>(xs: T[]): T | undefined {\r\n  return xs[xs.length - 1]\r\n}\r\n\r\nfunction startsWith(source: string, searchString: string): boolean {\r\n  return source.startsWith(searchString)\r\n}\r\n\r\nfunction advanceBy(context: ParserContext, numberOfCharacters: number): void {\r\n  const { source } = context\r\n  __TEST__ && assert(numberOfCharacters <= source.length)\r\n  advancePositionWithMutation(context, source, numberOfCharacters)\r\n  context.source = source.slice(numberOfCharacters)\r\n}\r\n\r\nfunction advanceSpaces(context: ParserContext): void {\r\n  const match = /^[\\t\\r\\n\\f ]+/.exec(context.source)\r\n  if (match) {\r\n    advanceBy(context, match[0].length)\r\n  }\r\n}\r\n\r\nfunction getNewPosition(\r\n  context: ParserContext,\r\n  start: Position,\r\n  numberOfCharacters: number\r\n): Position {\r\n  return advancePositionWithClone(\r\n    start,\r\n    context.originalSource.slice(start.offset, numberOfCharacters),\r\n    numberOfCharacters\r\n  )\r\n}\r\n\r\nfunction emitError(\r\n  context: ParserContext,\r\n  code: ErrorCodes,\r\n  offset?: number,\r\n  loc: Position = getCursor(context)\r\n): void {\r\n  if (offset) {\r\n    loc.offset += offset\r\n    loc.column += offset\r\n  }\r\n  context.options.onError(\r\n    createCompilerError(code, {\r\n      start: loc,\r\n      end: loc,\r\n      source: ''\r\n    })\r\n  )\r\n}\r\n\r\nfunction isEnd(\r\n  context: ParserContext,\r\n  mode: TextModes,\r\n  ancestors: ElementNode[]\r\n): boolean {\r\n  const s = context.source\r\n\r\n  switch (mode) {\r\n    case TextModes.DATA:\r\n      if (startsWith(s, '</')) {\r\n        // TODO: probably bad performance\r\n        for (let i = ancestors.length - 1; i >= 0; --i) {\r\n          if (startsWithEndTagOpen(s, ancestors[i].tag)) {\r\n            return true\r\n          }\r\n        }\r\n      }\r\n      break\r\n\r\n    case TextModes.RCDATA:\r\n    case TextModes.RAWTEXT: {\r\n      const parent = last(ancestors)\r\n      if (parent && startsWithEndTagOpen(s, parent.tag)) {\r\n        return true\r\n      }\r\n      break\r\n    }\r\n\r\n    case TextModes.CDATA:\r\n      if (startsWith(s, ']]>')) {\r\n        return true\r\n      }\r\n      break\r\n  }\r\n\r\n  return !s\r\n}\r\n\r\nfunction startsWithEndTagOpen(source: string, tag: string): boolean {\r\n  return (\r\n    startsWith(source, '</') &&\r\n    source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() &&\r\n    /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>')\r\n  )\r\n}\r\n","import {\r\n  ConstantTypes,\r\n  RootNode,\r\n  NodeTypes,\r\n  TemplateChildNode,\r\n  SimpleExpressionNode,\r\n  ElementTypes,\r\n  PlainElementNode,\r\n  ComponentNode,\r\n  TemplateNode,\r\n  VNodeCall,\r\n  ParentNode,\r\n  JSChildNode,\r\n  CallExpression,\r\n  createArrayExpression\r\n} from '../ast'\r\nimport { TransformContext } from '../transform'\r\nimport { PatchFlags, isString, isSymbol, isArray } from '@vue/shared'\r\nimport { getVNodeBlockHelper, getVNodeHelper, isSlotOutlet } from '../utils'\r\nimport {\r\n  OPEN_BLOCK,\r\n  GUARD_REACTIVE_PROPS,\r\n  NORMALIZE_CLASS,\r\n  NORMALIZE_PROPS,\r\n  NORMALIZE_STYLE\r\n} from '../runtimeHelpers'\r\n\r\nexport function hoistStatic(root: RootNode, context: TransformContext) {\r\n  walk(\r\n    root,\r\n    context,\r\n    // Root node is unfortunately non-hoistable due to potential parent\r\n    // fallthrough attributes.\r\n    isSingleElementRoot(root, root.children[0])\r\n  )\r\n}\r\n\r\nexport function isSingleElementRoot(\r\n  root: RootNode,\r\n  child: TemplateChildNode\r\n): child is PlainElementNode | ComponentNode | TemplateNode {\r\n  const { children } = root\r\n  return (\r\n    children.length === 1 &&\r\n    child.type === NodeTypes.ELEMENT &&\r\n    !isSlotOutlet(child)\r\n  )\r\n}\r\n\r\nfunction walk(\r\n  node: ParentNode,\r\n  context: TransformContext,\r\n  doNotHoistNode: boolean = false\r\n) {\r\n  const { children } = node\r\n  const originalCount = children.length\r\n  let hoistedCount = 0\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    // only plain elements & text calls are eligible for hoisting.\r\n    if (\r\n      child.type === NodeTypes.ELEMENT &&\r\n      child.tagType === ElementTypes.ELEMENT\r\n    ) {\r\n      const constantType = doNotHoistNode\r\n        ? ConstantTypes.NOT_CONSTANT\r\n        : getConstantType(child, context)\r\n      if (constantType > ConstantTypes.NOT_CONSTANT) {\r\n        if (constantType >= ConstantTypes.CAN_HOIST) {\r\n          ;(child.codegenNode as VNodeCall).patchFlag =\r\n            PatchFlags.HOISTED + (__DEV__ ? ` /* HOISTED */` : ``)\r\n          child.codegenNode = context.hoist(child.codegenNode!)\r\n          hoistedCount++\r\n          continue\r\n        }\r\n      } else {\r\n        // node may contain dynamic children, but its props may be eligible for\r\n        // hoisting.\r\n        const codegenNode = child.codegenNode!\r\n        if (codegenNode.type === NodeTypes.VNODE_CALL) {\r\n          const flag = getPatchFlag(codegenNode)\r\n          if (\r\n            (!flag ||\r\n              flag === PatchFlags.NEED_PATCH ||\r\n              flag === PatchFlags.TEXT) &&\r\n            getGeneratedPropsConstantType(child, context) >=\r\n              ConstantTypes.CAN_HOIST\r\n          ) {\r\n            const props = getNodeProps(child)\r\n            if (props) {\r\n              codegenNode.props = context.hoist(props)\r\n            }\r\n          }\r\n          if (codegenNode.dynamicProps) {\r\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps)\r\n          }\r\n        }\r\n      }\r\n    } else if (\r\n      child.type === NodeTypes.TEXT_CALL &&\r\n      getConstantType(child.content, context) >= ConstantTypes.CAN_HOIST\r\n    ) {\r\n      child.codegenNode = context.hoist(child.codegenNode)\r\n      hoistedCount++\r\n    }\r\n\r\n    // walk further\r\n    if (child.type === NodeTypes.ELEMENT) {\r\n      const isComponent = child.tagType === ElementTypes.COMPONENT\r\n      if (isComponent) {\r\n        context.scopes.vSlot++\r\n      }\r\n      walk(child, context)\r\n      if (isComponent) {\r\n        context.scopes.vSlot--\r\n      }\r\n    } else if (child.type === NodeTypes.FOR) {\r\n      // Do not hoist v-for single child because it has to be a block\r\n      walk(child, context, child.children.length === 1)\r\n    } else if (child.type === NodeTypes.IF) {\r\n      for (let i = 0; i < child.branches.length; i++) {\r\n        // Do not hoist v-if single child because it has to be a block\r\n        walk(\r\n          child.branches[i],\r\n          context,\r\n          child.branches[i].children.length === 1\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  if (hoistedCount && context.transformHoist) {\r\n    context.transformHoist(children, context, node)\r\n  }\r\n\r\n  // all children were hoisted - the entire children array is hoistable.\r\n  if (\r\n    hoistedCount &&\r\n    hoistedCount === originalCount &&\r\n    node.type === NodeTypes.ELEMENT &&\r\n    node.tagType === ElementTypes.ELEMENT &&\r\n    node.codegenNode &&\r\n    node.codegenNode.type === NodeTypes.VNODE_CALL &&\r\n    isArray(node.codegenNode.children)\r\n  ) {\r\n    node.codegenNode.children = context.hoist(\r\n      createArrayExpression(node.codegenNode.children)\r\n    )\r\n  }\r\n}\r\n\r\nexport function getConstantType(\r\n  node: TemplateChildNode | SimpleExpressionNode,\r\n  context: TransformContext\r\n): ConstantTypes {\r\n  const { constantCache } = context\r\n  switch (node.type) {\r\n    case NodeTypes.ELEMENT:\r\n      if (node.tagType !== ElementTypes.ELEMENT) {\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n      const cached = constantCache.get(node)\r\n      if (cached !== undefined) {\r\n        return cached\r\n      }\r\n      const codegenNode = node.codegenNode!\r\n      if (codegenNode.type !== NodeTypes.VNODE_CALL) {\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n      if (\r\n        codegenNode.isBlock &&\r\n        node.tag !== 'svg' &&\r\n        node.tag !== 'foreignObject'\r\n      ) {\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n      const flag = getPatchFlag(codegenNode)\r\n      if (!flag) {\r\n        let returnType = ConstantTypes.CAN_STRINGIFY\r\n\r\n        // Element itself has no patch flag. However we still need to check:\r\n\r\n        // 1. Even for a node with no patch flag, it is possible for it to contain\r\n        // non-hoistable expressions that refers to scope variables, e.g. compiler\r\n        // injected keys or cached event handlers. Therefore we need to always\r\n        // check the codegenNode's props to be sure.\r\n        const generatedPropsType = getGeneratedPropsConstantType(node, context)\r\n        if (generatedPropsType === ConstantTypes.NOT_CONSTANT) {\r\n          constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n          return ConstantTypes.NOT_CONSTANT\r\n        }\r\n        if (generatedPropsType < returnType) {\r\n          returnType = generatedPropsType\r\n        }\r\n\r\n        // 2. its children.\r\n        for (let i = 0; i < node.children.length; i++) {\r\n          const childType = getConstantType(node.children[i], context)\r\n          if (childType === ConstantTypes.NOT_CONSTANT) {\r\n            constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n            return ConstantTypes.NOT_CONSTANT\r\n          }\r\n          if (childType < returnType) {\r\n            returnType = childType\r\n          }\r\n        }\r\n\r\n        // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\r\n        // type, check if any of the props can cause the type to be lowered\r\n        // we can skip can_patch because it's guaranteed by the absence of a\r\n        // patchFlag.\r\n        if (returnType > ConstantTypes.CAN_SKIP_PATCH) {\r\n          for (let i = 0; i < node.props.length; i++) {\r\n            const p = node.props[i]\r\n            if (p.type === NodeTypes.DIRECTIVE && p.name === 'bind' && p.exp) {\r\n              const expType = getConstantType(p.exp, context)\r\n              if (expType === ConstantTypes.NOT_CONSTANT) {\r\n                constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n                return ConstantTypes.NOT_CONSTANT\r\n              }\r\n              if (expType < returnType) {\r\n                returnType = expType\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // only svg/foreignObject could be block here, however if they are\r\n        // static then they don't need to be blocks since there will be no\r\n        // nested updates.\r\n        if (codegenNode.isBlock) {\r\n          // except set custom directives.\r\n          for (let i = 0; i < node.props.length; i++) {\r\n            const p = node.props[i]\r\n            if (p.type === NodeTypes.DIRECTIVE) {\r\n              constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n              return ConstantTypes.NOT_CONSTANT\r\n            }\r\n          }\r\n\r\n          context.removeHelper(OPEN_BLOCK)\r\n          context.removeHelper(\r\n            getVNodeBlockHelper(context.inSSR, codegenNode.isComponent)\r\n          )\r\n          codegenNode.isBlock = false\r\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent))\r\n        }\r\n\r\n        constantCache.set(node, returnType)\r\n        return returnType\r\n      } else {\r\n        constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n    case NodeTypes.TEXT:\r\n    case NodeTypes.COMMENT:\r\n      return ConstantTypes.CAN_STRINGIFY\r\n    case NodeTypes.IF:\r\n    case NodeTypes.FOR:\r\n    case NodeTypes.IF_BRANCH:\r\n      return ConstantTypes.NOT_CONSTANT\r\n    case NodeTypes.INTERPOLATION:\r\n    case NodeTypes.TEXT_CALL:\r\n      return getConstantType(node.content, context)\r\n    case NodeTypes.SIMPLE_EXPRESSION:\r\n      return node.constType\r\n    case NodeTypes.COMPOUND_EXPRESSION:\r\n      let returnType = ConstantTypes.CAN_STRINGIFY\r\n      for (let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i]\r\n        if (isString(child) || isSymbol(child)) {\r\n          continue\r\n        }\r\n        const childType = getConstantType(child, context)\r\n        if (childType === ConstantTypes.NOT_CONSTANT) {\r\n          return ConstantTypes.NOT_CONSTANT\r\n        } else if (childType < returnType) {\r\n          returnType = childType\r\n        }\r\n      }\r\n      return returnType\r\n    default:\r\n      if (__DEV__) {\r\n        const exhaustiveCheck: never = node\r\n        exhaustiveCheck\r\n      }\r\n      return ConstantTypes.NOT_CONSTANT\r\n  }\r\n}\r\n\r\nconst allowHoistedHelperSet = new Set([\r\n  NORMALIZE_CLASS,\r\n  NORMALIZE_STYLE,\r\n  NORMALIZE_PROPS,\r\n  GUARD_REACTIVE_PROPS\r\n])\r\n\r\nfunction getConstantTypeOfHelperCall(\r\n  value: CallExpression,\r\n  context: TransformContext\r\n): ConstantTypes {\r\n  if (\r\n    value.type === NodeTypes.JS_CALL_EXPRESSION &&\r\n    !isString(value.callee) &&\r\n    allowHoistedHelperSet.has(value.callee)\r\n  ) {\r\n    const arg = value.arguments[0] as JSChildNode\r\n    if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n      return getConstantType(arg, context)\r\n    } else if (arg.type === NodeTypes.JS_CALL_EXPRESSION) {\r\n      // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\r\n      return getConstantTypeOfHelperCall(arg, context)\r\n    }\r\n  }\r\n  return ConstantTypes.NOT_CONSTANT\r\n}\r\n\r\nfunction getGeneratedPropsConstantType(\r\n  node: PlainElementNode,\r\n  context: TransformContext\r\n): ConstantTypes {\r\n  let returnType = ConstantTypes.CAN_STRINGIFY\r\n  const props = getNodeProps(node)\r\n  if (props && props.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n    const { properties } = props\r\n    for (let i = 0; i < properties.length; i++) {\r\n      const { key, value } = properties[i]\r\n      const keyType = getConstantType(key, context)\r\n      if (keyType === ConstantTypes.NOT_CONSTANT) {\r\n        return keyType\r\n      }\r\n      if (keyType < returnType) {\r\n        returnType = keyType\r\n      }\r\n      let valueType: ConstantTypes\r\n      if (value.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n        valueType = getConstantType(value, context)\r\n      } else if (value.type === NodeTypes.JS_CALL_EXPRESSION) {\r\n        // some helper calls can be hoisted,\r\n        // such as the `normalizeProps` generated by the compiler for pre-normalize class,\r\n        // in this case we need to respect the ConstantType of the helper's arguments\r\n        valueType = getConstantTypeOfHelperCall(value, context)\r\n      } else {\r\n        valueType = ConstantTypes.NOT_CONSTANT\r\n      }\r\n      if (valueType === ConstantTypes.NOT_CONSTANT) {\r\n        return valueType\r\n      }\r\n      if (valueType < returnType) {\r\n        returnType = valueType\r\n      }\r\n    }\r\n  }\r\n  return returnType\r\n}\r\n\r\nfunction getNodeProps(node: PlainElementNode) {\r\n  const codegenNode = node.codegenNode!\r\n  if (codegenNode.type === NodeTypes.VNODE_CALL) {\r\n    return codegenNode.props\r\n  }\r\n}\r\n\r\nfunction getPatchFlag(node: VNodeCall): number | undefined {\r\n  const flag = node.patchFlag\r\n  return flag ? parseInt(flag, 10) : undefined\r\n}\r\n","import { TransformOptions } from './options'\r\nimport {\r\n  RootNode,\r\n  NodeTypes,\r\n  ParentNode,\r\n  TemplateChildNode,\r\n  ElementNode,\r\n  DirectiveNode,\r\n  Property,\r\n  ExpressionNode,\r\n  createSimpleExpression,\r\n  JSChildNode,\r\n  SimpleExpressionNode,\r\n  ElementTypes,\r\n  CacheExpression,\r\n  createCacheExpression,\r\n  TemplateLiteral,\r\n  createVNodeCall,\r\n  ConstantTypes,\r\n  ArrayExpression\r\n} from './ast'\r\nimport {\r\n  isString,\r\n  isArray,\r\n  NOOP,\r\n  PatchFlags,\r\n  PatchFlagNames,\r\n  EMPTY_OBJ,\r\n  capitalize,\r\n  camelize\r\n} from '@vue/shared'\r\nimport { defaultOnError, defaultOnWarn } from './errors'\r\nimport {\r\n  TO_DISPLAY_STRING,\r\n  FRAGMENT,\r\n  helperNameMap,\r\n  CREATE_COMMENT\r\n} from './runtimeHelpers'\r\nimport { isVSlot, makeBlock } from './utils'\r\nimport { hoistStatic, isSingleElementRoot } from './transforms/hoistStatic'\r\nimport { CompilerCompatOptions } from './compat/compatConfig'\r\n\r\n// There are two types of transforms:\r\n//\r\n// - NodeTransform:\r\n//   Transforms that operate directly on a ChildNode. NodeTransforms may mutate,\r\n//   replace or remove the node being processed.\r\nexport type NodeTransform = (\r\n  node: RootNode | TemplateChildNode,\r\n  context: TransformContext\r\n) => void | (() => void) | (() => void)[]\r\n\r\n// - DirectiveTransform:\r\n//   Transforms that handles a single directive attribute on an element.\r\n//   It translates the raw directive into actual props for the VNode.\r\nexport type DirectiveTransform = (\r\n  dir: DirectiveNode,\r\n  node: ElementNode,\r\n  context: TransformContext,\r\n  // a platform specific compiler can import the base transform and augment\r\n  // it by passing in this optional argument.\r\n  augmentor?: (ret: DirectiveTransformResult) => DirectiveTransformResult\r\n) => DirectiveTransformResult\r\n\r\nexport interface DirectiveTransformResult {\r\n  props: Property[]\r\n  needRuntime?: boolean | symbol\r\n  ssrTagParts?: TemplateLiteral['elements']\r\n}\r\n\r\n// A structural directive transform is technically also a NodeTransform;\r\n// Only v-if and v-for fall into this category.\r\nexport type StructuralDirectiveTransform = (\r\n  node: ElementNode,\r\n  dir: DirectiveNode,\r\n  context: TransformContext\r\n) => void | (() => void)\r\n\r\nexport interface ImportItem {\r\n  exp: string | ExpressionNode\r\n  path: string\r\n}\r\n\r\nexport interface TransformContext\r\n  extends Required<\r\n      Omit<TransformOptions, 'filename' | keyof CompilerCompatOptions>\r\n    >,\r\n    CompilerCompatOptions {\r\n  selfName: string | null\r\n  root: RootNode\r\n  helpers: Map<symbol, number>\r\n  components: Set<string>\r\n  directives: Set<string>\r\n  hoists: (JSChildNode | null)[]\r\n  imports: ImportItem[]\r\n  temps: number\r\n  cached: number\r\n  identifiers: { [name: string]: number | undefined }\r\n  scopes: {\r\n    vFor: number\r\n    vSlot: number\r\n    vPre: number\r\n    vOnce: number\r\n  }\r\n  parent: ParentNode | null\r\n  childIndex: number\r\n  currentNode: RootNode | TemplateChildNode | null\r\n  inVOnce: boolean\r\n  helper<T extends symbol>(name: T): T\r\n  removeHelper<T extends symbol>(name: T): void\r\n  helperString(name: symbol): string\r\n  replaceNode(node: TemplateChildNode): void\r\n  removeNode(node?: TemplateChildNode): void\r\n  onNodeRemoved(): void\r\n  addIdentifiers(exp: ExpressionNode | string): void\r\n  removeIdentifiers(exp: ExpressionNode | string): void\r\n  hoist(exp: string | JSChildNode | ArrayExpression): SimpleExpressionNode\r\n  cache<T extends JSChildNode>(exp: T, isVNode?: boolean): CacheExpression | T\r\n  constantCache: Map<TemplateChildNode, ConstantTypes>\r\n\r\n  // 2.x Compat only\r\n  filters?: Set<string>\r\n}\r\n\r\nexport function createTransformContext(\r\n  root: RootNode,\r\n  {\r\n    filename = '',\r\n    prefixIdentifiers = false,\r\n    hoistStatic = false,\r\n    cacheHandlers = false,\r\n    nodeTransforms = [],\r\n    directiveTransforms = {},\r\n    transformHoist = null,\r\n    isBuiltInComponent = NOOP,\r\n    isCustomElement = NOOP,\r\n    expressionPlugins = [],\r\n    scopeId = null,\r\n    slotted = true,\r\n    ssr = false,\r\n    inSSR = false,\r\n    ssrCssVars = ``,\r\n    bindingMetadata = EMPTY_OBJ,\r\n    inline = false,\r\n    isTS = false,\r\n    onError = defaultOnError,\r\n    onWarn = defaultOnWarn,\r\n    compatConfig\r\n  }: TransformOptions\r\n): TransformContext {\r\n  const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/)\r\n  const context: TransformContext = {\r\n    // options\r\n    selfName: nameMatch && capitalize(camelize(nameMatch[1])),\r\n    prefixIdentifiers,\r\n    hoistStatic,\r\n    cacheHandlers,\r\n    nodeTransforms,\r\n    directiveTransforms,\r\n    transformHoist,\r\n    isBuiltInComponent,\r\n    isCustomElement,\r\n    expressionPlugins,\r\n    scopeId,\r\n    slotted,\r\n    ssr,\r\n    inSSR,\r\n    ssrCssVars,\r\n    bindingMetadata,\r\n    inline,\r\n    isTS,\r\n    onError,\r\n    onWarn,\r\n    compatConfig,\r\n\r\n    // state\r\n    root,\r\n    helpers: new Map(),\r\n    components: new Set(),\r\n    directives: new Set(),\r\n    hoists: [],\r\n    imports: [],\r\n    constantCache: new Map(),\r\n    temps: 0,\r\n    cached: 0,\r\n    identifiers: Object.create(null),\r\n    scopes: {\r\n      vFor: 0,\r\n      vSlot: 0,\r\n      vPre: 0,\r\n      vOnce: 0\r\n    },\r\n    parent: null,\r\n    currentNode: root,\r\n    childIndex: 0,\r\n    inVOnce: false,\r\n\r\n    // methods\r\n    helper(name) {\r\n      const count = context.helpers.get(name) || 0\r\n      context.helpers.set(name, count + 1)\r\n      return name\r\n    },\r\n    removeHelper(name) {\r\n      const count = context.helpers.get(name)\r\n      if (count) {\r\n        const currentCount = count - 1\r\n        if (!currentCount) {\r\n          context.helpers.delete(name)\r\n        } else {\r\n          context.helpers.set(name, currentCount)\r\n        }\r\n      }\r\n    },\r\n    helperString(name) {\r\n      return `_${helperNameMap[context.helper(name)]}`\r\n    },\r\n    replaceNode(node) {\r\n      /* istanbul ignore if */\r\n      if (__DEV__) {\r\n        if (!context.currentNode) {\r\n          throw new Error(`Node being replaced is already removed.`)\r\n        }\r\n        if (!context.parent) {\r\n          throw new Error(`Cannot replace root node.`)\r\n        }\r\n      }\r\n      context.parent!.children[context.childIndex] = context.currentNode = node\r\n    },\r\n    removeNode(node) {\r\n      if (__DEV__ && !context.parent) {\r\n        throw new Error(`Cannot remove root node.`)\r\n      }\r\n      const list = context.parent!.children\r\n      const removalIndex = node\r\n        ? list.indexOf(node)\r\n        : context.currentNode\r\n        ? context.childIndex\r\n        : -1\r\n      /* istanbul ignore if */\r\n      if (__DEV__ && removalIndex < 0) {\r\n        throw new Error(`node being removed is not a child of current parent`)\r\n      }\r\n      if (!node || node === context.currentNode) {\r\n        // current node removed\r\n        context.currentNode = null\r\n        context.onNodeRemoved()\r\n      } else {\r\n        // sibling node removed\r\n        if (context.childIndex > removalIndex) {\r\n          context.childIndex--\r\n          context.onNodeRemoved()\r\n        }\r\n      }\r\n      context.parent!.children.splice(removalIndex, 1)\r\n    },\r\n    onNodeRemoved: () => {},\r\n    addIdentifiers(exp) {\r\n      // identifier tracking only happens in non-browser builds.\r\n      if (!__BROWSER__) {\r\n        if (isString(exp)) {\r\n          addId(exp)\r\n        } else if (exp.identifiers) {\r\n          exp.identifiers.forEach(addId)\r\n        } else if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n          addId(exp.content)\r\n        }\r\n      }\r\n    },\r\n    removeIdentifiers(exp) {\r\n      if (!__BROWSER__) {\r\n        if (isString(exp)) {\r\n          removeId(exp)\r\n        } else if (exp.identifiers) {\r\n          exp.identifiers.forEach(removeId)\r\n        } else if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n          removeId(exp.content)\r\n        }\r\n      }\r\n    },\r\n    hoist(exp) {\r\n      if (isString(exp)) exp = createSimpleExpression(exp)\r\n      context.hoists.push(exp)\r\n      const identifier = createSimpleExpression(\r\n        `_hoisted_${context.hoists.length}`,\r\n        false,\r\n        exp.loc,\r\n        ConstantTypes.CAN_HOIST\r\n      )\r\n      identifier.hoisted = exp\r\n      return identifier\r\n    },\r\n    cache(exp, isVNode = false) {\r\n      return createCacheExpression(context.cached++, exp, isVNode)\r\n    }\r\n  }\r\n\r\n  if (__COMPAT__) {\r\n    context.filters = new Set()\r\n  }\r\n\r\n  function addId(id: string) {\r\n    const { identifiers } = context\r\n    if (identifiers[id] === undefined) {\r\n      identifiers[id] = 0\r\n    }\r\n    identifiers[id]!++\r\n  }\r\n\r\n  function removeId(id: string) {\r\n    context.identifiers[id]!--\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nexport function transform(root: RootNode, options: TransformOptions) {\r\n  const context = createTransformContext(root, options)\r\n  traverseNode(root, context)\r\n  if (options.hoistStatic) {\r\n    hoistStatic(root, context)\r\n  }\r\n  if (!options.ssr) {\r\n    createRootCodegen(root, context)\r\n  }\r\n  // finalize meta information\r\n  root.helpers = [...context.helpers.keys()]\r\n  root.components = [...context.components]\r\n  root.directives = [...context.directives]\r\n  root.imports = context.imports\r\n  root.hoists = context.hoists\r\n  root.temps = context.temps\r\n  root.cached = context.cached\r\n\r\n  if (__COMPAT__) {\r\n    root.filters = [...context.filters!]\r\n  }\r\n}\r\n\r\nfunction createRootCodegen(root: RootNode, context: TransformContext) {\r\n  const { helper } = context\r\n  const { children } = root\r\n  if (children.length === 1) {\r\n    const child = children[0]\r\n    // if the single child is an element, turn it into a block.\r\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\r\n      // single element root is never hoisted so codegenNode will never be\r\n      // SimpleExpressionNode\r\n      const codegenNode = child.codegenNode\r\n      if (codegenNode.type === NodeTypes.VNODE_CALL) {\r\n        makeBlock(codegenNode, context)\r\n      }\r\n      root.codegenNode = codegenNode\r\n    } else {\r\n      // - single <slot/>, IfNode, ForNode: already blocks.\r\n      // - single text node: always patched.\r\n      // root codegen falls through via genNode()\r\n      root.codegenNode = child\r\n    }\r\n  } else if (children.length > 1) {\r\n    // root has multiple nodes - return a fragment block.\r\n    let patchFlag = PatchFlags.STABLE_FRAGMENT\r\n    let patchFlagText = PatchFlagNames[PatchFlags.STABLE_FRAGMENT]\r\n    // check if the fragment actually contains a single valid child with\r\n    // the rest being comments\r\n    if (\r\n      __DEV__ &&\r\n      children.filter(c => c.type !== NodeTypes.COMMENT).length === 1\r\n    ) {\r\n      patchFlag |= PatchFlags.DEV_ROOT_FRAGMENT\r\n      patchFlagText += `, ${PatchFlagNames[PatchFlags.DEV_ROOT_FRAGMENT]}`\r\n    }\r\n    root.codegenNode = createVNodeCall(\r\n      context,\r\n      helper(FRAGMENT),\r\n      undefined,\r\n      root.children,\r\n      patchFlag + (__DEV__ ? ` /* ${patchFlagText} */` : ``),\r\n      undefined,\r\n      undefined,\r\n      true,\r\n      undefined,\r\n      false /* isComponent */\r\n    )\r\n  } else {\r\n    // no children = noop. codegen will return null.\r\n  }\r\n}\r\n\r\nexport function traverseChildren(\r\n  parent: ParentNode,\r\n  context: TransformContext\r\n) {\r\n  let i = 0\r\n  const nodeRemoved = () => {\r\n    i--\r\n  }\r\n  for (; i < parent.children.length; i++) {\r\n    const child = parent.children[i]\r\n    if (isString(child)) continue\r\n    context.parent = parent\r\n    context.childIndex = i\r\n    context.onNodeRemoved = nodeRemoved\r\n    traverseNode(child, context)\r\n  }\r\n}\r\n\r\nexport function traverseNode(\r\n  node: RootNode | TemplateChildNode,\r\n  context: TransformContext\r\n) {\r\n  context.currentNode = node\r\n  // apply transform plugins\r\n  const { nodeTransforms } = context\r\n  const exitFns = []\r\n  for (let i = 0; i < nodeTransforms.length; i++) {\r\n    const onExit = nodeTransforms[i](node, context)\r\n    if (onExit) {\r\n      if (isArray(onExit)) {\r\n        exitFns.push(...onExit)\r\n      } else {\r\n        exitFns.push(onExit)\r\n      }\r\n    }\r\n    if (!context.currentNode) {\r\n      // node was removed\r\n      return\r\n    } else {\r\n      // node may have been replaced\r\n      node = context.currentNode\r\n    }\r\n  }\r\n\r\n  switch (node.type) {\r\n    case NodeTypes.COMMENT:\r\n      if (!context.ssr) {\r\n        // inject import for the Comment symbol, which is needed for creating\r\n        // comment nodes with `createVNode`\r\n        context.helper(CREATE_COMMENT)\r\n      }\r\n      break\r\n    case NodeTypes.INTERPOLATION:\r\n      // no need to traverse, but we need to inject toString helper\r\n      if (!context.ssr) {\r\n        context.helper(TO_DISPLAY_STRING)\r\n      }\r\n      break\r\n\r\n    // for container types, further traverse downwards\r\n    case NodeTypes.IF:\r\n      for (let i = 0; i < node.branches.length; i++) {\r\n        traverseNode(node.branches[i], context)\r\n      }\r\n      break\r\n    case NodeTypes.IF_BRANCH:\r\n    case NodeTypes.FOR:\r\n    case NodeTypes.ELEMENT:\r\n    case NodeTypes.ROOT:\r\n      traverseChildren(node, context)\r\n      break\r\n  }\r\n\r\n  // exit transforms\r\n  context.currentNode = node\r\n  let i = exitFns.length\r\n  while (i--) {\r\n    exitFns[i]()\r\n  }\r\n}\r\n\r\nexport function createStructuralDirectiveTransform(\r\n  name: string | RegExp,\r\n  fn: StructuralDirectiveTransform\r\n): NodeTransform {\r\n  const matches = isString(name)\r\n    ? (n: string) => n === name\r\n    : (n: string) => name.test(n)\r\n\r\n  return (node, context) => {\r\n    if (node.type === NodeTypes.ELEMENT) {\r\n      const { props } = node\r\n      // structural directive transforms are not concerned with slots\r\n      // as they are handled separately in vSlot.ts\r\n      if (node.tagType === ElementTypes.TEMPLATE && props.some(isVSlot)) {\r\n        return\r\n      }\r\n      const exitFns = []\r\n      for (let i = 0; i < props.length; i++) {\r\n        const prop = props[i]\r\n        if (prop.type === NodeTypes.DIRECTIVE && matches(prop.name)) {\r\n          // structural directives are removed to avoid infinite recursion\r\n          // also we remove them *before* applying so that it can further\r\n          // traverse itself in case it moves the node around\r\n          props.splice(i, 1)\r\n          i--\r\n          const onExit = fn(node, prop, context)\r\n          if (onExit) exitFns.push(onExit)\r\n        }\r\n      }\r\n      return exitFns\r\n    }\r\n  }\r\n}\r\n","import { CodegenOptions } from './options'\r\nimport {\r\n  RootNode,\r\n  TemplateChildNode,\r\n  TextNode,\r\n  CommentNode,\r\n  ExpressionNode,\r\n  NodeTypes,\r\n  JSChildNode,\r\n  CallExpression,\r\n  ArrayExpression,\r\n  ObjectExpression,\r\n  Position,\r\n  InterpolationNode,\r\n  CompoundExpressionNode,\r\n  SimpleExpressionNode,\r\n  FunctionExpression,\r\n  ConditionalExpression,\r\n  CacheExpression,\r\n  locStub,\r\n  SSRCodegenNode,\r\n  TemplateLiteral,\r\n  IfStatement,\r\n  AssignmentExpression,\r\n  ReturnStatement,\r\n  VNodeCall,\r\n  SequenceExpression\r\n} from './ast'\r\nimport { SourceMapGenerator, RawSourceMap } from 'source-map'\r\nimport {\r\n  advancePositionWithMutation,\r\n  assert,\r\n  getVNodeBlockHelper,\r\n  getVNodeHelper,\r\n  isSimpleIdentifier,\r\n  toValidAssetId\r\n} from './utils'\r\nimport { isString, isArray, isSymbol } from '@vue/shared'\r\nimport {\r\n  helperNameMap,\r\n  TO_DISPLAY_STRING,\r\n  CREATE_VNODE,\r\n  RESOLVE_COMPONENT,\r\n  RESOLVE_DIRECTIVE,\r\n  SET_BLOCK_TRACKING,\r\n  CREATE_COMMENT,\r\n  CREATE_TEXT,\r\n  PUSH_SCOPE_ID,\r\n  POP_SCOPE_ID,\r\n  WITH_DIRECTIVES,\r\n  CREATE_ELEMENT_VNODE,\r\n  OPEN_BLOCK,\r\n  CREATE_STATIC,\r\n  WITH_CTX,\r\n  RESOLVE_FILTER\r\n} from './runtimeHelpers'\r\nimport { ImportItem } from './transform'\r\n\r\nconst PURE_ANNOTATION = `/*#__PURE__*/`\r\n\r\nconst aliasHelper = (s: symbol) => `${helperNameMap[s]}: _${helperNameMap[s]}`\r\n\r\ntype CodegenNode = TemplateChildNode | JSChildNode | SSRCodegenNode\r\n\r\nexport interface CodegenResult {\r\n  code: string\r\n  preamble: string\r\n  ast: RootNode\r\n  map?: RawSourceMap\r\n}\r\n\r\nexport interface CodegenContext\r\n  extends Omit<Required<CodegenOptions>, 'bindingMetadata' | 'inline'> {\r\n  source: string\r\n  code: string\r\n  line: number\r\n  column: number\r\n  offset: number\r\n  indentLevel: number\r\n  pure: boolean\r\n  map?: SourceMapGenerator\r\n  helper(key: symbol): string\r\n  push(code: string, node?: CodegenNode): void\r\n  indent(): void\r\n  deindent(withoutNewLine?: boolean): void\r\n  newline(): void\r\n}\r\n\r\nfunction createCodegenContext(\r\n  ast: RootNode,\r\n  {\r\n    mode = 'function',\r\n    prefixIdentifiers = mode === 'module',\r\n    sourceMap = false,\r\n    filename = `template.vue.html`,\r\n    scopeId = null,\r\n    optimizeImports = false,\r\n    runtimeGlobalName = `Vue`,\r\n    runtimeModuleName = `vue`,\r\n    ssrRuntimeModuleName = 'vue/server-renderer',\r\n    ssr = false,\r\n    isTS = false,\r\n    inSSR = false\r\n  }: CodegenOptions\r\n): CodegenContext {\r\n  const context: CodegenContext = {\r\n    mode,\r\n    prefixIdentifiers,\r\n    sourceMap,\r\n    filename,\r\n    scopeId,\r\n    optimizeImports,\r\n    runtimeGlobalName,\r\n    runtimeModuleName,\r\n    ssrRuntimeModuleName,\r\n    ssr,\r\n    isTS,\r\n    inSSR,\r\n    source: ast.loc.source,\r\n    code: ``,\r\n    column: 1,\r\n    line: 1,\r\n    offset: 0,\r\n    indentLevel: 0,\r\n    pure: false,\r\n    map: undefined,\r\n    helper(key) {\r\n      return `_${helperNameMap[key]}`\r\n    },\r\n    push(code, node) {\r\n      context.code += code\r\n      if (!__BROWSER__ && context.map) {\r\n        if (node) {\r\n          let name\r\n          if (node.type === NodeTypes.SIMPLE_EXPRESSION && !node.isStatic) {\r\n            const content = node.content.replace(/^_ctx\\./, '')\r\n            if (content !== node.content && isSimpleIdentifier(content)) {\r\n              name = content\r\n            }\r\n          }\r\n          addMapping(node.loc.start, name)\r\n        }\r\n        advancePositionWithMutation(context, code)\r\n        if (node && node.loc !== locStub) {\r\n          addMapping(node.loc.end)\r\n        }\r\n      }\r\n    },\r\n    indent() {\r\n      newline(++context.indentLevel)\r\n    },\r\n    deindent(withoutNewLine = false) {\r\n      if (withoutNewLine) {\r\n        --context.indentLevel\r\n      } else {\r\n        newline(--context.indentLevel)\r\n      }\r\n    },\r\n    newline() {\r\n      newline(context.indentLevel)\r\n    }\r\n  }\r\n\r\n  function newline(n: number) {\r\n    context.push('\\n' + `  `.repeat(n))\r\n  }\r\n\r\n  function addMapping(loc: Position, name?: string) {\r\n    context.map!.addMapping({\r\n      name,\r\n      source: context.filename,\r\n      original: {\r\n        line: loc.line,\r\n        column: loc.column - 1 // source-map column is 0 based\r\n      },\r\n      generated: {\r\n        line: context.line,\r\n        column: context.column - 1\r\n      }\r\n    })\r\n  }\r\n\r\n  if (!__BROWSER__ && sourceMap) {\r\n    // lazy require source-map implementation, only in non-browser builds\r\n    context.map = new SourceMapGenerator()\r\n    context.map!.setSourceContent(filename, context.source)\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nexport function generate(\r\n  ast: RootNode,\r\n  options: CodegenOptions & {\r\n    onContextCreated?: (context: CodegenContext) => void\r\n  } = {}\r\n): CodegenResult {\r\n  const context = createCodegenContext(ast, options)\r\n  if (options.onContextCreated) options.onContextCreated(context)\r\n  const {\r\n    mode,\r\n    push,\r\n    prefixIdentifiers,\r\n    indent,\r\n    deindent,\r\n    newline,\r\n    scopeId,\r\n    ssr\r\n  } = context\r\n\r\n  const hasHelpers = ast.helpers.length > 0\r\n  const useWithBlock = !prefixIdentifiers && mode !== 'module'\r\n  const genScopeId = !__BROWSER__ && scopeId != null && mode === 'module'\r\n  const isSetupInlined = !__BROWSER__ && !!options.inline\r\n\r\n  // preambles\r\n  // in setup() inline mode, the preamble is generated in a sub context\r\n  // and returned separately.\r\n  const preambleContext = isSetupInlined\r\n    ? createCodegenContext(ast, options)\r\n    : context\r\n  if (!__BROWSER__ && mode === 'module') {\r\n    genModulePreamble(ast, preambleContext, genScopeId, isSetupInlined)\r\n  } else {\r\n    genFunctionPreamble(ast, preambleContext)\r\n  }\r\n  // enter render function\r\n  const functionName = ssr ? `ssrRender` : `render`\r\n  const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache']\r\n  if (!__BROWSER__ && options.bindingMetadata && !options.inline) {\r\n    // binding optimization args\r\n    args.push('$props', '$setup', '$data', '$options')\r\n  }\r\n  const signature =\r\n    !__BROWSER__ && options.isTS\r\n      ? args.map(arg => `${arg}: any`).join(',')\r\n      : args.join(', ')\r\n\r\n  if (isSetupInlined) {\r\n    push(`(${signature}) => {`)\r\n  } else {\r\n    push(`function ${functionName}(${signature}) {`)\r\n  }\r\n  indent()\r\n\r\n  if (useWithBlock) {\r\n    push(`with (_ctx) {`)\r\n    indent()\r\n    // function mode const declarations should be inside with block\r\n    // also they should be renamed to avoid collision with user properties\r\n    if (hasHelpers) {\r\n      push(`const { ${ast.helpers.map(aliasHelper).join(', ')} } = _Vue`)\r\n      push(`\\n`)\r\n      newline()\r\n    }\r\n  }\r\n\r\n  // generate asset resolution statements\r\n  if (ast.components.length) {\r\n    genAssets(ast.components, 'component', context)\r\n    if (ast.directives.length || ast.temps > 0) {\r\n      newline()\r\n    }\r\n  }\r\n  if (ast.directives.length) {\r\n    genAssets(ast.directives, 'directive', context)\r\n    if (ast.temps > 0) {\r\n      newline()\r\n    }\r\n  }\r\n  if (__COMPAT__ && ast.filters && ast.filters.length) {\r\n    newline()\r\n    genAssets(ast.filters, 'filter', context)\r\n    newline()\r\n  }\r\n\r\n  if (ast.temps > 0) {\r\n    push(`let `)\r\n    for (let i = 0; i < ast.temps; i++) {\r\n      push(`${i > 0 ? `, ` : ``}_temp${i}`)\r\n    }\r\n  }\r\n  if (ast.components.length || ast.directives.length || ast.temps) {\r\n    push(`\\n`)\r\n    newline()\r\n  }\r\n\r\n  // generate the VNode tree expression\r\n  if (!ssr) {\r\n    push(`return `)\r\n  }\r\n  if (ast.codegenNode) {\r\n    genNode(ast.codegenNode, context)\r\n  } else {\r\n    push(`null`)\r\n  }\r\n\r\n  if (useWithBlock) {\r\n    deindent()\r\n    push(`}`)\r\n  }\r\n\r\n  deindent()\r\n  push(`}`)\r\n\r\n  return {\r\n    ast,\r\n    code: context.code,\r\n    preamble: isSetupInlined ? preambleContext.code : ``,\r\n    // SourceMapGenerator does have toJSON() method but it's not in the types\r\n    map: context.map ? (context.map as any).toJSON() : undefined\r\n  }\r\n}\r\n\r\nfunction genFunctionPreamble(ast: RootNode, context: CodegenContext) {\r\n  const {\r\n    ssr,\r\n    prefixIdentifiers,\r\n    push,\r\n    newline,\r\n    runtimeModuleName,\r\n    runtimeGlobalName,\r\n    ssrRuntimeModuleName\r\n  } = context\r\n  const VueBinding =\r\n    !__BROWSER__ && ssr\r\n      ? `require(${JSON.stringify(runtimeModuleName)})`\r\n      : runtimeGlobalName\r\n  // Generate const declaration for helpers\r\n  // In prefix mode, we place the const declaration at top so it's done\r\n  // only once; But if we not prefixing, we place the declaration inside the\r\n  // with block so it doesn't incur the `in` check cost for every helper access.\r\n  if (ast.helpers.length > 0) {\r\n    if (!__BROWSER__ && prefixIdentifiers) {\r\n      push(\r\n        `const { ${ast.helpers.map(aliasHelper).join(', ')} } = ${VueBinding}\\n`\r\n      )\r\n    } else {\r\n      // \"with\" mode.\r\n      // save Vue in a separate variable to avoid collision\r\n      push(`const _Vue = ${VueBinding}\\n`)\r\n      // in \"with\" mode, helpers are declared inside the with block to avoid\r\n      // has check cost, but hoists are lifted out of the function - we need\r\n      // to provide the helper here.\r\n      if (ast.hoists.length) {\r\n        const staticHelpers = [\r\n          CREATE_VNODE,\r\n          CREATE_ELEMENT_VNODE,\r\n          CREATE_COMMENT,\r\n          CREATE_TEXT,\r\n          CREATE_STATIC\r\n        ]\r\n          .filter(helper => ast.helpers.includes(helper))\r\n          .map(aliasHelper)\r\n          .join(', ')\r\n        push(`const { ${staticHelpers} } = _Vue\\n`)\r\n      }\r\n    }\r\n  }\r\n  // generate variables for ssr helpers\r\n  if (!__BROWSER__ && ast.ssrHelpers && ast.ssrHelpers.length) {\r\n    // ssr guarantees prefixIdentifier: true\r\n    push(\r\n      `const { ${ast.ssrHelpers\r\n        .map(aliasHelper)\r\n        .join(', ')} } = require(\"${ssrRuntimeModuleName}\")\\n`\r\n    )\r\n  }\r\n  genHoists(ast.hoists, context)\r\n  newline()\r\n  push(`return `)\r\n}\r\n\r\nfunction genModulePreamble(\r\n  ast: RootNode,\r\n  context: CodegenContext,\r\n  genScopeId: boolean,\r\n  inline?: boolean\r\n) {\r\n  const {\r\n    push,\r\n    newline,\r\n    optimizeImports,\r\n    runtimeModuleName,\r\n    ssrRuntimeModuleName\r\n  } = context\r\n\r\n  if (genScopeId && ast.hoists.length) {\r\n    ast.helpers.push(PUSH_SCOPE_ID, POP_SCOPE_ID)\r\n  }\r\n\r\n  // generate import statements for helpers\r\n  if (ast.helpers.length) {\r\n    if (optimizeImports) {\r\n      // when bundled with webpack with code-split, calling an import binding\r\n      // as a function leads to it being wrapped with `Object(a.b)` or `(0,a.b)`,\r\n      // incurring both payload size increase and potential perf overhead.\r\n      // therefore we assign the imports to variables (which is a constant ~50b\r\n      // cost per-component instead of scaling with template size)\r\n      push(\r\n        `import { ${ast.helpers\r\n          .map(s => helperNameMap[s])\r\n          .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`\r\n      )\r\n      push(\r\n        `\\n// Binding optimization for webpack code-split\\nconst ${ast.helpers\r\n          .map(s => `_${helperNameMap[s]} = ${helperNameMap[s]}`)\r\n          .join(', ')}\\n`\r\n      )\r\n    } else {\r\n      push(\r\n        `import { ${ast.helpers\r\n          .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\r\n          .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`\r\n      )\r\n    }\r\n  }\r\n\r\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\r\n    push(\r\n      `import { ${ast.ssrHelpers\r\n        .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\r\n        .join(', ')} } from \"${ssrRuntimeModuleName}\"\\n`\r\n    )\r\n  }\r\n\r\n  if (ast.imports.length) {\r\n    genImports(ast.imports, context)\r\n    newline()\r\n  }\r\n\r\n  genHoists(ast.hoists, context)\r\n  newline()\r\n\r\n  if (!inline) {\r\n    push(`export `)\r\n  }\r\n}\r\n\r\nfunction genAssets(\r\n  assets: string[],\r\n  type: 'component' | 'directive' | 'filter',\r\n  { helper, push, newline, isTS }: CodegenContext\r\n) {\r\n  const resolver = helper(\r\n    __COMPAT__ && type === 'filter'\r\n      ? RESOLVE_FILTER\r\n      : type === 'component'\r\n      ? RESOLVE_COMPONENT\r\n      : RESOLVE_DIRECTIVE\r\n  )\r\n  for (let i = 0; i < assets.length; i++) {\r\n    let id = assets[i]\r\n    // potential component implicit self-reference inferred from SFC filename\r\n    const maybeSelfReference = id.endsWith('__self')\r\n    if (maybeSelfReference) {\r\n      id = id.slice(0, -6)\r\n    }\r\n    push(\r\n      `const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${\r\n        maybeSelfReference ? `, true` : ``\r\n      })${isTS ? `!` : ``}`\r\n    )\r\n    if (i < assets.length - 1) {\r\n      newline()\r\n    }\r\n  }\r\n}\r\n\r\nfunction genHoists(hoists: (JSChildNode | null)[], context: CodegenContext) {\r\n  if (!hoists.length) {\r\n    return\r\n  }\r\n  context.pure = true\r\n  const { push, newline, helper, scopeId, mode } = context\r\n  const genScopeId = !__BROWSER__ && scopeId != null && mode !== 'function'\r\n  newline()\r\n\r\n  // generate inlined withScopeId helper\r\n  if (genScopeId) {\r\n    push(\r\n      `const _withScopeId = n => (${helper(\r\n        PUSH_SCOPE_ID\r\n      )}(\"${scopeId}\"),n=n(),${helper(POP_SCOPE_ID)}(),n)`\r\n    )\r\n    newline()\r\n  }\r\n\r\n  for (let i = 0; i < hoists.length; i++) {\r\n    const exp = hoists[i]\r\n    if (exp) {\r\n      const needScopeIdWrapper = genScopeId && exp.type === NodeTypes.VNODE_CALL\r\n      push(\r\n        `const _hoisted_${i + 1} = ${\r\n          needScopeIdWrapper ? `${PURE_ANNOTATION} _withScopeId(() => ` : ``\r\n        }`\r\n      )\r\n      genNode(exp, context)\r\n      if (needScopeIdWrapper) {\r\n        push(`)`)\r\n      }\r\n      newline()\r\n    }\r\n  }\r\n\r\n  context.pure = false\r\n}\r\n\r\nfunction genImports(importsOptions: ImportItem[], context: CodegenContext) {\r\n  if (!importsOptions.length) {\r\n    return\r\n  }\r\n  importsOptions.forEach(imports => {\r\n    context.push(`import `)\r\n    genNode(imports.exp, context)\r\n    context.push(` from '${imports.path}'`)\r\n    context.newline()\r\n  })\r\n}\r\n\r\nfunction isText(n: string | CodegenNode) {\r\n  return (\r\n    isString(n) ||\r\n    n.type === NodeTypes.SIMPLE_EXPRESSION ||\r\n    n.type === NodeTypes.TEXT ||\r\n    n.type === NodeTypes.INTERPOLATION ||\r\n    n.type === NodeTypes.COMPOUND_EXPRESSION\r\n  )\r\n}\r\n\r\nfunction genNodeListAsArray(\r\n  nodes: (string | CodegenNode | TemplateChildNode[])[],\r\n  context: CodegenContext\r\n) {\r\n  const multilines =\r\n    nodes.length > 3 ||\r\n    ((!__BROWSER__ || __DEV__) && nodes.some(n => isArray(n) || !isText(n)))\r\n  context.push(`[`)\r\n  multilines && context.indent()\r\n  genNodeList(nodes, context, multilines)\r\n  multilines && context.deindent()\r\n  context.push(`]`)\r\n}\r\n\r\nfunction genNodeList(\r\n  nodes: (string | symbol | CodegenNode | TemplateChildNode[])[],\r\n  context: CodegenContext,\r\n  multilines: boolean = false,\r\n  comma: boolean = true\r\n) {\r\n  const { push, newline } = context\r\n  for (let i = 0; i < nodes.length; i++) {\r\n    const node = nodes[i]\r\n    if (isString(node)) {\r\n      push(node)\r\n    } else if (isArray(node)) {\r\n      genNodeListAsArray(node, context)\r\n    } else {\r\n      genNode(node, context)\r\n    }\r\n    if (i < nodes.length - 1) {\r\n      if (multilines) {\r\n        comma && push(',')\r\n        newline()\r\n      } else {\r\n        comma && push(', ')\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction genNode(node: CodegenNode | symbol | string, context: CodegenContext) {\r\n  if (isString(node)) {\r\n    context.push(node)\r\n    return\r\n  }\r\n  if (isSymbol(node)) {\r\n    context.push(context.helper(node))\r\n    return\r\n  }\r\n  switch (node.type) {\r\n    case NodeTypes.ELEMENT:\r\n    case NodeTypes.IF:\r\n    case NodeTypes.FOR:\r\n      __DEV__ &&\r\n        assert(\r\n          node.codegenNode != null,\r\n          `Codegen node is missing for element/if/for node. ` +\r\n            `Apply appropriate transforms first.`\r\n        )\r\n      genNode(node.codegenNode!, context)\r\n      break\r\n    case NodeTypes.TEXT:\r\n      genText(node, context)\r\n      break\r\n    case NodeTypes.SIMPLE_EXPRESSION:\r\n      genExpression(node, context)\r\n      break\r\n    case NodeTypes.INTERPOLATION:\r\n      genInterpolation(node, context)\r\n      break\r\n    case NodeTypes.TEXT_CALL:\r\n      genNode(node.codegenNode, context)\r\n      break\r\n    case NodeTypes.COMPOUND_EXPRESSION:\r\n      genCompoundExpression(node, context)\r\n      break\r\n    case NodeTypes.COMMENT:\r\n      genComment(node, context)\r\n      break\r\n    case NodeTypes.VNODE_CALL:\r\n      genVNodeCall(node, context)\r\n      break\r\n\r\n    case NodeTypes.JS_CALL_EXPRESSION:\r\n      genCallExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_OBJECT_EXPRESSION:\r\n      genObjectExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_ARRAY_EXPRESSION:\r\n      genArrayExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_FUNCTION_EXPRESSION:\r\n      genFunctionExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_CONDITIONAL_EXPRESSION:\r\n      genConditionalExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_CACHE_EXPRESSION:\r\n      genCacheExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_BLOCK_STATEMENT:\r\n      genNodeList(node.body, context, true, false)\r\n      break\r\n\r\n    // SSR only types\r\n    case NodeTypes.JS_TEMPLATE_LITERAL:\r\n      !__BROWSER__ && genTemplateLiteral(node, context)\r\n      break\r\n    case NodeTypes.JS_IF_STATEMENT:\r\n      !__BROWSER__ && genIfStatement(node, context)\r\n      break\r\n    case NodeTypes.JS_ASSIGNMENT_EXPRESSION:\r\n      !__BROWSER__ && genAssignmentExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_SEQUENCE_EXPRESSION:\r\n      !__BROWSER__ && genSequenceExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_RETURN_STATEMENT:\r\n      !__BROWSER__ && genReturnStatement(node, context)\r\n      break\r\n\r\n    /* istanbul ignore next */\r\n    case NodeTypes.IF_BRANCH:\r\n      // noop\r\n      break\r\n    default:\r\n      if (__DEV__) {\r\n        assert(false, `unhandled codegen node type: ${(node as any).type}`)\r\n        // make sure we exhaust all possible types\r\n        const exhaustiveCheck: never = node\r\n        return exhaustiveCheck\r\n      }\r\n  }\r\n}\r\n\r\nfunction genText(\r\n  node: TextNode | SimpleExpressionNode,\r\n  context: CodegenContext\r\n) {\r\n  context.push(JSON.stringify(node.content), node)\r\n}\r\n\r\nfunction genExpression(node: SimpleExpressionNode, context: CodegenContext) {\r\n  const { content, isStatic } = node\r\n  context.push(isStatic ? JSON.stringify(content) : content, node)\r\n}\r\n\r\nfunction genInterpolation(node: InterpolationNode, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  if (pure) push(PURE_ANNOTATION)\r\n  push(`${helper(TO_DISPLAY_STRING)}(`)\r\n  genNode(node.content, context)\r\n  push(`)`)\r\n}\r\n\r\nfunction genCompoundExpression(\r\n  node: CompoundExpressionNode,\r\n  context: CodegenContext\r\n) {\r\n  for (let i = 0; i < node.children!.length; i++) {\r\n    const child = node.children![i]\r\n    if (isString(child)) {\r\n      context.push(child)\r\n    } else {\r\n      genNode(child, context)\r\n    }\r\n  }\r\n}\r\n\r\nfunction genExpressionAsPropertyKey(\r\n  node: ExpressionNode,\r\n  context: CodegenContext\r\n) {\r\n  const { push } = context\r\n  if (node.type === NodeTypes.COMPOUND_EXPRESSION) {\r\n    push(`[`)\r\n    genCompoundExpression(node, context)\r\n    push(`]`)\r\n  } else if (node.isStatic) {\r\n    // only quote keys if necessary\r\n    const text = isSimpleIdentifier(node.content)\r\n      ? node.content\r\n      : JSON.stringify(node.content)\r\n    push(text, node)\r\n  } else {\r\n    push(`[${node.content}]`, node)\r\n  }\r\n}\r\n\r\nfunction genComment(node: CommentNode, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  if (pure) {\r\n    push(PURE_ANNOTATION)\r\n  }\r\n  push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node)\r\n}\r\n\r\nfunction genVNodeCall(node: VNodeCall, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  const {\r\n    tag,\r\n    props,\r\n    children,\r\n    patchFlag,\r\n    dynamicProps,\r\n    directives,\r\n    isBlock,\r\n    disableTracking,\r\n    isComponent\r\n  } = node\r\n  if (directives) {\r\n    push(helper(WITH_DIRECTIVES) + `(`)\r\n  }\r\n  if (isBlock) {\r\n    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `)\r\n  }\r\n  if (pure) {\r\n    push(PURE_ANNOTATION)\r\n  }\r\n  const callHelper: symbol = isBlock\r\n    ? getVNodeBlockHelper(context.inSSR, isComponent)\r\n    : getVNodeHelper(context.inSSR, isComponent)\r\n  push(helper(callHelper) + `(`, node)\r\n  genNodeList(\r\n    genNullableArgs([tag, props, children, patchFlag, dynamicProps]),\r\n    context\r\n  )\r\n  push(`)`)\r\n  if (isBlock) {\r\n    push(`)`)\r\n  }\r\n  if (directives) {\r\n    push(`, `)\r\n    genNode(directives, context)\r\n    push(`)`)\r\n  }\r\n}\r\n\r\nfunction genNullableArgs(args: any[]): CallExpression['arguments'] {\r\n  let i = args.length\r\n  while (i--) {\r\n    if (args[i] != null) break\r\n  }\r\n  return args.slice(0, i + 1).map(arg => arg || `null`)\r\n}\r\n\r\n// JavaScript\r\nfunction genCallExpression(node: CallExpression, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  const callee = isString(node.callee) ? node.callee : helper(node.callee)\r\n  if (pure) {\r\n    push(PURE_ANNOTATION)\r\n  }\r\n  push(callee + `(`, node)\r\n  genNodeList(node.arguments, context)\r\n  push(`)`)\r\n}\r\n\r\nfunction genObjectExpression(node: ObjectExpression, context: CodegenContext) {\r\n  const { push, indent, deindent, newline } = context\r\n  const { properties } = node\r\n  if (!properties.length) {\r\n    push(`{}`, node)\r\n    return\r\n  }\r\n  const multilines =\r\n    properties.length > 1 ||\r\n    ((!__BROWSER__ || __DEV__) &&\r\n      properties.some(p => p.value.type !== NodeTypes.SIMPLE_EXPRESSION))\r\n  push(multilines ? `{` : `{ `)\r\n  multilines && indent()\r\n  for (let i = 0; i < properties.length; i++) {\r\n    const { key, value } = properties[i]\r\n    // key\r\n    genExpressionAsPropertyKey(key, context)\r\n    push(`: `)\r\n    // value\r\n    genNode(value, context)\r\n    if (i < properties.length - 1) {\r\n      // will only reach this if it's multilines\r\n      push(`,`)\r\n      newline()\r\n    }\r\n  }\r\n  multilines && deindent()\r\n  push(multilines ? `}` : ` }`)\r\n}\r\n\r\nfunction genArrayExpression(node: ArrayExpression, context: CodegenContext) {\r\n  genNodeListAsArray(node.elements as CodegenNode[], context)\r\n}\r\n\r\nfunction genFunctionExpression(\r\n  node: FunctionExpression,\r\n  context: CodegenContext\r\n) {\r\n  const { push, indent, deindent } = context\r\n  const { params, returns, body, newline, isSlot } = node\r\n  if (isSlot) {\r\n    // wrap slot functions with owner context\r\n    push(`_${helperNameMap[WITH_CTX]}(`)\r\n  }\r\n  push(`(`, node)\r\n  if (isArray(params)) {\r\n    genNodeList(params, context)\r\n  } else if (params) {\r\n    genNode(params, context)\r\n  }\r\n  push(`) => `)\r\n  if (newline || body) {\r\n    push(`{`)\r\n    indent()\r\n  }\r\n  if (returns) {\r\n    if (newline) {\r\n      push(`return `)\r\n    }\r\n    if (isArray(returns)) {\r\n      genNodeListAsArray(returns, context)\r\n    } else {\r\n      genNode(returns, context)\r\n    }\r\n  } else if (body) {\r\n    genNode(body, context)\r\n  }\r\n  if (newline || body) {\r\n    deindent()\r\n    push(`}`)\r\n  }\r\n  if (isSlot) {\r\n    if (__COMPAT__ && node.isNonScopedSlot) {\r\n      push(`, undefined, true`)\r\n    }\r\n    push(`)`)\r\n  }\r\n}\r\n\r\nfunction genConditionalExpression(\r\n  node: ConditionalExpression,\r\n  context: CodegenContext\r\n) {\r\n  const { test, consequent, alternate, newline: needNewline } = node\r\n  const { push, indent, deindent, newline } = context\r\n  if (test.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    const needsParens = !isSimpleIdentifier(test.content)\r\n    needsParens && push(`(`)\r\n    genExpression(test, context)\r\n    needsParens && push(`)`)\r\n  } else {\r\n    push(`(`)\r\n    genNode(test, context)\r\n    push(`)`)\r\n  }\r\n  needNewline && indent()\r\n  context.indentLevel++\r\n  needNewline || push(` `)\r\n  push(`? `)\r\n  genNode(consequent, context)\r\n  context.indentLevel--\r\n  needNewline && newline()\r\n  needNewline || push(` `)\r\n  push(`: `)\r\n  const isNested = alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION\r\n  if (!isNested) {\r\n    context.indentLevel++\r\n  }\r\n  genNode(alternate, context)\r\n  if (!isNested) {\r\n    context.indentLevel--\r\n  }\r\n  needNewline && deindent(true /* without newline */)\r\n}\r\n\r\nfunction genCacheExpression(node: CacheExpression, context: CodegenContext) {\r\n  const { push, helper, indent, deindent, newline } = context\r\n  push(`_cache[${node.index}] || (`)\r\n  if (node.isVNode) {\r\n    indent()\r\n    push(`${helper(SET_BLOCK_TRACKING)}(-1),`)\r\n    newline()\r\n  }\r\n  push(`_cache[${node.index}] = `)\r\n  genNode(node.value, context)\r\n  if (node.isVNode) {\r\n    push(`,`)\r\n    newline()\r\n    push(`${helper(SET_BLOCK_TRACKING)}(1),`)\r\n    newline()\r\n    push(`_cache[${node.index}]`)\r\n    deindent()\r\n  }\r\n  push(`)`)\r\n}\r\n\r\nfunction genTemplateLiteral(node: TemplateLiteral, context: CodegenContext) {\r\n  const { push, indent, deindent } = context\r\n  push('`')\r\n  const l = node.elements.length\r\n  const multilines = l > 3\r\n  for (let i = 0; i < l; i++) {\r\n    const e = node.elements[i]\r\n    if (isString(e)) {\r\n      push(e.replace(/(`|\\$|\\\\)/g, '\\\\$1'))\r\n    } else {\r\n      push('${')\r\n      if (multilines) indent()\r\n      genNode(e, context)\r\n      if (multilines) deindent()\r\n      push('}')\r\n    }\r\n  }\r\n  push('`')\r\n}\r\n\r\nfunction genIfStatement(node: IfStatement, context: CodegenContext) {\r\n  const { push, indent, deindent } = context\r\n  const { test, consequent, alternate } = node\r\n  push(`if (`)\r\n  genNode(test, context)\r\n  push(`) {`)\r\n  indent()\r\n  genNode(consequent, context)\r\n  deindent()\r\n  push(`}`)\r\n  if (alternate) {\r\n    push(` else `)\r\n    if (alternate.type === NodeTypes.JS_IF_STATEMENT) {\r\n      genIfStatement(alternate, context)\r\n    } else {\r\n      push(`{`)\r\n      indent()\r\n      genNode(alternate, context)\r\n      deindent()\r\n      push(`}`)\r\n    }\r\n  }\r\n}\r\n\r\nfunction genAssignmentExpression(\r\n  node: AssignmentExpression,\r\n  context: CodegenContext\r\n) {\r\n  genNode(node.left, context)\r\n  context.push(` = `)\r\n  genNode(node.right, context)\r\n}\r\n\r\nfunction genSequenceExpression(\r\n  node: SequenceExpression,\r\n  context: CodegenContext\r\n) {\r\n  context.push(`(`)\r\n  genNodeList(node.expressions, context)\r\n  context.push(`)`)\r\n}\r\n\r\nfunction genReturnStatement(\r\n  { returns }: ReturnStatement,\r\n  context: CodegenContext\r\n) {\r\n  context.push(`return `)\r\n  if (isArray(returns)) {\r\n    genNodeListAsArray(returns, context)\r\n  } else {\r\n    genNode(returns, context)\r\n  }\r\n}\r\n","import {\r\n  createStructuralDirectiveTransform,\r\n  TransformContext,\r\n  traverseNode\r\n} from '../transform'\r\nimport {\r\n  NodeTypes,\r\n  ElementTypes,\r\n  ElementNode,\r\n  DirectiveNode,\r\n  IfBranchNode,\r\n  SimpleExpressionNode,\r\n  createCallExpression,\r\n  createConditionalExpression,\r\n  createSimpleExpression,\r\n  createObjectProperty,\r\n  createObjectExpression,\r\n  IfConditionalExpression,\r\n  BlockCodegenNode,\r\n  IfNode,\r\n  createVNodeCall,\r\n  AttributeNode,\r\n  locStub,\r\n  CacheExpression,\r\n  ConstantTypes,\r\n  MemoExpression\r\n} from '../ast'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport { processExpression } from './transformExpression'\r\nimport { validateBrowserExpression } from '../validateExpression'\r\nimport { FRAGMENT, CREATE_COMMENT } from '../runtimeHelpers'\r\nimport {\r\n  injectProp,\r\n  findDir,\r\n  findProp,\r\n  isBuiltInType,\r\n  makeBlock\r\n} from '../utils'\r\nimport { PatchFlags, PatchFlagNames } from '@vue/shared'\r\nimport { getMemoedVNodeCall } from '..'\r\n\r\nexport const transformIf = createStructuralDirectiveTransform(\r\n  /^(if|else|else-if)$/,\r\n  (node, dir, context) => {\r\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\r\n      // #1587: We need to dynamically increment the key based on the current\r\n      // node's sibling nodes, since chained v-if/else branches are\r\n      // rendered at the same depth\r\n      const siblings = context.parent!.children\r\n      let i = siblings.indexOf(ifNode)\r\n      let key = 0\r\n      while (i-- >= 0) {\r\n        const sibling = siblings[i]\r\n        if (sibling && sibling.type === NodeTypes.IF) {\r\n          key += sibling.branches.length\r\n        }\r\n      }\r\n\r\n      // Exit callback. Complete the codegenNode when all children have been\r\n      // transformed.\r\n      return () => {\r\n        if (isRoot) {\r\n          ifNode.codegenNode = createCodegenNodeForBranch(\r\n            branch,\r\n            key,\r\n            context\r\n          ) as IfConditionalExpression\r\n        } else {\r\n          // attach this branch's codegen node to the v-if root.\r\n          const parentCondition = getParentCondition(ifNode.codegenNode!)\r\n          parentCondition.alternate = createCodegenNodeForBranch(\r\n            branch,\r\n            key + ifNode.branches.length - 1,\r\n            context\r\n          )\r\n        }\r\n      }\r\n    })\r\n  }\r\n)\r\n\r\n// target-agnostic transform used for both Client and SSR\r\nexport function processIf(\r\n  node: ElementNode,\r\n  dir: DirectiveNode,\r\n  context: TransformContext,\r\n  processCodegen?: (\r\n    node: IfNode,\r\n    branch: IfBranchNode,\r\n    isRoot: boolean\r\n  ) => (() => void) | undefined\r\n) {\r\n  if (\r\n    dir.name !== 'else' &&\r\n    (!dir.exp || !(dir.exp as SimpleExpressionNode).content.trim())\r\n  ) {\r\n    const loc = dir.exp ? dir.exp.loc : node.loc\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_IF_NO_EXPRESSION, dir.loc)\r\n    )\r\n    dir.exp = createSimpleExpression(`true`, false, loc)\r\n  }\r\n\r\n  if (!__BROWSER__ && context.prefixIdentifiers && dir.exp) {\r\n    // dir.exp can only be simple expression because vIf transform is applied\r\n    // before expression transform.\r\n    dir.exp = processExpression(dir.exp as SimpleExpressionNode, context)\r\n  }\r\n\r\n  if (__DEV__ && __BROWSER__ && dir.exp) {\r\n    validateBrowserExpression(dir.exp as SimpleExpressionNode, context)\r\n  }\r\n\r\n  if (dir.name === 'if') {\r\n    const branch = createIfBranch(node, dir)\r\n    const ifNode: IfNode = {\r\n      type: NodeTypes.IF,\r\n      loc: node.loc,\r\n      branches: [branch]\r\n    }\r\n    context.replaceNode(ifNode)\r\n    if (processCodegen) {\r\n      return processCodegen(ifNode, branch, true)\r\n    }\r\n  } else {\r\n    // locate the adjacent v-if\r\n    const siblings = context.parent!.children\r\n    const comments = []\r\n    let i = siblings.indexOf(node)\r\n    while (i-- >= -1) {\r\n      const sibling = siblings[i]\r\n      if (__DEV__ && sibling && sibling.type === NodeTypes.COMMENT) {\r\n        context.removeNode(sibling)\r\n        comments.unshift(sibling)\r\n        continue\r\n      }\r\n\r\n      if (\r\n        sibling &&\r\n        sibling.type === NodeTypes.TEXT &&\r\n        !sibling.content.trim().length\r\n      ) {\r\n        context.removeNode(sibling)\r\n        continue\r\n      }\r\n\r\n      if (sibling && sibling.type === NodeTypes.IF) {\r\n        // Check if v-else was followed by v-else-if\r\n        if (\r\n          dir.name === 'else-if' &&\r\n          sibling.branches[sibling.branches.length - 1].condition === undefined\r\n        ) {\r\n          context.onError(\r\n            createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, node.loc)\r\n          )\r\n        }\r\n\r\n        // move the node to the if node's branches\r\n        context.removeNode()\r\n        const branch = createIfBranch(node, dir)\r\n        if (\r\n          __DEV__ &&\r\n          comments.length &&\r\n          // #3619 ignore comments if the v-if is direct child of <transition>\r\n          !(\r\n            context.parent &&\r\n            context.parent.type === NodeTypes.ELEMENT &&\r\n            isBuiltInType(context.parent.tag, 'transition')\r\n          )\r\n        ) {\r\n          branch.children = [...comments, ...branch.children]\r\n        }\r\n\r\n        // check if user is forcing same key on different branches\r\n        if (__DEV__ || !__BROWSER__) {\r\n          const key = branch.userKey\r\n          if (key) {\r\n            sibling.branches.forEach(({ userKey }) => {\r\n              if (isSameKey(userKey, key)) {\r\n                context.onError(\r\n                  createCompilerError(\r\n                    ErrorCodes.X_V_IF_SAME_KEY,\r\n                    branch.userKey!.loc\r\n                  )\r\n                )\r\n              }\r\n            })\r\n          }\r\n        }\r\n\r\n        sibling.branches.push(branch)\r\n        const onExit = processCodegen && processCodegen(sibling, branch, false)\r\n        // since the branch was removed, it will not be traversed.\r\n        // make sure to traverse here.\r\n        traverseNode(branch, context)\r\n        // call on exit\r\n        if (onExit) onExit()\r\n        // make sure to reset currentNode after traversal to indicate this\r\n        // node has been removed.\r\n        context.currentNode = null\r\n      } else {\r\n        context.onError(\r\n          createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, node.loc)\r\n        )\r\n      }\r\n      break\r\n    }\r\n  }\r\n}\r\n\r\nfunction createIfBranch(node: ElementNode, dir: DirectiveNode): IfBranchNode {\r\n  const isTemplateIf = node.tagType === ElementTypes.TEMPLATE\r\n  return {\r\n    type: NodeTypes.IF_BRANCH,\r\n    loc: node.loc,\r\n    condition: dir.name === 'else' ? undefined : dir.exp,\r\n    children: isTemplateIf && !findDir(node, 'for') ? node.children : [node],\r\n    userKey: findProp(node, `key`),\r\n    isTemplateIf\r\n  }\r\n}\r\n\r\nfunction createCodegenNodeForBranch(\r\n  branch: IfBranchNode,\r\n  keyIndex: number,\r\n  context: TransformContext\r\n): IfConditionalExpression | BlockCodegenNode | MemoExpression {\r\n  if (branch.condition) {\r\n    return createConditionalExpression(\r\n      branch.condition,\r\n      createChildrenCodegenNode(branch, keyIndex, context),\r\n      // make sure to pass in asBlock: true so that the comment node call\r\n      // closes the current block.\r\n      createCallExpression(context.helper(CREATE_COMMENT), [\r\n        __DEV__ ? '\"v-if\"' : '\"\"',\r\n        'true'\r\n      ])\r\n    ) as IfConditionalExpression\r\n  } else {\r\n    return createChildrenCodegenNode(branch, keyIndex, context)\r\n  }\r\n}\r\n\r\nfunction createChildrenCodegenNode(\r\n  branch: IfBranchNode,\r\n  keyIndex: number,\r\n  context: TransformContext\r\n): BlockCodegenNode | MemoExpression {\r\n  const { helper } = context\r\n  const keyProperty = createObjectProperty(\r\n    `key`,\r\n    createSimpleExpression(\r\n      `${keyIndex}`,\r\n      false,\r\n      locStub,\r\n      ConstantTypes.CAN_HOIST\r\n    )\r\n  )\r\n  const { children } = branch\r\n  const firstChild = children[0]\r\n  const needFragmentWrapper =\r\n    children.length !== 1 || firstChild.type !== NodeTypes.ELEMENT\r\n  if (needFragmentWrapper) {\r\n    if (children.length === 1 && firstChild.type === NodeTypes.FOR) {\r\n      // optimize away nested fragments when child is a ForNode\r\n      const vnodeCall = firstChild.codegenNode!\r\n      injectProp(vnodeCall, keyProperty, context)\r\n      return vnodeCall\r\n    } else {\r\n      let patchFlag = PatchFlags.STABLE_FRAGMENT\r\n      let patchFlagText = PatchFlagNames[PatchFlags.STABLE_FRAGMENT]\r\n      // check if the fragment actually contains a single valid child with\r\n      // the rest being comments\r\n      if (\r\n        __DEV__ &&\r\n        !branch.isTemplateIf &&\r\n        children.filter(c => c.type !== NodeTypes.COMMENT).length === 1\r\n      ) {\r\n        patchFlag |= PatchFlags.DEV_ROOT_FRAGMENT\r\n        patchFlagText += `, ${PatchFlagNames[PatchFlags.DEV_ROOT_FRAGMENT]}`\r\n      }\r\n\r\n      return createVNodeCall(\r\n        context,\r\n        helper(FRAGMENT),\r\n        createObjectExpression([keyProperty]),\r\n        children,\r\n        patchFlag + (__DEV__ ? ` /* ${patchFlagText} */` : ``),\r\n        undefined,\r\n        undefined,\r\n        true,\r\n        false,\r\n        false /* isComponent */,\r\n        branch.loc\r\n      )\r\n    }\r\n  } else {\r\n    const ret = (firstChild as ElementNode).codegenNode as\r\n      | BlockCodegenNode\r\n      | MemoExpression\r\n    const vnodeCall = getMemoedVNodeCall(ret)\r\n    // Change createVNode to createBlock.\r\n    if (vnodeCall.type === NodeTypes.VNODE_CALL) {\r\n      makeBlock(vnodeCall, context)\r\n    }\r\n    // inject branch key\r\n    injectProp(vnodeCall, keyProperty, context)\r\n    return ret\r\n  }\r\n}\r\n\r\nfunction isSameKey(\r\n  a: AttributeNode | DirectiveNode | undefined,\r\n  b: AttributeNode | DirectiveNode\r\n): boolean {\r\n  if (!a || a.type !== b.type) {\r\n    return false\r\n  }\r\n  if (a.type === NodeTypes.ATTRIBUTE) {\r\n    if (a.value!.content !== (b as AttributeNode).value!.content) {\r\n      return false\r\n    }\r\n  } else {\r\n    // directive\r\n    const exp = a.exp!\r\n    const branchExp = (b as DirectiveNode).exp!\r\n    if (exp.type !== branchExp.type) {\r\n      return false\r\n    }\r\n    if (\r\n      exp.type !== NodeTypes.SIMPLE_EXPRESSION ||\r\n      exp.isStatic !== (branchExp as SimpleExpressionNode).isStatic ||\r\n      exp.content !== (branchExp as SimpleExpressionNode).content\r\n    ) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction getParentCondition(\r\n  node: IfConditionalExpression | CacheExpression\r\n): IfConditionalExpression {\r\n  while (true) {\r\n    if (node.type === NodeTypes.JS_CONDITIONAL_EXPRESSION) {\r\n      if (node.alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION) {\r\n        node = node.alternate\r\n      } else {\r\n        return node\r\n      }\r\n    } else if (node.type === NodeTypes.JS_CACHE_EXPRESSION) {\r\n      node = node.value as IfConditionalExpression\r\n    }\r\n  }\r\n}\r\n","import {\r\n  createStructuralDirectiveTransform,\r\n  TransformContext\r\n} from '../transform'\r\nimport {\r\n  NodeTypes,\r\n  ExpressionNode,\r\n  createSimpleExpression,\r\n  SourceLocation,\r\n  SimpleExpressionNode,\r\n  createCallExpression,\r\n  createFunctionExpression,\r\n  createObjectExpression,\r\n  createObjectProperty,\r\n  ForCodegenNode,\r\n  RenderSlotCall,\r\n  SlotOutletNode,\r\n  ElementNode,\r\n  DirectiveNode,\r\n  ForNode,\r\n  PlainElementNode,\r\n  createVNodeCall,\r\n  VNodeCall,\r\n  ForRenderListExpression,\r\n  BlockCodegenNode,\r\n  ForIteratorExpression,\r\n  ConstantTypes,\r\n  createBlockStatement,\r\n  createCompoundExpression\r\n} from '../ast'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport {\r\n  getInnerRange,\r\n  findProp,\r\n  isTemplateNode,\r\n  isSlotOutlet,\r\n  injectProp,\r\n  getVNodeBlockHelper,\r\n  getVNodeHelper,\r\n  findDir\r\n} from '../utils'\r\nimport {\r\n  RENDER_LIST,\r\n  OPEN_BLOCK,\r\n  FRAGMENT,\r\n  IS_MEMO_SAME\r\n} from '../runtimeHelpers'\r\nimport { processExpression } from './transformExpression'\r\nimport { validateBrowserExpression } from '../validateExpression'\r\nimport { PatchFlags, PatchFlagNames } from '@vue/shared'\r\n\r\nexport const transformFor = createStructuralDirectiveTransform(\r\n  'for',\r\n  (node, dir, context) => {\r\n    const { helper, removeHelper } = context\r\n    return processFor(node, dir, context, forNode => {\r\n      // create the loop render function expression now, and add the\r\n      // iterator on exit after all children have been traversed\r\n      const renderExp = createCallExpression(helper(RENDER_LIST), [\r\n        forNode.source\r\n      ]) as ForRenderListExpression\r\n      const isTemplate = isTemplateNode(node)\r\n      const memo = findDir(node, 'memo')\r\n      const keyProp = findProp(node, `key`)\r\n      const keyExp =\r\n        keyProp &&\r\n        (keyProp.type === NodeTypes.ATTRIBUTE\r\n          ? createSimpleExpression(keyProp.value!.content, true)\r\n          : keyProp.exp!)\r\n      const keyProperty = keyProp ? createObjectProperty(`key`, keyExp!) : null\r\n\r\n      if (!__BROWSER__ && isTemplate) {\r\n        // #2085 / #5288 process :key and v-memo expressions need to be\r\n        // processed on `<template v-for>`. In this case the node is discarded\r\n        // and never traversed so its binding expressions won't be processed\r\n        // by the normal transforms.\r\n        if (memo) {\r\n          memo.exp = processExpression(\r\n            memo.exp! as SimpleExpressionNode,\r\n            context\r\n          )\r\n        }\r\n        if (keyProperty && keyProp!.type !== NodeTypes.ATTRIBUTE) {\r\n          keyProperty.value = processExpression(\r\n            keyProperty.value as SimpleExpressionNode,\r\n            context\r\n          )\r\n        }\r\n      }\r\n\r\n      const isStableFragment =\r\n        forNode.source.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n        forNode.source.constType > ConstantTypes.NOT_CONSTANT\r\n      const fragmentFlag = isStableFragment\r\n        ? PatchFlags.STABLE_FRAGMENT\r\n        : keyProp\r\n        ? PatchFlags.KEYED_FRAGMENT\r\n        : PatchFlags.UNKEYED_FRAGMENT\r\n\r\n      forNode.codegenNode = createVNodeCall(\r\n        context,\r\n        helper(FRAGMENT),\r\n        undefined,\r\n        renderExp,\r\n        fragmentFlag +\r\n          (__DEV__ ? ` /* ${PatchFlagNames[fragmentFlag]} */` : ``),\r\n        undefined,\r\n        undefined,\r\n        true /* isBlock */,\r\n        !isStableFragment /* disableTracking */,\r\n        false /* isComponent */,\r\n        node.loc\r\n      ) as ForCodegenNode\r\n\r\n      return () => {\r\n        // finish the codegen now that all children have been traversed\r\n        let childBlock: BlockCodegenNode\r\n        const { children } = forNode\r\n\r\n        // check <template v-for> key placement\r\n        if ((__DEV__ || !__BROWSER__) && isTemplate) {\r\n          node.children.some(c => {\r\n            if (c.type === NodeTypes.ELEMENT) {\r\n              const key = findProp(c, 'key')\r\n              if (key) {\r\n                context.onError(\r\n                  createCompilerError(\r\n                    ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT,\r\n                    key.loc\r\n                  )\r\n                )\r\n                return true\r\n              }\r\n            }\r\n          })\r\n        }\r\n\r\n        const needFragmentWrapper =\r\n          children.length !== 1 || children[0].type !== NodeTypes.ELEMENT\r\n        const slotOutlet = isSlotOutlet(node)\r\n          ? node\r\n          : isTemplate &&\r\n            node.children.length === 1 &&\r\n            isSlotOutlet(node.children[0])\r\n          ? (node.children[0] as SlotOutletNode) // api-extractor somehow fails to infer this\r\n          : null\r\n\r\n        if (slotOutlet) {\r\n          // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\r\n          childBlock = slotOutlet.codegenNode as RenderSlotCall\r\n          if (isTemplate && keyProperty) {\r\n            // <template v-for=\"...\" :key=\"...\"><slot/></template>\r\n            // we need to inject the key to the renderSlot() call.\r\n            // the props for renderSlot is passed as the 3rd argument.\r\n            injectProp(childBlock, keyProperty, context)\r\n          }\r\n        } else if (needFragmentWrapper) {\r\n          // <template v-for=\"...\"> with text or multi-elements\r\n          // should generate a fragment block for each loop\r\n          childBlock = createVNodeCall(\r\n            context,\r\n            helper(FRAGMENT),\r\n            keyProperty ? createObjectExpression([keyProperty]) : undefined,\r\n            node.children,\r\n            PatchFlags.STABLE_FRAGMENT +\r\n              (__DEV__\r\n                ? ` /* ${PatchFlagNames[PatchFlags.STABLE_FRAGMENT]} */`\r\n                : ``),\r\n            undefined,\r\n            undefined,\r\n            true,\r\n            undefined,\r\n            false /* isComponent */\r\n          )\r\n        } else {\r\n          // Normal element v-for. Directly use the child's codegenNode\r\n          // but mark it as a block.\r\n          childBlock = (children[0] as PlainElementNode)\r\n            .codegenNode as VNodeCall\r\n          if (isTemplate && keyProperty) {\r\n            injectProp(childBlock, keyProperty, context)\r\n          }\r\n          if (childBlock.isBlock !== !isStableFragment) {\r\n            if (childBlock.isBlock) {\r\n              // switch from block to vnode\r\n              removeHelper(OPEN_BLOCK)\r\n              removeHelper(\r\n                getVNodeBlockHelper(context.inSSR, childBlock.isComponent)\r\n              )\r\n            } else {\r\n              // switch from vnode to block\r\n              removeHelper(\r\n                getVNodeHelper(context.inSSR, childBlock.isComponent)\r\n              )\r\n            }\r\n          }\r\n          childBlock.isBlock = !isStableFragment\r\n          if (childBlock.isBlock) {\r\n            helper(OPEN_BLOCK)\r\n            helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent))\r\n          } else {\r\n            helper(getVNodeHelper(context.inSSR, childBlock.isComponent))\r\n          }\r\n        }\r\n\r\n        if (memo) {\r\n          const loop = createFunctionExpression(\r\n            createForLoopParams(forNode.parseResult, [\r\n              createSimpleExpression(`_cached`)\r\n            ])\r\n          )\r\n          loop.body = createBlockStatement([\r\n            createCompoundExpression([`const _memo = (`, memo.exp!, `)`]),\r\n            createCompoundExpression([\r\n              `if (_cached`,\r\n              ...(keyExp ? [` && _cached.key === `, keyExp] : []),\r\n              ` && ${context.helperString(\r\n                IS_MEMO_SAME\r\n              )}(_cached, _memo)) return _cached`\r\n            ]),\r\n            createCompoundExpression([`const _item = `, childBlock as any]),\r\n            createSimpleExpression(`_item.memo = _memo`),\r\n            createSimpleExpression(`return _item`)\r\n          ])\r\n          renderExp.arguments.push(\r\n            loop as ForIteratorExpression,\r\n            createSimpleExpression(`_cache`),\r\n            createSimpleExpression(String(context.cached++))\r\n          )\r\n        } else {\r\n          renderExp.arguments.push(\r\n            createFunctionExpression(\r\n              createForLoopParams(forNode.parseResult),\r\n              childBlock,\r\n              true /* force newline */\r\n            ) as ForIteratorExpression\r\n          )\r\n        }\r\n      }\r\n    })\r\n  }\r\n)\r\n\r\n// target-agnostic transform used for both Client and SSR\r\nexport function processFor(\r\n  node: ElementNode,\r\n  dir: DirectiveNode,\r\n  context: TransformContext,\r\n  processCodegen?: (forNode: ForNode) => (() => void) | undefined\r\n) {\r\n  if (!dir.exp) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_FOR_NO_EXPRESSION, dir.loc)\r\n    )\r\n    return\r\n  }\r\n\r\n  const parseResult = parseForExpression(\r\n    // can only be simple expression because vFor transform is applied\r\n    // before expression transform.\r\n    dir.exp as SimpleExpressionNode,\r\n    context\r\n  )\r\n\r\n  if (!parseResult) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION, dir.loc)\r\n    )\r\n    return\r\n  }\r\n\r\n  const { addIdentifiers, removeIdentifiers, scopes } = context\r\n  const { source, value, key, index } = parseResult\r\n\r\n  const forNode: ForNode = {\r\n    type: NodeTypes.FOR,\r\n    loc: dir.loc,\r\n    source,\r\n    valueAlias: value,\r\n    keyAlias: key,\r\n    objectIndexAlias: index,\r\n    parseResult,\r\n    children: isTemplateNode(node) ? node.children : [node]\r\n  }\r\n\r\n  context.replaceNode(forNode)\r\n\r\n  // bookkeeping\r\n  scopes.vFor++\r\n  if (!__BROWSER__ && context.prefixIdentifiers) {\r\n    // scope management\r\n    // inject identifiers to context\r\n    value && addIdentifiers(value)\r\n    key && addIdentifiers(key)\r\n    index && addIdentifiers(index)\r\n  }\r\n\r\n  const onExit = processCodegen && processCodegen(forNode)\r\n\r\n  return () => {\r\n    scopes.vFor--\r\n    if (!__BROWSER__ && context.prefixIdentifiers) {\r\n      value && removeIdentifiers(value)\r\n      key && removeIdentifiers(key)\r\n      index && removeIdentifiers(index)\r\n    }\r\n    if (onExit) onExit()\r\n  }\r\n}\r\n\r\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/\r\n// This regex doesn't cover the case if key or index aliases have destructuring,\r\n// but those do not make sense in the first place, so this works in practice.\r\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/\r\nconst stripParensRE = /^\\(|\\)$/g\r\n\r\nexport interface ForParseResult {\r\n  source: ExpressionNode\r\n  value: ExpressionNode | undefined\r\n  key: ExpressionNode | undefined\r\n  index: ExpressionNode | undefined\r\n}\r\n\r\nexport function parseForExpression(\r\n  input: SimpleExpressionNode,\r\n  context: TransformContext\r\n): ForParseResult | undefined {\r\n  const loc = input.loc\r\n  const exp = input.content\r\n  const inMatch = exp.match(forAliasRE)\r\n  if (!inMatch) return\r\n\r\n  const [, LHS, RHS] = inMatch\r\n\r\n  const result: ForParseResult = {\r\n    source: createAliasExpression(\r\n      loc,\r\n      RHS.trim(),\r\n      exp.indexOf(RHS, LHS.length)\r\n    ),\r\n    value: undefined,\r\n    key: undefined,\r\n    index: undefined\r\n  }\r\n  if (!__BROWSER__ && context.prefixIdentifiers) {\r\n    result.source = processExpression(\r\n      result.source as SimpleExpressionNode,\r\n      context\r\n    )\r\n  }\r\n  if (__DEV__ && __BROWSER__) {\r\n    validateBrowserExpression(result.source as SimpleExpressionNode, context)\r\n  }\r\n\r\n  let valueContent = LHS.trim().replace(stripParensRE, '').trim()\r\n  const trimmedOffset = LHS.indexOf(valueContent)\r\n\r\n  const iteratorMatch = valueContent.match(forIteratorRE)\r\n  if (iteratorMatch) {\r\n    valueContent = valueContent.replace(forIteratorRE, '').trim()\r\n\r\n    const keyContent = iteratorMatch[1].trim()\r\n    let keyOffset: number | undefined\r\n    if (keyContent) {\r\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length)\r\n      result.key = createAliasExpression(loc, keyContent, keyOffset)\r\n      if (!__BROWSER__ && context.prefixIdentifiers) {\r\n        result.key = processExpression(result.key, context, true)\r\n      }\r\n      if (__DEV__ && __BROWSER__) {\r\n        validateBrowserExpression(\r\n          result.key as SimpleExpressionNode,\r\n          context,\r\n          true\r\n        )\r\n      }\r\n    }\r\n\r\n    if (iteratorMatch[2]) {\r\n      const indexContent = iteratorMatch[2].trim()\r\n\r\n      if (indexContent) {\r\n        result.index = createAliasExpression(\r\n          loc,\r\n          indexContent,\r\n          exp.indexOf(\r\n            indexContent,\r\n            result.key\r\n              ? keyOffset! + keyContent.length\r\n              : trimmedOffset + valueContent.length\r\n          )\r\n        )\r\n        if (!__BROWSER__ && context.prefixIdentifiers) {\r\n          result.index = processExpression(result.index, context, true)\r\n        }\r\n        if (__DEV__ && __BROWSER__) {\r\n          validateBrowserExpression(\r\n            result.index as SimpleExpressionNode,\r\n            context,\r\n            true\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (valueContent) {\r\n    result.value = createAliasExpression(loc, valueContent, trimmedOffset)\r\n    if (!__BROWSER__ && context.prefixIdentifiers) {\r\n      result.value = processExpression(result.value, context, true)\r\n    }\r\n    if (__DEV__ && __BROWSER__) {\r\n      validateBrowserExpression(\r\n        result.value as SimpleExpressionNode,\r\n        context,\r\n        true\r\n      )\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nfunction createAliasExpression(\r\n  range: SourceLocation,\r\n  content: string,\r\n  offset: number\r\n): SimpleExpressionNode {\r\n  return createSimpleExpression(\r\n    content,\r\n    false,\r\n    getInnerRange(range, offset, content.length)\r\n  )\r\n}\r\n\r\nexport function createForLoopParams(\r\n  { value, key, index }: ForParseResult,\r\n  memoArgs: ExpressionNode[] = []\r\n): ExpressionNode[] {\r\n  return createParamsList([value, key, index, ...memoArgs])\r\n}\r\n\r\nfunction createParamsList(\r\n  args: (ExpressionNode | undefined)[]\r\n): ExpressionNode[] {\r\n  let i = args.length\r\n  while (i--) {\r\n    if (args[i]) break\r\n  }\r\n  return args\r\n    .slice(0, i + 1)\r\n    .map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false))\r\n}\r\n","import {\r\n  ElementNode,\r\n  ObjectExpression,\r\n  createObjectExpression,\r\n  NodeTypes,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  createFunctionExpression,\r\n  DirectiveNode,\r\n  ElementTypes,\r\n  ExpressionNode,\r\n  Property,\r\n  TemplateChildNode,\r\n  SourceLocation,\r\n  createConditionalExpression,\r\n  ConditionalExpression,\r\n  SimpleExpressionNode,\r\n  FunctionExpression,\r\n  CallExpression,\r\n  createCallExpression,\r\n  createArrayExpression,\r\n  SlotsExpression\r\n} from '../ast'\r\nimport { TransformContext, NodeTransform } from '../transform'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport {\r\n  findDir,\r\n  isTemplateNode,\r\n  assert,\r\n  isVSlot,\r\n  hasScopeRef,\r\n  isStaticExp\r\n} from '../utils'\r\nimport { CREATE_SLOTS, RENDER_LIST, WITH_CTX } from '../runtimeHelpers'\r\nimport { parseForExpression, createForLoopParams } from './vFor'\r\nimport { SlotFlags, slotFlagsText } from '@vue/shared'\r\n\r\nconst defaultFallback = createSimpleExpression(`undefined`, false)\r\n\r\n// A NodeTransform that:\r\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\r\n//    by transformExpression. This is only applied in non-browser builds with\r\n//    { prefixIdentifiers: true }.\r\n// 2. Track v-slot depths so that we know a slot is inside another slot.\r\n//    Note the exit callback is executed before buildSlots() on the same node,\r\n//    so only nested slots see positive numbers.\r\nexport const trackSlotScopes: NodeTransform = (node, context) => {\r\n  if (\r\n    node.type === NodeTypes.ELEMENT &&\r\n    (node.tagType === ElementTypes.COMPONENT ||\r\n      node.tagType === ElementTypes.TEMPLATE)\r\n  ) {\r\n    // We are only checking non-empty v-slot here\r\n    // since we only care about slots that introduce scope variables.\r\n    const vSlot = findDir(node, 'slot')\r\n    if (vSlot) {\r\n      const slotProps = vSlot.exp\r\n      if (!__BROWSER__ && context.prefixIdentifiers) {\r\n        slotProps && context.addIdentifiers(slotProps)\r\n      }\r\n      context.scopes.vSlot++\r\n      return () => {\r\n        if (!__BROWSER__ && context.prefixIdentifiers) {\r\n          slotProps && context.removeIdentifiers(slotProps)\r\n        }\r\n        context.scopes.vSlot--\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\r\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\r\nexport const trackVForSlotScopes: NodeTransform = (node, context) => {\r\n  let vFor\r\n  if (\r\n    isTemplateNode(node) &&\r\n    node.props.some(isVSlot) &&\r\n    (vFor = findDir(node, 'for'))\r\n  ) {\r\n    const result = (vFor.parseResult = parseForExpression(\r\n      vFor.exp as SimpleExpressionNode,\r\n      context\r\n    ))\r\n    if (result) {\r\n      const { value, key, index } = result\r\n      const { addIdentifiers, removeIdentifiers } = context\r\n      value && addIdentifiers(value)\r\n      key && addIdentifiers(key)\r\n      index && addIdentifiers(index)\r\n\r\n      return () => {\r\n        value && removeIdentifiers(value)\r\n        key && removeIdentifiers(key)\r\n        index && removeIdentifiers(index)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport type SlotFnBuilder = (\r\n  slotProps: ExpressionNode | undefined,\r\n  slotChildren: TemplateChildNode[],\r\n  loc: SourceLocation\r\n) => FunctionExpression\r\n\r\nconst buildClientSlotFn: SlotFnBuilder = (props, children, loc) =>\r\n  createFunctionExpression(\r\n    props,\r\n    children,\r\n    false /* newline */,\r\n    true /* isSlot */,\r\n    children.length ? children[0].loc : loc\r\n  )\r\n\r\n// Instead of being a DirectiveTransform, v-slot processing is called during\r\n// transformElement to build the slots object for a component.\r\nexport function buildSlots(\r\n  node: ElementNode,\r\n  context: TransformContext,\r\n  buildSlotFn: SlotFnBuilder = buildClientSlotFn\r\n): {\r\n  slots: SlotsExpression\r\n  hasDynamicSlots: boolean\r\n} {\r\n  context.helper(WITH_CTX)\r\n\r\n  const { children, loc } = node\r\n  const slotsProperties: Property[] = []\r\n  const dynamicSlots: (ConditionalExpression | CallExpression)[] = []\r\n\r\n  // If the slot is inside a v-for or another v-slot, force it to be dynamic\r\n  // since it likely uses a scope variable.\r\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0\r\n  // with `prefixIdentifiers: true`, this can be further optimized to make\r\n  // it dynamic only when the slot actually uses the scope variables.\r\n  if (!__BROWSER__ && !context.ssr && context.prefixIdentifiers) {\r\n    hasDynamicSlots = hasScopeRef(node, context.identifiers)\r\n  }\r\n\r\n  // 1. Check for slot with slotProps on component itself.\r\n  //    <Comp v-slot=\"{ prop }\"/>\r\n  const onComponentSlot = findDir(node, 'slot', true)\r\n  if (onComponentSlot) {\r\n    const { arg, exp } = onComponentSlot\r\n    if (arg && !isStaticExp(arg)) {\r\n      hasDynamicSlots = true\r\n    }\r\n    slotsProperties.push(\r\n      createObjectProperty(\r\n        arg || createSimpleExpression('default', true),\r\n        buildSlotFn(exp, children, loc)\r\n      )\r\n    )\r\n  }\r\n\r\n  // 2. Iterate through children and check for template slots\r\n  //    <template v-slot:foo=\"{ prop }\">\r\n  let hasTemplateSlots = false\r\n  let hasNamedDefaultSlot = false\r\n  const implicitDefaultChildren: TemplateChildNode[] = []\r\n  const seenSlotNames = new Set<string>()\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const slotElement = children[i]\r\n    let slotDir\r\n\r\n    if (\r\n      !isTemplateNode(slotElement) ||\r\n      !(slotDir = findDir(slotElement, 'slot', true))\r\n    ) {\r\n      // not a <template v-slot>, skip.\r\n      if (slotElement.type !== NodeTypes.COMMENT) {\r\n        implicitDefaultChildren.push(slotElement)\r\n      }\r\n      continue\r\n    }\r\n\r\n    if (onComponentSlot) {\r\n      // already has on-component slot - this is incorrect usage.\r\n      context.onError(\r\n        createCompilerError(ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE, slotDir.loc)\r\n      )\r\n      break\r\n    }\r\n\r\n    hasTemplateSlots = true\r\n    const { children: slotChildren, loc: slotLoc } = slotElement\r\n    const {\r\n      arg: slotName = createSimpleExpression(`default`, true),\r\n      exp: slotProps,\r\n      loc: dirLoc\r\n    } = slotDir\r\n\r\n    // check if name is dynamic.\r\n    let staticSlotName: string | undefined\r\n    if (isStaticExp(slotName)) {\r\n      staticSlotName = slotName ? slotName.content : `default`\r\n    } else {\r\n      hasDynamicSlots = true\r\n    }\r\n\r\n    const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc)\r\n    // check if this slot is conditional (v-if/v-for)\r\n    let vIf: DirectiveNode | undefined\r\n    let vElse: DirectiveNode | undefined\r\n    let vFor: DirectiveNode | undefined\r\n    if ((vIf = findDir(slotElement, 'if'))) {\r\n      hasDynamicSlots = true\r\n      dynamicSlots.push(\r\n        createConditionalExpression(\r\n          vIf.exp!,\r\n          buildDynamicSlot(slotName, slotFunction),\r\n          defaultFallback\r\n        )\r\n      )\r\n    } else if (\r\n      (vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))\r\n    ) {\r\n      // find adjacent v-if\r\n      let j = i\r\n      let prev\r\n      while (j--) {\r\n        prev = children[j]\r\n        if (prev.type !== NodeTypes.COMMENT) {\r\n          break\r\n        }\r\n      }\r\n      if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\r\n        // remove node\r\n        children.splice(i, 1)\r\n        i--\r\n        __TEST__ && assert(dynamicSlots.length > 0)\r\n        // attach this slot to previous conditional\r\n        let conditional = dynamicSlots[\r\n          dynamicSlots.length - 1\r\n        ] as ConditionalExpression\r\n        while (\r\n          conditional.alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION\r\n        ) {\r\n          conditional = conditional.alternate\r\n        }\r\n        conditional.alternate = vElse.exp\r\n          ? createConditionalExpression(\r\n              vElse.exp,\r\n              buildDynamicSlot(slotName, slotFunction),\r\n              defaultFallback\r\n            )\r\n          : buildDynamicSlot(slotName, slotFunction)\r\n      } else {\r\n        context.onError(\r\n          createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, vElse.loc)\r\n        )\r\n      }\r\n    } else if ((vFor = findDir(slotElement, 'for'))) {\r\n      hasDynamicSlots = true\r\n      const parseResult =\r\n        vFor.parseResult ||\r\n        parseForExpression(vFor.exp as SimpleExpressionNode, context)\r\n      if (parseResult) {\r\n        // Render the dynamic slots as an array and add it to the createSlot()\r\n        // args. The runtime knows how to handle it appropriately.\r\n        dynamicSlots.push(\r\n          createCallExpression(context.helper(RENDER_LIST), [\r\n            parseResult.source,\r\n            createFunctionExpression(\r\n              createForLoopParams(parseResult),\r\n              buildDynamicSlot(slotName, slotFunction),\r\n              true /* force newline */\r\n            )\r\n          ])\r\n        )\r\n      } else {\r\n        context.onError(\r\n          createCompilerError(ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION, vFor.loc)\r\n        )\r\n      }\r\n    } else {\r\n      // check duplicate static names\r\n      if (staticSlotName) {\r\n        if (seenSlotNames.has(staticSlotName)) {\r\n          context.onError(\r\n            createCompilerError(\r\n              ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES,\r\n              dirLoc\r\n            )\r\n          )\r\n          continue\r\n        }\r\n        seenSlotNames.add(staticSlotName)\r\n        if (staticSlotName === 'default') {\r\n          hasNamedDefaultSlot = true\r\n        }\r\n      }\r\n      slotsProperties.push(createObjectProperty(slotName, slotFunction))\r\n    }\r\n  }\r\n\r\n  if (!onComponentSlot) {\r\n    const buildDefaultSlotProperty = (\r\n      props: ExpressionNode | undefined,\r\n      children: TemplateChildNode[]\r\n    ) => {\r\n      const fn = buildSlotFn(props, children, loc)\r\n      if (__COMPAT__ && context.compatConfig) {\r\n        fn.isNonScopedSlot = true\r\n      }\r\n      return createObjectProperty(`default`, fn)\r\n    }\r\n\r\n    if (!hasTemplateSlots) {\r\n      // implicit default slot (on component)\r\n      slotsProperties.push(buildDefaultSlotProperty(undefined, children))\r\n    } else if (\r\n      implicitDefaultChildren.length &&\r\n      // #3766\r\n      // with whitespace: 'preserve', whitespaces between slots will end up in\r\n      // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\r\n      implicitDefaultChildren.some(node => isNonWhitespaceContent(node))\r\n    ) {\r\n      // implicit default slot (mixed with named slots)\r\n      if (hasNamedDefaultSlot) {\r\n        context.onError(\r\n          createCompilerError(\r\n            ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN,\r\n            implicitDefaultChildren[0].loc\r\n          )\r\n        )\r\n      } else {\r\n        slotsProperties.push(\r\n          buildDefaultSlotProperty(undefined, implicitDefaultChildren)\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const slotFlag = hasDynamicSlots\r\n    ? SlotFlags.DYNAMIC\r\n    : hasForwardedSlots(node.children)\r\n    ? SlotFlags.FORWARDED\r\n    : SlotFlags.STABLE\r\n\r\n  let slots = createObjectExpression(\r\n    slotsProperties.concat(\r\n      createObjectProperty(\r\n        `_`,\r\n        // 2 = compiled but dynamic = can skip normalization, but must run diff\r\n        // 1 = compiled and static = can skip normalization AND diff as optimized\r\n        createSimpleExpression(\r\n          slotFlag + (__DEV__ ? ` /* ${slotFlagsText[slotFlag]} */` : ``),\r\n          false\r\n        )\r\n      )\r\n    ),\r\n    loc\r\n  ) as SlotsExpression\r\n  if (dynamicSlots.length) {\r\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [\r\n      slots,\r\n      createArrayExpression(dynamicSlots)\r\n    ]) as SlotsExpression\r\n  }\r\n\r\n  return {\r\n    slots,\r\n    hasDynamicSlots\r\n  }\r\n}\r\n\r\nfunction buildDynamicSlot(\r\n  name: ExpressionNode,\r\n  fn: FunctionExpression\r\n): ObjectExpression {\r\n  return createObjectExpression([\r\n    createObjectProperty(`name`, name),\r\n    createObjectProperty(`fn`, fn)\r\n  ])\r\n}\r\n\r\nfunction hasForwardedSlots(children: TemplateChildNode[]): boolean {\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    switch (child.type) {\r\n      case NodeTypes.ELEMENT:\r\n        if (\r\n          child.tagType === ElementTypes.SLOT ||\r\n          hasForwardedSlots(child.children)\r\n        ) {\r\n          return true\r\n        }\r\n        break\r\n      case NodeTypes.IF:\r\n        if (hasForwardedSlots(child.branches)) return true\r\n        break\r\n      case NodeTypes.IF_BRANCH:\r\n      case NodeTypes.FOR:\r\n        if (hasForwardedSlots(child.children)) return true\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction isNonWhitespaceContent(node: TemplateChildNode): boolean {\r\n  if (node.type !== NodeTypes.TEXT && node.type !== NodeTypes.TEXT_CALL)\r\n    return true\r\n  return node.type === NodeTypes.TEXT\r\n    ? !!node.content.trim()\r\n    : isNonWhitespaceContent(node.content)\r\n}\r\n","import { NodeTransform, TransformContext } from '../transform'\r\nimport {\r\n  NodeTypes,\r\n  ElementTypes,\r\n  CallExpression,\r\n  ObjectExpression,\r\n  ElementNode,\r\n  DirectiveNode,\r\n  ExpressionNode,\r\n  ArrayExpression,\r\n  createCallExpression,\r\n  createArrayExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  createObjectExpression,\r\n  Property,\r\n  ComponentNode,\r\n  VNodeCall,\r\n  TemplateTextChildNode,\r\n  DirectiveArguments,\r\n  createVNodeCall,\r\n  ConstantTypes\r\n} from '../ast'\r\nimport {\r\n  PatchFlags,\r\n  PatchFlagNames,\r\n  isSymbol,\r\n  isOn,\r\n  isObject,\r\n  isReservedProp,\r\n  capitalize,\r\n  camelize,\r\n  isBuiltInDirective\r\n} from '@vue/shared'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport {\r\n  RESOLVE_DIRECTIVE,\r\n  RESOLVE_COMPONENT,\r\n  RESOLVE_DYNAMIC_COMPONENT,\r\n  MERGE_PROPS,\r\n  NORMALIZE_CLASS,\r\n  NORMALIZE_STYLE,\r\n  NORMALIZE_PROPS,\r\n  TO_HANDLERS,\r\n  TELEPORT,\r\n  KEEP_ALIVE,\r\n  SUSPENSE,\r\n  UNREF,\r\n  GUARD_REACTIVE_PROPS\r\n} from '../runtimeHelpers'\r\nimport {\r\n  getInnerRange,\r\n  toValidAssetId,\r\n  findProp,\r\n  isCoreComponent,\r\n  isStaticArgOf,\r\n  findDir,\r\n  isStaticExp\r\n} from '../utils'\r\nimport { buildSlots } from './vSlot'\r\nimport { getConstantType } from './hoistStatic'\r\nimport { BindingTypes } from '../options'\r\nimport {\r\n  checkCompatEnabled,\r\n  CompilerDeprecationTypes,\r\n  isCompatEnabled\r\n} from '../compat/compatConfig'\r\n\r\n// some directive transforms (e.g. v-model) may return a symbol for runtime\r\n// import, which should be used instead of a resolveDirective call.\r\nconst directiveImportMap = new WeakMap<DirectiveNode, symbol>()\r\n\r\n// generate a JavaScript AST for this element's codegen\r\nexport const transformElement: NodeTransform = (node, context) => {\r\n  // perform the work on exit, after all child expressions have been\r\n  // processed and merged.\r\n  return function postTransformElement() {\r\n    node = context.currentNode!\r\n\r\n    if (\r\n      !(\r\n        node.type === NodeTypes.ELEMENT &&\r\n        (node.tagType === ElementTypes.ELEMENT ||\r\n          node.tagType === ElementTypes.COMPONENT)\r\n      )\r\n    ) {\r\n      return\r\n    }\r\n\r\n    const { tag, props } = node\r\n    const isComponent = node.tagType === ElementTypes.COMPONENT\r\n\r\n    // The goal of the transform is to create a codegenNode implementing the\r\n    // VNodeCall interface.\r\n    let vnodeTag = isComponent\r\n      ? resolveComponentType(node as ComponentNode, context)\r\n      : `\"${tag}\"`\r\n\r\n    const isDynamicComponent =\r\n      isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT\r\n\r\n    let vnodeProps: VNodeCall['props']\r\n    let vnodeChildren: VNodeCall['children']\r\n    let vnodePatchFlag: VNodeCall['patchFlag']\r\n    let patchFlag: number = 0\r\n    let vnodeDynamicProps: VNodeCall['dynamicProps']\r\n    let dynamicPropNames: string[] | undefined\r\n    let vnodeDirectives: VNodeCall['directives']\r\n\r\n    let shouldUseBlock =\r\n      // dynamic component may resolve to plain elements\r\n      isDynamicComponent ||\r\n      vnodeTag === TELEPORT ||\r\n      vnodeTag === SUSPENSE ||\r\n      (!isComponent &&\r\n        // <svg> and <foreignObject> must be forced into blocks so that block\r\n        // updates inside get proper isSVG flag at runtime. (#639, #643)\r\n        // This is technically web-specific, but splitting the logic out of core\r\n        // leads to too much unnecessary complexity.\r\n        (tag === 'svg' || tag === 'foreignObject'))\r\n\r\n    // props\r\n    if (props.length > 0) {\r\n      const propsBuildResult = buildProps(\r\n        node,\r\n        context,\r\n        undefined,\r\n        isComponent,\r\n        isDynamicComponent\r\n      )\r\n      vnodeProps = propsBuildResult.props\r\n      patchFlag = propsBuildResult.patchFlag\r\n      dynamicPropNames = propsBuildResult.dynamicPropNames\r\n      const directives = propsBuildResult.directives\r\n      vnodeDirectives =\r\n        directives && directives.length\r\n          ? (createArrayExpression(\r\n              directives.map(dir => buildDirectiveArgs(dir, context))\r\n            ) as DirectiveArguments)\r\n          : undefined\r\n\r\n      if (propsBuildResult.shouldUseBlock) {\r\n        shouldUseBlock = true\r\n      }\r\n    }\r\n\r\n    // children\r\n    if (node.children.length > 0) {\r\n      if (vnodeTag === KEEP_ALIVE) {\r\n        // Although a built-in component, we compile KeepAlive with raw children\r\n        // instead of slot functions so that it can be used inside Transition\r\n        // or other Transition-wrapping HOCs.\r\n        // To ensure correct updates with block optimizations, we need to:\r\n        // 1. Force keep-alive into a block. This avoids its children being\r\n        //    collected by a parent block.\r\n        shouldUseBlock = true\r\n        // 2. Force keep-alive to always be updated, since it uses raw children.\r\n        patchFlag |= PatchFlags.DYNAMIC_SLOTS\r\n        if (__DEV__ && node.children.length > 1) {\r\n          context.onError(\r\n            createCompilerError(ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN, {\r\n              start: node.children[0].loc.start,\r\n              end: node.children[node.children.length - 1].loc.end,\r\n              source: ''\r\n            })\r\n          )\r\n        }\r\n      }\r\n\r\n      const shouldBuildAsSlots =\r\n        isComponent &&\r\n        // Teleport is not a real component and has dedicated runtime handling\r\n        vnodeTag !== TELEPORT &&\r\n        // explained above.\r\n        vnodeTag !== KEEP_ALIVE\r\n\r\n      if (shouldBuildAsSlots) {\r\n        const { slots, hasDynamicSlots } = buildSlots(node, context)\r\n        vnodeChildren = slots\r\n        if (hasDynamicSlots) {\r\n          patchFlag |= PatchFlags.DYNAMIC_SLOTS\r\n        }\r\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\r\n        const child = node.children[0]\r\n        const type = child.type\r\n        // check for dynamic text children\r\n        const hasDynamicTextChild =\r\n          type === NodeTypes.INTERPOLATION ||\r\n          type === NodeTypes.COMPOUND_EXPRESSION\r\n        if (\r\n          hasDynamicTextChild &&\r\n          getConstantType(child, context) === ConstantTypes.NOT_CONSTANT\r\n        ) {\r\n          patchFlag |= PatchFlags.TEXT\r\n        }\r\n        // pass directly if the only child is a text node\r\n        // (plain / interpolation / expression)\r\n        if (hasDynamicTextChild || type === NodeTypes.TEXT) {\r\n          vnodeChildren = child as TemplateTextChildNode\r\n        } else {\r\n          vnodeChildren = node.children\r\n        }\r\n      } else {\r\n        vnodeChildren = node.children\r\n      }\r\n    }\r\n\r\n    // patchFlag & dynamicPropNames\r\n    if (patchFlag !== 0) {\r\n      if (__DEV__) {\r\n        if (patchFlag < 0) {\r\n          // special flags (negative and mutually exclusive)\r\n          vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`\r\n        } else {\r\n          // bitwise flags\r\n          const flagNames = Object.keys(PatchFlagNames)\r\n            .map(Number)\r\n            .filter(n => n > 0 && patchFlag & n)\r\n            .map(n => PatchFlagNames[n])\r\n            .join(`, `)\r\n          vnodePatchFlag = patchFlag + ` /* ${flagNames} */`\r\n        }\r\n      } else {\r\n        vnodePatchFlag = String(patchFlag)\r\n      }\r\n      if (dynamicPropNames && dynamicPropNames.length) {\r\n        vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames)\r\n      }\r\n    }\r\n\r\n    node.codegenNode = createVNodeCall(\r\n      context,\r\n      vnodeTag,\r\n      vnodeProps,\r\n      vnodeChildren,\r\n      vnodePatchFlag,\r\n      vnodeDynamicProps,\r\n      vnodeDirectives,\r\n      !!shouldUseBlock,\r\n      false /* disableTracking */,\r\n      isComponent,\r\n      node.loc\r\n    )\r\n  }\r\n}\r\n\r\nexport function resolveComponentType(\r\n  node: ComponentNode,\r\n  context: TransformContext,\r\n  ssr = false\r\n) {\r\n  let { tag } = node\r\n\r\n  // 1. dynamic component\r\n  const isExplicitDynamic = isComponentTag(tag)\r\n  const isProp = findProp(node, 'is')\r\n  if (isProp) {\r\n    if (\r\n      isExplicitDynamic ||\r\n      (__COMPAT__ &&\r\n        isCompatEnabled(\r\n          CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n          context\r\n        ))\r\n    ) {\r\n      const exp =\r\n        isProp.type === NodeTypes.ATTRIBUTE\r\n          ? isProp.value && createSimpleExpression(isProp.value.content, true)\r\n          : isProp.exp\r\n      if (exp) {\r\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n          exp\r\n        ])\r\n      }\r\n    } else if (\r\n      isProp.type === NodeTypes.ATTRIBUTE &&\r\n      isProp.value!.content.startsWith('vue:')\r\n    ) {\r\n      // <button is=\"vue:xxx\">\r\n      // if not <component>, only is value that starts with \"vue:\" will be\r\n      // treated as component by the parse phase and reach here, unless it's\r\n      // compat mode where all is values are considered components\r\n      tag = isProp.value!.content.slice(4)\r\n    }\r\n  }\r\n\r\n  // 1.5 v-is (TODO: Deprecate)\r\n  const isDir = !isExplicitDynamic && findDir(node, 'is')\r\n  if (isDir && isDir.exp) {\r\n    return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n      isDir.exp\r\n    ])\r\n  }\r\n\r\n  // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\r\n  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag)\r\n  if (builtIn) {\r\n    // built-ins are simply fallthroughs / have special handling during ssr\r\n    // so we don't need to import their runtime equivalents\r\n    if (!ssr) context.helper(builtIn)\r\n    return builtIn\r\n  }\r\n\r\n  // 3. user component (from setup bindings)\r\n  // this is skipped in browser build since browser builds do not perform\r\n  // binding analysis.\r\n  if (!__BROWSER__) {\r\n    const fromSetup = resolveSetupReference(tag, context)\r\n    if (fromSetup) {\r\n      return fromSetup\r\n    }\r\n    const dotIndex = tag.indexOf('.')\r\n    if (dotIndex > 0) {\r\n      const ns = resolveSetupReference(tag.slice(0, dotIndex), context)\r\n      if (ns) {\r\n        return ns + tag.slice(dotIndex)\r\n      }\r\n    }\r\n  }\r\n\r\n  // 4. Self referencing component (inferred from filename)\r\n  if (\r\n    !__BROWSER__ &&\r\n    context.selfName &&\r\n    capitalize(camelize(tag)) === context.selfName\r\n  ) {\r\n    context.helper(RESOLVE_COMPONENT)\r\n    // codegen.ts has special check for __self postfix when generating\r\n    // component imports, which will pass additional `maybeSelfReference` flag\r\n    // to `resolveComponent`.\r\n    context.components.add(tag + `__self`)\r\n    return toValidAssetId(tag, `component`)\r\n  }\r\n\r\n  // 5. user component (resolve)\r\n  context.helper(RESOLVE_COMPONENT)\r\n  context.components.add(tag)\r\n  return toValidAssetId(tag, `component`)\r\n}\r\n\r\nfunction resolveSetupReference(name: string, context: TransformContext) {\r\n  const bindings = context.bindingMetadata\r\n  if (!bindings || bindings.__isScriptSetup === false) {\r\n    return\r\n  }\r\n\r\n  const camelName = camelize(name)\r\n  const PascalName = capitalize(camelName)\r\n  const checkType = (type: BindingTypes) => {\r\n    if (bindings[name] === type) {\r\n      return name\r\n    }\r\n    if (bindings[camelName] === type) {\r\n      return camelName\r\n    }\r\n    if (bindings[PascalName] === type) {\r\n      return PascalName\r\n    }\r\n  }\r\n\r\n  const fromConst =\r\n    checkType(BindingTypes.SETUP_CONST) ||\r\n    checkType(BindingTypes.SETUP_REACTIVE_CONST)\r\n  if (fromConst) {\r\n    return context.inline\r\n      ? // in inline mode, const setup bindings (e.g. imports) can be used as-is\r\n        fromConst\r\n      : `$setup[${JSON.stringify(fromConst)}]`\r\n  }\r\n\r\n  const fromMaybeRef =\r\n    checkType(BindingTypes.SETUP_LET) ||\r\n    checkType(BindingTypes.SETUP_REF) ||\r\n    checkType(BindingTypes.SETUP_MAYBE_REF)\r\n  if (fromMaybeRef) {\r\n    return context.inline\r\n      ? // setup scope bindings that may be refs need to be unrefed\r\n        `${context.helperString(UNREF)}(${fromMaybeRef})`\r\n      : `$setup[${JSON.stringify(fromMaybeRef)}]`\r\n  }\r\n}\r\n\r\nexport type PropsExpression = ObjectExpression | CallExpression | ExpressionNode\r\n\r\nexport function buildProps(\r\n  node: ElementNode,\r\n  context: TransformContext,\r\n  props: ElementNode['props'] = node.props,\r\n  isComponent: boolean,\r\n  isDynamicComponent: boolean,\r\n  ssr = false\r\n): {\r\n  props: PropsExpression | undefined\r\n  directives: DirectiveNode[]\r\n  patchFlag: number\r\n  dynamicPropNames: string[]\r\n  shouldUseBlock: boolean\r\n} {\r\n  const { tag, loc: elementLoc, children } = node\r\n  let properties: ObjectExpression['properties'] = []\r\n  const mergeArgs: PropsExpression[] = []\r\n  const runtimeDirectives: DirectiveNode[] = []\r\n  const hasChildren = children.length > 0\r\n  let shouldUseBlock = false\r\n\r\n  // patchFlag analysis\r\n  let patchFlag = 0\r\n  let hasRef = false\r\n  let hasClassBinding = false\r\n  let hasStyleBinding = false\r\n  let hasHydrationEventBinding = false\r\n  let hasDynamicKeys = false\r\n  let hasVnodeHook = false\r\n  const dynamicPropNames: string[] = []\r\n\r\n  const analyzePatchFlag = ({ key, value }: Property) => {\r\n    if (isStaticExp(key)) {\r\n      const name = key.content\r\n      const isEventHandler = isOn(name)\r\n      if (\r\n        isEventHandler &&\r\n        (!isComponent || isDynamicComponent) &&\r\n        // omit the flag for click handlers because hydration gives click\r\n        // dedicated fast path.\r\n        name.toLowerCase() !== 'onclick' &&\r\n        // omit v-model handlers\r\n        name !== 'onUpdate:modelValue' &&\r\n        // omit onVnodeXXX hooks\r\n        !isReservedProp(name)\r\n      ) {\r\n        hasHydrationEventBinding = true\r\n      }\r\n\r\n      if (isEventHandler && isReservedProp(name)) {\r\n        hasVnodeHook = true\r\n      }\r\n\r\n      if (\r\n        value.type === NodeTypes.JS_CACHE_EXPRESSION ||\r\n        ((value.type === NodeTypes.SIMPLE_EXPRESSION ||\r\n          value.type === NodeTypes.COMPOUND_EXPRESSION) &&\r\n          getConstantType(value, context) > 0)\r\n      ) {\r\n        // skip if the prop is a cached handler or has constant value\r\n        return\r\n      }\r\n\r\n      if (name === 'ref') {\r\n        hasRef = true\r\n      } else if (name === 'class') {\r\n        hasClassBinding = true\r\n      } else if (name === 'style') {\r\n        hasStyleBinding = true\r\n      } else if (name !== 'key' && !dynamicPropNames.includes(name)) {\r\n        dynamicPropNames.push(name)\r\n      }\r\n\r\n      // treat the dynamic class and style binding of the component as dynamic props\r\n      if (\r\n        isComponent &&\r\n        (name === 'class' || name === 'style') &&\r\n        !dynamicPropNames.includes(name)\r\n      ) {\r\n        dynamicPropNames.push(name)\r\n      }\r\n    } else {\r\n      hasDynamicKeys = true\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < props.length; i++) {\r\n    // static attribute\r\n    const prop = props[i]\r\n    if (prop.type === NodeTypes.ATTRIBUTE) {\r\n      const { loc, name, value } = prop\r\n      let isStatic = true\r\n      if (name === 'ref') {\r\n        hasRef = true\r\n        if (context.scopes.vFor > 0) {\r\n          properties.push(\r\n            createObjectProperty(\r\n              createSimpleExpression('ref_for', true),\r\n              createSimpleExpression('true')\r\n            )\r\n          )\r\n        }\r\n        // in inline mode there is no setupState object, so we can't use string\r\n        // keys to set the ref. Instead, we need to transform it to pass the\r\n        // actual ref instead.\r\n        if (\r\n          !__BROWSER__ &&\r\n          value &&\r\n          context.inline &&\r\n          context.bindingMetadata[value.content]\r\n        ) {\r\n          isStatic = false\r\n          properties.push(\r\n            createObjectProperty(\r\n              createSimpleExpression('ref_key', true),\r\n              createSimpleExpression(value.content, true, value.loc)\r\n            )\r\n          )\r\n        }\r\n      }\r\n      // skip is on <component>, or is=\"vue:xxx\"\r\n      if (\r\n        name === 'is' &&\r\n        (isComponentTag(tag) ||\r\n          (value && value.content.startsWith('vue:')) ||\r\n          (__COMPAT__ &&\r\n            isCompatEnabled(\r\n              CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n              context\r\n            )))\r\n      ) {\r\n        continue\r\n      }\r\n      properties.push(\r\n        createObjectProperty(\r\n          createSimpleExpression(\r\n            name,\r\n            true,\r\n            getInnerRange(loc, 0, name.length)\r\n          ),\r\n          createSimpleExpression(\r\n            value ? value.content : '',\r\n            isStatic,\r\n            value ? value.loc : loc\r\n          )\r\n        )\r\n      )\r\n    } else {\r\n      // directives\r\n      const { name, arg, exp, loc } = prop\r\n      const isVBind = name === 'bind'\r\n      const isVOn = name === 'on'\r\n\r\n      // skip v-slot - it is handled by its dedicated transform.\r\n      if (name === 'slot') {\r\n        if (!isComponent) {\r\n          context.onError(\r\n            createCompilerError(ErrorCodes.X_V_SLOT_MISPLACED, loc)\r\n          )\r\n        }\r\n        continue\r\n      }\r\n      // skip v-once/v-memo - they are handled by dedicated transforms.\r\n      if (name === 'once' || name === 'memo') {\r\n        continue\r\n      }\r\n      // skip v-is and :is on <component>\r\n      if (\r\n        name === 'is' ||\r\n        (isVBind &&\r\n          isStaticArgOf(arg, 'is') &&\r\n          (isComponentTag(tag) ||\r\n            (__COMPAT__ &&\r\n              isCompatEnabled(\r\n                CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n                context\r\n              ))))\r\n      ) {\r\n        continue\r\n      }\r\n      // skip v-on in SSR compilation\r\n      if (isVOn && ssr) {\r\n        continue\r\n      }\r\n\r\n      if (\r\n        // #938: elements with dynamic keys should be forced into blocks\r\n        (isVBind && isStaticArgOf(arg, 'key')) ||\r\n        // inline before-update hooks need to force block so that it is invoked\r\n        // before children\r\n        (isVOn && hasChildren && isStaticArgOf(arg, 'vue:before-update'))\r\n      ) {\r\n        shouldUseBlock = true\r\n      }\r\n\r\n      if (isVBind && isStaticArgOf(arg, 'ref') && context.scopes.vFor > 0) {\r\n        properties.push(\r\n          createObjectProperty(\r\n            createSimpleExpression('ref_for', true),\r\n            createSimpleExpression('true')\r\n          )\r\n        )\r\n      }\r\n\r\n      // special case for v-bind and v-on with no argument\r\n      if (!arg && (isVBind || isVOn)) {\r\n        hasDynamicKeys = true\r\n        if (exp) {\r\n          if (properties.length) {\r\n            mergeArgs.push(\r\n              createObjectExpression(dedupeProperties(properties), elementLoc)\r\n            )\r\n            properties = []\r\n          }\r\n          if (isVBind) {\r\n            if (__COMPAT__) {\r\n              // 2.x v-bind object order compat\r\n              if (__DEV__) {\r\n                const hasOverridableKeys = mergeArgs.some(arg => {\r\n                  if (arg.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n                    return arg.properties.some(({ key }) => {\r\n                      if (\r\n                        key.type !== NodeTypes.SIMPLE_EXPRESSION ||\r\n                        !key.isStatic\r\n                      ) {\r\n                        return true\r\n                      }\r\n                      return (\r\n                        key.content !== 'class' &&\r\n                        key.content !== 'style' &&\r\n                        !isOn(key.content)\r\n                      )\r\n                    })\r\n                  } else {\r\n                    // dynamic expression\r\n                    return true\r\n                  }\r\n                })\r\n                if (hasOverridableKeys) {\r\n                  checkCompatEnabled(\r\n                    CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER,\r\n                    context,\r\n                    loc\r\n                  )\r\n                }\r\n              }\r\n\r\n              if (\r\n                isCompatEnabled(\r\n                  CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER,\r\n                  context\r\n                )\r\n              ) {\r\n                mergeArgs.unshift(exp)\r\n                continue\r\n              }\r\n            }\r\n\r\n            mergeArgs.push(exp)\r\n          } else {\r\n            // v-on=\"obj\" -> toHandlers(obj)\r\n            mergeArgs.push({\r\n              type: NodeTypes.JS_CALL_EXPRESSION,\r\n              loc,\r\n              callee: context.helper(TO_HANDLERS),\r\n              arguments: [exp]\r\n            })\r\n          }\r\n        } else {\r\n          context.onError(\r\n            createCompilerError(\r\n              isVBind\r\n                ? ErrorCodes.X_V_BIND_NO_EXPRESSION\r\n                : ErrorCodes.X_V_ON_NO_EXPRESSION,\r\n              loc\r\n            )\r\n          )\r\n        }\r\n        continue\r\n      }\r\n\r\n      const directiveTransform = context.directiveTransforms[name]\r\n      if (directiveTransform) {\r\n        // has built-in directive transform.\r\n        const { props, needRuntime } = directiveTransform(prop, node, context)\r\n        !ssr && props.forEach(analyzePatchFlag)\r\n        properties.push(...props)\r\n        if (needRuntime) {\r\n          runtimeDirectives.push(prop)\r\n          if (isSymbol(needRuntime)) {\r\n            directiveImportMap.set(prop, needRuntime)\r\n          }\r\n        }\r\n      } else if (!isBuiltInDirective(name)) {\r\n        // no built-in transform, this is a user custom directive.\r\n        runtimeDirectives.push(prop)\r\n        // custom dirs may use beforeUpdate so they need to force blocks\r\n        // to ensure before-update gets called before children update\r\n        if (hasChildren) {\r\n          shouldUseBlock = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let propsExpression: PropsExpression | undefined = undefined\r\n\r\n  // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\r\n  if (mergeArgs.length) {\r\n    if (properties.length) {\r\n      mergeArgs.push(\r\n        createObjectExpression(dedupeProperties(properties), elementLoc)\r\n      )\r\n    }\r\n    if (mergeArgs.length > 1) {\r\n      propsExpression = createCallExpression(\r\n        context.helper(MERGE_PROPS),\r\n        mergeArgs,\r\n        elementLoc\r\n      )\r\n    } else {\r\n      // single v-bind with nothing else - no need for a mergeProps call\r\n      propsExpression = mergeArgs[0]\r\n    }\r\n  } else if (properties.length) {\r\n    propsExpression = createObjectExpression(\r\n      dedupeProperties(properties),\r\n      elementLoc\r\n    )\r\n  }\r\n\r\n  // patchFlag analysis\r\n  if (hasDynamicKeys) {\r\n    patchFlag |= PatchFlags.FULL_PROPS\r\n  } else {\r\n    if (hasClassBinding && !isComponent) {\r\n      patchFlag |= PatchFlags.CLASS\r\n    }\r\n    if (hasStyleBinding && !isComponent) {\r\n      patchFlag |= PatchFlags.STYLE\r\n    }\r\n    if (dynamicPropNames.length) {\r\n      patchFlag |= PatchFlags.PROPS\r\n    }\r\n    if (hasHydrationEventBinding) {\r\n      patchFlag |= PatchFlags.HYDRATE_EVENTS\r\n    }\r\n  }\r\n  if (\r\n    !shouldUseBlock &&\r\n    (patchFlag === 0 || patchFlag === PatchFlags.HYDRATE_EVENTS) &&\r\n    (hasRef || hasVnodeHook || runtimeDirectives.length > 0)\r\n  ) {\r\n    patchFlag |= PatchFlags.NEED_PATCH\r\n  }\r\n\r\n  // pre-normalize props, SSR is skipped for now\r\n  if (!context.inSSR && propsExpression) {\r\n    switch (propsExpression.type) {\r\n      case NodeTypes.JS_OBJECT_EXPRESSION:\r\n        // means that there is no v-bind,\r\n        // but still need to deal with dynamic key binding\r\n        let classKeyIndex = -1\r\n        let styleKeyIndex = -1\r\n        let hasDynamicKey = false\r\n\r\n        for (let i = 0; i < propsExpression.properties.length; i++) {\r\n          const key = propsExpression.properties[i].key\r\n          if (isStaticExp(key)) {\r\n            if (key.content === 'class') {\r\n              classKeyIndex = i\r\n            } else if (key.content === 'style') {\r\n              styleKeyIndex = i\r\n            }\r\n          } else if (!key.isHandlerKey) {\r\n            hasDynamicKey = true\r\n          }\r\n        }\r\n\r\n        const classProp = propsExpression.properties[classKeyIndex]\r\n        const styleProp = propsExpression.properties[styleKeyIndex]\r\n\r\n        // no dynamic key\r\n        if (!hasDynamicKey) {\r\n          if (classProp && !isStaticExp(classProp.value)) {\r\n            classProp.value = createCallExpression(\r\n              context.helper(NORMALIZE_CLASS),\r\n              [classProp.value]\r\n            )\r\n          }\r\n          if (\r\n            styleProp &&\r\n            // the static style is compiled into an object,\r\n            // so use `hasStyleBinding` to ensure that it is a dynamic style binding\r\n            (hasStyleBinding ||\r\n              (styleProp.value.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n                styleProp.value.content.trim()[0] === `[`) ||\r\n              // v-bind:style and style both exist,\r\n              // v-bind:style with static literal object\r\n              styleProp.value.type === NodeTypes.JS_ARRAY_EXPRESSION)\r\n          ) {\r\n            styleProp.value = createCallExpression(\r\n              context.helper(NORMALIZE_STYLE),\r\n              [styleProp.value]\r\n            )\r\n          }\r\n        } else {\r\n          // dynamic key binding, wrap with `normalizeProps`\r\n          propsExpression = createCallExpression(\r\n            context.helper(NORMALIZE_PROPS),\r\n            [propsExpression]\r\n          )\r\n        }\r\n        break\r\n      case NodeTypes.JS_CALL_EXPRESSION:\r\n        // mergeProps call, do nothing\r\n        break\r\n      default:\r\n        // single v-bind\r\n        propsExpression = createCallExpression(\r\n          context.helper(NORMALIZE_PROPS),\r\n          [\r\n            createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\r\n              propsExpression\r\n            ])\r\n          ]\r\n        )\r\n        break\r\n    }\r\n  }\r\n\r\n  return {\r\n    props: propsExpression,\r\n    directives: runtimeDirectives,\r\n    patchFlag,\r\n    dynamicPropNames,\r\n    shouldUseBlock\r\n  }\r\n}\r\n\r\n// Dedupe props in an object literal.\r\n// Literal duplicated attributes would have been warned during the parse phase,\r\n// however, it's possible to encounter duplicated `onXXX` handlers with different\r\n// modifiers. We also need to merge static and dynamic class / style attributes.\r\n// - onXXX handlers / style: merge into array\r\n// - class: merge into single expression with concatenation\r\nfunction dedupeProperties(properties: Property[]): Property[] {\r\n  const knownProps: Map<string, Property> = new Map()\r\n  const deduped: Property[] = []\r\n  for (let i = 0; i < properties.length; i++) {\r\n    const prop = properties[i]\r\n    // dynamic keys are always allowed\r\n    if (prop.key.type === NodeTypes.COMPOUND_EXPRESSION || !prop.key.isStatic) {\r\n      deduped.push(prop)\r\n      continue\r\n    }\r\n    const name = prop.key.content\r\n    const existing = knownProps.get(name)\r\n    if (existing) {\r\n      if (name === 'style' || name === 'class' || isOn(name)) {\r\n        mergeAsArray(existing, prop)\r\n      }\r\n      // unexpected duplicate, should have emitted error during parse\r\n    } else {\r\n      knownProps.set(name, prop)\r\n      deduped.push(prop)\r\n    }\r\n  }\r\n  return deduped\r\n}\r\n\r\nfunction mergeAsArray(existing: Property, incoming: Property) {\r\n  if (existing.value.type === NodeTypes.JS_ARRAY_EXPRESSION) {\r\n    existing.value.elements.push(incoming.value)\r\n  } else {\r\n    existing.value = createArrayExpression(\r\n      [existing.value, incoming.value],\r\n      existing.loc\r\n    )\r\n  }\r\n}\r\n\r\nexport function buildDirectiveArgs(\r\n  dir: DirectiveNode,\r\n  context: TransformContext\r\n): ArrayExpression {\r\n  const dirArgs: ArrayExpression['elements'] = []\r\n  const runtime = directiveImportMap.get(dir)\r\n  if (runtime) {\r\n    // built-in directive with runtime\r\n    dirArgs.push(context.helperString(runtime))\r\n  } else {\r\n    // user directive.\r\n    // see if we have directives exposed via <script setup>\r\n    const fromSetup =\r\n      !__BROWSER__ && resolveSetupReference('v-' + dir.name, context)\r\n    if (fromSetup) {\r\n      dirArgs.push(fromSetup)\r\n    } else {\r\n      // inject statement for resolving directive\r\n      context.helper(RESOLVE_DIRECTIVE)\r\n      context.directives.add(dir.name)\r\n      dirArgs.push(toValidAssetId(dir.name, `directive`))\r\n    }\r\n  }\r\n  const { loc } = dir\r\n  if (dir.exp) dirArgs.push(dir.exp)\r\n  if (dir.arg) {\r\n    if (!dir.exp) {\r\n      dirArgs.push(`void 0`)\r\n    }\r\n    dirArgs.push(dir.arg)\r\n  }\r\n  if (Object.keys(dir.modifiers).length) {\r\n    if (!dir.arg) {\r\n      if (!dir.exp) {\r\n        dirArgs.push(`void 0`)\r\n      }\r\n      dirArgs.push(`void 0`)\r\n    }\r\n    const trueExpression = createSimpleExpression(`true`, false, loc)\r\n    dirArgs.push(\r\n      createObjectExpression(\r\n        dir.modifiers.map(modifier =>\r\n          createObjectProperty(modifier, trueExpression)\r\n        ),\r\n        loc\r\n      )\r\n    )\r\n  }\r\n  return createArrayExpression(dirArgs, dir.loc)\r\n}\r\n\r\nfunction stringifyDynamicPropNames(props: string[]): string {\r\n  let propsNamesString = `[`\r\n  for (let i = 0, l = props.length; i < l; i++) {\r\n    propsNamesString += JSON.stringify(props[i])\r\n    if (i < l - 1) propsNamesString += ', '\r\n  }\r\n  return propsNamesString + `]`\r\n}\r\n\r\nfunction isComponentTag(tag: string) {\r\n  return tag === 'component' || tag === 'Component'\r\n}\r\n","import { NodeTransform, TransformContext } from '../transform'\r\nimport {\r\n  NodeTypes,\r\n  CallExpression,\r\n  createCallExpression,\r\n  ExpressionNode,\r\n  SlotOutletNode,\r\n  createFunctionExpression\r\n} from '../ast'\r\nimport { isSlotOutlet, isStaticArgOf, isStaticExp } from '../utils'\r\nimport { buildProps, PropsExpression } from './transformElement'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport { RENDER_SLOT } from '../runtimeHelpers'\r\nimport { camelize } from '@vue/shared/'\r\n\r\nexport const transformSlotOutlet: NodeTransform = (node, context) => {\r\n  if (isSlotOutlet(node)) {\r\n    const { children, loc } = node\r\n    const { slotName, slotProps } = processSlotOutlet(node, context)\r\n\r\n    const slotArgs: CallExpression['arguments'] = [\r\n      context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\r\n      slotName,\r\n      '{}',\r\n      'undefined',\r\n      'true'\r\n    ]\r\n    let expectedLen = 2\r\n\r\n    if (slotProps) {\r\n      slotArgs[2] = slotProps\r\n      expectedLen = 3\r\n    }\r\n\r\n    if (children.length) {\r\n      slotArgs[3] = createFunctionExpression([], children, false, false, loc)\r\n      expectedLen = 4\r\n    }\r\n\r\n    if (context.scopeId && !context.slotted) {\r\n      expectedLen = 5\r\n    }\r\n    slotArgs.splice(expectedLen) // remove unused arguments\r\n\r\n    node.codegenNode = createCallExpression(\r\n      context.helper(RENDER_SLOT),\r\n      slotArgs,\r\n      loc\r\n    )\r\n  }\r\n}\r\n\r\ninterface SlotOutletProcessResult {\r\n  slotName: string | ExpressionNode\r\n  slotProps: PropsExpression | undefined\r\n}\r\n\r\nexport function processSlotOutlet(\r\n  node: SlotOutletNode,\r\n  context: TransformContext\r\n): SlotOutletProcessResult {\r\n  let slotName: string | ExpressionNode = `\"default\"`\r\n  let slotProps: PropsExpression | undefined = undefined\r\n\r\n  const nonNameProps = []\r\n  for (let i = 0; i < node.props.length; i++) {\r\n    const p = node.props[i]\r\n    if (p.type === NodeTypes.ATTRIBUTE) {\r\n      if (p.value) {\r\n        if (p.name === 'name') {\r\n          slotName = JSON.stringify(p.value.content)\r\n        } else {\r\n          p.name = camelize(p.name)\r\n          nonNameProps.push(p)\r\n        }\r\n      }\r\n    } else {\r\n      if (p.name === 'bind' && isStaticArgOf(p.arg, 'name')) {\r\n        if (p.exp) slotName = p.exp\r\n      } else {\r\n        if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\r\n          p.arg.content = camelize(p.arg.content)\r\n        }\r\n        nonNameProps.push(p)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (nonNameProps.length > 0) {\r\n    const { props, directives } = buildProps(\r\n      node,\r\n      context,\r\n      nonNameProps,\r\n      false,\r\n      false\r\n    )\r\n    slotProps = props\r\n\r\n    if (directives.length) {\r\n      context.onError(\r\n        createCompilerError(\r\n          ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET,\r\n          directives[0].loc\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  return {\r\n    slotName,\r\n    slotProps\r\n  }\r\n}\r\n","import { DirectiveTransform, DirectiveTransformResult } from '../transform'\r\nimport {\r\n  createCompoundExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  DirectiveNode,\r\n  ElementTypes,\r\n  ExpressionNode,\r\n  NodeTypes,\r\n  SimpleExpressionNode\r\n} from '../ast'\r\nimport { camelize, toHandlerKey } from '@vue/shared'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport { processExpression } from './transformExpression'\r\nimport { validateBrowserExpression } from '../validateExpression'\r\nimport { hasScopeRef, isMemberExpression } from '../utils'\r\nimport { TO_HANDLER_KEY } from '../runtimeHelpers'\r\n\r\nconst fnExpRE =\r\n  /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/\r\n\r\nexport interface VOnDirectiveNode extends DirectiveNode {\r\n  // v-on without arg is handled directly in ./transformElements.ts due to it affecting\r\n  // codegen for the entire props object. This transform here is only for v-on\r\n  // *with* args.\r\n  arg: ExpressionNode\r\n  // exp is guaranteed to be a simple expression here because v-on w/ arg is\r\n  // skipped by transformExpression as a special case.\r\n  exp: SimpleExpressionNode | undefined\r\n}\r\n\r\nexport const transformOn: DirectiveTransform = (\r\n  dir,\r\n  node,\r\n  context,\r\n  augmentor\r\n) => {\r\n  const { loc, modifiers, arg } = dir as VOnDirectiveNode\r\n  if (!dir.exp && !modifiers.length) {\r\n    context.onError(createCompilerError(ErrorCodes.X_V_ON_NO_EXPRESSION, loc))\r\n  }\r\n  let eventName: ExpressionNode\r\n  if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    if (arg.isStatic) {\r\n      let rawName = arg.content\r\n      // TODO deprecate @vnodeXXX usage\r\n      if (rawName.startsWith('vue:')) {\r\n        rawName = `vnode-${rawName.slice(4)}`\r\n      }\r\n      // for all event listeners, auto convert it to camelCase. See issue #2249\r\n      eventName = createSimpleExpression(\r\n        toHandlerKey(camelize(rawName)),\r\n        true,\r\n        arg.loc\r\n      )\r\n    } else {\r\n      // #2388\r\n      eventName = createCompoundExpression([\r\n        `${context.helperString(TO_HANDLER_KEY)}(`,\r\n        arg,\r\n        `)`\r\n      ])\r\n    }\r\n  } else {\r\n    // already a compound expression.\r\n    eventName = arg\r\n    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`)\r\n    eventName.children.push(`)`)\r\n  }\r\n\r\n  // handler processing\r\n  let exp: ExpressionNode | undefined = dir.exp as\r\n    | SimpleExpressionNode\r\n    | undefined\r\n  if (exp && !exp.content.trim()) {\r\n    exp = undefined\r\n  }\r\n  let shouldCache: boolean = context.cacheHandlers && !exp && !context.inVOnce\r\n  if (exp) {\r\n    const isMemberExp = isMemberExpression(exp.content, context)\r\n    const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content))\r\n    const hasMultipleStatements = exp.content.includes(`;`)\r\n\r\n    // process the expression since it's been skipped\r\n    if (!__BROWSER__ && context.prefixIdentifiers) {\r\n      isInlineStatement && context.addIdentifiers(`$event`)\r\n      exp = dir.exp = processExpression(\r\n        exp,\r\n        context,\r\n        false,\r\n        hasMultipleStatements\r\n      )\r\n      isInlineStatement && context.removeIdentifiers(`$event`)\r\n      // with scope analysis, the function is hoistable if it has no reference\r\n      // to scope variables.\r\n      shouldCache =\r\n        context.cacheHandlers &&\r\n        // unnecessary to cache inside v-once\r\n        !context.inVOnce &&\r\n        // runtime constants don't need to be cached\r\n        // (this is analyzed by compileScript in SFC <script setup>)\r\n        !(exp.type === NodeTypes.SIMPLE_EXPRESSION && exp.constType > 0) &&\r\n        // #1541 bail if this is a member exp handler passed to a component -\r\n        // we need to use the original function to preserve arity,\r\n        // e.g. <transition> relies on checking cb.length to determine\r\n        // transition end handling. Inline function is ok since its arity\r\n        // is preserved even when cached.\r\n        !(isMemberExp && node.tagType === ElementTypes.COMPONENT) &&\r\n        // bail if the function references closure variables (v-for, v-slot)\r\n        // it must be passed fresh to avoid stale values.\r\n        !hasScopeRef(exp, context.identifiers)\r\n      // If the expression is optimizable and is a member expression pointing\r\n      // to a function, turn it into invocation (and wrap in an arrow function\r\n      // below) so that it always accesses the latest value when called - thus\r\n      // avoiding the need to be patched.\r\n      if (shouldCache && isMemberExp) {\r\n        if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n          exp.content = `${exp.content} && ${exp.content}(...args)`\r\n        } else {\r\n          exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`]\r\n        }\r\n      }\r\n    }\r\n\r\n    if (__DEV__ && __BROWSER__) {\r\n      validateBrowserExpression(\r\n        exp as SimpleExpressionNode,\r\n        context,\r\n        false,\r\n        hasMultipleStatements\r\n      )\r\n    }\r\n\r\n    if (isInlineStatement || (shouldCache && isMemberExp)) {\r\n      // wrap inline statement in a function expression\r\n      exp = createCompoundExpression([\r\n        `${\r\n          isInlineStatement\r\n            ? !__BROWSER__ && context.isTS\r\n              ? `($event: any)`\r\n              : `$event`\r\n            : `${\r\n                !__BROWSER__ && context.isTS ? `\\n//@ts-ignore\\n` : ``\r\n              }(...args)`\r\n        } => ${hasMultipleStatements ? `{` : `(`}`,\r\n        exp,\r\n        hasMultipleStatements ? `}` : `)`\r\n      ])\r\n    }\r\n  }\r\n\r\n  let ret: DirectiveTransformResult = {\r\n    props: [\r\n      createObjectProperty(\r\n        eventName,\r\n        exp || createSimpleExpression(`() => {}`, false, loc)\r\n      )\r\n    ]\r\n  }\r\n\r\n  // apply extended compiler augmentor\r\n  if (augmentor) {\r\n    ret = augmentor(ret)\r\n  }\r\n\r\n  if (shouldCache) {\r\n    // cache handlers so that it's always the same handler being passed down.\r\n    // this avoids unnecessary re-renders when users use inline handlers on\r\n    // components.\r\n    ret.props[0].value = context.cache(ret.props[0].value)\r\n  }\r\n\r\n  // mark the key as handler for props normalization check\r\n  ret.props.forEach(p => (p.key.isHandlerKey = true))\r\n  return ret\r\n}\r\n","import { DirectiveTransform } from '../transform'\r\nimport {\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  ExpressionNode,\r\n  NodeTypes\r\n} from '../ast'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport { camelize } from '@vue/shared'\r\nimport { CAMELIZE } from '../runtimeHelpers'\r\n\r\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\r\n// codegen for the entire props object. This transform here is only for v-bind\r\n// *with* args.\r\nexport const transformBind: DirectiveTransform = (dir, _node, context) => {\r\n  const { exp, modifiers, loc } = dir\r\n  const arg = dir.arg!\r\n\r\n  if (arg.type !== NodeTypes.SIMPLE_EXPRESSION) {\r\n    arg.children.unshift(`(`)\r\n    arg.children.push(`) || \"\"`)\r\n  } else if (!arg.isStatic) {\r\n    arg.content = `${arg.content} || \"\"`\r\n  }\r\n\r\n  // .sync is replaced by v-model:arg\r\n  if (modifiers.includes('camel')) {\r\n    if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n      if (arg.isStatic) {\r\n        arg.content = camelize(arg.content)\r\n      } else {\r\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`\r\n      }\r\n    } else {\r\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`)\r\n      arg.children.push(`)`)\r\n    }\r\n  }\r\n\r\n  if (!context.inSSR) {\r\n    if (modifiers.includes('prop')) {\r\n      injectPrefix(arg, '.')\r\n    }\r\n    if (modifiers.includes('attr')) {\r\n      injectPrefix(arg, '^')\r\n    }\r\n  }\r\n\r\n  if (\r\n    !exp ||\r\n    (exp.type === NodeTypes.SIMPLE_EXPRESSION && !exp.content.trim())\r\n  ) {\r\n    context.onError(createCompilerError(ErrorCodes.X_V_BIND_NO_EXPRESSION, loc))\r\n    return {\r\n      props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\r\n    }\r\n  }\r\n\r\n  return {\r\n    props: [createObjectProperty(arg, exp)]\r\n  }\r\n}\r\n\r\nconst injectPrefix = (arg: ExpressionNode, prefix: string) => {\r\n  if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    if (arg.isStatic) {\r\n      arg.content = prefix + arg.content\r\n    } else {\r\n      arg.content = `\\`${prefix}\\${${arg.content}}\\``\r\n    }\r\n  } else {\r\n    arg.children.unshift(`'${prefix}' + (`)\r\n    arg.children.push(`)`)\r\n  }\r\n}\r\n","import { NodeTransform } from '../transform'\r\nimport {\r\n  NodeTypes,\r\n  CompoundExpressionNode,\r\n  createCallExpression,\r\n  CallExpression,\r\n  ElementTypes,\r\n  ConstantTypes,\r\n  createCompoundExpression\r\n} from '../ast'\r\nimport { isText } from '../utils'\r\nimport { CREATE_TEXT } from '../runtimeHelpers'\r\nimport { PatchFlags, PatchFlagNames } from '@vue/shared'\r\nimport { getConstantType } from './hoistStatic'\r\n\r\n// Merge adjacent text nodes and expressions into a single expression\r\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\r\nexport const transformText: NodeTransform = (node, context) => {\r\n  if (\r\n    node.type === NodeTypes.ROOT ||\r\n    node.type === NodeTypes.ELEMENT ||\r\n    node.type === NodeTypes.FOR ||\r\n    node.type === NodeTypes.IF_BRANCH\r\n  ) {\r\n    // perform the transform on node exit so that all expressions have already\r\n    // been processed.\r\n    return () => {\r\n      const children = node.children\r\n      let currentContainer: CompoundExpressionNode | undefined = undefined\r\n      let hasText = false\r\n\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i]\r\n        if (isText(child)) {\r\n          hasText = true\r\n          for (let j = i + 1; j < children.length; j++) {\r\n            const next = children[j]\r\n            if (isText(next)) {\r\n              if (!currentContainer) {\r\n                currentContainer = children[i] = createCompoundExpression(\r\n                  [child],\r\n                  child.loc\r\n                )\r\n              }\r\n              // merge adjacent text node into current\r\n              currentContainer.children.push(` + `, next)\r\n              children.splice(j, 1)\r\n              j--\r\n            } else {\r\n              currentContainer = undefined\r\n              break\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (\r\n        !hasText ||\r\n        // if this is a plain element with a single text child, leave it\r\n        // as-is since the runtime has dedicated fast path for this by directly\r\n        // setting textContent of the element.\r\n        // for component root it's always normalized anyway.\r\n        (children.length === 1 &&\r\n          (node.type === NodeTypes.ROOT ||\r\n            (node.type === NodeTypes.ELEMENT &&\r\n              node.tagType === ElementTypes.ELEMENT &&\r\n              // #3756\r\n              // custom directives can potentially add DOM elements arbitrarily,\r\n              // we need to avoid setting textContent of the element at runtime\r\n              // to avoid accidentally overwriting the DOM elements added\r\n              // by the user through custom directives.\r\n              !node.props.find(\r\n                p =>\r\n                  p.type === NodeTypes.DIRECTIVE &&\r\n                  !context.directiveTransforms[p.name]\r\n              ) &&\r\n              // in compat mode, <template> tags with no special directives\r\n              // will be rendered as a fragment so its children must be\r\n              // converted into vnodes.\r\n              !(__COMPAT__ && node.tag === 'template'))))\r\n      ) {\r\n        return\r\n      }\r\n\r\n      // pre-convert text nodes into createTextVNode(text) calls to avoid\r\n      // runtime normalization.\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i]\r\n        if (isText(child) || child.type === NodeTypes.COMPOUND_EXPRESSION) {\r\n          const callArgs: CallExpression['arguments'] = []\r\n          // createTextVNode defaults to single whitespace, so if it is a\r\n          // single space the code could be an empty call to save bytes.\r\n          if (child.type !== NodeTypes.TEXT || child.content !== ' ') {\r\n            callArgs.push(child)\r\n          }\r\n          // mark dynamic text with flag so it gets patched inside a block\r\n          if (\r\n            !context.ssr &&\r\n            getConstantType(child, context) === ConstantTypes.NOT_CONSTANT\r\n          ) {\r\n            callArgs.push(\r\n              PatchFlags.TEXT +\r\n                (__DEV__ ? ` /* ${PatchFlagNames[PatchFlags.TEXT]} */` : ``)\r\n            )\r\n          }\r\n          children[i] = {\r\n            type: NodeTypes.TEXT_CALL,\r\n            content: child,\r\n            loc: child.loc,\r\n            codegenNode: createCallExpression(\r\n              context.helper(CREATE_TEXT),\r\n              callArgs\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { NodeTransform } from '../transform'\r\nimport { findDir } from '../utils'\r\nimport { ElementNode, ForNode, IfNode, NodeTypes } from '../ast'\r\nimport { SET_BLOCK_TRACKING } from '../runtimeHelpers'\r\n\r\nconst seen = new WeakSet()\r\n\r\nexport const transformOnce: NodeTransform = (node, context) => {\r\n  if (node.type === NodeTypes.ELEMENT && findDir(node, 'once', true)) {\r\n    if (seen.has(node) || context.inVOnce) {\r\n      return\r\n    }\r\n    seen.add(node)\r\n    context.inVOnce = true\r\n    context.helper(SET_BLOCK_TRACKING)\r\n    return () => {\r\n      context.inVOnce = false\r\n      const cur = context.currentNode as ElementNode | IfNode | ForNode\r\n      if (cur.codegenNode) {\r\n        cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */)\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { DirectiveTransform } from '../transform'\r\nimport {\r\n  createSimpleExpression,\r\n  createObjectProperty,\r\n  createCompoundExpression,\r\n  NodeTypes,\r\n  Property,\r\n  ElementTypes,\r\n  ExpressionNode,\r\n  ConstantTypes\r\n} from '../ast'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport {\r\n  isMemberExpression,\r\n  isSimpleIdentifier,\r\n  hasScopeRef,\r\n  isStaticExp\r\n} from '../utils'\r\nimport { IS_REF } from '../runtimeHelpers'\r\nimport { BindingTypes } from '../options'\r\n\r\nexport const transformModel: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, arg } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_MODEL_NO_EXPRESSION, dir.loc)\r\n    )\r\n    return createTransformProps()\r\n  }\r\n\r\n  const rawExp = exp.loc.source\r\n  const expString =\r\n    exp.type === NodeTypes.SIMPLE_EXPRESSION ? exp.content : rawExp\r\n\r\n  // im SFC <script setup> inline mode, the exp may have been transformed into\r\n  // _unref(exp)\r\n  const bindingType = context.bindingMetadata[rawExp]\r\n  const maybeRef =\r\n    !__BROWSER__ &&\r\n    context.inline &&\r\n    bindingType &&\r\n    bindingType !== BindingTypes.SETUP_CONST\r\n\r\n  if (\r\n    !expString.trim() ||\r\n    (!isMemberExpression(expString, context) && !maybeRef)\r\n  ) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION, exp.loc)\r\n    )\r\n    return createTransformProps()\r\n  }\r\n\r\n  if (\r\n    !__BROWSER__ &&\r\n    context.prefixIdentifiers &&\r\n    isSimpleIdentifier(expString) &&\r\n    context.identifiers[expString]\r\n  ) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE, exp.loc)\r\n    )\r\n    return createTransformProps()\r\n  }\r\n\r\n  const propName = arg ? arg : createSimpleExpression('modelValue', true)\r\n  const eventName = arg\r\n    ? isStaticExp(arg)\r\n      ? `onUpdate:${arg.content}`\r\n      : createCompoundExpression(['\"onUpdate:\" + ', arg])\r\n    : `onUpdate:modelValue`\r\n\r\n  let assignmentExp: ExpressionNode\r\n  const eventArg = context.isTS ? `($event: any)` : `$event`\r\n  if (maybeRef) {\r\n    if (bindingType === BindingTypes.SETUP_REF) {\r\n      // v-model used on known ref.\r\n      assignmentExp = createCompoundExpression([\r\n        `${eventArg} => ((`,\r\n        createSimpleExpression(rawExp, false, exp.loc),\r\n        `).value = $event)`\r\n      ])\r\n    } else {\r\n      // v-model used on a potentially ref binding in <script setup> inline mode.\r\n      // the assignment needs to check whether the binding is actually a ref.\r\n      const altAssignment =\r\n        bindingType === BindingTypes.SETUP_LET ? `${rawExp} = $event` : `null`\r\n      assignmentExp = createCompoundExpression([\r\n        `${eventArg} => (${context.helperString(IS_REF)}(${rawExp}) ? (`,\r\n        createSimpleExpression(rawExp, false, exp.loc),\r\n        `).value = $event : ${altAssignment})`\r\n      ])\r\n    }\r\n  } else {\r\n    assignmentExp = createCompoundExpression([\r\n      `${eventArg} => ((`,\r\n      exp,\r\n      `) = $event)`\r\n    ])\r\n  }\r\n\r\n  const props = [\r\n    // modelValue: foo\r\n    createObjectProperty(propName, dir.exp!),\r\n    // \"onUpdate:modelValue\": $event => (foo = $event)\r\n    createObjectProperty(eventName, assignmentExp)\r\n  ]\r\n\r\n  // cache v-model handler if applicable (when it doesn't refer any scope vars)\r\n  if (\r\n    !__BROWSER__ &&\r\n    context.prefixIdentifiers &&\r\n    !context.inVOnce &&\r\n    context.cacheHandlers &&\r\n    !hasScopeRef(exp, context.identifiers)\r\n  ) {\r\n    props[1].value = context.cache(props[1].value)\r\n  }\r\n\r\n  // modelModifiers: { foo: true, \"bar-baz\": true }\r\n  if (dir.modifiers.length && node.tagType === ElementTypes.COMPONENT) {\r\n    const modifiers = dir.modifiers\r\n      .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\r\n      .join(`, `)\r\n    const modifiersKey = arg\r\n      ? isStaticExp(arg)\r\n        ? `${arg.content}Modifiers`\r\n        : createCompoundExpression([arg, ' + \"Modifiers\"'])\r\n      : `modelModifiers`\r\n    props.push(\r\n      createObjectProperty(\r\n        modifiersKey,\r\n        createSimpleExpression(\r\n          `{ ${modifiers} }`,\r\n          false,\r\n          dir.loc,\r\n          ConstantTypes.CAN_HOIST\r\n        )\r\n      )\r\n    )\r\n  }\r\n\r\n  return createTransformProps(props)\r\n}\r\n\r\nfunction createTransformProps(props: Property[] = []) {\r\n  return { props }\r\n}\r\n","import { RESOLVE_FILTER } from '../runtimeHelpers'\r\nimport {\r\n  AttributeNode,\r\n  DirectiveNode,\r\n  NodeTransform,\r\n  NodeTypes,\r\n  SimpleExpressionNode,\r\n  toValidAssetId,\r\n  TransformContext\r\n} from '@vue/compiler-core'\r\nimport {\r\n  CompilerDeprecationTypes,\r\n  isCompatEnabled,\r\n  warnDeprecation\r\n} from './compatConfig'\r\nimport { ExpressionNode } from '../ast'\r\n\r\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/\r\n\r\nexport const transformFilter: NodeTransform = (node, context) => {\r\n  if (!isCompatEnabled(CompilerDeprecationTypes.COMPILER_FILTERS, context)) {\r\n    return\r\n  }\r\n\r\n  if (node.type === NodeTypes.INTERPOLATION) {\r\n    // filter rewrite is applied before expression transform so only\r\n    // simple expressions are possible at this stage\r\n    rewriteFilter(node.content, context)\r\n  }\r\n\r\n  if (node.type === NodeTypes.ELEMENT) {\r\n    node.props.forEach((prop: AttributeNode | DirectiveNode) => {\r\n      if (\r\n        prop.type === NodeTypes.DIRECTIVE &&\r\n        prop.name !== 'for' &&\r\n        prop.exp\r\n      ) {\r\n        rewriteFilter(prop.exp, context)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction rewriteFilter(node: ExpressionNode, context: TransformContext) {\r\n  if (node.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    parseFilter(node, context)\r\n  } else {\r\n    for (let i = 0; i < node.children.length; i++) {\r\n      const child = node.children[i]\r\n      if (typeof child !== 'object') continue\r\n      if (child.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n        parseFilter(child, context)\r\n      } else if (child.type === NodeTypes.COMPOUND_EXPRESSION) {\r\n        rewriteFilter(node, context)\r\n      } else if (child.type === NodeTypes.INTERPOLATION) {\r\n        rewriteFilter(child.content, context)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction parseFilter(node: SimpleExpressionNode, context: TransformContext) {\r\n  const exp = node.content\r\n  let inSingle = false\r\n  let inDouble = false\r\n  let inTemplateString = false\r\n  let inRegex = false\r\n  let curly = 0\r\n  let square = 0\r\n  let paren = 0\r\n  let lastFilterIndex = 0\r\n  let c,\r\n    prev,\r\n    i: number,\r\n    expression,\r\n    filters: string[] = []\r\n\r\n  for (i = 0; i < exp.length; i++) {\r\n    prev = c\r\n    c = exp.charCodeAt(i)\r\n    if (inSingle) {\r\n      if (c === 0x27 && prev !== 0x5c) inSingle = false\r\n    } else if (inDouble) {\r\n      if (c === 0x22 && prev !== 0x5c) inDouble = false\r\n    } else if (inTemplateString) {\r\n      if (c === 0x60 && prev !== 0x5c) inTemplateString = false\r\n    } else if (inRegex) {\r\n      if (c === 0x2f && prev !== 0x5c) inRegex = false\r\n    } else if (\r\n      c === 0x7c && // pipe\r\n      exp.charCodeAt(i + 1) !== 0x7c &&\r\n      exp.charCodeAt(i - 1) !== 0x7c &&\r\n      !curly &&\r\n      !square &&\r\n      !paren\r\n    ) {\r\n      if (expression === undefined) {\r\n        // first filter, end of expression\r\n        lastFilterIndex = i + 1\r\n        expression = exp.slice(0, i).trim()\r\n      } else {\r\n        pushFilter()\r\n      }\r\n    } else {\r\n      switch (c) {\r\n        case 0x22:\r\n          inDouble = true\r\n          break // \"\r\n        case 0x27:\r\n          inSingle = true\r\n          break // '\r\n        case 0x60:\r\n          inTemplateString = true\r\n          break // `\r\n        case 0x28:\r\n          paren++\r\n          break // (\r\n        case 0x29:\r\n          paren--\r\n          break // )\r\n        case 0x5b:\r\n          square++\r\n          break // [\r\n        case 0x5d:\r\n          square--\r\n          break // ]\r\n        case 0x7b:\r\n          curly++\r\n          break // {\r\n        case 0x7d:\r\n          curly--\r\n          break // }\r\n      }\r\n      if (c === 0x2f) {\r\n        // /\r\n        let j = i - 1\r\n        let p\r\n        // find first non-whitespace prev char\r\n        for (; j >= 0; j--) {\r\n          p = exp.charAt(j)\r\n          if (p !== ' ') break\r\n        }\r\n        if (!p || !validDivisionCharRE.test(p)) {\r\n          inRegex = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (expression === undefined) {\r\n    expression = exp.slice(0, i).trim()\r\n  } else if (lastFilterIndex !== 0) {\r\n    pushFilter()\r\n  }\r\n\r\n  function pushFilter() {\r\n    filters.push(exp.slice(lastFilterIndex, i).trim())\r\n    lastFilterIndex = i + 1\r\n  }\r\n\r\n  if (filters.length) {\r\n    __DEV__ &&\r\n      warnDeprecation(\r\n        CompilerDeprecationTypes.COMPILER_FILTERS,\r\n        context,\r\n        node.loc\r\n      )\r\n    for (i = 0; i < filters.length; i++) {\r\n      expression = wrapFilter(expression, filters[i], context)\r\n    }\r\n    node.content = expression\r\n  }\r\n}\r\n\r\nfunction wrapFilter(\r\n  exp: string,\r\n  filter: string,\r\n  context: TransformContext\r\n): string {\r\n  context.helper(RESOLVE_FILTER)\r\n  const i = filter.indexOf('(')\r\n  if (i < 0) {\r\n    context.filters!.add(filter)\r\n    return `${toValidAssetId(filter, 'filter')}(${exp})`\r\n  } else {\r\n    const name = filter.slice(0, i)\r\n    const args = filter.slice(i + 1)\r\n    context.filters!.add(name)\r\n    return `${toValidAssetId(name, 'filter')}(${exp}${\r\n      args !== ')' ? ',' + args : args\r\n    }`\r\n  }\r\n}\r\n","import { NodeTransform } from '../transform'\r\nimport { findDir, makeBlock } from '../utils'\r\nimport {\r\n  createCallExpression,\r\n  createFunctionExpression,\r\n  ElementTypes,\r\n  MemoExpression,\r\n  NodeTypes,\r\n  PlainElementNode\r\n} from '../ast'\r\nimport { WITH_MEMO } from '../runtimeHelpers'\r\n\r\nconst seen = new WeakSet()\r\n\r\nexport const transformMemo: NodeTransform = (node, context) => {\r\n  if (node.type === NodeTypes.ELEMENT) {\r\n    const dir = findDir(node, 'memo')\r\n    if (!dir || seen.has(node)) {\r\n      return\r\n    }\r\n    seen.add(node)\r\n    return () => {\r\n      const codegenNode =\r\n        node.codegenNode ||\r\n        (context.currentNode as PlainElementNode).codegenNode\r\n      if (codegenNode && codegenNode.type === NodeTypes.VNODE_CALL) {\r\n        // non-component sub tree should be turned into a block\r\n        if (node.tagType !== ElementTypes.COMPONENT) {\r\n          makeBlock(codegenNode, context)\r\n        }\r\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\r\n          dir.exp!,\r\n          createFunctionExpression(undefined, codegenNode),\r\n          `_cache`,\r\n          String(context.cached++)\r\n        ]) as MemoExpression\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { CompilerOptions } from './options'\r\nimport { baseParse } from './parse'\r\nimport { transform, NodeTransform, DirectiveTransform } from './transform'\r\nimport { generate, CodegenResult } from './codegen'\r\nimport { RootNode } from './ast'\r\nimport { isString, extend } from '@vue/shared'\r\nimport { transformIf } from './transforms/vIf'\r\nimport { transformFor } from './transforms/vFor'\r\nimport { transformExpression } from './transforms/transformExpression'\r\nimport { transformSlotOutlet } from './transforms/transformSlotOutlet'\r\nimport { transformElement } from './transforms/transformElement'\r\nimport { transformOn } from './transforms/vOn'\r\nimport { transformBind } from './transforms/vBind'\r\nimport { trackSlotScopes, trackVForSlotScopes } from './transforms/vSlot'\r\nimport { transformText } from './transforms/transformText'\r\nimport { transformOnce } from './transforms/vOnce'\r\nimport { transformModel } from './transforms/vModel'\r\nimport { transformFilter } from './compat/transformFilter'\r\nimport { defaultOnError, createCompilerError, ErrorCodes } from './errors'\r\nimport { transformMemo } from './transforms/vMemo'\r\n\r\nexport type TransformPreset = [\r\n  NodeTransform[],\r\n  Record<string, DirectiveTransform>\r\n]\r\n\r\nexport function getBaseTransformPreset(\r\n  prefixIdentifiers?: boolean\r\n): TransformPreset {\r\n  return [\r\n    [\r\n      transformOnce,\r\n      transformIf,\r\n      transformMemo,\r\n      transformFor,\r\n      ...(__COMPAT__ ? [transformFilter] : []),\r\n      ...(!__BROWSER__ && prefixIdentifiers\r\n        ? [\r\n            // order is important\r\n            trackVForSlotScopes,\r\n            transformExpression\r\n          ]\r\n        : __BROWSER__ && __DEV__\r\n        ? [transformExpression]\r\n        : []),\r\n      transformSlotOutlet,\r\n      transformElement,\r\n      trackSlotScopes,\r\n      transformText\r\n    ],\r\n    {\r\n      on: transformOn,\r\n      bind: transformBind,\r\n      model: transformModel\r\n    }\r\n  ]\r\n}\r\n\r\n// we name it `baseCompile` so that higher order compilers like\r\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\r\nexport function baseCompile(\r\n  template: string | RootNode,\r\n  options: CompilerOptions = {}\r\n): CodegenResult {\r\n  const onError = options.onError || defaultOnError\r\n  const isModuleMode = options.mode === 'module'\r\n  /* istanbul ignore if */\r\n  if (__BROWSER__) {\r\n    if (options.prefixIdentifiers === true) {\r\n      onError(createCompilerError(ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED))\r\n    } else if (isModuleMode) {\r\n      onError(createCompilerError(ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED))\r\n    }\r\n  }\r\n\r\n  const prefixIdentifiers =\r\n    !__BROWSER__ && (options.prefixIdentifiers === true || isModuleMode)\r\n  if (!prefixIdentifiers && options.cacheHandlers) {\r\n    onError(createCompilerError(ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED))\r\n  }\r\n  if (options.scopeId && !isModuleMode) {\r\n    onError(createCompilerError(ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED))\r\n  }\r\n\r\n  const ast = isString(template) ? baseParse(template, options) : template\r\n  const [nodeTransforms, directiveTransforms] =\r\n    getBaseTransformPreset(prefixIdentifiers)\r\n\r\n  if (!__BROWSER__ && options.isTS) {\r\n    const { expressionPlugins } = options\r\n    if (!expressionPlugins || !expressionPlugins.includes('typescript')) {\r\n      options.expressionPlugins = [...(expressionPlugins || []), 'typescript']\r\n    }\r\n  }\r\n\r\n  transform(\r\n    ast,\r\n    extend({}, options, {\r\n      prefixIdentifiers,\r\n      nodeTransforms: [\r\n        ...nodeTransforms,\r\n        ...(options.nodeTransforms || []) // user transforms\r\n      ],\r\n      directiveTransforms: extend(\r\n        {},\r\n        directiveTransforms,\r\n        options.directiveTransforms || {} // user transforms\r\n      )\r\n    })\r\n  )\r\n\r\n  return generate(\r\n    ast,\r\n    extend({}, options, {\r\n      prefixIdentifiers\r\n    })\r\n  )\r\n}\r\n","import { DirectiveTransform } from '../transform'\r\n\r\nexport const noopDirectiveTransform: DirectiveTransform = () => ({ props: [] })\r\n","import { registerRuntimeHelpers } from '@vue/compiler-core'\r\n\r\nexport const V_MODEL_RADIO = Symbol(__DEV__ ? `vModelRadio` : ``)\r\nexport const V_MODEL_CHECKBOX = Symbol(__DEV__ ? `vModelCheckbox` : ``)\r\nexport const V_MODEL_TEXT = Symbol(__DEV__ ? `vModelText` : ``)\r\nexport const V_MODEL_SELECT = Symbol(__DEV__ ? `vModelSelect` : ``)\r\nexport const V_MODEL_DYNAMIC = Symbol(__DEV__ ? `vModelDynamic` : ``)\r\n\r\nexport const V_ON_WITH_MODIFIERS = Symbol(__DEV__ ? `vOnModifiersGuard` : ``)\r\nexport const V_ON_WITH_KEYS = Symbol(__DEV__ ? `vOnKeysGuard` : ``)\r\n\r\nexport const V_SHOW = Symbol(__DEV__ ? `vShow` : ``)\r\n\r\nexport const TRANSITION = Symbol(__DEV__ ? `Transition` : ``)\r\nexport const TRANSITION_GROUP = Symbol(__DEV__ ? `TransitionGroup` : ``)\r\n\r\nregisterRuntimeHelpers({\r\n  [V_MODEL_RADIO]: `vModelRadio`,\r\n  [V_MODEL_CHECKBOX]: `vModelCheckbox`,\r\n  [V_MODEL_TEXT]: `vModelText`,\r\n  [V_MODEL_SELECT]: `vModelSelect`,\r\n  [V_MODEL_DYNAMIC]: `vModelDynamic`,\r\n  [V_ON_WITH_MODIFIERS]: `withModifiers`,\r\n  [V_ON_WITH_KEYS]: `withKeys`,\r\n  [V_SHOW]: `vShow`,\r\n  [TRANSITION]: `Transition`,\r\n  [TRANSITION_GROUP]: `TransitionGroup`\r\n})\r\n","/* eslint-disable no-restricted-globals */\r\n\r\nlet decoder: HTMLDivElement\r\n\r\nexport function decodeHtmlBrowser(raw: string, asAttr = false): string {\r\n  if (!decoder) {\r\n    decoder = document.createElement('div')\r\n  }\r\n  if (asAttr) {\r\n    decoder.innerHTML = `<div foo=\"${raw.replace(/\"/g, '&quot;')}\">`\r\n    return decoder.children[0].getAttribute('foo') as string\r\n  } else {\r\n    decoder.innerHTML = raw\r\n    return decoder.textContent as string\r\n  }\r\n}\r\n","import {\r\n  TextModes,\r\n  ParserOptions,\r\n  ElementNode,\r\n  Namespaces,\r\n  NodeTypes,\r\n  isBuiltInType\r\n} from '@vue/compiler-core'\r\nimport { makeMap, isVoidTag, isHTMLTag, isSVGTag } from '@vue/shared'\r\nimport { TRANSITION, TRANSITION_GROUP } from './runtimeHelpers'\r\nimport { decodeHtml } from './decodeHtml'\r\nimport { decodeHtmlBrowser } from './decodeHtmlBrowser'\r\n\r\nconst isRawTextContainer = /*#__PURE__*/ makeMap(\r\n  'style,iframe,script,noscript',\r\n  true\r\n)\r\n\r\nexport const enum DOMNamespaces {\r\n  HTML = Namespaces.HTML,\r\n  SVG,\r\n  MATH_ML\r\n}\r\n\r\nexport const parserOptions: ParserOptions = {\r\n  isVoidTag,\r\n  isNativeTag: tag => isHTMLTag(tag) || isSVGTag(tag),\r\n  isPreTag: tag => tag === 'pre',\r\n  decodeEntities: __BROWSER__ ? decodeHtmlBrowser : decodeHtml,\r\n\r\n  isBuiltInComponent: (tag: string): symbol | undefined => {\r\n    if (isBuiltInType(tag, `Transition`)) {\r\n      return TRANSITION\r\n    } else if (isBuiltInType(tag, `TransitionGroup`)) {\r\n      return TRANSITION_GROUP\r\n    }\r\n  },\r\n\r\n  // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\r\n  getNamespace(tag: string, parent: ElementNode | undefined): DOMNamespaces {\r\n    let ns = parent ? parent.ns : DOMNamespaces.HTML\r\n\r\n    if (parent && ns === DOMNamespaces.MATH_ML) {\r\n      if (parent.tag === 'annotation-xml') {\r\n        if (tag === 'svg') {\r\n          return DOMNamespaces.SVG\r\n        }\r\n        if (\r\n          parent.props.some(\r\n            a =>\r\n              a.type === NodeTypes.ATTRIBUTE &&\r\n              a.name === 'encoding' &&\r\n              a.value != null &&\r\n              (a.value.content === 'text/html' ||\r\n                a.value.content === 'application/xhtml+xml')\r\n          )\r\n        ) {\r\n          ns = DOMNamespaces.HTML\r\n        }\r\n      } else if (\r\n        /^m(?:[ions]|text)$/.test(parent.tag) &&\r\n        tag !== 'mglyph' &&\r\n        tag !== 'malignmark'\r\n      ) {\r\n        ns = DOMNamespaces.HTML\r\n      }\r\n    } else if (parent && ns === DOMNamespaces.SVG) {\r\n      if (\r\n        parent.tag === 'foreignObject' ||\r\n        parent.tag === 'desc' ||\r\n        parent.tag === 'title'\r\n      ) {\r\n        ns = DOMNamespaces.HTML\r\n      }\r\n    }\r\n\r\n    if (ns === DOMNamespaces.HTML) {\r\n      if (tag === 'svg') {\r\n        return DOMNamespaces.SVG\r\n      }\r\n      if (tag === 'math') {\r\n        return DOMNamespaces.MATH_ML\r\n      }\r\n    }\r\n    return ns\r\n  },\r\n\r\n  // https://html.spec.whatwg.org/multipage/parsing.html#parsing-html-fragments\r\n  getTextMode({ tag, ns }: ElementNode): TextModes {\r\n    if (ns === DOMNamespaces.HTML) {\r\n      if (tag === 'textarea' || tag === 'title') {\r\n        return TextModes.RCDATA\r\n      }\r\n      if (isRawTextContainer(tag)) {\r\n        return TextModes.RAWTEXT\r\n      }\r\n    }\r\n    return TextModes.DATA\r\n  }\r\n}\r\n","import {\r\n  NodeTransform,\r\n  NodeTypes,\r\n  createSimpleExpression,\r\n  SimpleExpressionNode,\r\n  SourceLocation,\r\n  ConstantTypes\r\n} from '@vue/compiler-core'\r\nimport { parseStringStyle } from '@vue/shared'\r\n\r\n// Parse inline CSS strings for static style attributes into an object.\r\n// This is a NodeTransform since it works on the static `style` attribute and\r\n// converts it into a dynamic equivalent:\r\n// style=\"color: red\" -> :style='{ \"color\": \"red\" }'\r\n// It is then processed by `transformElement` and included in the generated\r\n// props.\r\nexport const transformStyle: NodeTransform = node => {\r\n  if (node.type === NodeTypes.ELEMENT) {\r\n    node.props.forEach((p, i) => {\r\n      if (p.type === NodeTypes.ATTRIBUTE && p.name === 'style' && p.value) {\r\n        // replace p with an expression node\r\n        node.props[i] = {\r\n          type: NodeTypes.DIRECTIVE,\r\n          name: `bind`,\r\n          arg: createSimpleExpression(`style`, true, p.loc),\r\n          exp: parseInlineCSS(p.value.content, p.loc),\r\n          modifiers: [],\r\n          loc: p.loc\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nconst parseInlineCSS = (\r\n  cssText: string,\r\n  loc: SourceLocation\r\n): SimpleExpressionNode => {\r\n  const normalized = parseStringStyle(cssText)\r\n  return createSimpleExpression(\r\n    JSON.stringify(normalized),\r\n    false,\r\n    loc,\r\n    ConstantTypes.CAN_STRINGIFY\r\n  )\r\n}\r\n","import {\r\n  DirectiveTransform,\r\n  createObjectProperty,\r\n  createSimpleExpression\r\n} from '@vue/compiler-core'\r\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\r\n\r\nexport const transformVHtml: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, loc } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_HTML_NO_EXPRESSION, loc)\r\n    )\r\n  }\r\n  if (node.children.length) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_HTML_WITH_CHILDREN, loc)\r\n    )\r\n    node.children.length = 0\r\n  }\r\n  return {\r\n    props: [\r\n      createObjectProperty(\r\n        createSimpleExpression(`innerHTML`, true, loc),\r\n        exp || createSimpleExpression('', true)\r\n      )\r\n    ]\r\n  }\r\n}\r\n","import {\r\n  transformOn as baseTransform,\r\n  DirectiveTransform,\r\n  createObjectProperty,\r\n  createCallExpression,\r\n  createSimpleExpression,\r\n  NodeTypes,\r\n  createCompoundExpression,\r\n  ExpressionNode,\r\n  SimpleExpressionNode,\r\n  isStaticExp,\r\n  CompilerDeprecationTypes,\r\n  TransformContext,\r\n  SourceLocation,\r\n  checkCompatEnabled\r\n} from '@vue/compiler-core'\r\nimport { V_ON_WITH_MODIFIERS, V_ON_WITH_KEYS } from '../runtimeHelpers'\r\nimport { makeMap, capitalize } from '@vue/shared'\r\n\r\nconst isEventOptionModifier = /*#__PURE__*/ makeMap(`passive,once,capture`)\r\nconst isNonKeyModifier = /*#__PURE__*/ makeMap(\r\n  // event propagation management\r\n  `stop,prevent,self,` +\r\n    // system modifiers + exact\r\n    `ctrl,shift,alt,meta,exact,` +\r\n    // mouse\r\n    `middle`\r\n)\r\n// left & right could be mouse or key modifiers based on event type\r\nconst maybeKeyModifier = /*#__PURE__*/ makeMap('left,right')\r\nconst isKeyboardEvent = /*#__PURE__*/ makeMap(\r\n  `onkeyup,onkeydown,onkeypress`,\r\n  true\r\n)\r\n\r\nconst resolveModifiers = (\r\n  key: ExpressionNode,\r\n  modifiers: string[],\r\n  context: TransformContext,\r\n  loc: SourceLocation\r\n) => {\r\n  const keyModifiers = []\r\n  const nonKeyModifiers = []\r\n  const eventOptionModifiers = []\r\n\r\n  for (let i = 0; i < modifiers.length; i++) {\r\n    const modifier = modifiers[i]\r\n\r\n    if (\r\n      __COMPAT__ &&\r\n      modifier === 'native' &&\r\n      checkCompatEnabled(\r\n        CompilerDeprecationTypes.COMPILER_V_ON_NATIVE,\r\n        context,\r\n        loc\r\n      )\r\n    ) {\r\n      eventOptionModifiers.push(modifier)\r\n    } else if (isEventOptionModifier(modifier)) {\r\n      // eventOptionModifiers: modifiers for addEventListener() options,\r\n      // e.g. .passive & .capture\r\n      eventOptionModifiers.push(modifier)\r\n    } else {\r\n      // runtimeModifiers: modifiers that needs runtime guards\r\n      if (maybeKeyModifier(modifier)) {\r\n        if (isStaticExp(key)) {\r\n          if (isKeyboardEvent((key as SimpleExpressionNode).content)) {\r\n            keyModifiers.push(modifier)\r\n          } else {\r\n            nonKeyModifiers.push(modifier)\r\n          }\r\n        } else {\r\n          keyModifiers.push(modifier)\r\n          nonKeyModifiers.push(modifier)\r\n        }\r\n      } else {\r\n        if (isNonKeyModifier(modifier)) {\r\n          nonKeyModifiers.push(modifier)\r\n        } else {\r\n          keyModifiers.push(modifier)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    keyModifiers,\r\n    nonKeyModifiers,\r\n    eventOptionModifiers\r\n  }\r\n}\r\n\r\nconst transformClick = (key: ExpressionNode, event: string) => {\r\n  const isStaticClick =\r\n    isStaticExp(key) && key.content.toLowerCase() === 'onclick'\r\n  return isStaticClick\r\n    ? createSimpleExpression(event, true)\r\n    : key.type !== NodeTypes.SIMPLE_EXPRESSION\r\n    ? createCompoundExpression([\r\n        `(`,\r\n        key,\r\n        `) === \"onClick\" ? \"${event}\" : (`,\r\n        key,\r\n        `)`\r\n      ])\r\n    : key\r\n}\r\n\r\nexport const transformOn: DirectiveTransform = (dir, node, context) => {\r\n  return baseTransform(dir, node, context, baseResult => {\r\n    const { modifiers } = dir\r\n    if (!modifiers.length) return baseResult\r\n\r\n    let { key, value: handlerExp } = baseResult.props[0]\r\n    const { keyModifiers, nonKeyModifiers, eventOptionModifiers } =\r\n      resolveModifiers(key, modifiers, context, dir.loc)\r\n\r\n    // normalize click.right and click.middle since they don't actually fire\r\n    if (nonKeyModifiers.includes('right')) {\r\n      key = transformClick(key, `onContextmenu`)\r\n    }\r\n    if (nonKeyModifiers.includes('middle')) {\r\n      key = transformClick(key, `onMouseup`)\r\n    }\r\n\r\n    if (nonKeyModifiers.length) {\r\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\r\n        handlerExp,\r\n        JSON.stringify(nonKeyModifiers)\r\n      ])\r\n    }\r\n\r\n    if (\r\n      keyModifiers.length &&\r\n      // if event name is dynamic, always wrap with keys guard\r\n      (!isStaticExp(key) || isKeyboardEvent(key.content))\r\n    ) {\r\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [\r\n        handlerExp,\r\n        JSON.stringify(keyModifiers)\r\n      ])\r\n    }\r\n\r\n    if (eventOptionModifiers.length) {\r\n      const modifierPostfix = eventOptionModifiers.map(capitalize).join('')\r\n      key = isStaticExp(key)\r\n        ? createSimpleExpression(`${key.content}${modifierPostfix}`, true)\r\n        : createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`])\r\n    }\r\n\r\n    return {\r\n      props: [createObjectProperty(key, handlerExp)]\r\n    }\r\n  })\r\n}\r\n","import { NodeTransform, NodeTypes, ElementTypes } from '@vue/compiler-core'\r\nimport { DOMErrorCodes, createDOMCompilerError } from '../errors'\r\n\r\nexport const ignoreSideEffectTags: NodeTransform = (node, context) => {\r\n  if (\r\n    node.type === NodeTypes.ELEMENT &&\r\n    node.tagType === ElementTypes.ELEMENT &&\r\n    (node.tag === 'script' || node.tag === 'style')\r\n  ) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_IGNORED_SIDE_EFFECT_TAG, node.loc)\r\n    )\r\n    context.removeNode()\r\n  }\r\n}\r\n","import {\r\n  baseCompile,\r\n  baseParse,\r\n  CompilerOptions,\r\n  CodegenResult,\r\n  ParserOptions,\r\n  RootNode,\r\n  noopDirectiveTransform,\r\n  NodeTransform,\r\n  DirectiveTransform\r\n} from '@vue/compiler-core'\r\nimport { parserOptions } from './parserOptions'\r\nimport { transformStyle } from './transforms/transformStyle'\r\nimport { transformVHtml } from './transforms/vHtml'\r\nimport { transformVText } from './transforms/vText'\r\nimport { transformModel } from './transforms/vModel'\r\nimport { transformOn } from './transforms/vOn'\r\nimport { transformShow } from './transforms/vShow'\r\nimport { transformTransition } from './transforms/Transition'\r\nimport { stringifyStatic } from './transforms/stringifyStatic'\r\nimport { ignoreSideEffectTags } from './transforms/ignoreSideEffectTags'\r\nimport { extend } from '@vue/shared'\r\n\r\nexport { parserOptions }\r\n\r\nexport const DOMNodeTransforms: NodeTransform[] = [\r\n  transformStyle,\r\n  ...(__DEV__ ? [transformTransition] : [])\r\n]\r\n\r\nexport const DOMDirectiveTransforms: Record<string, DirectiveTransform> = {\r\n  cloak: noopDirectiveTransform,\r\n  html: transformVHtml,\r\n  text: transformVText,\r\n  model: transformModel, // override compiler-core\r\n  on: transformOn, // override compiler-core\r\n  show: transformShow\r\n}\r\n\r\nexport function compile(\r\n  template: string,\r\n  options: CompilerOptions = {}\r\n): CodegenResult {\r\n  return baseCompile(\r\n    template,\r\n    extend({}, parserOptions, options, {\r\n      nodeTransforms: [\r\n        // ignore <script> and <tag>\r\n        // this is not put inside DOMNodeTransforms because that list is used\r\n        // by compiler-ssr to generate vnode fallback branches\r\n        ignoreSideEffectTags,\r\n        ...DOMNodeTransforms,\r\n        ...(options.nodeTransforms || [])\r\n      ],\r\n      directiveTransforms: extend(\r\n        {},\r\n        DOMDirectiveTransforms,\r\n        options.directiveTransforms || {}\r\n      ),\r\n      transformHoist: __BROWSER__ ? null : stringifyStatic\r\n    })\r\n  )\r\n}\r\n\r\nexport function parse(template: string, options: ParserOptions = {}): RootNode {\r\n  return baseParse(template, extend({}, parserOptions, options))\r\n}\r\n\r\nexport * from './runtimeHelpers'\r\nexport { transformStyle } from './transforms/transformStyle'\r\nexport { createDOMCompilerError, DOMErrorCodes } from './errors'\r\nexport * from '@vue/compiler-core'\r\n","import {\r\n  DirectiveTransform,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  TO_DISPLAY_STRING,\r\n  createCallExpression,\r\n  getConstantType\r\n} from '@vue/compiler-core'\r\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\r\n\r\nexport const transformVText: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, loc } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_TEXT_NO_EXPRESSION, loc)\r\n    )\r\n  }\r\n  if (node.children.length) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_TEXT_WITH_CHILDREN, loc)\r\n    )\r\n    node.children.length = 0\r\n  }\r\n  return {\r\n    props: [\r\n      createObjectProperty(\r\n        createSimpleExpression(`textContent`, true),\r\n        exp\r\n          ? getConstantType(exp, context) > 0\r\n            ? exp\r\n            : createCallExpression(\r\n                context.helperString(TO_DISPLAY_STRING),\r\n                [exp],\r\n                loc\r\n              )\r\n          : createSimpleExpression('', true)\r\n      )\r\n    ]\r\n  }\r\n}\r\n","import {\r\n  transformModel as baseTransform,\r\n  DirectiveTransform,\r\n  ElementTypes,\r\n  findProp,\r\n  NodeTypes,\r\n  hasDynamicKeyVBind\r\n} from '@vue/compiler-core'\r\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\r\nimport {\r\n  V_MODEL_CHECKBOX,\r\n  V_MODEL_RADIO,\r\n  V_MODEL_SELECT,\r\n  V_MODEL_TEXT,\r\n  V_MODEL_DYNAMIC\r\n} from '../runtimeHelpers'\r\n\r\nexport const transformModel: DirectiveTransform = (dir, node, context) => {\r\n  const baseResult = baseTransform(dir, node, context)\r\n  // base transform has errors OR component v-model (only need props)\r\n  if (!baseResult.props.length || node.tagType === ElementTypes.COMPONENT) {\r\n    return baseResult\r\n  }\r\n\r\n  if (dir.arg) {\r\n    context.onError(\r\n      createDOMCompilerError(\r\n        DOMErrorCodes.X_V_MODEL_ARG_ON_ELEMENT,\r\n        dir.arg.loc\r\n      )\r\n    )\r\n  }\r\n\r\n  function checkDuplicatedValue() {\r\n    const value = findProp(node, 'value')\r\n    if (value) {\r\n      context.onError(\r\n        createDOMCompilerError(\r\n          DOMErrorCodes.X_V_MODEL_UNNECESSARY_VALUE,\r\n          value.loc\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  const { tag } = node\r\n  const isCustomElement = context.isCustomElement(tag)\r\n  if (\r\n    tag === 'input' ||\r\n    tag === 'textarea' ||\r\n    tag === 'select' ||\r\n    isCustomElement\r\n  ) {\r\n    let directiveToUse = V_MODEL_TEXT\r\n    let isInvalidType = false\r\n    if (tag === 'input' || isCustomElement) {\r\n      const type = findProp(node, `type`)\r\n      if (type) {\r\n        if (type.type === NodeTypes.DIRECTIVE) {\r\n          // :type=\"foo\"\r\n          directiveToUse = V_MODEL_DYNAMIC\r\n        } else if (type.value) {\r\n          switch (type.value.content) {\r\n            case 'radio':\r\n              directiveToUse = V_MODEL_RADIO\r\n              break\r\n            case 'checkbox':\r\n              directiveToUse = V_MODEL_CHECKBOX\r\n              break\r\n            case 'file':\r\n              isInvalidType = true\r\n              context.onError(\r\n                createDOMCompilerError(\r\n                  DOMErrorCodes.X_V_MODEL_ON_FILE_INPUT_ELEMENT,\r\n                  dir.loc\r\n                )\r\n              )\r\n              break\r\n            default:\r\n              // text type\r\n              __DEV__ && checkDuplicatedValue()\r\n              break\r\n          }\r\n        }\r\n      } else if (hasDynamicKeyVBind(node)) {\r\n        // element has bindings with dynamic keys, which can possibly contain\r\n        // \"type\".\r\n        directiveToUse = V_MODEL_DYNAMIC\r\n      } else {\r\n        // text type\r\n        __DEV__ && checkDuplicatedValue()\r\n      }\r\n    } else if (tag === 'select') {\r\n      directiveToUse = V_MODEL_SELECT\r\n    } else {\r\n      // textarea\r\n      __DEV__ && checkDuplicatedValue()\r\n    }\r\n    // inject runtime directive\r\n    // by returning the helper symbol via needRuntime\r\n    // the import will replaced a resolveDirective call.\r\n    if (!isInvalidType) {\r\n      baseResult.needRuntime = context.helper(directiveToUse)\r\n    }\r\n  } else {\r\n    context.onError(\r\n      createDOMCompilerError(\r\n        DOMErrorCodes.X_V_MODEL_ON_INVALID_ELEMENT,\r\n        dir.loc\r\n      )\r\n    )\r\n  }\r\n\r\n  // native vmodel doesn't need the `modelValue` props since they are also\r\n  // passed to the runtime as `binding.value`. removing it reduces code size.\r\n  baseResult.props = baseResult.props.filter(\r\n    p =>\r\n      !(\r\n        p.key.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n        p.key.content === 'modelValue'\r\n      )\r\n  )\r\n\r\n  return baseResult\r\n}\r\n","import { DirectiveTransform } from '@vue/compiler-core'\r\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\r\nimport { V_SHOW } from '../runtimeHelpers'\r\n\r\nexport const transformShow: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, loc } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_SHOW_NO_EXPRESSION, loc)\r\n    )\r\n  }\r\n\r\n  return {\r\n    props: [],\r\n    needRuntime: context.helper(V_SHOW)\r\n  }\r\n}\r\n","// This entry is the \"full-build\" that includes both the runtime\r\n// and the compiler, and supports on-the-fly compilation of the template option.\r\nimport { createCompatVue } from './createCompatVue'\r\nimport { compile, CompilerError, CompilerOptions } from '@vue/compiler-dom'\r\nimport { registerRuntimeCompiler, RenderFunction, warn } from '@vue/runtime-dom'\r\nimport { isString, NOOP, generateCodeFrame, extend } from '@vue/shared'\r\nimport { InternalRenderFunction } from 'packages/runtime-core/src/component'\r\nimport * as runtimeDom from '@vue/runtime-dom'\r\nimport {\r\n  DeprecationTypes,\r\n  warnDeprecation\r\n} from '../../runtime-core/src/compat/compatConfig'\r\n\r\nconst compileCache: Record<string, RenderFunction> = Object.create(null)\r\n\r\nfunction compileToFunction(\r\n  template: string | HTMLElement,\r\n  options?: CompilerOptions\r\n): RenderFunction {\r\n  if (!isString(template)) {\r\n    if (template.nodeType) {\r\n      template = template.innerHTML\r\n    } else {\r\n      __DEV__ && warn(`invalid template option: `, template)\r\n      return NOOP\r\n    }\r\n  }\r\n\r\n  const key = template\r\n  const cached = compileCache[key]\r\n  if (cached) {\r\n    return cached\r\n  }\r\n\r\n  if (template[0] === '#') {\r\n    const el = document.querySelector(template)\r\n    if (__DEV__ && !el) {\r\n      warn(`Template element not found or is empty: ${template}`)\r\n    }\r\n    // __UNSAFE__\r\n    // Reason: potential execution of JS expressions in in-DOM template.\r\n    // The user must make sure the in-DOM template is trusted. If it's rendered\r\n    // by the server, the template should not contain any user data.\r\n    template = el ? el.innerHTML : ``\r\n  }\r\n\r\n  if (__DEV__ && !__TEST__ && (!options || !options.whitespace)) {\r\n    warnDeprecation(DeprecationTypes.CONFIG_WHITESPACE, null)\r\n  }\r\n\r\n  const { code } = compile(\r\n    template,\r\n    extend(\r\n      {\r\n        hoistStatic: true,\r\n        whitespace: 'preserve',\r\n        onError: __DEV__ ? onError : undefined,\r\n        onWarn: __DEV__ ? e => onError(e, true) : NOOP\r\n      } as CompilerOptions,\r\n      options\r\n    )\r\n  )\r\n\r\n  function onError(err: CompilerError, asWarning = false) {\r\n    const message = asWarning\r\n      ? err.message\r\n      : `Template compilation error: ${err.message}`\r\n    const codeFrame =\r\n      err.loc &&\r\n      generateCodeFrame(\r\n        template as string,\r\n        err.loc.start.offset,\r\n        err.loc.end.offset\r\n      )\r\n    warn(codeFrame ? `${message}\\n${codeFrame}` : message)\r\n  }\r\n\r\n  // The wildcard import results in a huge object with every export\r\n  // with keys that cannot be mangled, and can be quite heavy size-wise.\r\n  // In the global build we know `Vue` is available globally so we can avoid\r\n  // the wildcard object.\r\n  const render = (\r\n    __GLOBAL__ ? new Function(code)() : new Function('Vue', code)(runtimeDom)\r\n  ) as RenderFunction\r\n\r\n  // mark the function as runtime compiled\r\n  ;(render as InternalRenderFunction)._rc = true\r\n\r\n  return (compileCache[key] = render)\r\n}\r\n\r\nregisterRuntimeCompiler(compileToFunction)\r\n\r\nconst Vue = createCompatVue()\r\nVue.compile = compileToFunction\r\n\r\nexport default Vue\r\n","import Vue from './index'\r\n\r\nexport default Vue\r\nexport * from '@vue/runtime-dom'\r\n\r\nconst { configureCompat } = Vue\r\nexport { configureCompat }\r\n"],"names":["makeMap","str","expectsLowerCase","map","Object","create","list","split","i","length","val","toLowerCase","isGloballyWhitelisted","isSpecialBooleanAttr","includeBooleanAttr","value","normalizeStyle","isArray","res","item","normalized","isString","parseStringStyle","key","isObject","listDelimiterRE","propertyDelimiterRE","cssText","ret","forEach","tmp","trim","normalizeClass","name","normalizeProps","props","class","klass","style","isHTMLTag","isSVGTag","isVoidTag","looseEqual","a","b","aValidType","isDate","bValidType","getTime","isSymbol","equal","looseCompareArrays","keys","aHasKey","hasOwnProperty","bHasKey","String","looseIndexOf","arr","findIndex","toDisplayString","toString","objectToString","isFunction","JSON","stringify","replacer","_key","__v_isRef","isMap","size","entries","reduce","isSet","values","isPlainObject","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","test","isModelListener","startsWith","extend","assign","remove","el","indexOf","splice","prototype","hasOwn","call","Array","toTypeString","isPromise","then","catch","isIntegerKey","parseInt","isReservedProp","isBuiltInDirective","cacheStringFunction","fn","cache","camelizeRE","camelize","replace","_","c","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","slice","toHandlerKey","hasChanged","oldValue","is","invokeArrayFns","fns","arg","def","obj","defineProperty","configurable","enumerable","toNumber","n","parseFloat","isNaN","_globalThis","activeEffectScope","EffectScope","constructor","detached","this","parent","index","scopes","push","run","active","currentEffectScope","on","off","stop","fromParent","l","effects","cleanups","last","pop","effectScope","recordEffectScope","effect","scope","getCurrentScope","onScopeDispose","createDep","dep","Set","w","wasTracked","trackOpBit","newTracked","targetMap","WeakMap","effectTrackDepth","activeEffect","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","ReactiveEffect","scheduler","undefined","lastShouldTrack","shouldTrack","deps","initDepMarkers","cleanupEffect","ptr","delete","finalizeDepMarkers","deferStop","onStop","options","_effect","lazy","runner","bind","trackStack","pauseTracking","resetTracking","track","target","type","depsMap","get","set","Map","trackEffects","debuggerEventExtraInfo","has","add","trigger","newValue","oldTarget","triggerEffects","computed","triggerEffect","allowRecurse","isNonTrackableKeys","builtInSymbols","getOwnPropertyNames","filter","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","createArrayInstrumentations","instrumentations","args","toRaw","apply","isReadonly","shallow","receiver","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","targetIsArray","Reflect","isRef","readonly","reactive","createSetter","isShallow","hadKey","Number","result","mutableHandlers","deleteProperty","ownKeys","readonlyHandlers","shallowReactiveHandlers","shallowReadonlyHandlers","toShallow","getProto","v","getPrototypeOf","rawTarget","rawKey","wrap","toReadonly","toReactive","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","method","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","next","done","createReadonlyMethod","createInstrumentations","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","shallowReadonlyInstrumentations","createInstrumentationGetter","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","shallowReadonlyCollectionHandlers","getTargetType","isExtensible","rawType","targetTypeMap","toRawType","createReactiveObject","shallowReactive","shallowReadonly","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","Proxy","isReactive","isProxy","raw","markRaw","trackRefValue","ref","triggerRefValue","newVal","r","createRef","shallowRef","rawValue","RefImpl","__v_isShallow","_rawValue","_value","useDirectValue","triggerRef","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","CustomRefImpl","factory","_get","_set","customRef","toRefs","object","toRef","ObjectRefImpl","_object","_defaultValue","defaultValue","ComputedRefImpl","getter","_setter","isSSR","_dirty","_cacheable","self","stack","warn","msg","instance","component","appWarnHandler","appContext","config","warnHandler","trace","currentVNode","normalizedStack","vnode","recurseCount","parentInstance","getComponentTrace","callWithErrorHandling","join","formatComponentName","warnArgs","logs","entry","postfix","open","close","formatProps","formatTraceEntry","formatTrace","console","formatProp","err","handleError","callWithAsyncErrorHandling","throwInDev","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","errorHandler","contextVNode","error","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","nextTick","p","queueJob","job","includes","id","start","end","middle","getId","findInsertionIndex","queueFlush","flushJobs","queueCb","cb","activeQueue","pendingQueue","queuePostFlushCb","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","deduped","sort","Infinity","devtools","buffer","setDevtoolsHook","hook","enabled","event","emit","window","HTMLElement","navigator","userAgent","__VUE_DEVTOOLS_HOOK_REPLAY__","newHook","setTimeout","globalCompatConfig","MODE","configureCompat","getCompatConfigForKey","instanceConfig","compatConfig","isCompatEnabled","enableForBuiltIn","__isBuiltIn","rawMode","assertCompatEnabled","Error","softAssertCompatEnabled","checkCompatEnabled","eventRegistryMap","getRegistry","events","e","once","wrapped","vm","cbs","convertLegacyVModelProps","shapeFlag","dynamicProps","comp","model","applyModelFromMixins","mixins","prop","modelValue","m","rawArgs","isUnmounted","modelArg","modifiersKey","number","handlerName","handler","onceHandler","emitted","modelHandler","compatModelEmit","compatInstanceEmit","normalizeEmitsOptions","asMixin","emitsCache","cached","emits","hasExtends","extendEmits","normalizedFromExtend","extends","isEmitListener","currentRenderingInstance","currentScopeId","setCurrentRenderingInstance","prev","__scopeId","_scopeId","pushScopeId","popScopeId","withScopeId","_id","withCtx","ctx","isNonScopedSlot","_n","renderFnWithContext","_d","setBlockTracking","prevInstance","_c","_ns","renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","render","renderCache","data","setupState","inheritAttrs","fallthroughAttrs","proxyToUse","normalizeVNode","getFunctionalFallthrough","blockStack","createVNode","Comment","root","some","filterModelListeners","cloneVNode","cls","dirs","concat","transition","hasPropsChanged","prevProps","nextProps","emitsOptions","nextKeys","updateHOCHostEl","subTree","isSuspense","__isSuspense","Suspense","process","n1","n2","container","anchor","parentComponent","parentSuspense","isSVG","slotScopeIds","optimized","rendererInternals","patch","o","createElement","hiddenContainer","suspense","createSuspenseBoundary","pendingBranch","ssContent","triggerEvent","ssFallback","setActiveBranch","mountSuspense","um","unmount","newBranch","newFallback","activeBranch","isInFallback","isHydrating","isSameVNodeType","pendingId","timeout","fallback","patchSuspense","hydrate","node","hydrateNode","parentNode","document","normalize","children","isSlotChildren","normalizeSuspenseSlot","default","eventListener","move","resume","delayEnter","mode","afterLeave","hasUnresolvedAncestor","fallbackVNode","mountFallback","registerDep","setupRenderEffect","isInPendingSuspense","hydratedEl","asyncDep","asyncSetupResult","suspenseId","asyncResolved","handleSetupResult","placeholder","doRemove","s","block","trackBlock","isBlockTreeEnabled","openBlock","currentBlock","closeBlock","singleChild","singleRoot","child","isVNode","filterSingleRoot","dynamicChildren","queueEffectWithSuspense","branch","provide","currentInstance","provides","parentProvides","inject","treatDefaultAsFactory","arguments","watchEffect","doWatch","watchPostEffect","flush","watchSyncEffect","INITIAL_WATCHER_VALUE","watch","source","immediate","deep","cleanup","forceTrigger","isMultiSource","traverse","onCleanup","baseGetter","queuePostRenderEffect","queuePreFlushCb","instanceWatch","publicThis","createPathGetter","setCurrentInstance","unsetCurrentInstance","path","segments","useTransitionState","state","isMounted","isLeaving","isUnmounting","leavingVNodes","onMounted","onBeforeUnmount","TransitionHookValidator","Function","BaseTransitionImpl","appear","Boolean","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","setup","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","rawProps","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","leavingHooks","update","delayLeave","earlyRemove","delayedLeave","getLeavingNodesForType","_leaveCb","BaseTransition","leavingVNodesCache","callHook","callAsyncHook","every","hooks","beforeEnter","leavingVNode","enter","afterHook","cancelHook","called","_enterCb","cancelled","leave","clone","isKeepAlive","keepComment","parentKey","keyedFragmentCount","Fragment","patchFlag","defineComponent","isAsyncWrapper","__asyncLoader","defineAsyncComponent","loader","loadingComponent","errorComponent","delay","suspensible","onError","userOnError","resolvedComp","pendingRequest","retries","load","thisRequest","reject","__esModule","toStringTag","__asyncResolved","createInnerComp","loaded","delayed","__isKeepAlive","KeepAliveImpl","include","RegExp","exclude","max","sharedContext","current","renderer","_unmount","storageContainer","resetShapeFlag","pruneCache","getComponentName","pruneCacheEntry","activate","isDeactivated","vnodeHook","onVnodeMounted","invokeVNodeHook","deactivate","da","onVnodeUnmounted","matches","pendingCacheKey","cacheSubtree","getInnerChild","onUpdated","rawVNode","cachedVNode","KeepAlive","pattern","onActivated","registerKeepAliveHook","onDeactivated","wrappedHook","__wdc","injectHook","injectToKeepAliveRoot","keepAliveRoot","injected","onUnmounted","prepend","__weh","unshift","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onBeforeUpdate","onServerPrefetch","onRenderTriggered","onRenderTracked","onErrorCaptured","getCompatChildren","walk","vnodes","getCompatListeners","listeners","legacyDirectiveHookMap","beforeMount","mounted","updated","unmounted","mapCompatDirectiveHook","dir","mappedName","mapped","mappedHook","withDirectives","directives","internalInstance","getExposeProxy","bindings","modifiers","invokeDirectiveHook","prevVNode","oldBindings","binding","resolveComponent","maybeSelfReference","resolveAsset","NULL_DYNAMIC_COMPONENT","resolveDynamicComponent","resolveDirective","resolveFilter","warnMissing","selfName","registry","compatH","propsOrChildren","t","is2ndArgArrayChildren","convertLegacySlots","convertLegacyDirectives","convertLegacyProps","skipLegacyRootLevelProps","legacyProps","converted","handlerKey","convertLegacyEventKey","existing","incoming","staticClass","staticStyle","slotName","slot","slotChildren","scopedSlots","normalizeChildren","defineLegacyVNodeProperties","context","getInstance","componentOptions","defineProperties","tag","elm","componentInstance","text","Ctor","propsData","normalizedFunctionalComponentMap","legacySlotProxyHandlers","renderList","renderItem","from","createSlots","dynamicSlots","j","renderSlot","noSlotted","isCE","validSlotContent","ensureValidVNode","rendered","createBlock","scopeId","toHandlers","legacyBindObjectProps","_tag","_asProp","isSync","toObject","camelizedKey","hyphenatedKey","$event","legacyBindObjectListeners","mergeProps","legacyRenderSlot","bindObject","legacyresolveScopedSlots","hasDynamicKeys","$stable","mapKeyToName","staticCacheMap","legacyRenderStatic","staticRenderFns","legacyCheckKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","configKeyCodes","keyCodes","mappedKeyCode","isKeyNotMatch","expect","actual","legacyMarkOnce","tree","legacyBindDynamicKeys","legacyPrependModifier","symbol","getPublicInstance","isStatefulComponent","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","resolveMergedOptions","$forceUpdate","f","$nextTick","$watch","del","$set","$delete","$mount","_compat_mount","$destroy","_compat_destroy","_compatWrapped","$scopedSlots","$on","$once","$off","$children","$listeners","$vnode","_self","_uid","uid","_data","_isMounted","_isDestroyed","$createElement","_o","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","createTextVNode","_e","createCommentVNode","_u","_g","_p","installCompatInstanceProperties","PublicInstanceProxyHandlers","accessCache","normalizedProps","shouldCacheAccess","publicGetter","cssModule","globalProperties","__cssModules","desc","getOwnPropertyDescriptor","descriptor","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","deepMergeData","to","toVal","fromVal","resolveInjections","injectOptions","checkDuplicateProperties","unwrapRef","normalizeInject","opt","h","createWatcher","base","extendsOptions","globalMixins","optionsCache","optionMergeStrategies","resolved","mergeOptions","strats","strat","internalOptionMergeStrats","mergeDataFn","mergeObjectOptions","methods","beforeCreate","mergeAsArray","created","beforeUpdate","beforeDestroy","beforeUnmount","destroyed","activated","deactivated","errorCaptured","serverPrefetch","components","merged","shouldSkipAttr","setFullProps","needCastKeys","rawCastValues","hasAttrsChanged","camelKey","endsWith","rawCurrentProps","castValues","resolvePropValue","isAbsent","hasDefault","propsDefaults","propKey","injections","createPropsDefaultThis","normalizePropsOptions","propsCache","extendProps","normalizedKey","validatePropName","booleanIndex","getTypeIndex","stringIndex","getType","ctor","match","isSameType","expectedTypes","filters","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","singletonApp","singletonCtor","installAppCompatProperties","app","installFilterMethod","_createRoot","_component","hasNoRender","template","emptyRender","createComponentInstance","setupComponent","isCompatRoot","selectorOrEl","querySelector","SVGElement","innerHTML","finishComponentSetup","Element","removeAttribute","setAttribute","_container","__vue_app__","bum","installCompatMount","observable","util","installLegacyAPIs","_context","isRuntimeOnly","compilerOptions","isCustomElement","applySingletonPrototype","applySingletonAppMutations","descriptors","getOwnPropertyDescriptors","methodsToPatch","patched","WeakSet","defineReactive","reactiveVal","defineReactiveSimple","createAppContext","isNativeTag","performance","createAppAPI","rootComponent","rootProps","installedPlugins","_props","_instance","version","use","plugin","install","mixin","directive","mount","rootContainer","isHydrate","setRef","rawRef","oldRawRef","isUnmount","refValue","owner","oldRef","refs","_isString","_isRef","doSet","k","hasMismatch","isSVGContainer","namespaceURI","tagName","isComment","nodeType","createHydrationFunctions","mt","mountComponent","patchProp","createText","nextSibling","insert","createComment","isFragmentStart","onMismatch","handleMismatch","domType","nextNode","Text","Static","needToAdoptContent","staticCount","outerHTML","hydrateFragment","hydrateElement","locateClosingAsyncAnchor","previousSibling","lastChild","hydrateChildren","forcePatchValue","onClick","vnodeHooks","onVnodeBeforeMount","textContent","firstChild","parentVNode","fragmentSlotScopeIds","isFragment","hasChildNodes","_vnode","createRenderer","baseCreateRenderer","createHydrationRenderer","createHydrationFns","globalThis","global","__VUE__","hostInsert","hostRemove","hostPatchProp","hostCreateElement","hostCreateText","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","hostParentNode","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","getNextHostNode","processText","processCommentNode","mountStaticNode","processFragment","processElement","processComponent","internals","mountElement","patchElement","mountChildren","unmountChildren","needCallTransitionHooks","cloneIfMounted","oldProps","newProps","toggleRecurse","onVnodeBeforeUpdate","areChildrenSVG","patchBlockChildren","patchChildren","patchProps","propsToUpdate","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","traverseStaticChildren","updateComponent","initialVNode","compatMountInstance","nextVNode","prevChildren","nextChildren","shouldUpdateComponent","updateComponentPreRender","invalidateJob","bu","u","originNext","nextTree","prevTree","bm","isAsyncWrapperVNode","hydrateSubTree","scopedInitialVNode","rawPrevProps","kebabKey","updateProps","needDeletionCheck","deletionComparisonTarget","updateSlots","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","len","arrI","getSequence","nextIndex","moveType","moveStaticNode","performLeave","shouldInvokeDirs","shouldInvokeVnodeHook","onVnodeBeforeUnmount","unmountComponent","removeFragment","removeStaticNode","performRemove","mc","pc","pbc","createApp","allowed","ch1","ch2","isTeleportDisabled","disabled","isTargetSVG","resolveTarget","select","targetSelector","moveTeleport","targetAnchor","isReorder","Teleport","__isTeleport","mainAnchor","wasDisabled","currentContainer","currentAnchor","nextTarget","targetNode","_lpa","normalizedAsyncComponentMap","convertLegacyComponent","cid","fallbackPromise","rj","loading","convertLegacyAsyncComponent","functional","legacyFn","Func","displayName","convertLegacyFunctionalComponent","disableTracking","setupBlock","createElementBlock","createBaseVNode","__v_isVNode","transformVNodeArgs","transformer","InternalObjectKey","normalizeKey","normalizeRef","ref_key","ref_for","isBlockNode","needFullChildrenNormalization","__v_skip","cloned","__vccOpts","guardReactiveProps","isTeleport","extraProps","mergeRef","mergedProps","flag","createStaticVNode","content","numberOfNodes","asBlock","memo","slotFlag","toMerge","emptyAppContext","exposed","exposeProxy","setupContext","bc","rtg","rtc","sp","ce","compile","installWithProxy","isStateful","initProps","initSlots","setupResult","createSetupContext","resolvedResult","setupStatefulComponent","registerRuntimeCompiler","_compile","_rc","skipOptions","_compatChecked","convertLegacyRenderFn","delimiters","componentCompilerOptions","finalCompilerOptions","dataOptions","computedOptions","watchOptions","provideOptions","renderTracked","renderTriggered","expose","unwrapInjectedRef","methodHandler","registerLifecycleHook","register","_hook","applyOptions","createAttrsProxy","classifyRE","includeInferred","__name","isRoot","__file","inferFromRegistry","getterOrOptions","debugOptions","setter","onlyGetter","_computed","defineProps","defineEmits","defineExpose","withDefaults","defaults","useSlots","getContext","useAttrs","mergeDefaults","createPropsRestProxy","excludedKeys","withAsyncContext","getAwaitable","awaitable","ssrContextKey","useSSRContext","initCustomFormatter","withMemo","isMemoSame","ssrUtils","_resolveFilter","_compatUtils","warnDeprecation","createCompatVue","createSingletonApp","Vue","createCompatApp","_base","extendCache","extendCtor","extendOptions","Super","SubVue","inlineOptions","super","mergeBase","superValue","compatUtils","doc","templateContainer","nodeOps","insertBefore","removeChild","createElementNS","multiple","createTextNode","nodeValue","selector","before","wrapper","appendChild","importantRE","setStyle","setProperty","prefixed","rawName","prefixCache","prefixes","autoPrefix","xlinkNS","patchAttr","removeAttributeNS","setAttributeNS","isEnumeratedAttr","v2CocercedValue","compatCoerceAttr","isBoolean","_getNow","skipTimestampCheck","Date","now","createEvent","timeStamp","ffMatch","cachedNow","reset","addEventListener","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","optionsModifierRE","parseName","invoker","initialValue","attached","originalStop","stopImmediatePropagation","_stopped","patchStopImmediatePropagation","getNow","createInvoker","removeEventListener","nativeOnRE","defineCustomElement","Comp","VueCustomElement","VueElement","initialProps","defineSSRCustomElement","BaseClass","_def","shadowRoot","_createVNode","attachShadow","connectedCallback","_connected","_resolveDef","disconnectedCallback","_resolved","attributes","_setAttr","MutationObserver","mutations","attributeName","observe","styles","hasOptions","rawKeys","numberProps","_numberProps","_setProp","_getProp","_applyStyles","_update","asyncDef","getAttribute","shouldReflect","shouldUpdate","dispatchEvent","CustomEvent","detail","host","css","useCssModule","modules","mod","useCssVars","setVars","setVarsOnVNode","ob","childList","disconnect","vars","setVarsOnNode","Transition","resolveTransitionProps","DOMTransitionPropsValidators","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","TransitionPropsValidators","hasExplicitCallback","baseProps","legacyClassEnabled","legacyEnterFromClass","legacyAppearFromClass","legacyLeaveFromClass","toLegacyClass","durations","NumberOf","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","_isLeaving","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","classList","_vtc","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","propCount","getTransitionInfo","endEvent","ended","onEnd","getComputedStyle","getStyleProperties","transitionDelays","TRANSITION","transitionDurations","transitionTimeout","getTimeout","animationDelays","ANIMATION","animationDurations","animationTimeout","hasTransform","delays","d","toMs","body","offsetHeight","positionMap","newPositionMap","TransitionGroupImpl","moveClass","display","hasCSSTransform","callPendingCbs","recordPosition","movedChildren","applyTranslation","transform","webkitTransform","transitionDuration","_moveCb","propertyName","cssTransitionProps","getBoundingClientRect","TransitionGroup","oldPos","newPos","dx","left","dy","top","getModelAssigner","onCompositionStart","composing","onCompositionEnd","Event","vModelText","_assign","castToNumber","domValue","activeElement","vModelCheckbox","_modelValue","elementValue","getValue","checked","found","filtered","getCheckboxValue","setChecked","vModelRadio","vModelSelect","isSetModel","selectedVal","selected","setSelected","_binding","isMultiple","option","optionValue","selectedIndex","vModelDynamic","callModelHook","resolveDynamicModel","systemModifiers","modifierGuards","stopPropagation","prevent","preventDefault","currentTarget","ctrl","ctrlKey","shift","shiftKey","alt","altKey","meta","metaKey","button","right","exact","withModifiers","guard","keyNames","esc","space","up","down","withKeys","globalKeyCodes","eventKey","keyCode","codes","code","vShow","_vod","setDisplay","rendererOptions","transitionClasses","className","patchClass","isCssString","currentDisplay","patchStyle","shouldSetAsProp","needRemove","patchDOMProp","_trueValue","_falseValue","enabledHydration","ensureRenderer","ensureHydrationRenderer","containerOrSelector","normalizeContainer","createSSRApp","initDirectivesForSSR","wrappedCreateApp","show","defaultOnError","defaultOnWarn","loc","messages","additionalMessage","SyntaxError","FRAGMENT","TELEPORT","SUSPENSE","KEEP_ALIVE","BASE_TRANSITION","OPEN_BLOCK","CREATE_BLOCK","CREATE_ELEMENT_BLOCK","CREATE_VNODE","CREATE_ELEMENT_VNODE","CREATE_COMMENT","CREATE_TEXT","CREATE_STATIC","RESOLVE_COMPONENT","RESOLVE_DYNAMIC_COMPONENT","RESOLVE_DIRECTIVE","RESOLVE_FILTER","WITH_DIRECTIVES","RENDER_LIST","RENDER_SLOT","CREATE_SLOTS","TO_DISPLAY_STRING","MERGE_PROPS","NORMALIZE_CLASS","NORMALIZE_STYLE","NORMALIZE_PROPS","GUARD_REACTIVE_PROPS","TO_HANDLERS","CAMELIZE","CAPITALIZE","TO_HANDLER_KEY","SET_BLOCK_TRACKING","PUSH_SCOPE_ID","POP_SCOPE_ID","WITH_CTX","UNREF","IS_REF","WITH_MEMO","IS_MEMO_SAME","helperNameMap","locStub","line","column","offset","createVNodeCall","isBlock","isComponent","helper","getVNodeBlockHelper","inSSR","getVNodeHelper","createArrayExpression","elements","createObjectExpression","properties","createObjectProperty","createSimpleExpression","isStatic","constType","createCompoundExpression","createCallExpression","callee","createFunctionExpression","params","returns","newline","isSlot","createConditionalExpression","consequent","alternate","isStaticExp","isBuiltInType","expected","isCoreComponent","nonIdentifierRE","isSimpleIdentifier","validFirstIdentCharRE","validIdentCharRE","whitespaceRE","isMemberExpression","stateStack","currentOpenBracketCount","currentOpenParensCount","currentStringType","char","getInnerRange","newLoc","advancePositionWithClone","pos","numberOfCharacters","advancePositionWithMutation","linesCount","lastNewLinePos","charCodeAt","findDir","allowEmpty","exp","findProp","dynamicOnly","isStaticArgOf","isText","isVSlot","isTemplateNode","tagType","isSlotOutlet","ssr","propsHelperSet","getUnnormalizedProps","callPath","injectProp","propsWithInjection","parentCall","first","alreadyExists","propKeyName","toValidAssetId","searchValue","replaceValue","makeBlock","removeHelper","getCompatValue","decodeRE","decodeMap","gt","lt","amp","apos","quot","defaultParserOptions","getNamespace","getTextMode","isPreTag","decodeEntities","rawText","p1","onWarn","comments","baseParse","rawOptions","originalSource","inPre","inVPre","createParserContext","getCursor","helpers","hoists","imports","temps","codegenNode","createRoot","parseChildren","getSelection","ancestors","ns","nodes","isEnd","parseInterpolation","parseComment","parseBogusComment","parseCDATA","advanceBy","parseTag","parseElement","isSpecialTemplateDirective","parseText","pushNode","removedWhitespace","shouldCondense","whitespace","exec","prevIndex","nestedIndex","contentStart","closeIndex","wasInPre","wasInVPre","element","isPreBoundary","isVPreBoundary","isSelfClosing","inlineTemplateProp","find","startsWithEndTagOpen","advanceSpaces","cursor","currentSource","parseAttributes","isBuiltInComponent","attributeNames","attr","parseAttribute","nameSet","quote","isQuoted","endIndex","parseTextData","unexpectedChars","parseAttributeValue","isPropShorthand","dirName","startOffset","lastIndexOf","getNewPosition","valueLoc","innerStart","innerEnd","rawContentLength","rawContent","preTrimContent","endTokens","xs","searchString","hoistStatic","isSingleElementRoot","doNotHoistNode","originalCount","hoistedCount","constantType","getConstantType","hoist","getPatchFlag","getGeneratedPropsConstantType","getNodeProps","vSlot","branches","transformHoist","constantCache","returnType","generatedPropsType","childType","expType","allowHoistedHelperSet","getConstantTypeOfHelperCall","keyType","valueType","createTransformContext","filename","prefixIdentifiers","cacheHandlers","nodeTransforms","directiveTransforms","expressionPlugins","slotted","ssrCssVars","bindingMetadata","inline","isTS","nameMatch","identifiers","vFor","vPre","vOnce","currentNode","childIndex","inVOnce","count","currentCount","helperString","replaceNode","removeNode","removalIndex","onNodeRemoved","addIdentifiers","removeIdentifiers","identifier","hoisted","createCacheExpression","traverseNode","createRootCodegen","exitFns","onExit","nodeRemoved","traverseChildren","createStructuralDirectiveTransform","aliasHelper","generate","ast","sourceMap","optimizeImports","runtimeGlobalName","runtimeModuleName","ssrRuntimeModuleName","indentLevel","pure","indent","deindent","withoutNewLine","repeat","createCodegenContext","onContextCreated","hasHelpers","useWithBlock","VueBinding","genNode","genHoists","genFunctionPreamble","genAssets","preamble","toJSON","assets","resolver","genNodeListAsArray","multilines","genNodeList","comma","genText","genExpression","genInterpolation","genCompoundExpression","genComment","callHelper","genNullableArgs","genVNodeCall","genCallExpression","genExpressionAsPropertyKey","genObjectExpression","genArrayExpression","genFunctionExpression","needNewline","needsParens","isNested","genConditionalExpression","genCacheExpression","transformIf","processCodegen","createIfBranch","ifNode","siblings","sibling","processIf","createCodegenNodeForBranch","parentCondition","getParentCondition","isTemplateIf","condition","userKey","keyIndex","createChildrenCodegenNode","keyProperty","vnodeCall","transformFor","parseResult","parseForExpression","forNode","valueAlias","keyAlias","objectIndexAlias","processFor","renderExp","isTemplate","keyProp","keyExp","isStableFragment","fragmentFlag","childBlock","needFragmentWrapper","slotOutlet","loop","createForLoopParams","forAliasRE","forIteratorRE","stripParensRE","input","inMatch","LHS","RHS","createAliasExpression","valueContent","trimmedOffset","iteratorMatch","keyContent","keyOffset","indexContent","range","memoArgs","createParamsList","defaultFallback","trackSlotScopes","buildClientSlotFn","buildSlots","buildSlotFn","slotsProperties","hasDynamicSlots","onComponentSlot","hasTemplateSlots","hasNamedDefaultSlot","implicitDefaultChildren","seenSlotNames","slotElement","slotDir","slotLoc","slotProps","staticSlotName","slotFunction","vIf","vElse","buildDynamicSlot","conditional","buildDefaultSlotProperty","isNonWhitespaceContent","hasForwardedSlots","directiveImportMap","transformElement","vnodeTag","isExplicitDynamic","isComponentTag","isProp","isDir","builtIn","resolveComponentType","isDynamicComponent","vnodeProps","vnodeChildren","vnodePatchFlag","vnodeDynamicProps","dynamicPropNames","vnodeDirectives","shouldUseBlock","propsBuildResult","buildProps","dirArgs","runtime","trueExpression","modifier","buildDirectiveArgs","hasDynamicTextChild","propsNamesString","stringifyDynamicPropNames","elementLoc","mergeArgs","runtimeDirectives","hasChildren","hasRef","hasClassBinding","hasStyleBinding","hasHydrationEventBinding","hasVnodeHook","analyzePatchFlag","isEventHandler","isVBind","isVOn","dedupeProperties","directiveTransform","needRuntime","propsExpression","classKeyIndex","styleKeyIndex","hasDynamicKey","isHandlerKey","classProp","styleProp","knownProps","transformSlotOutlet","nonNameProps","processSlotOutlet","slotArgs","expectedLen","fnExpRE","transformOn","augmentor","eventName","shouldCache","isMemberExp","isInlineStatement","hasMultipleStatements","transformBind","_node","injectPrefix","prefix","transformText","hasText","callArgs","transformOnce","transformModel","createTransformProps","rawExp","expString","propName","assignmentExp","validDivisionCharRE","transformFilter","rewriteFilter","parseFilter","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","lastFilterIndex","pushFilter","wrapFilter","transformMemo","baseCompile","isModuleMode","V_MODEL_RADIO","V_MODEL_CHECKBOX","V_MODEL_TEXT","V_MODEL_SELECT","V_MODEL_DYNAMIC","V_ON_WITH_MODIFIERS","V_ON_WITH_KEYS","V_SHOW","TRANSITION_GROUP","decoder","TRANSITION$1","getOwnPropertySymbols","isRawTextContainer","parserOptions","asAttr","parseInlineCSS","isEventOptionModifier","isNonKeyModifier","maybeKeyModifier","isKeyboardEvent","transformClick","ignoreSideEffectTags","DOMNodeTransforms","DOMDirectiveTransforms","cloak","html","baseResult","baseTransform","directiveToUse","isInvalidType","hasDynamicKeyVBind","handlerExp","keyModifiers","nonKeyModifiers","eventOptionModifiers","resolveModifiers","modifierPostfix","compileCache","compileToFunction","runtimeDom"],"mappings":"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"}