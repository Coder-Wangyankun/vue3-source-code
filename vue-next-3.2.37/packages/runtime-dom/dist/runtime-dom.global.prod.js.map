{"version":3,"file":"runtime-dom.global.prod.js","sources":["../../shared/src/makeMap.ts","../../shared/src/globalsWhitelist.ts","../../shared/src/domAttrConfig.ts","../../shared/src/normalizeProp.ts","../../shared/src/looseEqual.ts","../../shared/src/toDisplayString.ts","../../shared/src/index.ts","../../reactivity/src/effectScope.ts","../../reactivity/src/dep.ts","../../reactivity/src/effect.ts","../../reactivity/src/baseHandlers.ts","../../reactivity/src/collectionHandlers.ts","../../reactivity/src/reactive.ts","../../reactivity/src/ref.ts","../../reactivity/src/computed.ts","../../runtime-core/src/warning.ts","../../runtime-core/src/errorHandling.ts","../../runtime-core/src/scheduler.ts","../../runtime-core/src/devtools.ts","../../runtime-core/src/componentEmits.ts","../../runtime-core/src/componentRenderContext.ts","../../runtime-core/src/componentRenderUtils.ts","../../runtime-core/src/components/Suspense.ts","../../runtime-core/src/apiInject.ts","../../runtime-core/src/apiWatch.ts","../../runtime-core/src/components/BaseTransition.ts","../../runtime-core/src/apiDefineComponent.ts","../../runtime-core/src/apiAsyncComponent.ts","../../runtime-core/src/components/KeepAlive.ts","../../runtime-core/src/apiLifecycle.ts","../../runtime-core/src/directives.ts","../../runtime-core/src/helpers/resolveAssets.ts","../../runtime-core/src/helpers/renderSlot.ts","../../runtime-core/src/componentPublicInstance.ts","../../runtime-core/src/componentOptions.ts","../../runtime-core/src/componentProps.ts","../../runtime-core/src/componentSlots.ts","../../runtime-core/src/apiCreateApp.ts","../../runtime-core/src/rendererTemplateRef.ts","../../runtime-core/src/hydration.ts","../../runtime-core/src/renderer.ts","../../runtime-core/src/component.ts","../../runtime-core/src/components/Teleport.ts","../../runtime-core/src/vnode.ts","../../runtime-core/src/apiComputed.ts","../../runtime-core/src/apiSetupHelpers.ts","../../runtime-core/src/h.ts","../../runtime-core/src/helpers/useSsrContext.ts","../../runtime-core/src/helpers/withMemo.ts","../../runtime-core/src/index.ts","../src/nodeOps.ts","../src/modules/style.ts","../src/modules/attrs.ts","../src/modules/events.ts","../src/patchProp.ts","../src/modules/class.ts","../src/modules/props.ts","../src/helpers/useCssVars.ts","../src/components/Transition.ts","../src/components/TransitionGroup.ts","../src/directives/vModel.ts","../src/directives/vOn.ts","../src/directives/vShow.ts","../src/index.ts","../src/apiCustomElement.ts","../src/index.ts","../../runtime-core/src/helpers/createSlots.ts","../../runtime-core/src/helpers/renderList.ts","../../runtime-core/src/helpers/toHandlers.ts","../src/helpers/useCssModule.ts"],"sourcesContent":["/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nexport function makeMap(\r\n  str: string,\r\n  expectsLowerCase?: boolean\r\n): (key: string) => boolean {\r\n  const map: Record<string, boolean> = Object.create(null)\r\n  const list: Array<string> = str.split(',')\r\n  for (let i = 0; i < list.length; i++) {\r\n    map[list[i]] = true\r\n  }\r\n  return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val]\r\n}\r\n","import { makeMap } from './makeMap'\r\n\r\nconst GLOBALS_WHITE_LISTED =\r\n  'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n  'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n  'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt'\r\n\r\nexport const isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED)\r\n","import { makeMap } from './makeMap'\r\n\r\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`\r\nexport const isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs)\r\n\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nexport const isBooleanAttr = /*#__PURE__*/ makeMap(\r\n  specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`\r\n)\r\n\r\n/**\r\n * Boolean attributes should be included if the value is truthy or ''.\r\n * e.g. `<select multiple>` compiles to `{ multiple: '' }`\r\n */\r\nexport function includeBooleanAttr(value: unknown): boolean {\r\n  return !!value || value === ''\r\n}\r\n\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/\r\nconst attrValidationCache: Record<string, boolean> = {}\r\n\r\nexport function isSSRSafeAttrName(name: string): boolean {\r\n  if (attrValidationCache.hasOwnProperty(name)) {\r\n    return attrValidationCache[name]\r\n  }\r\n  const isUnsafe = unsafeAttrCharRE.test(name)\r\n  if (isUnsafe) {\r\n    console.error(`unsafe attribute name: ${name}`)\r\n  }\r\n  return (attrValidationCache[name] = !isUnsafe)\r\n}\r\n\r\nexport const propsToAttrMap: Record<string, string | undefined> = {\r\n  acceptCharset: 'accept-charset',\r\n  className: 'class',\r\n  htmlFor: 'for',\r\n  httpEquiv: 'http-equiv'\r\n}\r\n\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nexport const isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(\r\n  `animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`\r\n)\r\n\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nexport const isKnownHtmlAttr = /*#__PURE__*/ makeMap(\r\n  `accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`\r\n)\r\n\r\n/**\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\r\n */\r\nexport const isKnownSvgAttr = /*#__PURE__*/ makeMap(\r\n  `xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,` +\r\n    `arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,` +\r\n    `baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,` +\r\n    `clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,` +\r\n    `color-interpolation-filters,color-profile,color-rendering,` +\r\n    `contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,` +\r\n    `descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,` +\r\n    `dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,` +\r\n    `fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,` +\r\n    `font-family,font-size,font-size-adjust,font-stretch,font-style,` +\r\n    `font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,` +\r\n    `glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,` +\r\n    `gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,` +\r\n    `horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,` +\r\n    `k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,` +\r\n    `lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,` +\r\n    `marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,` +\r\n    `mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,` +\r\n    `name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,` +\r\n    `overflow,overline-position,overline-thickness,panose-1,paint-order,path,` +\r\n    `pathLength,patternContentUnits,patternTransform,patternUnits,ping,` +\r\n    `pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,` +\r\n    `preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,` +\r\n    `rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,` +\r\n    `restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,` +\r\n    `specularConstant,specularExponent,speed,spreadMethod,startOffset,` +\r\n    `stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,` +\r\n    `strikethrough-position,strikethrough-thickness,string,stroke,` +\r\n    `stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,` +\r\n    `systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,` +\r\n    `text-decoration,text-rendering,textLength,to,transform,transform-origin,` +\r\n    `type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,` +\r\n    `unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,` +\r\n    `v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,` +\r\n    `vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,` +\r\n    `writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,` +\r\n    `xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,` +\r\n    `xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`\r\n)\r\n","import { isArray, isString, isObject, hyphenate } from './'\r\nimport { isNoUnitNumericStyleProp } from './domAttrConfig'\r\n\r\nexport type NormalizedStyle = Record<string, string | number>\r\n\r\nexport function normalizeStyle(\r\n  value: unknown\r\n): NormalizedStyle | string | undefined {\r\n  if (isArray(value)) {\r\n    const res: NormalizedStyle = {}\r\n    for (let i = 0; i < value.length; i++) {\r\n      const item = value[i]\r\n      const normalized = isString(item)\r\n        ? parseStringStyle(item)\r\n        : (normalizeStyle(item) as NormalizedStyle)\r\n      if (normalized) {\r\n        for (const key in normalized) {\r\n          res[key] = normalized[key]\r\n        }\r\n      }\r\n    }\r\n    return res\r\n  } else if (isString(value)) {\r\n    return value\r\n  } else if (isObject(value)) {\r\n    return value\r\n  }\r\n}\r\n\r\nconst listDelimiterRE = /;(?![^(]*\\))/g\r\nconst propertyDelimiterRE = /:(.+)/\r\n\r\nexport function parseStringStyle(cssText: string): NormalizedStyle {\r\n  const ret: NormalizedStyle = {}\r\n  cssText.split(listDelimiterRE).forEach(item => {\r\n    if (item) {\r\n      const tmp = item.split(propertyDelimiterRE)\r\n      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim())\r\n    }\r\n  })\r\n  return ret\r\n}\r\n\r\nexport function stringifyStyle(\r\n  styles: NormalizedStyle | string | undefined\r\n): string {\r\n  let ret = ''\r\n  if (!styles || isString(styles)) {\r\n    return ret\r\n  }\r\n  for (const key in styles) {\r\n    const value = styles[key]\r\n    const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key)\r\n    if (\r\n      isString(value) ||\r\n      (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))\r\n    ) {\r\n      // only render valid values\r\n      ret += `${normalizedKey}:${value};`\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\nexport function normalizeClass(value: unknown): string {\r\n  let res = ''\r\n  if (isString(value)) {\r\n    res = value\r\n  } else if (isArray(value)) {\r\n    for (let i = 0; i < value.length; i++) {\r\n      const normalized = normalizeClass(value[i])\r\n      if (normalized) {\r\n        res += normalized + ' '\r\n      }\r\n    }\r\n  } else if (isObject(value)) {\r\n    for (const name in value) {\r\n      if (value[name]) {\r\n        res += name + ' '\r\n      }\r\n    }\r\n  }\r\n  return res.trim()\r\n}\r\n\r\nexport function normalizeProps(props: Record<string, any> | null) {\r\n  if (!props) return null\r\n  let { class: klass, style } = props\r\n  if (klass && !isString(klass)) {\r\n    props.class = normalizeClass(klass)\r\n  }\r\n  if (style) {\r\n    props.style = normalizeStyle(style)\r\n  }\r\n  return props\r\n}\r\n","import { isArray, isDate, isObject, isSymbol } from './'\r\n\r\nfunction looseCompareArrays(a: any[], b: any[]) {\r\n  if (a.length !== b.length) return false\r\n  let equal = true\r\n  for (let i = 0; equal && i < a.length; i++) {\r\n    equal = looseEqual(a[i], b[i])\r\n  }\r\n  return equal\r\n}\r\n\r\nexport function looseEqual(a: any, b: any): boolean {\r\n  if (a === b) return true\r\n  let aValidType = isDate(a)\r\n  let bValidType = isDate(b)\r\n  if (aValidType || bValidType) {\r\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false\r\n  }\r\n  aValidType = isSymbol(a)\r\n  bValidType = isSymbol(b)\r\n  if (aValidType || bValidType) {\r\n    return a === b\r\n  }\r\n  aValidType = isArray(a)\r\n  bValidType = isArray(b)\r\n  if (aValidType || bValidType) {\r\n    return aValidType && bValidType ? looseCompareArrays(a, b) : false\r\n  }\r\n  aValidType = isObject(a)\r\n  bValidType = isObject(b)\r\n  if (aValidType || bValidType) {\r\n    /* istanbul ignore if: this if will probably never be called */\r\n    if (!aValidType || !bValidType) {\r\n      return false\r\n    }\r\n    const aKeysCount = Object.keys(a).length\r\n    const bKeysCount = Object.keys(b).length\r\n    if (aKeysCount !== bKeysCount) {\r\n      return false\r\n    }\r\n    for (const key in a) {\r\n      const aHasKey = a.hasOwnProperty(key)\r\n      const bHasKey = b.hasOwnProperty(key)\r\n      if (\r\n        (aHasKey && !bHasKey) ||\r\n        (!aHasKey && bHasKey) ||\r\n        !looseEqual(a[key], b[key])\r\n      ) {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  return String(a) === String(b)\r\n}\r\n\r\nexport function looseIndexOf(arr: any[], val: any): number {\r\n  return arr.findIndex(item => looseEqual(item, val))\r\n}\r\n","import {\r\n  isArray,\r\n  isMap,\r\n  isObject,\r\n  isFunction,\r\n  isPlainObject,\r\n  isSet,\r\n  objectToString,\r\n  isString\r\n} from './index'\r\n\r\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nexport const toDisplayString = (val: unknown): string => {\r\n  return isString(val)\r\n    ? val\r\n    : val == null\r\n    ? ''\r\n    : isArray(val) ||\r\n      (isObject(val) &&\r\n        (val.toString === objectToString || !isFunction(val.toString)))\r\n    ? JSON.stringify(val, replacer, 2)\r\n    : String(val)\r\n}\r\n\r\nconst replacer = (_key: string, val: any): any => {\r\n  // can't use isRef here since @vue/shared has no deps\r\n  if (val && val.__v_isRef) {\r\n    return replacer(_key, val.value)\r\n  } else if (isMap(val)) {\r\n    return {\r\n      [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n        ;(entries as any)[`${key} =>`] = val\r\n        return entries\r\n      }, {})\r\n    }\r\n  } else if (isSet(val)) {\r\n    return {\r\n      [`Set(${val.size})`]: [...val.values()]\r\n    }\r\n  } else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n    return String(val)\r\n  }\r\n  return val\r\n}\r\n","import { makeMap } from './makeMap'\r\n\r\nexport { makeMap }\r\nexport * from './patchFlags'\r\nexport * from './shapeFlags'\r\nexport * from './slotFlags'\r\nexport * from './globalsWhitelist'\r\nexport * from './codeframe'\r\nexport * from './normalizeProp'\r\nexport * from './domTagConfig'\r\nexport * from './domAttrConfig'\r\nexport * from './escapeHtml'\r\nexport * from './looseEqual'\r\nexport * from './toDisplayString'\r\nexport * from './typeUtils'\r\n\r\nexport const EMPTY_OBJ: { readonly [key: string]: any } = __DEV__\r\n  ? Object.freeze({})\r\n  : {}\r\nexport const EMPTY_ARR = __DEV__ ? Object.freeze([]) : []\r\n\r\nexport const NOOP = () => {}\r\n\r\n/**\r\n * Always return false.\r\n */\r\nexport const NO = () => false\r\n\r\nconst onRE = /^on[^a-z]/\r\nexport const isOn = (key: string) => onRE.test(key)\r\n\r\nexport const isModelListener = (key: string) => key.startsWith('onUpdate:')\r\n\r\nexport const extend = Object.assign\r\n\r\nexport const remove = <T>(arr: T[], el: T) => {\r\n  const i = arr.indexOf(el)\r\n  if (i > -1) {\r\n    arr.splice(i, 1)\r\n  }\r\n}\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty\r\nexport const hasOwn = (\r\n  val: object,\r\n  key: string | symbol\r\n): key is keyof typeof val => hasOwnProperty.call(val, key)\r\n\r\nexport const isArray = Array.isArray\r\nexport const isMap = (val: unknown): val is Map<any, any> =>\r\n  toTypeString(val) === '[object Map]'\r\nexport const isSet = (val: unknown): val is Set<any> =>\r\n  toTypeString(val) === '[object Set]'\r\n\r\nexport const isDate = (val: unknown): val is Date => toTypeString(val) === '[object Date]'\r\nexport const isFunction = (val: unknown): val is Function =>\r\n  typeof val === 'function'\r\nexport const isString = (val: unknown): val is string => typeof val === 'string'\r\nexport const isSymbol = (val: unknown): val is symbol => typeof val === 'symbol'\r\nexport const isObject = (val: unknown): val is Record<any, any> =>\r\n  val !== null && typeof val === 'object'\r\n\r\nexport const isPromise = <T = any>(val: unknown): val is Promise<T> => {\r\n  return isObject(val) && isFunction(val.then) && isFunction(val.catch)\r\n}\r\n\r\nexport const objectToString = Object.prototype.toString\r\nexport const toTypeString = (value: unknown): string =>\r\n  objectToString.call(value)\r\n\r\nexport const toRawType = (value: unknown): string => {\r\n  // extract \"RawType\" from strings like \"[object RawType]\"\r\n  return toTypeString(value).slice(8, -1)\r\n}\r\n\r\nexport const isPlainObject = (val: unknown): val is object =>\r\n  toTypeString(val) === '[object Object]'\r\n\r\nexport const isIntegerKey = (key: unknown) =>\r\n  isString(key) &&\r\n  key !== 'NaN' &&\r\n  key[0] !== '-' &&\r\n  '' + parseInt(key, 10) === key\r\n\r\nexport const isReservedProp = /*#__PURE__*/ makeMap(\r\n  // the leading comma is intentional so empty string \"\" is also included\r\n  ',key,ref,ref_for,ref_key,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted'\r\n)\r\n\r\nexport const isBuiltInDirective = /*#__PURE__*/ makeMap(\r\n  'bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo'\r\n)\r\n\r\nconst cacheStringFunction = <T extends (str: string) => string>(fn: T): T => {\r\n  const cache: Record<string, string> = Object.create(null)\r\n  return ((str: string) => {\r\n    const hit = cache[str]\r\n    return hit || (cache[str] = fn(str))\r\n  }) as any\r\n}\r\n\r\nconst camelizeRE = /-(\\w)/g\r\n/**\r\n * @private\r\n */\r\nexport const camelize = cacheStringFunction((str: string): string => {\r\n  return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''))\r\n})\r\n\r\nconst hyphenateRE = /\\B([A-Z])/g\r\n/**\r\n * @private\r\n */\r\nexport const hyphenate = cacheStringFunction((str: string) =>\r\n  str.replace(hyphenateRE, '-$1').toLowerCase()\r\n)\r\n\r\n/**\r\n * @private\r\n */\r\nexport const capitalize = cacheStringFunction(\r\n  (str: string) => str.charAt(0).toUpperCase() + str.slice(1)\r\n)\r\n\r\n/**\r\n * @private\r\n */\r\nexport const toHandlerKey = cacheStringFunction((str: string) =>\r\n  str ? `on${capitalize(str)}` : ``\r\n)\r\n\r\n// compare whether a value has changed, accounting for NaN.\r\nexport const hasChanged = (value: any, oldValue: any): boolean =>\r\n  !Object.is(value, oldValue)\r\n\r\nexport const invokeArrayFns = (fns: Function[], arg?: any) => {\r\n  for (let i = 0; i < fns.length; i++) {\r\n    fns[i](arg)\r\n  }\r\n}\r\n\r\nexport const def = (obj: object, key: string | symbol, value: any) => {\r\n  Object.defineProperty(obj, key, {\r\n    configurable: true,\r\n    enumerable: false,\r\n    value\r\n  })\r\n}\r\n\r\nexport const toNumber = (val: any): any => {\r\n  const n = parseFloat(val)\r\n  return isNaN(n) ? val : n\r\n}\r\n\r\nlet _globalThis: any\r\nexport const getGlobalThis = (): any => {\r\n  return (\r\n    _globalThis ||\r\n    (_globalThis =\r\n      typeof globalThis !== 'undefined'\r\n        ? globalThis\r\n        : typeof self !== 'undefined'\r\n        ? self\r\n        : typeof window !== 'undefined'\r\n        ? window\r\n        : typeof global !== 'undefined'\r\n        ? global\r\n        : {})\r\n  )\r\n}\r\n\r\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/\r\n\r\nexport function genPropsAccessExp(name: string) {\r\n  return identRE.test(name)\r\n    ? `__props.${name}`\r\n    : `__props[${JSON.stringify(name)}]`\r\n}\r\n","import { ReactiveEffect } from './effect'\r\nimport { warn } from './warning'\r\n\r\nlet activeEffectScope: EffectScope | undefined\r\n\r\nexport class EffectScope {\r\n  /**\r\n   * @internal\r\n   */\r\n  active = true\r\n  /**\r\n   * @internal\r\n   */\r\n  effects: ReactiveEffect[] = []\r\n  /**\r\n   * @internal\r\n   */\r\n  cleanups: (() => void)[] = []\r\n\r\n  /**\r\n   * only assigned by undetached scope\r\n   * @internal\r\n   */\r\n  parent: EffectScope | undefined\r\n  /**\r\n   * record undetached scopes\r\n   * @internal\r\n   */\r\n  scopes: EffectScope[] | undefined\r\n  /**\r\n   * track a child scope's index in its parent's scopes array for optimized\r\n   * removal\r\n   * @internal\r\n   */\r\n  private index: number | undefined\r\n\r\n  constructor(detached = false) {\r\n    if (!detached && activeEffectScope) {\r\n      this.parent = activeEffectScope\r\n      this.index =\r\n        (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(\r\n          this\r\n        ) - 1\r\n    }\r\n  }\r\n\r\n  run<T>(fn: () => T): T | undefined {\r\n    if (this.active) {\r\n      const currentEffectScope = activeEffectScope\r\n      try {\r\n        activeEffectScope = this\r\n        return fn()\r\n      } finally {\r\n        activeEffectScope = currentEffectScope\r\n      }\r\n    } else if (__DEV__) {\r\n      warn(`cannot run an inactive effect scope.`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This should only be called on non-detached scopes\r\n   * @internal\r\n   */\r\n  on() {\r\n    activeEffectScope = this\r\n  }\r\n\r\n  /**\r\n   * This should only be called on non-detached scopes\r\n   * @internal\r\n   */\r\n  off() {\r\n    activeEffectScope = this.parent\r\n  }\r\n\r\n  stop(fromParent?: boolean) {\r\n    if (this.active) {\r\n      let i, l\r\n      for (i = 0, l = this.effects.length; i < l; i++) {\r\n        this.effects[i].stop()\r\n      }\r\n      for (i = 0, l = this.cleanups.length; i < l; i++) {\r\n        this.cleanups[i]()\r\n      }\r\n      if (this.scopes) {\r\n        for (i = 0, l = this.scopes.length; i < l; i++) {\r\n          this.scopes[i].stop(true)\r\n        }\r\n      }\r\n      // nested scope, dereference from parent to avoid memory leaks\r\n      if (this.parent && !fromParent) {\r\n        // optimized O(1) removal\r\n        const last = this.parent.scopes!.pop()\r\n        if (last && last !== this) {\r\n          this.parent.scopes![this.index!] = last\r\n          last.index = this.index!\r\n        }\r\n      }\r\n      this.active = false\r\n    }\r\n  }\r\n}\r\n\r\nexport function effectScope(detached?: boolean) {\r\n  return new EffectScope(detached)\r\n}\r\n\r\nexport function recordEffectScope(\r\n  effect: ReactiveEffect,\r\n  scope: EffectScope | undefined = activeEffectScope\r\n) {\r\n  if (scope && scope.active) {\r\n    scope.effects.push(effect)\r\n  }\r\n}\r\n\r\nexport function getCurrentScope() {\r\n  return activeEffectScope\r\n}\r\n\r\nexport function onScopeDispose(fn: () => void) {\r\n  if (activeEffectScope) {\r\n    activeEffectScope.cleanups.push(fn)\r\n  } else if (__DEV__) {\r\n    warn(\r\n      `onScopeDispose() is called when there is no active effect scope` +\r\n        ` to be associated with.`\r\n    )\r\n  }\r\n}\r\n","import { ReactiveEffect, trackOpBit } from './effect'\r\n\r\nexport type Dep = Set<ReactiveEffect> & TrackedMarkers\r\n\r\n/**\r\n * wasTracked and newTracked maintain the status for several levels of effect\r\n * tracking recursion. One bit per level is used to define whether the dependency\r\n * was/is tracked.\r\n */\r\ntype TrackedMarkers = {\r\n  /**\r\n   * wasTracked\r\n   */\r\n  w: number\r\n  /**\r\n   * newTracked\r\n   */\r\n  n: number\r\n}\r\n\r\nexport const createDep = (effects?: ReactiveEffect[]): Dep => {\r\n  const dep = new Set<ReactiveEffect>(effects) as Dep\r\n  dep.w = 0\r\n  dep.n = 0\r\n  return dep\r\n}\r\n\r\nexport const wasTracked = (dep: Dep): boolean => (dep.w & trackOpBit) > 0\r\n\r\nexport const newTracked = (dep: Dep): boolean => (dep.n & trackOpBit) > 0\r\n\r\nexport const initDepMarkers = ({ deps }: ReactiveEffect) => {\r\n  if (deps.length) {\r\n    for (let i = 0; i < deps.length; i++) {\r\n      deps[i].w |= trackOpBit // set was tracked\r\n    }\r\n  }\r\n}\r\n\r\nexport const finalizeDepMarkers = (effect: ReactiveEffect) => {\r\n  const { deps } = effect\r\n  if (deps.length) {\r\n    let ptr = 0\r\n    for (let i = 0; i < deps.length; i++) {\r\n      const dep = deps[i]\r\n      if (wasTracked(dep) && !newTracked(dep)) {\r\n        dep.delete(effect)\r\n      } else {\r\n        deps[ptr++] = dep\r\n      }\r\n      // clear bits\r\n      dep.w &= ~trackOpBit\r\n      dep.n &= ~trackOpBit\r\n    }\r\n    deps.length = ptr\r\n  }\r\n}\r\n","import { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport { extend, isArray, isIntegerKey, isMap } from '@vue/shared'\r\nimport { EffectScope, recordEffectScope } from './effectScope'\r\nimport {\r\n  createDep,\r\n  Dep,\r\n  finalizeDepMarkers,\r\n  initDepMarkers,\r\n  newTracked,\r\n  wasTracked\r\n} from './dep'\r\nimport { ComputedRefImpl } from './computed'\r\n\r\n// The main WeakMap that stores {target -> key -> dep} connections.\r\n// Conceptually, it's easier to think of a dependency as a Dep class\r\n// which maintains a Set of subscribers, but we simply store them as\r\n// raw Sets to reduce memory overhead.\r\ntype KeyToDepMap = Map<any, Dep>\r\nconst targetMap = new WeakMap<any, KeyToDepMap>()\r\n\r\n// The number of effects currently being tracked recursively.\r\nlet effectTrackDepth = 0\r\n\r\nexport let trackOpBit = 1\r\n\r\n/**\r\n * The bitwise track markers support at most 30 levels of recursion.\r\n * This value is chosen to enable modern JS engines to use a SMI on all platforms.\r\n * When recursion depth is greater, fall back to using a full cleanup.\r\n */\r\nconst maxMarkerBits = 30\r\n\r\nexport type EffectScheduler = (...args: any[]) => any\r\n\r\nexport type DebuggerEvent = {\r\n  effect: ReactiveEffect\r\n} & DebuggerEventExtraInfo\r\n\r\nexport type DebuggerEventExtraInfo = {\r\n  target: object\r\n  type: TrackOpTypes | TriggerOpTypes\r\n  key: any\r\n  newValue?: any\r\n  oldValue?: any\r\n  oldTarget?: Map<any, any> | Set<any>\r\n}\r\n\r\nexport let activeEffect: ReactiveEffect | undefined\r\n\r\nexport const ITERATE_KEY = Symbol(__DEV__ ? 'iterate' : '')\r\nexport const MAP_KEY_ITERATE_KEY = Symbol(__DEV__ ? 'Map key iterate' : '')\r\n\r\nexport class ReactiveEffect<T = any> {\r\n  active = true\r\n  deps: Dep[] = []\r\n  parent: ReactiveEffect | undefined = undefined\r\n\r\n  /**\r\n   * Can be attached after creation\r\n   * @internal\r\n   */\r\n  computed?: ComputedRefImpl<T>\r\n  /**\r\n   * @internal\r\n   */\r\n  allowRecurse?: boolean\r\n  /**\r\n   * @internal\r\n   */\r\n  private deferStop?: boolean\r\n\r\n  onStop?: () => void\r\n  // dev only\r\n  onTrack?: (event: DebuggerEvent) => void\r\n  // dev only\r\n  onTrigger?: (event: DebuggerEvent) => void\r\n\r\n  constructor(\r\n    public fn: () => T,\r\n    public scheduler: EffectScheduler | null = null,\r\n    scope?: EffectScope\r\n  ) {\r\n    recordEffectScope(this, scope)\r\n  }\r\n\r\n  run() {\r\n    if (!this.active) {\r\n      return this.fn()\r\n    }\r\n    let parent: ReactiveEffect | undefined = activeEffect\r\n    let lastShouldTrack = shouldTrack\r\n    while (parent) {\r\n      if (parent === this) {\r\n        return\r\n      }\r\n      parent = parent.parent\r\n    }\r\n    try {\r\n      this.parent = activeEffect\r\n      activeEffect = this\r\n      shouldTrack = true\r\n\r\n      trackOpBit = 1 << ++effectTrackDepth\r\n\r\n      if (effectTrackDepth <= maxMarkerBits) {\r\n        initDepMarkers(this)\r\n      } else {\r\n        cleanupEffect(this)\r\n      }\r\n      return this.fn()\r\n    } finally {\r\n      if (effectTrackDepth <= maxMarkerBits) {\r\n        finalizeDepMarkers(this)\r\n      }\r\n\r\n      trackOpBit = 1 << --effectTrackDepth\r\n\r\n      activeEffect = this.parent\r\n      shouldTrack = lastShouldTrack\r\n      this.parent = undefined\r\n\r\n      if (this.deferStop) {\r\n        this.stop()\r\n      }\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    // stopped while running itself - defer the cleanup\r\n    if (activeEffect === this) {\r\n      this.deferStop = true\r\n    } else if (this.active) {\r\n      cleanupEffect(this)\r\n      if (this.onStop) {\r\n        this.onStop()\r\n      }\r\n      this.active = false\r\n    }\r\n  }\r\n}\r\n\r\nfunction cleanupEffect(effect: ReactiveEffect) {\r\n  const { deps } = effect\r\n  if (deps.length) {\r\n    for (let i = 0; i < deps.length; i++) {\r\n      deps[i].delete(effect)\r\n    }\r\n    deps.length = 0\r\n  }\r\n}\r\n\r\nexport interface DebuggerOptions {\r\n  onTrack?: (event: DebuggerEvent) => void\r\n  onTrigger?: (event: DebuggerEvent) => void\r\n}\r\n\r\nexport interface ReactiveEffectOptions extends DebuggerOptions {\r\n  lazy?: boolean\r\n  scheduler?: EffectScheduler\r\n  scope?: EffectScope\r\n  allowRecurse?: boolean\r\n  onStop?: () => void\r\n}\r\n\r\nexport interface ReactiveEffectRunner<T = any> {\r\n  (): T\r\n  effect: ReactiveEffect\r\n}\r\n\r\nexport function effect<T = any>(\r\n  fn: () => T,\r\n  options?: ReactiveEffectOptions\r\n): ReactiveEffectRunner {\r\n  if ((fn as ReactiveEffectRunner).effect) {\r\n    fn = (fn as ReactiveEffectRunner).effect.fn\r\n  }\r\n\r\n  const _effect = new ReactiveEffect(fn)\r\n  if (options) {\r\n    extend(_effect, options)\r\n    if (options.scope) recordEffectScope(_effect, options.scope)\r\n  }\r\n  if (!options || !options.lazy) {\r\n    _effect.run()\r\n  }\r\n  const runner = _effect.run.bind(_effect) as ReactiveEffectRunner\r\n  runner.effect = _effect\r\n  return runner\r\n}\r\n\r\nexport function stop(runner: ReactiveEffectRunner) {\r\n  runner.effect.stop()\r\n}\r\n\r\nexport let shouldTrack = true\r\nconst trackStack: boolean[] = []\r\n\r\nexport function pauseTracking() {\r\n  trackStack.push(shouldTrack)\r\n  shouldTrack = false\r\n}\r\n\r\nexport function enableTracking() {\r\n  trackStack.push(shouldTrack)\r\n  shouldTrack = true\r\n}\r\n\r\nexport function resetTracking() {\r\n  const last = trackStack.pop()\r\n  shouldTrack = last === undefined ? true : last\r\n}\r\n\r\nexport function track(target: object, type: TrackOpTypes, key: unknown) {\r\n  if (shouldTrack && activeEffect) {\r\n    let depsMap = targetMap.get(target)\r\n    if (!depsMap) {\r\n      targetMap.set(target, (depsMap = new Map()))\r\n    }\r\n    let dep = depsMap.get(key)\r\n    if (!dep) {\r\n      depsMap.set(key, (dep = createDep()))\r\n    }\r\n\r\n    const eventInfo = __DEV__\r\n      ? { effect: activeEffect, target, type, key }\r\n      : undefined\r\n\r\n    trackEffects(dep, eventInfo)\r\n  }\r\n}\r\n\r\nexport function trackEffects(\r\n  dep: Dep,\r\n  debuggerEventExtraInfo?: DebuggerEventExtraInfo\r\n) {\r\n  let shouldTrack = false\r\n  if (effectTrackDepth <= maxMarkerBits) {\r\n    if (!newTracked(dep)) {\r\n      dep.n |= trackOpBit // set newly tracked\r\n      shouldTrack = !wasTracked(dep)\r\n    }\r\n  } else {\r\n    // Full cleanup mode.\r\n    shouldTrack = !dep.has(activeEffect!)\r\n  }\r\n\r\n  if (shouldTrack) {\r\n    dep.add(activeEffect!)\r\n    activeEffect!.deps.push(dep)\r\n    if (__DEV__ && activeEffect!.onTrack) {\r\n      activeEffect!.onTrack({\r\n        effect: activeEffect!,\r\n        ...debuggerEventExtraInfo!\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport function trigger(\r\n  target: object,\r\n  type: TriggerOpTypes,\r\n  key?: unknown,\r\n  newValue?: unknown,\r\n  oldValue?: unknown,\r\n  oldTarget?: Map<unknown, unknown> | Set<unknown>\r\n) {\r\n  const depsMap = targetMap.get(target)\r\n  if (!depsMap) {\r\n    // never been tracked\r\n    return\r\n  }\r\n\r\n  let deps: (Dep | undefined)[] = []\r\n  if (type === TriggerOpTypes.CLEAR) {\r\n    // collection being cleared\r\n    // trigger all effects for target\r\n    deps = [...depsMap.values()]\r\n  } else if (key === 'length' && isArray(target)) {\r\n    depsMap.forEach((dep, key) => {\r\n      if (key === 'length' || key >= (newValue as number)) {\r\n        deps.push(dep)\r\n      }\r\n    })\r\n  } else {\r\n    // schedule runs for SET | ADD | DELETE\r\n    if (key !== void 0) {\r\n      deps.push(depsMap.get(key))\r\n    }\r\n\r\n    // also run for iteration key on ADD | DELETE | Map.SET\r\n    switch (type) {\r\n      case TriggerOpTypes.ADD:\r\n        if (!isArray(target)) {\r\n          deps.push(depsMap.get(ITERATE_KEY))\r\n          if (isMap(target)) {\r\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY))\r\n          }\r\n        } else if (isIntegerKey(key)) {\r\n          // new index added to array -> length changes\r\n          deps.push(depsMap.get('length'))\r\n        }\r\n        break\r\n      case TriggerOpTypes.DELETE:\r\n        if (!isArray(target)) {\r\n          deps.push(depsMap.get(ITERATE_KEY))\r\n          if (isMap(target)) {\r\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY))\r\n          }\r\n        }\r\n        break\r\n      case TriggerOpTypes.SET:\r\n        if (isMap(target)) {\r\n          deps.push(depsMap.get(ITERATE_KEY))\r\n        }\r\n        break\r\n    }\r\n  }\r\n\r\n  const eventInfo = __DEV__\r\n    ? { target, type, key, newValue, oldValue, oldTarget }\r\n    : undefined\r\n\r\n  if (deps.length === 1) {\r\n    if (deps[0]) {\r\n      if (__DEV__) {\r\n        triggerEffects(deps[0], eventInfo)\r\n      } else {\r\n        triggerEffects(deps[0])\r\n      }\r\n    }\r\n  } else {\r\n    const effects: ReactiveEffect[] = []\r\n    for (const dep of deps) {\r\n      if (dep) {\r\n        effects.push(...dep)\r\n      }\r\n    }\r\n    if (__DEV__) {\r\n      triggerEffects(createDep(effects), eventInfo)\r\n    } else {\r\n      triggerEffects(createDep(effects))\r\n    }\r\n  }\r\n}\r\n\r\nexport function triggerEffects(\r\n  dep: Dep | ReactiveEffect[],\r\n  debuggerEventExtraInfo?: DebuggerEventExtraInfo\r\n) {\r\n  // spread into array for stabilization\r\n  const effects = isArray(dep) ? dep : [...dep]\r\n  for (const effect of effects) {\r\n    if (effect.computed) {\r\n      triggerEffect(effect, debuggerEventExtraInfo)\r\n    }\r\n  }\r\n  for (const effect of effects) {\r\n    if (!effect.computed) {\r\n      triggerEffect(effect, debuggerEventExtraInfo)\r\n    }\r\n  }\r\n}\r\n\r\nfunction triggerEffect(\r\n  effect: ReactiveEffect,\r\n  debuggerEventExtraInfo?: DebuggerEventExtraInfo\r\n) {\r\n  if (effect !== activeEffect || effect.allowRecurse) {\r\n    if (__DEV__ && effect.onTrigger) {\r\n      effect.onTrigger(extend({ effect }, debuggerEventExtraInfo))\r\n    }\r\n    if (effect.scheduler) {\r\n      effect.scheduler()\r\n    } else {\r\n      effect.run()\r\n    }\r\n  }\r\n}\r\n","import {\r\n  reactive,\r\n  readonly,\r\n  toRaw,\r\n  ReactiveFlags,\r\n  Target,\r\n  readonlyMap,\r\n  reactiveMap,\r\n  shallowReactiveMap,\r\n  shallowReadonlyMap,\r\n  isReadonly,\r\n  isShallow\r\n} from './reactive'\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport {\r\n  track,\r\n  trigger,\r\n  ITERATE_KEY,\r\n  pauseTracking,\r\n  resetTracking\r\n} from './effect'\r\nimport {\r\n  isObject,\r\n  hasOwn,\r\n  isSymbol,\r\n  hasChanged,\r\n  isArray,\r\n  isIntegerKey,\r\n  extend,\r\n  makeMap\r\n} from '@vue/shared'\r\nimport { isRef } from './ref'\r\nimport { warn } from './warning'\r\n\r\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`)\r\n\r\nconst builtInSymbols = new Set(\r\n  /*#__PURE__*/\r\n  Object.getOwnPropertyNames(Symbol)\r\n    // ios10.x Object.getOwnPropertyNames(Symbol) can enumerate 'arguments' and 'caller'\r\n    // but accessing them on Symbol leads to TypeError because Symbol is a strict mode\r\n    // function\r\n    .filter(key => key !== 'arguments' && key !== 'caller')\r\n    .map(key => (Symbol as any)[key])\r\n    .filter(isSymbol)\r\n)\r\n\r\nconst get = /*#__PURE__*/ createGetter()\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true)\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true)\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true)\r\n\r\nconst arrayInstrumentations = /*#__PURE__*/ createArrayInstrumentations()\r\n\r\nfunction createArrayInstrumentations() {\r\n  const instrumentations: Record<string, Function> = {}\r\n  // instrument identity-sensitive Array methods to account for possible reactive\r\n  // values\r\n  ;(['includes', 'indexOf', 'lastIndexOf'] as const).forEach(key => {\r\n    instrumentations[key] = function (this: unknown[], ...args: unknown[]) {\r\n      const arr = toRaw(this) as any\r\n      for (let i = 0, l = this.length; i < l; i++) {\r\n        track(arr, TrackOpTypes.GET, i + '')\r\n      }\r\n      // we run the method using the original args first (which may be reactive)\r\n      const res = arr[key](...args)\r\n      if (res === -1 || res === false) {\r\n        // if that didn't work, run it again using raw values.\r\n        return arr[key](...args.map(toRaw))\r\n      } else {\r\n        return res\r\n      }\r\n    }\r\n  })\r\n  // instrument length-altering mutation methods to avoid length being tracked\r\n  // which leads to infinite loops in some cases (#2137)\r\n  ;(['push', 'pop', 'shift', 'unshift', 'splice'] as const).forEach(key => {\r\n    instrumentations[key] = function (this: unknown[], ...args: unknown[]) {\r\n      pauseTracking()\r\n      const res = (toRaw(this) as any)[key].apply(this, args)\r\n      resetTracking()\r\n      return res\r\n    }\r\n  })\r\n  return instrumentations\r\n}\r\n\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n  return function get(target: Target, key: string | symbol, receiver: object) {\r\n    if (key === ReactiveFlags.IS_REACTIVE) {\r\n      return !isReadonly\r\n    } else if (key === ReactiveFlags.IS_READONLY) {\r\n      return isReadonly\r\n    } else if (key === ReactiveFlags.IS_SHALLOW) {\r\n      return shallow\r\n    } else if (\r\n      key === ReactiveFlags.RAW &&\r\n      receiver ===\r\n        (isReadonly\r\n          ? shallow\r\n            ? shallowReadonlyMap\r\n            : readonlyMap\r\n          : shallow\r\n          ? shallowReactiveMap\r\n          : reactiveMap\r\n        ).get(target)\r\n    ) {\r\n      return target\r\n    }\r\n\r\n    const targetIsArray = isArray(target)\r\n\r\n    if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n      return Reflect.get(arrayInstrumentations, key, receiver)\r\n    }\r\n\r\n    const res = Reflect.get(target, key, receiver)\r\n\r\n    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\r\n      return res\r\n    }\r\n\r\n    if (!isReadonly) {\r\n      track(target, TrackOpTypes.GET, key)\r\n    }\r\n\r\n    if (shallow) {\r\n      return res\r\n    }\r\n\r\n    if (isRef(res)) {\r\n      // ref unwrapping - skip unwrap for Array + integer key.\r\n      return targetIsArray && isIntegerKey(key) ? res : res.value\r\n    }\r\n\r\n    if (isObject(res)) {\r\n      // Convert returned value into a proxy as well. we do the isObject check\r\n      // here to avoid invalid value warning. Also need to lazy access readonly\r\n      // and reactive here to avoid circular dependency.\r\n      return isReadonly ? readonly(res) : reactive(res)\r\n    }\r\n\r\n    return res\r\n  }\r\n}\r\n\r\nconst set = /*#__PURE__*/ createSetter()\r\nconst shallowSet = /*#__PURE__*/ createSetter(true)\r\n\r\nfunction createSetter(shallow = false) {\r\n  return function set(\r\n    target: object,\r\n    key: string | symbol,\r\n    value: unknown,\r\n    receiver: object\r\n  ): boolean {\r\n    let oldValue = (target as any)[key]\r\n    if (isReadonly(oldValue) && isRef(oldValue) && !isRef(value)) {\r\n      return false\r\n    }\r\n    if (!shallow) {\r\n      if (!isShallow(value) && !isReadonly(value)) {\r\n        oldValue = toRaw(oldValue)\r\n        value = toRaw(value)\r\n      }\r\n      if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n        oldValue.value = value\r\n        return true\r\n      }\r\n    } else {\r\n      // in shallow mode, objects are set as-is regardless of reactive or not\r\n    }\r\n\r\n    const hadKey =\r\n      isArray(target) && isIntegerKey(key)\r\n        ? Number(key) < target.length\r\n        : hasOwn(target, key)\r\n    const result = Reflect.set(target, key, value, receiver)\r\n    // don't trigger if target is something up in the prototype chain of original\r\n    if (target === toRaw(receiver)) {\r\n      if (!hadKey) {\r\n        trigger(target, TriggerOpTypes.ADD, key, value)\r\n      } else if (hasChanged(value, oldValue)) {\r\n        trigger(target, TriggerOpTypes.SET, key, value, oldValue)\r\n      }\r\n    }\r\n    return result\r\n  }\r\n}\r\n\r\nfunction deleteProperty(target: object, key: string | symbol): boolean {\r\n  const hadKey = hasOwn(target, key)\r\n  const oldValue = (target as any)[key]\r\n  const result = Reflect.deleteProperty(target, key)\r\n  if (result && hadKey) {\r\n    trigger(target, TriggerOpTypes.DELETE, key, undefined, oldValue)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction has(target: object, key: string | symbol): boolean {\r\n  const result = Reflect.has(target, key)\r\n  if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n    track(target, TrackOpTypes.HAS, key)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction ownKeys(target: object): (string | symbol)[] {\r\n  track(target, TrackOpTypes.ITERATE, isArray(target) ? 'length' : ITERATE_KEY)\r\n  return Reflect.ownKeys(target)\r\n}\r\n\r\nexport const mutableHandlers: ProxyHandler<object> = {\r\n  get,\r\n  set,\r\n  deleteProperty,\r\n  has,\r\n  ownKeys\r\n}\r\n\r\nexport const readonlyHandlers: ProxyHandler<object> = {\r\n  get: readonlyGet,\r\n  set(target, key) {\r\n    if (__DEV__) {\r\n      warn(\r\n        `Set operation on key \"${String(key)}\" failed: target is readonly.`,\r\n        target\r\n      )\r\n    }\r\n    return true\r\n  },\r\n  deleteProperty(target, key) {\r\n    if (__DEV__) {\r\n      warn(\r\n        `Delete operation on key \"${String(key)}\" failed: target is readonly.`,\r\n        target\r\n      )\r\n    }\r\n    return true\r\n  }\r\n}\r\n\r\nexport const shallowReactiveHandlers = /*#__PURE__*/ extend(\r\n  {},\r\n  mutableHandlers,\r\n  {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n  }\r\n)\r\n\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nexport const shallowReadonlyHandlers = /*#__PURE__*/ extend(\r\n  {},\r\n  readonlyHandlers,\r\n  {\r\n    get: shallowReadonlyGet\r\n  }\r\n)\r\n","import { toRaw, ReactiveFlags, toReactive, toReadonly } from './reactive'\r\nimport { track, trigger, ITERATE_KEY, MAP_KEY_ITERATE_KEY } from './effect'\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport { capitalize, hasOwn, hasChanged, toRawType, isMap } from '@vue/shared'\r\n\r\nexport type CollectionTypes = IterableCollections | WeakCollections\r\n\r\ntype IterableCollections = Map<any, any> | Set<any>\r\ntype WeakCollections = WeakMap<any, any> | WeakSet<any>\r\ntype MapTypes = Map<any, any> | WeakMap<any, any>\r\ntype SetTypes = Set<any> | WeakSet<any>\r\n\r\nconst toShallow = <T extends unknown>(value: T): T => value\r\n\r\nconst getProto = <T extends CollectionTypes>(v: T): any =>\r\n  Reflect.getPrototypeOf(v)\r\n\r\nfunction get(\r\n  target: MapTypes,\r\n  key: unknown,\r\n  isReadonly = false,\r\n  isShallow = false\r\n) {\r\n  // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n  // of the value\r\n  target = (target as any)[ReactiveFlags.RAW]\r\n  const rawTarget = toRaw(target)\r\n  const rawKey = toRaw(key)\r\n  if (!isReadonly) {\r\n    if (key !== rawKey) {\r\n      track(rawTarget, TrackOpTypes.GET, key)\r\n    }\r\n    track(rawTarget, TrackOpTypes.GET, rawKey)\r\n  }\r\n  const { has } = getProto(rawTarget)\r\n  const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\r\n  if (has.call(rawTarget, key)) {\r\n    return wrap(target.get(key))\r\n  } else if (has.call(rawTarget, rawKey)) {\r\n    return wrap(target.get(rawKey))\r\n  } else if (target !== rawTarget) {\r\n    // #3602 readonly(reactive(Map))\r\n    // ensure that the nested reactive `Map` can do tracking for itself\r\n    target.get(key)\r\n  }\r\n}\r\n\r\nfunction has(this: CollectionTypes, key: unknown, isReadonly = false): boolean {\r\n  const target = (this as any)[ReactiveFlags.RAW]\r\n  const rawTarget = toRaw(target)\r\n  const rawKey = toRaw(key)\r\n  if (!isReadonly) {\r\n    if (key !== rawKey) {\r\n      track(rawTarget, TrackOpTypes.HAS, key)\r\n    }\r\n    track(rawTarget, TrackOpTypes.HAS, rawKey)\r\n  }\r\n  return key === rawKey\r\n    ? target.has(key)\r\n    : target.has(key) || target.has(rawKey)\r\n}\r\n\r\nfunction size(target: IterableCollections, isReadonly = false) {\r\n  target = (target as any)[ReactiveFlags.RAW]\r\n  !isReadonly && track(toRaw(target), TrackOpTypes.ITERATE, ITERATE_KEY)\r\n  return Reflect.get(target, 'size', target)\r\n}\r\n\r\nfunction add(this: SetTypes, value: unknown) {\r\n  value = toRaw(value)\r\n  const target = toRaw(this)\r\n  const proto = getProto(target)\r\n  const hadKey = proto.has.call(target, value)\r\n  if (!hadKey) {\r\n    target.add(value)\r\n    trigger(target, TriggerOpTypes.ADD, value, value)\r\n  }\r\n  return this\r\n}\r\n\r\nfunction set(this: MapTypes, key: unknown, value: unknown) {\r\n  value = toRaw(value)\r\n  const target = toRaw(this)\r\n  const { has, get } = getProto(target)\r\n\r\n  let hadKey = has.call(target, key)\r\n  if (!hadKey) {\r\n    key = toRaw(key)\r\n    hadKey = has.call(target, key)\r\n  } else if (__DEV__) {\r\n    checkIdentityKeys(target, has, key)\r\n  }\r\n\r\n  const oldValue = get.call(target, key)\r\n  target.set(key, value)\r\n  if (!hadKey) {\r\n    trigger(target, TriggerOpTypes.ADD, key, value)\r\n  } else if (hasChanged(value, oldValue)) {\r\n    trigger(target, TriggerOpTypes.SET, key, value, oldValue)\r\n  }\r\n  return this\r\n}\r\n\r\nfunction deleteEntry(this: CollectionTypes, key: unknown) {\r\n  const target = toRaw(this)\r\n  const { has, get } = getProto(target)\r\n  let hadKey = has.call(target, key)\r\n  if (!hadKey) {\r\n    key = toRaw(key)\r\n    hadKey = has.call(target, key)\r\n  } else if (__DEV__) {\r\n    checkIdentityKeys(target, has, key)\r\n  }\r\n\r\n  const oldValue = get ? get.call(target, key) : undefined\r\n  // forward the operation before queueing reactions\r\n  const result = target.delete(key)\r\n  if (hadKey) {\r\n    trigger(target, TriggerOpTypes.DELETE, key, undefined, oldValue)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction clear(this: IterableCollections) {\r\n  const target = toRaw(this)\r\n  const hadItems = target.size !== 0\r\n  const oldTarget = __DEV__\r\n    ? isMap(target)\r\n      ? new Map(target)\r\n      : new Set(target)\r\n    : undefined\r\n  // forward the operation before queueing reactions\r\n  const result = target.clear()\r\n  if (hadItems) {\r\n    trigger(target, TriggerOpTypes.CLEAR, undefined, undefined, oldTarget)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction createForEach(isReadonly: boolean, isShallow: boolean) {\r\n  return function forEach(\r\n    this: IterableCollections,\r\n    callback: Function,\r\n    thisArg?: unknown\r\n  ) {\r\n    const observed = this as any\r\n    const target = observed[ReactiveFlags.RAW]\r\n    const rawTarget = toRaw(target)\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\r\n    !isReadonly && track(rawTarget, TrackOpTypes.ITERATE, ITERATE_KEY)\r\n    return target.forEach((value: unknown, key: unknown) => {\r\n      // important: make sure the callback is\r\n      // 1. invoked with the reactive map as `this` and 3rd arg\r\n      // 2. the value received should be a corresponding reactive/readonly.\r\n      return callback.call(thisArg, wrap(value), wrap(key), observed)\r\n    })\r\n  }\r\n}\r\n\r\ninterface Iterable {\r\n  [Symbol.iterator](): Iterator\r\n}\r\n\r\ninterface Iterator {\r\n  next(value?: any): IterationResult\r\n}\r\n\r\ninterface IterationResult {\r\n  value: any\r\n  done: boolean\r\n}\r\n\r\nfunction createIterableMethod(\r\n  method: string | symbol,\r\n  isReadonly: boolean,\r\n  isShallow: boolean\r\n) {\r\n  return function (\r\n    this: IterableCollections,\r\n    ...args: unknown[]\r\n  ): Iterable & Iterator {\r\n    const target = (this as any)[ReactiveFlags.RAW]\r\n    const rawTarget = toRaw(target)\r\n    const targetIsMap = isMap(rawTarget)\r\n    const isPair =\r\n      method === 'entries' || (method === Symbol.iterator && targetIsMap)\r\n    const isKeyOnly = method === 'keys' && targetIsMap\r\n    const innerIterator = target[method](...args)\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\r\n    !isReadonly &&\r\n      track(\r\n        rawTarget,\r\n        TrackOpTypes.ITERATE,\r\n        isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY\r\n      )\r\n    // return a wrapped iterator which returns observed versions of the\r\n    // values emitted from the real iterator\r\n    return {\r\n      // iterator protocol\r\n      next() {\r\n        const { value, done } = innerIterator.next()\r\n        return done\r\n          ? { value, done }\r\n          : {\r\n              value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n              done\r\n            }\r\n      },\r\n      // iterable protocol\r\n      [Symbol.iterator]() {\r\n        return this\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction createReadonlyMethod(type: TriggerOpTypes): Function {\r\n  return function (this: CollectionTypes, ...args: unknown[]) {\r\n    if (__DEV__) {\r\n      const key = args[0] ? `on key \"${args[0]}\" ` : ``\r\n      console.warn(\r\n        `${capitalize(type)} operation ${key}failed: target is readonly.`,\r\n        toRaw(this)\r\n      )\r\n    }\r\n    return type === TriggerOpTypes.DELETE ? false : this\r\n  }\r\n}\r\n\r\nfunction createInstrumentations() {\r\n  const mutableInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections)\r\n    },\r\n    has,\r\n    add,\r\n    set,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n  }\r\n\r\n  const shallowInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key, false, true)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections)\r\n    },\r\n    has,\r\n    add,\r\n    set,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n  }\r\n\r\n  const readonlyInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key, true)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections, true)\r\n    },\r\n    has(this: MapTypes, key: unknown) {\r\n      return has.call(this, key, true)\r\n    },\r\n    add: createReadonlyMethod(TriggerOpTypes.ADD),\r\n    set: createReadonlyMethod(TriggerOpTypes.SET),\r\n    delete: createReadonlyMethod(TriggerOpTypes.DELETE),\r\n    clear: createReadonlyMethod(TriggerOpTypes.CLEAR),\r\n    forEach: createForEach(true, false)\r\n  }\r\n\r\n  const shallowReadonlyInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key, true, true)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections, true)\r\n    },\r\n    has(this: MapTypes, key: unknown) {\r\n      return has.call(this, key, true)\r\n    },\r\n    add: createReadonlyMethod(TriggerOpTypes.ADD),\r\n    set: createReadonlyMethod(TriggerOpTypes.SET),\r\n    delete: createReadonlyMethod(TriggerOpTypes.DELETE),\r\n    clear: createReadonlyMethod(TriggerOpTypes.CLEAR),\r\n    forEach: createForEach(true, true)\r\n  }\r\n\r\n  const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator]\r\n  iteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      false,\r\n      false\r\n    )\r\n    readonlyInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      true,\r\n      false\r\n    )\r\n    shallowInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      false,\r\n      true\r\n    )\r\n    shallowReadonlyInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      true,\r\n      true\r\n    )\r\n  })\r\n\r\n  return [\r\n    mutableInstrumentations,\r\n    readonlyInstrumentations,\r\n    shallowInstrumentations,\r\n    shallowReadonlyInstrumentations\r\n  ]\r\n}\r\n\r\nconst [\r\n  mutableInstrumentations,\r\n  readonlyInstrumentations,\r\n  shallowInstrumentations,\r\n  shallowReadonlyInstrumentations\r\n] = /* #__PURE__*/ createInstrumentations()\r\n\r\nfunction createInstrumentationGetter(isReadonly: boolean, shallow: boolean) {\r\n  const instrumentations = shallow\r\n    ? isReadonly\r\n      ? shallowReadonlyInstrumentations\r\n      : shallowInstrumentations\r\n    : isReadonly\r\n    ? readonlyInstrumentations\r\n    : mutableInstrumentations\r\n\r\n  return (\r\n    target: CollectionTypes,\r\n    key: string | symbol,\r\n    receiver: CollectionTypes\r\n  ) => {\r\n    if (key === ReactiveFlags.IS_REACTIVE) {\r\n      return !isReadonly\r\n    } else if (key === ReactiveFlags.IS_READONLY) {\r\n      return isReadonly\r\n    } else if (key === ReactiveFlags.RAW) {\r\n      return target\r\n    }\r\n\r\n    return Reflect.get(\r\n      hasOwn(instrumentations, key) && key in target\r\n        ? instrumentations\r\n        : target,\r\n      key,\r\n      receiver\r\n    )\r\n  }\r\n}\r\n\r\nexport const mutableCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: /*#__PURE__*/ createInstrumentationGetter(false, false)\r\n}\r\n\r\nexport const shallowCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: /*#__PURE__*/ createInstrumentationGetter(false, true)\r\n}\r\n\r\nexport const readonlyCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: /*#__PURE__*/ createInstrumentationGetter(true, false)\r\n}\r\n\r\nexport const shallowReadonlyCollectionHandlers: ProxyHandler<CollectionTypes> =\r\n  {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, true)\r\n  }\r\n\r\nfunction checkIdentityKeys(\r\n  target: CollectionTypes,\r\n  has: (key: unknown) => boolean,\r\n  key: unknown\r\n) {\r\n  const rawKey = toRaw(key)\r\n  if (rawKey !== key && has.call(target, rawKey)) {\r\n    const type = toRawType(target)\r\n    console.warn(\r\n      `Reactive ${type} contains both the raw and reactive ` +\r\n        `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n        `which can lead to inconsistencies. ` +\r\n        `Avoid differentiating between the raw and reactive versions ` +\r\n        `of an object and only use the reactive version if possible.`\r\n    )\r\n  }\r\n}\r\n","import { isObject, toRawType, def } from '@vue/shared'\r\nimport {\r\n  mutableHandlers,\r\n  readonlyHandlers,\r\n  shallowReactiveHandlers,\r\n  shallowReadonlyHandlers\r\n} from './baseHandlers'\r\nimport {\r\n  mutableCollectionHandlers,\r\n  readonlyCollectionHandlers,\r\n  shallowCollectionHandlers,\r\n  shallowReadonlyCollectionHandlers\r\n} from './collectionHandlers'\r\nimport type { UnwrapRefSimple, Ref, RawSymbol } from './ref'\r\n\r\nexport const enum ReactiveFlags {\r\n  SKIP = '__v_skip',\r\n  IS_REACTIVE = '__v_isReactive',\r\n  IS_READONLY = '__v_isReadonly',\r\n  IS_SHALLOW = '__v_isShallow',\r\n  RAW = '__v_raw'\r\n}\r\n\r\nexport interface Target {\r\n  [ReactiveFlags.SKIP]?: boolean\r\n  [ReactiveFlags.IS_REACTIVE]?: boolean\r\n  [ReactiveFlags.IS_READONLY]?: boolean\r\n  [ReactiveFlags.IS_SHALLOW]?: boolean\r\n  [ReactiveFlags.RAW]?: any\r\n}\r\n\r\nexport const reactiveMap = new WeakMap<Target, any>()\r\nexport const shallowReactiveMap = new WeakMap<Target, any>()\r\nexport const readonlyMap = new WeakMap<Target, any>()\r\nexport const shallowReadonlyMap = new WeakMap<Target, any>()\r\n\r\nconst enum TargetType {\r\n  INVALID = 0,\r\n  COMMON = 1,\r\n  COLLECTION = 2\r\n}\r\n\r\nfunction targetTypeMap(rawType: string) {\r\n  switch (rawType) {\r\n    case 'Object':\r\n    case 'Array':\r\n      return TargetType.COMMON\r\n    case 'Map':\r\n    case 'Set':\r\n    case 'WeakMap':\r\n    case 'WeakSet':\r\n      return TargetType.COLLECTION\r\n    default:\r\n      return TargetType.INVALID\r\n  }\r\n}\r\n\r\nfunction getTargetType(value: Target) {\r\n  return value[ReactiveFlags.SKIP] || !Object.isExtensible(value)\r\n    ? TargetType.INVALID\r\n    : targetTypeMap(toRawType(value))\r\n}\r\n\r\n// only unwrap nested ref\r\nexport type UnwrapNestedRefs<T> = T extends Ref ? T : UnwrapRefSimple<T>\r\n\r\n/**\r\n * Creates a reactive copy of the original object.\r\n *\r\n * The reactive conversion is \"deep\"—it affects all nested properties. In the\r\n * ES2015 Proxy based implementation, the returned proxy is **not** equal to the\r\n * original object. It is recommended to work exclusively with the reactive\r\n * proxy and avoid relying on the original object.\r\n *\r\n * A reactive object also automatically unwraps refs contained in it, so you\r\n * don't need to use `.value` when accessing and mutating their value:\r\n *\r\n * ```js\r\n * const count = ref(0)\r\n * const obj = reactive({\r\n *   count\r\n * })\r\n *\r\n * obj.count++\r\n * obj.count // -> 1\r\n * count.value // -> 1\r\n * ```\r\n */\r\nexport function reactive<T extends object>(target: T): UnwrapNestedRefs<T>\r\nexport function reactive(target: object) {\r\n  // if trying to observe a readonly proxy, return the readonly version.\r\n  if (isReadonly(target)) {\r\n    return target\r\n  }\r\n  return createReactiveObject(\r\n    target,\r\n    false,\r\n    mutableHandlers,\r\n    mutableCollectionHandlers,\r\n    reactiveMap\r\n  )\r\n}\r\n\r\nexport declare const ShallowReactiveMarker: unique symbol\r\n\r\nexport type ShallowReactive<T> = T & { [ShallowReactiveMarker]?: true }\r\n\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nexport function shallowReactive<T extends object>(\r\n  target: T\r\n): ShallowReactive<T> {\r\n  return createReactiveObject(\r\n    target,\r\n    false,\r\n    shallowReactiveHandlers,\r\n    shallowCollectionHandlers,\r\n    shallowReactiveMap\r\n  )\r\n}\r\n\r\ntype Primitive = string | number | boolean | bigint | symbol | undefined | null\r\ntype Builtin = Primitive | Function | Date | Error | RegExp\r\nexport type DeepReadonly<T> = T extends Builtin\r\n  ? T\r\n  : T extends Map<infer K, infer V>\r\n  ? ReadonlyMap<DeepReadonly<K>, DeepReadonly<V>>\r\n  : T extends ReadonlyMap<infer K, infer V>\r\n  ? ReadonlyMap<DeepReadonly<K>, DeepReadonly<V>>\r\n  : T extends WeakMap<infer K, infer V>\r\n  ? WeakMap<DeepReadonly<K>, DeepReadonly<V>>\r\n  : T extends Set<infer U>\r\n  ? ReadonlySet<DeepReadonly<U>>\r\n  : T extends ReadonlySet<infer U>\r\n  ? ReadonlySet<DeepReadonly<U>>\r\n  : T extends WeakSet<infer U>\r\n  ? WeakSet<DeepReadonly<U>>\r\n  : T extends Promise<infer U>\r\n  ? Promise<DeepReadonly<U>>\r\n  : T extends Ref<infer U>\r\n  ? Readonly<Ref<DeepReadonly<U>>>\r\n  : T extends {}\r\n  ? { readonly [K in keyof T]: DeepReadonly<T[K]> }\r\n  : Readonly<T>\r\n\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nexport function readonly<T extends object>(\r\n  target: T\r\n): DeepReadonly<UnwrapNestedRefs<T>> {\r\n  return createReactiveObject(\r\n    target,\r\n    true,\r\n    readonlyHandlers,\r\n    readonlyCollectionHandlers,\r\n    readonlyMap\r\n  )\r\n}\r\n\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nexport function shallowReadonly<T extends object>(target: T): Readonly<T> {\r\n  return createReactiveObject(\r\n    target,\r\n    true,\r\n    shallowReadonlyHandlers,\r\n    shallowReadonlyCollectionHandlers,\r\n    shallowReadonlyMap\r\n  )\r\n}\r\n\r\nfunction createReactiveObject(\r\n  target: Target,\r\n  isReadonly: boolean,\r\n  baseHandlers: ProxyHandler<any>,\r\n  collectionHandlers: ProxyHandler<any>,\r\n  proxyMap: WeakMap<Target, any>\r\n) {\r\n  if (!isObject(target)) {\r\n    if (__DEV__) {\r\n      console.warn(`value cannot be made reactive: ${String(target)}`)\r\n    }\r\n    return target\r\n  }\r\n  // target is already a Proxy, return it.\r\n  // exception: calling readonly() on a reactive object\r\n  if (\r\n    target[ReactiveFlags.RAW] &&\r\n    !(isReadonly && target[ReactiveFlags.IS_REACTIVE])\r\n  ) {\r\n    return target\r\n  }\r\n  // target already has corresponding Proxy\r\n  const existingProxy = proxyMap.get(target)\r\n  if (existingProxy) {\r\n    return existingProxy\r\n  }\r\n  // only specific value types can be observed.\r\n  const targetType = getTargetType(target)\r\n  if (targetType === TargetType.INVALID) {\r\n    return target\r\n  }\r\n  const proxy = new Proxy(\r\n    target,\r\n    targetType === TargetType.COLLECTION ? collectionHandlers : baseHandlers\r\n  )\r\n  proxyMap.set(target, proxy)\r\n  return proxy\r\n}\r\n\r\nexport function isReactive(value: unknown): boolean {\r\n  if (isReadonly(value)) {\r\n    return isReactive((value as Target)[ReactiveFlags.RAW])\r\n  }\r\n  return !!(value && (value as Target)[ReactiveFlags.IS_REACTIVE])\r\n}\r\n\r\nexport function isReadonly(value: unknown): boolean {\r\n  return !!(value && (value as Target)[ReactiveFlags.IS_READONLY])\r\n}\r\n\r\nexport function isShallow(value: unknown): boolean {\r\n  return !!(value && (value as Target)[ReactiveFlags.IS_SHALLOW])\r\n}\r\n\r\nexport function isProxy(value: unknown): boolean {\r\n  return isReactive(value) || isReadonly(value)\r\n}\r\n\r\nexport function toRaw<T>(observed: T): T {\r\n  const raw = observed && (observed as Target)[ReactiveFlags.RAW]\r\n  return raw ? toRaw(raw) : observed\r\n}\r\n\r\nexport function markRaw<T extends object>(\r\n  value: T\r\n): T & { [RawSymbol]?: true } {\r\n  def(value, ReactiveFlags.SKIP, true)\r\n  return value\r\n}\r\n\r\nexport const toReactive = <T extends unknown>(value: T): T =>\r\n  isObject(value) ? reactive(value) : value\r\n\r\nexport const toReadonly = <T extends unknown>(value: T): T =>\r\n  isObject(value) ? readonly(value as Record<any, any>) : value\r\n","import {\r\n  activeEffect,\r\n  shouldTrack,\r\n  trackEffects,\r\n  triggerEffects\r\n} from './effect'\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport { isArray, hasChanged, IfAny } from '@vue/shared'\r\nimport {\r\n  isProxy,\r\n  toRaw,\r\n  isReactive,\r\n  toReactive,\r\n  isReadonly,\r\n  isShallow\r\n} from './reactive'\r\nimport type { ShallowReactiveMarker } from './reactive'\r\nimport { CollectionTypes } from './collectionHandlers'\r\nimport { createDep, Dep } from './dep'\r\n\r\ndeclare const RefSymbol: unique symbol\r\nexport declare const RawSymbol: unique symbol\r\n\r\nexport interface Ref<T = any> {\r\n  value: T\r\n  /**\r\n   * Type differentiator only.\r\n   * We need this to be in public d.ts but don't want it to show up in IDE\r\n   * autocomplete, so we use a private Symbol instead.\r\n   */\r\n  [RefSymbol]: true\r\n}\r\n\r\ntype RefBase<T> = {\r\n  dep?: Dep\r\n  value: T\r\n}\r\n\r\nexport function trackRefValue(ref: RefBase<any>) {\r\n  if (shouldTrack && activeEffect) {\r\n    ref = toRaw(ref)\r\n    if (__DEV__) {\r\n      trackEffects(ref.dep || (ref.dep = createDep()), {\r\n        target: ref,\r\n        type: TrackOpTypes.GET,\r\n        key: 'value'\r\n      })\r\n    } else {\r\n      trackEffects(ref.dep || (ref.dep = createDep()))\r\n    }\r\n  }\r\n}\r\n\r\nexport function triggerRefValue(ref: RefBase<any>, newVal?: any) {\r\n  ref = toRaw(ref)\r\n  if (ref.dep) {\r\n    if (__DEV__) {\r\n      triggerEffects(ref.dep, {\r\n        target: ref,\r\n        type: TriggerOpTypes.SET,\r\n        key: 'value',\r\n        newValue: newVal\r\n      })\r\n    } else {\r\n      triggerEffects(ref.dep)\r\n    }\r\n  }\r\n}\r\n\r\nexport function isRef<T>(r: Ref<T> | unknown): r is Ref<T>\r\nexport function isRef(r: any): r is Ref {\r\n  return !!(r && r.__v_isRef === true)\r\n}\r\n\r\nexport function ref<T extends object>(\r\n  value: T\r\n): [T] extends [Ref] ? T : Ref<UnwrapRef<T>>\r\nexport function ref<T>(value: T): Ref<UnwrapRef<T>>\r\nexport function ref<T = any>(): Ref<T | undefined>\r\nexport function ref(value?: unknown) {\r\n  return createRef(value, false)\r\n}\r\n\r\ndeclare const ShallowRefMarker: unique symbol\r\n\r\nexport type ShallowRef<T = any> = Ref<T> & { [ShallowRefMarker]?: true }\r\n\r\nexport function shallowRef<T extends object>(\r\n  value: T\r\n): T extends Ref ? T : ShallowRef<T>\r\nexport function shallowRef<T>(value: T): ShallowRef<T>\r\nexport function shallowRef<T = any>(): ShallowRef<T | undefined>\r\nexport function shallowRef(value?: unknown) {\r\n  return createRef(value, true)\r\n}\r\n\r\nfunction createRef(rawValue: unknown, shallow: boolean) {\r\n  if (isRef(rawValue)) {\r\n    return rawValue\r\n  }\r\n  return new RefImpl(rawValue, shallow)\r\n}\r\n\r\nclass RefImpl<T> {\r\n  private _value: T\r\n  private _rawValue: T\r\n\r\n  public dep?: Dep = undefined\r\n  public readonly __v_isRef = true\r\n\r\n  constructor(value: T, public readonly __v_isShallow: boolean) {\r\n    this._rawValue = __v_isShallow ? value : toRaw(value)\r\n    this._value = __v_isShallow ? value : toReactive(value)\r\n  }\r\n\r\n  get value() {\r\n    trackRefValue(this)\r\n    return this._value\r\n  }\r\n\r\n  set value(newVal) {\r\n    const useDirectValue =\r\n      this.__v_isShallow || isShallow(newVal) || isReadonly(newVal)\r\n    newVal = useDirectValue ? newVal : toRaw(newVal)\r\n    if (hasChanged(newVal, this._rawValue)) {\r\n      this._rawValue = newVal\r\n      this._value = useDirectValue ? newVal : toReactive(newVal)\r\n      triggerRefValue(this, newVal)\r\n    }\r\n  }\r\n}\r\n\r\nexport function triggerRef(ref: Ref) {\r\n  triggerRefValue(ref, __DEV__ ? ref.value : void 0)\r\n}\r\n\r\nexport function unref<T>(ref: T | Ref<T>): T {\r\n  return isRef(ref) ? (ref.value as any) : ref\r\n}\r\n\r\nconst shallowUnwrapHandlers: ProxyHandler<any> = {\r\n  get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n  set: (target, key, value, receiver) => {\r\n    const oldValue = target[key]\r\n    if (isRef(oldValue) && !isRef(value)) {\r\n      oldValue.value = value\r\n      return true\r\n    } else {\r\n      return Reflect.set(target, key, value, receiver)\r\n    }\r\n  }\r\n}\r\n\r\nexport function proxyRefs<T extends object>(\r\n  objectWithRefs: T\r\n): ShallowUnwrapRef<T> {\r\n  return isReactive(objectWithRefs)\r\n    ? objectWithRefs\r\n    : new Proxy(objectWithRefs, shallowUnwrapHandlers)\r\n}\r\n\r\nexport type CustomRefFactory<T> = (\r\n  track: () => void,\r\n  trigger: () => void\r\n) => {\r\n  get: () => T\r\n  set: (value: T) => void\r\n}\r\n\r\nclass CustomRefImpl<T> {\r\n  public dep?: Dep = undefined\r\n\r\n  private readonly _get: ReturnType<CustomRefFactory<T>>['get']\r\n  private readonly _set: ReturnType<CustomRefFactory<T>>['set']\r\n\r\n  public readonly __v_isRef = true\r\n\r\n  constructor(factory: CustomRefFactory<T>) {\r\n    const { get, set } = factory(\r\n      () => trackRefValue(this),\r\n      () => triggerRefValue(this)\r\n    )\r\n    this._get = get\r\n    this._set = set\r\n  }\r\n\r\n  get value() {\r\n    return this._get()\r\n  }\r\n\r\n  set value(newVal) {\r\n    this._set(newVal)\r\n  }\r\n}\r\n\r\nexport function customRef<T>(factory: CustomRefFactory<T>): Ref<T> {\r\n  return new CustomRefImpl(factory) as any\r\n}\r\n\r\nexport type ToRefs<T = any> = {\r\n  [K in keyof T]: ToRef<T[K]>\r\n}\r\nexport function toRefs<T extends object>(object: T): ToRefs<T> {\r\n  if (__DEV__ && !isProxy(object)) {\r\n    console.warn(`toRefs() expects a reactive object but received a plain one.`)\r\n  }\r\n  const ret: any = isArray(object) ? new Array(object.length) : {}\r\n  for (const key in object) {\r\n    ret[key] = toRef(object, key)\r\n  }\r\n  return ret\r\n}\r\n\r\nclass ObjectRefImpl<T extends object, K extends keyof T> {\r\n  public readonly __v_isRef = true\r\n\r\n  constructor(\r\n    private readonly _object: T,\r\n    private readonly _key: K,\r\n    private readonly _defaultValue?: T[K]\r\n  ) {}\r\n\r\n  get value() {\r\n    const val = this._object[this._key]\r\n    return val === undefined ? (this._defaultValue as T[K]) : val\r\n  }\r\n\r\n  set value(newVal) {\r\n    this._object[this._key] = newVal\r\n  }\r\n}\r\n\r\nexport type ToRef<T> = IfAny<T, Ref<T>, [T] extends [Ref] ? T : Ref<T>>\r\n\r\nexport function toRef<T extends object, K extends keyof T>(\r\n  object: T,\r\n  key: K\r\n): ToRef<T[K]>\r\n\r\nexport function toRef<T extends object, K extends keyof T>(\r\n  object: T,\r\n  key: K,\r\n  defaultValue: T[K]\r\n): ToRef<Exclude<T[K], undefined>>\r\n\r\nexport function toRef<T extends object, K extends keyof T>(\r\n  object: T,\r\n  key: K,\r\n  defaultValue?: T[K]\r\n): ToRef<T[K]> {\r\n  const val = object[key]\r\n  return isRef(val)\r\n    ? val\r\n    : (new ObjectRefImpl(object, key, defaultValue) as any)\r\n}\r\n\r\n// corner case when use narrows type\r\n// Ex. type RelativePath = string & { __brand: unknown }\r\n// RelativePath extends object -> true\r\ntype BaseTypes = string | number | boolean\r\n\r\n/**\r\n * This is a special exported interface for other packages to declare\r\n * additional types that should bail out for ref unwrapping. For example\r\n * \\@vue/runtime-dom can declare it like so in its d.ts:\r\n *\r\n * ``` ts\r\n * declare module '@vue/reactivity' {\r\n *   export interface RefUnwrapBailTypes {\r\n *     runtimeDOMBailTypes: Node | Window\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * Note that api-extractor somehow refuses to include `declare module`\r\n * augmentations in its generated d.ts, so we have to manually append them\r\n * to the final generated d.ts in our build process.\r\n */\r\nexport interface RefUnwrapBailTypes {}\r\n\r\nexport type ShallowUnwrapRef<T> = {\r\n  [K in keyof T]: T[K] extends Ref<infer V>\r\n    ? V\r\n    : // if `V` is `unknown` that means it does not extend `Ref` and is undefined\r\n    T[K] extends Ref<infer V> | undefined\r\n    ? unknown extends V\r\n      ? undefined\r\n      : V | undefined\r\n    : T[K]\r\n}\r\n\r\nexport type UnwrapRef<T> = T extends ShallowRef<infer V>\r\n  ? V\r\n  : T extends Ref<infer V>\r\n  ? UnwrapRefSimple<V>\r\n  : UnwrapRefSimple<T>\r\n\r\nexport type UnwrapRefSimple<T> = T extends\r\n  | Function\r\n  | CollectionTypes\r\n  | BaseTypes\r\n  | Ref\r\n  | RefUnwrapBailTypes[keyof RefUnwrapBailTypes]\r\n  | { [RawSymbol]?: true }\r\n  ? T\r\n  : T extends Array<any>\r\n  ? { [K in keyof T]: UnwrapRefSimple<T[K]> }\r\n  : T extends object & { [ShallowReactiveMarker]?: never }\r\n  ? {\r\n      [P in keyof T]: P extends symbol ? T[P] : UnwrapRef<T[P]>\r\n    }\r\n  : T\r\n","import { DebuggerOptions, ReactiveEffect } from './effect'\r\nimport { Ref, trackRefValue, triggerRefValue } from './ref'\r\nimport { isFunction, NOOP } from '@vue/shared'\r\nimport { ReactiveFlags, toRaw } from './reactive'\r\nimport { Dep } from './dep'\r\n\r\ndeclare const ComputedRefSymbol: unique symbol\r\n\r\nexport interface ComputedRef<T = any> extends WritableComputedRef<T> {\r\n  readonly value: T\r\n  [ComputedRefSymbol]: true\r\n}\r\n\r\nexport interface WritableComputedRef<T> extends Ref<T> {\r\n  readonly effect: ReactiveEffect<T>\r\n}\r\n\r\nexport type ComputedGetter<T> = (...args: any[]) => T\r\nexport type ComputedSetter<T> = (v: T) => void\r\n\r\nexport interface WritableComputedOptions<T> {\r\n  get: ComputedGetter<T>\r\n  set: ComputedSetter<T>\r\n}\r\n\r\nexport class ComputedRefImpl<T> {\r\n  public dep?: Dep = undefined\r\n\r\n  private _value!: T\r\n  public readonly effect: ReactiveEffect<T>\r\n\r\n  public readonly __v_isRef = true\r\n  public readonly [ReactiveFlags.IS_READONLY]: boolean = false\r\n\r\n  public _dirty = true\r\n  public _cacheable: boolean\r\n\r\n  constructor(\r\n    getter: ComputedGetter<T>,\r\n    private readonly _setter: ComputedSetter<T>,\r\n    isReadonly: boolean,\r\n    isSSR: boolean\r\n  ) {\r\n    this.effect = new ReactiveEffect(getter, () => {\r\n      if (!this._dirty) {\r\n        this._dirty = true\r\n        triggerRefValue(this)\r\n      }\r\n    })\r\n    this.effect.computed = this\r\n    this.effect.active = this._cacheable = !isSSR\r\n    this[ReactiveFlags.IS_READONLY] = isReadonly\r\n  }\r\n\r\n  get value() {\r\n    // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n    const self = toRaw(this)\r\n    trackRefValue(self)\r\n    if (self._dirty || !self._cacheable) {\r\n      self._dirty = false\r\n      self._value = self.effect.run()!\r\n    }\r\n    return self._value\r\n  }\r\n\r\n  set value(newValue: T) {\r\n    this._setter(newValue)\r\n  }\r\n}\r\n\r\nexport function computed<T>(\r\n  getter: ComputedGetter<T>,\r\n  debugOptions?: DebuggerOptions\r\n): ComputedRef<T>\r\nexport function computed<T>(\r\n  options: WritableComputedOptions<T>,\r\n  debugOptions?: DebuggerOptions\r\n): WritableComputedRef<T>\r\nexport function computed<T>(\r\n  getterOrOptions: ComputedGetter<T> | WritableComputedOptions<T>,\r\n  debugOptions?: DebuggerOptions,\r\n  isSSR = false\r\n) {\r\n  let getter: ComputedGetter<T>\r\n  let setter: ComputedSetter<T>\r\n\r\n  const onlyGetter = isFunction(getterOrOptions)\r\n  if (onlyGetter) {\r\n    getter = getterOrOptions\r\n    setter = __DEV__\r\n      ? () => {\r\n          console.warn('Write operation failed: computed value is readonly')\r\n        }\r\n      : NOOP\r\n  } else {\r\n    getter = getterOrOptions.get\r\n    setter = getterOrOptions.set\r\n  }\r\n\r\n  const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR)\r\n\r\n  if (__DEV__ && debugOptions && !isSSR) {\r\n    cRef.effect.onTrack = debugOptions.onTrack\r\n    cRef.effect.onTrigger = debugOptions.onTrigger\r\n  }\r\n\r\n  return cRef as any\r\n}\r\n","import { VNode } from './vnode'\r\nimport {\r\n  Data,\r\n  ComponentInternalInstance,\r\n  ConcreteComponent,\r\n  formatComponentName\r\n} from './component'\r\nimport { isString, isFunction } from '@vue/shared'\r\nimport { toRaw, isRef, pauseTracking, resetTracking } from '@vue/reactivity'\r\nimport { callWithErrorHandling, ErrorCodes } from './errorHandling'\r\n\r\ntype ComponentVNode = VNode & {\r\n  type: ConcreteComponent\r\n}\r\n\r\nconst stack: VNode[] = []\r\n\r\ntype TraceEntry = {\r\n  vnode: ComponentVNode\r\n  recurseCount: number\r\n}\r\n\r\ntype ComponentTraceStack = TraceEntry[]\r\n\r\nexport function pushWarningContext(vnode: VNode) {\r\n  stack.push(vnode)\r\n}\r\n\r\nexport function popWarningContext() {\r\n  stack.pop()\r\n}\r\n\r\nexport function warn(msg: string, ...args: any[]) {\r\n  // avoid props formatting or warn handler tracking deps that might be mutated\r\n  // during patch, leading to infinite recursion.\r\n  pauseTracking()\r\n\r\n  const instance = stack.length ? stack[stack.length - 1].component : null\r\n  const appWarnHandler = instance && instance.appContext.config.warnHandler\r\n  const trace = getComponentTrace()\r\n\r\n  if (appWarnHandler) {\r\n    callWithErrorHandling(\r\n      appWarnHandler,\r\n      instance,\r\n      ErrorCodes.APP_WARN_HANDLER,\r\n      [\r\n        msg + args.join(''),\r\n        instance && instance.proxy,\r\n        trace\r\n          .map(\r\n            ({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`\r\n          )\r\n          .join('\\n'),\r\n        trace\r\n      ]\r\n    )\r\n  } else {\r\n    const warnArgs = [`[Vue warn]: ${msg}`, ...args]\r\n    /* istanbul ignore if */\r\n    if (\r\n      trace.length &&\r\n      // avoid spamming console during tests\r\n      !__TEST__\r\n    ) {\r\n      warnArgs.push(`\\n`, ...formatTrace(trace))\r\n    }\r\n    console.warn(...warnArgs)\r\n  }\r\n\r\n  resetTracking()\r\n}\r\n\r\nexport function getComponentTrace(): ComponentTraceStack {\r\n  let currentVNode: VNode | null = stack[stack.length - 1]\r\n  if (!currentVNode) {\r\n    return []\r\n  }\r\n\r\n  // we can't just use the stack because it will be incomplete during updates\r\n  // that did not start from the root. Re-construct the parent chain using\r\n  // instance parent pointers.\r\n  const normalizedStack: ComponentTraceStack = []\r\n\r\n  while (currentVNode) {\r\n    const last = normalizedStack[0]\r\n    if (last && last.vnode === currentVNode) {\r\n      last.recurseCount++\r\n    } else {\r\n      normalizedStack.push({\r\n        vnode: currentVNode as ComponentVNode,\r\n        recurseCount: 0\r\n      })\r\n    }\r\n    const parentInstance: ComponentInternalInstance | null =\r\n      currentVNode.component && currentVNode.component.parent\r\n    currentVNode = parentInstance && parentInstance.vnode\r\n  }\r\n\r\n  return normalizedStack\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace: ComponentTraceStack): any[] {\r\n  const logs: any[] = []\r\n  trace.forEach((entry, i) => {\r\n    logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry))\r\n  })\r\n  return logs\r\n}\r\n\r\nfunction formatTraceEntry({ vnode, recurseCount }: TraceEntry): any[] {\r\n  const postfix =\r\n    recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``\r\n  const isRoot = vnode.component ? vnode.component.parent == null : false\r\n  const open = ` at <${formatComponentName(\r\n    vnode.component,\r\n    vnode.type,\r\n    isRoot\r\n  )}`\r\n  const close = `>` + postfix\r\n  return vnode.props\r\n    ? [open, ...formatProps(vnode.props), close]\r\n    : [open + close]\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction formatProps(props: Data): any[] {\r\n  const res: any[] = []\r\n  const keys = Object.keys(props)\r\n  keys.slice(0, 3).forEach(key => {\r\n    res.push(...formatProp(key, props[key]))\r\n  })\r\n  if (keys.length > 3) {\r\n    res.push(` ...`)\r\n  }\r\n  return res\r\n}\r\n\r\nfunction formatProp(key: string, value: unknown): any[]\r\nfunction formatProp(key: string, value: unknown, raw: true): any\r\n/* istanbul ignore next */\r\nfunction formatProp(key: string, value: unknown, raw?: boolean): any {\r\n  if (isString(value)) {\r\n    value = JSON.stringify(value)\r\n    return raw ? value : [`${key}=${value}`]\r\n  } else if (\r\n    typeof value === 'number' ||\r\n    typeof value === 'boolean' ||\r\n    value == null\r\n  ) {\r\n    return raw ? value : [`${key}=${value}`]\r\n  } else if (isRef(value)) {\r\n    value = formatProp(key, toRaw(value.value), true)\r\n    return raw ? value : [`${key}=Ref<`, value, `>`]\r\n  } else if (isFunction(value)) {\r\n    return [`${key}=fn${value.name ? `<${value.name}>` : ``}`]\r\n  } else {\r\n    value = toRaw(value)\r\n    return raw ? value : [`${key}=`, value]\r\n  }\r\n}\r\n","import { VNode } from './vnode'\r\nimport { ComponentInternalInstance, LifecycleHooks } from './component'\r\nimport { warn, pushWarningContext, popWarningContext } from './warning'\r\nimport { isPromise, isFunction } from '@vue/shared'\r\n\r\n// contexts where user provided function may be executed, in addition to\r\n// lifecycle hooks.\r\nexport const enum ErrorCodes {\r\n  SETUP_FUNCTION,\r\n  RENDER_FUNCTION,\r\n  WATCH_GETTER,\r\n  WATCH_CALLBACK,\r\n  WATCH_CLEANUP,\r\n  NATIVE_EVENT_HANDLER,\r\n  COMPONENT_EVENT_HANDLER,\r\n  VNODE_HOOK,\r\n  DIRECTIVE_HOOK,\r\n  TRANSITION_HOOK,\r\n  APP_ERROR_HANDLER,\r\n  APP_WARN_HANDLER,\r\n  FUNCTION_REF,\r\n  ASYNC_COMPONENT_LOADER,\r\n  SCHEDULER\r\n}\r\n\r\nexport const ErrorTypeStrings: Record<number | string, string> = {\r\n  [LifecycleHooks.SERVER_PREFETCH]: 'serverPrefetch hook',\r\n  [LifecycleHooks.BEFORE_CREATE]: 'beforeCreate hook',\r\n  [LifecycleHooks.CREATED]: 'created hook',\r\n  [LifecycleHooks.BEFORE_MOUNT]: 'beforeMount hook',\r\n  [LifecycleHooks.MOUNTED]: 'mounted hook',\r\n  [LifecycleHooks.BEFORE_UPDATE]: 'beforeUpdate hook',\r\n  [LifecycleHooks.UPDATED]: 'updated',\r\n  [LifecycleHooks.BEFORE_UNMOUNT]: 'beforeUnmount hook',\r\n  [LifecycleHooks.UNMOUNTED]: 'unmounted hook',\r\n  [LifecycleHooks.ACTIVATED]: 'activated hook',\r\n  [LifecycleHooks.DEACTIVATED]: 'deactivated hook',\r\n  [LifecycleHooks.ERROR_CAPTURED]: 'errorCaptured hook',\r\n  [LifecycleHooks.RENDER_TRACKED]: 'renderTracked hook',\r\n  [LifecycleHooks.RENDER_TRIGGERED]: 'renderTriggered hook',\r\n  [ErrorCodes.SETUP_FUNCTION]: 'setup function',\r\n  [ErrorCodes.RENDER_FUNCTION]: 'render function',\r\n  [ErrorCodes.WATCH_GETTER]: 'watcher getter',\r\n  [ErrorCodes.WATCH_CALLBACK]: 'watcher callback',\r\n  [ErrorCodes.WATCH_CLEANUP]: 'watcher cleanup function',\r\n  [ErrorCodes.NATIVE_EVENT_HANDLER]: 'native event handler',\r\n  [ErrorCodes.COMPONENT_EVENT_HANDLER]: 'component event handler',\r\n  [ErrorCodes.VNODE_HOOK]: 'vnode hook',\r\n  [ErrorCodes.DIRECTIVE_HOOK]: 'directive hook',\r\n  [ErrorCodes.TRANSITION_HOOK]: 'transition hook',\r\n  [ErrorCodes.APP_ERROR_HANDLER]: 'app errorHandler',\r\n  [ErrorCodes.APP_WARN_HANDLER]: 'app warnHandler',\r\n  [ErrorCodes.FUNCTION_REF]: 'ref function',\r\n  [ErrorCodes.ASYNC_COMPONENT_LOADER]: 'async component loader',\r\n  [ErrorCodes.SCHEDULER]:\r\n    'scheduler flush. This is likely a Vue internals bug. ' +\r\n    'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core'\r\n}\r\n\r\nexport type ErrorTypes = LifecycleHooks | ErrorCodes\r\n\r\nexport function callWithErrorHandling(\r\n  fn: Function,\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes,\r\n  args?: unknown[]\r\n) {\r\n  let res\r\n  try {\r\n    res = args ? fn(...args) : fn()\r\n  } catch (err) {\r\n    handleError(err, instance, type)\r\n  }\r\n  return res\r\n}\r\n\r\nexport function callWithAsyncErrorHandling(\r\n  fn: Function | Function[],\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes,\r\n  args?: unknown[]\r\n): any[] {\r\n  if (isFunction(fn)) {\r\n    const res = callWithErrorHandling(fn, instance, type, args)\r\n    if (res && isPromise(res)) {\r\n      res.catch(err => {\r\n        handleError(err, instance, type)\r\n      })\r\n    }\r\n    return res\r\n  }\r\n\r\n  const values = []\r\n  for (let i = 0; i < fn.length; i++) {\r\n    values.push(callWithAsyncErrorHandling(fn[i], instance, type, args))\r\n  }\r\n  return values\r\n}\r\n\r\nexport function handleError(\r\n  err: unknown,\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes,\r\n  throwInDev = true\r\n) {\r\n  const contextVNode = instance ? instance.vnode : null\r\n  if (instance) {\r\n    let cur = instance.parent\r\n    // the exposed instance is the render proxy to keep it consistent with 2.x\r\n    const exposedInstance = instance.proxy\r\n    // in production the hook receives only the error code\r\n    const errorInfo = __DEV__ ? ErrorTypeStrings[type] : type\r\n    while (cur) {\r\n      const errorCapturedHooks = cur.ec\r\n      if (errorCapturedHooks) {\r\n        for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n          if (\r\n            errorCapturedHooks[i](err, exposedInstance, errorInfo) === false\r\n          ) {\r\n            return\r\n          }\r\n        }\r\n      }\r\n      cur = cur.parent\r\n    }\r\n    // app-level handling\r\n    const appErrorHandler = instance.appContext.config.errorHandler\r\n    if (appErrorHandler) {\r\n      callWithErrorHandling(\r\n        appErrorHandler,\r\n        null,\r\n        ErrorCodes.APP_ERROR_HANDLER,\r\n        [err, exposedInstance, errorInfo]\r\n      )\r\n      return\r\n    }\r\n  }\r\n  logError(err, type, contextVNode, throwInDev)\r\n}\r\n\r\nfunction logError(\r\n  err: unknown,\r\n  type: ErrorTypes,\r\n  contextVNode: VNode | null,\r\n  throwInDev = true\r\n) {\r\n  if (__DEV__) {\r\n    const info = ErrorTypeStrings[type]\r\n    if (contextVNode) {\r\n      pushWarningContext(contextVNode)\r\n    }\r\n    warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`)\r\n    if (contextVNode) {\r\n      popWarningContext()\r\n    }\r\n    // crash in dev by default so it's more noticeable\r\n    if (throwInDev) {\r\n      throw err\r\n    } else if (!__TEST__) {\r\n      console.error(err)\r\n    }\r\n  } else {\r\n    // recover in prod to reduce the impact on end-user\r\n    console.error(err)\r\n  }\r\n}\r\n","import { ErrorCodes, callWithErrorHandling } from './errorHandling'\r\nimport { isArray, NOOP } from '@vue/shared'\r\nimport { ComponentInternalInstance, getComponentName } from './component'\r\nimport { warn } from './warning'\r\n\r\nexport interface SchedulerJob extends Function {\r\n  id?: number\r\n  active?: boolean\r\n  computed?: boolean\r\n  /**\r\n   * Indicates whether the effect is allowed to recursively trigger itself\r\n   * when managed by the scheduler.\r\n   *\r\n   * By default, a job cannot trigger itself because some built-in method calls,\r\n   * e.g. Array.prototype.push actually performs reads as well (#1740) which\r\n   * can lead to confusing infinite loops.\r\n   * The allowed cases are component update functions and watch callbacks.\r\n   * Component update functions may update child component props, which in turn\r\n   * trigger flush: \"pre\" watch callbacks that mutates state that the parent\r\n   * relies on (#1801). Watch callbacks doesn't track its dependencies so if it\r\n   * triggers itself again, it's likely intentional and it is the user's\r\n   * responsibility to perform recursive state mutation that eventually\r\n   * stabilizes (#1727).\r\n   */\r\n  allowRecurse?: boolean\r\n  /**\r\n   * Attached by renderer.ts when setting up a component's render effect\r\n   * Used to obtain component information when reporting max recursive updates.\r\n   * dev only.\r\n   */\r\n  ownerInstance?: ComponentInternalInstance\r\n}\r\n\r\nexport type SchedulerJobs = SchedulerJob | SchedulerJob[]\r\n\r\nlet isFlushing = false\r\nlet isFlushPending = false\r\n\r\nconst queue: SchedulerJob[] = []\r\nlet flushIndex = 0\r\n\r\nconst pendingPreFlushCbs: SchedulerJob[] = []\r\nlet activePreFlushCbs: SchedulerJob[] | null = null\r\nlet preFlushIndex = 0\r\n\r\nconst pendingPostFlushCbs: SchedulerJob[] = []\r\nlet activePostFlushCbs: SchedulerJob[] | null = null\r\nlet postFlushIndex = 0\r\n\r\nconst resolvedPromise = /*#__PURE__*/ Promise.resolve() as Promise<any>\r\nlet currentFlushPromise: Promise<void> | null = null\r\n\r\nlet currentPreFlushParentJob: SchedulerJob | null = null\r\n\r\nconst RECURSION_LIMIT = 100\r\ntype CountMap = Map<SchedulerJob, number>\r\n\r\nexport function nextTick<T = void>(\r\n  this: T,\r\n  fn?: (this: T) => void\r\n): Promise<void> {\r\n  const p = currentFlushPromise || resolvedPromise\r\n  return fn ? p.then(this ? fn.bind(this) : fn) : p\r\n}\r\n\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(id: number) {\r\n  // the start index should be `flushIndex + 1`\r\n  let start = flushIndex + 1\r\n  let end = queue.length\r\n\r\n  while (start < end) {\r\n    const middle = (start + end) >>> 1\r\n    const middleJobId = getId(queue[middle])\r\n    middleJobId < id ? (start = middle + 1) : (end = middle)\r\n  }\r\n\r\n  return start\r\n}\r\n\r\nexport function queueJob(job: SchedulerJob) {\r\n  // the dedupe search uses the startIndex argument of Array.includes()\r\n  // by default the search index includes the current job that is being run\r\n  // so it cannot recursively trigger itself again.\r\n  // if the job is a watch() callback, the search will start with a +1 index to\r\n  // allow it recursively trigger itself - it is the user's responsibility to\r\n  // ensure it doesn't end up in an infinite loop.\r\n  if (\r\n    (!queue.length ||\r\n      !queue.includes(\r\n        job,\r\n        isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex\r\n      )) &&\r\n    job !== currentPreFlushParentJob\r\n  ) {\r\n    if (job.id == null) {\r\n      queue.push(job)\r\n    } else {\r\n      queue.splice(findInsertionIndex(job.id), 0, job)\r\n    }\r\n    queueFlush()\r\n  }\r\n}\r\n\r\nfunction queueFlush() {\r\n  if (!isFlushing && !isFlushPending) {\r\n    isFlushPending = true\r\n    currentFlushPromise = resolvedPromise.then(flushJobs)\r\n  }\r\n}\r\n\r\nexport function invalidateJob(job: SchedulerJob) {\r\n  const i = queue.indexOf(job)\r\n  if (i > flushIndex) {\r\n    queue.splice(i, 1)\r\n  }\r\n}\r\n\r\nfunction queueCb(\r\n  cb: SchedulerJobs,\r\n  activeQueue: SchedulerJob[] | null,\r\n  pendingQueue: SchedulerJob[],\r\n  index: number\r\n) {\r\n  if (!isArray(cb)) {\r\n    if (\r\n      !activeQueue ||\r\n      !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)\r\n    ) {\r\n      pendingQueue.push(cb)\r\n    }\r\n  } else {\r\n    // if cb is an array, it is a component lifecycle hook which can only be\r\n    // triggered by a job, which is already deduped in the main queue, so\r\n    // we can skip duplicate check here to improve perf\r\n    pendingQueue.push(...cb)\r\n  }\r\n  queueFlush()\r\n}\r\n\r\nexport function queuePreFlushCb(cb: SchedulerJob) {\r\n  queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex)\r\n}\r\n\r\nexport function queuePostFlushCb(cb: SchedulerJobs) {\r\n  queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex)\r\n}\r\n\r\nexport function flushPreFlushCbs(\r\n  seen?: CountMap,\r\n  parentJob: SchedulerJob | null = null\r\n) {\r\n  if (pendingPreFlushCbs.length) {\r\n    currentPreFlushParentJob = parentJob\r\n    activePreFlushCbs = [...new Set(pendingPreFlushCbs)]\r\n    pendingPreFlushCbs.length = 0\r\n    if (__DEV__) {\r\n      seen = seen || new Map()\r\n    }\r\n    for (\r\n      preFlushIndex = 0;\r\n      preFlushIndex < activePreFlushCbs.length;\r\n      preFlushIndex++\r\n    ) {\r\n      if (\r\n        __DEV__ &&\r\n        checkRecursiveUpdates(seen!, activePreFlushCbs[preFlushIndex])\r\n      ) {\r\n        continue\r\n      }\r\n      activePreFlushCbs[preFlushIndex]()\r\n    }\r\n    activePreFlushCbs = null\r\n    preFlushIndex = 0\r\n    currentPreFlushParentJob = null\r\n    // recursively flush until it drains\r\n    flushPreFlushCbs(seen, parentJob)\r\n  }\r\n}\r\n\r\nexport function flushPostFlushCbs(seen?: CountMap) {\r\n  // flush any pre cbs queued during the flush (e.g. pre watchers)\r\n  flushPreFlushCbs()\r\n  if (pendingPostFlushCbs.length) {\r\n    const deduped = [...new Set(pendingPostFlushCbs)]\r\n    pendingPostFlushCbs.length = 0\r\n\r\n    // #1947 already has active queue, nested flushPostFlushCbs call\r\n    if (activePostFlushCbs) {\r\n      activePostFlushCbs.push(...deduped)\r\n      return\r\n    }\r\n\r\n    activePostFlushCbs = deduped\r\n    if (__DEV__) {\r\n      seen = seen || new Map()\r\n    }\r\n\r\n    activePostFlushCbs.sort((a, b) => getId(a) - getId(b))\r\n\r\n    for (\r\n      postFlushIndex = 0;\r\n      postFlushIndex < activePostFlushCbs.length;\r\n      postFlushIndex++\r\n    ) {\r\n      if (\r\n        __DEV__ &&\r\n        checkRecursiveUpdates(seen!, activePostFlushCbs[postFlushIndex])\r\n      ) {\r\n        continue\r\n      }\r\n      activePostFlushCbs[postFlushIndex]()\r\n    }\r\n    activePostFlushCbs = null\r\n    postFlushIndex = 0\r\n  }\r\n}\r\n\r\nconst getId = (job: SchedulerJob): number =>\r\n  job.id == null ? Infinity : job.id\r\n\r\nfunction flushJobs(seen?: CountMap) {\r\n  isFlushPending = false\r\n  isFlushing = true\r\n  if (__DEV__) {\r\n    seen = seen || new Map()\r\n  }\r\n\r\n  flushPreFlushCbs(seen)\r\n\r\n  // Sort queue before flush.\r\n  // This ensures that:\r\n  // 1. Components are updated from parent to child. (because parent is always\r\n  //    created before the child so its render effect will have smaller\r\n  //    priority number)\r\n  // 2. If a component is unmounted during a parent component's update,\r\n  //    its update can be skipped.\r\n  queue.sort((a, b) => getId(a) - getId(b))\r\n\r\n  // conditional usage of checkRecursiveUpdate must be determined out of\r\n  // try ... catch block since Rollup by default de-optimizes treeshaking\r\n  // inside try-catch. This can leave all warning code unshaked. Although\r\n  // they would get eventually shaken by a minifier like terser, some minifiers\r\n  // would fail to do that (e.g. https://github.com/evanw/esbuild/issues/1610)\r\n  const check = __DEV__\r\n    ? (job: SchedulerJob) => checkRecursiveUpdates(seen!, job)\r\n    : NOOP\r\n\r\n  try {\r\n    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n      const job = queue[flushIndex]\r\n      if (job && job.active !== false) {\r\n        if (__DEV__ && check(job)) {\r\n          continue\r\n        }\r\n        // console.log(`running:`, job.id)\r\n        callWithErrorHandling(job, null, ErrorCodes.SCHEDULER)\r\n      }\r\n    }\r\n  } finally {\r\n    flushIndex = 0\r\n    queue.length = 0\r\n\r\n    flushPostFlushCbs(seen)\r\n\r\n    isFlushing = false\r\n    currentFlushPromise = null\r\n    // some postFlushCb queued jobs!\r\n    // keep flushing until it drains.\r\n    if (\r\n      queue.length ||\r\n      pendingPreFlushCbs.length ||\r\n      pendingPostFlushCbs.length\r\n    ) {\r\n      flushJobs(seen)\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkRecursiveUpdates(seen: CountMap, fn: SchedulerJob) {\r\n  if (!seen.has(fn)) {\r\n    seen.set(fn, 1)\r\n  } else {\r\n    const count = seen.get(fn)!\r\n    if (count > RECURSION_LIMIT) {\r\n      const instance = fn.ownerInstance\r\n      const componentName = instance && getComponentName(instance.type)\r\n      warn(\r\n        `Maximum recursive updates exceeded${\r\n          componentName ? ` in component <${componentName}>` : ``\r\n        }. ` +\r\n          `This means you have a reactive effect that is mutating its own ` +\r\n          `dependencies and thus recursively triggering itself. Possible sources ` +\r\n          `include component template, render function, updated hook or ` +\r\n          `watcher source function.`\r\n      )\r\n      return true\r\n    } else {\r\n      seen.set(fn, count + 1)\r\n    }\r\n  }\r\n}\r\n","/* eslint-disable no-restricted-globals */\r\nimport { App } from './apiCreateApp'\r\nimport { Fragment, Text, Comment, Static } from './vnode'\r\nimport { ComponentInternalInstance } from './component'\r\n\r\ninterface AppRecord {\r\n  id: number\r\n  app: App\r\n  version: string\r\n  types: Record<string, string | Symbol>\r\n}\r\n\r\nconst enum DevtoolsHooks {\r\n  APP_INIT = 'app:init',\r\n  APP_UNMOUNT = 'app:unmount',\r\n  COMPONENT_UPDATED = 'component:updated',\r\n  COMPONENT_ADDED = 'component:added',\r\n  COMPONENT_REMOVED = 'component:removed',\r\n  COMPONENT_EMIT = 'component:emit',\r\n  PERFORMANCE_START = 'perf:start',\r\n  PERFORMANCE_END = 'perf:end'\r\n}\r\n\r\ninterface DevtoolsHook {\r\n  enabled?: boolean\r\n  emit: (event: string, ...payload: any[]) => void\r\n  on: (event: string, handler: Function) => void\r\n  once: (event: string, handler: Function) => void\r\n  off: (event: string, handler: Function) => void\r\n  appRecords: AppRecord[]\r\n}\r\n\r\nexport let devtools: DevtoolsHook\r\n\r\nlet buffer: { event: string; args: any[] }[] = []\r\n\r\nlet devtoolsNotInstalled = false\r\n\r\nfunction emit(event: string, ...args: any[]) {\r\n  if (devtools) {\r\n    devtools.emit(event, ...args)\r\n  } else if (!devtoolsNotInstalled) {\r\n    buffer.push({ event, args })\r\n  }\r\n}\r\n\r\nexport function setDevtoolsHook(hook: DevtoolsHook, target: any) {\r\n  devtools = hook\r\n  if (devtools) {\r\n    devtools.enabled = true\r\n    buffer.forEach(({ event, args }) => devtools.emit(event, ...args))\r\n    buffer = []\r\n  } else if (\r\n    // handle late devtools injection - only do this if we are in an actual\r\n    // browser environment to avoid the timer handle stalling test runner exit\r\n    // (#4815)\r\n    typeof window !== 'undefined' &&\r\n    // some envs mock window but not fully\r\n    window.HTMLElement &&\r\n    // also exclude jsdom\r\n    !window.navigator?.userAgent?.includes('jsdom')\r\n  ) {\r\n    const replay = (target.__VUE_DEVTOOLS_HOOK_REPLAY__ =\r\n      target.__VUE_DEVTOOLS_HOOK_REPLAY__ || [])\r\n    replay.push((newHook: DevtoolsHook) => {\r\n      setDevtoolsHook(newHook, target)\r\n    })\r\n    // clear buffer after 3s - the user probably doesn't have devtools installed\r\n    // at all, and keeping the buffer will cause memory leaks (#4738)\r\n    setTimeout(() => {\r\n      if (!devtools) {\r\n        target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null\r\n        devtoolsNotInstalled = true\r\n        buffer = []\r\n      }\r\n    }, 3000)\r\n  } else {\r\n    // non-browser env, assume not installed\r\n    devtoolsNotInstalled = true\r\n    buffer = []\r\n  }\r\n}\r\n\r\nexport function devtoolsInitApp(app: App, version: string) {\r\n  emit(DevtoolsHooks.APP_INIT, app, version, {\r\n    Fragment,\r\n    Text,\r\n    Comment,\r\n    Static\r\n  })\r\n}\r\n\r\nexport function devtoolsUnmountApp(app: App) {\r\n  emit(DevtoolsHooks.APP_UNMOUNT, app)\r\n}\r\n\r\nexport const devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\r\n  DevtoolsHooks.COMPONENT_ADDED\r\n)\r\n\r\nexport const devtoolsComponentUpdated =\r\n  /*#__PURE__*/ createDevtoolsComponentHook(DevtoolsHooks.COMPONENT_UPDATED)\r\n\r\nexport const devtoolsComponentRemoved =\r\n  /*#__PURE__*/ createDevtoolsComponentHook(DevtoolsHooks.COMPONENT_REMOVED)\r\n\r\nfunction createDevtoolsComponentHook(hook: DevtoolsHooks) {\r\n  return (component: ComponentInternalInstance) => {\r\n    emit(\r\n      hook,\r\n      component.appContext.app,\r\n      component.uid,\r\n      component.parent ? component.parent.uid : undefined,\r\n      component\r\n    )\r\n  }\r\n}\r\n\r\nexport const devtoolsPerfStart = /*#__PURE__*/ createDevtoolsPerformanceHook(\r\n  DevtoolsHooks.PERFORMANCE_START\r\n)\r\n\r\nexport const devtoolsPerfEnd = /*#__PURE__*/ createDevtoolsPerformanceHook(\r\n  DevtoolsHooks.PERFORMANCE_END\r\n)\r\n\r\nfunction createDevtoolsPerformanceHook(hook: DevtoolsHooks) {\r\n  return (component: ComponentInternalInstance, type: string, time: number) => {\r\n    emit(hook, component.appContext.app, component.uid, component, type, time)\r\n  }\r\n}\r\n\r\nexport function devtoolsComponentEmit(\r\n  component: ComponentInternalInstance,\r\n  event: string,\r\n  params: any[]\r\n) {\r\n  emit(\r\n    DevtoolsHooks.COMPONENT_EMIT,\r\n    component.appContext.app,\r\n    component,\r\n    event,\r\n    params\r\n  )\r\n}\r\n","import {\r\n  camelize,\r\n  EMPTY_OBJ,\r\n  toHandlerKey,\r\n  extend,\r\n  hasOwn,\r\n  hyphenate,\r\n  isArray,\r\n  isFunction,\r\n  isOn,\r\n  toNumber,\r\n  UnionToIntersection\r\n} from '@vue/shared'\r\nimport {\r\n  ComponentInternalInstance,\r\n  ComponentOptions,\r\n  ConcreteComponent,\r\n  formatComponentName\r\n} from './component'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from './errorHandling'\r\nimport { warn } from './warning'\r\nimport { devtoolsComponentEmit } from './devtools'\r\nimport { AppContext } from './apiCreateApp'\r\nimport { emit as compatInstanceEmit } from './compat/instanceEventEmitter'\r\nimport {\r\n  compatModelEventPrefix,\r\n  compatModelEmit\r\n} from './compat/componentVModel'\r\n\r\nexport type ObjectEmitsOptions = Record<\r\n  string,\r\n  ((...args: any[]) => any) | null\r\n>\r\n\r\nexport type EmitsOptions = ObjectEmitsOptions | string[]\r\n\r\nexport type EmitsToProps<T extends EmitsOptions> = T extends string[]\r\n  ? {\r\n      [K in string & `on${Capitalize<T[number]>}`]?: (...args: any[]) => any\r\n    }\r\n  : T extends ObjectEmitsOptions\r\n  ? {\r\n      [K in string &\r\n        `on${Capitalize<string & keyof T>}`]?: K extends `on${infer C}`\r\n        ? T[Uncapitalize<C>] extends null\r\n          ? (...args: any[]) => any\r\n          : (\r\n              ...args: T[Uncapitalize<C>] extends (...args: infer P) => any\r\n                ? P\r\n                : never\r\n            ) => any\r\n        : never\r\n    }\r\n  : {}\r\n\r\nexport type EmitFn<\r\n  Options = ObjectEmitsOptions,\r\n  Event extends keyof Options = keyof Options\r\n> = Options extends Array<infer V>\r\n  ? (event: V, ...args: any[]) => void\r\n  : {} extends Options // if the emit is empty object (usually the default value for emit) should be converted to function\r\n  ? (event: string, ...args: any[]) => void\r\n  : UnionToIntersection<\r\n      {\r\n        [key in Event]: Options[key] extends (...args: infer Args) => any\r\n          ? (event: key, ...args: Args) => void\r\n          : (event: key, ...args: any[]) => void\r\n      }[Event]\r\n    >\r\n\r\nexport function emit(\r\n  instance: ComponentInternalInstance,\r\n  event: string,\r\n  ...rawArgs: any[]\r\n) {\r\n  if (instance.isUnmounted) return\r\n  const props = instance.vnode.props || EMPTY_OBJ\r\n\r\n  if (__DEV__) {\r\n    const {\r\n      emitsOptions,\r\n      propsOptions: [propsOptions]\r\n    } = instance\r\n    if (emitsOptions) {\r\n      if (\r\n        !(event in emitsOptions) &&\r\n        !(\r\n          __COMPAT__ &&\r\n          (event.startsWith('hook:') ||\r\n            event.startsWith(compatModelEventPrefix))\r\n        )\r\n      ) {\r\n        if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n          warn(\r\n            `Component emitted event \"${event}\" but it is neither declared in ` +\r\n              `the emits option nor as an \"${toHandlerKey(event)}\" prop.`\r\n          )\r\n        }\r\n      } else {\r\n        const validator = emitsOptions[event]\r\n        if (isFunction(validator)) {\r\n          const isValid = validator(...rawArgs)\r\n          if (!isValid) {\r\n            warn(\r\n              `Invalid event arguments: event validation failed for event \"${event}\".`\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let args = rawArgs\r\n  const isModelListener = event.startsWith('update:')\r\n\r\n  // for v-model update:xxx events, apply modifiers on args\r\n  const modelArg = isModelListener && event.slice(7)\r\n  if (modelArg && modelArg in props) {\r\n    const modifiersKey = `${\r\n      modelArg === 'modelValue' ? 'model' : modelArg\r\n    }Modifiers`\r\n    const { number, trim } = props[modifiersKey] || EMPTY_OBJ\r\n    if (trim) {\r\n      args = rawArgs.map(a => a.trim())\r\n    }\r\n    if (number) {\r\n      args = rawArgs.map(toNumber)\r\n    }\r\n  }\r\n\r\n  if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n    devtoolsComponentEmit(instance, event, args)\r\n  }\r\n\r\n  if (__DEV__) {\r\n    const lowerCaseEvent = event.toLowerCase()\r\n    if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n      warn(\r\n        `Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n          `${formatComponentName(\r\n            instance,\r\n            instance.type\r\n          )} but the handler is registered for \"${event}\". ` +\r\n          `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n          `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n          `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`\r\n      )\r\n    }\r\n  }\r\n\r\n  let handlerName\r\n  let handler =\r\n    props[(handlerName = toHandlerKey(event))] ||\r\n    // also try camelCase event handler (#2249)\r\n    props[(handlerName = toHandlerKey(camelize(event)))]\r\n  // for v-model update:xxx events, also trigger kebab-case equivalent\r\n  // for props passed via kebab-case\r\n  if (!handler && isModelListener) {\r\n    handler = props[(handlerName = toHandlerKey(hyphenate(event)))]\r\n  }\r\n\r\n  if (handler) {\r\n    callWithAsyncErrorHandling(\r\n      handler,\r\n      instance,\r\n      ErrorCodes.COMPONENT_EVENT_HANDLER,\r\n      args\r\n    )\r\n  }\r\n\r\n  const onceHandler = props[handlerName + `Once`]\r\n  if (onceHandler) {\r\n    if (!instance.emitted) {\r\n      instance.emitted = {} as Record<any, boolean>\r\n    } else if (instance.emitted[handlerName]) {\r\n      return\r\n    }\r\n    instance.emitted[handlerName] = true\r\n    callWithAsyncErrorHandling(\r\n      onceHandler,\r\n      instance,\r\n      ErrorCodes.COMPONENT_EVENT_HANDLER,\r\n      args\r\n    )\r\n  }\r\n\r\n  if (__COMPAT__) {\r\n    compatModelEmit(instance, event, args)\r\n    return compatInstanceEmit(instance, event, args)\r\n  }\r\n}\r\n\r\nexport function normalizeEmitsOptions(\r\n  comp: ConcreteComponent,\r\n  appContext: AppContext,\r\n  asMixin = false\r\n): ObjectEmitsOptions | null {\r\n  const cache = appContext.emitsCache\r\n  const cached = cache.get(comp)\r\n  if (cached !== undefined) {\r\n    return cached\r\n  }\r\n\r\n  const raw = comp.emits\r\n  let normalized: ObjectEmitsOptions = {}\r\n\r\n  // apply mixin/extends props\r\n  let hasExtends = false\r\n  if (__FEATURE_OPTIONS_API__ && !isFunction(comp)) {\r\n    const extendEmits = (raw: ComponentOptions) => {\r\n      const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true)\r\n      if (normalizedFromExtend) {\r\n        hasExtends = true\r\n        extend(normalized, normalizedFromExtend)\r\n      }\r\n    }\r\n    if (!asMixin && appContext.mixins.length) {\r\n      appContext.mixins.forEach(extendEmits)\r\n    }\r\n    if (comp.extends) {\r\n      extendEmits(comp.extends)\r\n    }\r\n    if (comp.mixins) {\r\n      comp.mixins.forEach(extendEmits)\r\n    }\r\n  }\r\n\r\n  if (!raw && !hasExtends) {\r\n    cache.set(comp, null)\r\n    return null\r\n  }\r\n\r\n  if (isArray(raw)) {\r\n    raw.forEach(key => (normalized[key] = null))\r\n  } else {\r\n    extend(normalized, raw)\r\n  }\r\n\r\n  cache.set(comp, normalized)\r\n  return normalized\r\n}\r\n\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nexport function isEmitListener(\r\n  options: ObjectEmitsOptions | null,\r\n  key: string\r\n): boolean {\r\n  if (!options || !isOn(key)) {\r\n    return false\r\n  }\r\n\r\n  if (__COMPAT__ && key.startsWith(compatModelEventPrefix)) {\r\n    return true\r\n  }\r\n\r\n  key = key.slice(2).replace(/Once$/, '')\r\n  return (\r\n    hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n    hasOwn(options, hyphenate(key)) ||\r\n    hasOwn(options, key)\r\n  )\r\n}\r\n","import { ComponentInternalInstance } from './component'\r\nimport { devtoolsComponentUpdated } from './devtools'\r\nimport { setBlockTracking } from './vnode'\r\n\r\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nexport let currentRenderingInstance: ComponentInternalInstance | null = null\r\nexport let currentScopeId: string | null = null\r\n\r\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\r\nexport function setCurrentRenderingInstance(\r\n  instance: ComponentInternalInstance | null\r\n): ComponentInternalInstance | null {\r\n  const prev = currentRenderingInstance\r\n  currentRenderingInstance = instance\r\n  currentScopeId = (instance && instance.type.__scopeId) || null\r\n  // v2 pre-compiled components uses _scopeId instead of __scopeId\r\n  if (__COMPAT__ && !currentScopeId) {\r\n    currentScopeId = (instance && (instance.type as any)._scopeId) || null\r\n  }\r\n  return prev\r\n}\r\n\r\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\r\nexport function pushScopeId(id: string | null) {\r\n  currentScopeId = id\r\n}\r\n\r\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\r\nexport function popScopeId() {\r\n  currentScopeId = null\r\n}\r\n\r\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\r\nexport const withScopeId = (_id: string) => withCtx\r\n\r\nexport type ContextualRenderFn = {\r\n  (...args: any[]): any\r\n  _n: boolean /* already normalized */\r\n  _c: boolean /* compiled */\r\n  _d: boolean /* disableTracking */\r\n  _ns: boolean /* nonScoped */\r\n}\r\n\r\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\r\nexport function withCtx(\r\n  fn: Function,\r\n  ctx: ComponentInternalInstance | null = currentRenderingInstance,\r\n  isNonScopedSlot?: boolean // __COMPAT__ only\r\n) {\r\n  if (!ctx) return fn\r\n\r\n  // already normalized\r\n  if ((fn as ContextualRenderFn)._n) {\r\n    return fn\r\n  }\r\n\r\n  const renderFnWithContext: ContextualRenderFn = (...args: any[]) => {\r\n    // If a user calls a compiled slot inside a template expression (#1745), it\r\n    // can mess up block tracking, so by default we disable block tracking and\r\n    // force bail out when invoking a compiled slot (indicated by the ._d flag).\r\n    // This isn't necessary if rendering a compiled `<slot>`, so we flip the\r\n    // ._d flag off when invoking the wrapped fn inside `renderSlot`.\r\n    if (renderFnWithContext._d) {\r\n      setBlockTracking(-1)\r\n    }\r\n    const prevInstance = setCurrentRenderingInstance(ctx)\r\n    const res = fn(...args)\r\n    setCurrentRenderingInstance(prevInstance)\r\n    if (renderFnWithContext._d) {\r\n      setBlockTracking(1)\r\n    }\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      devtoolsComponentUpdated(ctx)\r\n    }\r\n\r\n    return res\r\n  }\r\n\r\n  // mark normalized to avoid duplicated wrapping\r\n  renderFnWithContext._n = true\r\n  // mark this as compiled by default\r\n  // this is used in vnode.ts -> normalizeChildren() to set the slot\r\n  // rendering flag.\r\n  renderFnWithContext._c = true\r\n  // disable block tracking by default\r\n  renderFnWithContext._d = true\r\n  // compat build only flag to distinguish scoped slots from non-scoped ones\r\n  if (__COMPAT__ && isNonScopedSlot) {\r\n    renderFnWithContext._ns = true\r\n  }\r\n  return renderFnWithContext\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  FunctionalComponent,\r\n  Data,\r\n  getComponentName\r\n} from './component'\r\nimport {\r\n  VNode,\r\n  normalizeVNode,\r\n  createVNode,\r\n  Comment,\r\n  cloneVNode,\r\n  VNodeArrayChildren,\r\n  isVNode,\r\n  blockStack\r\n} from './vnode'\r\nimport { handleError, ErrorCodes } from './errorHandling'\r\nimport { PatchFlags, ShapeFlags, isOn, isModelListener } from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { isHmrUpdating } from './hmr'\r\nimport { NormalizedProps } from './componentProps'\r\nimport { isEmitListener } from './componentEmits'\r\nimport { setCurrentRenderingInstance } from './componentRenderContext'\r\nimport {\r\n  DeprecationTypes,\r\n  isCompatEnabled,\r\n  warnDeprecation\r\n} from './compat/compatConfig'\r\n\r\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs: boolean = false\r\n\r\nexport function markAttrsAccessed() {\r\n  accessedAttrs = true\r\n}\r\n\r\ntype SetRootFn = ((root: VNode) => void) | undefined\r\n\r\nexport function renderComponentRoot(\r\n  instance: ComponentInternalInstance\r\n): VNode {\r\n  const {\r\n    type: Component,\r\n    vnode,\r\n    proxy,\r\n    withProxy,\r\n    props,\r\n    propsOptions: [propsOptions],\r\n    slots,\r\n    attrs,\r\n    emit,\r\n    render,\r\n    renderCache,\r\n    data,\r\n    setupState,\r\n    ctx,\r\n    inheritAttrs\r\n  } = instance\r\n\r\n  let result\r\n  let fallthroughAttrs\r\n  const prev = setCurrentRenderingInstance(instance)\r\n  if (__DEV__) {\r\n    accessedAttrs = false\r\n  }\r\n\r\n  try {\r\n    if (vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\r\n      // withProxy is a proxy with a different `has` trap only for\r\n      // runtime-compiled render functions using `with` block.\r\n      const proxyToUse = withProxy || proxy\r\n      result = normalizeVNode(\r\n        render!.call(\r\n          proxyToUse,\r\n          proxyToUse!,\r\n          renderCache,\r\n          props,\r\n          setupState,\r\n          data,\r\n          ctx\r\n        )\r\n      )\r\n      fallthroughAttrs = attrs\r\n    } else {\r\n      // functional\r\n      const render = Component as FunctionalComponent\r\n      // in dev, mark attrs accessed if optional props (attrs === props)\r\n      if (__DEV__ && attrs === props) {\r\n        markAttrsAccessed()\r\n      }\r\n      result = normalizeVNode(\r\n        render.length > 1\r\n          ? render(\r\n              props,\r\n              __DEV__\r\n                ? {\r\n                    get attrs() {\r\n                      markAttrsAccessed()\r\n                      return attrs\r\n                    },\r\n                    slots,\r\n                    emit\r\n                  }\r\n                : { attrs, slots, emit }\r\n            )\r\n          : render(props, null as any /* we know it doesn't need it */)\r\n      )\r\n      fallthroughAttrs = Component.props\r\n        ? attrs\r\n        : getFunctionalFallthrough(attrs)\r\n    }\r\n  } catch (err) {\r\n    blockStack.length = 0\r\n    handleError(err, instance, ErrorCodes.RENDER_FUNCTION)\r\n    result = createVNode(Comment)\r\n  }\r\n\r\n  // attr merging\r\n  // in dev mode, comments are preserved, and it's possible for a template\r\n  // to have comments along side the root element which makes it a fragment\r\n  let root = result\r\n  let setRoot: SetRootFn = undefined\r\n  if (\r\n    __DEV__ &&\r\n    result.patchFlag > 0 &&\r\n    result.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT\r\n  ) {\r\n    ;[root, setRoot] = getChildRoot(result)\r\n  }\r\n\r\n  if (fallthroughAttrs && inheritAttrs !== false) {\r\n    const keys = Object.keys(fallthroughAttrs)\r\n    const { shapeFlag } = root\r\n    if (keys.length) {\r\n      if (shapeFlag & (ShapeFlags.ELEMENT | ShapeFlags.COMPONENT)) {\r\n        if (propsOptions && keys.some(isModelListener)) {\r\n          // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n          // prop, it indicates this component expects to handle v-model and\r\n          // it should not fallthrough.\r\n          // related: #1543, #1643, #1989\r\n          fallthroughAttrs = filterModelListeners(\r\n            fallthroughAttrs,\r\n            propsOptions\r\n          )\r\n        }\r\n        root = cloneVNode(root, fallthroughAttrs)\r\n      } else if (__DEV__ && !accessedAttrs && root.type !== Comment) {\r\n        const allAttrs = Object.keys(attrs)\r\n        const eventAttrs: string[] = []\r\n        const extraAttrs: string[] = []\r\n        for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n          const key = allAttrs[i]\r\n          if (isOn(key)) {\r\n            // ignore v-model handlers when they fail to fallthrough\r\n            if (!isModelListener(key)) {\r\n              // remove `on`, lowercase first letter to reflect event casing\r\n              // accurately\r\n              eventAttrs.push(key[2].toLowerCase() + key.slice(3))\r\n            }\r\n          } else {\r\n            extraAttrs.push(key)\r\n          }\r\n        }\r\n        if (extraAttrs.length) {\r\n          warn(\r\n            `Extraneous non-props attributes (` +\r\n              `${extraAttrs.join(', ')}) ` +\r\n              `were passed to component but could not be automatically inherited ` +\r\n              `because component renders fragment or text root nodes.`\r\n          )\r\n        }\r\n        if (eventAttrs.length) {\r\n          warn(\r\n            `Extraneous non-emits event listeners (` +\r\n              `${eventAttrs.join(', ')}) ` +\r\n              `were passed to component but could not be automatically inherited ` +\r\n              `because component renders fragment or text root nodes. ` +\r\n              `If the listener is intended to be a component custom event listener only, ` +\r\n              `declare it using the \"emits\" option.`\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (\r\n    __COMPAT__ &&\r\n    isCompatEnabled(DeprecationTypes.INSTANCE_ATTRS_CLASS_STYLE, instance) &&\r\n    vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT &&\r\n    root.shapeFlag & (ShapeFlags.ELEMENT | ShapeFlags.COMPONENT)\r\n  ) {\r\n    const { class: cls, style } = vnode.props || {}\r\n    if (cls || style) {\r\n      if (__DEV__ && inheritAttrs === false) {\r\n        warnDeprecation(\r\n          DeprecationTypes.INSTANCE_ATTRS_CLASS_STYLE,\r\n          instance,\r\n          getComponentName(instance.type)\r\n        )\r\n      }\r\n      root = cloneVNode(root, {\r\n        class: cls,\r\n        style: style\r\n      })\r\n    }\r\n  }\r\n\r\n  // inherit directives\r\n  if (vnode.dirs) {\r\n    if (__DEV__ && !isElementRoot(root)) {\r\n      warn(\r\n        `Runtime directive used on component with non-element root node. ` +\r\n          `The directives will not function as intended.`\r\n      )\r\n    }\r\n    // clone before mutating since the root may be a hoisted vnode\r\n    root = cloneVNode(root)\r\n    root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs\r\n  }\r\n  // inherit transition data\r\n  if (vnode.transition) {\r\n    if (__DEV__ && !isElementRoot(root)) {\r\n      warn(\r\n        `Component inside <Transition> renders non-element root node ` +\r\n          `that cannot be animated.`\r\n      )\r\n    }\r\n    root.transition = vnode.transition\r\n  }\r\n\r\n  if (__DEV__ && setRoot) {\r\n    setRoot(root)\r\n  } else {\r\n    result = root\r\n  }\r\n\r\n  setCurrentRenderingInstance(prev)\r\n  return result\r\n}\r\n\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode: VNode): [VNode, SetRootFn] => {\r\n  const rawChildren = vnode.children as VNodeArrayChildren\r\n  const dynamicChildren = vnode.dynamicChildren\r\n  const childRoot = filterSingleRoot(rawChildren)\r\n  if (!childRoot) {\r\n    return [vnode, undefined]\r\n  }\r\n  const index = rawChildren.indexOf(childRoot)\r\n  const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1\r\n  const setRoot: SetRootFn = (updatedRoot: VNode) => {\r\n    rawChildren[index] = updatedRoot\r\n    if (dynamicChildren) {\r\n      if (dynamicIndex > -1) {\r\n        dynamicChildren[dynamicIndex] = updatedRoot\r\n      } else if (updatedRoot.patchFlag > 0) {\r\n        vnode.dynamicChildren = [...dynamicChildren, updatedRoot]\r\n      }\r\n    }\r\n  }\r\n  return [normalizeVNode(childRoot), setRoot]\r\n}\r\n\r\nexport function filterSingleRoot(\r\n  children: VNodeArrayChildren\r\n): VNode | undefined {\r\n  let singleRoot\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    if (isVNode(child)) {\r\n      // ignore user comment\r\n      if (child.type !== Comment || child.children === 'v-if') {\r\n        if (singleRoot) {\r\n          // has more than 1 non-comment child, return now\r\n          return\r\n        } else {\r\n          singleRoot = child\r\n        }\r\n      }\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n  return singleRoot\r\n}\r\n\r\nconst getFunctionalFallthrough = (attrs: Data): Data | undefined => {\r\n  let res: Data | undefined\r\n  for (const key in attrs) {\r\n    if (key === 'class' || key === 'style' || isOn(key)) {\r\n      ;(res || (res = {}))[key] = attrs[key]\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nconst filterModelListeners = (attrs: Data, props: NormalizedProps): Data => {\r\n  const res: Data = {}\r\n  for (const key in attrs) {\r\n    if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n      res[key] = attrs[key]\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nconst isElementRoot = (vnode: VNode) => {\r\n  return (\r\n    vnode.shapeFlag & (ShapeFlags.COMPONENT | ShapeFlags.ELEMENT) ||\r\n    vnode.type === Comment // potential v-if branch switch\r\n  )\r\n}\r\n\r\nexport function shouldUpdateComponent(\r\n  prevVNode: VNode,\r\n  nextVNode: VNode,\r\n  optimized?: boolean\r\n): boolean {\r\n  const { props: prevProps, children: prevChildren, component } = prevVNode\r\n  const { props: nextProps, children: nextChildren, patchFlag } = nextVNode\r\n  const emits = component!.emitsOptions\r\n\r\n  // Parent component's render function was hot-updated. Since this may have\r\n  // caused the child component's slots content to have changed, we need to\r\n  // force the child to update as well.\r\n  if (__DEV__ && (prevChildren || nextChildren) && isHmrUpdating) {\r\n    return true\r\n  }\r\n\r\n  // force child update for runtime directive or transition on component vnode.\r\n  if (nextVNode.dirs || nextVNode.transition) {\r\n    return true\r\n  }\r\n\r\n  if (optimized && patchFlag >= 0) {\r\n    if (patchFlag & PatchFlags.DYNAMIC_SLOTS) {\r\n      // slot content that references values that might have changed,\r\n      // e.g. in a v-for\r\n      return true\r\n    }\r\n    if (patchFlag & PatchFlags.FULL_PROPS) {\r\n      if (!prevProps) {\r\n        return !!nextProps\r\n      }\r\n      // presence of this flag indicates props are always non-null\r\n      return hasPropsChanged(prevProps, nextProps!, emits)\r\n    } else if (patchFlag & PatchFlags.PROPS) {\r\n      const dynamicProps = nextVNode.dynamicProps!\r\n      for (let i = 0; i < dynamicProps.length; i++) {\r\n        const key = dynamicProps[i]\r\n        if (\r\n          nextProps![key] !== prevProps![key] &&\r\n          !isEmitListener(emits, key)\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // this path is only taken by manually written render functions\r\n    // so presence of any children leads to a forced update\r\n    if (prevChildren || nextChildren) {\r\n      if (!nextChildren || !(nextChildren as any).$stable) {\r\n        return true\r\n      }\r\n    }\r\n    if (prevProps === nextProps) {\r\n      return false\r\n    }\r\n    if (!prevProps) {\r\n      return !!nextProps\r\n    }\r\n    if (!nextProps) {\r\n      return true\r\n    }\r\n    return hasPropsChanged(prevProps, nextProps, emits)\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nfunction hasPropsChanged(\r\n  prevProps: Data,\r\n  nextProps: Data,\r\n  emitsOptions: ComponentInternalInstance['emitsOptions']\r\n): boolean {\r\n  const nextKeys = Object.keys(nextProps)\r\n  if (nextKeys.length !== Object.keys(prevProps).length) {\r\n    return true\r\n  }\r\n  for (let i = 0; i < nextKeys.length; i++) {\r\n    const key = nextKeys[i]\r\n    if (\r\n      nextProps[key] !== prevProps[key] &&\r\n      !isEmitListener(emitsOptions, key)\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport function updateHOCHostEl(\r\n  { vnode, parent }: ComponentInternalInstance,\r\n  el: typeof vnode.el // HostNode\r\n) {\r\n  while (parent && parent.subTree === vnode) {\r\n    ;(vnode = parent.vnode).el = el\r\n    parent = parent.parent\r\n  }\r\n}\r\n","import {\r\n  VNode,\r\n  normalizeVNode,\r\n  VNodeProps,\r\n  isSameVNodeType,\r\n  openBlock,\r\n  closeBlock,\r\n  currentBlock,\r\n  Comment,\r\n  createVNode,\r\n  isBlockTreeEnabled\r\n} from '../vnode'\r\nimport { isFunction, isArray, ShapeFlags, toNumber } from '@vue/shared'\r\nimport { ComponentInternalInstance, handleSetupResult } from '../component'\r\nimport { Slots } from '../componentSlots'\r\nimport {\r\n  RendererInternals,\r\n  MoveType,\r\n  SetupRenderEffectFn,\r\n  RendererNode,\r\n  RendererElement\r\n} from '../renderer'\r\nimport { queuePostFlushCb } from '../scheduler'\r\nimport { filterSingleRoot, updateHOCHostEl } from '../componentRenderUtils'\r\nimport { pushWarningContext, popWarningContext, warn } from '../warning'\r\nimport { handleError, ErrorCodes } from '../errorHandling'\r\n\r\nexport interface SuspenseProps {\r\n  onResolve?: () => void\r\n  onPending?: () => void\r\n  onFallback?: () => void\r\n  timeout?: string | number\r\n}\r\n\r\nexport const isSuspense = (type: any): boolean => type.__isSuspense\r\n\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nexport const SuspenseImpl = {\r\n  name: 'Suspense',\r\n  // In order to make Suspense tree-shakable, we need to avoid importing it\r\n  // directly in the renderer. The renderer checks for the __isSuspense flag\r\n  // on a vnode's type and calls the `process` method, passing in renderer\r\n  // internals.\r\n  __isSuspense: true,\r\n  process(\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n    // platform-specific impl passed from renderer\r\n    rendererInternals: RendererInternals\r\n  ) {\r\n    if (n1 == null) {\r\n      mountSuspense(\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized,\r\n        rendererInternals\r\n      )\r\n    } else {\r\n      patchSuspense(\r\n        n1,\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized,\r\n        rendererInternals\r\n      )\r\n    }\r\n  },\r\n  hydrate: hydrateSuspense,\r\n  create: createSuspenseBoundary,\r\n  normalize: normalizeSuspenseChildren\r\n}\r\n\r\n// Force-casted public typing for h and TSX props inference\r\nexport const Suspense = (__FEATURE_SUSPENSE__ ? SuspenseImpl : null) as any as {\r\n  __isSuspense: true\r\n  new (): { $props: VNodeProps & SuspenseProps }\r\n}\r\n\r\nfunction triggerEvent(\r\n  vnode: VNode,\r\n  name: 'onResolve' | 'onPending' | 'onFallback'\r\n) {\r\n  const eventListener = vnode.props && vnode.props[name]\r\n  if (isFunction(eventListener)) {\r\n    eventListener()\r\n  }\r\n}\r\n\r\nfunction mountSuspense(\r\n  vnode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals\r\n) {\r\n  const {\r\n    p: patch,\r\n    o: { createElement }\r\n  } = rendererInternals\r\n  const hiddenContainer = createElement('div')\r\n  const suspense = (vnode.suspense = createSuspenseBoundary(\r\n    vnode,\r\n    parentSuspense,\r\n    parentComponent,\r\n    container,\r\n    hiddenContainer,\r\n    anchor,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized,\r\n    rendererInternals\r\n  ))\r\n\r\n  // start mounting the content subtree in an off-dom container\r\n  patch(\r\n    null,\r\n    (suspense.pendingBranch = vnode.ssContent!),\r\n    hiddenContainer,\r\n    null,\r\n    parentComponent,\r\n    suspense,\r\n    isSVG,\r\n    slotScopeIds\r\n  )\r\n  // now check if we have encountered any async deps\r\n  if (suspense.deps > 0) {\r\n    // has async\r\n    // invoke @fallback event\r\n    triggerEvent(vnode, 'onPending')\r\n    triggerEvent(vnode, 'onFallback')\r\n\r\n    // mount the fallback tree\r\n    patch(\r\n      null,\r\n      vnode.ssFallback!,\r\n      container,\r\n      anchor,\r\n      parentComponent,\r\n      null, // fallback tree will not have suspense context\r\n      isSVG,\r\n      slotScopeIds\r\n    )\r\n    setActiveBranch(suspense, vnode.ssFallback!)\r\n  } else {\r\n    // Suspense has no async deps. Just resolve.\r\n    suspense.resolve()\r\n  }\r\n}\r\n\r\nfunction patchSuspense(\r\n  n1: VNode,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  { p: patch, um: unmount, o: { createElement } }: RendererInternals\r\n) {\r\n  const suspense = (n2.suspense = n1.suspense)!\r\n  suspense.vnode = n2\r\n  n2.el = n1.el\r\n  const newBranch = n2.ssContent!\r\n  const newFallback = n2.ssFallback!\r\n\r\n  const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense\r\n  if (pendingBranch) {\r\n    suspense.pendingBranch = newBranch\r\n    if (isSameVNodeType(newBranch, pendingBranch)) {\r\n      // same root type but content may have changed.\r\n      patch(\r\n        pendingBranch,\r\n        newBranch,\r\n        suspense.hiddenContainer,\r\n        null,\r\n        parentComponent,\r\n        suspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n      if (suspense.deps <= 0) {\r\n        suspense.resolve()\r\n      } else if (isInFallback) {\r\n        patch(\r\n          activeBranch,\r\n          newFallback,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          null, // fallback tree will not have suspense context\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        setActiveBranch(suspense, newFallback)\r\n      }\r\n    } else {\r\n      // toggled before pending tree is resolved\r\n      suspense.pendingId++\r\n      if (isHydrating) {\r\n        // if toggled before hydration is finished, the current DOM tree is\r\n        // no longer valid. set it as the active branch so it will be unmounted\r\n        // when resolved\r\n        suspense.isHydrating = false\r\n        suspense.activeBranch = pendingBranch\r\n      } else {\r\n        unmount(pendingBranch, parentComponent, suspense)\r\n      }\r\n      // increment pending ID. this is used to invalidate async callbacks\r\n      // reset suspense state\r\n      suspense.deps = 0\r\n      // discard effects from pending branch\r\n      suspense.effects.length = 0\r\n      // discard previous container\r\n      suspense.hiddenContainer = createElement('div')\r\n\r\n      if (isInFallback) {\r\n        // already in fallback state\r\n        patch(\r\n          null,\r\n          newBranch,\r\n          suspense.hiddenContainer,\r\n          null,\r\n          parentComponent,\r\n          suspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        if (suspense.deps <= 0) {\r\n          suspense.resolve()\r\n        } else {\r\n          patch(\r\n            activeBranch,\r\n            newFallback,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            null, // fallback tree will not have suspense context\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n          setActiveBranch(suspense, newFallback)\r\n        }\r\n      } else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n        // toggled \"back\" to current active branch\r\n        patch(\r\n          activeBranch,\r\n          newBranch,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          suspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        // force resolve\r\n        suspense.resolve(true)\r\n      } else {\r\n        // switched to a 3rd branch\r\n        patch(\r\n          null,\r\n          newBranch,\r\n          suspense.hiddenContainer,\r\n          null,\r\n          parentComponent,\r\n          suspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        if (suspense.deps <= 0) {\r\n          suspense.resolve()\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n      // root did not change, just normal patch\r\n      patch(\r\n        activeBranch,\r\n        newBranch,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        suspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n      setActiveBranch(suspense, newBranch)\r\n    } else {\r\n      // root node toggled\r\n      // invoke @pending event\r\n      triggerEvent(n2, 'onPending')\r\n      // mount pending branch in off-dom container\r\n      suspense.pendingBranch = newBranch\r\n      suspense.pendingId++\r\n      patch(\r\n        null,\r\n        newBranch,\r\n        suspense.hiddenContainer,\r\n        null,\r\n        parentComponent,\r\n        suspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n      if (suspense.deps <= 0) {\r\n        // incoming branch has no async deps, resolve now.\r\n        suspense.resolve()\r\n      } else {\r\n        const { timeout, pendingId } = suspense\r\n        if (timeout > 0) {\r\n          setTimeout(() => {\r\n            if (suspense.pendingId === pendingId) {\r\n              suspense.fallback(newFallback)\r\n            }\r\n          }, timeout)\r\n        } else if (timeout === 0) {\r\n          suspense.fallback(newFallback)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport interface SuspenseBoundary {\r\n  vnode: VNode<RendererNode, RendererElement, SuspenseProps>\r\n  parent: SuspenseBoundary | null\r\n  parentComponent: ComponentInternalInstance | null\r\n  isSVG: boolean\r\n  container: RendererElement\r\n  hiddenContainer: RendererElement\r\n  anchor: RendererNode | null\r\n  activeBranch: VNode | null\r\n  pendingBranch: VNode | null\r\n  deps: number\r\n  pendingId: number\r\n  timeout: number\r\n  isInFallback: boolean\r\n  isHydrating: boolean\r\n  isUnmounted: boolean\r\n  effects: Function[]\r\n  resolve(force?: boolean): void\r\n  fallback(fallbackVNode: VNode): void\r\n  move(\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    type: MoveType\r\n  ): void\r\n  next(): RendererNode | null\r\n  registerDep(\r\n    instance: ComponentInternalInstance,\r\n    setupRenderEffect: SetupRenderEffectFn\r\n  ): void\r\n  unmount(parentSuspense: SuspenseBoundary | null, doRemove?: boolean): void\r\n}\r\n\r\nlet hasWarned = false\r\n\r\nfunction createSuspenseBoundary(\r\n  vnode: VNode,\r\n  parent: SuspenseBoundary | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  container: RendererElement,\r\n  hiddenContainer: RendererElement,\r\n  anchor: RendererNode | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals,\r\n  isHydrating = false\r\n): SuspenseBoundary {\r\n  /* istanbul ignore if */\r\n  if (__DEV__ && !__TEST__ && !hasWarned) {\r\n    hasWarned = true\r\n    // @ts-ignore `console.info` cannot be null error\r\n    console[console.info ? 'info' : 'log'](\r\n      `<Suspense> is an experimental feature and its API will likely change.`\r\n    )\r\n  }\r\n\r\n  const {\r\n    p: patch,\r\n    m: move,\r\n    um: unmount,\r\n    n: next,\r\n    o: { parentNode, remove }\r\n  } = rendererInternals\r\n\r\n  const timeout = toNumber(vnode.props && vnode.props.timeout)\r\n  const suspense: SuspenseBoundary = {\r\n    vnode,\r\n    parent,\r\n    parentComponent,\r\n    isSVG,\r\n    container,\r\n    hiddenContainer,\r\n    anchor,\r\n    deps: 0,\r\n    pendingId: 0,\r\n    timeout: typeof timeout === 'number' ? timeout : -1,\r\n    activeBranch: null,\r\n    pendingBranch: null,\r\n    isInFallback: true,\r\n    isHydrating,\r\n    isUnmounted: false,\r\n    effects: [],\r\n\r\n    resolve(resume = false) {\r\n      if (__DEV__) {\r\n        if (!resume && !suspense.pendingBranch) {\r\n          throw new Error(\r\n            `suspense.resolve() is called without a pending branch.`\r\n          )\r\n        }\r\n        if (suspense.isUnmounted) {\r\n          throw new Error(\r\n            `suspense.resolve() is called on an already unmounted suspense boundary.`\r\n          )\r\n        }\r\n      }\r\n      const {\r\n        vnode,\r\n        activeBranch,\r\n        pendingBranch,\r\n        pendingId,\r\n        effects,\r\n        parentComponent,\r\n        container\r\n      } = suspense\r\n\r\n      if (suspense.isHydrating) {\r\n        suspense.isHydrating = false\r\n      } else if (!resume) {\r\n        const delayEnter =\r\n          activeBranch &&\r\n          pendingBranch!.transition &&\r\n          pendingBranch!.transition.mode === 'out-in'\r\n        if (delayEnter) {\r\n          activeBranch!.transition!.afterLeave = () => {\r\n            if (pendingId === suspense.pendingId) {\r\n              move(pendingBranch!, container, anchor, MoveType.ENTER)\r\n            }\r\n          }\r\n        }\r\n        // this is initial anchor on mount\r\n        let { anchor } = suspense\r\n        // unmount current active tree\r\n        if (activeBranch) {\r\n          // if the fallback tree was mounted, it may have been moved\r\n          // as part of a parent suspense. get the latest anchor for insertion\r\n          anchor = next(activeBranch)\r\n          unmount(activeBranch, parentComponent, suspense, true)\r\n        }\r\n        if (!delayEnter) {\r\n          // move content from off-dom container to actual container\r\n          move(pendingBranch!, container, anchor, MoveType.ENTER)\r\n        }\r\n      }\r\n\r\n      setActiveBranch(suspense, pendingBranch!)\r\n      suspense.pendingBranch = null\r\n      suspense.isInFallback = false\r\n\r\n      // flush buffered effects\r\n      // check if there is a pending parent suspense\r\n      let parent = suspense.parent\r\n      let hasUnresolvedAncestor = false\r\n      while (parent) {\r\n        if (parent.pendingBranch) {\r\n          // found a pending parent suspense, merge buffered post jobs\r\n          // into that parent\r\n          parent.effects.push(...effects)\r\n          hasUnresolvedAncestor = true\r\n          break\r\n        }\r\n        parent = parent.parent\r\n      }\r\n      // no pending parent suspense, flush all jobs\r\n      if (!hasUnresolvedAncestor) {\r\n        queuePostFlushCb(effects)\r\n      }\r\n      suspense.effects = []\r\n\r\n      // invoke @resolve event\r\n      triggerEvent(vnode, 'onResolve')\r\n    },\r\n\r\n    fallback(fallbackVNode) {\r\n      if (!suspense.pendingBranch) {\r\n        return\r\n      }\r\n\r\n      const { vnode, activeBranch, parentComponent, container, isSVG } =\r\n        suspense\r\n\r\n      // invoke @fallback event\r\n      triggerEvent(vnode, 'onFallback')\r\n\r\n      const anchor = next(activeBranch!)\r\n      const mountFallback = () => {\r\n        if (!suspense.isInFallback) {\r\n          return\r\n        }\r\n        // mount the fallback tree\r\n        patch(\r\n          null,\r\n          fallbackVNode,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          null, // fallback tree will not have suspense context\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        setActiveBranch(suspense, fallbackVNode)\r\n      }\r\n\r\n      const delayEnter =\r\n        fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in'\r\n      if (delayEnter) {\r\n        activeBranch!.transition!.afterLeave = mountFallback\r\n      }\r\n      suspense.isInFallback = true\r\n\r\n      // unmount current active branch\r\n      unmount(\r\n        activeBranch!,\r\n        parentComponent,\r\n        null, // no suspense so unmount hooks fire now\r\n        true // shouldRemove\r\n      )\r\n\r\n      if (!delayEnter) {\r\n        mountFallback()\r\n      }\r\n    },\r\n\r\n    move(container, anchor, type) {\r\n      suspense.activeBranch &&\r\n        move(suspense.activeBranch, container, anchor, type)\r\n      suspense.container = container\r\n    },\r\n\r\n    next() {\r\n      return suspense.activeBranch && next(suspense.activeBranch)\r\n    },\r\n\r\n    registerDep(instance, setupRenderEffect) {\r\n      const isInPendingSuspense = !!suspense.pendingBranch\r\n      if (isInPendingSuspense) {\r\n        suspense.deps++\r\n      }\r\n      const hydratedEl = instance.vnode.el\r\n      instance\r\n        .asyncDep!.catch(err => {\r\n          handleError(err, instance, ErrorCodes.SETUP_FUNCTION)\r\n        })\r\n        .then(asyncSetupResult => {\r\n          // retry when the setup() promise resolves.\r\n          // component may have been unmounted before resolve.\r\n          if (\r\n            instance.isUnmounted ||\r\n            suspense.isUnmounted ||\r\n            suspense.pendingId !== instance.suspenseId\r\n          ) {\r\n            return\r\n          }\r\n          // retry from this component\r\n          instance.asyncResolved = true\r\n          const { vnode } = instance\r\n          if (__DEV__) {\r\n            pushWarningContext(vnode)\r\n          }\r\n          handleSetupResult(instance, asyncSetupResult, false)\r\n          if (hydratedEl) {\r\n            // vnode may have been replaced if an update happened before the\r\n            // async dep is resolved.\r\n            vnode.el = hydratedEl\r\n          }\r\n          const placeholder = !hydratedEl && instance.subTree.el\r\n          setupRenderEffect(\r\n            instance,\r\n            vnode,\r\n            // component may have been moved before resolve.\r\n            // if this is not a hydration, instance.subTree will be the comment\r\n            // placeholder.\r\n            parentNode(hydratedEl || instance.subTree.el!)!,\r\n            // anchor will not be used if this is hydration, so only need to\r\n            // consider the comment placeholder case.\r\n            hydratedEl ? null : next(instance.subTree),\r\n            suspense,\r\n            isSVG,\r\n            optimized\r\n          )\r\n          if (placeholder) {\r\n            remove(placeholder)\r\n          }\r\n          updateHOCHostEl(instance, vnode.el)\r\n          if (__DEV__) {\r\n            popWarningContext()\r\n          }\r\n          // only decrease deps count if suspense is not already resolved\r\n          if (isInPendingSuspense && --suspense.deps === 0) {\r\n            suspense.resolve()\r\n          }\r\n        })\r\n    },\r\n\r\n    unmount(parentSuspense, doRemove) {\r\n      suspense.isUnmounted = true\r\n      if (suspense.activeBranch) {\r\n        unmount(\r\n          suspense.activeBranch,\r\n          parentComponent,\r\n          parentSuspense,\r\n          doRemove\r\n        )\r\n      }\r\n      if (suspense.pendingBranch) {\r\n        unmount(\r\n          suspense.pendingBranch,\r\n          parentComponent,\r\n          parentSuspense,\r\n          doRemove\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  return suspense\r\n}\r\n\r\nfunction hydrateSuspense(\r\n  node: Node,\r\n  vnode: VNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals,\r\n  hydrateNode: (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => Node | null\r\n): Node | null {\r\n  /* eslint-disable no-restricted-globals */\r\n  const suspense = (vnode.suspense = createSuspenseBoundary(\r\n    vnode,\r\n    parentSuspense,\r\n    parentComponent,\r\n    node.parentNode!,\r\n    document.createElement('div'),\r\n    null,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized,\r\n    rendererInternals,\r\n    true /* hydrating */\r\n  ))\r\n  // there are two possible scenarios for server-rendered suspense:\r\n  // - success: ssr content should be fully resolved\r\n  // - failure: ssr content should be the fallback branch.\r\n  // however, on the client we don't really know if it has failed or not\r\n  // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n  // need to construct a suspense boundary first\r\n  const result = hydrateNode(\r\n    node,\r\n    (suspense.pendingBranch = vnode.ssContent!),\r\n    parentComponent,\r\n    suspense,\r\n    slotScopeIds,\r\n    optimized\r\n  )\r\n  if (suspense.deps === 0) {\r\n    suspense.resolve()\r\n  }\r\n  return result\r\n  /* eslint-enable no-restricted-globals */\r\n}\r\n\r\nfunction normalizeSuspenseChildren(vnode: VNode) {\r\n  const { shapeFlag, children } = vnode\r\n  const isSlotChildren = shapeFlag & ShapeFlags.SLOTS_CHILDREN\r\n  vnode.ssContent = normalizeSuspenseSlot(\r\n    isSlotChildren ? (children as Slots).default : children\r\n  )\r\n  vnode.ssFallback = isSlotChildren\r\n    ? normalizeSuspenseSlot((children as Slots).fallback)\r\n    : createVNode(Comment)\r\n}\r\n\r\nfunction normalizeSuspenseSlot(s: any) {\r\n  let block: VNode[] | null | undefined\r\n  if (isFunction(s)) {\r\n    const trackBlock = isBlockTreeEnabled && s._c\r\n    if (trackBlock) {\r\n      // disableTracking: false\r\n      // allow block tracking for compiled slots\r\n      // (see ./componentRenderContext.ts)\r\n      s._d = false\r\n      openBlock()\r\n    }\r\n    s = s()\r\n    if (trackBlock) {\r\n      s._d = true\r\n      block = currentBlock\r\n      closeBlock()\r\n    }\r\n  }\r\n  if (isArray(s)) {\r\n    const singleChild = filterSingleRoot(s)\r\n    if (__DEV__ && !singleChild) {\r\n      warn(`<Suspense> slots expect a single root node.`)\r\n    }\r\n    s = singleChild\r\n  }\r\n  s = normalizeVNode(s)\r\n  if (block && !s.dynamicChildren) {\r\n    s.dynamicChildren = block.filter(c => c !== s)\r\n  }\r\n  return s\r\n}\r\n\r\nexport function queueEffectWithSuspense(\r\n  fn: Function | Function[],\r\n  suspense: SuspenseBoundary | null\r\n): void {\r\n  if (suspense && suspense.pendingBranch) {\r\n    if (isArray(fn)) {\r\n      suspense.effects.push(...fn)\r\n    } else {\r\n      suspense.effects.push(fn)\r\n    }\r\n  } else {\r\n    queuePostFlushCb(fn)\r\n  }\r\n}\r\n\r\nfunction setActiveBranch(suspense: SuspenseBoundary, branch: VNode) {\r\n  suspense.activeBranch = branch\r\n  const { vnode, parentComponent } = suspense\r\n  const el = (vnode.el = branch.el)\r\n  // in case suspense is the root node of a component,\r\n  // recursively update the HOC el\r\n  if (parentComponent && parentComponent.subTree === vnode) {\r\n    parentComponent.vnode.el = el\r\n    updateHOCHostEl(parentComponent, el)\r\n  }\r\n}\r\n","import { isFunction } from '@vue/shared'\r\nimport { currentInstance } from './component'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { warn } from './warning'\r\n\r\nexport interface InjectionKey<T> extends Symbol {}\r\n\r\nexport function provide<T>(key: InjectionKey<T> | string | number, value: T) {\r\n  if (!currentInstance) {\r\n    if (__DEV__) {\r\n      warn(`provide() can only be used inside setup().`)\r\n    }\r\n  } else {\r\n    let provides = currentInstance.provides\r\n    // by default an instance inherits its parent's provides object\r\n    // but when it needs to provide values of its own, it creates its\r\n    // own provides object using parent provides object as prototype.\r\n    // this way in `inject` we can simply look up injections from direct\r\n    // parent and let the prototype chain do the work.\r\n    const parentProvides =\r\n      currentInstance.parent && currentInstance.parent.provides\r\n    if (parentProvides === provides) {\r\n      provides = currentInstance.provides = Object.create(parentProvides)\r\n    }\r\n    // TS doesn't allow symbol as index type\r\n    provides[key as string] = value\r\n  }\r\n}\r\n\r\nexport function inject<T>(key: InjectionKey<T> | string): T | undefined\r\nexport function inject<T>(\r\n  key: InjectionKey<T> | string,\r\n  defaultValue: T,\r\n  treatDefaultAsFactory?: false\r\n): T\r\nexport function inject<T>(\r\n  key: InjectionKey<T> | string,\r\n  defaultValue: T | (() => T),\r\n  treatDefaultAsFactory: true\r\n): T\r\nexport function inject(\r\n  key: InjectionKey<any> | string,\r\n  defaultValue?: unknown,\r\n  treatDefaultAsFactory = false\r\n) {\r\n  // fallback to `currentRenderingInstance` so that this can be called in\r\n  // a functional component\r\n  const instance = currentInstance || currentRenderingInstance\r\n  if (instance) {\r\n    // #2400\r\n    // to support `app.use` plugins,\r\n    // fallback to appContext's `provides` if the instance is at root\r\n    const provides =\r\n      instance.parent == null\r\n        ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n        : instance.parent.provides\r\n\r\n    if (provides && (key as string | symbol) in provides) {\r\n      // TS doesn't allow symbol as index type\r\n      return provides[key as string]\r\n    } else if (arguments.length > 1) {\r\n      return treatDefaultAsFactory && isFunction(defaultValue)\r\n        ? defaultValue.call(instance.proxy)\r\n        : defaultValue\r\n    } else if (__DEV__) {\r\n      warn(`injection \"${String(key)}\" not found.`)\r\n    }\r\n  } else if (__DEV__) {\r\n    warn(`inject() can only be used inside setup() or functional components.`)\r\n  }\r\n}\r\n","import {\r\n  isRef,\r\n  isShallow,\r\n  Ref,\r\n  ComputedRef,\r\n  ReactiveEffect,\r\n  isReactive,\r\n  ReactiveFlags,\r\n  EffectScheduler,\r\n  DebuggerOptions\r\n} from '@vue/reactivity'\r\nimport { SchedulerJob, queuePreFlushCb } from './scheduler'\r\nimport {\r\n  EMPTY_OBJ,\r\n  isObject,\r\n  isArray,\r\n  isFunction,\r\n  isString,\r\n  hasChanged,\r\n  NOOP,\r\n  remove,\r\n  isMap,\r\n  isSet,\r\n  isPlainObject\r\n} from '@vue/shared'\r\nimport {\r\n  currentInstance,\r\n  ComponentInternalInstance,\r\n  isInSSRComponentSetup,\r\n  setCurrentInstance,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport {\r\n  ErrorCodes,\r\n  callWithErrorHandling,\r\n  callWithAsyncErrorHandling\r\n} from './errorHandling'\r\nimport { queuePostRenderEffect } from './renderer'\r\nimport { warn } from './warning'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport { checkCompatEnabled, isCompatEnabled } from './compat/compatConfig'\r\nimport { ObjectWatchOptionItem } from './componentOptions'\r\n\r\nexport type WatchEffect = (onCleanup: OnCleanup) => void\r\n\r\nexport type WatchSource<T = any> = Ref<T> | ComputedRef<T> | (() => T)\r\n\r\nexport type WatchCallback<V = any, OV = any> = (\r\n  value: V,\r\n  oldValue: OV,\r\n  onCleanup: OnCleanup\r\n) => any\r\n\r\ntype MapSources<T, Immediate> = {\r\n  [K in keyof T]: T[K] extends WatchSource<infer V>\r\n    ? Immediate extends true\r\n      ? V | undefined\r\n      : V\r\n    : T[K] extends object\r\n    ? Immediate extends true\r\n      ? T[K] | undefined\r\n      : T[K]\r\n    : never\r\n}\r\n\r\ntype OnCleanup = (cleanupFn: () => void) => void\r\n\r\nexport interface WatchOptionsBase extends DebuggerOptions {\r\n  flush?: 'pre' | 'post' | 'sync'\r\n}\r\n\r\nexport interface WatchOptions<Immediate = boolean> extends WatchOptionsBase {\r\n  immediate?: Immediate\r\n  deep?: boolean\r\n}\r\n\r\nexport type WatchStopHandle = () => void\r\n\r\n// Simple effect.\r\nexport function watchEffect(\r\n  effect: WatchEffect,\r\n  options?: WatchOptionsBase\r\n): WatchStopHandle {\r\n  return doWatch(effect, null, options)\r\n}\r\n\r\nexport function watchPostEffect(\r\n  effect: WatchEffect,\r\n  options?: DebuggerOptions\r\n) {\r\n  return doWatch(\r\n    effect,\r\n    null,\r\n    (__DEV__\r\n      ? { ...options, flush: 'post' }\r\n      : { flush: 'post' }) as WatchOptionsBase\r\n  )\r\n}\r\n\r\nexport function watchSyncEffect(\r\n  effect: WatchEffect,\r\n  options?: DebuggerOptions\r\n) {\r\n  return doWatch(\r\n    effect,\r\n    null,\r\n    (__DEV__\r\n      ? { ...options, flush: 'sync' }\r\n      : { flush: 'sync' }) as WatchOptionsBase\r\n  )\r\n}\r\n\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {}\r\n\r\ntype MultiWatchSources = (WatchSource<unknown> | object)[]\r\n\r\n// overload: array of multiple sources + cb\r\nexport function watch<\r\n  T extends MultiWatchSources,\r\n  Immediate extends Readonly<boolean> = false\r\n>(\r\n  sources: [...T],\r\n  cb: WatchCallback<MapSources<T, false>, MapSources<T, Immediate>>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// overload: multiple sources w/ `as const`\r\n// watch([foo, bar] as const, () => {})\r\n// somehow [...T] breaks when the type is readonly\r\nexport function watch<\r\n  T extends Readonly<MultiWatchSources>,\r\n  Immediate extends Readonly<boolean> = false\r\n>(\r\n  source: T,\r\n  cb: WatchCallback<MapSources<T, false>, MapSources<T, Immediate>>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// overload: single source + cb\r\nexport function watch<T, Immediate extends Readonly<boolean> = false>(\r\n  source: WatchSource<T>,\r\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// overload: watching reactive object w/ cb\r\nexport function watch<\r\n  T extends object,\r\n  Immediate extends Readonly<boolean> = false\r\n>(\r\n  source: T,\r\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// implementation\r\nexport function watch<T = any, Immediate extends Readonly<boolean> = false>(\r\n  source: T | WatchSource<T>,\r\n  cb: any,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle {\r\n  if (__DEV__ && !isFunction(cb)) {\r\n    warn(\r\n      `\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n        `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n        `supports \\`watch(source, cb, options?) signature.`\r\n    )\r\n  }\r\n  return doWatch(source as any, cb, options)\r\n}\r\n\r\nfunction doWatch(\r\n  source: WatchSource | WatchSource[] | WatchEffect | object,\r\n  cb: WatchCallback | null,\r\n  { immediate, deep, flush, onTrack, onTrigger }: WatchOptions = EMPTY_OBJ\r\n): WatchStopHandle {\r\n  if (__DEV__ && !cb) {\r\n    if (immediate !== undefined) {\r\n      warn(\r\n        `watch() \"immediate\" option is only respected when using the ` +\r\n          `watch(source, callback, options?) signature.`\r\n      )\r\n    }\r\n    if (deep !== undefined) {\r\n      warn(\r\n        `watch() \"deep\" option is only respected when using the ` +\r\n          `watch(source, callback, options?) signature.`\r\n      )\r\n    }\r\n  }\r\n\r\n  const warnInvalidSource = (s: unknown) => {\r\n    warn(\r\n      `Invalid watch source: `,\r\n      s,\r\n      `A watch source can only be a getter/effect function, a ref, ` +\r\n        `a reactive object, or an array of these types.`\r\n    )\r\n  }\r\n\r\n  const instance = currentInstance\r\n  let getter: () => any\r\n  let forceTrigger = false\r\n  let isMultiSource = false\r\n\r\n  if (isRef(source)) {\r\n    getter = () => source.value\r\n    forceTrigger = isShallow(source)\r\n  } else if (isReactive(source)) {\r\n    getter = () => source\r\n    deep = true\r\n  } else if (isArray(source)) {\r\n    isMultiSource = true\r\n    forceTrigger = source.some(s => isReactive(s) || isShallow(s))\r\n    getter = () =>\r\n      source.map(s => {\r\n        if (isRef(s)) {\r\n          return s.value\r\n        } else if (isReactive(s)) {\r\n          return traverse(s)\r\n        } else if (isFunction(s)) {\r\n          return callWithErrorHandling(s, instance, ErrorCodes.WATCH_GETTER)\r\n        } else {\r\n          __DEV__ && warnInvalidSource(s)\r\n        }\r\n      })\r\n  } else if (isFunction(source)) {\r\n    if (cb) {\r\n      // getter with cb\r\n      getter = () =>\r\n        callWithErrorHandling(source, instance, ErrorCodes.WATCH_GETTER)\r\n    } else {\r\n      // no cb -> simple effect\r\n      getter = () => {\r\n        if (instance && instance.isUnmounted) {\r\n          return\r\n        }\r\n        if (cleanup) {\r\n          cleanup()\r\n        }\r\n        return callWithAsyncErrorHandling(\r\n          source,\r\n          instance,\r\n          ErrorCodes.WATCH_CALLBACK,\r\n          [onCleanup]\r\n        )\r\n      }\r\n    }\r\n  } else {\r\n    getter = NOOP\r\n    __DEV__ && warnInvalidSource(source)\r\n  }\r\n\r\n  // 2.x array mutation watch compat\r\n  if (__COMPAT__ && cb && !deep) {\r\n    const baseGetter = getter\r\n    getter = () => {\r\n      const val = baseGetter()\r\n      if (\r\n        isArray(val) &&\r\n        checkCompatEnabled(DeprecationTypes.WATCH_ARRAY, instance)\r\n      ) {\r\n        traverse(val)\r\n      }\r\n      return val\r\n    }\r\n  }\r\n\r\n  if (cb && deep) {\r\n    const baseGetter = getter\r\n    getter = () => traverse(baseGetter())\r\n  }\r\n\r\n  let cleanup: () => void\r\n  let onCleanup: OnCleanup = (fn: () => void) => {\r\n    cleanup = effect.onStop = () => {\r\n      callWithErrorHandling(fn, instance, ErrorCodes.WATCH_CLEANUP)\r\n    }\r\n  }\r\n\r\n  // in SSR there is no need to setup an actual effect, and it should be noop\r\n  // unless it's eager\r\n  if (__SSR__ && isInSSRComponentSetup) {\r\n    // we will also not call the invalidate callback (+ runner is not set up)\r\n    onCleanup = NOOP\r\n    if (!cb) {\r\n      getter()\r\n    } else if (immediate) {\r\n      callWithAsyncErrorHandling(cb, instance, ErrorCodes.WATCH_CALLBACK, [\r\n        getter(),\r\n        isMultiSource ? [] : undefined,\r\n        onCleanup\r\n      ])\r\n    }\r\n    return NOOP\r\n  }\r\n\r\n  let oldValue = isMultiSource ? [] : INITIAL_WATCHER_VALUE\r\n  const job: SchedulerJob = () => {\r\n    if (!effect.active) {\r\n      return\r\n    }\r\n    if (cb) {\r\n      // watch(source, cb)\r\n      const newValue = effect.run()\r\n      if (\r\n        deep ||\r\n        forceTrigger ||\r\n        (isMultiSource\r\n          ? (newValue as any[]).some((v, i) =>\r\n              hasChanged(v, (oldValue as any[])[i])\r\n            )\r\n          : hasChanged(newValue, oldValue)) ||\r\n        (__COMPAT__ &&\r\n          isArray(newValue) &&\r\n          isCompatEnabled(DeprecationTypes.WATCH_ARRAY, instance))\r\n      ) {\r\n        // cleanup before running cb again\r\n        if (cleanup) {\r\n          cleanup()\r\n        }\r\n        callWithAsyncErrorHandling(cb, instance, ErrorCodes.WATCH_CALLBACK, [\r\n          newValue,\r\n          // pass undefined as the old value when it's changed for the first time\r\n          oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n          onCleanup\r\n        ])\r\n        oldValue = newValue\r\n      }\r\n    } else {\r\n      // watchEffect\r\n      effect.run()\r\n    }\r\n  }\r\n\r\n  // important: mark the job as a watcher callback so that scheduler knows\r\n  // it is allowed to self-trigger (#1727)\r\n  job.allowRecurse = !!cb\r\n\r\n  let scheduler: EffectScheduler\r\n  if (flush === 'sync') {\r\n    scheduler = job as any // the scheduler function gets called directly\r\n  } else if (flush === 'post') {\r\n    scheduler = () => queuePostRenderEffect(job, instance && instance.suspense)\r\n  } else {\r\n    // default: 'pre'\r\n    scheduler = () => queuePreFlushCb(job)\r\n  }\r\n\r\n  const effect = new ReactiveEffect(getter, scheduler)\r\n\r\n  if (__DEV__) {\r\n    effect.onTrack = onTrack\r\n    effect.onTrigger = onTrigger\r\n  }\r\n\r\n  // initial run\r\n  if (cb) {\r\n    if (immediate) {\r\n      job()\r\n    } else {\r\n      oldValue = effect.run()\r\n    }\r\n  } else if (flush === 'post') {\r\n    queuePostRenderEffect(\r\n      effect.run.bind(effect),\r\n      instance && instance.suspense\r\n    )\r\n  } else {\r\n    effect.run()\r\n  }\r\n\r\n  return () => {\r\n    effect.stop()\r\n    if (instance && instance.scope) {\r\n      remove(instance.scope.effects!, effect)\r\n    }\r\n  }\r\n}\r\n\r\n// this.$watch\r\nexport function instanceWatch(\r\n  this: ComponentInternalInstance,\r\n  source: string | Function,\r\n  value: WatchCallback | ObjectWatchOptionItem,\r\n  options?: WatchOptions\r\n): WatchStopHandle {\r\n  const publicThis = this.proxy as any\r\n  const getter = isString(source)\r\n    ? source.includes('.')\r\n      ? createPathGetter(publicThis, source)\r\n      : () => publicThis[source]\r\n    : source.bind(publicThis, publicThis)\r\n  let cb\r\n  if (isFunction(value)) {\r\n    cb = value\r\n  } else {\r\n    cb = value.handler as Function\r\n    options = value\r\n  }\r\n  const cur = currentInstance\r\n  setCurrentInstance(this)\r\n  const res = doWatch(getter, cb.bind(publicThis), options)\r\n  if (cur) {\r\n    setCurrentInstance(cur)\r\n  } else {\r\n    unsetCurrentInstance()\r\n  }\r\n  return res\r\n}\r\n\r\nexport function createPathGetter(ctx: any, path: string) {\r\n  const segments = path.split('.')\r\n  return () => {\r\n    let cur = ctx\r\n    for (let i = 0; i < segments.length && cur; i++) {\r\n      cur = cur[segments[i]]\r\n    }\r\n    return cur\r\n  }\r\n}\r\n\r\nexport function traverse(value: unknown, seen?: Set<unknown>) {\r\n  if (!isObject(value) || (value as any)[ReactiveFlags.SKIP]) {\r\n    return value\r\n  }\r\n  seen = seen || new Set()\r\n  if (seen.has(value)) {\r\n    return value\r\n  }\r\n  seen.add(value)\r\n  if (isRef(value)) {\r\n    traverse(value.value, seen)\r\n  } else if (isArray(value)) {\r\n    for (let i = 0; i < value.length; i++) {\r\n      traverse(value[i], seen)\r\n    }\r\n  } else if (isSet(value) || isMap(value)) {\r\n    value.forEach((v: any) => {\r\n      traverse(v, seen)\r\n    })\r\n  } else if (isPlainObject(value)) {\r\n    for (const key in value) {\r\n      traverse((value as any)[key], seen)\r\n    }\r\n  }\r\n  return value\r\n}\r\n","import {\r\n  getCurrentInstance,\r\n  SetupContext,\r\n  ComponentInternalInstance,\r\n  ComponentOptions\r\n} from '../component'\r\nimport {\r\n  cloneVNode,\r\n  Comment,\r\n  isSameVNodeType,\r\n  VNode,\r\n  VNodeArrayChildren,\r\n  Fragment\r\n} from '../vnode'\r\nimport { warn } from '../warning'\r\nimport { isKeepAlive } from './KeepAlive'\r\nimport { toRaw } from '@vue/reactivity'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from '../errorHandling'\r\nimport { ShapeFlags, PatchFlags, isArray } from '@vue/shared'\r\nimport { onBeforeUnmount, onMounted } from '../apiLifecycle'\r\nimport { RendererElement } from '../renderer'\r\n\r\ntype Hook<T = () => void> = T | T[]\r\n\r\nexport interface BaseTransitionProps<HostElement = RendererElement> {\r\n  mode?: 'in-out' | 'out-in' | 'default'\r\n  appear?: boolean\r\n\r\n  // If true, indicates this is a transition that doesn't actually insert/remove\r\n  // the element, but toggles the show / hidden status instead.\r\n  // The transition hooks are injected, but will be skipped by the renderer.\r\n  // Instead, a custom directive can control the transition by calling the\r\n  // injected hooks (e.g. v-show).\r\n  persisted?: boolean\r\n\r\n  // Hooks. Using camel case for easier usage in render functions & JSX.\r\n  // In templates these can be written as @before-enter=\"xxx\" as prop names\r\n  // are camelized.\r\n  onBeforeEnter?: Hook<(el: HostElement) => void>\r\n  onEnter?: Hook<(el: HostElement, done: () => void) => void>\r\n  onAfterEnter?: Hook<(el: HostElement) => void>\r\n  onEnterCancelled?: Hook<(el: HostElement) => void>\r\n  // leave\r\n  onBeforeLeave?: Hook<(el: HostElement) => void>\r\n  onLeave?: Hook<(el: HostElement, done: () => void) => void>\r\n  onAfterLeave?: Hook<(el: HostElement) => void>\r\n  onLeaveCancelled?: Hook<(el: HostElement) => void> // only fired in persisted mode\r\n  // appear\r\n  onBeforeAppear?: Hook<(el: HostElement) => void>\r\n  onAppear?: Hook<(el: HostElement, done: () => void) => void>\r\n  onAfterAppear?: Hook<(el: HostElement) => void>\r\n  onAppearCancelled?: Hook<(el: HostElement) => void>\r\n}\r\n\r\nexport interface TransitionHooks<\r\n  HostElement extends RendererElement = RendererElement\r\n> {\r\n  mode: BaseTransitionProps['mode']\r\n  persisted: boolean\r\n  beforeEnter(el: HostElement): void\r\n  enter(el: HostElement): void\r\n  leave(el: HostElement, remove: () => void): void\r\n  clone(vnode: VNode): TransitionHooks<HostElement>\r\n  // optional\r\n  afterLeave?(): void\r\n  delayLeave?(\r\n    el: HostElement,\r\n    earlyRemove: () => void,\r\n    delayedLeave: () => void\r\n  ): void\r\n  delayedLeave?(): void\r\n}\r\n\r\nexport type TransitionHookCaller = <T extends any[] = [el: any]>(\r\n  hook: Hook<(...args: T) => void> | undefined,\r\n  args?: T\r\n) => void\r\n\r\nexport type PendingCallback = (cancelled?: boolean) => void\r\n\r\nexport interface TransitionState {\r\n  isMounted: boolean\r\n  isLeaving: boolean\r\n  isUnmounting: boolean\r\n  // Track pending leave callbacks for children of the same key.\r\n  // This is used to force remove leaving a child when a new copy is entering.\r\n  leavingVNodes: Map<any, Record<string, VNode>>\r\n}\r\n\r\nexport interface TransitionElement {\r\n  // in persisted mode (e.g. v-show), the same element is toggled, so the\r\n  // pending enter/leave callbacks may need to be cancelled if the state is toggled\r\n  // before it finishes.\r\n  _enterCb?: PendingCallback\r\n  _leaveCb?: PendingCallback\r\n}\r\n\r\nexport function useTransitionState(): TransitionState {\r\n  const state: TransitionState = {\r\n    isMounted: false,\r\n    isLeaving: false,\r\n    isUnmounting: false,\r\n    leavingVNodes: new Map()\r\n  }\r\n  onMounted(() => {\r\n    state.isMounted = true\r\n  })\r\n  onBeforeUnmount(() => {\r\n    state.isUnmounting = true\r\n  })\r\n  return state\r\n}\r\n\r\nconst TransitionHookValidator = [Function, Array]\r\n\r\nconst BaseTransitionImpl: ComponentOptions = {\r\n  name: `BaseTransition`,\r\n\r\n  props: {\r\n    mode: String,\r\n    appear: Boolean,\r\n    persisted: Boolean,\r\n    // enter\r\n    onBeforeEnter: TransitionHookValidator,\r\n    onEnter: TransitionHookValidator,\r\n    onAfterEnter: TransitionHookValidator,\r\n    onEnterCancelled: TransitionHookValidator,\r\n    // leave\r\n    onBeforeLeave: TransitionHookValidator,\r\n    onLeave: TransitionHookValidator,\r\n    onAfterLeave: TransitionHookValidator,\r\n    onLeaveCancelled: TransitionHookValidator,\r\n    // appear\r\n    onBeforeAppear: TransitionHookValidator,\r\n    onAppear: TransitionHookValidator,\r\n    onAfterAppear: TransitionHookValidator,\r\n    onAppearCancelled: TransitionHookValidator\r\n  },\r\n\r\n  setup(props: BaseTransitionProps, { slots }: SetupContext) {\r\n    const instance = getCurrentInstance()!\r\n    const state = useTransitionState()\r\n\r\n    let prevTransitionKey: any\r\n\r\n    return () => {\r\n      const children =\r\n        slots.default && getTransitionRawChildren(slots.default(), true)\r\n      if (!children || !children.length) {\r\n        return\r\n      }\r\n\r\n      let child: VNode = children[0]\r\n      if (children.length > 1) {\r\n        let hasFound = false\r\n        // locate first non-comment child\r\n        for (const c of children) {\r\n          if (c.type !== Comment) {\r\n            if (__DEV__ && hasFound) {\r\n              // warn more than one non-comment child\r\n              warn(\r\n                '<transition> can only be used on a single element or component. ' +\r\n                  'Use <transition-group> for lists.'\r\n              )\r\n              break\r\n            }\r\n            child = c\r\n            hasFound = true\r\n            if (!__DEV__) break\r\n          }\r\n        }\r\n      }\r\n\r\n      // there's no need to track reactivity for these props so use the raw\r\n      // props for a bit better perf\r\n      const rawProps = toRaw(props)\r\n      const { mode } = rawProps\r\n      // check mode\r\n      if (\r\n        __DEV__ &&\r\n        mode &&\r\n        mode !== 'in-out' &&\r\n        mode !== 'out-in' &&\r\n        mode !== 'default'\r\n      ) {\r\n        warn(`invalid <transition> mode: ${mode}`)\r\n      }\r\n\r\n      if (state.isLeaving) {\r\n        return emptyPlaceholder(child)\r\n      }\r\n\r\n      // in the case of <transition><keep-alive/></transition>, we need to\r\n      // compare the type of the kept-alive children.\r\n      const innerChild = getKeepAliveChild(child)\r\n      if (!innerChild) {\r\n        return emptyPlaceholder(child)\r\n      }\r\n\r\n      const enterHooks = resolveTransitionHooks(\r\n        innerChild,\r\n        rawProps,\r\n        state,\r\n        instance\r\n      )\r\n      setTransitionHooks(innerChild, enterHooks)\r\n\r\n      const oldChild = instance.subTree\r\n      const oldInnerChild = oldChild && getKeepAliveChild(oldChild)\r\n\r\n      let transitionKeyChanged = false\r\n      const { getTransitionKey } = innerChild.type as any\r\n      if (getTransitionKey) {\r\n        const key = getTransitionKey()\r\n        if (prevTransitionKey === undefined) {\r\n          prevTransitionKey = key\r\n        } else if (key !== prevTransitionKey) {\r\n          prevTransitionKey = key\r\n          transitionKeyChanged = true\r\n        }\r\n      }\r\n\r\n      // handle mode\r\n      if (\r\n        oldInnerChild &&\r\n        oldInnerChild.type !== Comment &&\r\n        (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)\r\n      ) {\r\n        const leavingHooks = resolveTransitionHooks(\r\n          oldInnerChild,\r\n          rawProps,\r\n          state,\r\n          instance\r\n        )\r\n        // update old tree's hooks in case of dynamic transition\r\n        setTransitionHooks(oldInnerChild, leavingHooks)\r\n        // switching between different views\r\n        if (mode === 'out-in') {\r\n          state.isLeaving = true\r\n          // return placeholder node and queue update when leave finishes\r\n          leavingHooks.afterLeave = () => {\r\n            state.isLeaving = false\r\n            instance.update()\r\n          }\r\n          return emptyPlaceholder(child)\r\n        } else if (mode === 'in-out' && innerChild.type !== Comment) {\r\n          leavingHooks.delayLeave = (\r\n            el: TransitionElement,\r\n            earlyRemove,\r\n            delayedLeave\r\n          ) => {\r\n            const leavingVNodesCache = getLeavingNodesForType(\r\n              state,\r\n              oldInnerChild\r\n            )\r\n            leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild\r\n            // early removal callback\r\n            el._leaveCb = () => {\r\n              earlyRemove()\r\n              el._leaveCb = undefined\r\n              delete enterHooks.delayedLeave\r\n            }\r\n            enterHooks.delayedLeave = delayedLeave\r\n          }\r\n        }\r\n      }\r\n\r\n      return child\r\n    }\r\n  }\r\n}\r\n\r\nif (__COMPAT__) {\r\n  BaseTransitionImpl.__isBuiltIn = true\r\n}\r\n\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nexport const BaseTransition = BaseTransitionImpl as any as {\r\n  new (): {\r\n    $props: BaseTransitionProps<any>\r\n  }\r\n}\r\n\r\nfunction getLeavingNodesForType(\r\n  state: TransitionState,\r\n  vnode: VNode\r\n): Record<string, VNode> {\r\n  const { leavingVNodes } = state\r\n  let leavingVNodesCache = leavingVNodes.get(vnode.type)!\r\n  if (!leavingVNodesCache) {\r\n    leavingVNodesCache = Object.create(null)\r\n    leavingVNodes.set(vnode.type, leavingVNodesCache)\r\n  }\r\n  return leavingVNodesCache\r\n}\r\n\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nexport function resolveTransitionHooks(\r\n  vnode: VNode,\r\n  props: BaseTransitionProps<any>,\r\n  state: TransitionState,\r\n  instance: ComponentInternalInstance\r\n): TransitionHooks {\r\n  const {\r\n    appear,\r\n    mode,\r\n    persisted = false,\r\n    onBeforeEnter,\r\n    onEnter,\r\n    onAfterEnter,\r\n    onEnterCancelled,\r\n    onBeforeLeave,\r\n    onLeave,\r\n    onAfterLeave,\r\n    onLeaveCancelled,\r\n    onBeforeAppear,\r\n    onAppear,\r\n    onAfterAppear,\r\n    onAppearCancelled\r\n  } = props\r\n  const key = String(vnode.key)\r\n  const leavingVNodesCache = getLeavingNodesForType(state, vnode)\r\n\r\n  const callHook: TransitionHookCaller = (hook, args) => {\r\n    hook &&\r\n      callWithAsyncErrorHandling(\r\n        hook,\r\n        instance,\r\n        ErrorCodes.TRANSITION_HOOK,\r\n        args\r\n      )\r\n  }\r\n\r\n  const callAsyncHook = (\r\n    hook: Hook<(el: any, done: () => void) => void>,\r\n    args: [TransitionElement, () => void]\r\n  ) => {\r\n    const done = args[1]\r\n    callHook(hook, args)\r\n    if (isArray(hook)) {\r\n      if (hook.every(hook => hook.length <= 1)) done()\r\n    } else if (hook.length <= 1) {\r\n      done()\r\n    }\r\n  }\r\n\r\n  const hooks: TransitionHooks<TransitionElement> = {\r\n    mode,\r\n    persisted,\r\n    beforeEnter(el) {\r\n      let hook = onBeforeEnter\r\n      if (!state.isMounted) {\r\n        if (appear) {\r\n          hook = onBeforeAppear || onBeforeEnter\r\n        } else {\r\n          return\r\n        }\r\n      }\r\n      // for same element (v-show)\r\n      if (el._leaveCb) {\r\n        el._leaveCb(true /* cancelled */)\r\n      }\r\n      // for toggled element with same key (v-if)\r\n      const leavingVNode = leavingVNodesCache[key]\r\n      if (\r\n        leavingVNode &&\r\n        isSameVNodeType(vnode, leavingVNode) &&\r\n        leavingVNode.el!._leaveCb\r\n      ) {\r\n        // force early removal (not cancelled)\r\n        leavingVNode.el!._leaveCb()\r\n      }\r\n      callHook(hook, [el])\r\n    },\r\n\r\n    enter(el) {\r\n      let hook = onEnter\r\n      let afterHook = onAfterEnter\r\n      let cancelHook = onEnterCancelled\r\n      if (!state.isMounted) {\r\n        if (appear) {\r\n          hook = onAppear || onEnter\r\n          afterHook = onAfterAppear || onAfterEnter\r\n          cancelHook = onAppearCancelled || onEnterCancelled\r\n        } else {\r\n          return\r\n        }\r\n      }\r\n      let called = false\r\n      const done = (el._enterCb = (cancelled?) => {\r\n        if (called) return\r\n        called = true\r\n        if (cancelled) {\r\n          callHook(cancelHook, [el])\r\n        } else {\r\n          callHook(afterHook, [el])\r\n        }\r\n        if (hooks.delayedLeave) {\r\n          hooks.delayedLeave()\r\n        }\r\n        el._enterCb = undefined\r\n      })\r\n      if (hook) {\r\n        callAsyncHook(hook, [el, done])\r\n      } else {\r\n        done()\r\n      }\r\n    },\r\n\r\n    leave(el, remove) {\r\n      const key = String(vnode.key)\r\n      if (el._enterCb) {\r\n        el._enterCb(true /* cancelled */)\r\n      }\r\n      if (state.isUnmounting) {\r\n        return remove()\r\n      }\r\n      callHook(onBeforeLeave, [el])\r\n      let called = false\r\n      const done = (el._leaveCb = (cancelled?) => {\r\n        if (called) return\r\n        called = true\r\n        remove()\r\n        if (cancelled) {\r\n          callHook(onLeaveCancelled, [el])\r\n        } else {\r\n          callHook(onAfterLeave, [el])\r\n        }\r\n        el._leaveCb = undefined\r\n        if (leavingVNodesCache[key] === vnode) {\r\n          delete leavingVNodesCache[key]\r\n        }\r\n      })\r\n      leavingVNodesCache[key] = vnode\r\n      if (onLeave) {\r\n        callAsyncHook(onLeave, [el, done])\r\n      } else {\r\n        done()\r\n      }\r\n    },\r\n\r\n    clone(vnode) {\r\n      return resolveTransitionHooks(vnode, props, state, instance)\r\n    }\r\n  }\r\n\r\n  return hooks\r\n}\r\n\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode: VNode): VNode | undefined {\r\n  if (isKeepAlive(vnode)) {\r\n    vnode = cloneVNode(vnode)\r\n    vnode.children = null\r\n    return vnode\r\n  }\r\n}\r\n\r\nfunction getKeepAliveChild(vnode: VNode): VNode | undefined {\r\n  return isKeepAlive(vnode)\r\n    ? vnode.children\r\n      ? ((vnode.children as VNodeArrayChildren)[0] as VNode)\r\n      : undefined\r\n    : vnode\r\n}\r\n\r\nexport function setTransitionHooks(vnode: VNode, hooks: TransitionHooks) {\r\n  if (vnode.shapeFlag & ShapeFlags.COMPONENT && vnode.component) {\r\n    setTransitionHooks(vnode.component.subTree, hooks)\r\n  } else if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n    vnode.ssContent!.transition = hooks.clone(vnode.ssContent!)\r\n    vnode.ssFallback!.transition = hooks.clone(vnode.ssFallback!)\r\n  } else {\r\n    vnode.transition = hooks\r\n  }\r\n}\r\n\r\nexport function getTransitionRawChildren(\r\n  children: VNode[],\r\n  keepComment: boolean = false,\r\n  parentKey?: VNode['key']\r\n): VNode[] {\r\n  let ret: VNode[] = []\r\n  let keyedFragmentCount = 0\r\n  for (let i = 0; i < children.length; i++) {\r\n    let child = children[i]\r\n    // #5360 inherit parent key in case of <template v-for>\r\n    const key =\r\n      parentKey == null\r\n        ? child.key\r\n        : String(parentKey) + String(child.key != null ? child.key : i)\r\n    // handle fragment children case, e.g. v-for\r\n    if (child.type === Fragment) {\r\n      if (child.patchFlag & PatchFlags.KEYED_FRAGMENT) keyedFragmentCount++\r\n      ret = ret.concat(\r\n        getTransitionRawChildren(child.children as VNode[], keepComment, key)\r\n      )\r\n    }\r\n    // comment placeholders should be skipped, e.g. v-if\r\n    else if (keepComment || child.type !== Comment) {\r\n      ret.push(key != null ? cloneVNode(child, { key }) : child)\r\n    }\r\n  }\r\n  // #1126 if a transition children list contains multiple sub fragments, these\r\n  // fragments will be merged into a flat children array. Since each v-for\r\n  // fragment may contain different static bindings inside, we need to de-op\r\n  // these children to force full diffs to ensure correct behavior.\r\n  if (keyedFragmentCount > 1) {\r\n    for (let i = 0; i < ret.length; i++) {\r\n      ret[i].patchFlag = PatchFlags.BAIL\r\n    }\r\n  }\r\n  return ret\r\n}\r\n","import {\r\n  ComputedOptions,\r\n  MethodOptions,\r\n  ComponentOptionsWithoutProps,\r\n  ComponentOptionsWithArrayProps,\r\n  ComponentOptionsWithObjectProps,\r\n  ComponentOptionsMixin,\r\n  RenderFunction,\r\n  ComponentOptionsBase\r\n} from './componentOptions'\r\nimport {\r\n  SetupContext,\r\n  AllowedComponentProps,\r\n  ComponentCustomProps\r\n} from './component'\r\nimport {\r\n  ExtractPropTypes,\r\n  ComponentPropsOptions,\r\n  ExtractDefaultPropTypes\r\n} from './componentProps'\r\nimport { EmitsOptions, EmitsToProps } from './componentEmits'\r\nimport { isFunction } from '@vue/shared'\r\nimport { VNodeProps } from './vnode'\r\nimport {\r\n  CreateComponentPublicInstance,\r\n  ComponentPublicInstanceConstructor\r\n} from './componentPublicInstance'\r\n\r\nexport type PublicProps = VNodeProps &\r\n  AllowedComponentProps &\r\n  ComponentCustomProps\r\n\r\nexport type DefineComponent<\r\n  PropsOrPropOptions = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions,\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  EE extends string = string,\r\n  PP = PublicProps,\r\n  Props = Readonly<\r\n    PropsOrPropOptions extends ComponentPropsOptions\r\n      ? ExtractPropTypes<PropsOrPropOptions>\r\n      : PropsOrPropOptions\r\n  > &\r\n    ({} extends E ? {} : EmitsToProps<E>),\r\n  Defaults = ExtractDefaultPropTypes<PropsOrPropOptions>\r\n> = ComponentPublicInstanceConstructor<\r\n  CreateComponentPublicInstance<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    PP & Props,\r\n    Defaults,\r\n    true\r\n  > &\r\n    Props\r\n> &\r\n  ComponentOptionsBase<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE,\r\n    Defaults\r\n  > &\r\n  PP\r\n\r\n// defineComponent is a utility that is primarily used for type inference\r\n// when declaring components. Type inference is provided in the component\r\n// options (provided as the argument). The returned value has artificial types\r\n// for TSX / manual render function / IDE support.\r\n\r\n// overload 1: direct setup function\r\n// (uses user defined props interface)\r\nexport function defineComponent<Props, RawBindings = object>(\r\n  setup: (\r\n    props: Readonly<Props>,\r\n    ctx: SetupContext\r\n  ) => RawBindings | RenderFunction\r\n): DefineComponent<Props, RawBindings>\r\n\r\n// overload 2: object format with no props\r\n// (uses user defined props interface)\r\n// return type is for Vetur and TSX support\r\nexport function defineComponent<\r\n  Props = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithoutProps<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n): DefineComponent<Props, RawBindings, D, C, M, Mixin, Extends, E, EE>\r\n\r\n// overload 3: object format with array props declaration\r\n// props inferred as { [key in PropNames]?: any }\r\n// return type is for Vetur and TSX support\r\nexport function defineComponent<\r\n  PropNames extends string,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithArrayProps<\r\n    PropNames,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n): DefineComponent<\r\n  Readonly<{ [key in PropNames]?: any }>,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE\r\n>\r\n\r\n// overload 4: object format with object props declaration\r\n// see `ExtractPropTypes` in ./componentProps.ts\r\nexport function defineComponent<\r\n  // the Readonly constraint allows TS to treat the type of { required: true }\r\n  // as constant instead of boolean.\r\n  PropsOptions extends Readonly<ComponentPropsOptions>,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithObjectProps<\r\n    PropsOptions,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n): DefineComponent<PropsOptions, RawBindings, D, C, M, Mixin, Extends, E, EE>\r\n\r\n// implementation, close to no-op\r\nexport function defineComponent(options: unknown) {\r\n  return isFunction(options) ? { setup: options, name: options.name } : options\r\n}\r\n","import {\r\n  Component,\r\n  ConcreteComponent,\r\n  currentInstance,\r\n  ComponentInternalInstance,\r\n  isInSSRComponentSetup,\r\n  ComponentOptions\r\n} from './component'\r\nimport { isFunction, isObject } from '@vue/shared'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { createVNode, VNode } from './vnode'\r\nimport { defineComponent } from './apiDefineComponent'\r\nimport { warn } from './warning'\r\nimport { ref } from '@vue/reactivity'\r\nimport { handleError, ErrorCodes } from './errorHandling'\r\nimport { isKeepAlive } from './components/KeepAlive'\r\nimport { queueJob } from './scheduler'\r\n\r\nexport type AsyncComponentResolveResult<T = Component> = T | { default: T } // es modules\r\n\r\nexport type AsyncComponentLoader<T = any> = () => Promise<\r\n  AsyncComponentResolveResult<T>\r\n>\r\n\r\nexport interface AsyncComponentOptions<T = any> {\r\n  loader: AsyncComponentLoader<T>\r\n  loadingComponent?: Component\r\n  errorComponent?: Component\r\n  delay?: number\r\n  timeout?: number\r\n  suspensible?: boolean\r\n  onError?: (\r\n    error: Error,\r\n    retry: () => void,\r\n    fail: () => void,\r\n    attempts: number\r\n  ) => any\r\n}\r\n\r\nexport const isAsyncWrapper = (i: ComponentInternalInstance | VNode): boolean =>\r\n  !!(i.type as ComponentOptions).__asyncLoader\r\n\r\nexport function defineAsyncComponent<\r\n  T extends Component = { new (): ComponentPublicInstance }\r\n>(source: AsyncComponentLoader<T> | AsyncComponentOptions<T>): T {\r\n  if (isFunction(source)) {\r\n    source = { loader: source }\r\n  }\r\n\r\n  const {\r\n    loader,\r\n    loadingComponent,\r\n    errorComponent,\r\n    delay = 200,\r\n    timeout, // undefined = never times out\r\n    suspensible = true,\r\n    onError: userOnError\r\n  } = source\r\n\r\n  let pendingRequest: Promise<ConcreteComponent> | null = null\r\n  let resolvedComp: ConcreteComponent | undefined\r\n\r\n  let retries = 0\r\n  const retry = () => {\r\n    retries++\r\n    pendingRequest = null\r\n    return load()\r\n  }\r\n\r\n  const load = (): Promise<ConcreteComponent> => {\r\n    let thisRequest: Promise<ConcreteComponent>\r\n    return (\r\n      pendingRequest ||\r\n      (thisRequest = pendingRequest =\r\n        loader()\r\n          .catch(err => {\r\n            err = err instanceof Error ? err : new Error(String(err))\r\n            if (userOnError) {\r\n              return new Promise((resolve, reject) => {\r\n                const userRetry = () => resolve(retry())\r\n                const userFail = () => reject(err)\r\n                userOnError(err, userRetry, userFail, retries + 1)\r\n              })\r\n            } else {\r\n              throw err\r\n            }\r\n          })\r\n          .then((comp: any) => {\r\n            if (thisRequest !== pendingRequest && pendingRequest) {\r\n              return pendingRequest\r\n            }\r\n            if (__DEV__ && !comp) {\r\n              warn(\r\n                `Async component loader resolved to undefined. ` +\r\n                  `If you are using retry(), make sure to return its return value.`\r\n              )\r\n            }\r\n            // interop module default\r\n            if (\r\n              comp &&\r\n              (comp.__esModule || comp[Symbol.toStringTag] === 'Module')\r\n            ) {\r\n              comp = comp.default\r\n            }\r\n            if (__DEV__ && comp && !isObject(comp) && !isFunction(comp)) {\r\n              throw new Error(`Invalid async component load result: ${comp}`)\r\n            }\r\n            resolvedComp = comp\r\n            return comp\r\n          }))\r\n    )\r\n  }\r\n\r\n  return defineComponent({\r\n    name: 'AsyncComponentWrapper',\r\n\r\n    __asyncLoader: load,\r\n\r\n    get __asyncResolved() {\r\n      return resolvedComp\r\n    },\r\n\r\n    setup() {\r\n      const instance = currentInstance!\r\n\r\n      // already resolved\r\n      if (resolvedComp) {\r\n        return () => createInnerComp(resolvedComp!, instance)\r\n      }\r\n\r\n      const onError = (err: Error) => {\r\n        pendingRequest = null\r\n        handleError(\r\n          err,\r\n          instance,\r\n          ErrorCodes.ASYNC_COMPONENT_LOADER,\r\n          !errorComponent /* do not throw in dev if user provided error component */\r\n        )\r\n      }\r\n\r\n      // suspense-controlled or SSR.\r\n      if (\r\n        (__FEATURE_SUSPENSE__ && suspensible && instance.suspense) ||\r\n        (__SSR__ && isInSSRComponentSetup)\r\n      ) {\r\n        return load()\r\n          .then(comp => {\r\n            return () => createInnerComp(comp, instance)\r\n          })\r\n          .catch(err => {\r\n            onError(err)\r\n            return () =>\r\n              errorComponent\r\n                ? createVNode(errorComponent as ConcreteComponent, {\r\n                    error: err\r\n                  })\r\n                : null\r\n          })\r\n      }\r\n\r\n      const loaded = ref(false)\r\n      const error = ref()\r\n      const delayed = ref(!!delay)\r\n\r\n      if (delay) {\r\n        setTimeout(() => {\r\n          delayed.value = false\r\n        }, delay)\r\n      }\r\n\r\n      if (timeout != null) {\r\n        setTimeout(() => {\r\n          if (!loaded.value && !error.value) {\r\n            const err = new Error(\r\n              `Async component timed out after ${timeout}ms.`\r\n            )\r\n            onError(err)\r\n            error.value = err\r\n          }\r\n        }, timeout)\r\n      }\r\n\r\n      load()\r\n        .then(() => {\r\n          loaded.value = true\r\n          if (instance.parent && isKeepAlive(instance.parent.vnode)) {\r\n            // parent is keep-alive, force update so the loaded component's\r\n            // name is taken into account\r\n            queueJob(instance.parent.update)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          onError(err)\r\n          error.value = err\r\n        })\r\n\r\n      return () => {\r\n        if (loaded.value && resolvedComp) {\r\n          return createInnerComp(resolvedComp, instance)\r\n        } else if (error.value && errorComponent) {\r\n          return createVNode(errorComponent as ConcreteComponent, {\r\n            error: error.value\r\n          })\r\n        } else if (loadingComponent && !delayed.value) {\r\n          return createVNode(loadingComponent as ConcreteComponent)\r\n        }\r\n      }\r\n    }\r\n  }) as T\r\n}\r\n\r\nfunction createInnerComp(\r\n  comp: ConcreteComponent,\r\n  {\r\n    vnode: { ref, props, children, shapeFlag },\r\n    parent\r\n  }: ComponentInternalInstance\r\n) {\r\n  const vnode = createVNode(comp, props, children)\r\n  // ensure inner component inherits the async wrapper's ref owner\r\n  vnode.ref = ref\r\n  return vnode\r\n}\r\n","import {\r\n  ConcreteComponent,\r\n  getCurrentInstance,\r\n  SetupContext,\r\n  ComponentInternalInstance,\r\n  LifecycleHooks,\r\n  currentInstance,\r\n  getComponentName,\r\n  ComponentOptions\r\n} from '../component'\r\nimport {\r\n  VNode,\r\n  cloneVNode,\r\n  isVNode,\r\n  VNodeProps,\r\n  invokeVNodeHook\r\n} from '../vnode'\r\nimport { warn } from '../warning'\r\nimport {\r\n  onBeforeUnmount,\r\n  injectHook,\r\n  onUnmounted,\r\n  onMounted,\r\n  onUpdated\r\n} from '../apiLifecycle'\r\nimport {\r\n  isString,\r\n  isArray,\r\n  ShapeFlags,\r\n  remove,\r\n  invokeArrayFns\r\n} from '@vue/shared'\r\nimport { watch } from '../apiWatch'\r\nimport {\r\n  RendererInternals,\r\n  queuePostRenderEffect,\r\n  MoveType,\r\n  RendererElement,\r\n  RendererNode\r\n} from '../renderer'\r\nimport { setTransitionHooks } from './BaseTransition'\r\nimport { ComponentRenderContext } from '../componentPublicInstance'\r\nimport { devtoolsComponentAdded } from '../devtools'\r\nimport { isAsyncWrapper } from '../apiAsyncComponent'\r\nimport { isSuspense } from './Suspense'\r\n\r\ntype MatchPattern = string | RegExp | (string | RegExp)[]\r\n\r\nexport interface KeepAliveProps {\r\n  include?: MatchPattern\r\n  exclude?: MatchPattern\r\n  max?: number | string\r\n}\r\n\r\ntype CacheKey = string | number | symbol | ConcreteComponent\r\ntype Cache = Map<CacheKey, VNode>\r\ntype Keys = Set<CacheKey>\r\n\r\nexport interface KeepAliveContext extends ComponentRenderContext {\r\n  renderer: RendererInternals\r\n  activate: (\r\n    vnode: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    isSVG: boolean,\r\n    optimized: boolean\r\n  ) => void\r\n  deactivate: (vnode: VNode) => void\r\n}\r\n\r\nexport const isKeepAlive = (vnode: VNode): boolean =>\r\n  (vnode.type as any).__isKeepAlive\r\n\r\nconst KeepAliveImpl: ComponentOptions = {\r\n  name: `KeepAlive`,\r\n\r\n  // Marker for special handling inside the renderer. We are not using a ===\r\n  // check directly on KeepAlive in the renderer, because importing it directly\r\n  // would prevent it from being tree-shaken.\r\n  __isKeepAlive: true,\r\n\r\n  props: {\r\n    include: [String, RegExp, Array],\r\n    exclude: [String, RegExp, Array],\r\n    max: [String, Number]\r\n  },\r\n\r\n  setup(props: KeepAliveProps, { slots }: SetupContext) {\r\n    const instance = getCurrentInstance()!\r\n    // KeepAlive communicates with the instantiated renderer via the\r\n    // ctx where the renderer passes in its internals,\r\n    // and the KeepAlive instance exposes activate/deactivate implementations.\r\n    // The whole point of this is to avoid importing KeepAlive directly in the\r\n    // renderer to facilitate tree-shaking.\r\n    const sharedContext = instance.ctx as KeepAliveContext\r\n\r\n    // if the internal renderer is not registered, it indicates that this is server-side rendering,\r\n    // for KeepAlive, we just need to render its children\r\n    if (__SSR__ && !sharedContext.renderer) {\r\n      return () => {\r\n        const children = slots.default && slots.default()\r\n        return children && children.length === 1 ? children[0] : children\r\n      }\r\n    }\r\n\r\n    const cache: Cache = new Map()\r\n    const keys: Keys = new Set()\r\n    let current: VNode | null = null\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      ;(instance as any).__v_cache = cache\r\n    }\r\n\r\n    const parentSuspense = instance.suspense\r\n\r\n    const {\r\n      renderer: {\r\n        p: patch,\r\n        m: move,\r\n        um: _unmount,\r\n        o: { createElement }\r\n      }\r\n    } = sharedContext\r\n    const storageContainer = createElement('div')\r\n\r\n    sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n      const instance = vnode.component!\r\n      move(vnode, container, anchor, MoveType.ENTER, parentSuspense)\r\n      // in case props have changed\r\n      patch(\r\n        instance.vnode,\r\n        vnode,\r\n        container,\r\n        anchor,\r\n        instance,\r\n        parentSuspense,\r\n        isSVG,\r\n        vnode.slotScopeIds,\r\n        optimized\r\n      )\r\n      queuePostRenderEffect(() => {\r\n        instance.isDeactivated = false\r\n        if (instance.a) {\r\n          invokeArrayFns(instance.a)\r\n        }\r\n        const vnodeHook = vnode.props && vnode.props.onVnodeMounted\r\n        if (vnodeHook) {\r\n          invokeVNodeHook(vnodeHook, instance.parent, vnode)\r\n        }\r\n      }, parentSuspense)\r\n\r\n      if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n        // Update components tree\r\n        devtoolsComponentAdded(instance)\r\n      }\r\n    }\r\n\r\n    sharedContext.deactivate = (vnode: VNode) => {\r\n      const instance = vnode.component!\r\n      move(vnode, storageContainer, null, MoveType.LEAVE, parentSuspense)\r\n      queuePostRenderEffect(() => {\r\n        if (instance.da) {\r\n          invokeArrayFns(instance.da)\r\n        }\r\n        const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted\r\n        if (vnodeHook) {\r\n          invokeVNodeHook(vnodeHook, instance.parent, vnode)\r\n        }\r\n        instance.isDeactivated = true\r\n      }, parentSuspense)\r\n\r\n      if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n        // Update components tree\r\n        devtoolsComponentAdded(instance)\r\n      }\r\n    }\r\n\r\n    function unmount(vnode: VNode) {\r\n      // reset the shapeFlag so it can be properly unmounted\r\n      resetShapeFlag(vnode)\r\n      _unmount(vnode, instance, parentSuspense, true)\r\n    }\r\n\r\n    function pruneCache(filter?: (name: string) => boolean) {\r\n      cache.forEach((vnode, key) => {\r\n        const name = getComponentName(vnode.type as ConcreteComponent)\r\n        if (name && (!filter || !filter(name))) {\r\n          pruneCacheEntry(key)\r\n        }\r\n      })\r\n    }\r\n\r\n    function pruneCacheEntry(key: CacheKey) {\r\n      const cached = cache.get(key) as VNode\r\n      if (!current || cached.type !== current.type) {\r\n        unmount(cached)\r\n      } else if (current) {\r\n        // current active instance should no longer be kept-alive.\r\n        // we can't unmount it now but it might be later, so reset its flag now.\r\n        resetShapeFlag(current)\r\n      }\r\n      cache.delete(key)\r\n      keys.delete(key)\r\n    }\r\n\r\n    // prune cache on include/exclude prop change\r\n    watch(\r\n      () => [props.include, props.exclude],\r\n      ([include, exclude]) => {\r\n        include && pruneCache(name => matches(include, name))\r\n        exclude && pruneCache(name => !matches(exclude, name))\r\n      },\r\n      // prune post-render after `current` has been updated\r\n      { flush: 'post', deep: true }\r\n    )\r\n\r\n    // cache sub tree after render\r\n    let pendingCacheKey: CacheKey | null = null\r\n    const cacheSubtree = () => {\r\n      // fix #1621, the pendingCacheKey could be 0\r\n      if (pendingCacheKey != null) {\r\n        cache.set(pendingCacheKey, getInnerChild(instance.subTree))\r\n      }\r\n    }\r\n    onMounted(cacheSubtree)\r\n    onUpdated(cacheSubtree)\r\n\r\n    onBeforeUnmount(() => {\r\n      cache.forEach(cached => {\r\n        const { subTree, suspense } = instance\r\n        const vnode = getInnerChild(subTree)\r\n        if (cached.type === vnode.type) {\r\n          // current instance will be unmounted as part of keep-alive's unmount\r\n          resetShapeFlag(vnode)\r\n          // but invoke its deactivated hook here\r\n          const da = vnode.component!.da\r\n          da && queuePostRenderEffect(da, suspense)\r\n          return\r\n        }\r\n        unmount(cached)\r\n      })\r\n    })\r\n\r\n    return () => {\r\n      pendingCacheKey = null\r\n\r\n      if (!slots.default) {\r\n        return null\r\n      }\r\n\r\n      const children = slots.default()\r\n      const rawVNode = children[0]\r\n      if (children.length > 1) {\r\n        if (__DEV__) {\r\n          warn(`KeepAlive should contain exactly one component child.`)\r\n        }\r\n        current = null\r\n        return children\r\n      } else if (\r\n        !isVNode(rawVNode) ||\r\n        (!(rawVNode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) &&\r\n          !(rawVNode.shapeFlag & ShapeFlags.SUSPENSE))\r\n      ) {\r\n        current = null\r\n        return rawVNode\r\n      }\r\n\r\n      let vnode = getInnerChild(rawVNode)\r\n      const comp = vnode.type as ConcreteComponent\r\n\r\n      // for async components, name check should be based in its loaded\r\n      // inner component if available\r\n      const name = getComponentName(\r\n        isAsyncWrapper(vnode)\r\n          ? (vnode.type as ComponentOptions).__asyncResolved || {}\r\n          : comp\r\n      )\r\n\r\n      const { include, exclude, max } = props\r\n\r\n      if (\r\n        (include && (!name || !matches(include, name))) ||\r\n        (exclude && name && matches(exclude, name))\r\n      ) {\r\n        current = vnode\r\n        return rawVNode\r\n      }\r\n\r\n      const key = vnode.key == null ? comp : vnode.key\r\n      const cachedVNode = cache.get(key)\r\n\r\n      // clone vnode if it's reused because we are going to mutate it\r\n      if (vnode.el) {\r\n        vnode = cloneVNode(vnode)\r\n        if (rawVNode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n          rawVNode.ssContent = vnode\r\n        }\r\n      }\r\n      // #1513 it's possible for the returned vnode to be cloned due to attr\r\n      // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n      // that is mounted. Instead of caching it directly, we store the pending\r\n      // key and cache `instance.subTree` (the normalized vnode) in\r\n      // beforeMount/beforeUpdate hooks.\r\n      pendingCacheKey = key\r\n\r\n      if (cachedVNode) {\r\n        // copy over mounted state\r\n        vnode.el = cachedVNode.el\r\n        vnode.component = cachedVNode.component\r\n        if (vnode.transition) {\r\n          // recursively update transition hooks on subTree\r\n          setTransitionHooks(vnode, vnode.transition!)\r\n        }\r\n        // avoid vnode being mounted as fresh\r\n        vnode.shapeFlag |= ShapeFlags.COMPONENT_KEPT_ALIVE\r\n        // make this key the freshest\r\n        keys.delete(key)\r\n        keys.add(key)\r\n      } else {\r\n        keys.add(key)\r\n        // prune oldest entry\r\n        if (max && keys.size > parseInt(max as string, 10)) {\r\n          pruneCacheEntry(keys.values().next().value)\r\n        }\r\n      }\r\n      // avoid vnode being unmounted\r\n      vnode.shapeFlag |= ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\r\n\r\n      current = vnode\r\n      return isSuspense(rawVNode.type) ? rawVNode : vnode\r\n    }\r\n  }\r\n}\r\n\r\nif (__COMPAT__) {\r\n  KeepAliveImpl.__isBuildIn = true\r\n}\r\n\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nexport const KeepAlive = KeepAliveImpl as any as {\r\n  __isKeepAlive: true\r\n  new (): {\r\n    $props: VNodeProps & KeepAliveProps\r\n  }\r\n}\r\n\r\nfunction matches(pattern: MatchPattern, name: string): boolean {\r\n  if (isArray(pattern)) {\r\n    return pattern.some((p: string | RegExp) => matches(p, name))\r\n  } else if (isString(pattern)) {\r\n    return pattern.split(',').includes(name)\r\n  } else if (pattern.test) {\r\n    return pattern.test(name)\r\n  }\r\n  /* istanbul ignore next */\r\n  return false\r\n}\r\n\r\nexport function onActivated(\r\n  hook: Function,\r\n  target?: ComponentInternalInstance | null\r\n) {\r\n  registerKeepAliveHook(hook, LifecycleHooks.ACTIVATED, target)\r\n}\r\n\r\nexport function onDeactivated(\r\n  hook: Function,\r\n  target?: ComponentInternalInstance | null\r\n) {\r\n  registerKeepAliveHook(hook, LifecycleHooks.DEACTIVATED, target)\r\n}\r\n\r\nfunction registerKeepAliveHook(\r\n  hook: Function & { __wdc?: Function },\r\n  type: LifecycleHooks,\r\n  target: ComponentInternalInstance | null = currentInstance\r\n) {\r\n  // cache the deactivate branch check wrapper for injected hooks so the same\r\n  // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n  // deactivation check\".\r\n  const wrappedHook =\r\n    hook.__wdc ||\r\n    (hook.__wdc = () => {\r\n      // only fire the hook if the target instance is NOT in a deactivated branch.\r\n      let current: ComponentInternalInstance | null = target\r\n      while (current) {\r\n        if (current.isDeactivated) {\r\n          return\r\n        }\r\n        current = current.parent\r\n      }\r\n      return hook()\r\n    })\r\n  injectHook(type, wrappedHook, target)\r\n  // In addition to registering it on the target instance, we walk up the parent\r\n  // chain and register it on all ancestor instances that are keep-alive roots.\r\n  // This avoids the need to walk the entire component tree when invoking these\r\n  // hooks, and more importantly, avoids the need to track child components in\r\n  // arrays.\r\n  if (target) {\r\n    let current = target.parent\r\n    while (current && current.parent) {\r\n      if (isKeepAlive(current.parent.vnode)) {\r\n        injectToKeepAliveRoot(wrappedHook, type, target, current)\r\n      }\r\n      current = current.parent\r\n    }\r\n  }\r\n}\r\n\r\nfunction injectToKeepAliveRoot(\r\n  hook: Function & { __weh?: Function },\r\n  type: LifecycleHooks,\r\n  target: ComponentInternalInstance,\r\n  keepAliveRoot: ComponentInternalInstance\r\n) {\r\n  // injectHook wraps the original for error handling, so make sure to remove\r\n  // the wrapped version.\r\n  const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */)\r\n  onUnmounted(() => {\r\n    remove(keepAliveRoot[type]!, injected)\r\n  }, target)\r\n}\r\n\r\nfunction resetShapeFlag(vnode: VNode) {\r\n  let shapeFlag = vnode.shapeFlag\r\n  if (shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE) {\r\n    shapeFlag -= ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\r\n  }\r\n  if (shapeFlag & ShapeFlags.COMPONENT_KEPT_ALIVE) {\r\n    shapeFlag -= ShapeFlags.COMPONENT_KEPT_ALIVE\r\n  }\r\n  vnode.shapeFlag = shapeFlag\r\n}\r\n\r\nfunction getInnerChild(vnode: VNode) {\r\n  return vnode.shapeFlag & ShapeFlags.SUSPENSE ? vnode.ssContent! : vnode\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  currentInstance,\r\n  isInSSRComponentSetup,\r\n  LifecycleHooks,\r\n  setCurrentInstance,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { callWithAsyncErrorHandling, ErrorTypeStrings } from './errorHandling'\r\nimport { warn } from './warning'\r\nimport { toHandlerKey } from '@vue/shared'\r\nimport { DebuggerEvent, pauseTracking, resetTracking } from '@vue/reactivity'\r\n\r\nexport { onActivated, onDeactivated } from './components/KeepAlive'\r\n\r\nexport function injectHook(\r\n  type: LifecycleHooks,\r\n  hook: Function & { __weh?: Function },\r\n  target: ComponentInternalInstance | null = currentInstance,\r\n  prepend: boolean = false\r\n): Function | undefined {\r\n  if (target) {\r\n    const hooks = target[type] || (target[type] = [])\r\n    // cache the error handling wrapper for injected hooks so the same hook\r\n    // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n    // handling\".\r\n    const wrappedHook =\r\n      hook.__weh ||\r\n      (hook.__weh = (...args: unknown[]) => {\r\n        if (target.isUnmounted) {\r\n          return\r\n        }\r\n        // disable tracking inside all lifecycle hooks\r\n        // since they can potentially be called inside effects.\r\n        pauseTracking()\r\n        // Set currentInstance during hook invocation.\r\n        // This assumes the hook does not synchronously trigger other hooks, which\r\n        // can only be false when the user does something really funky.\r\n        setCurrentInstance(target)\r\n        const res = callWithAsyncErrorHandling(hook, target, type, args)\r\n        unsetCurrentInstance()\r\n        resetTracking()\r\n        return res\r\n      })\r\n    if (prepend) {\r\n      hooks.unshift(wrappedHook)\r\n    } else {\r\n      hooks.push(wrappedHook)\r\n    }\r\n    return wrappedHook\r\n  } else if (__DEV__) {\r\n    const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''))\r\n    warn(\r\n      `${apiName} is called when there is no active component instance to be ` +\r\n        `associated with. ` +\r\n        `Lifecycle injection APIs can only be used during execution of setup().` +\r\n        (__FEATURE_SUSPENSE__\r\n          ? ` If you are using async setup(), make sure to register lifecycle ` +\r\n            `hooks before the first await statement.`\r\n          : ``)\r\n    )\r\n  }\r\n}\r\n\r\nexport const createHook =\r\n  <T extends Function = () => any>(lifecycle: LifecycleHooks) =>\r\n  (hook: T, target: ComponentInternalInstance | null = currentInstance) =>\r\n    // post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\r\n    (!isInSSRComponentSetup || lifecycle === LifecycleHooks.SERVER_PREFETCH) &&\r\n    injectHook(lifecycle, hook, target)\r\n\r\nexport const onBeforeMount = createHook(LifecycleHooks.BEFORE_MOUNT)\r\nexport const onMounted = createHook(LifecycleHooks.MOUNTED)\r\nexport const onBeforeUpdate = createHook(LifecycleHooks.BEFORE_UPDATE)\r\nexport const onUpdated = createHook(LifecycleHooks.UPDATED)\r\nexport const onBeforeUnmount = createHook(LifecycleHooks.BEFORE_UNMOUNT)\r\nexport const onUnmounted = createHook(LifecycleHooks.UNMOUNTED)\r\nexport const onServerPrefetch = createHook(LifecycleHooks.SERVER_PREFETCH)\r\n\r\nexport type DebuggerHook = (e: DebuggerEvent) => void\r\nexport const onRenderTriggered = createHook<DebuggerHook>(\r\n  LifecycleHooks.RENDER_TRIGGERED\r\n)\r\nexport const onRenderTracked = createHook<DebuggerHook>(\r\n  LifecycleHooks.RENDER_TRACKED\r\n)\r\n\r\nexport type ErrorCapturedHook<TError = unknown> = (\r\n  err: TError,\r\n  instance: ComponentPublicInstance | null,\r\n  info: string\r\n) => boolean | void\r\n\r\nexport function onErrorCaptured<TError = Error>(\r\n  hook: ErrorCapturedHook<TError>,\r\n  target: ComponentInternalInstance | null = currentInstance\r\n) {\r\n  injectHook(LifecycleHooks.ERROR_CAPTURED, hook, target)\r\n}\r\n","/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\r\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\r\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\n\r\nimport { VNode } from './vnode'\r\nimport { isFunction, EMPTY_OBJ, isBuiltInDirective } from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { ComponentInternalInstance, Data, getExposeProxy } from './component'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from './errorHandling'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { mapCompatDirectiveHook } from './compat/customDirective'\r\nimport { pauseTracking, resetTracking } from '@vue/reactivity'\r\nimport { traverse } from './apiWatch'\r\n\r\nexport interface DirectiveBinding<V = any> {\r\n  instance: ComponentPublicInstance | null\r\n  value: V\r\n  oldValue: V | null\r\n  arg?: string\r\n  modifiers: DirectiveModifiers\r\n  dir: ObjectDirective<any, V>\r\n}\r\n\r\nexport type DirectiveHook<T = any, Prev = VNode<any, T> | null, V = any> = (\r\n  el: T,\r\n  binding: DirectiveBinding<V>,\r\n  vnode: VNode<any, T>,\r\n  prevVNode: Prev\r\n) => void\r\n\r\nexport type SSRDirectiveHook = (\r\n  binding: DirectiveBinding,\r\n  vnode: VNode\r\n) => Data | undefined\r\n\r\nexport interface ObjectDirective<T = any, V = any> {\r\n  created?: DirectiveHook<T, null, V>\r\n  beforeMount?: DirectiveHook<T, null, V>\r\n  mounted?: DirectiveHook<T, null, V>\r\n  beforeUpdate?: DirectiveHook<T, VNode<any, T>, V>\r\n  updated?: DirectiveHook<T, VNode<any, T>, V>\r\n  beforeUnmount?: DirectiveHook<T, null, V>\r\n  unmounted?: DirectiveHook<T, null, V>\r\n  getSSRProps?: SSRDirectiveHook\r\n  deep?: boolean\r\n}\r\n\r\nexport type FunctionDirective<T = any, V = any> = DirectiveHook<T, any, V>\r\n\r\nexport type Directive<T = any, V = any> =\r\n  | ObjectDirective<T, V>\r\n  | FunctionDirective<T, V>\r\n\r\nexport type DirectiveModifiers = Record<string, boolean>\r\n\r\nexport function validateDirectiveName(name: string) {\r\n  if (isBuiltInDirective(name)) {\r\n    warn('Do not use built-in directive ids as custom directive id: ' + name)\r\n  }\r\n}\r\n\r\n// Directive, value, argument, modifiers\r\nexport type DirectiveArguments = Array<\r\n  | [Directive]\r\n  | [Directive, any]\r\n  | [Directive, any, string]\r\n  | [Directive, any, string, DirectiveModifiers]\r\n>\r\n\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nexport function withDirectives<T extends VNode>(\r\n  vnode: T,\r\n  directives: DirectiveArguments\r\n): T {\r\n  const internalInstance = currentRenderingInstance\r\n  if (internalInstance === null) {\r\n    __DEV__ && warn(`withDirectives can only be used inside render functions.`)\r\n    return vnode\r\n  }\r\n  const instance =\r\n    (getExposeProxy(internalInstance) as ComponentPublicInstance) ||\r\n    internalInstance.proxy\r\n  const bindings: DirectiveBinding[] = vnode.dirs || (vnode.dirs = [])\r\n  for (let i = 0; i < directives.length; i++) {\r\n    let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i]\r\n    if (isFunction(dir)) {\r\n      dir = {\r\n        mounted: dir,\r\n        updated: dir\r\n      } as ObjectDirective\r\n    }\r\n    if (dir.deep) {\r\n      traverse(value)\r\n    }\r\n    bindings.push({\r\n      dir,\r\n      instance,\r\n      value,\r\n      oldValue: void 0,\r\n      arg,\r\n      modifiers\r\n    })\r\n  }\r\n  return vnode\r\n}\r\n\r\nexport function invokeDirectiveHook(\r\n  vnode: VNode,\r\n  prevVNode: VNode | null,\r\n  instance: ComponentInternalInstance | null,\r\n  name: keyof ObjectDirective\r\n) {\r\n  const bindings = vnode.dirs!\r\n  const oldBindings = prevVNode && prevVNode.dirs!\r\n  for (let i = 0; i < bindings.length; i++) {\r\n    const binding = bindings[i]\r\n    if (oldBindings) {\r\n      binding.oldValue = oldBindings[i].value\r\n    }\r\n    let hook = binding.dir[name] as DirectiveHook | DirectiveHook[] | undefined\r\n    if (__COMPAT__ && !hook) {\r\n      hook = mapCompatDirectiveHook(name, binding.dir, instance)\r\n    }\r\n    if (hook) {\r\n      // disable tracking inside all lifecycle hooks\r\n      // since they can potentially be called inside effects.\r\n      pauseTracking()\r\n      callWithAsyncErrorHandling(hook, instance, ErrorCodes.DIRECTIVE_HOOK, [\r\n        vnode.el,\r\n        binding,\r\n        vnode,\r\n        prevVNode\r\n      ])\r\n      resetTracking()\r\n    }\r\n  }\r\n}\r\n","import {\r\n  currentInstance,\r\n  ConcreteComponent,\r\n  ComponentOptions,\r\n  getComponentName\r\n} from '../component'\r\nimport { currentRenderingInstance } from '../componentRenderContext'\r\nimport { Directive } from '../directives'\r\nimport { camelize, capitalize, isString } from '@vue/shared'\r\nimport { warn } from '../warning'\r\nimport { VNodeTypes } from '../vnode'\r\n\r\nexport const COMPONENTS = 'components'\r\nexport const DIRECTIVES = 'directives'\r\nexport const FILTERS = 'filters'\r\n\r\nexport type AssetTypes = typeof COMPONENTS | typeof DIRECTIVES | typeof FILTERS\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveComponent(\r\n  name: string,\r\n  maybeSelfReference?: boolean\r\n): ConcreteComponent | string {\r\n  return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name\r\n}\r\n\r\nexport const NULL_DYNAMIC_COMPONENT = Symbol()\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveDynamicComponent(component: unknown): VNodeTypes {\r\n  if (isString(component)) {\r\n    return resolveAsset(COMPONENTS, component, false) || component\r\n  } else {\r\n    // invalid types will fallthrough to createVNode and raise warning\r\n    return (component || NULL_DYNAMIC_COMPONENT) as any\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveDirective(name: string): Directive | undefined {\r\n  return resolveAsset(DIRECTIVES, name)\r\n}\r\n\r\n/**\r\n * v2 compat only\r\n * @internal\r\n */\r\nexport function resolveFilter(name: string): Function | undefined {\r\n  return resolveAsset(FILTERS, name)\r\n}\r\n\r\n/**\r\n * @private\r\n * overload 1: components\r\n */\r\nfunction resolveAsset(\r\n  type: typeof COMPONENTS,\r\n  name: string,\r\n  warnMissing?: boolean,\r\n  maybeSelfReference?: boolean\r\n): ConcreteComponent | undefined\r\n// overload 2: directives\r\nfunction resolveAsset(\r\n  type: typeof DIRECTIVES,\r\n  name: string\r\n): Directive | undefined\r\n// implementation\r\n// overload 3: filters (compat only)\r\nfunction resolveAsset(type: typeof FILTERS, name: string): Function | undefined\r\n// implementation\r\nfunction resolveAsset(\r\n  type: AssetTypes,\r\n  name: string,\r\n  warnMissing = true,\r\n  maybeSelfReference = false\r\n) {\r\n  const instance = currentRenderingInstance || currentInstance\r\n  if (instance) {\r\n    const Component = instance.type\r\n\r\n    // explicit self name has highest priority\r\n    if (type === COMPONENTS) {\r\n      const selfName = getComponentName(\r\n        Component,\r\n        false /* do not include inferred name to avoid breaking existing code */\r\n      )\r\n      if (\r\n        selfName &&\r\n        (selfName === name ||\r\n          selfName === camelize(name) ||\r\n          selfName === capitalize(camelize(name)))\r\n      ) {\r\n        return Component\r\n      }\r\n    }\r\n\r\n    const res =\r\n      // local registration\r\n      // check instance[type] first which is resolved for options API\r\n      resolve(instance[type] || (Component as ComponentOptions)[type], name) ||\r\n      // global registration\r\n      resolve(instance.appContext[type], name)\r\n\r\n    if (!res && maybeSelfReference) {\r\n      // fallback to implicit self-reference\r\n      return Component\r\n    }\r\n\r\n    if (__DEV__ && warnMissing && !res) {\r\n      const extra =\r\n        type === COMPONENTS\r\n          ? `\\nIf this is a native custom element, make sure to exclude it from ` +\r\n            `component resolution via compilerOptions.isCustomElement.`\r\n          : ``\r\n      warn(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`)\r\n    }\r\n\r\n    return res\r\n  } else if (__DEV__) {\r\n    warn(\r\n      `resolve${capitalize(type.slice(0, -1))} ` +\r\n        `can only be used in render() or setup().`\r\n    )\r\n  }\r\n}\r\n\r\nfunction resolve(registry: Record<string, any> | undefined, name: string) {\r\n  return (\r\n    registry &&\r\n    (registry[name] ||\r\n      registry[camelize(name)] ||\r\n      registry[capitalize(camelize(name))])\r\n  )\r\n}\r\n","import { Data } from '../component'\r\nimport { Slots, RawSlots } from '../componentSlots'\r\nimport {\r\n  ContextualRenderFn,\r\n  currentRenderingInstance\r\n} from '../componentRenderContext'\r\nimport {\r\n  Comment,\r\n  isVNode,\r\n  VNodeArrayChildren,\r\n  openBlock,\r\n  createBlock,\r\n  Fragment,\r\n  VNode\r\n} from '../vnode'\r\nimport { PatchFlags, SlotFlags } from '@vue/shared'\r\nimport { warn } from '../warning'\r\nimport { createVNode } from '@vue/runtime-core'\r\nimport { isAsyncWrapper } from '../apiAsyncComponent'\r\n\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nexport function renderSlot(\r\n  slots: Slots,\r\n  name: string,\r\n  props: Data = {},\r\n  // this is not a user-facing function, so the fallback is always generated by\r\n  // the compiler and guaranteed to be a function returning an array\r\n  fallback?: () => VNodeArrayChildren,\r\n  noSlotted?: boolean\r\n): VNode {\r\n  if (\r\n    currentRenderingInstance!.isCE ||\r\n    (currentRenderingInstance!.parent &&\r\n      isAsyncWrapper(currentRenderingInstance!.parent) &&\r\n      currentRenderingInstance!.parent.isCE)\r\n  ) {\r\n    return createVNode(\r\n      'slot',\r\n      name === 'default' ? null : { name },\r\n      fallback && fallback()\r\n    )\r\n  }\r\n\r\n  let slot = slots[name]\r\n\r\n  if (__DEV__ && slot && slot.length > 1) {\r\n    warn(\r\n      `SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n        `function. You need to mark this component with $dynamic-slots in the ` +\r\n        `parent template.`\r\n    )\r\n    slot = () => []\r\n  }\r\n\r\n  // a compiled slot disables block tracking by default to avoid manual\r\n  // invocation interfering with template-based block tracking, but in\r\n  // `renderSlot` we can be sure that it's template-based so we can force\r\n  // enable it.\r\n  if (slot && (slot as ContextualRenderFn)._c) {\r\n    ;(slot as ContextualRenderFn)._d = false\r\n  }\r\n  openBlock()\r\n  const validSlotContent = slot && ensureValidVNode(slot(props))\r\n  const rendered = createBlock(\r\n    Fragment,\r\n    { key: props.key || `_${name}` },\r\n    validSlotContent || (fallback ? fallback() : []),\r\n    validSlotContent && (slots as RawSlots)._ === SlotFlags.STABLE\r\n      ? PatchFlags.STABLE_FRAGMENT\r\n      : PatchFlags.BAIL\r\n  )\r\n  if (!noSlotted && rendered.scopeId) {\r\n    rendered.slotScopeIds = [rendered.scopeId + '-s']\r\n  }\r\n  if (slot && (slot as ContextualRenderFn)._c) {\r\n    ;(slot as ContextualRenderFn)._d = true\r\n  }\r\n  return rendered\r\n}\r\n\r\nfunction ensureValidVNode(vnodes: VNodeArrayChildren) {\r\n  return vnodes.some(child => {\r\n    if (!isVNode(child)) return true\r\n    if (child.type === Comment) return false\r\n    if (\r\n      child.type === Fragment &&\r\n      !ensureValidVNode(child.children as VNodeArrayChildren)\r\n    )\r\n      return false\r\n    return true\r\n  })\r\n    ? vnodes\r\n    : null\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  Data,\r\n  getExposeProxy,\r\n  isStatefulComponent\r\n} from './component'\r\nimport { nextTick, queueJob } from './scheduler'\r\nimport { instanceWatch, WatchOptions, WatchStopHandle } from './apiWatch'\r\nimport {\r\n  EMPTY_OBJ,\r\n  hasOwn,\r\n  isGloballyWhitelisted,\r\n  NOOP,\r\n  extend,\r\n  isString,\r\n  isFunction,\r\n  UnionToIntersection\r\n} from '@vue/shared'\r\nimport {\r\n  toRaw,\r\n  shallowReadonly,\r\n  track,\r\n  TrackOpTypes,\r\n  ShallowUnwrapRef,\r\n  UnwrapNestedRefs\r\n} from '@vue/reactivity'\r\nimport {\r\n  ExtractComputedReturns,\r\n  ComponentOptionsBase,\r\n  ComputedOptions,\r\n  MethodOptions,\r\n  ComponentOptionsMixin,\r\n  OptionTypesType,\r\n  OptionTypesKeys,\r\n  resolveMergedOptions,\r\n  shouldCacheAccess,\r\n  MergedComponentOptionsOverride\r\n} from './componentOptions'\r\nimport { EmitsOptions, EmitFn } from './componentEmits'\r\nimport { Slots } from './componentSlots'\r\nimport { markAttrsAccessed } from './componentRenderUtils'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { warn } from './warning'\r\nimport { installCompatInstanceProperties } from './compat/instance'\r\n\r\n/**\r\n * Custom properties added to component instances in any way and can be accessed through `this`\r\n *\r\n * @example\r\n * Here is an example of adding a property `$router` to every component instance:\r\n * ```ts\r\n * import { createApp } from 'vue'\r\n * import { Router, createRouter } from 'vue-router'\r\n *\r\n * declare module '@vue/runtime-core' {\r\n *   interface ComponentCustomProperties {\r\n *     $router: Router\r\n *   }\r\n * }\r\n *\r\n * // effectively adding the router to every component instance\r\n * const app = createApp({})\r\n * const router = createRouter()\r\n * app.config.globalProperties.$router = router\r\n *\r\n * const vm = app.mount('#app')\r\n * // we can access the router from the instance\r\n * vm.$router.push('/')\r\n * ```\r\n */\r\nexport interface ComponentCustomProperties {}\r\n\r\ntype IsDefaultMixinComponent<T> = T extends ComponentOptionsMixin\r\n  ? ComponentOptionsMixin extends T\r\n    ? true\r\n    : false\r\n  : false\r\n\r\ntype MixinToOptionTypes<T> = T extends ComponentOptionsBase<\r\n  infer P,\r\n  infer B,\r\n  infer D,\r\n  infer C,\r\n  infer M,\r\n  infer Mixin,\r\n  infer Extends,\r\n  any,\r\n  any,\r\n  infer Defaults\r\n>\r\n  ? OptionTypesType<P & {}, B & {}, D & {}, C & {}, M & {}, Defaults & {}> &\r\n      IntersectionMixin<Mixin> &\r\n      IntersectionMixin<Extends>\r\n  : never\r\n\r\n// ExtractMixin(map type) is used to resolve circularly references\r\ntype ExtractMixin<T> = {\r\n  Mixin: MixinToOptionTypes<T>\r\n}[T extends ComponentOptionsMixin ? 'Mixin' : never]\r\n\r\ntype IntersectionMixin<T> = IsDefaultMixinComponent<T> extends true\r\n  ? OptionTypesType<{}, {}, {}, {}, {}>\r\n  : UnionToIntersection<ExtractMixin<T>>\r\n\r\ntype UnwrapMixinsType<\r\n  T,\r\n  Type extends OptionTypesKeys\r\n> = T extends OptionTypesType ? T[Type] : never\r\n\r\ntype EnsureNonVoid<T> = T extends void ? {} : T\r\n\r\nexport type ComponentPublicInstanceConstructor<\r\n  T extends ComponentPublicInstance<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M\r\n  > = ComponentPublicInstance<any>,\r\n  Props = any,\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions\r\n> = {\r\n  __isFragment?: never\r\n  __isTeleport?: never\r\n  __isSuspense?: never\r\n  new (...args: any[]): T\r\n}\r\n\r\nexport type CreateComponentPublicInstance<\r\n  P = {},\r\n  B = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  PublicProps = P,\r\n  Defaults = {},\r\n  MakeDefaultsOptional extends boolean = false,\r\n  PublicMixin = IntersectionMixin<Mixin> & IntersectionMixin<Extends>,\r\n  PublicP = UnwrapMixinsType<PublicMixin, 'P'> & EnsureNonVoid<P>,\r\n  PublicB = UnwrapMixinsType<PublicMixin, 'B'> & EnsureNonVoid<B>,\r\n  PublicD = UnwrapMixinsType<PublicMixin, 'D'> & EnsureNonVoid<D>,\r\n  PublicC extends ComputedOptions = UnwrapMixinsType<PublicMixin, 'C'> &\r\n    EnsureNonVoid<C>,\r\n  PublicM extends MethodOptions = UnwrapMixinsType<PublicMixin, 'M'> &\r\n    EnsureNonVoid<M>,\r\n  PublicDefaults = UnwrapMixinsType<PublicMixin, 'Defaults'> &\r\n    EnsureNonVoid<Defaults>\r\n> = ComponentPublicInstance<\r\n  PublicP,\r\n  PublicB,\r\n  PublicD,\r\n  PublicC,\r\n  PublicM,\r\n  E,\r\n  PublicProps,\r\n  PublicDefaults,\r\n  MakeDefaultsOptional,\r\n  ComponentOptionsBase<P, B, D, C, M, Mixin, Extends, E, string, Defaults>\r\n>\r\n\r\n// public properties exposed on the proxy, which is used as the render context\r\n// in templates (as `this` in the render option)\r\nexport type ComponentPublicInstance<\r\n  P = {}, // props type extracted from props option\r\n  B = {}, // raw bindings returned from setup()\r\n  D = {}, // return from data()\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  E extends EmitsOptions = {},\r\n  PublicProps = P,\r\n  Defaults = {},\r\n  MakeDefaultsOptional extends boolean = false,\r\n  Options = ComponentOptionsBase<any, any, any, any, any, any, any, any, any>\r\n> = {\r\n  $: ComponentInternalInstance\r\n  $data: D\r\n  $props: MakeDefaultsOptional extends true\r\n    ? Partial<Defaults> & Omit<P & PublicProps, keyof Defaults>\r\n    : P & PublicProps\r\n  $attrs: Data\r\n  $refs: Data\r\n  $slots: Slots\r\n  $root: ComponentPublicInstance | null\r\n  $parent: ComponentPublicInstance | null\r\n  $emit: EmitFn<E>\r\n  $el: any\r\n  $options: Options & MergedComponentOptionsOverride\r\n  $forceUpdate: () => void\r\n  $nextTick: typeof nextTick\r\n  $watch(\r\n    source: string | Function,\r\n    cb: Function,\r\n    options?: WatchOptions\r\n  ): WatchStopHandle\r\n} & P &\r\n  ShallowUnwrapRef<B> &\r\n  UnwrapNestedRefs<D> &\r\n  ExtractComputedReturns<C> &\r\n  M &\r\n  ComponentCustomProperties\r\n\r\nexport type PublicPropertiesMap = Record<\r\n  string,\r\n  (i: ComponentInternalInstance) => any\r\n>\r\n\r\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (\r\n  i: ComponentInternalInstance | null\r\n): ComponentPublicInstance | ComponentInternalInstance['exposed'] | null => {\r\n  if (!i) return null\r\n  if (isStatefulComponent(i)) return getExposeProxy(i) || i.proxy\r\n  return getPublicInstance(i.parent)\r\n}\r\n\r\nexport const publicPropertiesMap: PublicPropertiesMap =\r\n  // Move PURE marker to new line to workaround compiler discarding it\r\n  // due to type annotation\r\n  /*#__PURE__*/ extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => (__DEV__ ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => (__DEV__ ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => (__DEV__ ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => (__DEV__ ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (__FEATURE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => i.f || (i.f = () => queueJob(i.update)),\r\n    $nextTick: i => i.n || (i.n = nextTick.bind(i.proxy!)),\r\n    $watch: i => (__FEATURE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n  } as PublicPropertiesMap)\r\n\r\nif (__COMPAT__) {\r\n  installCompatInstanceProperties(publicPropertiesMap)\r\n}\r\n\r\nconst enum AccessTypes {\r\n  OTHER,\r\n  SETUP,\r\n  DATA,\r\n  PROPS,\r\n  CONTEXT\r\n}\r\n\r\nexport interface ComponentRenderContext {\r\n  [key: string]: any\r\n  _: ComponentInternalInstance\r\n}\r\n\r\nexport const isReservedPrefix = (key: string) => key === '_' || key === '$'\r\n\r\nexport const PublicInstanceProxyHandlers: ProxyHandler<any> = {\r\n  get({ _: instance }: ComponentRenderContext, key: string) {\r\n    const { ctx, setupState, data, props, accessCache, type, appContext } =\r\n      instance\r\n\r\n    // for internal formatters to know that this is a Vue instance\r\n    if (__DEV__ && key === '__isVue') {\r\n      return true\r\n    }\r\n\r\n    // prioritize <script setup> bindings during dev.\r\n    // this allows even properties that start with _ or $ to be used - so that\r\n    // it aligns with the production behavior where the render fn is inlined and\r\n    // indeed has access to all declared variables.\r\n    if (\r\n      __DEV__ &&\r\n      setupState !== EMPTY_OBJ &&\r\n      setupState.__isScriptSetup &&\r\n      hasOwn(setupState, key)\r\n    ) {\r\n      return setupState[key]\r\n    }\r\n\r\n    // data / props / ctx\r\n    // This getter gets called for every property access on the render context\r\n    // during render and is a major hotspot. The most expensive part of this\r\n    // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n    // access on a plain object, so we use an accessCache object (with null\r\n    // prototype) to memoize what access type a key corresponds to.\r\n    let normalizedProps\r\n    if (key[0] !== '$') {\r\n      const n = accessCache![key]\r\n      if (n !== undefined) {\r\n        switch (n) {\r\n          case AccessTypes.SETUP:\r\n            return setupState[key]\r\n          case AccessTypes.DATA:\r\n            return data[key]\r\n          case AccessTypes.CONTEXT:\r\n            return ctx[key]\r\n          case AccessTypes.PROPS:\r\n            return props![key]\r\n          // default: just fallthrough\r\n        }\r\n      } else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n        accessCache![key] = AccessTypes.SETUP\r\n        return setupState[key]\r\n      } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n        accessCache![key] = AccessTypes.DATA\r\n        return data[key]\r\n      } else if (\r\n        // only cache other properties when instance has declared (thus stable)\r\n        // props\r\n        (normalizedProps = instance.propsOptions[0]) &&\r\n        hasOwn(normalizedProps, key)\r\n      ) {\r\n        accessCache![key] = AccessTypes.PROPS\r\n        return props![key]\r\n      } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n        accessCache![key] = AccessTypes.CONTEXT\r\n        return ctx[key]\r\n      } else if (!__FEATURE_OPTIONS_API__ || shouldCacheAccess) {\r\n        accessCache![key] = AccessTypes.OTHER\r\n      }\r\n    }\r\n\r\n    const publicGetter = publicPropertiesMap[key]\r\n    let cssModule, globalProperties\r\n    // public $xxx properties\r\n    if (publicGetter) {\r\n      if (key === '$attrs') {\r\n        track(instance, TrackOpTypes.GET, key)\r\n        __DEV__ && markAttrsAccessed()\r\n      }\r\n      return publicGetter(instance)\r\n    } else if (\r\n      // css module (injected by vue-loader)\r\n      (cssModule = type.__cssModules) &&\r\n      (cssModule = cssModule[key])\r\n    ) {\r\n      return cssModule\r\n    } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n      // user may set custom properties to `this` that start with `$`\r\n      accessCache![key] = AccessTypes.CONTEXT\r\n      return ctx[key]\r\n    } else if (\r\n      // global properties\r\n      ((globalProperties = appContext.config.globalProperties),\r\n      hasOwn(globalProperties, key))\r\n    ) {\r\n      if (__COMPAT__) {\r\n        const desc = Object.getOwnPropertyDescriptor(globalProperties, key)!\r\n        if (desc.get) {\r\n          return desc.get.call(instance.proxy)\r\n        } else {\r\n          const val = globalProperties[key]\r\n          return isFunction(val)\r\n            ? Object.assign(val.bind(instance.proxy), val)\r\n            : val\r\n        }\r\n      } else {\r\n        return globalProperties[key]\r\n      }\r\n    } else if (\r\n      __DEV__ &&\r\n      currentRenderingInstance &&\r\n      (!isString(key) ||\r\n        // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n        // to infinite warning loop\r\n        key.indexOf('__v') !== 0)\r\n    ) {\r\n      if (data !== EMPTY_OBJ && isReservedPrefix(key[0]) && hasOwn(data, key)) {\r\n        warn(\r\n          `Property ${JSON.stringify(\r\n            key\r\n          )} must be accessed via $data because it starts with a reserved ` +\r\n            `character (\"$\" or \"_\") and is not proxied on the render context.`\r\n        )\r\n      } else if (instance === currentRenderingInstance) {\r\n        warn(\r\n          `Property ${JSON.stringify(key)} was accessed during render ` +\r\n            `but is not defined on instance.`\r\n        )\r\n      }\r\n    }\r\n  },\r\n\r\n  set(\r\n    { _: instance }: ComponentRenderContext,\r\n    key: string,\r\n    value: any\r\n  ): boolean {\r\n    const { data, setupState, ctx } = instance\r\n    if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n      setupState[key] = value\r\n      return true\r\n    } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n      data[key] = value\r\n      return true\r\n    } else if (hasOwn(instance.props, key)) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Attempting to mutate prop \"${key}\". Props are readonly.`,\r\n          instance\r\n        )\r\n      return false\r\n    }\r\n    if (key[0] === '$' && key.slice(1) in instance) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Attempting to mutate public property \"${key}\". ` +\r\n            `Properties starting with $ are reserved and readonly.`,\r\n          instance\r\n        )\r\n      return false\r\n    } else {\r\n      if (__DEV__ && key in instance.appContext.config.globalProperties) {\r\n        Object.defineProperty(ctx, key, {\r\n          enumerable: true,\r\n          configurable: true,\r\n          value\r\n        })\r\n      } else {\r\n        ctx[key] = value\r\n      }\r\n    }\r\n    return true\r\n  },\r\n\r\n  has(\r\n    {\r\n      _: { data, setupState, accessCache, ctx, appContext, propsOptions }\r\n    }: ComponentRenderContext,\r\n    key: string\r\n  ) {\r\n    let normalizedProps\r\n    return (\r\n      !!accessCache![key] ||\r\n      (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n      (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n      ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n      hasOwn(ctx, key) ||\r\n      hasOwn(publicPropertiesMap, key) ||\r\n      hasOwn(appContext.config.globalProperties, key)\r\n    )\r\n  },\r\n\r\n  defineProperty(\r\n    target: ComponentRenderContext,\r\n    key: string,\r\n    descriptor: PropertyDescriptor\r\n  ) {\r\n    if (descriptor.get != null) {\r\n      // invalidate key cache of a getter based property #5417\r\n      target._.accessCache![key] = 0\r\n    } else if (hasOwn(descriptor, 'value')) {\r\n      this.set!(target, key, descriptor.value, null)\r\n    }\r\n    return Reflect.defineProperty(target, key, descriptor)\r\n  }\r\n}\r\n\r\nif (__DEV__ && !__TEST__) {\r\n  PublicInstanceProxyHandlers.ownKeys = (target: ComponentRenderContext) => {\r\n    warn(\r\n      `Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n        `The keys will be empty in production mode to avoid performance overhead.`\r\n    )\r\n    return Reflect.ownKeys(target)\r\n  }\r\n}\r\n\r\nexport const RuntimeCompiledPublicInstanceProxyHandlers = /*#__PURE__*/ extend(\r\n  {},\r\n  PublicInstanceProxyHandlers,\r\n  {\r\n    get(target: ComponentRenderContext, key: string) {\r\n      // fast path for unscopables when using `with` block\r\n      if ((key as any) === Symbol.unscopables) {\r\n        return\r\n      }\r\n      return PublicInstanceProxyHandlers.get!(target, key, target)\r\n    },\r\n    has(_: ComponentRenderContext, key: string) {\r\n      const has = key[0] !== '_' && !isGloballyWhitelisted(key)\r\n      if (__DEV__ && !has && PublicInstanceProxyHandlers.has!(_, key)) {\r\n        warn(\r\n          `Property ${JSON.stringify(\r\n            key\r\n          )} should not start with _ which is a reserved prefix for Vue internals.`\r\n        )\r\n      }\r\n      return has\r\n    }\r\n  }\r\n)\r\n\r\n// dev only\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nexport function createDevRenderContext(instance: ComponentInternalInstance) {\r\n  const target: Record<string, any> = {}\r\n\r\n  // expose internal instance for proxy handlers\r\n  Object.defineProperty(target, `_`, {\r\n    configurable: true,\r\n    enumerable: false,\r\n    get: () => instance\r\n  })\r\n\r\n  // expose public properties\r\n  Object.keys(publicPropertiesMap).forEach(key => {\r\n    Object.defineProperty(target, key, {\r\n      configurable: true,\r\n      enumerable: false,\r\n      get: () => publicPropertiesMap[key](instance),\r\n      // intercepted by the proxy so no need for implementation,\r\n      // but needed to prevent set errors\r\n      set: NOOP\r\n    })\r\n  })\r\n\r\n  return target as ComponentRenderContext\r\n}\r\n\r\n// dev only\r\nexport function exposePropsOnRenderContext(\r\n  instance: ComponentInternalInstance\r\n) {\r\n  const {\r\n    ctx,\r\n    propsOptions: [propsOptions]\r\n  } = instance\r\n  if (propsOptions) {\r\n    Object.keys(propsOptions).forEach(key => {\r\n      Object.defineProperty(ctx, key, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get: () => instance.props[key],\r\n        set: NOOP\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// dev only\r\nexport function exposeSetupStateOnRenderContext(\r\n  instance: ComponentInternalInstance\r\n) {\r\n  const { ctx, setupState } = instance\r\n  Object.keys(toRaw(setupState)).forEach(key => {\r\n    if (!setupState.__isScriptSetup) {\r\n      if (isReservedPrefix(key[0])) {\r\n        warn(\r\n          `setup() return property ${JSON.stringify(\r\n            key\r\n          )} should not start with \"$\" or \"_\" ` +\r\n            `which are reserved prefixes for Vue internals.`\r\n        )\r\n        return\r\n      }\r\n      Object.defineProperty(ctx, key, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get: () => setupState[key],\r\n        set: NOOP\r\n      })\r\n    }\r\n  })\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  Data,\r\n  SetupContext,\r\n  ComponentInternalOptions,\r\n  Component,\r\n  ConcreteComponent,\r\n  InternalRenderFunction,\r\n  LifecycleHooks\r\n} from './component'\r\nimport {\r\n  isFunction,\r\n  extend,\r\n  isString,\r\n  isObject,\r\n  isArray,\r\n  NOOP,\r\n  isPromise,\r\n  LooseRequired,\r\n  UnionToIntersection\r\n} from '@vue/shared'\r\nimport { isRef, Ref } from '@vue/reactivity'\r\nimport { computed } from './apiComputed'\r\nimport {\r\n  watch,\r\n  WatchOptions,\r\n  WatchCallback,\r\n  createPathGetter\r\n} from './apiWatch'\r\nimport { provide, inject } from './apiInject'\r\nimport {\r\n  onBeforeMount,\r\n  onMounted,\r\n  onBeforeUpdate,\r\n  onUpdated,\r\n  onErrorCaptured,\r\n  onRenderTracked,\r\n  onBeforeUnmount,\r\n  onUnmounted,\r\n  onActivated,\r\n  onDeactivated,\r\n  onRenderTriggered,\r\n  DebuggerHook,\r\n  ErrorCapturedHook,\r\n  onServerPrefetch\r\n} from './apiLifecycle'\r\nimport {\r\n  reactive,\r\n  ComputedGetter,\r\n  WritableComputedOptions\r\n} from '@vue/reactivity'\r\nimport {\r\n  ComponentObjectPropsOptions,\r\n  ExtractPropTypes,\r\n  ExtractDefaultPropTypes\r\n} from './componentProps'\r\nimport { EmitsOptions, EmitsToProps } from './componentEmits'\r\nimport { Directive } from './directives'\r\nimport {\r\n  CreateComponentPublicInstance,\r\n  ComponentPublicInstance,\r\n  isReservedPrefix\r\n} from './componentPublicInstance'\r\nimport { warn } from './warning'\r\nimport { VNodeChild } from './vnode'\r\nimport { callWithAsyncErrorHandling } from './errorHandling'\r\nimport { deepMergeData } from './compat/data'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport {\r\n  CompatConfig,\r\n  isCompatEnabled,\r\n  softAssertCompatEnabled\r\n} from './compat/compatConfig'\r\nimport { OptionMergeFunction } from './apiCreateApp'\r\n\r\n/**\r\n * Interface for declaring custom options.\r\n *\r\n * @example\r\n * ```ts\r\n * declare module '@vue/runtime-core' {\r\n *   interface ComponentCustomOptions {\r\n *     beforeRouteUpdate?(\r\n *       to: Route,\r\n *       from: Route,\r\n *       next: () => void\r\n *     ): void\r\n *   }\r\n * }\r\n * ```\r\n */\r\nexport interface ComponentCustomOptions {}\r\n\r\nexport type RenderFunction = () => VNodeChild\r\n\r\ntype ExtractOptionProp<T> = T extends ComponentOptionsBase<\r\n  infer P, // Props\r\n  any, // RawBindings\r\n  any, // D\r\n  any, // C\r\n  any, // M\r\n  any, // Mixin\r\n  any, // Extends\r\n  any // EmitsOptions\r\n>\r\n  ? unknown extends P\r\n    ? {}\r\n    : P\r\n  : {}\r\n\r\nexport interface ComponentOptionsBase<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions,\r\n  M extends MethodOptions,\r\n  Mixin extends ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin,\r\n  E extends EmitsOptions,\r\n  EE extends string = string,\r\n  Defaults = {}\r\n> extends LegacyOptions<Props, D, C, M, Mixin, Extends>,\r\n    ComponentInternalOptions,\r\n    ComponentCustomOptions {\r\n  setup?: (\r\n    this: void,\r\n    props: Readonly<\r\n      LooseRequired<\r\n        Props &\r\n          UnionToIntersection<ExtractOptionProp<Mixin>> &\r\n          UnionToIntersection<ExtractOptionProp<Extends>>\r\n      >\r\n    >,\r\n    ctx: SetupContext<E>\r\n  ) => Promise<RawBindings> | RawBindings | RenderFunction | void\r\n  name?: string\r\n  template?: string | object // can be a direct DOM node\r\n  // Note: we are intentionally using the signature-less `Function` type here\r\n  // since any type with signature will cause the whole inference to fail when\r\n  // the return expression contains reference to `this`.\r\n  // Luckily `render()` doesn't need any arguments nor does it care about return\r\n  // type.\r\n  render?: Function\r\n  components?: Record<string, Component>\r\n  directives?: Record<string, Directive>\r\n  inheritAttrs?: boolean\r\n  emits?: (E | EE[]) & ThisType<void>\r\n  // TODO infer public instance type based on exposed keys\r\n  expose?: string[]\r\n  serverPrefetch?(): Promise<any>\r\n\r\n  // Runtime compiler only -----------------------------------------------------\r\n  compilerOptions?: RuntimeCompilerOptions\r\n\r\n  // Internal ------------------------------------------------------------------\r\n\r\n  /**\r\n   * SSR only. This is produced by compiler-ssr and attached in compiler-sfc\r\n   * not user facing, so the typing is lax and for test only.\r\n   * @internal\r\n   */\r\n  ssrRender?: (\r\n    ctx: any,\r\n    push: (item: any) => void,\r\n    parentInstance: ComponentInternalInstance,\r\n    attrs: Data | undefined,\r\n    // for compiler-optimized bindings\r\n    $props: ComponentInternalInstance['props'],\r\n    $setup: ComponentInternalInstance['setupState'],\r\n    $data: ComponentInternalInstance['data'],\r\n    $options: ComponentInternalInstance['ctx']\r\n  ) => void\r\n\r\n  /**\r\n   * Only generated by compiler-sfc to mark a ssr render function inlined and\r\n   * returned from setup()\r\n   * @internal\r\n   */\r\n  __ssrInlineRender?: boolean\r\n\r\n  /**\r\n   * marker for AsyncComponentWrapper\r\n   * @internal\r\n   */\r\n  __asyncLoader?: () => Promise<ConcreteComponent>\r\n  /**\r\n   * the inner component resolved by the AsyncComponentWrapper\r\n   * @internal\r\n   */\r\n  __asyncResolved?: ConcreteComponent\r\n\r\n  // Type differentiators ------------------------------------------------------\r\n\r\n  // Note these are internal but need to be exposed in d.ts for type inference\r\n  // to work!\r\n\r\n  // type-only differentiator to separate OptionWithoutProps from a constructor\r\n  // type returned by defineComponent() or FunctionalComponent\r\n  call?: (this: unknown, ...args: unknown[]) => never\r\n  // type-only differentiators for built-in Vnode types\r\n  __isFragment?: never\r\n  __isTeleport?: never\r\n  __isSuspense?: never\r\n\r\n  __defaults?: Defaults\r\n}\r\n\r\n/**\r\n * Subset of compiler options that makes sense for the runtime.\r\n */\r\nexport interface RuntimeCompilerOptions {\r\n  isCustomElement?: (tag: string) => boolean\r\n  whitespace?: 'preserve' | 'condense'\r\n  comments?: boolean\r\n  delimiters?: [string, string]\r\n}\r\n\r\nexport type ComponentOptionsWithoutProps<\r\n  Props = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  PE = Props & EmitsToProps<E>\r\n> = ComponentOptionsBase<\r\n  PE,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  {}\r\n> & {\r\n  props?: undefined\r\n} & ThisType<\r\n    CreateComponentPublicInstance<PE, RawBindings, D, C, M, Mixin, Extends, E>\r\n  >\r\n\r\nexport type ComponentOptionsWithArrayProps<\r\n  PropNames extends string = string,\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  Props = Readonly<{ [key in PropNames]?: any }> & EmitsToProps<E>\r\n> = ComponentOptionsBase<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  {}\r\n> & {\r\n  props: PropNames[]\r\n} & ThisType<\r\n    CreateComponentPublicInstance<\r\n      Props,\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E\r\n    >\r\n  >\r\n\r\nexport type ComponentOptionsWithObjectProps<\r\n  PropsOptions = ComponentObjectPropsOptions,\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  Props = Readonly<ExtractPropTypes<PropsOptions>> & EmitsToProps<E>,\r\n  Defaults = ExtractDefaultPropTypes<PropsOptions>\r\n> = ComponentOptionsBase<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  Defaults\r\n> & {\r\n  props: PropsOptions & ThisType<void>\r\n} & ThisType<\r\n    CreateComponentPublicInstance<\r\n      Props,\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E,\r\n      Props,\r\n      Defaults,\r\n      false\r\n    >\r\n  >\r\n\r\nexport type ComponentOptions<\r\n  Props = {},\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = any,\r\n  M extends MethodOptions = any,\r\n  Mixin extends ComponentOptionsMixin = any,\r\n  Extends extends ComponentOptionsMixin = any,\r\n  E extends EmitsOptions = any\r\n> = ComponentOptionsBase<Props, RawBindings, D, C, M, Mixin, Extends, E> &\r\n  ThisType<\r\n    CreateComponentPublicInstance<\r\n      {},\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E,\r\n      Readonly<Props>\r\n    >\r\n  >\r\n\r\nexport type ComponentOptionsMixin = ComponentOptionsBase<\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any\r\n>\r\n\r\nexport type ComputedOptions = Record<\r\n  string,\r\n  ComputedGetter<any> | WritableComputedOptions<any>\r\n>\r\n\r\nexport interface MethodOptions {\r\n  [key: string]: Function\r\n}\r\n\r\nexport type ExtractComputedReturns<T extends any> = {\r\n  [key in keyof T]: T[key] extends { get: (...args: any[]) => infer TReturn }\r\n    ? TReturn\r\n    : T[key] extends (...args: any[]) => infer TReturn\r\n    ? TReturn\r\n    : never\r\n}\r\n\r\nexport type ObjectWatchOptionItem = {\r\n  handler: WatchCallback | string\r\n} & WatchOptions\r\n\r\ntype WatchOptionItem = string | WatchCallback | ObjectWatchOptionItem\r\n\r\ntype ComponentWatchOptionItem = WatchOptionItem | WatchOptionItem[]\r\n\r\ntype ComponentWatchOptions = Record<string, ComponentWatchOptionItem>\r\n\r\nexport type ComponentProvideOptions = ObjectProvideOptions | Function\r\n\r\ntype ObjectProvideOptions = Record<string | symbol, unknown>\r\n\r\ntype ComponentInjectOptions = string[] | ObjectInjectOptions\r\n\r\ntype ObjectInjectOptions = Record<\r\n  string | symbol,\r\n  string | symbol | { from?: string | symbol; default?: unknown }\r\n>\r\n\r\ninterface LegacyOptions<\r\n  Props,\r\n  D,\r\n  C extends ComputedOptions,\r\n  M extends MethodOptions,\r\n  Mixin extends ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin\r\n> {\r\n  compatConfig?: CompatConfig\r\n\r\n  // allow any custom options\r\n  [key: string]: any\r\n\r\n  // state\r\n  // Limitation: we cannot expose RawBindings on the `this` context for data\r\n  // since that leads to some sort of circular inference and breaks ThisType\r\n  // for the entire component.\r\n  data?: (\r\n    this: CreateComponentPublicInstance<\r\n      Props,\r\n      {},\r\n      {},\r\n      {},\r\n      MethodOptions,\r\n      Mixin,\r\n      Extends\r\n    >,\r\n    vm: CreateComponentPublicInstance<\r\n      Props,\r\n      {},\r\n      {},\r\n      {},\r\n      MethodOptions,\r\n      Mixin,\r\n      Extends\r\n    >\r\n  ) => D\r\n  computed?: C\r\n  methods?: M\r\n  watch?: ComponentWatchOptions\r\n  provide?: ComponentProvideOptions\r\n  inject?: ComponentInjectOptions\r\n\r\n  // assets\r\n  filters?: Record<string, Function>\r\n\r\n  // composition\r\n  mixins?: Mixin[]\r\n  extends?: Extends\r\n\r\n  // lifecycle\r\n  beforeCreate?(): void\r\n  created?(): void\r\n  beforeMount?(): void\r\n  mounted?(): void\r\n  beforeUpdate?(): void\r\n  updated?(): void\r\n  activated?(): void\r\n  deactivated?(): void\r\n  /** @deprecated use `beforeUnmount` instead */\r\n  beforeDestroy?(): void\r\n  beforeUnmount?(): void\r\n  /** @deprecated use `unmounted` instead */\r\n  destroyed?(): void\r\n  unmounted?(): void\r\n  renderTracked?: DebuggerHook\r\n  renderTriggered?: DebuggerHook\r\n  errorCaptured?: ErrorCapturedHook\r\n\r\n  /**\r\n   * runtime compile only\r\n   * @deprecated use `compilerOptions.delimiters` instead.\r\n   */\r\n  delimiters?: [string, string]\r\n\r\n  /**\r\n   * #3468\r\n   *\r\n   * type-only, used to assist Mixin's type inference,\r\n   * typescript will try to simplify the inferred `Mixin` type,\r\n   * with the `__differentiator`, typescript won't be able to combine different mixins,\r\n   * because the `__differentiator` will be different\r\n   */\r\n  __differentiator?: keyof D | keyof C | keyof M\r\n}\r\n\r\ntype MergedHook<T = () => void> = T | T[]\r\n\r\nexport type MergedComponentOptions = ComponentOptions &\r\n  MergedComponentOptionsOverride\r\n\r\nexport type MergedComponentOptionsOverride = {\r\n  beforeCreate?: MergedHook\r\n  created?: MergedHook\r\n  beforeMount?: MergedHook\r\n  mounted?: MergedHook\r\n  beforeUpdate?: MergedHook\r\n  updated?: MergedHook\r\n  activated?: MergedHook\r\n  deactivated?: MergedHook\r\n  /** @deprecated use `beforeUnmount` instead */\r\n  beforeDestroy?: MergedHook\r\n  beforeUnmount?: MergedHook\r\n  /** @deprecated use `unmounted` instead */\r\n  destroyed?: MergedHook\r\n  unmounted?: MergedHook\r\n  renderTracked?: MergedHook<DebuggerHook>\r\n  renderTriggered?: MergedHook<DebuggerHook>\r\n  errorCaptured?: MergedHook<ErrorCapturedHook>\r\n}\r\n\r\nexport type OptionTypesKeys = 'P' | 'B' | 'D' | 'C' | 'M' | 'Defaults'\r\n\r\nexport type OptionTypesType<\r\n  P = {},\r\n  B = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Defaults = {}\r\n> = {\r\n  P: P\r\n  B: B\r\n  D: D\r\n  C: C\r\n  M: M\r\n  Defaults: Defaults\r\n}\r\n\r\nconst enum OptionTypes {\r\n  PROPS = 'Props',\r\n  DATA = 'Data',\r\n  COMPUTED = 'Computed',\r\n  METHODS = 'Methods',\r\n  INJECT = 'Inject'\r\n}\r\n\r\nfunction createDuplicateChecker() {\r\n  const cache = Object.create(null)\r\n  return (type: OptionTypes, key: string) => {\r\n    if (cache[key]) {\r\n      warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`)\r\n    } else {\r\n      cache[key] = type\r\n    }\r\n  }\r\n}\r\n\r\nexport let shouldCacheAccess = true\r\n\r\nexport function applyOptions(instance: ComponentInternalInstance) {\r\n  const options = resolveMergedOptions(instance)\r\n  const publicThis = instance.proxy! as any\r\n  const ctx = instance.ctx\r\n\r\n  // do not cache property access on public proxy during state initialization\r\n  shouldCacheAccess = false\r\n\r\n  // call beforeCreate first before accessing other options since\r\n  // the hook may mutate resolved options (#2791)\r\n  if (options.beforeCreate) {\r\n    callHook(options.beforeCreate, instance, LifecycleHooks.BEFORE_CREATE)\r\n  }\r\n\r\n  const {\r\n    // state\r\n    data: dataOptions,\r\n    computed: computedOptions,\r\n    methods,\r\n    watch: watchOptions,\r\n    provide: provideOptions,\r\n    inject: injectOptions,\r\n    // lifecycle\r\n    created,\r\n    beforeMount,\r\n    mounted,\r\n    beforeUpdate,\r\n    updated,\r\n    activated,\r\n    deactivated,\r\n    beforeDestroy,\r\n    beforeUnmount,\r\n    destroyed,\r\n    unmounted,\r\n    render,\r\n    renderTracked,\r\n    renderTriggered,\r\n    errorCaptured,\r\n    serverPrefetch,\r\n    // public API\r\n    expose,\r\n    inheritAttrs,\r\n    // assets\r\n    components,\r\n    directives,\r\n    filters\r\n  } = options\r\n\r\n  const checkDuplicateProperties = __DEV__ ? createDuplicateChecker() : null\r\n\r\n  if (__DEV__) {\r\n    const [propsOptions] = instance.propsOptions\r\n    if (propsOptions) {\r\n      for (const key in propsOptions) {\r\n        checkDuplicateProperties!(OptionTypes.PROPS, key)\r\n      }\r\n    }\r\n  }\r\n\r\n  // options initialization order (to be consistent with Vue 2):\r\n  // - props (already done outside of this function)\r\n  // - inject\r\n  // - methods\r\n  // - data (deferred since it relies on `this` access)\r\n  // - computed\r\n  // - watch (deferred since it relies on `this` access)\r\n\r\n  if (injectOptions) {\r\n    resolveInjections(\r\n      injectOptions,\r\n      ctx,\r\n      checkDuplicateProperties,\r\n      instance.appContext.config.unwrapInjectedRef\r\n    )\r\n  }\r\n\r\n  if (methods) {\r\n    for (const key in methods) {\r\n      const methodHandler = (methods as MethodOptions)[key]\r\n      if (isFunction(methodHandler)) {\r\n        // In dev mode, we use the `createRenderContext` function to define\r\n        // methods to the proxy target, and those are read-only but\r\n        // reconfigurable, so it needs to be redefined here\r\n        if (__DEV__) {\r\n          Object.defineProperty(ctx, key, {\r\n            value: methodHandler.bind(publicThis),\r\n            configurable: true,\r\n            enumerable: true,\r\n            writable: true\r\n          })\r\n        } else {\r\n          ctx[key] = methodHandler.bind(publicThis)\r\n        }\r\n        if (__DEV__) {\r\n          checkDuplicateProperties!(OptionTypes.METHODS, key)\r\n        }\r\n      } else if (__DEV__) {\r\n        warn(\r\n          `Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n            `Did you reference the function correctly?`\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  if (dataOptions) {\r\n    if (__DEV__ && !isFunction(dataOptions)) {\r\n      warn(\r\n        `The data option must be a function. ` +\r\n          `Plain object usage is no longer supported.`\r\n      )\r\n    }\r\n    const data = dataOptions.call(publicThis, publicThis)\r\n    if (__DEV__ && isPromise(data)) {\r\n      warn(\r\n        `data() returned a Promise - note data() cannot be async; If you ` +\r\n          `intend to perform data fetching before component renders, use ` +\r\n          `async setup() + <Suspense>.`\r\n      )\r\n    }\r\n    if (!isObject(data)) {\r\n      __DEV__ && warn(`data() should return an object.`)\r\n    } else {\r\n      instance.data = reactive(data)\r\n      if (__DEV__) {\r\n        for (const key in data) {\r\n          checkDuplicateProperties!(OptionTypes.DATA, key)\r\n          // expose data on ctx during dev\r\n          if (!isReservedPrefix(key[0])) {\r\n            Object.defineProperty(ctx, key, {\r\n              configurable: true,\r\n              enumerable: true,\r\n              get: () => data[key],\r\n              set: NOOP\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // state initialization complete at this point - start caching access\r\n  shouldCacheAccess = true\r\n\r\n  if (computedOptions) {\r\n    for (const key in computedOptions) {\r\n      const opt = (computedOptions as ComputedOptions)[key]\r\n      const get = isFunction(opt)\r\n        ? opt.bind(publicThis, publicThis)\r\n        : isFunction(opt.get)\r\n        ? opt.get.bind(publicThis, publicThis)\r\n        : NOOP\r\n      if (__DEV__ && get === NOOP) {\r\n        warn(`Computed property \"${key}\" has no getter.`)\r\n      }\r\n      const set =\r\n        !isFunction(opt) && isFunction(opt.set)\r\n          ? opt.set.bind(publicThis)\r\n          : __DEV__\r\n          ? () => {\r\n              warn(\r\n                `Write operation failed: computed property \"${key}\" is readonly.`\r\n              )\r\n            }\r\n          : NOOP\r\n      const c = computed({\r\n        get,\r\n        set\r\n      })\r\n      Object.defineProperty(ctx, key, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get: () => c.value,\r\n        set: v => (c.value = v)\r\n      })\r\n      if (__DEV__) {\r\n        checkDuplicateProperties!(OptionTypes.COMPUTED, key)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (watchOptions) {\r\n    for (const key in watchOptions) {\r\n      createWatcher(watchOptions[key], ctx, publicThis, key)\r\n    }\r\n  }\r\n\r\n  if (provideOptions) {\r\n    const provides = isFunction(provideOptions)\r\n      ? provideOptions.call(publicThis)\r\n      : provideOptions\r\n    Reflect.ownKeys(provides).forEach(key => {\r\n      provide(key, provides[key])\r\n    })\r\n  }\r\n\r\n  if (created) {\r\n    callHook(created, instance, LifecycleHooks.CREATED)\r\n  }\r\n\r\n  function registerLifecycleHook(\r\n    register: Function,\r\n    hook?: Function | Function[]\r\n  ) {\r\n    if (isArray(hook)) {\r\n      hook.forEach(_hook => register(_hook.bind(publicThis)))\r\n    } else if (hook) {\r\n      register((hook as Function).bind(publicThis))\r\n    }\r\n  }\r\n\r\n  registerLifecycleHook(onBeforeMount, beforeMount)\r\n  registerLifecycleHook(onMounted, mounted)\r\n  registerLifecycleHook(onBeforeUpdate, beforeUpdate)\r\n  registerLifecycleHook(onUpdated, updated)\r\n  registerLifecycleHook(onActivated, activated)\r\n  registerLifecycleHook(onDeactivated, deactivated)\r\n  registerLifecycleHook(onErrorCaptured, errorCaptured)\r\n  registerLifecycleHook(onRenderTracked, renderTracked)\r\n  registerLifecycleHook(onRenderTriggered, renderTriggered)\r\n  registerLifecycleHook(onBeforeUnmount, beforeUnmount)\r\n  registerLifecycleHook(onUnmounted, unmounted)\r\n  registerLifecycleHook(onServerPrefetch, serverPrefetch)\r\n\r\n  if (__COMPAT__) {\r\n    if (\r\n      beforeDestroy &&\r\n      softAssertCompatEnabled(DeprecationTypes.OPTIONS_BEFORE_DESTROY, instance)\r\n    ) {\r\n      registerLifecycleHook(onBeforeUnmount, beforeDestroy)\r\n    }\r\n    if (\r\n      destroyed &&\r\n      softAssertCompatEnabled(DeprecationTypes.OPTIONS_DESTROYED, instance)\r\n    ) {\r\n      registerLifecycleHook(onUnmounted, destroyed)\r\n    }\r\n  }\r\n\r\n  if (isArray(expose)) {\r\n    if (expose.length) {\r\n      const exposed = instance.exposed || (instance.exposed = {})\r\n      expose.forEach(key => {\r\n        Object.defineProperty(exposed, key, {\r\n          get: () => publicThis[key],\r\n          set: val => (publicThis[key] = val)\r\n        })\r\n      })\r\n    } else if (!instance.exposed) {\r\n      instance.exposed = {}\r\n    }\r\n  }\r\n\r\n  // options that are handled when creating the instance but also need to be\r\n  // applied from mixins\r\n  if (render && instance.render === NOOP) {\r\n    instance.render = render as InternalRenderFunction\r\n  }\r\n  if (inheritAttrs != null) {\r\n    instance.inheritAttrs = inheritAttrs\r\n  }\r\n\r\n  // asset options.\r\n  if (components) instance.components = components as any\r\n  if (directives) instance.directives = directives\r\n  if (\r\n    __COMPAT__ &&\r\n    filters &&\r\n    isCompatEnabled(DeprecationTypes.FILTERS, instance)\r\n  ) {\r\n    instance.filters = filters\r\n  }\r\n}\r\n\r\nexport function resolveInjections(\r\n  injectOptions: ComponentInjectOptions,\r\n  ctx: any,\r\n  checkDuplicateProperties = NOOP as any,\r\n  unwrapRef = false\r\n) {\r\n  if (isArray(injectOptions)) {\r\n    injectOptions = normalizeInject(injectOptions)!\r\n  }\r\n  for (const key in injectOptions) {\r\n    const opt = (injectOptions as ObjectInjectOptions)[key]\r\n    let injected: unknown\r\n    if (isObject(opt)) {\r\n      if ('default' in opt) {\r\n        injected = inject(\r\n          opt.from || key,\r\n          opt.default,\r\n          true /* treat default function as factory */\r\n        )\r\n      } else {\r\n        injected = inject(opt.from || key)\r\n      }\r\n    } else {\r\n      injected = inject(opt)\r\n    }\r\n    if (isRef(injected)) {\r\n      // TODO remove the check in 3.3\r\n      if (unwrapRef) {\r\n        Object.defineProperty(ctx, key, {\r\n          enumerable: true,\r\n          configurable: true,\r\n          get: () => (injected as Ref).value,\r\n          set: v => ((injected as Ref).value = v)\r\n        })\r\n      } else {\r\n        if (__DEV__) {\r\n          warn(\r\n            `injected property \"${key}\" is a ref and will be auto-unwrapped ` +\r\n              `and no longer needs \\`.value\\` in the next minor release. ` +\r\n              `To opt-in to the new behavior now, ` +\r\n              `set \\`app.config.unwrapInjectedRef = true\\` (this config is ` +\r\n              `temporary and will not be needed in the future.)`\r\n          )\r\n        }\r\n        ctx[key] = injected\r\n      }\r\n    } else {\r\n      ctx[key] = injected\r\n    }\r\n    if (__DEV__) {\r\n      checkDuplicateProperties!(OptionTypes.INJECT, key)\r\n    }\r\n  }\r\n}\r\n\r\nfunction callHook(\r\n  hook: Function,\r\n  instance: ComponentInternalInstance,\r\n  type: LifecycleHooks\r\n) {\r\n  callWithAsyncErrorHandling(\r\n    isArray(hook)\r\n      ? hook.map(h => h.bind(instance.proxy!))\r\n      : hook.bind(instance.proxy!),\r\n    instance,\r\n    type\r\n  )\r\n}\r\n\r\nexport function createWatcher(\r\n  raw: ComponentWatchOptionItem,\r\n  ctx: Data,\r\n  publicThis: ComponentPublicInstance,\r\n  key: string\r\n) {\r\n  const getter = key.includes('.')\r\n    ? createPathGetter(publicThis, key)\r\n    : () => (publicThis as any)[key]\r\n  if (isString(raw)) {\r\n    const handler = ctx[raw]\r\n    if (isFunction(handler)) {\r\n      watch(getter, handler as WatchCallback)\r\n    } else if (__DEV__) {\r\n      warn(`Invalid watch handler specified by key \"${raw}\"`, handler)\r\n    }\r\n  } else if (isFunction(raw)) {\r\n    watch(getter, raw.bind(publicThis))\r\n  } else if (isObject(raw)) {\r\n    if (isArray(raw)) {\r\n      raw.forEach(r => createWatcher(r, ctx, publicThis, key))\r\n    } else {\r\n      const handler = isFunction(raw.handler)\r\n        ? raw.handler.bind(publicThis)\r\n        : (ctx[raw.handler] as WatchCallback)\r\n      if (isFunction(handler)) {\r\n        watch(getter, handler, raw)\r\n      } else if (__DEV__) {\r\n        warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler)\r\n      }\r\n    }\r\n  } else if (__DEV__) {\r\n    warn(`Invalid watch option: \"${key}\"`, raw)\r\n  }\r\n}\r\n\r\n/**\r\n * Resolve merged options and cache it on the component.\r\n * This is done only once per-component since the merging does not involve\r\n * instances.\r\n */\r\nexport function resolveMergedOptions(\r\n  instance: ComponentInternalInstance\r\n): MergedComponentOptions {\r\n  const base = instance.type as ComponentOptions\r\n  const { mixins, extends: extendsOptions } = base\r\n  const {\r\n    mixins: globalMixins,\r\n    optionsCache: cache,\r\n    config: { optionMergeStrategies }\r\n  } = instance.appContext\r\n  const cached = cache.get(base)\r\n\r\n  let resolved: MergedComponentOptions\r\n\r\n  if (cached) {\r\n    resolved = cached\r\n  } else if (!globalMixins.length && !mixins && !extendsOptions) {\r\n    if (\r\n      __COMPAT__ &&\r\n      isCompatEnabled(DeprecationTypes.PRIVATE_APIS, instance)\r\n    ) {\r\n      resolved = extend({}, base) as MergedComponentOptions\r\n      resolved.parent = instance.parent && instance.parent.proxy\r\n      resolved.propsData = instance.vnode.props\r\n    } else {\r\n      resolved = base as MergedComponentOptions\r\n    }\r\n  } else {\r\n    resolved = {}\r\n    if (globalMixins.length) {\r\n      globalMixins.forEach(m =>\r\n        mergeOptions(resolved, m, optionMergeStrategies, true)\r\n      )\r\n    }\r\n    mergeOptions(resolved, base, optionMergeStrategies)\r\n  }\r\n\r\n  cache.set(base, resolved)\r\n  return resolved\r\n}\r\n\r\nexport function mergeOptions(\r\n  to: any,\r\n  from: any,\r\n  strats: Record<string, OptionMergeFunction>,\r\n  asMixin = false\r\n) {\r\n  if (__COMPAT__ && isFunction(from)) {\r\n    from = from.options\r\n  }\r\n\r\n  const { mixins, extends: extendsOptions } = from\r\n\r\n  if (extendsOptions) {\r\n    mergeOptions(to, extendsOptions, strats, true)\r\n  }\r\n  if (mixins) {\r\n    mixins.forEach((m: ComponentOptionsMixin) =>\r\n      mergeOptions(to, m, strats, true)\r\n    )\r\n  }\r\n\r\n  for (const key in from) {\r\n    if (asMixin && key === 'expose') {\r\n      __DEV__ &&\r\n        warn(\r\n          `\"expose\" option is ignored when declared in mixins or extends. ` +\r\n            `It should only be declared in the base component itself.`\r\n        )\r\n    } else {\r\n      const strat = internalOptionMergeStrats[key] || (strats && strats[key])\r\n      to[key] = strat ? strat(to[key], from[key]) : from[key]\r\n    }\r\n  }\r\n  return to\r\n}\r\n\r\nexport const internalOptionMergeStrats: Record<string, Function> = {\r\n  data: mergeDataFn,\r\n  props: mergeObjectOptions, // TODO\r\n  emits: mergeObjectOptions, // TODO\r\n  // objects\r\n  methods: mergeObjectOptions,\r\n  computed: mergeObjectOptions,\r\n  // lifecycle\r\n  beforeCreate: mergeAsArray,\r\n  created: mergeAsArray,\r\n  beforeMount: mergeAsArray,\r\n  mounted: mergeAsArray,\r\n  beforeUpdate: mergeAsArray,\r\n  updated: mergeAsArray,\r\n  beforeDestroy: mergeAsArray,\r\n  beforeUnmount: mergeAsArray,\r\n  destroyed: mergeAsArray,\r\n  unmounted: mergeAsArray,\r\n  activated: mergeAsArray,\r\n  deactivated: mergeAsArray,\r\n  errorCaptured: mergeAsArray,\r\n  serverPrefetch: mergeAsArray,\r\n  // assets\r\n  components: mergeObjectOptions,\r\n  directives: mergeObjectOptions,\r\n  // watch\r\n  watch: mergeWatchOptions,\r\n  // provide / inject\r\n  provide: mergeDataFn,\r\n  inject: mergeInject\r\n}\r\n\r\nif (__COMPAT__) {\r\n  internalOptionMergeStrats.filters = mergeObjectOptions\r\n}\r\n\r\nfunction mergeDataFn(to: any, from: any) {\r\n  if (!from) {\r\n    return to\r\n  }\r\n  if (!to) {\r\n    return from\r\n  }\r\n  return function mergedDataFn(this: ComponentPublicInstance) {\r\n    return (\r\n      __COMPAT__ && isCompatEnabled(DeprecationTypes.OPTIONS_DATA_MERGE, null)\r\n        ? deepMergeData\r\n        : extend\r\n    )(\r\n      isFunction(to) ? to.call(this, this) : to,\r\n      isFunction(from) ? from.call(this, this) : from\r\n    )\r\n  }\r\n}\r\n\r\nfunction mergeInject(\r\n  to: ComponentInjectOptions | undefined,\r\n  from: ComponentInjectOptions\r\n) {\r\n  return mergeObjectOptions(normalizeInject(to), normalizeInject(from))\r\n}\r\n\r\nfunction normalizeInject(\r\n  raw: ComponentInjectOptions | undefined\r\n): ObjectInjectOptions | undefined {\r\n  if (isArray(raw)) {\r\n    const res: ObjectInjectOptions = {}\r\n    for (let i = 0; i < raw.length; i++) {\r\n      res[raw[i]] = raw[i]\r\n    }\r\n    return res\r\n  }\r\n  return raw\r\n}\r\n\r\nfunction mergeAsArray<T = Function>(to: T[] | T | undefined, from: T | T[]) {\r\n  return to ? [...new Set([].concat(to as any, from as any))] : from\r\n}\r\n\r\nfunction mergeObjectOptions(to: Object | undefined, from: Object | undefined) {\r\n  return to ? extend(extend(Object.create(null), to), from) : from\r\n}\r\n\r\nfunction mergeWatchOptions(\r\n  to: ComponentWatchOptions | undefined,\r\n  from: ComponentWatchOptions | undefined\r\n) {\r\n  if (!to) return from\r\n  if (!from) return to\r\n  const merged = extend(Object.create(null), to)\r\n  for (const key in from) {\r\n    merged[key] = mergeAsArray(to[key], from[key])\r\n  }\r\n  return merged\r\n}\r\n","import {\r\n  toRaw,\r\n  shallowReactive,\r\n  trigger,\r\n  TriggerOpTypes\r\n} from '@vue/reactivity'\r\nimport {\r\n  EMPTY_OBJ,\r\n  camelize,\r\n  hyphenate,\r\n  capitalize,\r\n  isString,\r\n  isFunction,\r\n  isArray,\r\n  isObject,\r\n  hasOwn,\r\n  toRawType,\r\n  PatchFlags,\r\n  makeMap,\r\n  isReservedProp,\r\n  EMPTY_ARR,\r\n  def,\r\n  extend,\r\n  isOn,\r\n  IfAny\r\n} from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport {\r\n  Data,\r\n  ComponentInternalInstance,\r\n  ComponentOptions,\r\n  ConcreteComponent,\r\n  setCurrentInstance,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport { isEmitListener } from './componentEmits'\r\nimport { InternalObjectKey } from './vnode'\r\nimport { AppContext } from './apiCreateApp'\r\nimport { createPropsDefaultThis } from './compat/props'\r\nimport { isCompatEnabled, softAssertCompatEnabled } from './compat/compatConfig'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport { shouldSkipAttr } from './compat/attrsFallthrough'\r\n\r\nexport type ComponentPropsOptions<P = Data> =\r\n  | ComponentObjectPropsOptions<P>\r\n  | string[]\r\n\r\nexport type ComponentObjectPropsOptions<P = Data> = {\r\n  [K in keyof P]: Prop<P[K]> | null\r\n}\r\n\r\nexport type Prop<T, D = T> = PropOptions<T, D> | PropType<T>\r\n\r\ntype DefaultFactory<T> = (props: Data) => T | null | undefined\r\n\r\nexport interface PropOptions<T = any, D = T> {\r\n  type?: PropType<T> | true | null\r\n  required?: boolean\r\n  default?: D | DefaultFactory<D> | null | undefined | object\r\n  validator?(value: unknown): boolean\r\n}\r\n\r\nexport type PropType<T> = PropConstructor<T> | PropConstructor<T>[]\r\n\r\ntype PropConstructor<T = any> =\r\n  | { new (...args: any[]): T & {} }\r\n  | { (): T }\r\n  | PropMethod<T>\r\n\r\ntype PropMethod<T, TConstructor = any> = [T] extends [\r\n  ((...args: any) => any) | undefined\r\n] // if is function with args, allowing non-required functions\r\n  ? { new (): TConstructor; (): T; readonly prototype: TConstructor } // Create Function like constructor\r\n  : never\r\n\r\ntype RequiredKeys<T> = {\r\n  [K in keyof T]: T[K] extends\r\n    | { required: true }\r\n    | { default: any }\r\n    // don't mark Boolean props as undefined\r\n    | BooleanConstructor\r\n    | { type: BooleanConstructor }\r\n    ? T[K] extends { default: undefined | (() => undefined) }\r\n      ? never\r\n      : K\r\n    : never\r\n}[keyof T]\r\n\r\ntype OptionalKeys<T> = Exclude<keyof T, RequiredKeys<T>>\r\n\r\ntype DefaultKeys<T> = {\r\n  [K in keyof T]: T[K] extends\r\n    | { default: any }\r\n    // Boolean implicitly defaults to false\r\n    | BooleanConstructor\r\n    | { type: BooleanConstructor }\r\n    ? T[K] extends { type: BooleanConstructor; required: true } // not default if Boolean is marked as required\r\n      ? never\r\n      : K\r\n    : never\r\n}[keyof T]\r\n\r\ntype InferPropType<T> = [T] extends [null]\r\n  ? any // null & true would fail to infer\r\n  : [T] extends [{ type: null | true }]\r\n  ? any // As TS issue https://github.com/Microsoft/TypeScript/issues/14829 // somehow `ObjectConstructor` when inferred from { (): T } becomes `any` // `BooleanConstructor` when inferred from PropConstructor(with PropMethod) becomes `Boolean`\r\n  : [T] extends [ObjectConstructor | { type: ObjectConstructor }]\r\n  ? Record<string, any>\r\n  : [T] extends [BooleanConstructor | { type: BooleanConstructor }]\r\n  ? boolean\r\n  : [T] extends [DateConstructor | { type: DateConstructor }]\r\n  ? Date\r\n  : [T] extends [(infer U)[] | { type: (infer U)[] }]\r\n  ? U extends DateConstructor\r\n    ? Date | InferPropType<U>\r\n    : InferPropType<U>\r\n  : [T] extends [Prop<infer V, infer D>]\r\n  ? unknown extends V\r\n    ? IfAny<V, V, D>\r\n    : V\r\n  : T\r\n\r\nexport type ExtractPropTypes<O> = {\r\n  // use `keyof Pick<O, RequiredKeys<O>>` instead of `RequiredKeys<O>` to support IDE features\r\n  [K in keyof Pick<O, RequiredKeys<O>>]: InferPropType<O[K]>\r\n} & {\r\n  // use `keyof Pick<O, OptionalKeys<O>>` instead of `OptionalKeys<O>` to support IDE features\r\n  [K in keyof Pick<O, OptionalKeys<O>>]?: InferPropType<O[K]>\r\n}\r\n\r\nconst enum BooleanFlags {\r\n  shouldCast,\r\n  shouldCastTrue\r\n}\r\n\r\n// extract props which defined with default from prop options\r\nexport type ExtractDefaultPropTypes<O> = O extends object\r\n  ? // use `keyof Pick<O, DefaultKeys<O>>` instead of `DefaultKeys<O>` to support IDE features\r\n    { [K in keyof Pick<O, DefaultKeys<O>>]: InferPropType<O[K]> }\r\n  : {}\r\n\r\ntype NormalizedProp =\r\n  | null\r\n  | (PropOptions & {\r\n      [BooleanFlags.shouldCast]?: boolean\r\n      [BooleanFlags.shouldCastTrue]?: boolean\r\n    })\r\n\r\n// normalized value is a tuple of the actual normalized options\r\n// and an array of prop keys that need value casting (booleans and defaults)\r\nexport type NormalizedProps = Record<string, NormalizedProp>\r\nexport type NormalizedPropsOptions = [NormalizedProps, string[]] | []\r\n\r\nexport function initProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  isStateful: number, // result of bitwise flag comparison\r\n  isSSR = false\r\n) {\r\n  const props: Data = {}\r\n  const attrs: Data = {}\r\n  def(attrs, InternalObjectKey, 1)\r\n\r\n  instance.propsDefaults = Object.create(null)\r\n\r\n  setFullProps(instance, rawProps, props, attrs)\r\n\r\n  // ensure all declared prop keys are present\r\n  for (const key in instance.propsOptions[0]) {\r\n    if (!(key in props)) {\r\n      props[key] = undefined\r\n    }\r\n  }\r\n\r\n  // validation\r\n  if (__DEV__) {\r\n    validateProps(rawProps || {}, props, instance)\r\n  }\r\n\r\n  if (isStateful) {\r\n    // stateful\r\n    instance.props = isSSR ? props : shallowReactive(props)\r\n  } else {\r\n    if (!instance.type.props) {\r\n      // functional w/ optional props, props === attrs\r\n      instance.props = attrs\r\n    } else {\r\n      // functional w/ declared props\r\n      instance.props = props\r\n    }\r\n  }\r\n  instance.attrs = attrs\r\n}\r\n\r\nexport function updateProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  rawPrevProps: Data | null,\r\n  optimized: boolean\r\n) {\r\n  const {\r\n    props,\r\n    attrs,\r\n    vnode: { patchFlag }\r\n  } = instance\r\n  const rawCurrentProps = toRaw(props)\r\n  const [options] = instance.propsOptions\r\n  let hasAttrsChanged = false\r\n\r\n  if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !(\r\n      __DEV__ &&\r\n      (instance.type.__hmrId ||\r\n        (instance.parent && instance.parent.type.__hmrId))\r\n    ) &&\r\n    (optimized || patchFlag > 0) &&\r\n    !(patchFlag & PatchFlags.FULL_PROPS)\r\n  ) {\r\n    if (patchFlag & PatchFlags.PROPS) {\r\n      // Compiler-generated props & no keys change, just set the updated\r\n      // the props.\r\n      const propsToUpdate = instance.vnode.dynamicProps!\r\n      for (let i = 0; i < propsToUpdate.length; i++) {\r\n        let key = propsToUpdate[i]\r\n        // skip if the prop key is a declared emit event listener\r\n        if (isEmitListener(instance.emitsOptions, key)) {\r\n          continue\r\n        }\r\n        // PROPS flag guarantees rawProps to be non-null\r\n        const value = rawProps![key]\r\n        if (options) {\r\n          // attr / props separation was done on init and will be consistent\r\n          // in this code path, so just check if attrs have it.\r\n          if (hasOwn(attrs, key)) {\r\n            if (value !== attrs[key]) {\r\n              attrs[key] = value\r\n              hasAttrsChanged = true\r\n            }\r\n          } else {\r\n            const camelizedKey = camelize(key)\r\n            props[camelizedKey] = resolvePropValue(\r\n              options,\r\n              rawCurrentProps,\r\n              camelizedKey,\r\n              value,\r\n              instance,\r\n              false /* isAbsent */\r\n            )\r\n          }\r\n        } else {\r\n          if (__COMPAT__) {\r\n            if (isOn(key) && key.endsWith('Native')) {\r\n              key = key.slice(0, -6) // remove Native postfix\r\n            } else if (shouldSkipAttr(key, instance)) {\r\n              continue\r\n            }\r\n          }\r\n          if (value !== attrs[key]) {\r\n            attrs[key] = value\r\n            hasAttrsChanged = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // full props update.\r\n    if (setFullProps(instance, rawProps, props, attrs)) {\r\n      hasAttrsChanged = true\r\n    }\r\n    // in case of dynamic props, check if we need to delete keys from\r\n    // the props object\r\n    let kebabKey: string\r\n    for (const key in rawCurrentProps) {\r\n      if (\r\n        !rawProps ||\r\n        // for camelCase\r\n        (!hasOwn(rawProps, key) &&\r\n          // it's possible the original props was passed in as kebab-case\r\n          // and converted to camelCase (#955)\r\n          ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))\r\n      ) {\r\n        if (options) {\r\n          if (\r\n            rawPrevProps &&\r\n            // for camelCase\r\n            (rawPrevProps[key] !== undefined ||\r\n              // for kebab-case\r\n              rawPrevProps[kebabKey!] !== undefined)\r\n          ) {\r\n            props[key] = resolvePropValue(\r\n              options,\r\n              rawCurrentProps,\r\n              key,\r\n              undefined,\r\n              instance,\r\n              true /* isAbsent */\r\n            )\r\n          }\r\n        } else {\r\n          delete props[key]\r\n        }\r\n      }\r\n    }\r\n    // in the case of functional component w/o props declaration, props and\r\n    // attrs point to the same object so it should already have been updated.\r\n    if (attrs !== rawCurrentProps) {\r\n      for (const key in attrs) {\r\n        if (\r\n          !rawProps ||\r\n          (!hasOwn(rawProps, key) &&\r\n            (!__COMPAT__ || !hasOwn(rawProps, key + 'Native')))\r\n        ) {\r\n          delete attrs[key]\r\n          hasAttrsChanged = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // trigger updates for $attrs in case it's used in component slots\r\n  if (hasAttrsChanged) {\r\n    trigger(instance, TriggerOpTypes.SET, '$attrs')\r\n  }\r\n\r\n  if (__DEV__) {\r\n    validateProps(rawProps || {}, props, instance)\r\n  }\r\n}\r\n\r\nfunction setFullProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  props: Data,\r\n  attrs: Data\r\n) {\r\n  const [options, needCastKeys] = instance.propsOptions\r\n  let hasAttrsChanged = false\r\n  let rawCastValues: Data | undefined\r\n  if (rawProps) {\r\n    for (let key in rawProps) {\r\n      // key, ref are reserved and never passed down\r\n      if (isReservedProp(key)) {\r\n        continue\r\n      }\r\n\r\n      if (__COMPAT__) {\r\n        if (key.startsWith('onHook:')) {\r\n          softAssertCompatEnabled(\r\n            DeprecationTypes.INSTANCE_EVENT_HOOKS,\r\n            instance,\r\n            key.slice(2).toLowerCase()\r\n          )\r\n        }\r\n        if (key === 'inline-template') {\r\n          continue\r\n        }\r\n      }\r\n\r\n      const value = rawProps[key]\r\n      // prop option names are camelized during normalization, so to support\r\n      // kebab -> camel conversion here we need to camelize the key.\r\n      let camelKey\r\n      if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n        if (!needCastKeys || !needCastKeys.includes(camelKey)) {\r\n          props[camelKey] = value\r\n        } else {\r\n          ;(rawCastValues || (rawCastValues = {}))[camelKey] = value\r\n        }\r\n      } else if (!isEmitListener(instance.emitsOptions, key)) {\r\n        // Any non-declared (either as a prop or an emitted event) props are put\r\n        // into a separate `attrs` object for spreading. Make sure to preserve\r\n        // original key casing\r\n        if (__COMPAT__) {\r\n          if (isOn(key) && key.endsWith('Native')) {\r\n            key = key.slice(0, -6) // remove Native postfix\r\n          } else if (shouldSkipAttr(key, instance)) {\r\n            continue\r\n          }\r\n        }\r\n        if (!(key in attrs) || value !== attrs[key]) {\r\n          attrs[key] = value\r\n          hasAttrsChanged = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (needCastKeys) {\r\n    const rawCurrentProps = toRaw(props)\r\n    const castValues = rawCastValues || EMPTY_OBJ\r\n    for (let i = 0; i < needCastKeys.length; i++) {\r\n      const key = needCastKeys[i]\r\n      props[key] = resolvePropValue(\r\n        options!,\r\n        rawCurrentProps,\r\n        key,\r\n        castValues[key],\r\n        instance,\r\n        !hasOwn(castValues, key)\r\n      )\r\n    }\r\n  }\r\n\r\n  return hasAttrsChanged\r\n}\r\n\r\nfunction resolvePropValue(\r\n  options: NormalizedProps,\r\n  props: Data,\r\n  key: string,\r\n  value: unknown,\r\n  instance: ComponentInternalInstance,\r\n  isAbsent: boolean\r\n) {\r\n  const opt = options[key]\r\n  if (opt != null) {\r\n    const hasDefault = hasOwn(opt, 'default')\r\n    // default values\r\n    if (hasDefault && value === undefined) {\r\n      const defaultValue = opt.default\r\n      if (opt.type !== Function && isFunction(defaultValue)) {\r\n        const { propsDefaults } = instance\r\n        if (key in propsDefaults) {\r\n          value = propsDefaults[key]\r\n        } else {\r\n          setCurrentInstance(instance)\r\n          value = propsDefaults[key] = defaultValue.call(\r\n            __COMPAT__ &&\r\n              isCompatEnabled(DeprecationTypes.PROPS_DEFAULT_THIS, instance)\r\n              ? createPropsDefaultThis(instance, props, key)\r\n              : null,\r\n            props\r\n          )\r\n          unsetCurrentInstance()\r\n        }\r\n      } else {\r\n        value = defaultValue\r\n      }\r\n    }\r\n    // boolean casting\r\n    if (opt[BooleanFlags.shouldCast]) {\r\n      if (isAbsent && !hasDefault) {\r\n        value = false\r\n      } else if (\r\n        opt[BooleanFlags.shouldCastTrue] &&\r\n        (value === '' || value === hyphenate(key))\r\n      ) {\r\n        value = true\r\n      }\r\n    }\r\n  }\r\n  return value\r\n}\r\n\r\nexport function normalizePropsOptions(\r\n  comp: ConcreteComponent,\r\n  appContext: AppContext,\r\n  asMixin = false\r\n): NormalizedPropsOptions {\r\n  const cache = appContext.propsCache\r\n  const cached = cache.get(comp)\r\n  if (cached) {\r\n    return cached\r\n  }\r\n\r\n  const raw = comp.props\r\n  const normalized: NormalizedPropsOptions[0] = {}\r\n  const needCastKeys: NormalizedPropsOptions[1] = []\r\n\r\n  // apply mixin/extends props\r\n  let hasExtends = false\r\n  if (__FEATURE_OPTIONS_API__ && !isFunction(comp)) {\r\n    const extendProps = (raw: ComponentOptions) => {\r\n      if (__COMPAT__ && isFunction(raw)) {\r\n        raw = raw.options\r\n      }\r\n      hasExtends = true\r\n      const [props, keys] = normalizePropsOptions(raw, appContext, true)\r\n      extend(normalized, props)\r\n      if (keys) needCastKeys.push(...keys)\r\n    }\r\n    if (!asMixin && appContext.mixins.length) {\r\n      appContext.mixins.forEach(extendProps)\r\n    }\r\n    if (comp.extends) {\r\n      extendProps(comp.extends)\r\n    }\r\n    if (comp.mixins) {\r\n      comp.mixins.forEach(extendProps)\r\n    }\r\n  }\r\n\r\n  if (!raw && !hasExtends) {\r\n    cache.set(comp, EMPTY_ARR as any)\r\n    return EMPTY_ARR as any\r\n  }\r\n\r\n  if (isArray(raw)) {\r\n    for (let i = 0; i < raw.length; i++) {\r\n      if (__DEV__ && !isString(raw[i])) {\r\n        warn(`props must be strings when using array syntax.`, raw[i])\r\n      }\r\n      const normalizedKey = camelize(raw[i])\r\n      if (validatePropName(normalizedKey)) {\r\n        normalized[normalizedKey] = EMPTY_OBJ\r\n      }\r\n    }\r\n  } else if (raw) {\r\n    if (__DEV__ && !isObject(raw)) {\r\n      warn(`invalid props options`, raw)\r\n    }\r\n    for (const key in raw) {\r\n      const normalizedKey = camelize(key)\r\n      if (validatePropName(normalizedKey)) {\r\n        const opt = raw[key]\r\n        const prop: NormalizedProp = (normalized[normalizedKey] =\r\n          isArray(opt) || isFunction(opt) ? { type: opt } : opt)\r\n        if (prop) {\r\n          const booleanIndex = getTypeIndex(Boolean, prop.type)\r\n          const stringIndex = getTypeIndex(String, prop.type)\r\n          prop[BooleanFlags.shouldCast] = booleanIndex > -1\r\n          prop[BooleanFlags.shouldCastTrue] =\r\n            stringIndex < 0 || booleanIndex < stringIndex\r\n          // if the prop needs boolean casting or default value\r\n          if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n            needCastKeys.push(normalizedKey)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const res: NormalizedPropsOptions = [normalized, needCastKeys]\r\n  cache.set(comp, res)\r\n  return res\r\n}\r\n\r\nfunction validatePropName(key: string) {\r\n  if (key[0] !== '$') {\r\n    return true\r\n  } else if (__DEV__) {\r\n    warn(`Invalid prop name: \"${key}\" is a reserved property.`)\r\n  }\r\n  return false\r\n}\r\n\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor: Prop<any>): string {\r\n  const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/)\r\n  return match ? match[1] : ctor === null ? 'null' : ''\r\n}\r\n\r\nfunction isSameType(a: Prop<any>, b: Prop<any>): boolean {\r\n  return getType(a) === getType(b)\r\n}\r\n\r\nfunction getTypeIndex(\r\n  type: Prop<any>,\r\n  expectedTypes: PropType<any> | void | null | true\r\n): number {\r\n  if (isArray(expectedTypes)) {\r\n    return expectedTypes.findIndex(t => isSameType(t, type))\r\n  } else if (isFunction(expectedTypes)) {\r\n    return isSameType(expectedTypes, type) ? 0 : -1\r\n  }\r\n  return -1\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(\r\n  rawProps: Data,\r\n  props: Data,\r\n  instance: ComponentInternalInstance\r\n) {\r\n  const resolvedValues = toRaw(props)\r\n  const options = instance.propsOptions[0]\r\n  for (const key in options) {\r\n    let opt = options[key]\r\n    if (opt == null) continue\r\n    validateProp(\r\n      key,\r\n      resolvedValues[key],\r\n      opt,\r\n      !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key))\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(\r\n  name: string,\r\n  value: unknown,\r\n  prop: PropOptions,\r\n  isAbsent: boolean\r\n) {\r\n  const { type, required, validator } = prop\r\n  // required!\r\n  if (required && isAbsent) {\r\n    warn('Missing required prop: \"' + name + '\"')\r\n    return\r\n  }\r\n  // missing but optional\r\n  if (value == null && !prop.required) {\r\n    return\r\n  }\r\n  // type check\r\n  if (type != null && type !== true) {\r\n    let isValid = false\r\n    const types = isArray(type) ? type : [type]\r\n    const expectedTypes = []\r\n    // value is valid as long as one of the specified types match\r\n    for (let i = 0; i < types.length && !isValid; i++) {\r\n      const { valid, expectedType } = assertType(value, types[i])\r\n      expectedTypes.push(expectedType || '')\r\n      isValid = valid\r\n    }\r\n    if (!isValid) {\r\n      warn(getInvalidTypeMessage(name, value, expectedTypes))\r\n      return\r\n    }\r\n  }\r\n  // custom validator\r\n  if (validator && !validator(value)) {\r\n    warn('Invalid prop: custom validator check failed for prop \"' + name + '\".')\r\n  }\r\n}\r\n\r\nconst isSimpleType = /*#__PURE__*/ makeMap(\r\n  'String,Number,Boolean,Function,Symbol,BigInt'\r\n)\r\n\r\ntype AssertionResult = {\r\n  valid: boolean\r\n  expectedType: string\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value: unknown, type: PropConstructor): AssertionResult {\r\n  let valid\r\n  const expectedType = getType(type)\r\n  if (isSimpleType(expectedType)) {\r\n    const t = typeof value\r\n    valid = t === expectedType.toLowerCase()\r\n    // for primitive wrapper objects\r\n    if (!valid && t === 'object') {\r\n      valid = value instanceof type\r\n    }\r\n  } else if (expectedType === 'Object') {\r\n    valid = isObject(value)\r\n  } else if (expectedType === 'Array') {\r\n    valid = isArray(value)\r\n  } else if (expectedType === 'null') {\r\n    valid = value === null\r\n  } else {\r\n    valid = value instanceof type\r\n  }\r\n  return {\r\n    valid,\r\n    expectedType\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(\r\n  name: string,\r\n  value: unknown,\r\n  expectedTypes: string[]\r\n): string {\r\n  let message =\r\n    `Invalid prop: type check failed for prop \"${name}\".` +\r\n    ` Expected ${expectedTypes.map(capitalize).join(' | ')}`\r\n  const expectedType = expectedTypes[0]\r\n  const receivedType = toRawType(value)\r\n  const expectedValue = styleValue(value, expectedType)\r\n  const receivedValue = styleValue(value, receivedType)\r\n  // check if we need to specify expected value\r\n  if (\r\n    expectedTypes.length === 1 &&\r\n    isExplicable(expectedType) &&\r\n    !isBoolean(expectedType, receivedType)\r\n  ) {\r\n    message += ` with value ${expectedValue}`\r\n  }\r\n  message += `, got ${receivedType} `\r\n  // check if we need to specify received value\r\n  if (isExplicable(receivedType)) {\r\n    message += `with value ${receivedValue}.`\r\n  }\r\n  return message\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value: unknown, type: string): string {\r\n  if (type === 'String') {\r\n    return `\"${value}\"`\r\n  } else if (type === 'Number') {\r\n    return `${Number(value)}`\r\n  } else {\r\n    return `${value}`\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type: string): boolean {\r\n  const explicitTypes = ['string', 'number', 'boolean']\r\n  return explicitTypes.some(elem => type.toLowerCase() === elem)\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args: string[]): boolean {\r\n  return args.some(elem => elem.toLowerCase() === 'boolean')\r\n}\r\n","import { ComponentInternalInstance, currentInstance } from './component'\r\nimport {\r\n  VNode,\r\n  VNodeNormalizedChildren,\r\n  normalizeVNode,\r\n  VNodeChild,\r\n  InternalObjectKey\r\n} from './vnode'\r\nimport {\r\n  isArray,\r\n  isFunction,\r\n  EMPTY_OBJ,\r\n  ShapeFlags,\r\n  extend,\r\n  def,\r\n  SlotFlags\r\n} from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { isKeepAlive } from './components/KeepAlive'\r\nimport { ContextualRenderFn, withCtx } from './componentRenderContext'\r\nimport { isHmrUpdating } from './hmr'\r\nimport { DeprecationTypes, isCompatEnabled } from './compat/compatConfig'\r\nimport { toRaw } from '@vue/reactivity'\r\n\r\nexport type Slot = (...args: any[]) => VNode[]\r\n\r\nexport type InternalSlots = {\r\n  [name: string]: Slot | undefined\r\n}\r\n\r\nexport type Slots = Readonly<InternalSlots>\r\n\r\nexport type RawSlots = {\r\n  [name: string]: unknown\r\n  // manual render fn hint to skip forced children updates\r\n  $stable?: boolean\r\n  /**\r\n   * for tracking slot owner instance. This is attached during\r\n   * normalizeChildren when the component vnode is created.\r\n   * @internal\r\n   */\r\n  _ctx?: ComponentInternalInstance | null\r\n  /**\r\n   * indicates compiler generated slots\r\n   * we use a reserved property instead of a vnode patchFlag because the slots\r\n   * object may be directly passed down to a child component in a manual\r\n   * render function, and the optimization hint need to be on the slot object\r\n   * itself to be preserved.\r\n   * @internal\r\n   */\r\n  _?: SlotFlags\r\n}\r\n\r\nconst isInternalKey = (key: string) => key[0] === '_' || key === '$stable'\r\n\r\nconst normalizeSlotValue = (value: unknown): VNode[] =>\r\n  isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value as VNodeChild)]\r\n\r\nconst normalizeSlot = (\r\n  key: string,\r\n  rawSlot: Function,\r\n  ctx: ComponentInternalInstance | null | undefined\r\n): Slot => {\r\n  if ((rawSlot as any)._n) {\r\n    // already normalized - #5353\r\n    return rawSlot as Slot\r\n  }\r\n  const normalized = withCtx((...args: any[]) => {\r\n    if (__DEV__ && currentInstance) {\r\n      warn(\r\n        `Slot \"${key}\" invoked outside of the render function: ` +\r\n          `this will not track dependencies used in the slot. ` +\r\n          `Invoke the slot function inside the render function instead.`\r\n      )\r\n    }\r\n    return normalizeSlotValue(rawSlot(...args))\r\n  }, ctx) as Slot\r\n  // NOT a compiled slot\r\n  ;(normalized as ContextualRenderFn)._c = false\r\n  return normalized\r\n}\r\n\r\nconst normalizeObjectSlots = (\r\n  rawSlots: RawSlots,\r\n  slots: InternalSlots,\r\n  instance: ComponentInternalInstance\r\n) => {\r\n  const ctx = rawSlots._ctx\r\n  for (const key in rawSlots) {\r\n    if (isInternalKey(key)) continue\r\n    const value = rawSlots[key]\r\n    if (isFunction(value)) {\r\n      slots[key] = normalizeSlot(key, value, ctx)\r\n    } else if (value != null) {\r\n      if (\r\n        __DEV__ &&\r\n        !(\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.RENDER_FUNCTION, instance)\r\n        )\r\n      ) {\r\n        warn(\r\n          `Non-function value encountered for slot \"${key}\". ` +\r\n            `Prefer function slots for better performance.`\r\n        )\r\n      }\r\n      const normalized = normalizeSlotValue(value)\r\n      slots[key] = () => normalized\r\n    }\r\n  }\r\n}\r\n\r\nconst normalizeVNodeSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren\r\n) => {\r\n  if (\r\n    __DEV__ &&\r\n    !isKeepAlive(instance.vnode) &&\r\n    !(__COMPAT__ && isCompatEnabled(DeprecationTypes.RENDER_FUNCTION, instance))\r\n  ) {\r\n    warn(\r\n      `Non-function value encountered for default slot. ` +\r\n        `Prefer function slots for better performance.`\r\n    )\r\n  }\r\n  const normalized = normalizeSlotValue(children)\r\n  instance.slots.default = () => normalized\r\n}\r\n\r\nexport const initSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren\r\n) => {\r\n  if (instance.vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\r\n    const type = (children as RawSlots)._\r\n    if (type) {\r\n      // users can get the shallow readonly version of the slots object through `this.$slots`,\r\n      // we should avoid the proxy object polluting the slots of the internal instance\r\n      instance.slots = toRaw(children as InternalSlots)\r\n      // make compiler marker non-enumerable\r\n      def(children as InternalSlots, '_', type)\r\n    } else {\r\n      normalizeObjectSlots(\r\n        children as RawSlots,\r\n        (instance.slots = {}),\r\n        instance\r\n      )\r\n    }\r\n  } else {\r\n    instance.slots = {}\r\n    if (children) {\r\n      normalizeVNodeSlots(instance, children)\r\n    }\r\n  }\r\n  def(instance.slots, InternalObjectKey, 1)\r\n}\r\n\r\nexport const updateSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren,\r\n  optimized: boolean\r\n) => {\r\n  const { vnode, slots } = instance\r\n  let needDeletionCheck = true\r\n  let deletionComparisonTarget = EMPTY_OBJ\r\n  if (vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\r\n    const type = (children as RawSlots)._\r\n    if (type) {\r\n      // compiled slots.\r\n      if (__DEV__ && isHmrUpdating) {\r\n        // Parent was HMR updated so slot content may have changed.\r\n        // force update slots and mark instance for hmr as well\r\n        extend(slots, children as Slots)\r\n      } else if (optimized && type === SlotFlags.STABLE) {\r\n        // compiled AND stable.\r\n        // no need to update, and skip stale slots removal.\r\n        needDeletionCheck = false\r\n      } else {\r\n        // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n        // normalization.\r\n        extend(slots, children as Slots)\r\n        // #2893\r\n        // when rendering the optimized slots by manually written render function,\r\n        // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\r\n        // i.e. let the `renderSlot` create the bailed Fragment\r\n        if (!optimized && type === SlotFlags.STABLE) {\r\n          delete slots._\r\n        }\r\n      }\r\n    } else {\r\n      needDeletionCheck = !(children as RawSlots).$stable\r\n      normalizeObjectSlots(children as RawSlots, slots, instance)\r\n    }\r\n    deletionComparisonTarget = children as RawSlots\r\n  } else if (children) {\r\n    // non slot object children (direct value) passed to a component\r\n    normalizeVNodeSlots(instance, children)\r\n    deletionComparisonTarget = { default: 1 }\r\n  }\r\n\r\n  // delete stale slots\r\n  if (needDeletionCheck) {\r\n    for (const key in slots) {\r\n      if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n        delete slots[key]\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ConcreteComponent,\r\n  Data,\r\n  validateComponentName,\r\n  Component,\r\n  ComponentInternalInstance,\r\n  getExposeProxy\r\n} from './component'\r\nimport {\r\n  ComponentOptions,\r\n  MergedComponentOptions,\r\n  RuntimeCompilerOptions\r\n} from './componentOptions'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { Directive, validateDirectiveName } from './directives'\r\nimport { RootRenderFunction } from './renderer'\r\nimport { InjectionKey } from './apiInject'\r\nimport { warn } from './warning'\r\nimport { createVNode, cloneVNode, VNode } from './vnode'\r\nimport { RootHydrateFunction } from './hydration'\r\nimport { devtoolsInitApp, devtoolsUnmountApp } from './devtools'\r\nimport { isFunction, NO, isObject } from '@vue/shared'\r\nimport { version } from '.'\r\nimport { installAppCompatProperties } from './compat/global'\r\nimport { NormalizedPropsOptions } from './componentProps'\r\nimport { ObjectEmitsOptions } from './componentEmits'\r\n\r\nexport interface App<HostElement = any> {\r\n  version: string\r\n  config: AppConfig\r\n  use(plugin: Plugin, ...options: any[]): this\r\n  mixin(mixin: ComponentOptions): this\r\n  component(name: string): Component | undefined\r\n  component(name: string, component: Component): this\r\n  directive(name: string): Directive | undefined\r\n  directive(name: string, directive: Directive): this\r\n  mount(\r\n    rootContainer: HostElement | string,\r\n    isHydrate?: boolean,\r\n    isSVG?: boolean\r\n  ): ComponentPublicInstance\r\n  unmount(): void\r\n  provide<T>(key: InjectionKey<T> | string, value: T): this\r\n\r\n  // internal, but we need to expose these for the server-renderer and devtools\r\n  _uid: number\r\n  _component: ConcreteComponent\r\n  _props: Data | null\r\n  _container: HostElement | null\r\n  _context: AppContext\r\n  _instance: ComponentInternalInstance | null\r\n\r\n  /**\r\n   * v2 compat only\r\n   */\r\n  filter?(name: string): Function | undefined\r\n  filter?(name: string, filter: Function): this\r\n\r\n  /**\r\n   * @internal v3 compat only\r\n   */\r\n  _createRoot?(options: ComponentOptions): ComponentPublicInstance\r\n}\r\n\r\nexport type OptionMergeFunction = (to: unknown, from: unknown) => any\r\n\r\nexport interface AppConfig {\r\n  // @private\r\n  readonly isNativeTag?: (tag: string) => boolean\r\n\r\n  performance: boolean\r\n  optionMergeStrategies: Record<string, OptionMergeFunction>\r\n  globalProperties: Record<string, any>\r\n  errorHandler?: (\r\n    err: unknown,\r\n    instance: ComponentPublicInstance | null,\r\n    info: string\r\n  ) => void\r\n  warnHandler?: (\r\n    msg: string,\r\n    instance: ComponentPublicInstance | null,\r\n    trace: string\r\n  ) => void\r\n\r\n  /**\r\n   * Options to pass to `@vue/compiler-dom`.\r\n   * Only supported in runtime compiler build.\r\n   */\r\n  compilerOptions: RuntimeCompilerOptions\r\n\r\n  /**\r\n   * @deprecated use config.compilerOptions.isCustomElement\r\n   */\r\n  isCustomElement?: (tag: string) => boolean\r\n\r\n  /**\r\n   * Temporary config for opt-in to unwrap injected refs.\r\n   * TODO deprecate in 3.3\r\n   */\r\n  unwrapInjectedRef?: boolean\r\n}\r\n\r\nexport interface AppContext {\r\n  app: App // for devtools\r\n  config: AppConfig\r\n  mixins: ComponentOptions[]\r\n  components: Record<string, Component>\r\n  directives: Record<string, Directive>\r\n  provides: Record<string | symbol, any>\r\n\r\n  /**\r\n   * Cache for merged/normalized component options\r\n   * Each app instance has its own cache because app-level global mixins and\r\n   * optionMergeStrategies can affect merge behavior.\r\n   * @internal\r\n   */\r\n  optionsCache: WeakMap<ComponentOptions, MergedComponentOptions>\r\n  /**\r\n   * Cache for normalized props options\r\n   * @internal\r\n   */\r\n  propsCache: WeakMap<ConcreteComponent, NormalizedPropsOptions>\r\n  /**\r\n   * Cache for normalized emits options\r\n   * @internal\r\n   */\r\n  emitsCache: WeakMap<ConcreteComponent, ObjectEmitsOptions | null>\r\n  /**\r\n   * HMR only\r\n   * @internal\r\n   */\r\n  reload?: () => void\r\n  /**\r\n   * v2 compat only\r\n   * @internal\r\n   */\r\n  filters?: Record<string, Function>\r\n}\r\n\r\ntype PluginInstallFunction = (app: App, ...options: any[]) => any\r\n\r\nexport type Plugin =\r\n  | (PluginInstallFunction & { install?: PluginInstallFunction })\r\n  | {\r\n      install: PluginInstallFunction\r\n    }\r\n\r\nexport function createAppContext(): AppContext {\r\n  return {\r\n    app: null as any,\r\n    config: {\r\n      isNativeTag: NO,\r\n      performance: false,\r\n      globalProperties: {},\r\n      optionMergeStrategies: {},\r\n      errorHandler: undefined,\r\n      warnHandler: undefined,\r\n      compilerOptions: {}\r\n    },\r\n    mixins: [],\r\n    components: {},\r\n    directives: {},\r\n    provides: Object.create(null),\r\n    optionsCache: new WeakMap(),\r\n    propsCache: new WeakMap(),\r\n    emitsCache: new WeakMap()\r\n  }\r\n}\r\n\r\nexport type CreateAppFunction<HostElement> = (\r\n  rootComponent: Component,\r\n  rootProps?: Data | null\r\n) => App<HostElement>\r\n\r\nlet uid = 0\r\n\r\nexport function createAppAPI<HostElement>(\r\n  render: RootRenderFunction,\r\n  hydrate?: RootHydrateFunction\r\n): CreateAppFunction<HostElement> {\r\n  return function createApp(rootComponent, rootProps = null) {\r\n    if (!isFunction(rootComponent)) {\r\n      rootComponent = { ...rootComponent }\r\n    }\r\n\r\n    if (rootProps != null && !isObject(rootProps)) {\r\n      __DEV__ && warn(`root props passed to app.mount() must be an object.`)\r\n      rootProps = null\r\n    }\r\n\r\n    const context = createAppContext()\r\n    const installedPlugins = new Set()\r\n\r\n    let isMounted = false\r\n\r\n    const app: App = (context.app = {\r\n      _uid: uid++,\r\n      _component: rootComponent as ConcreteComponent,\r\n      _props: rootProps,\r\n      _container: null,\r\n      _context: context,\r\n      _instance: null,\r\n\r\n      version,\r\n\r\n      get config() {\r\n        return context.config\r\n      },\r\n\r\n      set config(v) {\r\n        if (__DEV__) {\r\n          warn(\r\n            `app.config cannot be replaced. Modify individual options instead.`\r\n          )\r\n        }\r\n      },\r\n\r\n      use(plugin: Plugin, ...options: any[]) {\r\n        if (installedPlugins.has(plugin)) {\r\n          __DEV__ && warn(`Plugin has already been applied to target app.`)\r\n        } else if (plugin && isFunction(plugin.install)) {\r\n          installedPlugins.add(plugin)\r\n          plugin.install(app, ...options)\r\n        } else if (isFunction(plugin)) {\r\n          installedPlugins.add(plugin)\r\n          plugin(app, ...options)\r\n        } else if (__DEV__) {\r\n          warn(\r\n            `A plugin must either be a function or an object with an \"install\" ` +\r\n              `function.`\r\n          )\r\n        }\r\n        return app\r\n      },\r\n\r\n      mixin(mixin: ComponentOptions) {\r\n        if (__FEATURE_OPTIONS_API__) {\r\n          if (!context.mixins.includes(mixin)) {\r\n            context.mixins.push(mixin)\r\n          } else if (__DEV__) {\r\n            warn(\r\n              'Mixin has already been applied to target app' +\r\n                (mixin.name ? `: ${mixin.name}` : '')\r\n            )\r\n          }\r\n        } else if (__DEV__) {\r\n          warn('Mixins are only available in builds supporting Options API')\r\n        }\r\n        return app\r\n      },\r\n\r\n      component(name: string, component?: Component): any {\r\n        if (__DEV__) {\r\n          validateComponentName(name, context.config)\r\n        }\r\n        if (!component) {\r\n          return context.components[name]\r\n        }\r\n        if (__DEV__ && context.components[name]) {\r\n          warn(`Component \"${name}\" has already been registered in target app.`)\r\n        }\r\n        context.components[name] = component\r\n        return app\r\n      },\r\n\r\n      directive(name: string, directive?: Directive) {\r\n        if (__DEV__) {\r\n          validateDirectiveName(name)\r\n        }\r\n\r\n        if (!directive) {\r\n          return context.directives[name] as any\r\n        }\r\n        if (__DEV__ && context.directives[name]) {\r\n          warn(`Directive \"${name}\" has already been registered in target app.`)\r\n        }\r\n        context.directives[name] = directive\r\n        return app\r\n      },\r\n\r\n      mount(\r\n        rootContainer: HostElement,\r\n        isHydrate?: boolean,\r\n        isSVG?: boolean\r\n      ): any {\r\n        if (!isMounted) {\r\n          // #5571\r\n          if (__DEV__ && (rootContainer as any).__vue_app__) {\r\n            warn(\r\n              `There is already an app instance mounted on the host container.\\n` +\r\n                ` If you want to mount another app on the same host container,` +\r\n                ` you need to unmount the previous app by calling \\`app.unmount()\\` first.`\r\n            )\r\n          }\r\n          const vnode = createVNode(\r\n            rootComponent as ConcreteComponent,\r\n            rootProps\r\n          )\r\n          // store app context on the root VNode.\r\n          // this will be set on the root instance on initial mount.\r\n          vnode.appContext = context\r\n\r\n          // HMR root reload\r\n          if (__DEV__) {\r\n            context.reload = () => {\r\n              render(cloneVNode(vnode), rootContainer, isSVG)\r\n            }\r\n          }\r\n\r\n          if (isHydrate && hydrate) {\r\n            hydrate(vnode as VNode<Node, Element>, rootContainer as any)\r\n          } else {\r\n            render(vnode, rootContainer, isSVG)\r\n          }\r\n          isMounted = true\r\n          app._container = rootContainer\r\n          // for devtools and telemetry\r\n          ;(rootContainer as any).__vue_app__ = app\r\n\r\n          if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n            app._instance = vnode.component\r\n            devtoolsInitApp(app, version)\r\n          }\r\n\r\n          return getExposeProxy(vnode.component!) || vnode.component!.proxy\r\n        } else if (__DEV__) {\r\n          warn(\r\n            `App has already been mounted.\\n` +\r\n              `If you want to remount the same app, move your app creation logic ` +\r\n              `into a factory function and create fresh app instances for each ` +\r\n              `mount - e.g. \\`const createMyApp = () => createApp(App)\\``\r\n          )\r\n        }\r\n      },\r\n\r\n      unmount() {\r\n        if (isMounted) {\r\n          render(null, app._container)\r\n          if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n            app._instance = null\r\n            devtoolsUnmountApp(app)\r\n          }\r\n          delete app._container.__vue_app__\r\n        } else if (__DEV__) {\r\n          warn(`Cannot unmount an app that is not mounted.`)\r\n        }\r\n      },\r\n\r\n      provide(key, value) {\r\n        if (__DEV__ && (key as string | symbol) in context.provides) {\r\n          warn(\r\n            `App already provides property with key \"${String(key)}\". ` +\r\n              `It will be overwritten with the new value.`\r\n          )\r\n        }\r\n\r\n        context.provides[key as string | symbol] = value\r\n\r\n        return app\r\n      }\r\n    })\r\n\r\n    if (__COMPAT__) {\r\n      installAppCompatProperties(app, context, render)\r\n    }\r\n\r\n    return app\r\n  }\r\n}\r\n","import { SuspenseBoundary } from './components/Suspense'\r\nimport { VNode, VNodeNormalizedRef, VNodeNormalizedRefAtom } from './vnode'\r\nimport {\r\n  EMPTY_OBJ,\r\n  hasOwn,\r\n  isArray,\r\n  isFunction,\r\n  isString,\r\n  remove,\r\n  ShapeFlags\r\n} from '@vue/shared'\r\nimport { isAsyncWrapper } from './apiAsyncComponent'\r\nimport { getExposeProxy } from './component'\r\nimport { warn } from './warning'\r\nimport { isRef } from '@vue/reactivity'\r\nimport { callWithErrorHandling, ErrorCodes } from './errorHandling'\r\nimport { SchedulerJob } from './scheduler'\r\nimport { queuePostRenderEffect } from './renderer'\r\n\r\n/**\r\n * Function for handling a template ref\r\n */\r\nexport function setRef(\r\n  rawRef: VNodeNormalizedRef,\r\n  oldRawRef: VNodeNormalizedRef | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  vnode: VNode,\r\n  isUnmount = false\r\n) {\r\n  if (isArray(rawRef)) {\r\n    rawRef.forEach((r, i) =>\r\n      setRef(\r\n        r,\r\n        oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef),\r\n        parentSuspense,\r\n        vnode,\r\n        isUnmount\r\n      )\r\n    )\r\n    return\r\n  }\r\n\r\n  if (isAsyncWrapper(vnode) && !isUnmount) {\r\n    // when mounting async components, nothing needs to be done,\r\n    // because the template ref is forwarded to inner component\r\n    return\r\n  }\r\n\r\n  const refValue =\r\n    vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT\r\n      ? getExposeProxy(vnode.component!) || vnode.component!.proxy\r\n      : vnode.el\r\n  const value = isUnmount ? null : refValue\r\n\r\n  const { i: owner, r: ref } = rawRef\r\n  if (__DEV__ && !owner) {\r\n    warn(\r\n      `Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n        `A vnode with ref must be created inside the render function.`\r\n    )\r\n    return\r\n  }\r\n  const oldRef = oldRawRef && (oldRawRef as VNodeNormalizedRefAtom).r\r\n  const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs\r\n  const setupState = owner.setupState\r\n\r\n  // dynamic ref changed. unset old ref\r\n  if (oldRef != null && oldRef !== ref) {\r\n    if (isString(oldRef)) {\r\n      refs[oldRef] = null\r\n      if (hasOwn(setupState, oldRef)) {\r\n        setupState[oldRef] = null\r\n      }\r\n    } else if (isRef(oldRef)) {\r\n      oldRef.value = null\r\n    }\r\n  }\r\n\r\n  if (isFunction(ref)) {\r\n    callWithErrorHandling(ref, owner, ErrorCodes.FUNCTION_REF, [value, refs])\r\n  } else {\r\n    const _isString = isString(ref)\r\n    const _isRef = isRef(ref)\r\n    if (_isString || _isRef) {\r\n      const doSet = () => {\r\n        if (rawRef.f) {\r\n          const existing = _isString ? refs[ref] : ref.value\r\n          if (isUnmount) {\r\n            isArray(existing) && remove(existing, refValue)\r\n          } else {\r\n            if (!isArray(existing)) {\r\n              if (_isString) {\r\n                refs[ref] = [refValue]\r\n                if (hasOwn(setupState, ref)) {\r\n                  setupState[ref] = refs[ref]\r\n                }\r\n              } else {\r\n                ref.value = [refValue]\r\n                if (rawRef.k) refs[rawRef.k] = ref.value\r\n              }\r\n            } else if (!existing.includes(refValue)) {\r\n              existing.push(refValue)\r\n            }\r\n          }\r\n        } else if (_isString) {\r\n          refs[ref] = value\r\n          if (hasOwn(setupState, ref)) {\r\n            setupState[ref] = value\r\n          }\r\n        } else if (_isRef) {\r\n          ref.value = value\r\n          if (rawRef.k) refs[rawRef.k] = value\r\n        } else if (__DEV__) {\r\n          warn('Invalid template ref type:', ref, `(${typeof ref})`)\r\n        }\r\n      }\r\n      if (value) {\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        ;(doSet as SchedulerJob).id = -1\r\n        queuePostRenderEffect(doSet, parentSuspense)\r\n      } else {\r\n        doSet()\r\n      }\r\n    } else if (__DEV__) {\r\n      warn('Invalid template ref type:', ref, `(${typeof ref})`)\r\n    }\r\n  }\r\n}\r\n","import {\r\n  VNode,\r\n  normalizeVNode,\r\n  Text,\r\n  Comment,\r\n  Static,\r\n  Fragment,\r\n  VNodeHook,\r\n  createVNode,\r\n  createTextVNode,\r\n  invokeVNodeHook\r\n} from './vnode'\r\nimport { flushPostFlushCbs } from './scheduler'\r\nimport { ComponentInternalInstance } from './component'\r\nimport { invokeDirectiveHook } from './directives'\r\nimport { warn } from './warning'\r\nimport { PatchFlags, ShapeFlags, isReservedProp, isOn } from '@vue/shared'\r\nimport { RendererInternals } from './renderer'\r\nimport { setRef } from './rendererTemplateRef'\r\nimport {\r\n  SuspenseImpl,\r\n  SuspenseBoundary,\r\n  queueEffectWithSuspense\r\n} from './components/Suspense'\r\nimport { TeleportImpl, TeleportVNode } from './components/Teleport'\r\nimport { isAsyncWrapper } from './apiAsyncComponent'\r\n\r\nexport type RootHydrateFunction = (\r\n  vnode: VNode<Node, Element>,\r\n  container: (Element | ShadowRoot) & { _vnode?: VNode }\r\n) => void\r\n\r\nconst enum DOMNodeTypes {\r\n  ELEMENT = 1,\r\n  TEXT = 3,\r\n  COMMENT = 8\r\n}\r\n\r\nlet hasMismatch = false\r\n\r\nconst isSVGContainer = (container: Element) =>\r\n  /svg/.test(container.namespaceURI!) && container.tagName !== 'foreignObject'\r\n\r\nconst isComment = (node: Node): node is Comment =>\r\n  node.nodeType === DOMNodeTypes.COMMENT\r\n\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nexport function createHydrationFunctions(\r\n  rendererInternals: RendererInternals<Node, Element>\r\n) {\r\n  const {\r\n    mt: mountComponent,\r\n    p: patch,\r\n    o: {\r\n      patchProp,\r\n      createText,\r\n      nextSibling,\r\n      parentNode,\r\n      remove,\r\n      insert,\r\n      createComment\r\n    }\r\n  } = rendererInternals\r\n\r\n  const hydrate: RootHydrateFunction = (vnode, container) => {\r\n    if (!container.hasChildNodes()) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Attempting to hydrate existing markup but container is empty. ` +\r\n            `Performing full mount instead.`\r\n        )\r\n      patch(null, vnode, container)\r\n      flushPostFlushCbs()\r\n      container._vnode = vnode\r\n      return\r\n    }\r\n    hasMismatch = false\r\n    hydrateNode(container.firstChild!, vnode, null, null, null)\r\n    flushPostFlushCbs()\r\n    container._vnode = vnode\r\n    if (hasMismatch && !__TEST__) {\r\n      // this error should show up in production\r\n      console.error(`Hydration completed but contains mismatches.`)\r\n    }\r\n  }\r\n\r\n  const hydrateNode = (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized = false\r\n  ): Node | null => {\r\n    const isFragmentStart = isComment(node) && node.data === '['\r\n    const onMismatch = () =>\r\n      handleMismatch(\r\n        node,\r\n        vnode,\r\n        parentComponent,\r\n        parentSuspense,\r\n        slotScopeIds,\r\n        isFragmentStart\r\n      )\r\n\r\n    const { type, ref, shapeFlag, patchFlag } = vnode\r\n    const domType = node.nodeType\r\n    vnode.el = node\r\n\r\n    if (patchFlag === PatchFlags.BAIL) {\r\n      optimized = false\r\n      vnode.dynamicChildren = null\r\n    }\r\n\r\n    let nextNode: Node | null = null\r\n    switch (type) {\r\n      case Text:\r\n        if (domType !== DOMNodeTypes.TEXT) {\r\n          // #5728 empty text node inside a slot can cause hydration failure\r\n          // because the server rendered HTML won't contain a text node\r\n          if (vnode.children === '') {\r\n            insert((vnode.el = createText('')), parentNode(node)!, node)\r\n            nextNode = node\r\n          } else {\r\n            nextNode = onMismatch()\r\n          }\r\n        } else {\r\n          if ((node as Text).data !== vnode.children) {\r\n            hasMismatch = true\r\n            __DEV__ &&\r\n              warn(\r\n                `Hydration text mismatch:` +\r\n                  `\\n- Client: ${JSON.stringify((node as Text).data)}` +\r\n                  `\\n- Server: ${JSON.stringify(vnode.children)}`\r\n              )\r\n            ;(node as Text).data = vnode.children as string\r\n          }\r\n          nextNode = nextSibling(node)\r\n        }\r\n        break\r\n      case Comment:\r\n        if (domType !== DOMNodeTypes.COMMENT || isFragmentStart) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          nextNode = nextSibling(node)\r\n        }\r\n        break\r\n      case Static:\r\n        if (domType !== DOMNodeTypes.ELEMENT && domType !== DOMNodeTypes.TEXT) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          // determine anchor, adopt content\r\n          nextNode = node\r\n          // if the static vnode has its content stripped during build,\r\n          // adopt it from the server-rendered HTML.\r\n          const needToAdoptContent = !(vnode.children as string).length\r\n          for (let i = 0; i < vnode.staticCount!; i++) {\r\n            if (needToAdoptContent)\r\n              vnode.children +=\r\n                nextNode.nodeType === DOMNodeTypes.ELEMENT\r\n                  ? (nextNode as Element).outerHTML\r\n                  : (nextNode as Text).data\r\n            if (i === vnode.staticCount! - 1) {\r\n              vnode.anchor = nextNode\r\n            }\r\n            nextNode = nextSibling(nextNode)!\r\n          }\r\n          return nextNode\r\n        }\r\n        break\r\n      case Fragment:\r\n        if (!isFragmentStart) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          nextNode = hydrateFragment(\r\n            node as Comment,\r\n            vnode,\r\n            parentComponent,\r\n            parentSuspense,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        }\r\n        break\r\n      default:\r\n        if (shapeFlag & ShapeFlags.ELEMENT) {\r\n          if (\r\n            domType !== DOMNodeTypes.ELEMENT ||\r\n            (vnode.type as string).toLowerCase() !==\r\n              (node as Element).tagName.toLowerCase()\r\n          ) {\r\n            nextNode = onMismatch()\r\n          } else {\r\n            nextNode = hydrateElement(\r\n              node as Element,\r\n              vnode,\r\n              parentComponent,\r\n              parentSuspense,\r\n              slotScopeIds,\r\n              optimized\r\n            )\r\n          }\r\n        } else if (shapeFlag & ShapeFlags.COMPONENT) {\r\n          // when setting up the render effect, if the initial vnode already\r\n          // has .el set, the component will perform hydration instead of mount\r\n          // on its sub-tree.\r\n          vnode.slotScopeIds = slotScopeIds\r\n          const container = parentNode(node)!\r\n          mountComponent(\r\n            vnode,\r\n            container,\r\n            null,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVGContainer(container),\r\n            optimized\r\n          )\r\n\r\n          // component may be async, so in the case of fragments we cannot rely\r\n          // on component's rendered output to determine the end of the fragment\r\n          // instead, we do a lookahead to find the end anchor node.\r\n          nextNode = isFragmentStart\r\n            ? locateClosingAsyncAnchor(node)\r\n            : nextSibling(node)\r\n\r\n          // #4293 teleport as component root\r\n          if (\r\n            nextNode &&\r\n            isComment(nextNode) &&\r\n            nextNode.data === 'teleport end'\r\n          ) {\r\n            nextNode = nextSibling(nextNode)\r\n          }\r\n\r\n          // #3787\r\n          // if component is async, it may get moved / unmounted before its\r\n          // inner component is loaded, so we need to give it a placeholder\r\n          // vnode that matches its adopted DOM.\r\n          if (isAsyncWrapper(vnode)) {\r\n            let subTree\r\n            if (isFragmentStart) {\r\n              subTree = createVNode(Fragment)\r\n              subTree.anchor = nextNode\r\n                ? nextNode.previousSibling\r\n                : container.lastChild\r\n            } else {\r\n              subTree =\r\n                node.nodeType === 3 ? createTextVNode('') : createVNode('div')\r\n            }\r\n            subTree.el = node\r\n            vnode.component!.subTree = subTree\r\n          }\r\n        } else if (shapeFlag & ShapeFlags.TELEPORT) {\r\n          if (domType !== DOMNodeTypes.COMMENT) {\r\n            nextNode = onMismatch()\r\n          } else {\r\n            nextNode = (vnode.type as typeof TeleportImpl).hydrate(\r\n              node,\r\n              vnode as TeleportVNode,\r\n              parentComponent,\r\n              parentSuspense,\r\n              slotScopeIds,\r\n              optimized,\r\n              rendererInternals,\r\n              hydrateChildren\r\n            )\r\n          }\r\n        } else if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n          nextNode = (vnode.type as typeof SuspenseImpl).hydrate(\r\n            node,\r\n            vnode,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVGContainer(parentNode(node)!),\r\n            slotScopeIds,\r\n            optimized,\r\n            rendererInternals,\r\n            hydrateNode\r\n          )\r\n        } else if (__DEV__) {\r\n          warn('Invalid HostVNode type:', type, `(${typeof type})`)\r\n        }\r\n    }\r\n\r\n    if (ref != null) {\r\n      setRef(ref, null, parentSuspense, vnode)\r\n    }\r\n\r\n    return nextNode\r\n  }\r\n\r\n  const hydrateElement = (\r\n    el: Element,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    optimized = optimized || !!vnode.dynamicChildren\r\n    const { type, props, patchFlag, shapeFlag, dirs } = vnode\r\n    // #4006 for form elements with non-string v-model value bindings\r\n    // e.g. <option :value=\"obj\">, <input type=\"checkbox\" :true-value=\"1\">\r\n    const forcePatchValue = (type === 'input' && dirs) || type === 'option'\r\n    // skip props & children if this is hoisted static nodes\r\n    // #5405 in dev, always hydrate children for HMR\r\n    if (__DEV__ || forcePatchValue || patchFlag !== PatchFlags.HOISTED) {\r\n      if (dirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'created')\r\n      }\r\n      // props\r\n      if (props) {\r\n        if (\r\n          forcePatchValue ||\r\n          !optimized ||\r\n          patchFlag & (PatchFlags.FULL_PROPS | PatchFlags.HYDRATE_EVENTS)\r\n        ) {\r\n          for (const key in props) {\r\n            if (\r\n              (forcePatchValue && key.endsWith('value')) ||\r\n              (isOn(key) && !isReservedProp(key))\r\n            ) {\r\n              patchProp(\r\n                el,\r\n                key,\r\n                null,\r\n                props[key],\r\n                false,\r\n                undefined,\r\n                parentComponent\r\n              )\r\n            }\r\n          }\r\n        } else if (props.onClick) {\r\n          // Fast path for click listeners (which is most often) to avoid\r\n          // iterating through props.\r\n          patchProp(\r\n            el,\r\n            'onClick',\r\n            null,\r\n            props.onClick,\r\n            false,\r\n            undefined,\r\n            parentComponent\r\n          )\r\n        }\r\n      }\r\n      // vnode / directive hooks\r\n      let vnodeHooks: VNodeHook | null | undefined\r\n      if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n        invokeVNodeHook(vnodeHooks, parentComponent, vnode)\r\n      }\r\n      if (dirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount')\r\n      }\r\n      if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n        queueEffectWithSuspense(() => {\r\n          vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode)\r\n          dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted')\r\n        }, parentSuspense)\r\n      }\r\n      // children\r\n      if (\r\n        shapeFlag & ShapeFlags.ARRAY_CHILDREN &&\r\n        // skip if element has innerHTML / textContent\r\n        !(props && (props.innerHTML || props.textContent))\r\n      ) {\r\n        let next = hydrateChildren(\r\n          el.firstChild,\r\n          vnode,\r\n          el,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        let hasWarned = false\r\n        while (next) {\r\n          hasMismatch = true\r\n          if (__DEV__ && !hasWarned) {\r\n            warn(\r\n              `Hydration children mismatch in <${vnode.type as string}>: ` +\r\n                `server rendered element contains more child nodes than client vdom.`\r\n            )\r\n            hasWarned = true\r\n          }\r\n          // The SSRed DOM contains more nodes than it should. Remove them.\r\n          const cur = next\r\n          next = next.nextSibling\r\n          remove(cur)\r\n        }\r\n      } else if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n        if (el.textContent !== vnode.children) {\r\n          hasMismatch = true\r\n          __DEV__ &&\r\n            warn(\r\n              `Hydration text content mismatch in <${\r\n                vnode.type as string\r\n              }>:\\n` +\r\n                `- Client: ${el.textContent}\\n` +\r\n                `- Server: ${vnode.children as string}`\r\n            )\r\n          el.textContent = vnode.children as string\r\n        }\r\n      }\r\n    }\r\n    return el.nextSibling\r\n  }\r\n\r\n  const hydrateChildren = (\r\n    node: Node | null,\r\n    parentVNode: VNode,\r\n    container: Element,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ): Node | null => {\r\n    optimized = optimized || !!parentVNode.dynamicChildren\r\n    const children = parentVNode.children as VNode[]\r\n    const l = children.length\r\n    let hasWarned = false\r\n    for (let i = 0; i < l; i++) {\r\n      const vnode = optimized\r\n        ? children[i]\r\n        : (children[i] = normalizeVNode(children[i]))\r\n      if (node) {\r\n        node = hydrateNode(\r\n          node,\r\n          vnode,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      } else if (vnode.type === Text && !vnode.children) {\r\n        continue\r\n      } else {\r\n        hasMismatch = true\r\n        if (__DEV__ && !hasWarned) {\r\n          warn(\r\n            `Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n              `server rendered element contains fewer child nodes than client vdom.`\r\n          )\r\n          hasWarned = true\r\n        }\r\n        // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n        patch(\r\n          null,\r\n          vnode,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVGContainer(container),\r\n          slotScopeIds\r\n        )\r\n      }\r\n    }\r\n    return node\r\n  }\r\n\r\n  const hydrateFragment = (\r\n    node: Comment,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    const { slotScopeIds: fragmentSlotScopeIds } = vnode\r\n    if (fragmentSlotScopeIds) {\r\n      slotScopeIds = slotScopeIds\r\n        ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n        : fragmentSlotScopeIds\r\n    }\r\n\r\n    const container = parentNode(node)!\r\n    const next = hydrateChildren(\r\n      nextSibling(node)!,\r\n      vnode,\r\n      container,\r\n      parentComponent,\r\n      parentSuspense,\r\n      slotScopeIds,\r\n      optimized\r\n    )\r\n    if (next && isComment(next) && next.data === ']') {\r\n      return nextSibling((vnode.anchor = next))\r\n    } else {\r\n      // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n      // back. This should have led to node/children mismatch warnings.\r\n      hasMismatch = true\r\n      // since the anchor is missing, we need to create one and insert it\r\n      insert((vnode.anchor = createComment(`]`)), container, next)\r\n      return next\r\n    }\r\n  }\r\n\r\n  const handleMismatch = (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    isFragment: boolean\r\n  ): Node | null => {\r\n    hasMismatch = true\r\n    __DEV__ &&\r\n      warn(\r\n        `Hydration node mismatch:\\n- Client vnode:`,\r\n        vnode.type,\r\n        `\\n- Server rendered DOM:`,\r\n        node,\r\n        node.nodeType === DOMNodeTypes.TEXT\r\n          ? `(text)`\r\n          : isComment(node) && node.data === '['\r\n          ? `(start of fragment)`\r\n          : ``\r\n      )\r\n    vnode.el = null\r\n\r\n    if (isFragment) {\r\n      // remove excessive fragment nodes\r\n      const end = locateClosingAsyncAnchor(node)\r\n      while (true) {\r\n        const next = nextSibling(node)\r\n        if (next && next !== end) {\r\n          remove(next)\r\n        } else {\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    const next = nextSibling(node)\r\n    const container = parentNode(node)!\r\n    remove(node)\r\n\r\n    patch(\r\n      null,\r\n      vnode,\r\n      container,\r\n      next,\r\n      parentComponent,\r\n      parentSuspense,\r\n      isSVGContainer(container),\r\n      slotScopeIds\r\n    )\r\n    return next\r\n  }\r\n\r\n  const locateClosingAsyncAnchor = (node: Node | null): Node | null => {\r\n    let match = 0\r\n    while (node) {\r\n      node = nextSibling(node)\r\n      if (node && isComment(node)) {\r\n        if (node.data === '[') match++\r\n        if (node.data === ']') {\r\n          if (match === 0) {\r\n            return nextSibling(node)\r\n          } else {\r\n            match--\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return node\r\n  }\r\n\r\n  return [hydrate, hydrateNode] as const\r\n}\r\n","import {\r\n  Text,\r\n  Fragment,\r\n  Comment,\r\n  cloneIfMounted,\r\n  normalizeVNode,\r\n  VNode,\r\n  VNodeArrayChildren,\r\n  createVNode,\r\n  isSameVNodeType,\r\n  Static,\r\n  VNodeHook,\r\n  VNodeProps,\r\n  invokeVNodeHook\r\n} from './vnode'\r\nimport {\r\n  ComponentInternalInstance,\r\n  ComponentOptions,\r\n  createComponentInstance,\r\n  Data,\r\n  setupComponent\r\n} from './component'\r\nimport {\r\n  filterSingleRoot,\r\n  renderComponentRoot,\r\n  shouldUpdateComponent,\r\n  updateHOCHostEl\r\n} from './componentRenderUtils'\r\nimport {\r\n  EMPTY_OBJ,\r\n  EMPTY_ARR,\r\n  isReservedProp,\r\n  PatchFlags,\r\n  ShapeFlags,\r\n  NOOP,\r\n  invokeArrayFns,\r\n  isArray,\r\n  getGlobalThis\r\n} from '@vue/shared'\r\nimport {\r\n  queueJob,\r\n  queuePostFlushCb,\r\n  flushPostFlushCbs,\r\n  invalidateJob,\r\n  flushPreFlushCbs,\r\n  SchedulerJob\r\n} from './scheduler'\r\nimport { pauseTracking, resetTracking, ReactiveEffect } from '@vue/reactivity'\r\nimport { updateProps } from './componentProps'\r\nimport { updateSlots } from './componentSlots'\r\nimport { pushWarningContext, popWarningContext, warn } from './warning'\r\nimport { createAppAPI, CreateAppFunction } from './apiCreateApp'\r\nimport { setRef } from './rendererTemplateRef'\r\nimport {\r\n  SuspenseBoundary,\r\n  queueEffectWithSuspense,\r\n  SuspenseImpl\r\n} from './components/Suspense'\r\nimport { TeleportImpl, TeleportVNode } from './components/Teleport'\r\nimport { isKeepAlive, KeepAliveContext } from './components/KeepAlive'\r\nimport { registerHMR, unregisterHMR, isHmrUpdating } from './hmr'\r\nimport { createHydrationFunctions, RootHydrateFunction } from './hydration'\r\nimport { invokeDirectiveHook } from './directives'\r\nimport { startMeasure, endMeasure } from './profiling'\r\nimport {\r\n  devtoolsComponentAdded,\r\n  devtoolsComponentRemoved,\r\n  devtoolsComponentUpdated,\r\n  setDevtoolsHook\r\n} from './devtools'\r\nimport { initFeatureFlags } from './featureFlags'\r\nimport { isAsyncWrapper } from './apiAsyncComponent'\r\nimport { isCompatEnabled } from './compat/compatConfig'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\n\r\nexport interface Renderer<HostElement = RendererElement> {\r\n  render: RootRenderFunction<HostElement>\r\n  createApp: CreateAppFunction<HostElement>\r\n}\r\n\r\nexport interface HydrationRenderer extends Renderer<Element | ShadowRoot> {\r\n  hydrate: RootHydrateFunction\r\n}\r\n\r\nexport type RootRenderFunction<HostElement = RendererElement> = (\r\n  vnode: VNode | null,\r\n  container: HostElement,\r\n  isSVG?: boolean\r\n) => void\r\n\r\nexport interface RendererOptions<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n> {\r\n  patchProp(\r\n    el: HostElement,\r\n    key: string,\r\n    prevValue: any,\r\n    nextValue: any,\r\n    isSVG?: boolean,\r\n    prevChildren?: VNode<HostNode, HostElement>[],\r\n    parentComponent?: ComponentInternalInstance | null,\r\n    parentSuspense?: SuspenseBoundary | null,\r\n    unmountChildren?: UnmountChildrenFn\r\n  ): void\r\n  insert(el: HostNode, parent: HostElement, anchor?: HostNode | null): void\r\n  remove(el: HostNode): void\r\n  createElement(\r\n    type: string,\r\n    isSVG?: boolean,\r\n    isCustomizedBuiltIn?: string,\r\n    vnodeProps?: (VNodeProps & { [key: string]: any }) | null\r\n  ): HostElement\r\n  createText(text: string): HostNode\r\n  createComment(text: string): HostNode\r\n  setText(node: HostNode, text: string): void\r\n  setElementText(node: HostElement, text: string): void\r\n  parentNode(node: HostNode): HostElement | null\r\n  nextSibling(node: HostNode): HostNode | null\r\n  querySelector?(selector: string): HostElement | null\r\n  setScopeId?(el: HostElement, id: string): void\r\n  cloneNode?(node: HostNode): HostNode\r\n  insertStaticContent?(\r\n    content: string,\r\n    parent: HostElement,\r\n    anchor: HostNode | null,\r\n    isSVG: boolean,\r\n    start?: HostNode | null,\r\n    end?: HostNode | null\r\n  ): [HostNode, HostNode]\r\n}\r\n\r\n// Renderer Node can technically be any object in the context of core renderer\r\n// logic - they are never directly operated on and always passed to the node op\r\n// functions provided via options, so the internal constraint is really just\r\n// a generic object.\r\nexport interface RendererNode {\r\n  [key: string]: any\r\n}\r\n\r\nexport interface RendererElement extends RendererNode {}\r\n\r\n// An object exposing the internals of a renderer, passed to tree-shakeable\r\n// features so that they can be decoupled from this file. Keys are shortened\r\n// to optimize bundle size.\r\nexport interface RendererInternals<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n> {\r\n  p: PatchFn\r\n  um: UnmountFn\r\n  r: RemoveFn\r\n  m: MoveFn\r\n  mt: MountComponentFn\r\n  mc: MountChildrenFn\r\n  pc: PatchChildrenFn\r\n  pbc: PatchBlockChildrenFn\r\n  n: NextFn\r\n  o: RendererOptions<HostNode, HostElement>\r\n}\r\n\r\n// These functions are created inside a closure and therefore their types cannot\r\n// be directly exported. In order to avoid maintaining function signatures in\r\n// two places, we declare them once here and use them inside the closure.\r\ntype PatchFn = (\r\n  n1: VNode | null, // null means this is a mount\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor?: RendererNode | null,\r\n  parentComponent?: ComponentInternalInstance | null,\r\n  parentSuspense?: SuspenseBoundary | null,\r\n  isSVG?: boolean,\r\n  slotScopeIds?: string[] | null,\r\n  optimized?: boolean\r\n) => void\r\n\r\ntype MountChildrenFn = (\r\n  children: VNodeArrayChildren,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  start?: number\r\n) => void\r\n\r\ntype PatchChildrenFn = (\r\n  n1: VNode | null,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean\r\n) => void\r\n\r\ntype PatchBlockChildrenFn = (\r\n  oldChildren: VNode[],\r\n  newChildren: VNode[],\r\n  fallbackContainer: RendererElement,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null\r\n) => void\r\n\r\ntype MoveFn = (\r\n  vnode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  type: MoveType,\r\n  parentSuspense?: SuspenseBoundary | null\r\n) => void\r\n\r\ntype NextFn = (vnode: VNode) => RendererNode | null\r\n\r\ntype UnmountFn = (\r\n  vnode: VNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  doRemove?: boolean,\r\n  optimized?: boolean\r\n) => void\r\n\r\ntype RemoveFn = (vnode: VNode) => void\r\n\r\ntype UnmountChildrenFn = (\r\n  children: VNode[],\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  doRemove?: boolean,\r\n  optimized?: boolean,\r\n  start?: number\r\n) => void\r\n\r\nexport type MountComponentFn = (\r\n  initialVNode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  optimized: boolean\r\n) => void\r\n\r\ntype ProcessTextOrCommentFn = (\r\n  n1: VNode | null,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null\r\n) => void\r\n\r\nexport type SetupRenderEffectFn = (\r\n  instance: ComponentInternalInstance,\r\n  initialVNode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  optimized: boolean\r\n) => void\r\n\r\nexport const enum MoveType {\r\n  ENTER,\r\n  LEAVE,\r\n  REORDER\r\n}\r\n\r\nexport const queuePostRenderEffect = __FEATURE_SUSPENSE__\r\n  ? queueEffectWithSuspense\r\n  : queuePostFlushCb\r\n\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nexport function createRenderer<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n>(options: RendererOptions<HostNode, HostElement>) {\r\n  return baseCreateRenderer<HostNode, HostElement>(options)\r\n}\r\n\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nexport function createHydrationRenderer(\r\n  options: RendererOptions<Node, Element>\r\n) {\r\n  return baseCreateRenderer(options, createHydrationFunctions)\r\n}\r\n\r\n// overload 1: no hydration\r\nfunction baseCreateRenderer<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n>(options: RendererOptions<HostNode, HostElement>): Renderer<HostElement>\r\n\r\n// overload 2: with hydration\r\nfunction baseCreateRenderer(\r\n  options: RendererOptions<Node, Element>,\r\n  createHydrationFns: typeof createHydrationFunctions\r\n): HydrationRenderer\r\n\r\n// implementation\r\nfunction baseCreateRenderer(\r\n  options: RendererOptions,\r\n  createHydrationFns?: typeof createHydrationFunctions\r\n): any {\r\n  // compile-time feature flags check\r\n  if (__ESM_BUNDLER__ && !__TEST__) {\r\n    initFeatureFlags()\r\n  }\r\n\r\n  const target = getGlobalThis()\r\n  target.__VUE__ = true\r\n  if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n    setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target)\r\n  }\r\n\r\n  const {\r\n    insert: hostInsert,\r\n    remove: hostRemove,\r\n    patchProp: hostPatchProp,\r\n    createElement: hostCreateElement,\r\n    createText: hostCreateText,\r\n    createComment: hostCreateComment,\r\n    setText: hostSetText,\r\n    setElementText: hostSetElementText,\r\n    parentNode: hostParentNode,\r\n    nextSibling: hostNextSibling,\r\n    setScopeId: hostSetScopeId = NOOP,\r\n    cloneNode: hostCloneNode,\r\n    insertStaticContent: hostInsertStaticContent\r\n  } = options\r\n\r\n  // Note: functions inside this closure should use `const xxx = () => {}`\r\n  // style in order to prevent being inlined by minifiers.\r\n  const patch: PatchFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor = null,\r\n    parentComponent = null,\r\n    parentSuspense = null,\r\n    isSVG = false,\r\n    slotScopeIds = null,\r\n    optimized = __DEV__ && isHmrUpdating ? false : !!n2.dynamicChildren\r\n  ) => {\r\n    if (n1 === n2) {\r\n      return\r\n    }\r\n\r\n    // patching & not same type, unmount old tree\r\n    if (n1 && !isSameVNodeType(n1, n2)) {\r\n      anchor = getNextHostNode(n1)\r\n      unmount(n1, parentComponent, parentSuspense, true)\r\n      n1 = null\r\n    }\r\n\r\n    if (n2.patchFlag === PatchFlags.BAIL) {\r\n      optimized = false\r\n      n2.dynamicChildren = null\r\n    }\r\n\r\n    const { type, ref, shapeFlag } = n2\r\n    switch (type) {\r\n      case Text:\r\n        processText(n1, n2, container, anchor)\r\n        break\r\n      case Comment:\r\n        processCommentNode(n1, n2, container, anchor)\r\n        break\r\n      case Static:\r\n        if (n1 == null) {\r\n          mountStaticNode(n2, container, anchor, isSVG)\r\n        } else if (__DEV__) {\r\n          patchStaticNode(n1, n2, container, isSVG)\r\n        }\r\n        break\r\n      case Fragment:\r\n        processFragment(\r\n          n1,\r\n          n2,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        break\r\n      default:\r\n        if (shapeFlag & ShapeFlags.ELEMENT) {\r\n          processElement(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else if (shapeFlag & ShapeFlags.COMPONENT) {\r\n          processComponent(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else if (shapeFlag & ShapeFlags.TELEPORT) {\r\n          ;(type as typeof TeleportImpl).process(\r\n            n1 as TeleportVNode,\r\n            n2 as TeleportVNode,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized,\r\n            internals\r\n          )\r\n        } else if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n          ;(type as typeof SuspenseImpl).process(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized,\r\n            internals\r\n          )\r\n        } else if (__DEV__) {\r\n          warn('Invalid VNode type:', type, `(${typeof type})`)\r\n        }\r\n    }\r\n\r\n    // set ref\r\n    if (ref != null && parentComponent) {\r\n      setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2)\r\n    }\r\n  }\r\n\r\n  const processText: ProcessTextOrCommentFn = (n1, n2, container, anchor) => {\r\n    if (n1 == null) {\r\n      hostInsert(\r\n        (n2.el = hostCreateText(n2.children as string)),\r\n        container,\r\n        anchor\r\n      )\r\n    } else {\r\n      const el = (n2.el = n1.el!)\r\n      if (n2.children !== n1.children) {\r\n        hostSetText(el, n2.children as string)\r\n      }\r\n    }\r\n  }\r\n\r\n  const processCommentNode: ProcessTextOrCommentFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor\r\n  ) => {\r\n    if (n1 == null) {\r\n      hostInsert(\r\n        (n2.el = hostCreateComment((n2.children as string) || '')),\r\n        container,\r\n        anchor\r\n      )\r\n    } else {\r\n      // there's no support for dynamic comments\r\n      n2.el = n1.el\r\n    }\r\n  }\r\n\r\n  const mountStaticNode = (\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    isSVG: boolean\r\n  ) => {\r\n    // static nodes are only present when used with compiler-dom/runtime-dom\r\n    // which guarantees presence of hostInsertStaticContent.\r\n    ;[n2.el, n2.anchor] = hostInsertStaticContent!(\r\n      n2.children as string,\r\n      container,\r\n      anchor,\r\n      isSVG,\r\n      n2.el,\r\n      n2.anchor\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Dev / HMR only\r\n   */\r\n  const patchStaticNode = (\r\n    n1: VNode,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    isSVG: boolean\r\n  ) => {\r\n    // static nodes are only patched during dev for HMR\r\n    if (n2.children !== n1.children) {\r\n      const anchor = hostNextSibling(n1.anchor!)\r\n      // remove existing\r\n      removeStaticNode(n1)\r\n      // insert new\r\n      ;[n2.el, n2.anchor] = hostInsertStaticContent!(\r\n        n2.children as string,\r\n        container,\r\n        anchor,\r\n        isSVG\r\n      )\r\n    } else {\r\n      n2.el = n1.el\r\n      n2.anchor = n1.anchor\r\n    }\r\n  }\r\n\r\n  const moveStaticNode = (\r\n    { el, anchor }: VNode,\r\n    container: RendererElement,\r\n    nextSibling: RendererNode | null\r\n  ) => {\r\n    let next\r\n    while (el && el !== anchor) {\r\n      next = hostNextSibling(el)\r\n      hostInsert(el, container, nextSibling)\r\n      el = next\r\n    }\r\n    hostInsert(anchor!, container, nextSibling)\r\n  }\r\n\r\n  const removeStaticNode = ({ el, anchor }: VNode) => {\r\n    let next\r\n    while (el && el !== anchor) {\r\n      next = hostNextSibling(el)\r\n      hostRemove(el)\r\n      el = next\r\n    }\r\n    hostRemove(anchor!)\r\n  }\r\n\r\n  const processElement = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    isSVG = isSVG || (n2.type as string) === 'svg'\r\n    if (n1 == null) {\r\n      mountElement(\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    } else {\r\n      patchElement(\r\n        n1,\r\n        n2,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    }\r\n  }\r\n\r\n  const mountElement = (\r\n    vnode: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    let el: RendererElement\r\n    let vnodeHook: VNodeHook | undefined | null\r\n    const { type, props, shapeFlag, transition, patchFlag, dirs } = vnode\r\n    if (\r\n      !__DEV__ &&\r\n      vnode.el &&\r\n      hostCloneNode !== undefined &&\r\n      patchFlag === PatchFlags.HOISTED\r\n    ) {\r\n      // If a vnode has non-null el, it means it's being reused.\r\n      // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n      // exactly the same, and we can simply do a clone here.\r\n      // only do this in production since cloned trees cannot be HMR updated.\r\n      el = vnode.el = hostCloneNode(vnode.el)\r\n    } else {\r\n      el = vnode.el = hostCreateElement(\r\n        vnode.type as string,\r\n        isSVG,\r\n        props && props.is,\r\n        props\r\n      )\r\n\r\n      // mount children first, since some props may rely on child content\r\n      // being already rendered, e.g. `<select value>`\r\n      if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n        hostSetElementText(el, vnode.children as string)\r\n      } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        mountChildren(\r\n          vnode.children as VNodeArrayChildren,\r\n          el,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG && type !== 'foreignObject',\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      }\r\n\r\n      if (dirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'created')\r\n      }\r\n      // props\r\n      if (props) {\r\n        for (const key in props) {\r\n          if (key !== 'value' && !isReservedProp(key)) {\r\n            hostPatchProp(\r\n              el,\r\n              key,\r\n              null,\r\n              props[key],\r\n              isSVG,\r\n              vnode.children as VNode[],\r\n              parentComponent,\r\n              parentSuspense,\r\n              unmountChildren\r\n            )\r\n          }\r\n        }\r\n        /**\r\n         * Special case for setting value on DOM elements:\r\n         * - it can be order-sensitive (e.g. should be set *after* min/max, #2325, #4024)\r\n         * - it needs to be forced (#1471)\r\n         * #2353 proposes adding another renderer option to configure this, but\r\n         * the properties affects are so finite it is worth special casing it\r\n         * here to reduce the complexity. (Special casing it also should not\r\n         * affect non-DOM renderers)\r\n         */\r\n        if ('value' in props) {\r\n          hostPatchProp(el, 'value', null, props.value)\r\n        }\r\n        if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n          invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n        }\r\n      }\r\n      // scopeId\r\n      setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent)\r\n    }\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      Object.defineProperty(el, '__vnode', {\r\n        value: vnode,\r\n        enumerable: false\r\n      })\r\n      Object.defineProperty(el, '__vueParentComponent', {\r\n        value: parentComponent,\r\n        enumerable: false\r\n      })\r\n    }\r\n    if (dirs) {\r\n      invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount')\r\n    }\r\n    // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n    // #1689 For inside suspense + suspense resolved case, just call it\r\n    const needCallTransitionHooks =\r\n      (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n      transition &&\r\n      !transition.persisted\r\n    if (needCallTransitionHooks) {\r\n      transition!.beforeEnter(el)\r\n    }\r\n    hostInsert(el, container, anchor)\r\n    if (\r\n      (vnodeHook = props && props.onVnodeMounted) ||\r\n      needCallTransitionHooks ||\r\n      dirs\r\n    ) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n        needCallTransitionHooks && transition!.enter(el)\r\n        dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  const setScopeId = (\r\n    el: RendererElement,\r\n    vnode: VNode,\r\n    scopeId: string | null,\r\n    slotScopeIds: string[] | null,\r\n    parentComponent: ComponentInternalInstance | null\r\n  ) => {\r\n    if (scopeId) {\r\n      hostSetScopeId(el, scopeId)\r\n    }\r\n    if (slotScopeIds) {\r\n      for (let i = 0; i < slotScopeIds.length; i++) {\r\n        hostSetScopeId(el, slotScopeIds[i])\r\n      }\r\n    }\r\n    if (parentComponent) {\r\n      let subTree = parentComponent.subTree\r\n      if (\r\n        __DEV__ &&\r\n        subTree.patchFlag > 0 &&\r\n        subTree.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT\r\n      ) {\r\n        subTree =\r\n          filterSingleRoot(subTree.children as VNodeArrayChildren) || subTree\r\n      }\r\n      if (vnode === subTree) {\r\n        const parentVNode = parentComponent.vnode\r\n        setScopeId(\r\n          el,\r\n          parentVNode,\r\n          parentVNode.scopeId,\r\n          parentVNode.slotScopeIds,\r\n          parentComponent.parent\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const mountChildren: MountChildrenFn = (\r\n    children,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized,\r\n    start = 0\r\n  ) => {\r\n    for (let i = start; i < children.length; i++) {\r\n      const child = (children[i] = optimized\r\n        ? cloneIfMounted(children[i] as VNode)\r\n        : normalizeVNode(children[i]))\r\n      patch(\r\n        null,\r\n        child,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    }\r\n  }\r\n\r\n  const patchElement = (\r\n    n1: VNode,\r\n    n2: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    const el = (n2.el = n1.el!)\r\n    let { patchFlag, dynamicChildren, dirs } = n2\r\n    // #1426 take the old vnode's patch flag into account since user may clone a\r\n    // compiler-generated vnode, which de-opts to FULL_PROPS\r\n    patchFlag |= n1.patchFlag & PatchFlags.FULL_PROPS\r\n    const oldProps = n1.props || EMPTY_OBJ\r\n    const newProps = n2.props || EMPTY_OBJ\r\n    let vnodeHook: VNodeHook | undefined | null\r\n\r\n    // disable recurse in beforeUpdate hooks\r\n    parentComponent && toggleRecurse(parentComponent, false)\r\n    if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n      invokeVNodeHook(vnodeHook, parentComponent, n2, n1)\r\n    }\r\n    if (dirs) {\r\n      invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate')\r\n    }\r\n    parentComponent && toggleRecurse(parentComponent, true)\r\n\r\n    if (__DEV__ && isHmrUpdating) {\r\n      // HMR updated, force full diff\r\n      patchFlag = 0\r\n      optimized = false\r\n      dynamicChildren = null\r\n    }\r\n\r\n    const areChildrenSVG = isSVG && n2.type !== 'foreignObject'\r\n    if (dynamicChildren) {\r\n      patchBlockChildren(\r\n        n1.dynamicChildren!,\r\n        dynamicChildren,\r\n        el,\r\n        parentComponent,\r\n        parentSuspense,\r\n        areChildrenSVG,\r\n        slotScopeIds\r\n      )\r\n      if (__DEV__ && parentComponent && parentComponent.type.__hmrId) {\r\n        traverseStaticChildren(n1, n2)\r\n      }\r\n    } else if (!optimized) {\r\n      // full diff\r\n      patchChildren(\r\n        n1,\r\n        n2,\r\n        el,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        areChildrenSVG,\r\n        slotScopeIds,\r\n        false\r\n      )\r\n    }\r\n\r\n    if (patchFlag > 0) {\r\n      // the presence of a patchFlag means this element's render code was\r\n      // generated by the compiler and can take the fast path.\r\n      // in this path old node and new node are guaranteed to have the same shape\r\n      // (i.e. at the exact same position in the source template)\r\n      if (patchFlag & PatchFlags.FULL_PROPS) {\r\n        // element props contain dynamic keys, full diff needed\r\n        patchProps(\r\n          el,\r\n          n2,\r\n          oldProps,\r\n          newProps,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG\r\n        )\r\n      } else {\r\n        // class\r\n        // this flag is matched when the element has dynamic class bindings.\r\n        if (patchFlag & PatchFlags.CLASS) {\r\n          if (oldProps.class !== newProps.class) {\r\n            hostPatchProp(el, 'class', null, newProps.class, isSVG)\r\n          }\r\n        }\r\n\r\n        // style\r\n        // this flag is matched when the element has dynamic style bindings\r\n        if (patchFlag & PatchFlags.STYLE) {\r\n          hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG)\r\n        }\r\n\r\n        // props\r\n        // This flag is matched when the element has dynamic prop/attr bindings\r\n        // other than class and style. The keys of dynamic prop/attrs are saved for\r\n        // faster iteration.\r\n        // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n        // bail out and go through a full diff because we need to unset the old key\r\n        if (patchFlag & PatchFlags.PROPS) {\r\n          // if the flag is present then dynamicProps must be non-null\r\n          const propsToUpdate = n2.dynamicProps!\r\n          for (let i = 0; i < propsToUpdate.length; i++) {\r\n            const key = propsToUpdate[i]\r\n            const prev = oldProps[key]\r\n            const next = newProps[key]\r\n            // #1471 force patch value\r\n            if (next !== prev || key === 'value') {\r\n              hostPatchProp(\r\n                el,\r\n                key,\r\n                prev,\r\n                next,\r\n                isSVG,\r\n                n1.children as VNode[],\r\n                parentComponent,\r\n                parentSuspense,\r\n                unmountChildren\r\n              )\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // text\r\n      // This flag is matched when the element has only dynamic text children.\r\n      if (patchFlag & PatchFlags.TEXT) {\r\n        if (n1.children !== n2.children) {\r\n          hostSetElementText(el, n2.children as string)\r\n        }\r\n      }\r\n    } else if (!optimized && dynamicChildren == null) {\r\n      // unoptimized, full diff\r\n      patchProps(\r\n        el,\r\n        n2,\r\n        oldProps,\r\n        newProps,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG\r\n      )\r\n    }\r\n\r\n    if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1)\r\n        dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  // The fast path for blocks.\r\n  const patchBlockChildren: PatchBlockChildrenFn = (\r\n    oldChildren,\r\n    newChildren,\r\n    fallbackContainer,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    slotScopeIds\r\n  ) => {\r\n    for (let i = 0; i < newChildren.length; i++) {\r\n      const oldVNode = oldChildren[i]\r\n      const newVNode = newChildren[i]\r\n      // Determine the container (parent element) for the patch.\r\n      const container =\r\n        // oldVNode may be an errored async setup() component inside Suspense\r\n        // which will not have a mounted element\r\n        oldVNode.el &&\r\n        // - In the case of a Fragment, we need to provide the actual parent\r\n        // of the Fragment itself so it can move its children.\r\n        (oldVNode.type === Fragment ||\r\n          // - In the case of different nodes, there is going to be a replacement\r\n          // which also requires the correct parent container\r\n          !isSameVNodeType(oldVNode, newVNode) ||\r\n          // - In the case of a component, it could contain anything.\r\n          oldVNode.shapeFlag & (ShapeFlags.COMPONENT | ShapeFlags.TELEPORT))\r\n          ? hostParentNode(oldVNode.el)!\r\n          : // In other cases, the parent container is not actually used so we\r\n            // just pass the block element here to avoid a DOM parentNode call.\r\n            fallbackContainer\r\n      patch(\r\n        oldVNode,\r\n        newVNode,\r\n        container,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        true\r\n      )\r\n    }\r\n  }\r\n\r\n  const patchProps = (\r\n    el: RendererElement,\r\n    vnode: VNode,\r\n    oldProps: Data,\r\n    newProps: Data,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean\r\n  ) => {\r\n    if (oldProps !== newProps) {\r\n      for (const key in newProps) {\r\n        // empty string is not valid prop\r\n        if (isReservedProp(key)) continue\r\n        const next = newProps[key]\r\n        const prev = oldProps[key]\r\n        // defer patching value\r\n        if (next !== prev && key !== 'value') {\r\n          hostPatchProp(\r\n            el,\r\n            key,\r\n            prev,\r\n            next,\r\n            isSVG,\r\n            vnode.children as VNode[],\r\n            parentComponent,\r\n            parentSuspense,\r\n            unmountChildren\r\n          )\r\n        }\r\n      }\r\n      if (oldProps !== EMPTY_OBJ) {\r\n        for (const key in oldProps) {\r\n          if (!isReservedProp(key) && !(key in newProps)) {\r\n            hostPatchProp(\r\n              el,\r\n              key,\r\n              oldProps[key],\r\n              null,\r\n              isSVG,\r\n              vnode.children as VNode[],\r\n              parentComponent,\r\n              parentSuspense,\r\n              unmountChildren\r\n            )\r\n          }\r\n        }\r\n      }\r\n      if ('value' in newProps) {\r\n        hostPatchProp(el, 'value', oldProps.value, newProps.value)\r\n      }\r\n    }\r\n  }\r\n\r\n  const processFragment = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''))!\r\n    const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''))!\r\n\r\n    let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2\r\n\r\n    if (\r\n      __DEV__ &&\r\n      // #5523 dev root fragment may inherit directives\r\n      (isHmrUpdating || patchFlag & PatchFlags.DEV_ROOT_FRAGMENT)\r\n    ) {\r\n      // HMR updated / Dev root fragment (w/ comments), force full diff\r\n      patchFlag = 0\r\n      optimized = false\r\n      dynamicChildren = null\r\n    }\r\n\r\n    // check if this is a slot fragment with :slotted scope ids\r\n    if (fragmentSlotScopeIds) {\r\n      slotScopeIds = slotScopeIds\r\n        ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n        : fragmentSlotScopeIds\r\n    }\r\n\r\n    if (n1 == null) {\r\n      hostInsert(fragmentStartAnchor, container, anchor)\r\n      hostInsert(fragmentEndAnchor, container, anchor)\r\n      // a fragment can only have array children\r\n      // since they are either generated by the compiler, or implicitly created\r\n      // from arrays.\r\n      mountChildren(\r\n        n2.children as VNodeArrayChildren,\r\n        container,\r\n        fragmentEndAnchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    } else {\r\n      if (\r\n        patchFlag > 0 &&\r\n        patchFlag & PatchFlags.STABLE_FRAGMENT &&\r\n        dynamicChildren &&\r\n        // #2715 the previous fragment could've been a BAILed one as a result\r\n        // of renderSlot() with no valid children\r\n        n1.dynamicChildren\r\n      ) {\r\n        // a stable fragment (template root or <template v-for>) doesn't need to\r\n        // patch children order, but it may contain dynamicChildren.\r\n        patchBlockChildren(\r\n          n1.dynamicChildren,\r\n          dynamicChildren,\r\n          container,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds\r\n        )\r\n        if (__DEV__ && parentComponent && parentComponent.type.__hmrId) {\r\n          traverseStaticChildren(n1, n2)\r\n        } else if (\r\n          // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n          //  get moved around. Make sure all root level vnodes inherit el.\r\n          // #2134 or if it's a component root, it may also get moved around\r\n          // as the component is being moved.\r\n          n2.key != null ||\r\n          (parentComponent && n2 === parentComponent.subTree)\r\n        ) {\r\n          traverseStaticChildren(n1, n2, true /* shallow */)\r\n        }\r\n      } else {\r\n        // keyed / unkeyed, or manual fragments.\r\n        // for keyed & unkeyed, since they are compiler generated from v-for,\r\n        // each child is guaranteed to be a block so the fragment will never\r\n        // have dynamicChildren.\r\n        patchChildren(\r\n          n1,\r\n          n2,\r\n          container,\r\n          fragmentEndAnchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const processComponent = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    n2.slotScopeIds = slotScopeIds\r\n    if (n1 == null) {\r\n      if (n2.shapeFlag & ShapeFlags.COMPONENT_KEPT_ALIVE) {\r\n        ;(parentComponent!.ctx as KeepAliveContext).activate(\r\n          n2,\r\n          container,\r\n          anchor,\r\n          isSVG,\r\n          optimized\r\n        )\r\n      } else {\r\n        mountComponent(\r\n          n2,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          optimized\r\n        )\r\n      }\r\n    } else {\r\n      updateComponent(n1, n2, optimized)\r\n    }\r\n  }\r\n\r\n  const mountComponent: MountComponentFn = (\r\n    initialVNode,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    optimized\r\n  ) => {\r\n    // 2.x compat may pre-create the component instance before actually\r\n    // mounting\r\n    const compatMountInstance =\r\n      __COMPAT__ && initialVNode.isCompatRoot && initialVNode.component\r\n    const instance: ComponentInternalInstance =\r\n      compatMountInstance ||\r\n      (initialVNode.component = createComponentInstance(\r\n        initialVNode,\r\n        parentComponent,\r\n        parentSuspense\r\n      ))\r\n\r\n    if (__DEV__ && instance.type.__hmrId) {\r\n      registerHMR(instance)\r\n    }\r\n\r\n    if (__DEV__) {\r\n      pushWarningContext(initialVNode)\r\n      startMeasure(instance, `mount`)\r\n    }\r\n\r\n    // inject renderer internals for keepAlive\r\n    if (isKeepAlive(initialVNode)) {\r\n      ;(instance.ctx as KeepAliveContext).renderer = internals\r\n    }\r\n\r\n    // resolve props and slots for setup context\r\n    if (!(__COMPAT__ && compatMountInstance)) {\r\n      if (__DEV__) {\r\n        startMeasure(instance, `init`)\r\n      }\r\n      setupComponent(instance)\r\n      if (__DEV__) {\r\n        endMeasure(instance, `init`)\r\n      }\r\n    }\r\n\r\n    // setup() is async. This component relies on async logic to be resolved\r\n    // before proceeding\r\n    if (__FEATURE_SUSPENSE__ && instance.asyncDep) {\r\n      parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect)\r\n\r\n      // Give it a placeholder if this is not hydration\r\n      // TODO handle self-defined fallback\r\n      if (!initialVNode.el) {\r\n        const placeholder = (instance.subTree = createVNode(Comment))\r\n        processCommentNode(null, placeholder, container!, anchor)\r\n      }\r\n      return\r\n    }\r\n\r\n    setupRenderEffect(\r\n      instance,\r\n      initialVNode,\r\n      container,\r\n      anchor,\r\n      parentSuspense,\r\n      isSVG,\r\n      optimized\r\n    )\r\n\r\n    if (__DEV__) {\r\n      popWarningContext()\r\n      endMeasure(instance, `mount`)\r\n    }\r\n  }\r\n\r\n  const updateComponent = (n1: VNode, n2: VNode, optimized: boolean) => {\r\n    const instance = (n2.component = n1.component)!\r\n    if (shouldUpdateComponent(n1, n2, optimized)) {\r\n      if (\r\n        __FEATURE_SUSPENSE__ &&\r\n        instance.asyncDep &&\r\n        !instance.asyncResolved\r\n      ) {\r\n        // async & still pending - just update props and slots\r\n        // since the component's reactive effect for render isn't set-up yet\r\n        if (__DEV__) {\r\n          pushWarningContext(n2)\r\n        }\r\n        updateComponentPreRender(instance, n2, optimized)\r\n        if (__DEV__) {\r\n          popWarningContext()\r\n        }\r\n        return\r\n      } else {\r\n        // normal update\r\n        instance.next = n2\r\n        // in case the child component is also queued, remove it to avoid\r\n        // double updating the same child component in the same flush.\r\n        invalidateJob(instance.update)\r\n        // instance.update is the reactive effect.\r\n        instance.update()\r\n      }\r\n    } else {\r\n      // no update needed. just copy over properties\r\n      n2.el = n1.el\r\n      instance.vnode = n2\r\n    }\r\n  }\r\n\r\n  const setupRenderEffect: SetupRenderEffectFn = (\r\n    instance,\r\n    initialVNode,\r\n    container,\r\n    anchor,\r\n    parentSuspense,\r\n    isSVG,\r\n    optimized\r\n  ) => {\r\n    const componentUpdateFn = () => {\r\n      if (!instance.isMounted) {\r\n        let vnodeHook: VNodeHook | null | undefined\r\n        const { el, props } = initialVNode\r\n        const { bm, m, parent } = instance\r\n        const isAsyncWrapperVNode = isAsyncWrapper(initialVNode)\r\n\r\n        toggleRecurse(instance, false)\r\n        // beforeMount hook\r\n        if (bm) {\r\n          invokeArrayFns(bm)\r\n        }\r\n        // onVnodeBeforeMount\r\n        if (\r\n          !isAsyncWrapperVNode &&\r\n          (vnodeHook = props && props.onVnodeBeforeMount)\r\n        ) {\r\n          invokeVNodeHook(vnodeHook, parent, initialVNode)\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          instance.emit('hook:beforeMount')\r\n        }\r\n        toggleRecurse(instance, true)\r\n\r\n        if (el && hydrateNode) {\r\n          // vnode has adopted host node - perform hydration instead of mount.\r\n          const hydrateSubTree = () => {\r\n            if (__DEV__) {\r\n              startMeasure(instance, `render`)\r\n            }\r\n            instance.subTree = renderComponentRoot(instance)\r\n            if (__DEV__) {\r\n              endMeasure(instance, `render`)\r\n            }\r\n            if (__DEV__) {\r\n              startMeasure(instance, `hydrate`)\r\n            }\r\n            hydrateNode!(\r\n              el as Node,\r\n              instance.subTree,\r\n              instance,\r\n              parentSuspense,\r\n              null\r\n            )\r\n            if (__DEV__) {\r\n              endMeasure(instance, `hydrate`)\r\n            }\r\n          }\r\n\r\n          if (isAsyncWrapperVNode) {\r\n            ;(initialVNode.type as ComponentOptions).__asyncLoader!().then(\r\n              // note: we are moving the render call into an async callback,\r\n              // which means it won't track dependencies - but it's ok because\r\n              // a server-rendered async wrapper is already in resolved state\r\n              // and it will never need to change.\r\n              () => !instance.isUnmounted && hydrateSubTree()\r\n            )\r\n          } else {\r\n            hydrateSubTree()\r\n          }\r\n        } else {\r\n          if (__DEV__) {\r\n            startMeasure(instance, `render`)\r\n          }\r\n          const subTree = (instance.subTree = renderComponentRoot(instance))\r\n          if (__DEV__) {\r\n            endMeasure(instance, `render`)\r\n          }\r\n          if (__DEV__) {\r\n            startMeasure(instance, `patch`)\r\n          }\r\n          patch(\r\n            null,\r\n            subTree,\r\n            container,\r\n            anchor,\r\n            instance,\r\n            parentSuspense,\r\n            isSVG\r\n          )\r\n          if (__DEV__) {\r\n            endMeasure(instance, `patch`)\r\n          }\r\n          initialVNode.el = subTree.el\r\n        }\r\n        // mounted hook\r\n        if (m) {\r\n          queuePostRenderEffect(m, parentSuspense)\r\n        }\r\n        // onVnodeMounted\r\n        if (\r\n          !isAsyncWrapperVNode &&\r\n          (vnodeHook = props && props.onVnodeMounted)\r\n        ) {\r\n          const scopedInitialVNode = initialVNode\r\n          queuePostRenderEffect(\r\n            () => invokeVNodeHook(vnodeHook!, parent, scopedInitialVNode),\r\n            parentSuspense\r\n          )\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          queuePostRenderEffect(\r\n            () => instance.emit('hook:mounted'),\r\n            parentSuspense\r\n          )\r\n        }\r\n\r\n        // activated hook for keep-alive roots.\r\n        // #1742 activated hook must be accessed after first render\r\n        // since the hook may be injected by a child keep-alive\r\n        if (\r\n          initialVNode.shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE ||\r\n          (parent &&\r\n            isAsyncWrapper(parent.vnode) &&\r\n            parent.vnode.shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE)\r\n        ) {\r\n          instance.a && queuePostRenderEffect(instance.a, parentSuspense)\r\n          if (\r\n            __COMPAT__ &&\r\n            isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n          ) {\r\n            queuePostRenderEffect(\r\n              () => instance.emit('hook:activated'),\r\n              parentSuspense\r\n            )\r\n          }\r\n        }\r\n        instance.isMounted = true\r\n\r\n        if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n          devtoolsComponentAdded(instance)\r\n        }\r\n\r\n        // #2458: deference mount-only object parameters to prevent memleaks\r\n        initialVNode = container = anchor = null as any\r\n      } else {\r\n        // updateComponent\r\n        // This is triggered by mutation of component's own state (next: null)\r\n        // OR parent calling processComponent (next: VNode)\r\n        let { next, bu, u, parent, vnode } = instance\r\n        let originNext = next\r\n        let vnodeHook: VNodeHook | null | undefined\r\n        if (__DEV__) {\r\n          pushWarningContext(next || instance.vnode)\r\n        }\r\n\r\n        // Disallow component effect recursion during pre-lifecycle hooks.\r\n        toggleRecurse(instance, false)\r\n        if (next) {\r\n          next.el = vnode.el\r\n          updateComponentPreRender(instance, next, optimized)\r\n        } else {\r\n          next = vnode\r\n        }\r\n\r\n        // beforeUpdate hook\r\n        if (bu) {\r\n          invokeArrayFns(bu)\r\n        }\r\n        // onVnodeBeforeUpdate\r\n        if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n          invokeVNodeHook(vnodeHook, parent, next, vnode)\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          instance.emit('hook:beforeUpdate')\r\n        }\r\n        toggleRecurse(instance, true)\r\n\r\n        // render\r\n        if (__DEV__) {\r\n          startMeasure(instance, `render`)\r\n        }\r\n        const nextTree = renderComponentRoot(instance)\r\n        if (__DEV__) {\r\n          endMeasure(instance, `render`)\r\n        }\r\n        const prevTree = instance.subTree\r\n        instance.subTree = nextTree\r\n\r\n        if (__DEV__) {\r\n          startMeasure(instance, `patch`)\r\n        }\r\n        patch(\r\n          prevTree,\r\n          nextTree,\r\n          // parent may have changed if it's in a teleport\r\n          hostParentNode(prevTree.el!)!,\r\n          // anchor may have changed if it's in a fragment\r\n          getNextHostNode(prevTree),\r\n          instance,\r\n          parentSuspense,\r\n          isSVG\r\n        )\r\n        if (__DEV__) {\r\n          endMeasure(instance, `patch`)\r\n        }\r\n        next.el = nextTree.el\r\n        if (originNext === null) {\r\n          // self-triggered update. In case of HOC, update parent component\r\n          // vnode el. HOC is indicated by parent instance's subTree pointing\r\n          // to child component's vnode\r\n          updateHOCHostEl(instance, nextTree.el)\r\n        }\r\n        // updated hook\r\n        if (u) {\r\n          queuePostRenderEffect(u, parentSuspense)\r\n        }\r\n        // onVnodeUpdated\r\n        if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n          queuePostRenderEffect(\r\n            () => invokeVNodeHook(vnodeHook!, parent, next!, vnode),\r\n            parentSuspense\r\n          )\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          queuePostRenderEffect(\r\n            () => instance.emit('hook:updated'),\r\n            parentSuspense\r\n          )\r\n        }\r\n\r\n        if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n          devtoolsComponentUpdated(instance)\r\n        }\r\n\r\n        if (__DEV__) {\r\n          popWarningContext()\r\n        }\r\n      }\r\n    }\r\n\r\n    // create reactive effect for rendering\r\n    const effect = (instance.effect = new ReactiveEffect(\r\n      componentUpdateFn,\r\n      () => queueJob(update),\r\n      instance.scope // track it in component's effect scope\r\n    ))\r\n\r\n    const update: SchedulerJob = (instance.update = () => effect.run())\r\n    update.id = instance.uid\r\n    // allowRecurse\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    toggleRecurse(instance, true)\r\n\r\n    if (__DEV__) {\r\n      effect.onTrack = instance.rtc\r\n        ? e => invokeArrayFns(instance.rtc!, e)\r\n        : void 0\r\n      effect.onTrigger = instance.rtg\r\n        ? e => invokeArrayFns(instance.rtg!, e)\r\n        : void 0\r\n      update.ownerInstance = instance\r\n    }\r\n\r\n    update()\r\n  }\r\n\r\n  const updateComponentPreRender = (\r\n    instance: ComponentInternalInstance,\r\n    nextVNode: VNode,\r\n    optimized: boolean\r\n  ) => {\r\n    nextVNode.component = instance\r\n    const prevProps = instance.vnode.props\r\n    instance.vnode = nextVNode\r\n    instance.next = null\r\n    updateProps(instance, nextVNode.props, prevProps, optimized)\r\n    updateSlots(instance, nextVNode.children, optimized)\r\n\r\n    pauseTracking()\r\n    // props update may have triggered pre-flush watchers.\r\n    // flush them before the render update.\r\n    flushPreFlushCbs(undefined, instance.update)\r\n    resetTracking()\r\n  }\r\n\r\n  const patchChildren: PatchChildrenFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized = false\r\n  ) => {\r\n    const c1 = n1 && n1.children\r\n    const prevShapeFlag = n1 ? n1.shapeFlag : 0\r\n    const c2 = n2.children\r\n\r\n    const { patchFlag, shapeFlag } = n2\r\n    // fast path\r\n    if (patchFlag > 0) {\r\n      if (patchFlag & PatchFlags.KEYED_FRAGMENT) {\r\n        // this could be either fully-keyed or mixed (some keyed some not)\r\n        // presence of patchFlag means children are guaranteed to be arrays\r\n        patchKeyedChildren(\r\n          c1 as VNode[],\r\n          c2 as VNodeArrayChildren,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        return\r\n      } else if (patchFlag & PatchFlags.UNKEYED_FRAGMENT) {\r\n        // unkeyed\r\n        patchUnkeyedChildren(\r\n          c1 as VNode[],\r\n          c2 as VNodeArrayChildren,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        return\r\n      }\r\n    }\r\n\r\n    // children has 3 possibilities: text, array or no children.\r\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n      // text children fast path\r\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        unmountChildren(c1 as VNode[], parentComponent, parentSuspense)\r\n      }\r\n      if (c2 !== c1) {\r\n        hostSetElementText(container, c2 as string)\r\n      }\r\n    } else {\r\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        // prev children was array\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          // two arrays, cannot assume anything, do full diff\r\n          patchKeyedChildren(\r\n            c1 as VNode[],\r\n            c2 as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else {\r\n          // no new children, just unmount old\r\n          unmountChildren(c1 as VNode[], parentComponent, parentSuspense, true)\r\n        }\r\n      } else {\r\n        // prev children was text OR null\r\n        // new children is array OR null\r\n        if (prevShapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n          hostSetElementText(container, '')\r\n        }\r\n        // mount new if array\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          mountChildren(\r\n            c2 as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const patchUnkeyedChildren = (\r\n    c1: VNode[],\r\n    c2: VNodeArrayChildren,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    c1 = c1 || EMPTY_ARR\r\n    c2 = c2 || EMPTY_ARR\r\n    const oldLength = c1.length\r\n    const newLength = c2.length\r\n    const commonLength = Math.min(oldLength, newLength)\r\n    let i\r\n    for (i = 0; i < commonLength; i++) {\r\n      const nextChild = (c2[i] = optimized\r\n        ? cloneIfMounted(c2[i] as VNode)\r\n        : normalizeVNode(c2[i]))\r\n      patch(\r\n        c1[i],\r\n        nextChild,\r\n        container,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    }\r\n    if (oldLength > newLength) {\r\n      // remove old\r\n      unmountChildren(\r\n        c1,\r\n        parentComponent,\r\n        parentSuspense,\r\n        true,\r\n        false,\r\n        commonLength\r\n      )\r\n    } else {\r\n      // mount new\r\n      mountChildren(\r\n        c2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized,\r\n        commonLength\r\n      )\r\n    }\r\n  }\r\n\r\n  // can be all-keyed or mixed\r\n  const patchKeyedChildren = (\r\n    c1: VNode[],\r\n    c2: VNodeArrayChildren,\r\n    container: RendererElement,\r\n    parentAnchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    let i = 0\r\n    const l2 = c2.length\r\n    let e1 = c1.length - 1 // prev ending index\r\n    let e2 = l2 - 1 // next ending index\r\n\r\n    // 1. sync from start\r\n    // (a b) c\r\n    // (a b) d e\r\n    while (i <= e1 && i <= e2) {\r\n      const n1 = c1[i]\r\n      const n2 = (c2[i] = optimized\r\n        ? cloneIfMounted(c2[i] as VNode)\r\n        : normalizeVNode(c2[i]))\r\n      if (isSameVNodeType(n1, n2)) {\r\n        patch(\r\n          n1,\r\n          n2,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      } else {\r\n        break\r\n      }\r\n      i++\r\n    }\r\n\r\n    // 2. sync from end\r\n    // a (b c)\r\n    // d e (b c)\r\n    while (i <= e1 && i <= e2) {\r\n      const n1 = c1[e1]\r\n      const n2 = (c2[e2] = optimized\r\n        ? cloneIfMounted(c2[e2] as VNode)\r\n        : normalizeVNode(c2[e2]))\r\n      if (isSameVNodeType(n1, n2)) {\r\n        patch(\r\n          n1,\r\n          n2,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      } else {\r\n        break\r\n      }\r\n      e1--\r\n      e2--\r\n    }\r\n\r\n    // 3. common sequence + mount\r\n    // (a b)\r\n    // (a b) c\r\n    // i = 2, e1 = 1, e2 = 2\r\n    // (a b)\r\n    // c (a b)\r\n    // i = 0, e1 = -1, e2 = 0\r\n    if (i > e1) {\r\n      if (i <= e2) {\r\n        const nextPos = e2 + 1\r\n        const anchor = nextPos < l2 ? (c2[nextPos] as VNode).el : parentAnchor\r\n        while (i <= e2) {\r\n          patch(\r\n            null,\r\n            (c2[i] = optimized\r\n              ? cloneIfMounted(c2[i] as VNode)\r\n              : normalizeVNode(c2[i])),\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n          i++\r\n        }\r\n      }\r\n    }\r\n\r\n    // 4. common sequence + unmount\r\n    // (a b) c\r\n    // (a b)\r\n    // i = 2, e1 = 2, e2 = 1\r\n    // a (b c)\r\n    // (b c)\r\n    // i = 0, e1 = 0, e2 = -1\r\n    else if (i > e2) {\r\n      while (i <= e1) {\r\n        unmount(c1[i], parentComponent, parentSuspense, true)\r\n        i++\r\n      }\r\n    }\r\n\r\n    // 5. unknown sequence\r\n    // [i ... e1 + 1]: a b [c d e] f g\r\n    // [i ... e2 + 1]: a b [e d c h] f g\r\n    // i = 2, e1 = 4, e2 = 5\r\n    else {\r\n      const s1 = i // prev starting index\r\n      const s2 = i // next starting index\r\n\r\n      // 5.1 build key:index map for newChildren\r\n      const keyToNewIndexMap: Map<string | number | symbol, number> = new Map()\r\n      for (i = s2; i <= e2; i++) {\r\n        const nextChild = (c2[i] = optimized\r\n          ? cloneIfMounted(c2[i] as VNode)\r\n          : normalizeVNode(c2[i]))\r\n        if (nextChild.key != null) {\r\n          if (__DEV__ && keyToNewIndexMap.has(nextChild.key)) {\r\n            warn(\r\n              `Duplicate keys found during update:`,\r\n              JSON.stringify(nextChild.key),\r\n              `Make sure keys are unique.`\r\n            )\r\n          }\r\n          keyToNewIndexMap.set(nextChild.key, i)\r\n        }\r\n      }\r\n\r\n      // 5.2 loop through old children left to be patched and try to patch\r\n      // matching nodes & remove nodes that are no longer present\r\n      let j\r\n      let patched = 0\r\n      const toBePatched = e2 - s2 + 1\r\n      let moved = false\r\n      // used to track whether any node has moved\r\n      let maxNewIndexSoFar = 0\r\n      // works as Map<newIndex, oldIndex>\r\n      // Note that oldIndex is offset by +1\r\n      // and oldIndex = 0 is a special value indicating the new node has\r\n      // no corresponding old node.\r\n      // used for determining longest stable subsequence\r\n      const newIndexToOldIndexMap = new Array(toBePatched)\r\n      for (i = 0; i < toBePatched; i++) newIndexToOldIndexMap[i] = 0\r\n\r\n      for (i = s1; i <= e1; i++) {\r\n        const prevChild = c1[i]\r\n        if (patched >= toBePatched) {\r\n          // all new children have been patched so this can only be a removal\r\n          unmount(prevChild, parentComponent, parentSuspense, true)\r\n          continue\r\n        }\r\n        let newIndex\r\n        if (prevChild.key != null) {\r\n          newIndex = keyToNewIndexMap.get(prevChild.key)\r\n        } else {\r\n          // key-less node, try to locate a key-less node of the same type\r\n          for (j = s2; j <= e2; j++) {\r\n            if (\r\n              newIndexToOldIndexMap[j - s2] === 0 &&\r\n              isSameVNodeType(prevChild, c2[j] as VNode)\r\n            ) {\r\n              newIndex = j\r\n              break\r\n            }\r\n          }\r\n        }\r\n        if (newIndex === undefined) {\r\n          unmount(prevChild, parentComponent, parentSuspense, true)\r\n        } else {\r\n          newIndexToOldIndexMap[newIndex - s2] = i + 1\r\n          if (newIndex >= maxNewIndexSoFar) {\r\n            maxNewIndexSoFar = newIndex\r\n          } else {\r\n            moved = true\r\n          }\r\n          patch(\r\n            prevChild,\r\n            c2[newIndex] as VNode,\r\n            container,\r\n            null,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n          patched++\r\n        }\r\n      }\r\n\r\n      // 5.3 move and mount\r\n      // generate longest stable subsequence only when nodes have moved\r\n      const increasingNewIndexSequence = moved\r\n        ? getSequence(newIndexToOldIndexMap)\r\n        : EMPTY_ARR\r\n      j = increasingNewIndexSequence.length - 1\r\n      // looping backwards so that we can use last patched node as anchor\r\n      for (i = toBePatched - 1; i >= 0; i--) {\r\n        const nextIndex = s2 + i\r\n        const nextChild = c2[nextIndex] as VNode\r\n        const anchor =\r\n          nextIndex + 1 < l2 ? (c2[nextIndex + 1] as VNode).el : parentAnchor\r\n        if (newIndexToOldIndexMap[i] === 0) {\r\n          // mount new\r\n          patch(\r\n            null,\r\n            nextChild,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else if (moved) {\r\n          // move if:\r\n          // There is no stable subsequence (e.g. a reverse)\r\n          // OR current node is not among the stable sequence\r\n          if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n            move(nextChild, container, anchor, MoveType.REORDER)\r\n          } else {\r\n            j--\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const move: MoveFn = (\r\n    vnode,\r\n    container,\r\n    anchor,\r\n    moveType,\r\n    parentSuspense = null\r\n  ) => {\r\n    const { el, type, transition, children, shapeFlag } = vnode\r\n    if (shapeFlag & ShapeFlags.COMPONENT) {\r\n      move(vnode.component!.subTree, container, anchor, moveType)\r\n      return\r\n    }\r\n\r\n    if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n      vnode.suspense!.move(container, anchor, moveType)\r\n      return\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.TELEPORT) {\r\n      ;(type as typeof TeleportImpl).move(vnode, container, anchor, internals)\r\n      return\r\n    }\r\n\r\n    if (type === Fragment) {\r\n      hostInsert(el!, container, anchor)\r\n      for (let i = 0; i < (children as VNode[]).length; i++) {\r\n        move((children as VNode[])[i], container, anchor, moveType)\r\n      }\r\n      hostInsert(vnode.anchor!, container, anchor)\r\n      return\r\n    }\r\n\r\n    if (type === Static) {\r\n      moveStaticNode(vnode, container, anchor)\r\n      return\r\n    }\r\n\r\n    // single nodes\r\n    const needTransition =\r\n      moveType !== MoveType.REORDER &&\r\n      shapeFlag & ShapeFlags.ELEMENT &&\r\n      transition\r\n    if (needTransition) {\r\n      if (moveType === MoveType.ENTER) {\r\n        transition!.beforeEnter(el!)\r\n        hostInsert(el!, container, anchor)\r\n        queuePostRenderEffect(() => transition!.enter(el!), parentSuspense)\r\n      } else {\r\n        const { leave, delayLeave, afterLeave } = transition!\r\n        const remove = () => hostInsert(el!, container, anchor)\r\n        const performLeave = () => {\r\n          leave(el!, () => {\r\n            remove()\r\n            afterLeave && afterLeave()\r\n          })\r\n        }\r\n        if (delayLeave) {\r\n          delayLeave(el!, remove, performLeave)\r\n        } else {\r\n          performLeave()\r\n        }\r\n      }\r\n    } else {\r\n      hostInsert(el!, container, anchor)\r\n    }\r\n  }\r\n\r\n  const unmount: UnmountFn = (\r\n    vnode,\r\n    parentComponent,\r\n    parentSuspense,\r\n    doRemove = false,\r\n    optimized = false\r\n  ) => {\r\n    const {\r\n      type,\r\n      props,\r\n      ref,\r\n      children,\r\n      dynamicChildren,\r\n      shapeFlag,\r\n      patchFlag,\r\n      dirs\r\n    } = vnode\r\n    // unset ref\r\n    if (ref != null) {\r\n      setRef(ref, null, parentSuspense, vnode, true)\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE) {\r\n      ;(parentComponent!.ctx as KeepAliveContext).deactivate(vnode)\r\n      return\r\n    }\r\n\r\n    const shouldInvokeDirs = shapeFlag & ShapeFlags.ELEMENT && dirs\r\n    const shouldInvokeVnodeHook = !isAsyncWrapper(vnode)\r\n\r\n    let vnodeHook: VNodeHook | undefined | null\r\n    if (\r\n      shouldInvokeVnodeHook &&\r\n      (vnodeHook = props && props.onVnodeBeforeUnmount)\r\n    ) {\r\n      invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.COMPONENT) {\r\n      unmountComponent(vnode.component!, parentSuspense, doRemove)\r\n    } else {\r\n      if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n        vnode.suspense!.unmount(parentSuspense, doRemove)\r\n        return\r\n      }\r\n\r\n      if (shouldInvokeDirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount')\r\n      }\r\n\r\n      if (shapeFlag & ShapeFlags.TELEPORT) {\r\n        ;(vnode.type as typeof TeleportImpl).remove(\r\n          vnode,\r\n          parentComponent,\r\n          parentSuspense,\r\n          optimized,\r\n          internals,\r\n          doRemove\r\n        )\r\n      } else if (\r\n        dynamicChildren &&\r\n        // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n        (type !== Fragment ||\r\n          (patchFlag > 0 && patchFlag & PatchFlags.STABLE_FRAGMENT))\r\n      ) {\r\n        // fast path for block nodes: only need to unmount dynamic children.\r\n        unmountChildren(\r\n          dynamicChildren,\r\n          parentComponent,\r\n          parentSuspense,\r\n          false,\r\n          true\r\n        )\r\n      } else if (\r\n        (type === Fragment &&\r\n          patchFlag &\r\n            (PatchFlags.KEYED_FRAGMENT | PatchFlags.UNKEYED_FRAGMENT)) ||\r\n        (!optimized && shapeFlag & ShapeFlags.ARRAY_CHILDREN)\r\n      ) {\r\n        unmountChildren(children as VNode[], parentComponent, parentSuspense)\r\n      }\r\n\r\n      if (doRemove) {\r\n        remove(vnode)\r\n      }\r\n    }\r\n\r\n    if (\r\n      (shouldInvokeVnodeHook &&\r\n        (vnodeHook = props && props.onVnodeUnmounted)) ||\r\n      shouldInvokeDirs\r\n    ) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n        shouldInvokeDirs &&\r\n          invokeDirectiveHook(vnode, null, parentComponent, 'unmounted')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  const remove: RemoveFn = vnode => {\r\n    const { type, el, anchor, transition } = vnode\r\n    if (type === Fragment) {\r\n      if (\r\n        __DEV__ &&\r\n        vnode.patchFlag > 0 &&\r\n        vnode.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT &&\r\n        transition &&\r\n        !transition.persisted\r\n      ) {\r\n        ;(vnode.children as VNode[]).forEach(child => {\r\n          if (child.type === Comment) {\r\n            hostRemove(child.el!)\r\n          } else {\r\n            remove(child)\r\n          }\r\n        })\r\n      } else {\r\n        removeFragment(el!, anchor!)\r\n      }\r\n      return\r\n    }\r\n\r\n    if (type === Static) {\r\n      removeStaticNode(vnode)\r\n      return\r\n    }\r\n\r\n    const performRemove = () => {\r\n      hostRemove(el!)\r\n      if (transition && !transition.persisted && transition.afterLeave) {\r\n        transition.afterLeave()\r\n      }\r\n    }\r\n\r\n    if (\r\n      vnode.shapeFlag & ShapeFlags.ELEMENT &&\r\n      transition &&\r\n      !transition.persisted\r\n    ) {\r\n      const { leave, delayLeave } = transition\r\n      const performLeave = () => leave(el!, performRemove)\r\n      if (delayLeave) {\r\n        delayLeave(vnode.el!, performRemove, performLeave)\r\n      } else {\r\n        performLeave()\r\n      }\r\n    } else {\r\n      performRemove()\r\n    }\r\n  }\r\n\r\n  const removeFragment = (cur: RendererNode, end: RendererNode) => {\r\n    // For fragments, directly remove all contained DOM nodes.\r\n    // (fragment child nodes cannot have transition)\r\n    let next\r\n    while (cur !== end) {\r\n      next = hostNextSibling(cur)!\r\n      hostRemove(cur)\r\n      cur = next\r\n    }\r\n    hostRemove(end)\r\n  }\r\n\r\n  const unmountComponent = (\r\n    instance: ComponentInternalInstance,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    doRemove?: boolean\r\n  ) => {\r\n    if (__DEV__ && instance.type.__hmrId) {\r\n      unregisterHMR(instance)\r\n    }\r\n\r\n    const { bum, scope, update, subTree, um } = instance\r\n\r\n    // beforeUnmount hook\r\n    if (bum) {\r\n      invokeArrayFns(bum)\r\n    }\r\n\r\n    if (\r\n      __COMPAT__ &&\r\n      isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n    ) {\r\n      instance.emit('hook:beforeDestroy')\r\n    }\r\n\r\n    // stop effects in component scope\r\n    scope.stop()\r\n\r\n    // update may be null if a component is unmounted before its async\r\n    // setup has resolved.\r\n    if (update) {\r\n      // so that scheduler will no longer invoke it\r\n      update.active = false\r\n      unmount(subTree, instance, parentSuspense, doRemove)\r\n    }\r\n    // unmounted hook\r\n    if (um) {\r\n      queuePostRenderEffect(um, parentSuspense)\r\n    }\r\n    if (\r\n      __COMPAT__ &&\r\n      isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n    ) {\r\n      queuePostRenderEffect(\r\n        () => instance.emit('hook:destroyed'),\r\n        parentSuspense\r\n      )\r\n    }\r\n    queuePostRenderEffect(() => {\r\n      instance.isUnmounted = true\r\n    }, parentSuspense)\r\n\r\n    // A component with async dep inside a pending suspense is unmounted before\r\n    // its async dep resolves. This should remove the dep from the suspense, and\r\n    // cause the suspense to resolve immediately if that was the last dep.\r\n    if (\r\n      __FEATURE_SUSPENSE__ &&\r\n      parentSuspense &&\r\n      parentSuspense.pendingBranch &&\r\n      !parentSuspense.isUnmounted &&\r\n      instance.asyncDep &&\r\n      !instance.asyncResolved &&\r\n      instance.suspenseId === parentSuspense.pendingId\r\n    ) {\r\n      parentSuspense.deps--\r\n      if (parentSuspense.deps === 0) {\r\n        parentSuspense.resolve()\r\n      }\r\n    }\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      devtoolsComponentRemoved(instance)\r\n    }\r\n  }\r\n\r\n  const unmountChildren: UnmountChildrenFn = (\r\n    children,\r\n    parentComponent,\r\n    parentSuspense,\r\n    doRemove = false,\r\n    optimized = false,\r\n    start = 0\r\n  ) => {\r\n    for (let i = start; i < children.length; i++) {\r\n      unmount(children[i], parentComponent, parentSuspense, doRemove, optimized)\r\n    }\r\n  }\r\n\r\n  const getNextHostNode: NextFn = vnode => {\r\n    if (vnode.shapeFlag & ShapeFlags.COMPONENT) {\r\n      return getNextHostNode(vnode.component!.subTree)\r\n    }\r\n    if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n      return vnode.suspense!.next()\r\n    }\r\n    return hostNextSibling((vnode.anchor || vnode.el)!)\r\n  }\r\n\r\n  const render: RootRenderFunction = (vnode, container, isSVG) => {\r\n    if (vnode == null) {\r\n      if (container._vnode) {\r\n        unmount(container._vnode, null, null, true)\r\n      }\r\n    } else {\r\n      patch(container._vnode || null, vnode, container, null, null, null, isSVG)\r\n    }\r\n    flushPostFlushCbs()\r\n    container._vnode = vnode\r\n  }\r\n\r\n  const internals: RendererInternals = {\r\n    p: patch,\r\n    um: unmount,\r\n    m: move,\r\n    r: remove,\r\n    mt: mountComponent,\r\n    mc: mountChildren,\r\n    pc: patchChildren,\r\n    pbc: patchBlockChildren,\r\n    n: getNextHostNode,\r\n    o: options\r\n  }\r\n\r\n  let hydrate: ReturnType<typeof createHydrationFunctions>[0] | undefined\r\n  let hydrateNode: ReturnType<typeof createHydrationFunctions>[1] | undefined\r\n  if (createHydrationFns) {\r\n    ;[hydrate, hydrateNode] = createHydrationFns(\r\n      internals as RendererInternals<Node, Element>\r\n    )\r\n  }\r\n\r\n  return {\r\n    render,\r\n    hydrate,\r\n    createApp: createAppAPI(render, hydrate)\r\n  }\r\n}\r\n\r\nfunction toggleRecurse(\r\n  { effect, update }: ComponentInternalInstance,\r\n  allowed: boolean\r\n) {\r\n  effect.allowRecurse = update.allowRecurse = allowed\r\n}\r\n\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always be moved. Therefore, in order to ensure correct move\r\n * position, el should be inherited from previous nodes.\r\n */\r\nexport function traverseStaticChildren(n1: VNode, n2: VNode, shallow = false) {\r\n  const ch1 = n1.children\r\n  const ch2 = n2.children\r\n  if (isArray(ch1) && isArray(ch2)) {\r\n    for (let i = 0; i < ch1.length; i++) {\r\n      // this is only called in the optimized path so array children are\r\n      // guaranteed to be vnodes\r\n      const c1 = ch1[i] as VNode\r\n      let c2 = ch2[i] as VNode\r\n      if (c2.shapeFlag & ShapeFlags.ELEMENT && !c2.dynamicChildren) {\r\n        if (c2.patchFlag <= 0 || c2.patchFlag === PatchFlags.HYDRATE_EVENTS) {\r\n          c2 = ch2[i] = cloneIfMounted(ch2[i] as VNode)\r\n          c2.el = c1.el\r\n        }\r\n        if (!shallow) traverseStaticChildren(c1, c2)\r\n      }\r\n      // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n      // would have received .el during block patch)\r\n      if (__DEV__ && c2.type === Comment && !c2.el) {\r\n        c2.el = c1.el\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr: number[]): number[] {\r\n  const p = arr.slice()\r\n  const result = [0]\r\n  let i, j, u, v, c\r\n  const len = arr.length\r\n  for (i = 0; i < len; i++) {\r\n    const arrI = arr[i]\r\n    if (arrI !== 0) {\r\n      j = result[result.length - 1]\r\n      if (arr[j] < arrI) {\r\n        p[i] = j\r\n        result.push(i)\r\n        continue\r\n      }\r\n      u = 0\r\n      v = result.length - 1\r\n      while (u < v) {\r\n        c = (u + v) >> 1\r\n        if (arr[result[c]] < arrI) {\r\n          u = c + 1\r\n        } else {\r\n          v = c\r\n        }\r\n      }\r\n      if (arrI < arr[result[u]]) {\r\n        if (u > 0) {\r\n          p[i] = result[u - 1]\r\n        }\r\n        result[u] = i\r\n      }\r\n    }\r\n  }\r\n  u = result.length\r\n  v = result[u - 1]\r\n  while (u-- > 0) {\r\n    result[u] = v\r\n    v = p[v]\r\n  }\r\n  return result\r\n}\r\n","import { VNode, VNodeChild, isVNode } from './vnode'\r\nimport {\r\n  pauseTracking,\r\n  resetTracking,\r\n  shallowReadonly,\r\n  proxyRefs,\r\n  EffectScope,\r\n  markRaw,\r\n  track,\r\n  TrackOpTypes,\r\n  ReactiveEffect\r\n} from '@vue/reactivity'\r\nimport {\r\n  ComponentPublicInstance,\r\n  PublicInstanceProxyHandlers,\r\n  createDevRenderContext,\r\n  exposePropsOnRenderContext,\r\n  exposeSetupStateOnRenderContext,\r\n  ComponentPublicInstanceConstructor,\r\n  publicPropertiesMap,\r\n  RuntimeCompiledPublicInstanceProxyHandlers\r\n} from './componentPublicInstance'\r\nimport {\r\n  ComponentPropsOptions,\r\n  NormalizedPropsOptions,\r\n  initProps,\r\n  normalizePropsOptions\r\n} from './componentProps'\r\nimport { Slots, initSlots, InternalSlots } from './componentSlots'\r\nimport { warn } from './warning'\r\nimport { ErrorCodes, callWithErrorHandling, handleError } from './errorHandling'\r\nimport { AppContext, createAppContext, AppConfig } from './apiCreateApp'\r\nimport { Directive, validateDirectiveName } from './directives'\r\nimport {\r\n  applyOptions,\r\n  ComponentOptions,\r\n  ComputedOptions,\r\n  MethodOptions\r\n} from './componentOptions'\r\nimport {\r\n  EmitsOptions,\r\n  ObjectEmitsOptions,\r\n  EmitFn,\r\n  emit,\r\n  normalizeEmitsOptions\r\n} from './componentEmits'\r\nimport {\r\n  EMPTY_OBJ,\r\n  isFunction,\r\n  NOOP,\r\n  isObject,\r\n  NO,\r\n  makeMap,\r\n  isPromise,\r\n  ShapeFlags,\r\n  extend\r\n} from '@vue/shared'\r\nimport { SuspenseBoundary } from './components/Suspense'\r\nimport { CompilerOptions } from '@vue/compiler-core'\r\nimport { markAttrsAccessed } from './componentRenderUtils'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { startMeasure, endMeasure } from './profiling'\r\nimport { convertLegacyRenderFn } from './compat/renderFn'\r\nimport {\r\n  CompatConfig,\r\n  globalCompatConfig,\r\n  validateCompatConfig\r\n} from './compat/compatConfig'\r\nimport { SchedulerJob } from './scheduler'\r\n\r\nexport type Data = Record<string, unknown>\r\n\r\n/**\r\n * For extending allowed non-declared props on components in TSX\r\n */\r\nexport interface ComponentCustomProps {}\r\n\r\n/**\r\n * Default allowed non-declared props on component in TSX\r\n */\r\nexport interface AllowedComponentProps {\r\n  class?: unknown\r\n  style?: unknown\r\n}\r\n\r\n// Note: can't mark this whole interface internal because some public interfaces\r\n// extend it.\r\nexport interface ComponentInternalOptions {\r\n  /**\r\n   * @internal\r\n   */\r\n  __scopeId?: string\r\n  /**\r\n   * @internal\r\n   */\r\n  __cssModules?: Data\r\n  /**\r\n   * @internal\r\n   */\r\n  __hmrId?: string\r\n  /**\r\n   * Compat build only, for bailing out of certain compatibility behavior\r\n   */\r\n  __isBuiltIn?: boolean\r\n  /**\r\n   * This one should be exposed so that devtools can make use of it\r\n   */\r\n  __file?: string\r\n  /**\r\n   * name inferred from filename\r\n   */\r\n  __name?: string\r\n}\r\n\r\nexport interface FunctionalComponent<P = {}, E extends EmitsOptions = {}>\r\n  extends ComponentInternalOptions {\r\n  // use of any here is intentional so it can be a valid JSX Element constructor\r\n  (props: P, ctx: Omit<SetupContext<E>, 'expose'>): any\r\n  props?: ComponentPropsOptions<P>\r\n  emits?: E | (keyof E)[]\r\n  inheritAttrs?: boolean\r\n  displayName?: string\r\n  compatConfig?: CompatConfig\r\n}\r\n\r\nexport interface ClassComponent {\r\n  new (...args: any[]): ComponentPublicInstance<any, any, any, any, any>\r\n  __vccOpts: ComponentOptions\r\n}\r\n\r\n/**\r\n * Concrete component type matches its actual value: it's either an options\r\n * object, or a function. Use this where the code expects to work with actual\r\n * values, e.g. checking if its a function or not. This is mostly for internal\r\n * implementation code.\r\n */\r\nexport type ConcreteComponent<\r\n  Props = {},\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions\r\n> =\r\n  | ComponentOptions<Props, RawBindings, D, C, M>\r\n  | FunctionalComponent<Props, any>\r\n\r\n/**\r\n * A type used in public APIs where a component type is expected.\r\n * The constructor type is an artificial type returned by defineComponent().\r\n */\r\nexport type Component<\r\n  Props = any,\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions\r\n> =\r\n  | ConcreteComponent<Props, RawBindings, D, C, M>\r\n  | ComponentPublicInstanceConstructor<Props>\r\n\r\nexport { ComponentOptions }\r\n\r\ntype LifecycleHook<TFn = Function> = TFn[] | null\r\n\r\nexport const enum LifecycleHooks {\r\n  BEFORE_CREATE = 'bc',\r\n  CREATED = 'c',\r\n  BEFORE_MOUNT = 'bm',\r\n  MOUNTED = 'm',\r\n  BEFORE_UPDATE = 'bu',\r\n  UPDATED = 'u',\r\n  BEFORE_UNMOUNT = 'bum',\r\n  UNMOUNTED = 'um',\r\n  DEACTIVATED = 'da',\r\n  ACTIVATED = 'a',\r\n  RENDER_TRIGGERED = 'rtg',\r\n  RENDER_TRACKED = 'rtc',\r\n  ERROR_CAPTURED = 'ec',\r\n  SERVER_PREFETCH = 'sp'\r\n}\r\n\r\nexport interface SetupContext<E = EmitsOptions> {\r\n  attrs: Data\r\n  slots: Slots\r\n  emit: EmitFn<E>\r\n  expose: (exposed?: Record<string, any>) => void\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type InternalRenderFunction = {\r\n  (\r\n    ctx: ComponentPublicInstance,\r\n    cache: ComponentInternalInstance['renderCache'],\r\n    // for compiler-optimized bindings\r\n    $props: ComponentInternalInstance['props'],\r\n    $setup: ComponentInternalInstance['setupState'],\r\n    $data: ComponentInternalInstance['data'],\r\n    $options: ComponentInternalInstance['ctx']\r\n  ): VNodeChild\r\n  _rc?: boolean // isRuntimeCompiled\r\n\r\n  // __COMPAT__ only\r\n  _compatChecked?: boolean // v3 and already checked for v2 compat\r\n  _compatWrapped?: boolean // is wrapped for v2 compat\r\n}\r\n\r\n/**\r\n * We expose a subset of properties on the internal instance as they are\r\n * useful for advanced external libraries and tools.\r\n */\r\nexport interface ComponentInternalInstance {\r\n  uid: number\r\n  type: ConcreteComponent\r\n  parent: ComponentInternalInstance | null\r\n  root: ComponentInternalInstance\r\n  appContext: AppContext\r\n  /**\r\n   * Vnode representing this component in its parent's vdom tree\r\n   */\r\n  vnode: VNode\r\n  /**\r\n   * The pending new vnode from parent updates\r\n   * @internal\r\n   */\r\n  next: VNode | null\r\n  /**\r\n   * Root vnode of this component's own vdom tree\r\n   */\r\n  subTree: VNode\r\n  /**\r\n   * Render effect instance\r\n   */\r\n  effect: ReactiveEffect\r\n  /**\r\n   * Bound effect runner to be passed to schedulers\r\n   */\r\n  update: SchedulerJob\r\n  /**\r\n   * The render function that returns vdom tree.\r\n   * @internal\r\n   */\r\n  render: InternalRenderFunction | null\r\n  /**\r\n   * SSR render function\r\n   * @internal\r\n   */\r\n  ssrRender?: Function | null\r\n  /**\r\n   * Object containing values this component provides for its descendents\r\n   * @internal\r\n   */\r\n  provides: Data\r\n  /**\r\n   * Tracking reactive effects (e.g. watchers) associated with this component\r\n   * so that they can be automatically stopped on component unmount\r\n   * @internal\r\n   */\r\n  scope: EffectScope\r\n  /**\r\n   * cache for proxy access type to avoid hasOwnProperty calls\r\n   * @internal\r\n   */\r\n  accessCache: Data | null\r\n  /**\r\n   * cache for render function values that rely on _ctx but won't need updates\r\n   * after initialized (e.g. inline handlers)\r\n   * @internal\r\n   */\r\n  renderCache: (Function | VNode)[]\r\n\r\n  /**\r\n   * Resolved component registry, only for components with mixins or extends\r\n   * @internal\r\n   */\r\n  components: Record<string, ConcreteComponent> | null\r\n  /**\r\n   * Resolved directive registry, only for components with mixins or extends\r\n   * @internal\r\n   */\r\n  directives: Record<string, Directive> | null\r\n  /**\r\n   * Resolved filters registry, v2 compat only\r\n   * @internal\r\n   */\r\n  filters?: Record<string, Function>\r\n  /**\r\n   * resolved props options\r\n   * @internal\r\n   */\r\n  propsOptions: NormalizedPropsOptions\r\n  /**\r\n   * resolved emits options\r\n   * @internal\r\n   */\r\n  emitsOptions: ObjectEmitsOptions | null\r\n  /**\r\n   * resolved inheritAttrs options\r\n   * @internal\r\n   */\r\n  inheritAttrs?: boolean\r\n  /**\r\n   * is custom element?\r\n   */\r\n  isCE?: boolean\r\n  /**\r\n   * custom element specific HMR method\r\n   */\r\n  ceReload?: (newStyles?: string[]) => void\r\n\r\n  // the rest are only for stateful components ---------------------------------\r\n\r\n  // main proxy that serves as the public instance (`this`)\r\n  proxy: ComponentPublicInstance | null\r\n\r\n  // exposed properties via expose()\r\n  exposed: Record<string, any> | null\r\n  exposeProxy: Record<string, any> | null\r\n\r\n  /**\r\n   * alternative proxy used only for runtime-compiled render functions using\r\n   * `with` block\r\n   * @internal\r\n   */\r\n  withProxy: ComponentPublicInstance | null\r\n  /**\r\n   * This is the target for the public instance proxy. It also holds properties\r\n   * injected by user options (computed, methods etc.) and user-attached\r\n   * custom properties (via `this.x = ...`)\r\n   * @internal\r\n   */\r\n  ctx: Data\r\n\r\n  // state\r\n  data: Data\r\n  props: Data\r\n  attrs: Data\r\n  slots: InternalSlots\r\n  refs: Data\r\n  emit: EmitFn\r\n  /**\r\n   * used for keeping track of .once event handlers on components\r\n   * @internal\r\n   */\r\n  emitted: Record<string, boolean> | null\r\n  /**\r\n   * used for caching the value returned from props default factory functions to\r\n   * avoid unnecessary watcher trigger\r\n   * @internal\r\n   */\r\n  propsDefaults: Data\r\n  /**\r\n   * setup related\r\n   * @internal\r\n   */\r\n  setupState: Data\r\n  /**\r\n   * devtools access to additional info\r\n   * @internal\r\n   */\r\n  devtoolsRawSetupState?: any\r\n  /**\r\n   * @internal\r\n   */\r\n  setupContext: SetupContext | null\r\n\r\n  /**\r\n   * suspense related\r\n   * @internal\r\n   */\r\n  suspense: SuspenseBoundary | null\r\n  /**\r\n   * suspense pending batch id\r\n   * @internal\r\n   */\r\n  suspenseId: number\r\n  /**\r\n   * @internal\r\n   */\r\n  asyncDep: Promise<any> | null\r\n  /**\r\n   * @internal\r\n   */\r\n  asyncResolved: boolean\r\n\r\n  // lifecycle\r\n  isMounted: boolean\r\n  isUnmounted: boolean\r\n  isDeactivated: boolean\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_CREATE]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.CREATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_MOUNT]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.MOUNTED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_UPDATE]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.UPDATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_UNMOUNT]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.UNMOUNTED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.RENDER_TRACKED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.RENDER_TRIGGERED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.ACTIVATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.DEACTIVATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.ERROR_CAPTURED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.SERVER_PREFETCH]: LifecycleHook<() => Promise<unknown>>\r\n\r\n  /**\r\n   * For caching bound $forceUpdate on public proxy access\r\n   */\r\n  f?: () => void\r\n  /**\r\n   * For caching bound $nextTick on public proxy access\r\n   */\r\n  n?: () => Promise<void>\r\n}\r\n\r\nconst emptyAppContext = createAppContext()\r\n\r\nlet uid = 0\r\n\r\nexport function createComponentInstance(\r\n  vnode: VNode,\r\n  parent: ComponentInternalInstance | null,\r\n  suspense: SuspenseBoundary | null\r\n) {\r\n  const type = vnode.type as ConcreteComponent\r\n  // inherit parent app context - or - if root, adopt from root vnode\r\n  const appContext =\r\n    (parent ? parent.appContext : vnode.appContext) || emptyAppContext\r\n\r\n  const instance: ComponentInternalInstance = {\r\n    uid: uid++,\r\n    vnode,\r\n    type,\r\n    parent,\r\n    appContext,\r\n    root: null!, // to be immediately set\r\n    next: null,\r\n    subTree: null!, // will be set synchronously right after creation\r\n    effect: null!,\r\n    update: null!, // will be set synchronously right after creation\r\n    scope: new EffectScope(true /* detached */),\r\n    render: null,\r\n    proxy: null,\r\n    exposed: null,\r\n    exposeProxy: null,\r\n    withProxy: null,\r\n    provides: parent ? parent.provides : Object.create(appContext.provides),\r\n    accessCache: null!,\r\n    renderCache: [],\r\n\r\n    // local resolved assets\r\n    components: null,\r\n    directives: null,\r\n\r\n    // resolved props and emits options\r\n    propsOptions: normalizePropsOptions(type, appContext),\r\n    emitsOptions: normalizeEmitsOptions(type, appContext),\r\n\r\n    // emit\r\n    emit: null!, // to be set immediately\r\n    emitted: null,\r\n\r\n    // props default value\r\n    propsDefaults: EMPTY_OBJ,\r\n\r\n    // inheritAttrs\r\n    inheritAttrs: type.inheritAttrs,\r\n\r\n    // state\r\n    ctx: EMPTY_OBJ,\r\n    data: EMPTY_OBJ,\r\n    props: EMPTY_OBJ,\r\n    attrs: EMPTY_OBJ,\r\n    slots: EMPTY_OBJ,\r\n    refs: EMPTY_OBJ,\r\n    setupState: EMPTY_OBJ,\r\n    setupContext: null,\r\n\r\n    // suspense related\r\n    suspense,\r\n    suspenseId: suspense ? suspense.pendingId : 0,\r\n    asyncDep: null,\r\n    asyncResolved: false,\r\n\r\n    // lifecycle hooks\r\n    // not using enums here because it results in computed properties\r\n    isMounted: false,\r\n    isUnmounted: false,\r\n    isDeactivated: false,\r\n    bc: null,\r\n    c: null,\r\n    bm: null,\r\n    m: null,\r\n    bu: null,\r\n    u: null,\r\n    um: null,\r\n    bum: null,\r\n    da: null,\r\n    a: null,\r\n    rtg: null,\r\n    rtc: null,\r\n    ec: null,\r\n    sp: null\r\n  }\r\n  if (__DEV__) {\r\n    instance.ctx = createDevRenderContext(instance)\r\n  } else {\r\n    instance.ctx = { _: instance }\r\n  }\r\n  instance.root = parent ? parent.root : instance\r\n  instance.emit = emit.bind(null, instance)\r\n\r\n  // apply custom element special handling\r\n  if (vnode.ce) {\r\n    vnode.ce(instance)\r\n  }\r\n\r\n  return instance\r\n}\r\n\r\nexport let currentInstance: ComponentInternalInstance | null = null\r\n\r\nexport const getCurrentInstance: () => ComponentInternalInstance | null = () =>\r\n  currentInstance || currentRenderingInstance\r\n\r\nexport const setCurrentInstance = (instance: ComponentInternalInstance) => {\r\n  currentInstance = instance\r\n  instance.scope.on()\r\n}\r\n\r\nexport const unsetCurrentInstance = () => {\r\n  currentInstance && currentInstance.scope.off()\r\n  currentInstance = null\r\n}\r\n\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component')\r\n\r\nexport function validateComponentName(name: string, config: AppConfig) {\r\n  const appIsNativeTag = config.isNativeTag || NO\r\n  if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n    warn(\r\n      'Do not use built-in or reserved HTML elements as component id: ' + name\r\n    )\r\n  }\r\n}\r\n\r\nexport function isStatefulComponent(instance: ComponentInternalInstance) {\r\n  return instance.vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT\r\n}\r\n\r\nexport let isInSSRComponentSetup = false\r\n\r\nexport function setupComponent(\r\n  instance: ComponentInternalInstance,\r\n  isSSR = false\r\n) {\r\n  isInSSRComponentSetup = isSSR\r\n\r\n  const { props, children } = instance.vnode\r\n  const isStateful = isStatefulComponent(instance)\r\n  initProps(instance, props, isStateful, isSSR)\r\n  initSlots(instance, children)\r\n\r\n  const setupResult = isStateful\r\n    ? setupStatefulComponent(instance, isSSR)\r\n    : undefined\r\n  isInSSRComponentSetup = false\r\n  return setupResult\r\n}\r\n\r\nfunction setupStatefulComponent(\r\n  instance: ComponentInternalInstance,\r\n  isSSR: boolean\r\n) {\r\n  const Component = instance.type as ComponentOptions\r\n\r\n  if (__DEV__) {\r\n    if (Component.name) {\r\n      validateComponentName(Component.name, instance.appContext.config)\r\n    }\r\n    if (Component.components) {\r\n      const names = Object.keys(Component.components)\r\n      for (let i = 0; i < names.length; i++) {\r\n        validateComponentName(names[i], instance.appContext.config)\r\n      }\r\n    }\r\n    if (Component.directives) {\r\n      const names = Object.keys(Component.directives)\r\n      for (let i = 0; i < names.length; i++) {\r\n        validateDirectiveName(names[i])\r\n      }\r\n    }\r\n    if (Component.compilerOptions && isRuntimeOnly()) {\r\n      warn(\r\n        `\"compilerOptions\" is only supported when using a build of Vue that ` +\r\n          `includes the runtime compiler. Since you are using a runtime-only ` +\r\n          `build, the options should be passed via your build tool config instead.`\r\n      )\r\n    }\r\n  }\r\n  // 0. create render proxy property access cache\r\n  instance.accessCache = Object.create(null)\r\n  // 1. create public instance / render proxy\r\n  // also mark it raw so it's never observed\r\n  instance.proxy = markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers))\r\n  if (__DEV__) {\r\n    exposePropsOnRenderContext(instance)\r\n  }\r\n  // 2. call setup()\r\n  const { setup } = Component\r\n  if (setup) {\r\n    const setupContext = (instance.setupContext =\r\n      setup.length > 1 ? createSetupContext(instance) : null)\r\n\r\n    setCurrentInstance(instance)\r\n    pauseTracking()\r\n    const setupResult = callWithErrorHandling(\r\n      setup,\r\n      instance,\r\n      ErrorCodes.SETUP_FUNCTION,\r\n      [__DEV__ ? shallowReadonly(instance.props) : instance.props, setupContext]\r\n    )\r\n    resetTracking()\r\n    unsetCurrentInstance()\r\n\r\n    if (isPromise(setupResult)) {\r\n      setupResult.then(unsetCurrentInstance, unsetCurrentInstance)\r\n      if (isSSR) {\r\n        // return the promise so server-renderer can wait on it\r\n        return setupResult\r\n          .then((resolvedResult: unknown) => {\r\n            handleSetupResult(instance, resolvedResult, isSSR)\r\n          })\r\n          .catch(e => {\r\n            handleError(e, instance, ErrorCodes.SETUP_FUNCTION)\r\n          })\r\n      } else if (__FEATURE_SUSPENSE__) {\r\n        // async setup returned Promise.\r\n        // bail here and wait for re-entry.\r\n        instance.asyncDep = setupResult\r\n        if (__DEV__ && !instance.suspense) {\r\n          const name = Component.name ?? 'Anonymous'\r\n          warn(\r\n            `Component <${name}>: setup function returned a promise, but no ` +\r\n              `<Suspense> boundary was found in the parent component tree. ` +\r\n              `A component with async setup() must be nested in a <Suspense> ` +\r\n              `in order to be rendered.`\r\n          )\r\n        }\r\n      } else if (__DEV__) {\r\n        warn(\r\n          `setup() returned a Promise, but the version of Vue you are using ` +\r\n            `does not support it yet.`\r\n        )\r\n      }\r\n    } else {\r\n      handleSetupResult(instance, setupResult, isSSR)\r\n    }\r\n  } else {\r\n    finishComponentSetup(instance, isSSR)\r\n  }\r\n}\r\n\r\nexport function handleSetupResult(\r\n  instance: ComponentInternalInstance,\r\n  setupResult: unknown,\r\n  isSSR: boolean\r\n) {\r\n  if (isFunction(setupResult)) {\r\n    // setup returned an inline render function\r\n    if (__SSR__ && (instance.type as ComponentOptions).__ssrInlineRender) {\r\n      // when the function's name is `ssrRender` (compiled by SFC inline mode),\r\n      // set it as ssrRender instead.\r\n      instance.ssrRender = setupResult\r\n    } else {\r\n      instance.render = setupResult as InternalRenderFunction\r\n    }\r\n  } else if (isObject(setupResult)) {\r\n    if (__DEV__ && isVNode(setupResult)) {\r\n      warn(\r\n        `setup() should not return VNodes directly - ` +\r\n          `return a render function instead.`\r\n      )\r\n    }\r\n    // setup returned bindings.\r\n    // assuming a render function compiled from template is present.\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      instance.devtoolsRawSetupState = setupResult\r\n    }\r\n    instance.setupState = proxyRefs(setupResult)\r\n    if (__DEV__) {\r\n      exposeSetupStateOnRenderContext(instance)\r\n    }\r\n  } else if (__DEV__ && setupResult !== undefined) {\r\n    warn(\r\n      `setup() should return an object. Received: ${\r\n        setupResult === null ? 'null' : typeof setupResult\r\n      }`\r\n    )\r\n  }\r\n  finishComponentSetup(instance, isSSR)\r\n}\r\n\r\ntype CompileFunction = (\r\n  template: string | object,\r\n  options?: CompilerOptions\r\n) => InternalRenderFunction\r\n\r\nlet compile: CompileFunction | undefined\r\nlet installWithProxy: (i: ComponentInternalInstance) => void\r\n\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nexport function registerRuntimeCompiler(_compile: any) {\r\n  compile = _compile\r\n  installWithProxy = i => {\r\n    if (i.render!._rc) {\r\n      i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers)\r\n    }\r\n  }\r\n}\r\n\r\n// dev only\r\nexport const isRuntimeOnly = () => !compile\r\n\r\nexport function finishComponentSetup(\r\n  instance: ComponentInternalInstance,\r\n  isSSR: boolean,\r\n  skipOptions?: boolean\r\n) {\r\n  const Component = instance.type as ComponentOptions\r\n\r\n  if (__COMPAT__) {\r\n    convertLegacyRenderFn(instance)\r\n\r\n    if (__DEV__ && Component.compatConfig) {\r\n      validateCompatConfig(Component.compatConfig)\r\n    }\r\n  }\r\n\r\n  // template / render function normalization\r\n  // could be already set when returned from setup()\r\n  if (!instance.render) {\r\n    // only do on-the-fly compile if not in SSR - SSR on-the-fly compilation\r\n    // is done by server-renderer\r\n    if (!isSSR && compile && !Component.render) {\r\n      const template =\r\n        (__COMPAT__ &&\r\n          instance.vnode.props &&\r\n          instance.vnode.props['inline-template']) ||\r\n        Component.template\r\n      if (template) {\r\n        if (__DEV__) {\r\n          startMeasure(instance, `compile`)\r\n        }\r\n        const { isCustomElement, compilerOptions } = instance.appContext.config\r\n        const { delimiters, compilerOptions: componentCompilerOptions } =\r\n          Component\r\n        const finalCompilerOptions: CompilerOptions = extend(\r\n          extend(\r\n            {\r\n              isCustomElement,\r\n              delimiters\r\n            },\r\n            compilerOptions\r\n          ),\r\n          componentCompilerOptions\r\n        )\r\n        if (__COMPAT__) {\r\n          // pass runtime compat config into the compiler\r\n          finalCompilerOptions.compatConfig = Object.create(globalCompatConfig)\r\n          if (Component.compatConfig) {\r\n            // @ts-expect-error types are not compatible\r\n            extend(finalCompilerOptions.compatConfig, Component.compatConfig)\r\n          }\r\n        }\r\n        Component.render = compile(template, finalCompilerOptions)\r\n        if (__DEV__) {\r\n          endMeasure(instance, `compile`)\r\n        }\r\n      }\r\n    }\r\n\r\n    instance.render = (Component.render || NOOP) as InternalRenderFunction\r\n\r\n    // for runtime-compiled render functions using `with` blocks, the render\r\n    // proxy used needs a different `has` handler which is more performant and\r\n    // also only allows a whitelist of globals to fallthrough.\r\n    if (installWithProxy) {\r\n      installWithProxy(instance)\r\n    }\r\n  }\r\n\r\n  // support for 2.x options\r\n  if (__FEATURE_OPTIONS_API__ && !(__COMPAT__ && skipOptions)) {\r\n    setCurrentInstance(instance)\r\n    pauseTracking()\r\n    applyOptions(instance)\r\n    resetTracking()\r\n    unsetCurrentInstance()\r\n  }\r\n\r\n  // warn missing template/render\r\n  // the runtime compilation of template in SSR is done by server-render\r\n  if (__DEV__ && !Component.render && instance.render === NOOP && !isSSR) {\r\n    /* istanbul ignore if */\r\n    if (!compile && Component.template) {\r\n      warn(\r\n        `Component provided template option but ` +\r\n          `runtime compilation is not supported in this build of Vue.` +\r\n          (__ESM_BUNDLER__\r\n            ? ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n            : __ESM_BROWSER__\r\n            ? ` Use \"vue.esm-browser.js\" instead.`\r\n            : __GLOBAL__\r\n            ? ` Use \"vue.global.js\" instead.`\r\n            : ``) /* should not happen */\r\n      )\r\n    } else {\r\n      warn(`Component is missing template or render function.`)\r\n    }\r\n  }\r\n}\r\n\r\nfunction createAttrsProxy(instance: ComponentInternalInstance): Data {\r\n  return new Proxy(\r\n    instance.attrs,\r\n    __DEV__\r\n      ? {\r\n          get(target, key: string) {\r\n            markAttrsAccessed()\r\n            track(instance, TrackOpTypes.GET, '$attrs')\r\n            return target[key]\r\n          },\r\n          set() {\r\n            warn(`setupContext.attrs is readonly.`)\r\n            return false\r\n          },\r\n          deleteProperty() {\r\n            warn(`setupContext.attrs is readonly.`)\r\n            return false\r\n          }\r\n        }\r\n      : {\r\n          get(target, key: string) {\r\n            track(instance, TrackOpTypes.GET, '$attrs')\r\n            return target[key]\r\n          }\r\n        }\r\n  )\r\n}\r\n\r\nexport function createSetupContext(\r\n  instance: ComponentInternalInstance\r\n): SetupContext {\r\n  const expose: SetupContext['expose'] = exposed => {\r\n    if (__DEV__ && instance.exposed) {\r\n      warn(`expose() should be called only once per setup().`)\r\n    }\r\n    instance.exposed = exposed || {}\r\n  }\r\n\r\n  let attrs: Data\r\n  if (__DEV__) {\r\n    // We use getters in dev in case libs like test-utils overwrite instance\r\n    // properties (overwrites should not be done in prod)\r\n    return Object.freeze({\r\n      get attrs() {\r\n        return attrs || (attrs = createAttrsProxy(instance))\r\n      },\r\n      get slots() {\r\n        return shallowReadonly(instance.slots)\r\n      },\r\n      get emit() {\r\n        return (event: string, ...args: any[]) => instance.emit(event, ...args)\r\n      },\r\n      expose\r\n    })\r\n  } else {\r\n    return {\r\n      get attrs() {\r\n        return attrs || (attrs = createAttrsProxy(instance))\r\n      },\r\n      slots: instance.slots,\r\n      emit: instance.emit,\r\n      expose\r\n    }\r\n  }\r\n}\r\n\r\nexport function getExposeProxy(instance: ComponentInternalInstance) {\r\n  if (instance.exposed) {\r\n    return (\r\n      instance.exposeProxy ||\r\n      (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\r\n        get(target, key: string) {\r\n          if (key in target) {\r\n            return target[key]\r\n          } else if (key in publicPropertiesMap) {\r\n            return publicPropertiesMap[key](instance)\r\n          }\r\n        }\r\n      }))\r\n    )\r\n  }\r\n}\r\n\r\nconst classifyRE = /(?:^|[-_])(\\w)/g\r\nconst classify = (str: string): string =>\r\n  str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '')\r\n\r\nexport function getComponentName(\r\n  Component: ConcreteComponent,\r\n  includeInferred = true\r\n): string | false | undefined {\r\n  return isFunction(Component)\r\n    ? Component.displayName || Component.name\r\n    : Component.name || (includeInferred && Component.__name)\r\n}\r\n\r\n/* istanbul ignore next */\r\nexport function formatComponentName(\r\n  instance: ComponentInternalInstance | null,\r\n  Component: ConcreteComponent,\r\n  isRoot = false\r\n): string {\r\n  let name = getComponentName(Component)\r\n  if (!name && Component.__file) {\r\n    const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/)\r\n    if (match) {\r\n      name = match[1]\r\n    }\r\n  }\r\n\r\n  if (!name && instance && instance.parent) {\r\n    // try to infer the name based on reverse resolution\r\n    const inferFromRegistry = (registry: Record<string, any> | undefined) => {\r\n      for (const key in registry) {\r\n        if (registry[key] === Component) {\r\n          return key\r\n        }\r\n      }\r\n    }\r\n    name =\r\n      inferFromRegistry(\r\n        instance.components ||\r\n          (instance.parent.type as ComponentOptions).components\r\n      ) || inferFromRegistry(instance.appContext.components)\r\n  }\r\n\r\n  return name ? classify(name) : isRoot ? `App` : `Anonymous`\r\n}\r\n\r\nexport function isClassComponent(value: unknown): value is ClassComponent {\r\n  return isFunction(value) && '__vccOpts' in value\r\n}\r\n","import { ComponentInternalInstance } from '../component'\r\nimport { SuspenseBoundary } from './Suspense'\r\nimport {\r\n  RendererInternals,\r\n  MoveType,\r\n  RendererElement,\r\n  RendererNode,\r\n  RendererOptions,\r\n  traverseStaticChildren\r\n} from '../renderer'\r\nimport { VNode, VNodeArrayChildren, VNodeProps } from '../vnode'\r\nimport { isString, ShapeFlags } from '@vue/shared'\r\nimport { warn } from '../warning'\r\nimport { isHmrUpdating } from '../hmr'\r\n\r\nexport type TeleportVNode = VNode<RendererNode, RendererElement, TeleportProps>\r\n\r\nexport interface TeleportProps {\r\n  to: string | RendererElement | null | undefined\r\n  disabled?: boolean\r\n}\r\n\r\nexport const isTeleport = (type: any): boolean => type.__isTeleport\r\n\r\nconst isTeleportDisabled = (props: VNode['props']): boolean =>\r\n  props && (props.disabled || props.disabled === '')\r\n\r\nconst isTargetSVG = (target: RendererElement): boolean =>\r\n  typeof SVGElement !== 'undefined' && target instanceof SVGElement\r\n\r\nconst resolveTarget = <T = RendererElement>(\r\n  props: TeleportProps | null,\r\n  select: RendererOptions['querySelector']\r\n): T | null => {\r\n  const targetSelector = props && props.to\r\n  if (isString(targetSelector)) {\r\n    if (!select) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Current renderer does not support string target for Teleports. ` +\r\n            `(missing querySelector renderer option)`\r\n        )\r\n      return null\r\n    } else {\r\n      const target = select(targetSelector)\r\n      if (!target) {\r\n        __DEV__ &&\r\n          warn(\r\n            `Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n              `Note the target element must exist before the component is mounted - ` +\r\n              `i.e. the target cannot be rendered by the component itself, and ` +\r\n              `ideally should be outside of the entire Vue component tree.`\r\n          )\r\n      }\r\n      return target as any\r\n    }\r\n  } else {\r\n    if (__DEV__ && !targetSelector && !isTeleportDisabled(props)) {\r\n      warn(`Invalid Teleport target: ${targetSelector}`)\r\n    }\r\n    return targetSelector as any\r\n  }\r\n}\r\n\r\nexport const TeleportImpl = {\r\n  __isTeleport: true,\r\n  process(\r\n    n1: TeleportVNode | null,\r\n    n2: TeleportVNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n    internals: RendererInternals\r\n  ) {\r\n    const {\r\n      mc: mountChildren,\r\n      pc: patchChildren,\r\n      pbc: patchBlockChildren,\r\n      o: { insert, querySelector, createText, createComment }\r\n    } = internals\r\n\r\n    const disabled = isTeleportDisabled(n2.props)\r\n    let { shapeFlag, children, dynamicChildren } = n2\r\n\r\n    // #3302\r\n    // HMR updated, force full diff\r\n    if (__DEV__ && isHmrUpdating) {\r\n      optimized = false\r\n      dynamicChildren = null\r\n    }\r\n\r\n    if (n1 == null) {\r\n      // insert anchors in the main view\r\n      const placeholder = (n2.el = __DEV__\r\n        ? createComment('teleport start')\r\n        : createText(''))\r\n      const mainAnchor = (n2.anchor = __DEV__\r\n        ? createComment('teleport end')\r\n        : createText(''))\r\n      insert(placeholder, container, anchor)\r\n      insert(mainAnchor, container, anchor)\r\n      const target = (n2.target = resolveTarget(n2.props, querySelector))\r\n      const targetAnchor = (n2.targetAnchor = createText(''))\r\n      if (target) {\r\n        insert(targetAnchor, target)\r\n        // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n        isSVG = isSVG || isTargetSVG(target)\r\n      } else if (__DEV__ && !disabled) {\r\n        warn('Invalid Teleport target on mount:', target, `(${typeof target})`)\r\n      }\r\n\r\n      const mount = (container: RendererElement, anchor: RendererNode) => {\r\n        // Teleport *always* has Array children. This is enforced in both the\r\n        // compiler and vnode children normalization.\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          mountChildren(\r\n            children as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        }\r\n      }\r\n\r\n      if (disabled) {\r\n        mount(container, mainAnchor)\r\n      } else if (target) {\r\n        mount(target, targetAnchor)\r\n      }\r\n    } else {\r\n      // update content\r\n      n2.el = n1.el\r\n      const mainAnchor = (n2.anchor = n1.anchor)!\r\n      const target = (n2.target = n1.target)!\r\n      const targetAnchor = (n2.targetAnchor = n1.targetAnchor)!\r\n      const wasDisabled = isTeleportDisabled(n1.props)\r\n      const currentContainer = wasDisabled ? container : target\r\n      const currentAnchor = wasDisabled ? mainAnchor : targetAnchor\r\n      isSVG = isSVG || isTargetSVG(target)\r\n\r\n      if (dynamicChildren) {\r\n        // fast path when the teleport happens to be a block root\r\n        patchBlockChildren(\r\n          n1.dynamicChildren!,\r\n          dynamicChildren,\r\n          currentContainer,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds\r\n        )\r\n        // even in block tree mode we need to make sure all root-level nodes\r\n        // in the teleport inherit previous DOM references so that they can\r\n        // be moved in future patches.\r\n        traverseStaticChildren(n1, n2, true)\r\n      } else if (!optimized) {\r\n        patchChildren(\r\n          n1,\r\n          n2,\r\n          currentContainer,\r\n          currentAnchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          false\r\n        )\r\n      }\r\n\r\n      if (disabled) {\r\n        if (!wasDisabled) {\r\n          // enabled -> disabled\r\n          // move into main container\r\n          moveTeleport(\r\n            n2,\r\n            container,\r\n            mainAnchor,\r\n            internals,\r\n            TeleportMoveTypes.TOGGLE\r\n          )\r\n        }\r\n      } else {\r\n        // target changed\r\n        if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n          const nextTarget = (n2.target = resolveTarget(\r\n            n2.props,\r\n            querySelector\r\n          ))\r\n          if (nextTarget) {\r\n            moveTeleport(\r\n              n2,\r\n              nextTarget,\r\n              null,\r\n              internals,\r\n              TeleportMoveTypes.TARGET_CHANGE\r\n            )\r\n          } else if (__DEV__) {\r\n            warn(\r\n              'Invalid Teleport target on update:',\r\n              target,\r\n              `(${typeof target})`\r\n            )\r\n          }\r\n        } else if (wasDisabled) {\r\n          // disabled -> enabled\r\n          // move into teleport target\r\n          moveTeleport(\r\n            n2,\r\n            target,\r\n            targetAnchor,\r\n            internals,\r\n            TeleportMoveTypes.TOGGLE\r\n          )\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  remove(\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    optimized: boolean,\r\n    { um: unmount, o: { remove: hostRemove } }: RendererInternals,\r\n    doRemove: Boolean\r\n  ) {\r\n    const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode\r\n\r\n    if (target) {\r\n      hostRemove(targetAnchor!)\r\n    }\r\n\r\n    // an unmounted teleport should always remove its children if not disabled\r\n    if (doRemove || !isTeleportDisabled(props)) {\r\n      hostRemove(anchor!)\r\n      if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        for (let i = 0; i < (children as VNode[]).length; i++) {\r\n          const child = (children as VNode[])[i]\r\n          unmount(\r\n            child,\r\n            parentComponent,\r\n            parentSuspense,\r\n            true,\r\n            !!child.dynamicChildren\r\n          )\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  move: moveTeleport,\r\n  hydrate: hydrateTeleport\r\n}\r\n\r\nexport const enum TeleportMoveTypes {\r\n  TARGET_CHANGE,\r\n  TOGGLE, // enable / disable\r\n  REORDER // moved in the main view\r\n}\r\n\r\nfunction moveTeleport(\r\n  vnode: VNode,\r\n  container: RendererElement,\r\n  parentAnchor: RendererNode | null,\r\n  { o: { insert }, m: move }: RendererInternals,\r\n  moveType: TeleportMoveTypes = TeleportMoveTypes.REORDER\r\n) {\r\n  // move target anchor if this is a target change.\r\n  if (moveType === TeleportMoveTypes.TARGET_CHANGE) {\r\n    insert(vnode.targetAnchor!, container, parentAnchor)\r\n  }\r\n  const { el, anchor, shapeFlag, children, props } = vnode\r\n  const isReorder = moveType === TeleportMoveTypes.REORDER\r\n  // move main view anchor if this is a re-order.\r\n  if (isReorder) {\r\n    insert(el!, container, parentAnchor)\r\n  }\r\n  // if this is a re-order and teleport is enabled (content is in target)\r\n  // do not move children. So the opposite is: only move children if this\r\n  // is not a reorder, or the teleport is disabled\r\n  if (!isReorder || isTeleportDisabled(props)) {\r\n    // Teleport has either Array children or no children.\r\n    if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n      for (let i = 0; i < (children as VNode[]).length; i++) {\r\n        move(\r\n          (children as VNode[])[i],\r\n          container,\r\n          parentAnchor,\r\n          MoveType.REORDER\r\n        )\r\n      }\r\n    }\r\n  }\r\n  // move main view anchor if this is a re-order.\r\n  if (isReorder) {\r\n    insert(anchor!, container, parentAnchor)\r\n  }\r\n}\r\n\r\ninterface TeleportTargetElement extends Element {\r\n  // last teleport target\r\n  _lpa?: Node | null\r\n}\r\n\r\nfunction hydrateTeleport(\r\n  node: Node,\r\n  vnode: TeleportVNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  {\r\n    o: { nextSibling, parentNode, querySelector }\r\n  }: RendererInternals<Node, Element>,\r\n  hydrateChildren: (\r\n    node: Node | null,\r\n    vnode: VNode,\r\n    container: Element,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => Node | null\r\n): Node | null {\r\n  const target = (vnode.target = resolveTarget<Element>(\r\n    vnode.props,\r\n    querySelector\r\n  ))\r\n  if (target) {\r\n    // if multiple teleports rendered to the same target element, we need to\r\n    // pick up from where the last teleport finished instead of the first node\r\n    const targetNode =\r\n      (target as TeleportTargetElement)._lpa || target.firstChild\r\n    if (vnode.shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n      if (isTeleportDisabled(vnode.props)) {\r\n        vnode.anchor = hydrateChildren(\r\n          nextSibling(node),\r\n          vnode,\r\n          parentNode(node)!,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        vnode.targetAnchor = targetNode\r\n      } else {\r\n        vnode.anchor = nextSibling(node)\r\n\r\n        // lookahead until we find the target anchor\r\n        // we cannot rely on return value of hydrateChildren() because there\r\n        // could be nested teleports\r\n        let targetAnchor = targetNode\r\n        while (targetAnchor) {\r\n          targetAnchor = nextSibling(targetAnchor)\r\n          if (\r\n            targetAnchor &&\r\n            targetAnchor.nodeType === 8 &&\r\n            (targetAnchor as Comment).data === 'teleport anchor'\r\n          ) {\r\n            vnode.targetAnchor = targetAnchor\r\n            ;(target as TeleportTargetElement)._lpa =\r\n              vnode.targetAnchor && nextSibling(vnode.targetAnchor as Node)\r\n            break\r\n          }\r\n        }\r\n\r\n        hydrateChildren(\r\n          targetNode,\r\n          vnode,\r\n          target,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      }\r\n    }\r\n  }\r\n  return vnode.anchor && nextSibling(vnode.anchor as Node)\r\n}\r\n\r\n// Force-casted public typing for h and TSX props inference\r\nexport const Teleport = TeleportImpl as any as {\r\n  __isTeleport: true\r\n  new (): { $props: VNodeProps & TeleportProps }\r\n}\r\n","import {\r\n  isArray,\r\n  isFunction,\r\n  isString,\r\n  isObject,\r\n  EMPTY_ARR,\r\n  extend,\r\n  normalizeClass,\r\n  normalizeStyle,\r\n  PatchFlags,\r\n  ShapeFlags,\r\n  SlotFlags,\r\n  isOn\r\n} from '@vue/shared'\r\nimport {\r\n  ComponentInternalInstance,\r\n  Data,\r\n  ConcreteComponent,\r\n  ClassComponent,\r\n  Component,\r\n  isClassComponent\r\n} from './component'\r\nimport { RawSlots } from './componentSlots'\r\nimport { isProxy, Ref, toRaw, ReactiveFlags, isRef } from '@vue/reactivity'\r\nimport { AppContext } from './apiCreateApp'\r\nimport {\r\n  SuspenseImpl,\r\n  isSuspense,\r\n  SuspenseBoundary\r\n} from './components/Suspense'\r\nimport { DirectiveBinding } from './directives'\r\nimport { TransitionHooks } from './components/BaseTransition'\r\nimport { warn } from './warning'\r\nimport { TeleportImpl, isTeleport } from './components/Teleport'\r\nimport {\r\n  currentRenderingInstance,\r\n  currentScopeId\r\n} from './componentRenderContext'\r\nimport { RendererNode, RendererElement } from './renderer'\r\nimport { NULL_DYNAMIC_COMPONENT } from './helpers/resolveAssets'\r\nimport { hmrDirtyComponents } from './hmr'\r\nimport { convertLegacyComponent } from './compat/component'\r\nimport { convertLegacyVModelProps } from './compat/componentVModel'\r\nimport { defineLegacyVNodeProperties } from './compat/renderFn'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from './errorHandling'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\n\r\nexport const Fragment = Symbol(__DEV__ ? 'Fragment' : undefined) as any as {\r\n  __isFragment: true\r\n  new (): {\r\n    $props: VNodeProps\r\n  }\r\n}\r\nexport const Text = Symbol(__DEV__ ? 'Text' : undefined)\r\nexport const Comment = Symbol(__DEV__ ? 'Comment' : undefined)\r\nexport const Static = Symbol(__DEV__ ? 'Static' : undefined)\r\n\r\nexport type VNodeTypes =\r\n  | string\r\n  | VNode\r\n  | Component\r\n  | typeof Text\r\n  | typeof Static\r\n  | typeof Comment\r\n  | typeof Fragment\r\n  | typeof TeleportImpl\r\n  | typeof SuspenseImpl\r\n\r\nexport type VNodeRef =\r\n  | string\r\n  | Ref\r\n  | ((\r\n      ref: Element | ComponentPublicInstance | null,\r\n      refs: Record<string, any>\r\n    ) => void)\r\n\r\nexport type VNodeNormalizedRefAtom = {\r\n  i: ComponentInternalInstance\r\n  r: VNodeRef\r\n  k?: string // setup ref key\r\n  f?: boolean // refInFor marker\r\n}\r\n\r\nexport type VNodeNormalizedRef =\r\n  | VNodeNormalizedRefAtom\r\n  | VNodeNormalizedRefAtom[]\r\n\r\ntype VNodeMountHook = (vnode: VNode) => void\r\ntype VNodeUpdateHook = (vnode: VNode, oldVNode: VNode) => void\r\nexport type VNodeHook =\r\n  | VNodeMountHook\r\n  | VNodeUpdateHook\r\n  | VNodeMountHook[]\r\n  | VNodeUpdateHook[]\r\n\r\n// https://github.com/microsoft/TypeScript/issues/33099\r\nexport type VNodeProps = {\r\n  key?: string | number | symbol\r\n  ref?: VNodeRef\r\n  ref_for?: boolean\r\n  ref_key?: string\r\n\r\n  // vnode hooks\r\n  onVnodeBeforeMount?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeMounted?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeBeforeUpdate?: VNodeUpdateHook | VNodeUpdateHook[]\r\n  onVnodeUpdated?: VNodeUpdateHook | VNodeUpdateHook[]\r\n  onVnodeBeforeUnmount?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeUnmounted?: VNodeMountHook | VNodeMountHook[]\r\n}\r\n\r\ntype VNodeChildAtom =\r\n  | VNode\r\n  | string\r\n  | number\r\n  | boolean\r\n  | null\r\n  | undefined\r\n  | void\r\n\r\nexport type VNodeArrayChildren = Array<VNodeArrayChildren | VNodeChildAtom>\r\n\r\nexport type VNodeChild = VNodeChildAtom | VNodeArrayChildren\r\n\r\nexport type VNodeNormalizedChildren =\r\n  | string\r\n  | VNodeArrayChildren\r\n  | RawSlots\r\n  | null\r\n\r\nexport interface VNode<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement,\r\n  ExtraProps = { [key: string]: any }\r\n> {\r\n  /**\r\n   * @internal\r\n   */\r\n  __v_isVNode: true\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  [ReactiveFlags.SKIP]: true\r\n\r\n  type: VNodeTypes\r\n  props: (VNodeProps & ExtraProps) | null\r\n  key: string | number | symbol | null\r\n  ref: VNodeNormalizedRef | null\r\n  /**\r\n   * SFC only. This is assigned on vnode creation using currentScopeId\r\n   * which is set alongside currentRenderingInstance.\r\n   */\r\n  scopeId: string | null\r\n  /**\r\n   * SFC only. This is assigned to:\r\n   * - Slot fragment vnodes with :slotted SFC styles.\r\n   * - Component vnodes (during patch/hydration) so that its root node can\r\n   *   inherit the component's slotScopeIds\r\n   * @internal\r\n   */\r\n  slotScopeIds: string[] | null\r\n  children: VNodeNormalizedChildren\r\n  component: ComponentInternalInstance | null\r\n  dirs: DirectiveBinding[] | null\r\n  transition: TransitionHooks<HostElement> | null\r\n\r\n  // DOM\r\n  el: HostNode | null\r\n  anchor: HostNode | null // fragment anchor\r\n  target: HostElement | null // teleport target\r\n  targetAnchor: HostNode | null // teleport target anchor\r\n  /**\r\n   * number of elements contained in a static vnode\r\n   * @internal\r\n   */\r\n  staticCount: number\r\n\r\n  // suspense\r\n  suspense: SuspenseBoundary | null\r\n  /**\r\n   * @internal\r\n   */\r\n  ssContent: VNode | null\r\n  /**\r\n   * @internal\r\n   */\r\n  ssFallback: VNode | null\r\n\r\n  // optimization only\r\n  shapeFlag: number\r\n  patchFlag: number\r\n  /**\r\n   * @internal\r\n   */\r\n  dynamicProps: string[] | null\r\n  /**\r\n   * @internal\r\n   */\r\n  dynamicChildren: VNode[] | null\r\n\r\n  // application root node only\r\n  appContext: AppContext | null\r\n\r\n  /**\r\n   * @internal attached by v-memo\r\n   */\r\n  memo?: any[]\r\n  /**\r\n   * @internal __COMPAT__ only\r\n   */\r\n  isCompatRoot?: true\r\n  /**\r\n   * @internal custom element interception hook\r\n   */\r\n  ce?: (instance: ComponentInternalInstance) => void\r\n}\r\n\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nexport const blockStack: (VNode[] | null)[] = []\r\nexport let currentBlock: VNode[] | null = null\r\n\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nexport function openBlock(disableTracking = false) {\r\n  blockStack.push((currentBlock = disableTracking ? null : []))\r\n}\r\n\r\nexport function closeBlock() {\r\n  blockStack.pop()\r\n  currentBlock = blockStack[blockStack.length - 1] || null\r\n}\r\n\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nexport let isBlockTreeEnabled = 1\r\n\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nexport function setBlockTracking(value: number) {\r\n  isBlockTreeEnabled += value\r\n}\r\n\r\nfunction setupBlock(vnode: VNode) {\r\n  // save current block children on the block vnode\r\n  vnode.dynamicChildren =\r\n    isBlockTreeEnabled > 0 ? currentBlock || (EMPTY_ARR as any) : null\r\n  // close block\r\n  closeBlock()\r\n  // a block is always going to be patched, so track it as a child of its\r\n  // parent block\r\n  if (isBlockTreeEnabled > 0 && currentBlock) {\r\n    currentBlock.push(vnode)\r\n  }\r\n  return vnode\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createElementBlock(\r\n  type: string | typeof Fragment,\r\n  props?: Record<string, any> | null,\r\n  children?: any,\r\n  patchFlag?: number,\r\n  dynamicProps?: string[],\r\n  shapeFlag?: number\r\n) {\r\n  return setupBlock(\r\n    createBaseVNode(\r\n      type,\r\n      props,\r\n      children,\r\n      patchFlag,\r\n      dynamicProps,\r\n      shapeFlag,\r\n      true /* isBlock */\r\n    )\r\n  )\r\n}\r\n\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nexport function createBlock(\r\n  type: VNodeTypes | ClassComponent,\r\n  props?: Record<string, any> | null,\r\n  children?: any,\r\n  patchFlag?: number,\r\n  dynamicProps?: string[]\r\n): VNode {\r\n  return setupBlock(\r\n    createVNode(\r\n      type,\r\n      props,\r\n      children,\r\n      patchFlag,\r\n      dynamicProps,\r\n      true /* isBlock: prevent a block from tracking itself */\r\n    )\r\n  )\r\n}\r\n\r\nexport function isVNode(value: any): value is VNode {\r\n  return value ? value.__v_isVNode === true : false\r\n}\r\n\r\nexport function isSameVNodeType(n1: VNode, n2: VNode): boolean {\r\n  if (\r\n    __DEV__ &&\r\n    n2.shapeFlag & ShapeFlags.COMPONENT &&\r\n    hmrDirtyComponents.has(n2.type as ConcreteComponent)\r\n  ) {\r\n    // HMR only: if the component has been hot-updated, force a reload.\r\n    return false\r\n  }\r\n  return n1.type === n2.type && n1.key === n2.key\r\n}\r\n\r\nlet vnodeArgsTransformer:\r\n  | ((\r\n      args: Parameters<typeof _createVNode>,\r\n      instance: ComponentInternalInstance | null\r\n    ) => Parameters<typeof _createVNode>)\r\n  | undefined\r\n\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nexport function transformVNodeArgs(transformer?: typeof vnodeArgsTransformer) {\r\n  vnodeArgsTransformer = transformer\r\n}\r\n\r\nconst createVNodeWithArgsTransform = (\r\n  ...args: Parameters<typeof _createVNode>\r\n): VNode => {\r\n  return _createVNode(\r\n    ...(vnodeArgsTransformer\r\n      ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n      : args)\r\n  )\r\n}\r\n\r\nexport const InternalObjectKey = `__vInternal`\r\n\r\nconst normalizeKey = ({ key }: VNodeProps): VNode['key'] =>\r\n  key != null ? key : null\r\n\r\nconst normalizeRef = ({\r\n  ref,\r\n  ref_key,\r\n  ref_for\r\n}: VNodeProps): VNodeNormalizedRefAtom | null => {\r\n  return (\r\n    ref != null\r\n      ? isString(ref) || isRef(ref) || isFunction(ref)\r\n        ? { i: currentRenderingInstance, r: ref, k: ref_key, f: !!ref_for }\r\n        : ref\r\n      : null\r\n  ) as any\r\n}\r\n\r\nfunction createBaseVNode(\r\n  type: VNodeTypes | ClassComponent | typeof NULL_DYNAMIC_COMPONENT,\r\n  props: (Data & VNodeProps) | null = null,\r\n  children: unknown = null,\r\n  patchFlag = 0,\r\n  dynamicProps: string[] | null = null,\r\n  shapeFlag = type === Fragment ? 0 : ShapeFlags.ELEMENT,\r\n  isBlockNode = false,\r\n  needFullChildrenNormalization = false\r\n) {\r\n  const vnode = {\r\n    __v_isVNode: true,\r\n    __v_skip: true,\r\n    type,\r\n    props,\r\n    key: props && normalizeKey(props),\r\n    ref: props && normalizeRef(props),\r\n    scopeId: currentScopeId,\r\n    slotScopeIds: null,\r\n    children,\r\n    component: null,\r\n    suspense: null,\r\n    ssContent: null,\r\n    ssFallback: null,\r\n    dirs: null,\r\n    transition: null,\r\n    el: null,\r\n    anchor: null,\r\n    target: null,\r\n    targetAnchor: null,\r\n    staticCount: 0,\r\n    shapeFlag,\r\n    patchFlag,\r\n    dynamicProps,\r\n    dynamicChildren: null,\r\n    appContext: null\r\n  } as VNode\r\n\r\n  if (needFullChildrenNormalization) {\r\n    normalizeChildren(vnode, children)\r\n    // normalize suspense children\r\n    if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n      ;(type as typeof SuspenseImpl).normalize(vnode)\r\n    }\r\n  } else if (children) {\r\n    // compiled element vnode - if children is passed, only possible types are\r\n    // string or Array.\r\n    vnode.shapeFlag |= isString(children)\r\n      ? ShapeFlags.TEXT_CHILDREN\r\n      : ShapeFlags.ARRAY_CHILDREN\r\n  }\r\n\r\n  // validate key\r\n  if (__DEV__ && vnode.key !== vnode.key) {\r\n    warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type)\r\n  }\r\n\r\n  // track vnode for block tree\r\n  if (\r\n    isBlockTreeEnabled > 0 &&\r\n    // avoid a block node from tracking itself\r\n    !isBlockNode &&\r\n    // has current parent block\r\n    currentBlock &&\r\n    // presence of a patch flag indicates this node needs patching on updates.\r\n    // component nodes also should always be patched, because even if the\r\n    // component doesn't need to update, it needs to persist the instance on to\r\n    // the next vnode so that it can be properly unmounted later.\r\n    (vnode.patchFlag > 0 || shapeFlag & ShapeFlags.COMPONENT) &&\r\n    // the EVENTS flag is only for hydration and if it is the only flag, the\r\n    // vnode should not be considered dynamic due to handler caching.\r\n    vnode.patchFlag !== PatchFlags.HYDRATE_EVENTS\r\n  ) {\r\n    currentBlock.push(vnode)\r\n  }\r\n\r\n  if (__COMPAT__) {\r\n    convertLegacyVModelProps(vnode)\r\n    defineLegacyVNodeProperties(vnode)\r\n  }\r\n\r\n  return vnode\r\n}\r\n\r\nexport { createBaseVNode as createElementVNode }\r\n\r\nexport const createVNode = (\r\n  __DEV__ ? createVNodeWithArgsTransform : _createVNode\r\n) as typeof _createVNode\r\n\r\nfunction _createVNode(\r\n  type: VNodeTypes | ClassComponent | typeof NULL_DYNAMIC_COMPONENT,\r\n  props: (Data & VNodeProps) | null = null,\r\n  children: unknown = null,\r\n  patchFlag: number = 0,\r\n  dynamicProps: string[] | null = null,\r\n  isBlockNode = false\r\n): VNode {\r\n  if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n    if (__DEV__ && !type) {\r\n      warn(`Invalid vnode type when creating vnode: ${type}.`)\r\n    }\r\n    type = Comment\r\n  }\r\n\r\n  if (isVNode(type)) {\r\n    // createVNode receiving an existing vnode. This happens in cases like\r\n    // <component :is=\"vnode\"/>\r\n    // #2078 make sure to merge refs during the clone instead of overwriting it\r\n    const cloned = cloneVNode(type, props, true /* mergeRef: true */)\r\n    if (children) {\r\n      normalizeChildren(cloned, children)\r\n    }\r\n    if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {\r\n      if (cloned.shapeFlag & ShapeFlags.COMPONENT) {\r\n        currentBlock[currentBlock.indexOf(type)] = cloned\r\n      } else {\r\n        currentBlock.push(cloned)\r\n      }\r\n    }\r\n    cloned.patchFlag |= PatchFlags.BAIL\r\n    return cloned\r\n  }\r\n\r\n  // class component normalization.\r\n  if (isClassComponent(type)) {\r\n    type = type.__vccOpts\r\n  }\r\n\r\n  // 2.x async/functional component compat\r\n  if (__COMPAT__) {\r\n    type = convertLegacyComponent(type, currentRenderingInstance)\r\n  }\r\n\r\n  // class & style normalization.\r\n  if (props) {\r\n    // for reactive or proxy objects, we need to clone it to enable mutation.\r\n    props = guardReactiveProps(props)!\r\n    let { class: klass, style } = props\r\n    if (klass && !isString(klass)) {\r\n      props.class = normalizeClass(klass)\r\n    }\r\n    if (isObject(style)) {\r\n      // reactive state objects need to be cloned since they are likely to be\r\n      // mutated\r\n      if (isProxy(style) && !isArray(style)) {\r\n        style = extend({}, style)\r\n      }\r\n      props.style = normalizeStyle(style)\r\n    }\r\n  }\r\n\r\n  // encode the vnode type information into a bitmap\r\n  const shapeFlag = isString(type)\r\n    ? ShapeFlags.ELEMENT\r\n    : __FEATURE_SUSPENSE__ && isSuspense(type)\r\n    ? ShapeFlags.SUSPENSE\r\n    : isTeleport(type)\r\n    ? ShapeFlags.TELEPORT\r\n    : isObject(type)\r\n    ? ShapeFlags.STATEFUL_COMPONENT\r\n    : isFunction(type)\r\n    ? ShapeFlags.FUNCTIONAL_COMPONENT\r\n    : 0\r\n\r\n  if (__DEV__ && shapeFlag & ShapeFlags.STATEFUL_COMPONENT && isProxy(type)) {\r\n    type = toRaw(type)\r\n    warn(\r\n      `Vue received a Component which was made a reactive object. This can ` +\r\n        `lead to unnecessary performance overhead, and should be avoided by ` +\r\n        `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n        `instead of \\`ref\\`.`,\r\n      `\\nComponent that was made reactive: `,\r\n      type\r\n    )\r\n  }\r\n\r\n  return createBaseVNode(\r\n    type,\r\n    props,\r\n    children,\r\n    patchFlag,\r\n    dynamicProps,\r\n    shapeFlag,\r\n    isBlockNode,\r\n    true\r\n  )\r\n}\r\n\r\nexport function guardReactiveProps(props: (Data & VNodeProps) | null) {\r\n  if (!props) return null\r\n  return isProxy(props) || InternalObjectKey in props\r\n    ? extend({}, props)\r\n    : props\r\n}\r\n\r\nexport function cloneVNode<T, U>(\r\n  vnode: VNode<T, U>,\r\n  extraProps?: (Data & VNodeProps) | null,\r\n  mergeRef = false\r\n): VNode<T, U> {\r\n  // This is intentionally NOT using spread or extend to avoid the runtime\r\n  // key enumeration cost.\r\n  const { props, ref, patchFlag, children } = vnode\r\n  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props\r\n  const cloned: VNode = {\r\n    __v_isVNode: true,\r\n    __v_skip: true,\r\n    type: vnode.type,\r\n    props: mergedProps,\r\n    key: mergedProps && normalizeKey(mergedProps),\r\n    ref:\r\n      extraProps && extraProps.ref\r\n        ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n          // if the vnode itself already has a ref, cloneVNode will need to merge\r\n          // the refs so the single vnode can be set on multiple refs\r\n          mergeRef && ref\r\n          ? isArray(ref)\r\n            ? ref.concat(normalizeRef(extraProps)!)\r\n            : [ref, normalizeRef(extraProps)!]\r\n          : normalizeRef(extraProps)\r\n        : ref,\r\n    scopeId: vnode.scopeId,\r\n    slotScopeIds: vnode.slotScopeIds,\r\n    children:\r\n      __DEV__ && patchFlag === PatchFlags.HOISTED && isArray(children)\r\n        ? (children as VNode[]).map(deepCloneVNode)\r\n        : children,\r\n    target: vnode.target,\r\n    targetAnchor: vnode.targetAnchor,\r\n    staticCount: vnode.staticCount,\r\n    shapeFlag: vnode.shapeFlag,\r\n    // if the vnode is cloned with extra props, we can no longer assume its\r\n    // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n    // note: preserve flag for fragments since they use the flag for children\r\n    // fast paths only.\r\n    patchFlag:\r\n      extraProps && vnode.type !== Fragment\r\n        ? patchFlag === -1 // hoisted node\r\n          ? PatchFlags.FULL_PROPS\r\n          : patchFlag | PatchFlags.FULL_PROPS\r\n        : patchFlag,\r\n    dynamicProps: vnode.dynamicProps,\r\n    dynamicChildren: vnode.dynamicChildren,\r\n    appContext: vnode.appContext,\r\n    dirs: vnode.dirs,\r\n    transition: vnode.transition,\r\n\r\n    // These should technically only be non-null on mounted VNodes. However,\r\n    // they *should* be copied for kept-alive vnodes. So we just always copy\r\n    // them since them being non-null during a mount doesn't affect the logic as\r\n    // they will simply be overwritten.\r\n    component: vnode.component,\r\n    suspense: vnode.suspense,\r\n    ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n    ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n    el: vnode.el,\r\n    anchor: vnode.anchor\r\n  }\r\n  if (__COMPAT__) {\r\n    defineLegacyVNodeProperties(cloned)\r\n  }\r\n  return cloned as any\r\n}\r\n\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode: VNode): VNode {\r\n  const cloned = cloneVNode(vnode)\r\n  if (isArray(vnode.children)) {\r\n    cloned.children = (vnode.children as VNode[]).map(deepCloneVNode)\r\n  }\r\n  return cloned\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createTextVNode(text: string = ' ', flag: number = 0): VNode {\r\n  return createVNode(Text, null, text, flag)\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createStaticVNode(\r\n  content: string,\r\n  numberOfNodes: number\r\n): VNode {\r\n  // A static vnode can contain multiple stringified elements, and the number\r\n  // of elements is necessary for hydration.\r\n  const vnode = createVNode(Static, null, content)\r\n  vnode.staticCount = numberOfNodes\r\n  return vnode\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createCommentVNode(\r\n  text: string = '',\r\n  // when used as the v-else branch, the comment node must be created as a\r\n  // block to ensure correct updates.\r\n  asBlock: boolean = false\r\n): VNode {\r\n  return asBlock\r\n    ? (openBlock(), createBlock(Comment, null, text))\r\n    : createVNode(Comment, null, text)\r\n}\r\n\r\nexport function normalizeVNode(child: VNodeChild): VNode {\r\n  if (child == null || typeof child === 'boolean') {\r\n    // empty placeholder\r\n    return createVNode(Comment)\r\n  } else if (isArray(child)) {\r\n    // fragment\r\n    return createVNode(\r\n      Fragment,\r\n      null,\r\n      // #3666, avoid reference pollution when reusing vnode\r\n      child.slice()\r\n    )\r\n  } else if (typeof child === 'object') {\r\n    // already vnode, this should be the most common since compiled templates\r\n    // always produce all-vnode children arrays\r\n    return cloneIfMounted(child)\r\n  } else {\r\n    // strings and numbers\r\n    return createVNode(Text, null, String(child))\r\n  }\r\n}\r\n\r\n// optimized normalization for template-compiled render fns\r\nexport function cloneIfMounted(child: VNode): VNode {\r\n  return child.el === null || child.memo ? child : cloneVNode(child)\r\n}\r\n\r\nexport function normalizeChildren(vnode: VNode, children: unknown) {\r\n  let type = 0\r\n  const { shapeFlag } = vnode\r\n  if (children == null) {\r\n    children = null\r\n  } else if (isArray(children)) {\r\n    type = ShapeFlags.ARRAY_CHILDREN\r\n  } else if (typeof children === 'object') {\r\n    if (shapeFlag & (ShapeFlags.ELEMENT | ShapeFlags.TELEPORT)) {\r\n      // Normalize slot to plain children for plain element and Teleport\r\n      const slot = (children as any).default\r\n      if (slot) {\r\n        // _c marker is added by withCtx() indicating this is a compiled slot\r\n        slot._c && (slot._d = false)\r\n        normalizeChildren(vnode, slot())\r\n        slot._c && (slot._d = true)\r\n      }\r\n      return\r\n    } else {\r\n      type = ShapeFlags.SLOTS_CHILDREN\r\n      const slotFlag = (children as RawSlots)._\r\n      if (!slotFlag && !(InternalObjectKey in children!)) {\r\n        // if slots are not normalized, attach context instance\r\n        // (compiled / normalized slots already have context)\r\n        ;(children as RawSlots)._ctx = currentRenderingInstance\r\n      } else if (slotFlag === SlotFlags.FORWARDED && currentRenderingInstance) {\r\n        // a child component receives forwarded slots from the parent.\r\n        // its slot type is determined by its parent's slot type.\r\n        if (\r\n          (currentRenderingInstance.slots as RawSlots)._ === SlotFlags.STABLE\r\n        ) {\r\n          ;(children as RawSlots)._ = SlotFlags.STABLE\r\n        } else {\r\n          ;(children as RawSlots)._ = SlotFlags.DYNAMIC\r\n          vnode.patchFlag |= PatchFlags.DYNAMIC_SLOTS\r\n        }\r\n      }\r\n    }\r\n  } else if (isFunction(children)) {\r\n    children = { default: children, _ctx: currentRenderingInstance }\r\n    type = ShapeFlags.SLOTS_CHILDREN\r\n  } else {\r\n    children = String(children)\r\n    // force teleport children to array so it can be moved around\r\n    if (shapeFlag & ShapeFlags.TELEPORT) {\r\n      type = ShapeFlags.ARRAY_CHILDREN\r\n      children = [createTextVNode(children as string)]\r\n    } else {\r\n      type = ShapeFlags.TEXT_CHILDREN\r\n    }\r\n  }\r\n  vnode.children = children as VNodeNormalizedChildren\r\n  vnode.shapeFlag |= type\r\n}\r\n\r\nexport function mergeProps(...args: (Data & VNodeProps)[]) {\r\n  const ret: Data = {}\r\n  for (let i = 0; i < args.length; i++) {\r\n    const toMerge = args[i]\r\n    for (const key in toMerge) {\r\n      if (key === 'class') {\r\n        if (ret.class !== toMerge.class) {\r\n          ret.class = normalizeClass([ret.class, toMerge.class])\r\n        }\r\n      } else if (key === 'style') {\r\n        ret.style = normalizeStyle([ret.style, toMerge.style])\r\n      } else if (isOn(key)) {\r\n        const existing = ret[key]\r\n        const incoming = toMerge[key]\r\n        if (\r\n          incoming &&\r\n          existing !== incoming &&\r\n          !(isArray(existing) && existing.includes(incoming))\r\n        ) {\r\n          ret[key] = existing\r\n            ? [].concat(existing as any, incoming as any)\r\n            : incoming\r\n        }\r\n      } else if (key !== '') {\r\n        ret[key] = toMerge[key]\r\n      }\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\nexport function invokeVNodeHook(\r\n  hook: VNodeHook,\r\n  instance: ComponentInternalInstance | null,\r\n  vnode: VNode,\r\n  prevVNode: VNode | null = null\r\n) {\r\n  callWithAsyncErrorHandling(hook, instance, ErrorCodes.VNODE_HOOK, [\r\n    vnode,\r\n    prevVNode\r\n  ])\r\n}\r\n","import { computed as _computed } from '@vue/reactivity'\r\nimport { isInSSRComponentSetup } from './component'\r\n\r\nexport const computed = ((getterOrOptions: any, debugOptions?: any) => {\r\n  // @ts-ignore\r\n  return _computed(getterOrOptions, debugOptions, isInSSRComponentSetup)\r\n}) as typeof _computed\r\n","import { ComponentPropsOptions } from '@vue/runtime-core'\r\nimport { isArray, isPromise, isFunction } from '@vue/shared'\r\nimport {\r\n  getCurrentInstance,\r\n  setCurrentInstance,\r\n  SetupContext,\r\n  createSetupContext,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport { EmitFn, EmitsOptions } from './componentEmits'\r\nimport { ComponentObjectPropsOptions, ExtractPropTypes } from './componentProps'\r\nimport { warn } from './warning'\r\n\r\n// dev only\r\nconst warnRuntimeUsage = (method: string) =>\r\n  warn(\r\n    `${method}() is a compiler-hint helper that is only usable inside ` +\r\n      `<script setup> of a single file component. Its arguments should be ` +\r\n      `compiled away and passing it at runtime has no effect.`\r\n  )\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring component props. The\r\n * expected argument is the same as the component `props` option.\r\n *\r\n * Example runtime declaration:\r\n * ```js\r\n * // using Array syntax\r\n * const props = defineProps(['foo', 'bar'])\r\n * // using Object syntax\r\n * const props = defineProps({\r\n *   foo: String,\r\n *   bar: {\r\n *     type: Number,\r\n *     required: true\r\n *   }\r\n * })\r\n * ```\r\n *\r\n * Equivalent type-based declaration:\r\n * ```ts\r\n * // will be compiled into equivalent runtime declarations\r\n * const props = defineProps<{\r\n *   foo?: string\r\n *   bar: number\r\n * }>()\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\n// overload 1: runtime props w/ array\r\nexport function defineProps<PropNames extends string = string>(\r\n  props: PropNames[]\r\n): Readonly<{ [key in PropNames]?: any }>\r\n// overload 2: runtime props w/ object\r\nexport function defineProps<\r\n  PP extends ComponentObjectPropsOptions = ComponentObjectPropsOptions\r\n>(props: PP): Readonly<ExtractPropTypes<PP>>\r\n// overload 3: typed-based declaration\r\nexport function defineProps<TypeProps>(): Readonly<TypeProps>\r\n// implementation\r\nexport function defineProps() {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`defineProps`)\r\n  }\r\n  return null as any\r\n}\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's emitted\r\n * events. The expected argument is the same as the component `emits` option.\r\n *\r\n * Example runtime declaration:\r\n * ```js\r\n * const emit = defineEmits(['change', 'update'])\r\n * ```\r\n *\r\n * Example type-based declaration:\r\n * ```ts\r\n * const emit = defineEmits<{\r\n *   (event: 'change'): void\r\n *   (event: 'update', id: number): void\r\n * }>()\r\n *\r\n * emit('change')\r\n * emit('update', 1)\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\n// overload 1: runtime emits w/ array\r\nexport function defineEmits<EE extends string = string>(\r\n  emitOptions: EE[]\r\n): EmitFn<EE[]>\r\nexport function defineEmits<E extends EmitsOptions = EmitsOptions>(\r\n  emitOptions: E\r\n): EmitFn<E>\r\nexport function defineEmits<TypeEmit>(): TypeEmit\r\n// implementation\r\nexport function defineEmits() {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`defineEmits`)\r\n  }\r\n  return null as any\r\n}\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's exposed\r\n * instance properties when it is accessed by a parent component via template\r\n * refs.\r\n *\r\n * `<script setup>` components are closed by default - i.e. variables inside\r\n * the `<script setup>` scope is not exposed to parent unless explicitly exposed\r\n * via `defineExpose`.\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\nexport function defineExpose<\r\n  Exposed extends Record<string, any> = Record<string, any>\r\n>(exposed?: Exposed) {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`defineExpose`)\r\n  }\r\n}\r\n\r\ntype NotUndefined<T> = T extends undefined ? never : T\r\n\r\ntype InferDefaults<T> = {\r\n  [K in keyof T]?: InferDefault<T, NotUndefined<T[K]>>\r\n}\r\n\r\ntype InferDefault<P, T> = T extends\r\n  | null\r\n  | number\r\n  | string\r\n  | boolean\r\n  | symbol\r\n  | Function\r\n  ? T | ((props: P) => T)\r\n  : (props: P) => T\r\n\r\ntype PropsWithDefaults<Base, Defaults> = Base & {\r\n  [K in keyof Defaults]: K extends keyof Base ? NotUndefined<Base[K]> : never\r\n}\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for providing props default values when\r\n * using type-based `defineProps` declaration.\r\n *\r\n * Example usage:\r\n * ```ts\r\n * withDefaults(defineProps<{\r\n *   size?: number\r\n *   labels?: string[]\r\n * }>(), {\r\n *   size: 3,\r\n *   labels: () => ['default label']\r\n * })\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the output\r\n * and should **not** be actually called at runtime.\r\n */\r\nexport function withDefaults<Props, Defaults extends InferDefaults<Props>>(\r\n  props: Props,\r\n  defaults: Defaults\r\n): PropsWithDefaults<Props, Defaults> {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`withDefaults`)\r\n  }\r\n  return null as any\r\n}\r\n\r\nexport function useSlots(): SetupContext['slots'] {\r\n  return getContext().slots\r\n}\r\n\r\nexport function useAttrs(): SetupContext['attrs'] {\r\n  return getContext().attrs\r\n}\r\n\r\nfunction getContext(): SetupContext {\r\n  const i = getCurrentInstance()!\r\n  if (__DEV__ && !i) {\r\n    warn(`useContext() called without active instance.`)\r\n  }\r\n  return i.setupContext || (i.setupContext = createSetupContext(i))\r\n}\r\n\r\n/**\r\n * Runtime helper for merging default declarations. Imported by compiled code\r\n * only.\r\n * @internal\r\n */\r\nexport function mergeDefaults(\r\n  raw: ComponentPropsOptions,\r\n  defaults: Record<string, any>\r\n): ComponentObjectPropsOptions {\r\n  const props = isArray(raw)\r\n    ? raw.reduce(\r\n        (normalized, p) => ((normalized[p] = {}), normalized),\r\n        {} as ComponentObjectPropsOptions\r\n      )\r\n    : raw\r\n  for (const key in defaults) {\r\n    const opt = props[key]\r\n    if (opt) {\r\n      if (isArray(opt) || isFunction(opt)) {\r\n        props[key] = { type: opt, default: defaults[key] }\r\n      } else {\r\n        opt.default = defaults[key]\r\n      }\r\n    } else if (opt === null) {\r\n      props[key] = { default: defaults[key] }\r\n    } else if (__DEV__) {\r\n      warn(`props default key \"${key}\" has no corresponding declaration.`)\r\n    }\r\n  }\r\n  return props\r\n}\r\n\r\n/**\r\n * Used to create a proxy for the rest element when destructuring props with\r\n * defineProps().\r\n * @internal\r\n */\r\nexport function createPropsRestProxy(\r\n  props: any,\r\n  excludedKeys: string[]\r\n): Record<string, any> {\r\n  const ret: Record<string, any> = {}\r\n  for (const key in props) {\r\n    if (!excludedKeys.includes(key)) {\r\n      Object.defineProperty(ret, key, {\r\n        enumerable: true,\r\n        get: () => props[key]\r\n      })\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\n/**\r\n * `<script setup>` helper for persisting the current instance context over\r\n * async/await flows.\r\n *\r\n * `@vue/compiler-sfc` converts the following:\r\n *\r\n * ```ts\r\n * const x = await foo()\r\n * ```\r\n *\r\n * into:\r\n *\r\n * ```ts\r\n * let __temp, __restore\r\n * const x = (([__temp, __restore] = withAsyncContext(() => foo())),__temp=await __temp,__restore(),__temp)\r\n * ```\r\n * @internal\r\n */\r\nexport function withAsyncContext(getAwaitable: () => any) {\r\n  const ctx = getCurrentInstance()!\r\n  if (__DEV__ && !ctx) {\r\n    warn(\r\n      `withAsyncContext called without active current instance. ` +\r\n        `This is likely a bug.`\r\n    )\r\n  }\r\n  let awaitable = getAwaitable()\r\n  unsetCurrentInstance()\r\n  if (isPromise(awaitable)) {\r\n    awaitable = awaitable.catch(e => {\r\n      setCurrentInstance(ctx)\r\n      throw e\r\n    })\r\n  }\r\n  return [awaitable, () => setCurrentInstance(ctx)]\r\n}\r\n","import {\r\n  VNode,\r\n  VNodeProps,\r\n  createVNode,\r\n  VNodeArrayChildren,\r\n  Fragment,\r\n  Text,\r\n  Comment,\r\n  isVNode\r\n} from './vnode'\r\nimport { Teleport, TeleportProps } from './components/Teleport'\r\nimport { Suspense, SuspenseProps } from './components/Suspense'\r\nimport { isObject, isArray } from '@vue/shared'\r\nimport { RawSlots } from './componentSlots'\r\nimport {\r\n  FunctionalComponent,\r\n  Component,\r\n  ComponentOptions,\r\n  ConcreteComponent\r\n} from './component'\r\nimport { EmitsOptions } from './componentEmits'\r\nimport { DefineComponent } from './apiDefineComponent'\r\n\r\n// `h` is a more user-friendly version of `createVNode` that allows omitting the\r\n// props when possible. It is intended for manually written render functions.\r\n// Compiler-generated code uses `createVNode` because\r\n// 1. it is monomorphic and avoids the extra call overhead\r\n// 2. it allows specifying patchFlags for optimization\r\n\r\n/*\r\n// type only\r\nh('div')\r\n\r\n// type + props\r\nh('div', {})\r\n\r\n// type + omit props + children\r\n// Omit props does NOT support named slots\r\nh('div', []) // array\r\nh('div', 'foo') // text\r\nh('div', h('br')) // vnode\r\nh(Component, () => {}) // default slot\r\n\r\n// type + props + children\r\nh('div', {}, []) // array\r\nh('div', {}, 'foo') // text\r\nh('div', {}, h('br')) // vnode\r\nh(Component, {}, () => {}) // default slot\r\nh(Component, {}, {}) // named slots\r\n\r\n// named slots without props requires explicit `null` to avoid ambiguity\r\nh(Component, null, {})\r\n**/\r\n\r\ntype RawProps = VNodeProps & {\r\n  // used to differ from a single VNode object as children\r\n  __v_isVNode?: never\r\n  // used to differ from Array children\r\n  [Symbol.iterator]?: never\r\n} & Record<string, any>\r\n\r\ntype RawChildren =\r\n  | string\r\n  | number\r\n  | boolean\r\n  | VNode\r\n  | VNodeArrayChildren\r\n  | (() => any)\r\n\r\n// fake constructor type returned from `defineComponent`\r\ninterface Constructor<P = any> {\r\n  __isFragment?: never\r\n  __isTeleport?: never\r\n  __isSuspense?: never\r\n  new (...args: any[]): { $props: P }\r\n}\r\n\r\n// The following is a series of overloads for providing props validation of\r\n// manually written render functions.\r\n\r\n// element\r\nexport function h(type: string, children?: RawChildren): VNode\r\nexport function h(\r\n  type: string,\r\n  props?: RawProps | null,\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// text/comment\r\nexport function h(\r\n  type: typeof Text | typeof Comment,\r\n  children?: string | number | boolean\r\n): VNode\r\nexport function h(\r\n  type: typeof Text | typeof Comment,\r\n  props?: null,\r\n  children?: string | number | boolean\r\n): VNode\r\n// fragment\r\nexport function h(type: typeof Fragment, children?: VNodeArrayChildren): VNode\r\nexport function h(\r\n  type: typeof Fragment,\r\n  props?: RawProps | null,\r\n  children?: VNodeArrayChildren\r\n): VNode\r\n\r\n// teleport (target prop is required)\r\nexport function h(\r\n  type: typeof Teleport,\r\n  props: RawProps & TeleportProps,\r\n  children: RawChildren\r\n): VNode\r\n\r\n// suspense\r\nexport function h(type: typeof Suspense, children?: RawChildren): VNode\r\nexport function h(\r\n  type: typeof Suspense,\r\n  props?: (RawProps & SuspenseProps) | null,\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// functional component\r\nexport function h<P, E extends EmitsOptions = {}>(\r\n  type: FunctionalComponent<P, E>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// catch-all for generic component types\r\nexport function h(type: Component, children?: RawChildren): VNode\r\n\r\n// concrete component\r\nexport function h<P>(\r\n  type: ConcreteComponent | string,\r\n  children?: RawChildren\r\n): VNode\r\nexport function h<P>(\r\n  type: ConcreteComponent<P> | string,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren\r\n): VNode\r\n\r\n// component without props\r\nexport function h(\r\n  type: Component,\r\n  props: null,\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// exclude `defineComponent` constructors\r\nexport function h<P>(\r\n  type: ComponentOptions<P>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// fake constructor type returned by `defineComponent` or class component\r\nexport function h(type: Constructor, children?: RawChildren): VNode\r\nexport function h<P>(\r\n  type: Constructor<P>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// fake constructor type returned by `defineComponent`\r\nexport function h(type: DefineComponent, children?: RawChildren): VNode\r\nexport function h<P>(\r\n  type: DefineComponent<P>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// Actual implementation\r\nexport function h(type: any, propsOrChildren?: any, children?: any): VNode {\r\n  const l = arguments.length\r\n  if (l === 2) {\r\n    if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n      // single vnode without props\r\n      if (isVNode(propsOrChildren)) {\r\n        return createVNode(type, null, [propsOrChildren])\r\n      }\r\n      // props without children\r\n      return createVNode(type, propsOrChildren)\r\n    } else {\r\n      // omit props\r\n      return createVNode(type, null, propsOrChildren)\r\n    }\r\n  } else {\r\n    if (l > 3) {\r\n      children = Array.prototype.slice.call(arguments, 2)\r\n    } else if (l === 3 && isVNode(children)) {\r\n      children = [children]\r\n    }\r\n    return createVNode(type, propsOrChildren, children)\r\n  }\r\n}\r\n","import { inject } from '../apiInject'\r\nimport { warn } from '../warning'\r\n\r\nexport const ssrContextKey = Symbol(__DEV__ ? `ssrContext` : ``)\r\n\r\nexport const useSSRContext = <T = Record<string, any>>() => {\r\n  if (!__GLOBAL__) {\r\n    const ctx = inject<T>(ssrContextKey)\r\n    if (!ctx) {\r\n      warn(\r\n        `Server rendering context not provided. Make sure to only call ` +\r\n          `useSSRContext() conditionally in the server build.`\r\n      )\r\n    }\r\n    return ctx\r\n  } else if (__DEV__) {\r\n    warn(`useSSRContext() is not supported in the global build.`)\r\n  }\r\n}\r\n","import { hasChanged } from '@vue/shared'\r\nimport { currentBlock, isBlockTreeEnabled, VNode } from '../vnode'\r\n\r\nexport function withMemo(\r\n  memo: any[],\r\n  render: () => VNode<any, any>,\r\n  cache: any[],\r\n  index: number\r\n) {\r\n  const cached = cache[index] as VNode | undefined\r\n  if (cached && isMemoSame(cached, memo)) {\r\n    return cached\r\n  }\r\n  const ret = render()\r\n\r\n  // shallow clone\r\n  ret.memo = memo.slice()\r\n  return (cache[index] = ret)\r\n}\r\n\r\nexport function isMemoSame(cached: VNode, memo: any[]) {\r\n  const prev: any[] = cached.memo!\r\n  if (prev.length != memo.length) {\r\n    return false\r\n  }\r\n  \r\n  for (let i = 0; i < prev.length; i++) {\r\n    if (hasChanged(prev[i], memo[i])) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // make sure to let parent block track it when returning cached\r\n  if (isBlockTreeEnabled > 0 && currentBlock) {\r\n    currentBlock.push(cached)\r\n  }\r\n  return true\r\n}\r\n","// Core API ------------------------------------------------------------------\r\n\r\nexport const version = __VERSION__\r\nexport {\r\n  // core\r\n  reactive,\r\n  ref,\r\n  readonly,\r\n  // utilities\r\n  unref,\r\n  proxyRefs,\r\n  isRef,\r\n  toRef,\r\n  toRefs,\r\n  isProxy,\r\n  isReactive,\r\n  isReadonly,\r\n  isShallow,\r\n  // advanced\r\n  customRef,\r\n  triggerRef,\r\n  shallowRef,\r\n  shallowReactive,\r\n  shallowReadonly,\r\n  markRaw,\r\n  toRaw,\r\n  // effect\r\n  effect,\r\n  stop,\r\n  ReactiveEffect,\r\n  // effect scope\r\n  effectScope,\r\n  EffectScope,\r\n  getCurrentScope,\r\n  onScopeDispose\r\n} from '@vue/reactivity'\r\nexport { computed } from './apiComputed'\r\nexport {\r\n  watch,\r\n  watchEffect,\r\n  watchPostEffect,\r\n  watchSyncEffect\r\n} from './apiWatch'\r\nexport {\r\n  onBeforeMount,\r\n  onMounted,\r\n  onBeforeUpdate,\r\n  onUpdated,\r\n  onBeforeUnmount,\r\n  onUnmounted,\r\n  onActivated,\r\n  onDeactivated,\r\n  onRenderTracked,\r\n  onRenderTriggered,\r\n  onErrorCaptured,\r\n  onServerPrefetch\r\n} from './apiLifecycle'\r\nexport { provide, inject } from './apiInject'\r\nexport { nextTick } from './scheduler'\r\nexport { defineComponent } from './apiDefineComponent'\r\nexport { defineAsyncComponent } from './apiAsyncComponent'\r\nexport { useAttrs, useSlots } from './apiSetupHelpers'\r\n\r\n// <script setup> API ----------------------------------------------------------\r\n\r\nexport {\r\n  // macros runtime, for typing and warnings only\r\n  defineProps,\r\n  defineEmits,\r\n  defineExpose,\r\n  withDefaults,\r\n  // internal\r\n  mergeDefaults,\r\n  createPropsRestProxy,\r\n  withAsyncContext\r\n} from './apiSetupHelpers'\r\n\r\n// Advanced API ----------------------------------------------------------------\r\n\r\n// For getting a hold of the internal instance in setup() - useful for advanced\r\n// plugins\r\nexport { getCurrentInstance } from './component'\r\n\r\n// For raw render function users\r\nexport { h } from './h'\r\n// Advanced render function utilities\r\nexport { createVNode, cloneVNode, mergeProps, isVNode } from './vnode'\r\n// VNode types\r\nexport { Fragment, Text, Comment, Static, VNodeRef } from './vnode'\r\n// Built-in components\r\nexport { Teleport, TeleportProps } from './components/Teleport'\r\nexport { Suspense, SuspenseProps } from './components/Suspense'\r\nexport { KeepAlive, KeepAliveProps } from './components/KeepAlive'\r\nexport {\r\n  BaseTransition,\r\n  BaseTransitionProps\r\n} from './components/BaseTransition'\r\n// For using custom directives\r\nexport { withDirectives } from './directives'\r\n// SSR context\r\nexport { useSSRContext, ssrContextKey } from './helpers/useSsrContext'\r\n\r\n// Custom Renderer API ---------------------------------------------------------\r\n\r\nexport { createRenderer, createHydrationRenderer } from './renderer'\r\nexport { queuePostFlushCb } from './scheduler'\r\nexport { warn } from './warning'\r\nexport {\r\n  handleError,\r\n  callWithErrorHandling,\r\n  callWithAsyncErrorHandling,\r\n  ErrorCodes\r\n} from './errorHandling'\r\nexport {\r\n  resolveComponent,\r\n  resolveDirective,\r\n  resolveDynamicComponent\r\n} from './helpers/resolveAssets'\r\n// For integration with runtime compiler\r\nexport { registerRuntimeCompiler, isRuntimeOnly } from './component'\r\nexport {\r\n  useTransitionState,\r\n  resolveTransitionHooks,\r\n  setTransitionHooks,\r\n  getTransitionRawChildren\r\n} from './components/BaseTransition'\r\nexport { initCustomFormatter } from './customFormatter'\r\n\r\n// For devtools\r\nexport { devtools, setDevtoolsHook } from './devtools'\r\n\r\n// Types -------------------------------------------------------------------------\r\n\r\nimport { VNode } from './vnode'\r\nimport { ComponentInternalInstance } from './component'\r\n\r\n// Augment Ref unwrap bail types.\r\n// Note: if updating this, also update `types/refBail.d.ts`.\r\ndeclare module '@vue/reactivity' {\r\n  export interface RefUnwrapBailTypes {\r\n    runtimeCoreBailTypes:\r\n      | VNode\r\n      | {\r\n          // directly bailing on ComponentPublicInstance results in recursion\r\n          // so we use this as a bail hint\r\n          $: ComponentInternalInstance\r\n        }\r\n  }\r\n}\r\n\r\nexport {\r\n  Ref,\r\n  ToRef,\r\n  ToRefs,\r\n  UnwrapRef,\r\n  ShallowRef,\r\n  ShallowUnwrapRef,\r\n  CustomRefFactory,\r\n  ReactiveFlags,\r\n  DeepReadonly,\r\n  ShallowReactive,\r\n  UnwrapNestedRefs,\r\n  ComputedRef,\r\n  WritableComputedRef,\r\n  WritableComputedOptions,\r\n  ComputedGetter,\r\n  ComputedSetter,\r\n  ReactiveEffectRunner,\r\n  ReactiveEffectOptions,\r\n  EffectScheduler,\r\n  DebuggerOptions,\r\n  DebuggerEvent,\r\n  DebuggerEventExtraInfo,\r\n  TrackOpTypes,\r\n  TriggerOpTypes\r\n} from '@vue/reactivity'\r\nexport {\r\n  WatchEffect,\r\n  WatchOptions,\r\n  WatchOptionsBase,\r\n  WatchCallback,\r\n  WatchSource,\r\n  WatchStopHandle\r\n} from './apiWatch'\r\nexport { InjectionKey } from './apiInject'\r\nexport {\r\n  App,\r\n  AppConfig,\r\n  AppContext,\r\n  Plugin,\r\n  CreateAppFunction,\r\n  OptionMergeFunction\r\n} from './apiCreateApp'\r\nexport {\r\n  VNode,\r\n  VNodeChild,\r\n  VNodeTypes,\r\n  VNodeProps,\r\n  VNodeArrayChildren,\r\n  VNodeNormalizedChildren\r\n} from './vnode'\r\nexport {\r\n  Component,\r\n  ConcreteComponent,\r\n  FunctionalComponent,\r\n  ComponentInternalInstance,\r\n  SetupContext,\r\n  ComponentCustomProps,\r\n  AllowedComponentProps\r\n} from './component'\r\nexport { DefineComponent } from './apiDefineComponent'\r\nexport {\r\n  ComponentOptions,\r\n  ComponentOptionsMixin,\r\n  ComponentOptionsWithoutProps,\r\n  ComponentOptionsWithObjectProps,\r\n  ComponentOptionsWithArrayProps,\r\n  ComponentCustomOptions,\r\n  ComponentOptionsBase,\r\n  ComponentProvideOptions,\r\n  RenderFunction,\r\n  MethodOptions,\r\n  ComputedOptions,\r\n  RuntimeCompilerOptions\r\n} from './componentOptions'\r\nexport { EmitsOptions, ObjectEmitsOptions } from './componentEmits'\r\nexport {\r\n  ComponentPublicInstance,\r\n  ComponentCustomProperties,\r\n  CreateComponentPublicInstance\r\n} from './componentPublicInstance'\r\nexport {\r\n  Renderer,\r\n  RendererNode,\r\n  RendererElement,\r\n  HydrationRenderer,\r\n  RendererOptions,\r\n  RootRenderFunction\r\n} from './renderer'\r\nexport { RootHydrateFunction } from './hydration'\r\nexport { Slot, Slots } from './componentSlots'\r\nexport {\r\n  Prop,\r\n  PropType,\r\n  ComponentPropsOptions,\r\n  ComponentObjectPropsOptions,\r\n  ExtractPropTypes,\r\n  ExtractDefaultPropTypes\r\n} from './componentProps'\r\nexport {\r\n  Directive,\r\n  DirectiveBinding,\r\n  DirectiveHook,\r\n  ObjectDirective,\r\n  FunctionDirective,\r\n  DirectiveArguments\r\n} from './directives'\r\nexport { SuspenseBoundary } from './components/Suspense'\r\nexport { TransitionState, TransitionHooks } from './components/BaseTransition'\r\nexport {\r\n  AsyncComponentOptions,\r\n  AsyncComponentLoader\r\n} from './apiAsyncComponent'\r\nexport { HMRRuntime } from './hmr'\r\n\r\n// Internal API ----------------------------------------------------------------\r\n\r\n// **IMPORTANT** Internal APIs may change without notice between versions and\r\n// user code should avoid relying on them.\r\n\r\n// For compiler generated code\r\n// should sync with '@vue/compiler-core/src/runtimeHelpers.ts'\r\nexport {\r\n  withCtx,\r\n  pushScopeId,\r\n  popScopeId,\r\n  withScopeId\r\n} from './componentRenderContext'\r\nexport { renderList } from './helpers/renderList'\r\nexport { toHandlers } from './helpers/toHandlers'\r\nexport { renderSlot } from './helpers/renderSlot'\r\nexport { createSlots } from './helpers/createSlots'\r\nexport { withMemo, isMemoSame } from './helpers/withMemo'\r\nexport {\r\n  openBlock,\r\n  createBlock,\r\n  setBlockTracking,\r\n  createTextVNode,\r\n  createCommentVNode,\r\n  createStaticVNode,\r\n  createElementVNode,\r\n  createElementBlock,\r\n  guardReactiveProps\r\n} from './vnode'\r\nexport {\r\n  toDisplayString,\r\n  camelize,\r\n  capitalize,\r\n  toHandlerKey,\r\n  normalizeProps,\r\n  normalizeClass,\r\n  normalizeStyle\r\n} from '@vue/shared'\r\n\r\n// For test-utils\r\nexport { transformVNodeArgs } from './vnode'\r\n\r\n// SSR -------------------------------------------------------------------------\r\n\r\n// **IMPORTANT** These APIs are exposed solely for @vue/server-renderer and may\r\n// change without notice between versions. User code should never rely on them.\r\n\r\nimport { createComponentInstance, setupComponent } from './component'\r\nimport { renderComponentRoot } from './componentRenderUtils'\r\nimport { setCurrentRenderingInstance } from './componentRenderContext'\r\nimport { isVNode, normalizeVNode } from './vnode'\r\n\r\nconst _ssrUtils = {\r\n  createComponentInstance,\r\n  setupComponent,\r\n  renderComponentRoot,\r\n  setCurrentRenderingInstance,\r\n  isVNode,\r\n  normalizeVNode\r\n}\r\n\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in ssr-possible builds.\r\n * @internal\r\n */\r\nexport const ssrUtils = (__SSR__ ? _ssrUtils : null) as typeof _ssrUtils\r\n\r\n// 2.x COMPAT ------------------------------------------------------------------\r\n\r\nexport { DeprecationTypes } from './compat/compatConfig'\r\nexport { CompatVue } from './compat/global'\r\nexport { LegacyConfig } from './compat/globalConfig'\r\n\r\nimport { warnDeprecation } from './compat/compatConfig'\r\nimport { createCompatVue } from './compat/global'\r\nimport {\r\n  isCompatEnabled,\r\n  checkCompatEnabled,\r\n  softAssertCompatEnabled\r\n} from './compat/compatConfig'\r\nimport { resolveFilter as _resolveFilter } from './helpers/resolveAssets'\r\n\r\n/**\r\n * @internal only exposed in compat builds\r\n */\r\nexport const resolveFilter = __COMPAT__ ? _resolveFilter : null\r\n\r\nconst _compatUtils = {\r\n  warnDeprecation,\r\n  createCompatVue,\r\n  isCompatEnabled,\r\n  checkCompatEnabled,\r\n  softAssertCompatEnabled\r\n}\r\n\r\n/**\r\n * @internal only exposed in compat builds.\r\n */\r\nexport const compatUtils = (\r\n  __COMPAT__ ? _compatUtils : null\r\n) as typeof _compatUtils\r\n","import { RendererOptions } from '@vue/runtime-core'\r\n\r\nexport const svgNS = 'http://www.w3.org/2000/svg'\r\n\r\nconst doc = (typeof document !== 'undefined' ? document : null) as Document\r\n\r\nconst templateContainer = doc && /*#__PURE__*/ doc.createElement('template')\r\n\r\nexport const nodeOps: Omit<RendererOptions<Node, Element>, 'patchProp'> = {\r\n  insert: (child, parent, anchor) => {\r\n    parent.insertBefore(child, anchor || null)\r\n  },\r\n\r\n  remove: child => {\r\n    const parent = child.parentNode\r\n    if (parent) {\r\n      parent.removeChild(child)\r\n    }\r\n  },\r\n\r\n  createElement: (tag, isSVG, is, props): Element => {\r\n    const el = isSVG\r\n      ? doc.createElementNS(svgNS, tag)\r\n      : doc.createElement(tag, is ? { is } : undefined)\r\n\r\n    if (tag === 'select' && props && props.multiple != null) {\r\n      ;(el as HTMLSelectElement).setAttribute('multiple', props.multiple)\r\n    }\r\n\r\n    return el\r\n  },\r\n\r\n  createText: text => doc.createTextNode(text),\r\n\r\n  createComment: text => doc.createComment(text),\r\n\r\n  setText: (node, text) => {\r\n    node.nodeValue = text\r\n  },\r\n\r\n  setElementText: (el, text) => {\r\n    el.textContent = text\r\n  },\r\n\r\n  parentNode: node => node.parentNode as Element | null,\r\n\r\n  nextSibling: node => node.nextSibling,\r\n\r\n  querySelector: selector => doc.querySelector(selector),\r\n\r\n  setScopeId(el, id) {\r\n    el.setAttribute(id, '')\r\n  },\r\n\r\n  cloneNode(el) {\r\n    const cloned = el.cloneNode(true)\r\n    // #3072\r\n    // - in `patchDOMProp`, we store the actual value in the `el._value` property.\r\n    // - normally, elements using `:value` bindings will not be hoisted, but if\r\n    //   the bound value is a constant, e.g. `:value=\"true\"` - they do get\r\n    //   hoisted.\r\n    // - in production, hoisted nodes are cloned when subsequent inserts, but\r\n    //   cloneNode() does not copy the custom property we attached.\r\n    // - This may need to account for other custom DOM properties we attach to\r\n    //   elements in addition to `_value` in the future.\r\n    if (`_value` in el) {\r\n      ;(cloned as any)._value = (el as any)._value\r\n    }\r\n    return cloned\r\n  },\r\n\r\n  // __UNSAFE__\r\n  // Reason: innerHTML.\r\n  // Static content here can only come from compiled templates.\r\n  // As long as the user only uses trusted templates, this is safe.\r\n  insertStaticContent(content, parent, anchor, isSVG, start, end) {\r\n    // <parent> before | first ... last | anchor </parent>\r\n    const before = anchor ? anchor.previousSibling : parent.lastChild\r\n    // #5308 can only take cached path if:\r\n    // - has a single root node\r\n    // - nextSibling info is still available\r\n    if (start && (start === end || start.nextSibling)) {\r\n      // cached\r\n      while (true) {\r\n        parent.insertBefore(start!.cloneNode(true), anchor)\r\n        if (start === end || !(start = start!.nextSibling)) break\r\n      }\r\n    } else {\r\n      // fresh insert\r\n      templateContainer.innerHTML = isSVG ? `<svg>${content}</svg>` : content\r\n      const template = templateContainer.content\r\n      if (isSVG) {\r\n        // remove outer svg wrapper\r\n        const wrapper = template.firstChild!\r\n        while (wrapper.firstChild) {\r\n          template.appendChild(wrapper.firstChild)\r\n        }\r\n        template.removeChild(wrapper)\r\n      }\r\n      parent.insertBefore(template, anchor)\r\n    }\r\n    return [\r\n      // first\r\n      before ? before.nextSibling! : parent.firstChild!,\r\n      // last\r\n      anchor ? anchor.previousSibling! : parent.lastChild!\r\n    ]\r\n  }\r\n}\r\n","import { isString, hyphenate, capitalize, isArray } from '@vue/shared'\r\nimport { camelize } from '@vue/runtime-core'\r\n\r\ntype Style = string | Record<string, string | string[]> | null\r\n\r\nexport function patchStyle(el: Element, prev: Style, next: Style) {\r\n  const style = (el as HTMLElement).style\r\n  const isCssString = isString(next)\r\n  if (next && !isCssString) {\r\n    for (const key in next) {\r\n      setStyle(style, key, next[key])\r\n    }\r\n    if (prev && !isString(prev)) {\r\n      for (const key in prev) {\r\n        if (next[key] == null) {\r\n          setStyle(style, key, '')\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    const currentDisplay = style.display\r\n    if (isCssString) {\r\n      if (prev !== next) {\r\n        style.cssText = next as string\r\n      }\r\n    } else if (prev) {\r\n      el.removeAttribute('style')\r\n    }\r\n    // indicates that the `display` of the element is controlled by `v-show`,\r\n    // so we always keep the current `display` value regardless of the `style`\r\n    // value, thus handing over control to `v-show`.\r\n    if ('_vod' in el) {\r\n      style.display = currentDisplay\r\n    }\r\n  }\r\n}\r\n\r\nconst importantRE = /\\s*!important$/\r\n\r\nfunction setStyle(\r\n  style: CSSStyleDeclaration,\r\n  name: string,\r\n  val: string | string[]\r\n) {\r\n  if (isArray(val)) {\r\n    val.forEach(v => setStyle(style, name, v))\r\n  } else {\r\n    if (val == null) val = ''\r\n    if (name.startsWith('--')) {\r\n      // custom property definition\r\n      style.setProperty(name, val)\r\n    } else {\r\n      const prefixed = autoPrefix(style, name)\r\n      if (importantRE.test(val)) {\r\n        // !important\r\n        style.setProperty(\r\n          hyphenate(prefixed),\r\n          val.replace(importantRE, ''),\r\n          'important'\r\n        )\r\n      } else {\r\n        style[prefixed as any] = val\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst prefixes = ['Webkit', 'Moz', 'ms']\r\nconst prefixCache: Record<string, string> = {}\r\n\r\nfunction autoPrefix(style: CSSStyleDeclaration, rawName: string): string {\r\n  const cached = prefixCache[rawName]\r\n  if (cached) {\r\n    return cached\r\n  }\r\n  let name = camelize(rawName)\r\n  if (name !== 'filter' && name in style) {\r\n    return (prefixCache[rawName] = name)\r\n  }\r\n  name = capitalize(name)\r\n  for (let i = 0; i < prefixes.length; i++) {\r\n    const prefixed = prefixes[i] + name\r\n    if (prefixed in style) {\r\n      return (prefixCache[rawName] = prefixed)\r\n    }\r\n  }\r\n  return rawName\r\n}\r\n","import {\r\n  includeBooleanAttr,\r\n  isSpecialBooleanAttr,\r\n  makeMap,\r\n  NOOP\r\n} from '@vue/shared'\r\nimport {\r\n  compatUtils,\r\n  ComponentInternalInstance,\r\n  DeprecationTypes\r\n} from '@vue/runtime-core'\r\n\r\nexport const xlinkNS = 'http://www.w3.org/1999/xlink'\r\n\r\nexport function patchAttr(\r\n  el: Element,\r\n  key: string,\r\n  value: any,\r\n  isSVG: boolean,\r\n  instance?: ComponentInternalInstance | null\r\n) {\r\n  if (isSVG && key.startsWith('xlink:')) {\r\n    if (value == null) {\r\n      el.removeAttributeNS(xlinkNS, key.slice(6, key.length))\r\n    } else {\r\n      el.setAttributeNS(xlinkNS, key, value)\r\n    }\r\n  } else {\r\n    if (__COMPAT__ && compatCoerceAttr(el, key, value, instance)) {\r\n      return\r\n    }\r\n\r\n    // note we are only checking boolean attributes that don't have a\r\n    // corresponding dom prop of the same name here.\r\n    const isBoolean = isSpecialBooleanAttr(key)\r\n    if (value == null || (isBoolean && !includeBooleanAttr(value))) {\r\n      el.removeAttribute(key)\r\n    } else {\r\n      el.setAttribute(key, isBoolean ? '' : value)\r\n    }\r\n  }\r\n}\r\n\r\n// 2.x compat\r\nconst isEnumeratedAttr = __COMPAT__\r\n  ? /*#__PURE__*/ makeMap('contenteditable,draggable,spellcheck')\r\n  : NOOP\r\n\r\nexport function compatCoerceAttr(\r\n  el: Element,\r\n  key: string,\r\n  value: unknown,\r\n  instance: ComponentInternalInstance | null = null\r\n): boolean {\r\n  if (isEnumeratedAttr(key)) {\r\n    const v2CocercedValue =\r\n      value === null\r\n        ? 'false'\r\n        : typeof value !== 'boolean' && value !== undefined\r\n        ? 'true'\r\n        : null\r\n    if (\r\n      v2CocercedValue &&\r\n      compatUtils.softAssertCompatEnabled(\r\n        DeprecationTypes.ATTR_ENUMERATED_COERCION,\r\n        instance,\r\n        key,\r\n        value,\r\n        v2CocercedValue\r\n      )\r\n    ) {\r\n      el.setAttribute(key, v2CocercedValue)\r\n      return true\r\n    }\r\n  } else if (\r\n    value === false &&\r\n    !isSpecialBooleanAttr(key) &&\r\n    compatUtils.softAssertCompatEnabled(\r\n      DeprecationTypes.ATTR_FALSE_VALUE,\r\n      instance,\r\n      key\r\n    )\r\n  ) {\r\n    el.removeAttribute(key)\r\n    return true\r\n  }\r\n  return false\r\n}\r\n","import { hyphenate, isArray } from '@vue/shared'\r\nimport {\r\n  ComponentInternalInstance,\r\n  callWithAsyncErrorHandling\r\n} from '@vue/runtime-core'\r\nimport { ErrorCodes } from 'packages/runtime-core/src/errorHandling'\r\n\r\ninterface Invoker extends EventListener {\r\n  value: EventValue\r\n  attached: number\r\n}\r\n\r\ntype EventValue = Function | Function[]\r\n\r\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nconst [_getNow, skipTimestampCheck] = /*#__PURE__*/ (() => {\r\n  let _getNow = Date.now\r\n  let skipTimestampCheck = false\r\n  if (typeof window !== 'undefined') {\r\n    // Determine what event timestamp the browser is using. Annoyingly, the\r\n    // timestamp can either be hi-res (relative to page load) or low-res\r\n    // (relative to UNIX epoch), so in order to compare time we have to use the\r\n    // same timestamp type when saving the flush timestamp.\r\n    if (Date.now() > document.createEvent('Event').timeStamp) {\r\n      // if the low-res timestamp which is bigger than the event timestamp\r\n      // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n      // and we need to use the hi-res version for event listeners as well.\r\n      _getNow = performance.now.bind(performance)\r\n    }\r\n    // #3485: Firefox <= 53 has incorrect Event.timeStamp implementation\r\n    // and does not fire microtasks in between event propagation, so safe to exclude.\r\n    const ffMatch = navigator.userAgent.match(/firefox\\/(\\d+)/i)\r\n    skipTimestampCheck = !!(ffMatch && Number(ffMatch[1]) <= 53)\r\n  }\r\n  return [_getNow, skipTimestampCheck]\r\n})()\r\n\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow: number = 0\r\nconst p = /*#__PURE__*/ Promise.resolve()\r\nconst reset = () => {\r\n  cachedNow = 0\r\n}\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()))\r\n\r\nexport function addEventListener(\r\n  el: Element,\r\n  event: string,\r\n  handler: EventListener,\r\n  options?: EventListenerOptions\r\n) {\r\n  el.addEventListener(event, handler, options)\r\n}\r\n\r\nexport function removeEventListener(\r\n  el: Element,\r\n  event: string,\r\n  handler: EventListener,\r\n  options?: EventListenerOptions\r\n) {\r\n  el.removeEventListener(event, handler, options)\r\n}\r\n\r\nexport function patchEvent(\r\n  el: Element & { _vei?: Record<string, Invoker | undefined> },\r\n  rawName: string,\r\n  prevValue: EventValue | null,\r\n  nextValue: EventValue | null,\r\n  instance: ComponentInternalInstance | null = null\r\n) {\r\n  // vei = vue event invokers\r\n  const invokers = el._vei || (el._vei = {})\r\n  const existingInvoker = invokers[rawName]\r\n  if (nextValue && existingInvoker) {\r\n    // patch\r\n    existingInvoker.value = nextValue\r\n  } else {\r\n    const [name, options] = parseName(rawName)\r\n    if (nextValue) {\r\n      // add\r\n      const invoker = (invokers[rawName] = createInvoker(nextValue, instance))\r\n      addEventListener(el, name, invoker, options)\r\n    } else if (existingInvoker) {\r\n      // remove\r\n      removeEventListener(el, name, existingInvoker, options)\r\n      invokers[rawName] = undefined\r\n    }\r\n  }\r\n}\r\n\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/\r\n\r\nfunction parseName(name: string): [string, EventListenerOptions | undefined] {\r\n  let options: EventListenerOptions | undefined\r\n  if (optionsModifierRE.test(name)) {\r\n    options = {}\r\n    let m\r\n    while ((m = name.match(optionsModifierRE))) {\r\n      name = name.slice(0, name.length - m[0].length)\r\n      ;(options as any)[m[0].toLowerCase()] = true\r\n    }\r\n  }\r\n  return [hyphenate(name.slice(2)), options]\r\n}\r\n\r\nfunction createInvoker(\r\n  initialValue: EventValue,\r\n  instance: ComponentInternalInstance | null\r\n) {\r\n  const invoker: Invoker = (e: Event) => {\r\n    // async edge case #6566: inner click event triggers patch, event handler\r\n    // attached to outer element during patch, and triggered again. This\r\n    // happens because browsers fire microtask ticks between event propagation.\r\n    // the solution is simple: we save the timestamp when a handler is attached,\r\n    // and the handler would only fire if the event passed to it was fired\r\n    // AFTER it was attached.\r\n    const timeStamp = e.timeStamp || _getNow()\r\n\r\n    if (skipTimestampCheck || timeStamp >= invoker.attached - 1) {\r\n      callWithAsyncErrorHandling(\r\n        patchStopImmediatePropagation(e, invoker.value),\r\n        instance,\r\n        ErrorCodes.NATIVE_EVENT_HANDLER,\r\n        [e]\r\n      )\r\n    }\r\n  }\r\n  invoker.value = initialValue\r\n  invoker.attached = getNow()\r\n  return invoker\r\n}\r\n\r\nfunction patchStopImmediatePropagation(\r\n  e: Event,\r\n  value: EventValue\r\n): EventValue {\r\n  if (isArray(value)) {\r\n    const originalStop = e.stopImmediatePropagation\r\n    e.stopImmediatePropagation = () => {\r\n      originalStop.call(e)\r\n      ;(e as any)._stopped = true\r\n    }\r\n    return value.map(fn => (e: Event) => !(e as any)._stopped && fn && fn(e))\r\n  } else {\r\n    return value\r\n  }\r\n}\r\n","import { patchClass } from './modules/class'\r\nimport { patchStyle } from './modules/style'\r\nimport { patchAttr } from './modules/attrs'\r\nimport { patchDOMProp } from './modules/props'\r\nimport { patchEvent } from './modules/events'\r\nimport { isOn, isString, isFunction, isModelListener } from '@vue/shared'\r\nimport { RendererOptions } from '@vue/runtime-core'\r\n\r\nconst nativeOnRE = /^on[a-z]/\r\n\r\ntype DOMRendererOptions = RendererOptions<Node, Element>\r\n\r\nexport const patchProp: DOMRendererOptions['patchProp'] = (\r\n  el,\r\n  key,\r\n  prevValue,\r\n  nextValue,\r\n  isSVG = false,\r\n  prevChildren,\r\n  parentComponent,\r\n  parentSuspense,\r\n  unmountChildren\r\n) => {\r\n  if (key === 'class') {\r\n    patchClass(el, nextValue, isSVG)\r\n  } else if (key === 'style') {\r\n    patchStyle(el, prevValue, nextValue)\r\n  } else if (isOn(key)) {\r\n    // ignore v-model listeners\r\n    if (!isModelListener(key)) {\r\n      patchEvent(el, key, prevValue, nextValue, parentComponent)\r\n    }\r\n  } else if (\r\n    key[0] === '.'\r\n      ? ((key = key.slice(1)), true)\r\n      : key[0] === '^'\r\n      ? ((key = key.slice(1)), false)\r\n      : shouldSetAsProp(el, key, nextValue, isSVG)\r\n  ) {\r\n    patchDOMProp(\r\n      el,\r\n      key,\r\n      nextValue,\r\n      prevChildren,\r\n      parentComponent,\r\n      parentSuspense,\r\n      unmountChildren\r\n    )\r\n  } else {\r\n    // special case for <input v-model type=\"checkbox\"> with\r\n    // :true-value & :false-value\r\n    // store value as dom properties since non-string values will be\r\n    // stringified.\r\n    if (key === 'true-value') {\r\n      ;(el as any)._trueValue = nextValue\r\n    } else if (key === 'false-value') {\r\n      ;(el as any)._falseValue = nextValue\r\n    }\r\n    patchAttr(el, key, nextValue, isSVG, parentComponent)\r\n  }\r\n}\r\n\r\nfunction shouldSetAsProp(\r\n  el: Element,\r\n  key: string,\r\n  value: unknown,\r\n  isSVG: boolean\r\n) {\r\n  if (isSVG) {\r\n    // most keys must be set as attribute on svg elements to work\r\n    // ...except innerHTML & textContent\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n      return true\r\n    }\r\n    // or native onclick with function values\r\n    if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  // these are enumerated attrs, however their corresponding DOM properties\r\n  // are actually booleans - this leads to setting it with a string \"false\"\r\n  // value leading it to be coerced to `true`, so we need to always treat\r\n  // them as attributes.\r\n  // Note that `contentEditable` doesn't have this problem: its DOM\r\n  // property is also enumerated string values.\r\n  if (key === 'spellcheck' || key === 'draggable' || key === 'translate') {\r\n    return false\r\n  }\r\n\r\n  // #1787, #2840 form property on form elements is readonly and must be set as\r\n  // attribute.\r\n  if (key === 'form') {\r\n    return false\r\n  }\r\n\r\n  // #1526 <input list> must be set as attribute\r\n  if (key === 'list' && el.tagName === 'INPUT') {\r\n    return false\r\n  }\r\n\r\n  // #2766 <textarea type> must be set as attribute\r\n  if (key === 'type' && el.tagName === 'TEXTAREA') {\r\n    return false\r\n  }\r\n\r\n  // native onclick with string value, must be set as attribute\r\n  if (nativeOnRE.test(key) && isString(value)) {\r\n    return false\r\n  }\r\n\r\n  return key in el\r\n}\r\n","import { ElementWithTransition } from '../components/Transition'\r\n\r\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nexport function patchClass(el: Element, value: string | null, isSVG: boolean) {\r\n  // directly setting className should be faster than setAttribute in theory\r\n  // if this is an element during a transition, take the temporary transition\r\n  // classes into account.\r\n  const transitionClasses = (el as ElementWithTransition)._vtc\r\n  if (transitionClasses) {\r\n    value = (\r\n      value ? [value, ...transitionClasses] : [...transitionClasses]\r\n    ).join(' ')\r\n  }\r\n  if (value == null) {\r\n    el.removeAttribute('class')\r\n  } else if (isSVG) {\r\n    el.setAttribute('class', value)\r\n  } else {\r\n    el.className = value\r\n  }\r\n}\r\n","// __UNSAFE__\r\n// Reason: potentially setting innerHTML.\r\n// This can come from explicit usage of v-html or innerHTML as a prop in render\r\n\r\nimport { warn, DeprecationTypes, compatUtils } from '@vue/runtime-core'\r\nimport { includeBooleanAttr } from '@vue/shared'\r\n\r\n// functions. The user is responsible for using them with only trusted content.\r\nexport function patchDOMProp(\r\n  el: any,\r\n  key: string,\r\n  value: any,\r\n  // the following args are passed only due to potential innerHTML/textContent\r\n  // overriding existing VNodes, in which case the old tree must be properly\r\n  // unmounted.\r\n  prevChildren: any,\r\n  parentComponent: any,\r\n  parentSuspense: any,\r\n  unmountChildren: any\r\n) {\r\n  if (key === 'innerHTML' || key === 'textContent') {\r\n    if (prevChildren) {\r\n      unmountChildren(prevChildren, parentComponent, parentSuspense)\r\n    }\r\n    el[key] = value == null ? '' : value\r\n    return\r\n  }\r\n\r\n  if (\r\n    key === 'value' &&\r\n    el.tagName !== 'PROGRESS' &&\r\n    // custom elements may use _value internally\r\n    !el.tagName.includes('-')\r\n  ) {\r\n    // store value as _value as well since\r\n    // non-string values will be stringified.\r\n    el._value = value\r\n    const newValue = value == null ? '' : value\r\n    if (\r\n      el.value !== newValue ||\r\n      // #4956: always set for OPTION elements because its value falls back to\r\n      // textContent if no value attribute is present. And setting .value for\r\n      // OPTION has no side effect\r\n      el.tagName === 'OPTION'\r\n    ) {\r\n      el.value = newValue\r\n    }\r\n    if (value == null) {\r\n      el.removeAttribute(key)\r\n    }\r\n    return\r\n  }\r\n\r\n  let needRemove = false\r\n  if (value === '' || value == null) {\r\n    const type = typeof el[key]\r\n    if (type === 'boolean') {\r\n      // e.g. <select multiple> compiles to { multiple: '' }\r\n      value = includeBooleanAttr(value)\r\n    } else if (value == null && type === 'string') {\r\n      // e.g. <div :id=\"null\">\r\n      value = ''\r\n      needRemove = true\r\n    } else if (type === 'number') {\r\n      // e.g. <img :width=\"null\">\r\n      // the value of some IDL attr must be greater than 0, e.g. input.size = 0 -> error\r\n      value = 0\r\n      needRemove = true\r\n    }\r\n  } else {\r\n    if (\r\n      __COMPAT__ &&\r\n      value === false &&\r\n      compatUtils.isCompatEnabled(\r\n        DeprecationTypes.ATTR_FALSE_VALUE,\r\n        parentComponent\r\n      )\r\n    ) {\r\n      const type = typeof el[key]\r\n      if (type === 'string' || type === 'number') {\r\n        __DEV__ &&\r\n          compatUtils.warnDeprecation(\r\n            DeprecationTypes.ATTR_FALSE_VALUE,\r\n            parentComponent,\r\n            key\r\n          )\r\n        value = type === 'number' ? 0 : ''\r\n        needRemove = true\r\n      }\r\n    }\r\n  }\r\n\r\n  // some properties perform value validation and throw,\r\n  // some properties has getter, no setter, will error in 'use strict'\r\n  // eg. <select :type=\"null\"></select> <select :willValidate=\"null\"></select>\r\n  try {\r\n    el[key] = value\r\n  } catch (e: any) {\r\n    if (__DEV__) {\r\n      warn(\r\n        `Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n          `value ${value} is invalid.`,\r\n        e\r\n      )\r\n    }\r\n  }\r\n  needRemove && el.removeAttribute(key)\r\n}\r\n","import {\r\n  getCurrentInstance,\r\n  warn,\r\n  VNode,\r\n  Fragment,\r\n  Static,\r\n  watchPostEffect,\r\n  onMounted,\r\n  onUnmounted\r\n} from '@vue/runtime-core'\r\nimport { ShapeFlags } from '@vue/shared'\r\n\r\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nexport function useCssVars(getter: (ctx: any) => Record<string, string>) {\r\n  if (!__BROWSER__ && !__TEST__) return\r\n\r\n  const instance = getCurrentInstance()\r\n  /* istanbul ignore next */\r\n  if (!instance) {\r\n    __DEV__ &&\r\n      warn(`useCssVars is called without current active component instance.`)\r\n    return\r\n  }\r\n\r\n  const setVars = () =>\r\n    setVarsOnVNode(instance.subTree, getter(instance.proxy!))\r\n  watchPostEffect(setVars)\r\n  onMounted(() => {\r\n    const ob = new MutationObserver(setVars)\r\n    ob.observe(instance.subTree.el!.parentNode, { childList: true })\r\n    onUnmounted(() => ob.disconnect())\r\n  })\r\n}\r\n\r\nfunction setVarsOnVNode(vnode: VNode, vars: Record<string, string>) {\r\n  if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n    const suspense = vnode.suspense!\r\n    vnode = suspense.activeBranch!\r\n    if (suspense.pendingBranch && !suspense.isHydrating) {\r\n      suspense.effects.push(() => {\r\n        setVarsOnVNode(suspense.activeBranch!, vars)\r\n      })\r\n    }\r\n  }\r\n\r\n  // drill down HOCs until it's a non-component vnode\r\n  while (vnode.component) {\r\n    vnode = vnode.component.subTree\r\n  }\r\n\r\n  if (vnode.shapeFlag & ShapeFlags.ELEMENT && vnode.el) {\r\n    setVarsOnNode(vnode.el as Node, vars)\r\n  } else if (vnode.type === Fragment) {\r\n    ;(vnode.children as VNode[]).forEach(c => setVarsOnVNode(c, vars))\r\n  } else if (vnode.type === Static) {\r\n    let { el, anchor } = vnode\r\n    while (el) {\r\n      setVarsOnNode(el as Node, vars)\r\n      if (el === anchor) break\r\n      el = el.nextSibling\r\n    }\r\n  }\r\n}\r\n\r\nfunction setVarsOnNode(el: Node, vars: Record<string, string>) {\r\n  if (el.nodeType === 1) {\r\n    const style = (el as HTMLElement).style\r\n    for (const key in vars) {\r\n      style.setProperty(`--${key}`, vars[key])\r\n    }\r\n  }\r\n}\r\n","import {\r\n  BaseTransition,\r\n  BaseTransitionProps,\r\n  h,\r\n  warn,\r\n  FunctionalComponent,\r\n  compatUtils,\r\n  DeprecationTypes\r\n} from '@vue/runtime-core'\r\nimport { isObject, toNumber, extend, isArray } from '@vue/shared'\r\n\r\nconst TRANSITION = 'transition'\r\nconst ANIMATION = 'animation'\r\n\r\nexport interface TransitionProps extends BaseTransitionProps<Element> {\r\n  name?: string\r\n  type?: typeof TRANSITION | typeof ANIMATION\r\n  css?: boolean\r\n  duration?: number | { enter: number; leave: number }\r\n  // custom transition classes\r\n  enterFromClass?: string\r\n  enterActiveClass?: string\r\n  enterToClass?: string\r\n  appearFromClass?: string\r\n  appearActiveClass?: string\r\n  appearToClass?: string\r\n  leaveFromClass?: string\r\n  leaveActiveClass?: string\r\n  leaveToClass?: string\r\n}\r\n\r\nexport interface ElementWithTransition extends HTMLElement {\r\n  // _vtc = Vue Transition Classes.\r\n  // Store the temporarily-added transition classes on the element\r\n  // so that we can avoid overwriting them if the element's class is patched\r\n  // during the transition.\r\n  _vtc?: Set<string>\r\n}\r\n\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nexport const Transition: FunctionalComponent<TransitionProps> = (\r\n  props,\r\n  { slots }\r\n) => h(BaseTransition, resolveTransitionProps(props), slots)\r\n\r\nTransition.displayName = 'Transition'\r\n\r\nif (__COMPAT__) {\r\n  Transition.__isBuiltIn = true\r\n}\r\n\r\nconst DOMTransitionPropsValidators = {\r\n  name: String,\r\n  type: String,\r\n  css: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  duration: [String, Number, Object],\r\n  enterFromClass: String,\r\n  enterActiveClass: String,\r\n  enterToClass: String,\r\n  appearFromClass: String,\r\n  appearActiveClass: String,\r\n  appearToClass: String,\r\n  leaveFromClass: String,\r\n  leaveActiveClass: String,\r\n  leaveToClass: String\r\n}\r\n\r\nexport const TransitionPropsValidators = (Transition.props =\r\n  /*#__PURE__*/ extend(\r\n    {},\r\n    (BaseTransition as any).props,\r\n    DOMTransitionPropsValidators\r\n  ))\r\n\r\n/**\r\n * #3227 Incoming hooks may be merged into arrays when wrapping Transition\r\n * with custom HOCs.\r\n */\r\nconst callHook = (\r\n  hook: Function | Function[] | undefined,\r\n  args: any[] = []\r\n) => {\r\n  if (isArray(hook)) {\r\n    hook.forEach(h => h(...args))\r\n  } else if (hook) {\r\n    hook(...args)\r\n  }\r\n}\r\n\r\n/**\r\n * Check if a hook expects a callback (2nd arg), which means the user\r\n * intends to explicitly control the end of the transition.\r\n */\r\nconst hasExplicitCallback = (\r\n  hook: Function | Function[] | undefined\r\n): boolean => {\r\n  return hook\r\n    ? isArray(hook)\r\n      ? hook.some(h => h.length > 1)\r\n      : hook.length > 1\r\n    : false\r\n}\r\n\r\nexport function resolveTransitionProps(\r\n  rawProps: TransitionProps\r\n): BaseTransitionProps<Element> {\r\n  const baseProps: BaseTransitionProps<Element> = {}\r\n  for (const key in rawProps) {\r\n    if (!(key in DOMTransitionPropsValidators)) {\r\n      ;(baseProps as any)[key] = (rawProps as any)[key]\r\n    }\r\n  }\r\n\r\n  if (rawProps.css === false) {\r\n    return baseProps\r\n  }\r\n\r\n  const {\r\n    name = 'v',\r\n    type,\r\n    duration,\r\n    enterFromClass = `${name}-enter-from`,\r\n    enterActiveClass = `${name}-enter-active`,\r\n    enterToClass = `${name}-enter-to`,\r\n    appearFromClass = enterFromClass,\r\n    appearActiveClass = enterActiveClass,\r\n    appearToClass = enterToClass,\r\n    leaveFromClass = `${name}-leave-from`,\r\n    leaveActiveClass = `${name}-leave-active`,\r\n    leaveToClass = `${name}-leave-to`\r\n  } = rawProps\r\n\r\n  // legacy transition class compat\r\n  const legacyClassEnabled =\r\n    __COMPAT__ &&\r\n    compatUtils.isCompatEnabled(DeprecationTypes.TRANSITION_CLASSES, null)\r\n  let legacyEnterFromClass: string\r\n  let legacyAppearFromClass: string\r\n  let legacyLeaveFromClass: string\r\n  if (__COMPAT__ && legacyClassEnabled) {\r\n    const toLegacyClass = (cls: string) => cls.replace(/-from$/, '')\r\n    if (!rawProps.enterFromClass) {\r\n      legacyEnterFromClass = toLegacyClass(enterFromClass)\r\n    }\r\n    if (!rawProps.appearFromClass) {\r\n      legacyAppearFromClass = toLegacyClass(appearFromClass)\r\n    }\r\n    if (!rawProps.leaveFromClass) {\r\n      legacyLeaveFromClass = toLegacyClass(leaveFromClass)\r\n    }\r\n  }\r\n\r\n  const durations = normalizeDuration(duration)\r\n  const enterDuration = durations && durations[0]\r\n  const leaveDuration = durations && durations[1]\r\n  const {\r\n    onBeforeEnter,\r\n    onEnter,\r\n    onEnterCancelled,\r\n    onLeave,\r\n    onLeaveCancelled,\r\n    onBeforeAppear = onBeforeEnter,\r\n    onAppear = onEnter,\r\n    onAppearCancelled = onEnterCancelled\r\n  } = baseProps\r\n\r\n  const finishEnter = (el: Element, isAppear: boolean, done?: () => void) => {\r\n    removeTransitionClass(el, isAppear ? appearToClass : enterToClass)\r\n    removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass)\r\n    done && done()\r\n  }\r\n\r\n  const finishLeave = (\r\n    el: Element & { _isLeaving?: boolean },\r\n    done?: () => void\r\n  ) => {\r\n    el._isLeaving = false\r\n    removeTransitionClass(el, leaveFromClass)\r\n    removeTransitionClass(el, leaveToClass)\r\n    removeTransitionClass(el, leaveActiveClass)\r\n    done && done()\r\n  }\r\n\r\n  const makeEnterHook = (isAppear: boolean) => {\r\n    return (el: Element, done: () => void) => {\r\n      const hook = isAppear ? onAppear : onEnter\r\n      const resolve = () => finishEnter(el, isAppear, done)\r\n      callHook(hook, [el, resolve])\r\n      nextFrame(() => {\r\n        removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass)\r\n        if (__COMPAT__ && legacyClassEnabled) {\r\n          removeTransitionClass(\r\n            el,\r\n            isAppear ? legacyAppearFromClass : legacyEnterFromClass\r\n          )\r\n        }\r\n        addTransitionClass(el, isAppear ? appearToClass : enterToClass)\r\n        if (!hasExplicitCallback(hook)) {\r\n          whenTransitionEnds(el, type, enterDuration, resolve)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return extend(baseProps, {\r\n    onBeforeEnter(el) {\r\n      callHook(onBeforeEnter, [el])\r\n      addTransitionClass(el, enterFromClass)\r\n      if (__COMPAT__ && legacyClassEnabled) {\r\n        addTransitionClass(el, legacyEnterFromClass)\r\n      }\r\n      addTransitionClass(el, enterActiveClass)\r\n    },\r\n    onBeforeAppear(el) {\r\n      callHook(onBeforeAppear, [el])\r\n      addTransitionClass(el, appearFromClass)\r\n      if (__COMPAT__ && legacyClassEnabled) {\r\n        addTransitionClass(el, legacyAppearFromClass)\r\n      }\r\n      addTransitionClass(el, appearActiveClass)\r\n    },\r\n    onEnter: makeEnterHook(false),\r\n    onAppear: makeEnterHook(true),\r\n    onLeave(el: Element & { _isLeaving?: boolean }, done) {\r\n      el._isLeaving = true\r\n      const resolve = () => finishLeave(el, done)\r\n      addTransitionClass(el, leaveFromClass)\r\n      if (__COMPAT__ && legacyClassEnabled) {\r\n        addTransitionClass(el, legacyLeaveFromClass)\r\n      }\r\n      // force reflow so *-leave-from classes immediately take effect (#2593)\r\n      forceReflow()\r\n      addTransitionClass(el, leaveActiveClass)\r\n      nextFrame(() => {\r\n        if (!el._isLeaving) {\r\n          // cancelled\r\n          return\r\n        }\r\n        removeTransitionClass(el, leaveFromClass)\r\n        if (__COMPAT__ && legacyClassEnabled) {\r\n          removeTransitionClass(el, legacyLeaveFromClass)\r\n        }\r\n        addTransitionClass(el, leaveToClass)\r\n        if (!hasExplicitCallback(onLeave)) {\r\n          whenTransitionEnds(el, type, leaveDuration, resolve)\r\n        }\r\n      })\r\n      callHook(onLeave, [el, resolve])\r\n    },\r\n    onEnterCancelled(el) {\r\n      finishEnter(el, false)\r\n      callHook(onEnterCancelled, [el])\r\n    },\r\n    onAppearCancelled(el) {\r\n      finishEnter(el, true)\r\n      callHook(onAppearCancelled, [el])\r\n    },\r\n    onLeaveCancelled(el) {\r\n      finishLeave(el)\r\n      callHook(onLeaveCancelled, [el])\r\n    }\r\n  } as BaseTransitionProps<Element>)\r\n}\r\n\r\nfunction normalizeDuration(\r\n  duration: TransitionProps['duration']\r\n): [number, number] | null {\r\n  if (duration == null) {\r\n    return null\r\n  } else if (isObject(duration)) {\r\n    return [NumberOf(duration.enter), NumberOf(duration.leave)]\r\n  } else {\r\n    const n = NumberOf(duration)\r\n    return [n, n]\r\n  }\r\n}\r\n\r\nfunction NumberOf(val: unknown): number {\r\n  const res = toNumber(val)\r\n  if (__DEV__) validateDuration(res)\r\n  return res\r\n}\r\n\r\nfunction validateDuration(val: unknown) {\r\n  if (typeof val !== 'number') {\r\n    warn(\r\n      `<transition> explicit duration is not a valid number - ` +\r\n        `got ${JSON.stringify(val)}.`\r\n    )\r\n  } else if (isNaN(val)) {\r\n    warn(\r\n      `<transition> explicit duration is NaN - ` +\r\n        'the duration expression might be incorrect.'\r\n    )\r\n  }\r\n}\r\n\r\nexport function addTransitionClass(el: Element, cls: string) {\r\n  cls.split(/\\s+/).forEach(c => c && el.classList.add(c))\r\n  ;(\r\n    (el as ElementWithTransition)._vtc ||\r\n    ((el as ElementWithTransition)._vtc = new Set())\r\n  ).add(cls)\r\n}\r\n\r\nexport function removeTransitionClass(el: Element, cls: string) {\r\n  cls.split(/\\s+/).forEach(c => c && el.classList.remove(c))\r\n  const { _vtc } = el as ElementWithTransition\r\n  if (_vtc) {\r\n    _vtc.delete(cls)\r\n    if (!_vtc!.size) {\r\n      ;(el as ElementWithTransition)._vtc = undefined\r\n    }\r\n  }\r\n}\r\n\r\nfunction nextFrame(cb: () => void) {\r\n  requestAnimationFrame(() => {\r\n    requestAnimationFrame(cb)\r\n  })\r\n}\r\n\r\nlet endId = 0\r\n\r\nfunction whenTransitionEnds(\r\n  el: Element & { _endId?: number },\r\n  expectedType: TransitionProps['type'] | undefined,\r\n  explicitTimeout: number | null,\r\n  resolve: () => void\r\n) {\r\n  const id = (el._endId = ++endId)\r\n  const resolveIfNotStale = () => {\r\n    if (id === el._endId) {\r\n      resolve()\r\n    }\r\n  }\r\n\r\n  if (explicitTimeout) {\r\n    return setTimeout(resolveIfNotStale, explicitTimeout)\r\n  }\r\n\r\n  const { type, timeout, propCount } = getTransitionInfo(el, expectedType)\r\n  if (!type) {\r\n    return resolve()\r\n  }\r\n\r\n  const endEvent = type + 'end'\r\n  let ended = 0\r\n  const end = () => {\r\n    el.removeEventListener(endEvent, onEnd)\r\n    resolveIfNotStale()\r\n  }\r\n  const onEnd = (e: Event) => {\r\n    if (e.target === el && ++ended >= propCount) {\r\n      end()\r\n    }\r\n  }\r\n  setTimeout(() => {\r\n    if (ended < propCount) {\r\n      end()\r\n    }\r\n  }, timeout + 1)\r\n  el.addEventListener(endEvent, onEnd)\r\n}\r\n\r\ninterface CSSTransitionInfo {\r\n  type: typeof TRANSITION | typeof ANIMATION | null\r\n  propCount: number\r\n  timeout: number\r\n  hasTransform: boolean\r\n}\r\n\r\nexport function getTransitionInfo(\r\n  el: Element,\r\n  expectedType?: TransitionProps['type']\r\n): CSSTransitionInfo {\r\n  const styles: any = window.getComputedStyle(el)\r\n  // JSDOM may return undefined for transition properties\r\n  const getStyleProperties = (key: string) => (styles[key] || '').split(', ')\r\n  const transitionDelays = getStyleProperties(TRANSITION + 'Delay')\r\n  const transitionDurations = getStyleProperties(TRANSITION + 'Duration')\r\n  const transitionTimeout = getTimeout(transitionDelays, transitionDurations)\r\n  const animationDelays = getStyleProperties(ANIMATION + 'Delay')\r\n  const animationDurations = getStyleProperties(ANIMATION + 'Duration')\r\n  const animationTimeout = getTimeout(animationDelays, animationDurations)\r\n\r\n  let type: CSSTransitionInfo['type'] = null\r\n  let timeout = 0\r\n  let propCount = 0\r\n  /* istanbul ignore if */\r\n  if (expectedType === TRANSITION) {\r\n    if (transitionTimeout > 0) {\r\n      type = TRANSITION\r\n      timeout = transitionTimeout\r\n      propCount = transitionDurations.length\r\n    }\r\n  } else if (expectedType === ANIMATION) {\r\n    if (animationTimeout > 0) {\r\n      type = ANIMATION\r\n      timeout = animationTimeout\r\n      propCount = animationDurations.length\r\n    }\r\n  } else {\r\n    timeout = Math.max(transitionTimeout, animationTimeout)\r\n    type =\r\n      timeout > 0\r\n        ? transitionTimeout > animationTimeout\r\n          ? TRANSITION\r\n          : ANIMATION\r\n        : null\r\n    propCount = type\r\n      ? type === TRANSITION\r\n        ? transitionDurations.length\r\n        : animationDurations.length\r\n      : 0\r\n  }\r\n  const hasTransform =\r\n    type === TRANSITION &&\r\n    /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property'])\r\n  return {\r\n    type,\r\n    timeout,\r\n    propCount,\r\n    hasTransform\r\n  }\r\n}\r\n\r\nfunction getTimeout(delays: string[], durations: string[]): number {\r\n  while (delays.length < durations.length) {\r\n    delays = delays.concat(delays)\r\n  }\r\n  return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])))\r\n}\r\n\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s: string): number {\r\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\r\n}\r\n\r\n// synchronously force layout to put elements into a certain state\r\nexport function forceReflow() {\r\n  return document.body.offsetHeight\r\n}\r\n","import {\r\n  TransitionProps,\r\n  addTransitionClass,\r\n  removeTransitionClass,\r\n  ElementWithTransition,\r\n  getTransitionInfo,\r\n  resolveTransitionProps,\r\n  TransitionPropsValidators,\r\n  forceReflow\r\n} from './Transition'\r\nimport {\r\n  Fragment,\r\n  VNode,\r\n  warn,\r\n  resolveTransitionHooks,\r\n  useTransitionState,\r\n  getTransitionRawChildren,\r\n  getCurrentInstance,\r\n  setTransitionHooks,\r\n  createVNode,\r\n  onUpdated,\r\n  SetupContext,\r\n  toRaw,\r\n  compatUtils,\r\n  DeprecationTypes,\r\n  ComponentOptions\r\n} from '@vue/runtime-core'\r\nimport { extend } from '@vue/shared'\r\n\r\nconst positionMap = new WeakMap<VNode, DOMRect>()\r\nconst newPositionMap = new WeakMap<VNode, DOMRect>()\r\n\r\nexport type TransitionGroupProps = Omit<TransitionProps, 'mode'> & {\r\n  tag?: string\r\n  moveClass?: string\r\n}\r\n\r\nconst TransitionGroupImpl: ComponentOptions = {\r\n  name: 'TransitionGroup',\r\n\r\n  props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n    tag: String,\r\n    moveClass: String\r\n  }),\r\n\r\n  setup(props: TransitionGroupProps, { slots }: SetupContext) {\r\n    const instance = getCurrentInstance()!\r\n    const state = useTransitionState()\r\n    let prevChildren: VNode[]\r\n    let children: VNode[]\r\n\r\n    onUpdated(() => {\r\n      // children is guaranteed to exist after initial render\r\n      if (!prevChildren.length) {\r\n        return\r\n      }\r\n      const moveClass = props.moveClass || `${props.name || 'v'}-move`\r\n\r\n      if (\r\n        !hasCSSTransform(\r\n          prevChildren[0].el as ElementWithTransition,\r\n          instance.vnode.el as Node,\r\n          moveClass\r\n        )\r\n      ) {\r\n        return\r\n      }\r\n\r\n      // we divide the work into three loops to avoid mixing DOM reads and writes\r\n      // in each iteration - which helps prevent layout thrashing.\r\n      prevChildren.forEach(callPendingCbs)\r\n      prevChildren.forEach(recordPosition)\r\n      const movedChildren = prevChildren.filter(applyTranslation)\r\n\r\n      // force reflow to put everything in position\r\n      forceReflow()\r\n\r\n      movedChildren.forEach(c => {\r\n        const el = c.el as ElementWithTransition\r\n        const style = el.style\r\n        addTransitionClass(el, moveClass)\r\n        style.transform = style.webkitTransform = style.transitionDuration = ''\r\n        const cb = ((el as any)._moveCb = (e: TransitionEvent) => {\r\n          if (e && e.target !== el) {\r\n            return\r\n          }\r\n          if (!e || /transform$/.test(e.propertyName)) {\r\n            el.removeEventListener('transitionend', cb)\r\n            ;(el as any)._moveCb = null\r\n            removeTransitionClass(el, moveClass)\r\n          }\r\n        })\r\n        el.addEventListener('transitionend', cb)\r\n      })\r\n    })\r\n\r\n    return () => {\r\n      const rawProps = toRaw(props)\r\n      const cssTransitionProps = resolveTransitionProps(rawProps)\r\n      let tag = rawProps.tag || Fragment\r\n\r\n      if (\r\n        __COMPAT__ &&\r\n        !rawProps.tag &&\r\n        compatUtils.checkCompatEnabled(\r\n          DeprecationTypes.TRANSITION_GROUP_ROOT,\r\n          instance.parent\r\n        )\r\n      ) {\r\n        tag = 'span'\r\n      }\r\n\r\n      prevChildren = children\r\n      children = slots.default ? getTransitionRawChildren(slots.default()) : []\r\n\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i]\r\n        if (child.key != null) {\r\n          setTransitionHooks(\r\n            child,\r\n            resolveTransitionHooks(child, cssTransitionProps, state, instance)\r\n          )\r\n        } else if (__DEV__) {\r\n          warn(`<TransitionGroup> children must be keyed.`)\r\n        }\r\n      }\r\n\r\n      if (prevChildren) {\r\n        for (let i = 0; i < prevChildren.length; i++) {\r\n          const child = prevChildren[i]\r\n          setTransitionHooks(\r\n            child,\r\n            resolveTransitionHooks(child, cssTransitionProps, state, instance)\r\n          )\r\n          positionMap.set(child, (child.el as Element).getBoundingClientRect())\r\n        }\r\n      }\r\n\r\n      return createVNode(tag, null, children)\r\n    }\r\n  }\r\n}\r\n\r\nif (__COMPAT__) {\r\n  TransitionGroupImpl.__isBuiltIn = true\r\n}\r\n\r\n/**\r\n * TransitionGroup does not support \"mode\" so we need to remove it from the\r\n * props declarations, but direct delete operation is considered a side effect\r\n * and will make the entire transition feature non-tree-shakeable, so we do it\r\n * in a function and mark the function's invocation as pure.\r\n */\r\nconst removeMode = (props: any) => delete props.mode\r\n/*#__PURE__*/ removeMode(TransitionGroupImpl.props)\r\n\r\nexport const TransitionGroup = TransitionGroupImpl as unknown as {\r\n  new (): {\r\n    $props: TransitionGroupProps\r\n  }\r\n}\r\n\r\nfunction callPendingCbs(c: VNode) {\r\n  const el = c.el as any\r\n  if (el._moveCb) {\r\n    el._moveCb()\r\n  }\r\n  if (el._enterCb) {\r\n    el._enterCb()\r\n  }\r\n}\r\n\r\nfunction recordPosition(c: VNode) {\r\n  newPositionMap.set(c, (c.el as Element).getBoundingClientRect())\r\n}\r\n\r\nfunction applyTranslation(c: VNode): VNode | undefined {\r\n  const oldPos = positionMap.get(c)!\r\n  const newPos = newPositionMap.get(c)!\r\n  const dx = oldPos.left - newPos.left\r\n  const dy = oldPos.top - newPos.top\r\n  if (dx || dy) {\r\n    const s = (c.el as HTMLElement).style\r\n    s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`\r\n    s.transitionDuration = '0s'\r\n    return c\r\n  }\r\n}\r\n\r\nfunction hasCSSTransform(\r\n  el: ElementWithTransition,\r\n  root: Node,\r\n  moveClass: string\r\n): boolean {\r\n  // Detect whether an element with the move class applied has\r\n  // CSS transitions. Since the element may be inside an entering\r\n  // transition at this very moment, we make a clone of it and remove\r\n  // all other transition classes applied to ensure only the move class\r\n  // is applied.\r\n  const clone = el.cloneNode() as HTMLElement\r\n  if (el._vtc) {\r\n    el._vtc.forEach(cls => {\r\n      cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c))\r\n    })\r\n  }\r\n  moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c))\r\n  clone.style.display = 'none'\r\n  const container = (\r\n    root.nodeType === 1 ? root : root.parentNode\r\n  ) as HTMLElement\r\n  container.appendChild(clone)\r\n  const { hasTransform } = getTransitionInfo(clone)\r\n  container.removeChild(clone)\r\n  return hasTransform\r\n}\r\n","import {\r\n  ObjectDirective,\r\n  VNode,\r\n  DirectiveHook,\r\n  DirectiveBinding,\r\n  warn\r\n} from '@vue/runtime-core'\r\nimport { addEventListener } from '../modules/events'\r\nimport {\r\n  isArray,\r\n  looseEqual,\r\n  looseIndexOf,\r\n  invokeArrayFns,\r\n  toNumber,\r\n  isSet\r\n} from '@vue/shared'\r\n\r\ntype AssignerFn = (value: any) => void\r\n\r\nconst getModelAssigner = (vnode: VNode): AssignerFn => {\r\n  const fn =\r\n    vnode.props!['onUpdate:modelValue'] ||\r\n    (__COMPAT__ && vnode.props!['onModelCompat:input'])\r\n  return isArray(fn) ? value => invokeArrayFns(fn, value) : fn\r\n}\r\n\r\nfunction onCompositionStart(e: Event) {\r\n  ;(e.target as any).composing = true\r\n}\r\n\r\nfunction onCompositionEnd(e: Event) {\r\n  const target = e.target as any\r\n  if (target.composing) {\r\n    target.composing = false\r\n    target.dispatchEvent(new Event('input'))\r\n  }\r\n}\r\n\r\ntype ModelDirective<T> = ObjectDirective<T & { _assign: AssignerFn }>\r\n\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nexport const vModelText: ModelDirective<\r\n  HTMLInputElement | HTMLTextAreaElement\r\n> = {\r\n  created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    const castToNumber =\r\n      number || (vnode.props && vnode.props.type === 'number')\r\n    addEventListener(el, lazy ? 'change' : 'input', e => {\r\n      if ((e.target as any).composing) return\r\n      let domValue: string | number = el.value\r\n      if (trim) {\r\n        domValue = domValue.trim()\r\n      }\r\n      if (castToNumber) {\r\n        domValue = toNumber(domValue)\r\n      }\r\n      el._assign(domValue)\r\n    })\r\n    if (trim) {\r\n      addEventListener(el, 'change', () => {\r\n        el.value = el.value.trim()\r\n      })\r\n    }\r\n    if (!lazy) {\r\n      addEventListener(el, 'compositionstart', onCompositionStart)\r\n      addEventListener(el, 'compositionend', onCompositionEnd)\r\n      // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n      // switching focus before confirming composition choice\r\n      // this also fixes the issue where some browsers e.g. iOS Chrome\r\n      // fires \"change\" instead of \"input\" on autocomplete.\r\n      addEventListener(el, 'change', onCompositionEnd)\r\n    }\r\n  },\r\n  // set value on mounted so it's after min/max for type=\"range\"\r\n  mounted(el, { value }) {\r\n    el.value = value == null ? '' : value\r\n  },\r\n  beforeUpdate(el, { value, modifiers: { lazy, trim, number } }, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    // avoid clearing unresolved text. #2302\r\n    if ((el as any).composing) return\r\n    if (document.activeElement === el && el.type !== 'range') {\r\n      if (lazy) {\r\n        return\r\n      }\r\n      if (trim && el.value.trim() === value) {\r\n        return\r\n      }\r\n      if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n        return\r\n      }\r\n    }\r\n    const newValue = value == null ? '' : value\r\n    if (el.value !== newValue) {\r\n      el.value = newValue\r\n    }\r\n  }\r\n}\r\n\r\nexport const vModelCheckbox: ModelDirective<HTMLInputElement> = {\r\n  // #4096 array checkboxes need to be deep traversed\r\n  deep: true,\r\n  created(el, _, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    addEventListener(el, 'change', () => {\r\n      const modelValue = (el as any)._modelValue\r\n      const elementValue = getValue(el)\r\n      const checked = el.checked\r\n      const assign = el._assign\r\n      if (isArray(modelValue)) {\r\n        const index = looseIndexOf(modelValue, elementValue)\r\n        const found = index !== -1\r\n        if (checked && !found) {\r\n          assign(modelValue.concat(elementValue))\r\n        } else if (!checked && found) {\r\n          const filtered = [...modelValue]\r\n          filtered.splice(index, 1)\r\n          assign(filtered)\r\n        }\r\n      } else if (isSet(modelValue)) {\r\n        const cloned = new Set(modelValue)\r\n        if (checked) {\r\n          cloned.add(elementValue)\r\n        } else {\r\n          cloned.delete(elementValue)\r\n        }\r\n        assign(cloned)\r\n      } else {\r\n        assign(getCheckboxValue(el, checked))\r\n      }\r\n    })\r\n  },\r\n  // set initial checked on mount to wait for true-value/false-value\r\n  mounted: setChecked,\r\n  beforeUpdate(el, binding, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    setChecked(el, binding, vnode)\r\n  }\r\n}\r\n\r\nfunction setChecked(\r\n  el: HTMLInputElement,\r\n  { value, oldValue }: DirectiveBinding,\r\n  vnode: VNode\r\n) {\r\n  // store the v-model value on the element so it can be accessed by the\r\n  // change listener.\r\n  ;(el as any)._modelValue = value\r\n  if (isArray(value)) {\r\n    el.checked = looseIndexOf(value, vnode.props!.value) > -1\r\n  } else if (isSet(value)) {\r\n    el.checked = value.has(vnode.props!.value)\r\n  } else if (value !== oldValue) {\r\n    el.checked = looseEqual(value, getCheckboxValue(el, true))\r\n  }\r\n}\r\n\r\nexport const vModelRadio: ModelDirective<HTMLInputElement> = {\r\n  created(el, { value }, vnode) {\r\n    el.checked = looseEqual(value, vnode.props!.value)\r\n    el._assign = getModelAssigner(vnode)\r\n    addEventListener(el, 'change', () => {\r\n      el._assign(getValue(el))\r\n    })\r\n  },\r\n  beforeUpdate(el, { value, oldValue }, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    if (value !== oldValue) {\r\n      el.checked = looseEqual(value, vnode.props!.value)\r\n    }\r\n  }\r\n}\r\n\r\nexport const vModelSelect: ModelDirective<HTMLSelectElement> = {\r\n  // <select multiple> value need to be deep traversed\r\n  deep: true,\r\n  created(el, { value, modifiers: { number } }, vnode) {\r\n    const isSetModel = isSet(value)\r\n    addEventListener(el, 'change', () => {\r\n      const selectedVal = Array.prototype.filter\r\n        .call(el.options, (o: HTMLOptionElement) => o.selected)\r\n        .map((o: HTMLOptionElement) =>\r\n          number ? toNumber(getValue(o)) : getValue(o)\r\n        )\r\n      el._assign(\r\n        el.multiple\r\n          ? isSetModel\r\n            ? new Set(selectedVal)\r\n            : selectedVal\r\n          : selectedVal[0]\r\n      )\r\n    })\r\n    el._assign = getModelAssigner(vnode)\r\n  },\r\n  // set value in mounted & updated because <select> relies on its children\r\n  // <option>s.\r\n  mounted(el, { value }) {\r\n    setSelected(el, value)\r\n  },\r\n  beforeUpdate(el, _binding, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n  },\r\n  updated(el, { value }) {\r\n    setSelected(el, value)\r\n  }\r\n}\r\n\r\nfunction setSelected(el: HTMLSelectElement, value: any) {\r\n  const isMultiple = el.multiple\r\n  if (isMultiple && !isArray(value) && !isSet(value)) {\r\n    __DEV__ &&\r\n      warn(\r\n        `<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n          `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`\r\n      )\r\n    return\r\n  }\r\n  for (let i = 0, l = el.options.length; i < l; i++) {\r\n    const option = el.options[i]\r\n    const optionValue = getValue(option)\r\n    if (isMultiple) {\r\n      if (isArray(value)) {\r\n        option.selected = looseIndexOf(value, optionValue) > -1\r\n      } else {\r\n        option.selected = value.has(optionValue)\r\n      }\r\n    } else {\r\n      if (looseEqual(getValue(option), value)) {\r\n        if (el.selectedIndex !== i) el.selectedIndex = i\r\n        return\r\n      }\r\n    }\r\n  }\r\n  if (!isMultiple && el.selectedIndex !== -1) {\r\n    el.selectedIndex = -1\r\n  }\r\n}\r\n\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el: HTMLOptionElement | HTMLInputElement) {\r\n  return '_value' in el ? (el as any)._value : el.value\r\n}\r\n\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(\r\n  el: HTMLInputElement & { _trueValue?: any; _falseValue?: any },\r\n  checked: boolean\r\n) {\r\n  const key = checked ? '_trueValue' : '_falseValue'\r\n  return key in el ? el[key] : checked\r\n}\r\n\r\nexport const vModelDynamic: ObjectDirective<\r\n  HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\r\n> = {\r\n  created(el, binding, vnode) {\r\n    callModelHook(el, binding, vnode, null, 'created')\r\n  },\r\n  mounted(el, binding, vnode) {\r\n    callModelHook(el, binding, vnode, null, 'mounted')\r\n  },\r\n  beforeUpdate(el, binding, vnode, prevVNode) {\r\n    callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate')\r\n  },\r\n  updated(el, binding, vnode, prevVNode) {\r\n    callModelHook(el, binding, vnode, prevVNode, 'updated')\r\n  }\r\n}\r\n\r\nfunction resolveDynamicModel(tagName: string, type: string | undefined) {\r\n  switch (tagName) {\r\n    case 'SELECT':\r\n      return vModelSelect\r\n    case 'TEXTAREA':\r\n      return vModelText\r\n    default:\r\n      switch (type) {\r\n        case 'checkbox':\r\n          return vModelCheckbox\r\n        case 'radio':\r\n          return vModelRadio\r\n        default:\r\n          return vModelText\r\n      }\r\n  }\r\n}\r\n\r\nfunction callModelHook(\r\n  el: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement,\r\n  binding: DirectiveBinding,\r\n  vnode: VNode,\r\n  prevVNode: VNode | null,\r\n  hook: keyof ObjectDirective\r\n) {\r\n  const modelToUse = resolveDynamicModel(\r\n    el.tagName,\r\n    vnode.props && vnode.props.type\r\n  )\r\n  const fn = modelToUse[hook] as DirectiveHook\r\n  fn && fn(el, binding, vnode, prevVNode)\r\n}\r\n\r\n// SSR vnode transforms, only used when user includes client-oriented render\r\n// function in SSR\r\nexport function initVModelForSSR() {\r\n  vModelText.getSSRProps = ({ value }) => ({ value })\r\n\r\n  vModelRadio.getSSRProps = ({ value }, vnode) => {\r\n    if (vnode.props && looseEqual(vnode.props.value, value)) {\r\n      return { checked: true }\r\n    }\r\n  }\r\n\r\n  vModelCheckbox.getSSRProps = ({ value }, vnode) => {\r\n    if (isArray(value)) {\r\n      if (vnode.props && looseIndexOf(value, vnode.props.value) > -1) {\r\n        return { checked: true }\r\n      }\r\n    } else if (isSet(value)) {\r\n      if (vnode.props && value.has(vnode.props.value)) {\r\n        return { checked: true }\r\n      }\r\n    } else if (value) {\r\n      return { checked: true }\r\n    }\r\n  }\r\n\r\n  vModelDynamic.getSSRProps = (binding, vnode) => {\r\n    if (typeof vnode.type !== 'string') {\r\n      return\r\n    }\r\n    const modelToUse = resolveDynamicModel(\r\n      // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase\r\n      vnode.type.toUpperCase(),\r\n      vnode.props && vnode.props.type\r\n    )\r\n    if (modelToUse.getSSRProps) {\r\n      return modelToUse.getSSRProps(binding, vnode)\r\n    }\r\n  }\r\n}\r\n","import {\r\n  getCurrentInstance,\r\n  DeprecationTypes,\r\n  LegacyConfig,\r\n  compatUtils,\r\n  ComponentInternalInstance\r\n} from '@vue/runtime-core'\r\nimport { hyphenate, isArray } from '@vue/shared'\r\n\r\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta']\r\n\r\ntype KeyedEvent = KeyboardEvent | MouseEvent | TouchEvent\r\n\r\nconst modifierGuards: Record<\r\n  string,\r\n  (e: Event, modifiers: string[]) => void | boolean\r\n> = {\r\n  stop: e => e.stopPropagation(),\r\n  prevent: e => e.preventDefault(),\r\n  self: e => e.target !== e.currentTarget,\r\n  ctrl: e => !(e as KeyedEvent).ctrlKey,\r\n  shift: e => !(e as KeyedEvent).shiftKey,\r\n  alt: e => !(e as KeyedEvent).altKey,\r\n  meta: e => !(e as KeyedEvent).metaKey,\r\n  left: e => 'button' in e && (e as MouseEvent).button !== 0,\r\n  middle: e => 'button' in e && (e as MouseEvent).button !== 1,\r\n  right: e => 'button' in e && (e as MouseEvent).button !== 2,\r\n  exact: (e, modifiers) =>\r\n    systemModifiers.some(m => (e as any)[`${m}Key`] && !modifiers.includes(m))\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport const withModifiers = (fn: Function, modifiers: string[]) => {\r\n  return (event: Event, ...args: unknown[]) => {\r\n    for (let i = 0; i < modifiers.length; i++) {\r\n      const guard = modifierGuards[modifiers[i]]\r\n      if (guard && guard(event, modifiers)) return\r\n    }\r\n    return fn(event, ...args)\r\n  }\r\n}\r\n\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames: Record<string, string | string[]> = {\r\n  esc: 'escape',\r\n  space: ' ',\r\n  up: 'arrow-up',\r\n  left: 'arrow-left',\r\n  right: 'arrow-right',\r\n  down: 'arrow-down',\r\n  delete: 'backspace'\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport const withKeys = (fn: Function, modifiers: string[]) => {\r\n  let globalKeyCodes: LegacyConfig['keyCodes']\r\n  let instance: ComponentInternalInstance | null = null\r\n  if (__COMPAT__) {\r\n    instance = getCurrentInstance()\r\n    if (\r\n      compatUtils.isCompatEnabled(DeprecationTypes.CONFIG_KEY_CODES, instance)\r\n    ) {\r\n      if (instance) {\r\n        globalKeyCodes = (instance.appContext.config as LegacyConfig).keyCodes\r\n      }\r\n    }\r\n    if (__DEV__ && modifiers.some(m => /^\\d+$/.test(m))) {\r\n      compatUtils.warnDeprecation(\r\n        DeprecationTypes.V_ON_KEYCODE_MODIFIER,\r\n        instance\r\n      )\r\n    }\r\n  }\r\n\r\n  return (event: KeyboardEvent) => {\r\n    if (!('key' in event)) {\r\n      return\r\n    }\r\n\r\n    const eventKey = hyphenate(event.key)\r\n    if (modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n      return fn(event)\r\n    }\r\n\r\n    if (__COMPAT__) {\r\n      const keyCode = String(event.keyCode)\r\n      if (\r\n        compatUtils.isCompatEnabled(\r\n          DeprecationTypes.V_ON_KEYCODE_MODIFIER,\r\n          instance\r\n        ) &&\r\n        modifiers.some(mod => mod == keyCode)\r\n      ) {\r\n        return fn(event)\r\n      }\r\n      if (globalKeyCodes) {\r\n        for (const mod of modifiers) {\r\n          const codes = globalKeyCodes[mod]\r\n          if (codes) {\r\n            const matches = isArray(codes)\r\n              ? codes.some(code => String(code) === keyCode)\r\n              : String(codes) === keyCode\r\n            if (matches) {\r\n              return fn(event)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { ObjectDirective } from '@vue/runtime-core'\r\n\r\ninterface VShowElement extends HTMLElement {\r\n  // _vod = vue original display\r\n  _vod: string\r\n}\r\n\r\nexport const vShow: ObjectDirective<VShowElement> = {\r\n  beforeMount(el, { value }, { transition }) {\r\n    el._vod = el.style.display === 'none' ? '' : el.style.display\r\n    if (transition && value) {\r\n      transition.beforeEnter(el)\r\n    } else {\r\n      setDisplay(el, value)\r\n    }\r\n  },\r\n  mounted(el, { value }, { transition }) {\r\n    if (transition && value) {\r\n      transition.enter(el)\r\n    }\r\n  },\r\n  updated(el, { value, oldValue }, { transition }) {\r\n    if (!value === !oldValue) return\r\n    if (transition) {\r\n      if (value) {\r\n        transition.beforeEnter(el)\r\n        setDisplay(el, true)\r\n        transition.enter(el)\r\n      } else {\r\n        transition.leave(el, () => {\r\n          setDisplay(el, false)\r\n        })\r\n      }\r\n    } else {\r\n      setDisplay(el, value)\r\n    }\r\n  },\r\n  beforeUnmount(el, { value }) {\r\n    setDisplay(el, value)\r\n  }\r\n}\r\n\r\nfunction setDisplay(el: VShowElement, value: unknown): void {\r\n  el.style.display = value ? el._vod : 'none'\r\n}\r\n\r\n// SSR vnode transforms, only used when user includes client-oriented render\r\n// function in SSR\r\nexport function initVShowForSSR() {\r\n  vShow.getSSRProps = ({ value }) => {\r\n    if (!value) {\r\n      return { style: { display: 'none' } }\r\n    }\r\n  }\r\n}\r\n","import {\r\n  createRenderer,\r\n  createHydrationRenderer,\r\n  warn,\r\n  RootRenderFunction,\r\n  CreateAppFunction,\r\n  Renderer,\r\n  HydrationRenderer,\r\n  App,\r\n  RootHydrateFunction,\r\n  isRuntimeOnly,\r\n  DeprecationTypes,\r\n  compatUtils\r\n} from '@vue/runtime-core'\r\nimport { nodeOps } from './nodeOps'\r\nimport { patchProp } from './patchProp'\r\n// Importing from the compiler, will be tree-shaken in prod\r\nimport {\r\n  isFunction,\r\n  isString,\r\n  isHTMLTag,\r\n  isSVGTag,\r\n  extend,\r\n  NOOP\r\n} from '@vue/shared'\r\n\r\ndeclare module '@vue/reactivity' {\r\n  export interface RefUnwrapBailTypes {\r\n    // Note: if updating this, also update `types/refBail.d.ts`.\r\n    runtimeDOMBailTypes: Node | Window\r\n  }\r\n}\r\n\r\nconst rendererOptions = /*#__PURE__*/ extend({ patchProp }, nodeOps)\r\n\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer: Renderer<Element | ShadowRoot> | HydrationRenderer\r\n\r\nlet enabledHydration = false\r\n\r\nfunction ensureRenderer() {\r\n  return (\r\n    renderer ||\r\n    (renderer = createRenderer<Node, Element | ShadowRoot>(rendererOptions))\r\n  )\r\n}\r\n\r\nfunction ensureHydrationRenderer() {\r\n  renderer = enabledHydration\r\n    ? renderer\r\n    : createHydrationRenderer(rendererOptions)\r\n  enabledHydration = true\r\n  return renderer as HydrationRenderer\r\n}\r\n\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nexport const render = ((...args) => {\r\n  ensureRenderer().render(...args)\r\n}) as RootRenderFunction<Element | ShadowRoot>\r\n\r\nexport const hydrate = ((...args) => {\r\n  ensureHydrationRenderer().hydrate(...args)\r\n}) as RootHydrateFunction\r\n\r\nexport const createApp = ((...args) => {\r\n  const app = ensureRenderer().createApp(...args)\r\n\r\n  if (__DEV__) {\r\n    injectNativeTagCheck(app)\r\n    injectCompilerOptionsCheck(app)\r\n  }\r\n\r\n  const { mount } = app\r\n  app.mount = (containerOrSelector: Element | ShadowRoot | string): any => {\r\n    const container = normalizeContainer(containerOrSelector)\r\n    if (!container) return\r\n\r\n    const component = app._component\r\n    if (!isFunction(component) && !component.render && !component.template) {\r\n      // __UNSAFE__\r\n      // Reason: potential execution of JS expressions in in-DOM template.\r\n      // The user must make sure the in-DOM template is trusted. If it's\r\n      // rendered by the server, the template should not contain any user data.\r\n      component.template = container.innerHTML\r\n      // 2.x compat check\r\n      if (__COMPAT__ && __DEV__) {\r\n        for (let i = 0; i < container.attributes.length; i++) {\r\n          const attr = container.attributes[i]\r\n          if (attr.name !== 'v-cloak' && /^(v-|:|@)/.test(attr.name)) {\r\n            compatUtils.warnDeprecation(\r\n              DeprecationTypes.GLOBAL_MOUNT_CONTAINER,\r\n              null\r\n            )\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // clear content before mounting\r\n    container.innerHTML = ''\r\n    const proxy = mount(container, false, container instanceof SVGElement)\r\n    if (container instanceof Element) {\r\n      container.removeAttribute('v-cloak')\r\n      container.setAttribute('data-v-app', '')\r\n    }\r\n    return proxy\r\n  }\r\n\r\n  return app\r\n}) as CreateAppFunction<Element>\r\n\r\nexport const createSSRApp = ((...args) => {\r\n  const app = ensureHydrationRenderer().createApp(...args)\r\n\r\n  if (__DEV__) {\r\n    injectNativeTagCheck(app)\r\n    injectCompilerOptionsCheck(app)\r\n  }\r\n\r\n  const { mount } = app\r\n  app.mount = (containerOrSelector: Element | ShadowRoot | string): any => {\r\n    const container = normalizeContainer(containerOrSelector)\r\n    if (container) {\r\n      return mount(container, true, container instanceof SVGElement)\r\n    }\r\n  }\r\n\r\n  return app\r\n}) as CreateAppFunction<Element>\r\n\r\nfunction injectNativeTagCheck(app: App) {\r\n  // Inject `isNativeTag`\r\n  // this is used for component name validation (dev only)\r\n  Object.defineProperty(app.config, 'isNativeTag', {\r\n    value: (tag: string) => isHTMLTag(tag) || isSVGTag(tag),\r\n    writable: false\r\n  })\r\n}\r\n\r\n// dev only\r\nfunction injectCompilerOptionsCheck(app: App) {\r\n  if (isRuntimeOnly()) {\r\n    const isCustomElement = app.config.isCustomElement\r\n    Object.defineProperty(app.config, 'isCustomElement', {\r\n      get() {\r\n        return isCustomElement\r\n      },\r\n      set() {\r\n        warn(\r\n          `The \\`isCustomElement\\` config option is deprecated. Use ` +\r\n            `\\`compilerOptions.isCustomElement\\` instead.`\r\n        )\r\n      }\r\n    })\r\n\r\n    const compilerOptions = app.config.compilerOptions\r\n    const msg =\r\n      `The \\`compilerOptions\\` config option is only respected when using ` +\r\n      `a build of Vue.js that includes the runtime compiler (aka \"full build\"). ` +\r\n      `Since you are using the runtime-only build, \\`compilerOptions\\` ` +\r\n      `must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\\n` +\r\n      `- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\\n` +\r\n      `- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\\n` +\r\n      `- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-dom`\r\n\r\n    Object.defineProperty(app.config, 'compilerOptions', {\r\n      get() {\r\n        warn(msg)\r\n        return compilerOptions\r\n      },\r\n      set() {\r\n        warn(msg)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction normalizeContainer(\r\n  container: Element | ShadowRoot | string\r\n): Element | null {\r\n  if (isString(container)) {\r\n    const res = document.querySelector(container)\r\n    if (__DEV__ && !res) {\r\n      warn(\r\n        `Failed to mount app: mount target selector \"${container}\" returned null.`\r\n      )\r\n    }\r\n    return res\r\n  }\r\n  if (\r\n    __DEV__ &&\r\n    window.ShadowRoot &&\r\n    container instanceof window.ShadowRoot &&\r\n    container.mode === 'closed'\r\n  ) {\r\n    warn(\r\n      `mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`\r\n    )\r\n  }\r\n  return container as any\r\n}\r\n\r\n// Custom element support\r\nexport {\r\n  defineCustomElement,\r\n  defineSSRCustomElement,\r\n  VueElement,\r\n  VueElementConstructor\r\n} from './apiCustomElement'\r\n\r\n// SFC CSS utilities\r\nexport { useCssModule } from './helpers/useCssModule'\r\nexport { useCssVars } from './helpers/useCssVars'\r\n\r\n// DOM-only components\r\nexport { Transition, TransitionProps } from './components/Transition'\r\nexport {\r\n  TransitionGroup,\r\n  TransitionGroupProps\r\n} from './components/TransitionGroup'\r\n\r\n// **Internal** DOM-only runtime directive helpers\r\nexport {\r\n  vModelText,\r\n  vModelCheckbox,\r\n  vModelRadio,\r\n  vModelSelect,\r\n  vModelDynamic\r\n} from './directives/vModel'\r\nexport { withModifiers, withKeys } from './directives/vOn'\r\nexport { vShow } from './directives/vShow'\r\n\r\nimport { initVModelForSSR } from './directives/vModel'\r\nimport { initVShowForSSR } from './directives/vShow'\r\n\r\nlet ssrDirectiveInitialized = false\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const initDirectivesForSSR = __SSR__\r\n  ? () => {\r\n      if (!ssrDirectiveInitialized) {\r\n        ssrDirectiveInitialized = true\r\n        initVModelForSSR()\r\n        initVShowForSSR()\r\n      }\r\n    }\r\n  : NOOP\r\n\r\n// re-export everything from core\r\n// h, Component, reactivity API, nextTick, flags & types\r\nexport * from '@vue/runtime-core'\r\n","import {\r\n  ComponentOptionsMixin,\r\n  ComponentOptionsWithArrayProps,\r\n  ComponentOptionsWithObjectProps,\r\n  ComponentOptionsWithoutProps,\r\n  ComponentPropsOptions,\r\n  ComponentPublicInstance,\r\n  ComputedOptions,\r\n  EmitsOptions,\r\n  MethodOptions,\r\n  RenderFunction,\r\n  SetupContext,\r\n  ComponentInternalInstance,\r\n  VNode,\r\n  RootHydrateFunction,\r\n  ExtractPropTypes,\r\n  createVNode,\r\n  defineComponent,\r\n  nextTick,\r\n  warn,\r\n  ConcreteComponent,\r\n  ComponentOptions\r\n} from '@vue/runtime-core'\r\nimport { camelize, extend, hyphenate, isArray, toNumber } from '@vue/shared'\r\nimport { hydrate, render } from '.'\r\n\r\nexport type VueElementConstructor<P = {}> = {\r\n  new (initialProps?: Record<string, any>): VueElement & P\r\n}\r\n\r\n// defineCustomElement provides the same type inference as defineComponent\r\n// so most of the following overloads should be kept in sync w/ defineComponent.\r\n\r\n// overload 1: direct setup function\r\nexport function defineCustomElement<Props, RawBindings = object>(\r\n  setup: (\r\n    props: Readonly<Props>,\r\n    ctx: SetupContext\r\n  ) => RawBindings | RenderFunction\r\n): VueElementConstructor<Props>\r\n\r\n// overload 2: object format with no props\r\nexport function defineCustomElement<\r\n  Props = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithoutProps<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  > & { styles?: string[] }\r\n): VueElementConstructor<Props>\r\n\r\n// overload 3: object format with array props declaration\r\nexport function defineCustomElement<\r\n  PropNames extends string,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = Record<string, any>,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithArrayProps<\r\n    PropNames,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  > & { styles?: string[] }\r\n): VueElementConstructor<{ [K in PropNames]: any }>\r\n\r\n// overload 4: object format with object props declaration\r\nexport function defineCustomElement<\r\n  PropsOptions extends Readonly<ComponentPropsOptions>,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = Record<string, any>,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithObjectProps<\r\n    PropsOptions,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  > & { styles?: string[] }\r\n): VueElementConstructor<ExtractPropTypes<PropsOptions>>\r\n\r\n// overload 5: defining a custom element from the returned value of\r\n// `defineComponent`\r\nexport function defineCustomElement(options: {\r\n  new (...args: any[]): ComponentPublicInstance\r\n}): VueElementConstructor\r\n\r\nexport function defineCustomElement(\r\n  options: any,\r\n  hydrate?: RootHydrateFunction\r\n): VueElementConstructor {\r\n  const Comp = defineComponent(options as any)\r\n  class VueCustomElement extends VueElement {\r\n    static def = Comp\r\n    constructor(initialProps?: Record<string, any>) {\r\n      super(Comp, initialProps, hydrate)\r\n    }\r\n  }\r\n\r\n  return VueCustomElement\r\n}\r\n\r\nexport const defineSSRCustomElement = ((options: any) => {\r\n  // @ts-ignore\r\n  return defineCustomElement(options, hydrate)\r\n}) as typeof defineCustomElement\r\n\r\nconst BaseClass = (\r\n  typeof HTMLElement !== 'undefined' ? HTMLElement : class {}\r\n) as typeof HTMLElement\r\n\r\ntype InnerComponentDef = ConcreteComponent & { styles?: string[] }\r\n\r\nexport class VueElement extends BaseClass {\r\n  /**\r\n   * @internal\r\n   */\r\n  _instance: ComponentInternalInstance | null = null\r\n\r\n  private _connected = false\r\n  private _resolved = false\r\n  private _numberProps: Record<string, true> | null = null\r\n  private _styles?: HTMLStyleElement[]\r\n\r\n  constructor(\r\n    private _def: InnerComponentDef,\r\n    private _props: Record<string, any> = {},\r\n    hydrate?: RootHydrateFunction\r\n  ) {\r\n    super()\r\n    if (this.shadowRoot && hydrate) {\r\n      hydrate(this._createVNode(), this.shadowRoot)\r\n    } else {\r\n      if (__DEV__ && this.shadowRoot) {\r\n        warn(\r\n          `Custom element has pre-rendered declarative shadow root but is not ` +\r\n            `defined as hydratable. Use \\`defineSSRCustomElement\\`.`\r\n        )\r\n      }\r\n      this.attachShadow({ mode: 'open' })\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    this._connected = true\r\n    if (!this._instance) {\r\n      this._resolveDef()\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this._connected = false\r\n    nextTick(() => {\r\n      if (!this._connected) {\r\n        render(null, this.shadowRoot!)\r\n        this._instance = null\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * resolve inner component definition (handle possible async component)\r\n   */\r\n  private _resolveDef() {\r\n    if (this._resolved) {\r\n      return\r\n    }\r\n    this._resolved = true\r\n\r\n    // set initial attrs\r\n    for (let i = 0; i < this.attributes.length; i++) {\r\n      this._setAttr(this.attributes[i].name)\r\n    }\r\n\r\n    // watch future attr changes\r\n    new MutationObserver(mutations => {\r\n      for (const m of mutations) {\r\n        this._setAttr(m.attributeName!)\r\n      }\r\n    }).observe(this, { attributes: true })\r\n\r\n    const resolve = (def: InnerComponentDef) => {\r\n      const { props, styles } = def\r\n      const hasOptions = !isArray(props)\r\n      const rawKeys = props ? (hasOptions ? Object.keys(props) : props) : []\r\n\r\n      // cast Number-type props set before resolve\r\n      let numberProps\r\n      if (hasOptions) {\r\n        for (const key in this._props) {\r\n          const opt = props[key]\r\n          if (opt === Number || (opt && opt.type === Number)) {\r\n            this._props[key] = toNumber(this._props[key])\r\n            ;(numberProps || (numberProps = Object.create(null)))[key] = true\r\n          }\r\n        }\r\n      }\r\n      this._numberProps = numberProps\r\n\r\n      // check if there are props set pre-upgrade or connect\r\n      for (const key of Object.keys(this)) {\r\n        if (key[0] !== '_') {\r\n          this._setProp(key, this[key as keyof this], true, false)\r\n        }\r\n      }\r\n\r\n      // defining getter/setters on prototype\r\n      for (const key of rawKeys.map(camelize)) {\r\n        Object.defineProperty(this, key, {\r\n          get() {\r\n            return this._getProp(key)\r\n          },\r\n          set(val) {\r\n            this._setProp(key, val)\r\n          }\r\n        })\r\n      }\r\n\r\n      // apply CSS\r\n      this._applyStyles(styles)\r\n\r\n      // initial render\r\n      this._update()\r\n    }\r\n\r\n    const asyncDef = (this._def as ComponentOptions).__asyncLoader\r\n    if (asyncDef) {\r\n      asyncDef().then(resolve)\r\n    } else {\r\n      resolve(this._def)\r\n    }\r\n  }\r\n\r\n  protected _setAttr(key: string) {\r\n    let value = this.getAttribute(key)\r\n    if (this._numberProps && this._numberProps[key]) {\r\n      value = toNumber(value)\r\n    }\r\n    this._setProp(camelize(key), value, false)\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  protected _getProp(key: string) {\r\n    return this._props[key]\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  protected _setProp(\r\n    key: string,\r\n    val: any,\r\n    shouldReflect = true,\r\n    shouldUpdate = true\r\n  ) {\r\n    if (val !== this._props[key]) {\r\n      this._props[key] = val\r\n      if (shouldUpdate && this._instance) {\r\n        this._update()\r\n      }\r\n      // reflect\r\n      if (shouldReflect) {\r\n        if (val === true) {\r\n          this.setAttribute(hyphenate(key), '')\r\n        } else if (typeof val === 'string' || typeof val === 'number') {\r\n          this.setAttribute(hyphenate(key), val + '')\r\n        } else if (!val) {\r\n          this.removeAttribute(hyphenate(key))\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private _update() {\r\n    render(this._createVNode(), this.shadowRoot!)\r\n  }\r\n\r\n  private _createVNode(): VNode<any, any> {\r\n    const vnode = createVNode(this._def, extend({}, this._props))\r\n    if (!this._instance) {\r\n      vnode.ce = instance => {\r\n        this._instance = instance\r\n        instance.isCE = true\r\n        // HMR\r\n        if (__DEV__) {\r\n          instance.ceReload = newStyles => {\r\n            // always reset styles\r\n            if (this._styles) {\r\n              this._styles.forEach(s => this.shadowRoot!.removeChild(s))\r\n              this._styles.length = 0\r\n            }\r\n            this._applyStyles(newStyles)\r\n            // if this is an async component, ceReload is called from the inner\r\n            // component so no need to reload the async wrapper\r\n            if (!(this._def as ComponentOptions).__asyncLoader) {\r\n              // reload\r\n              this._instance = null\r\n              this._update()\r\n            }\r\n          }\r\n        }\r\n\r\n        // intercept emit\r\n        instance.emit = (event: string, ...args: any[]) => {\r\n          this.dispatchEvent(\r\n            new CustomEvent(event, {\r\n              detail: args\r\n            })\r\n          )\r\n        }\r\n\r\n        // locate nearest Vue custom element parent for provide/inject\r\n        let parent: Node | null = this\r\n        while (\r\n          (parent =\r\n            parent && (parent.parentNode || (parent as ShadowRoot).host))\r\n        ) {\r\n          if (parent instanceof VueElement) {\r\n            instance.parent = parent._instance\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return vnode\r\n  }\r\n\r\n  private _applyStyles(styles: string[] | undefined) {\r\n    if (styles) {\r\n      styles.forEach(css => {\r\n        const s = document.createElement('style')\r\n        s.textContent = css\r\n        this.shadowRoot!.appendChild(s)\r\n        // record for HMR\r\n        if (__DEV__) {\r\n          ;(this._styles || (this._styles = [])).push(s)\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n","import {\r\n  createRenderer,\r\n  createHydrationRenderer,\r\n  warn,\r\n  RootRenderFunction,\r\n  CreateAppFunction,\r\n  Renderer,\r\n  HydrationRenderer,\r\n  App,\r\n  RootHydrateFunction,\r\n  isRuntimeOnly,\r\n  DeprecationTypes,\r\n  compatUtils\r\n} from '@vue/runtime-core'\r\nimport { nodeOps } from './nodeOps'\r\nimport { patchProp } from './patchProp'\r\n// Importing from the compiler, will be tree-shaken in prod\r\nimport {\r\n  isFunction,\r\n  isString,\r\n  isHTMLTag,\r\n  isSVGTag,\r\n  extend,\r\n  NOOP\r\n} from '@vue/shared'\r\n\r\ndeclare module '@vue/reactivity' {\r\n  export interface RefUnwrapBailTypes {\r\n    // Note: if updating this, also update `types/refBail.d.ts`.\r\n    runtimeDOMBailTypes: Node | Window\r\n  }\r\n}\r\n\r\nconst rendererOptions = /*#__PURE__*/ extend({ patchProp }, nodeOps)\r\n\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer: Renderer<Element | ShadowRoot> | HydrationRenderer\r\n\r\nlet enabledHydration = false\r\n\r\nfunction ensureRenderer() {\r\n  return (\r\n    renderer ||\r\n    (renderer = createRenderer<Node, Element | ShadowRoot>(rendererOptions))\r\n  )\r\n}\r\n\r\nfunction ensureHydrationRenderer() {\r\n  renderer = enabledHydration\r\n    ? renderer\r\n    : createHydrationRenderer(rendererOptions)\r\n  enabledHydration = true\r\n  return renderer as HydrationRenderer\r\n}\r\n\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nexport const render = ((...args) => {\r\n  ensureRenderer().render(...args)\r\n}) as RootRenderFunction<Element | ShadowRoot>\r\n\r\nexport const hydrate = ((...args) => {\r\n  ensureHydrationRenderer().hydrate(...args)\r\n}) as RootHydrateFunction\r\n\r\nexport const createApp = ((...args) => {\r\n  const app = ensureRenderer().createApp(...args)\r\n\r\n  if (__DEV__) {\r\n    injectNativeTagCheck(app)\r\n    injectCompilerOptionsCheck(app)\r\n  }\r\n\r\n  const { mount } = app\r\n  app.mount = (containerOrSelector: Element | ShadowRoot | string): any => {\r\n    const container = normalizeContainer(containerOrSelector)\r\n    if (!container) return\r\n\r\n    const component = app._component\r\n    if (!isFunction(component) && !component.render && !component.template) {\r\n      // __UNSAFE__\r\n      // Reason: potential execution of JS expressions in in-DOM template.\r\n      // The user must make sure the in-DOM template is trusted. If it's\r\n      // rendered by the server, the template should not contain any user data.\r\n      component.template = container.innerHTML\r\n      // 2.x compat check\r\n      if (__COMPAT__ && __DEV__) {\r\n        for (let i = 0; i < container.attributes.length; i++) {\r\n          const attr = container.attributes[i]\r\n          if (attr.name !== 'v-cloak' && /^(v-|:|@)/.test(attr.name)) {\r\n            compatUtils.warnDeprecation(\r\n              DeprecationTypes.GLOBAL_MOUNT_CONTAINER,\r\n              null\r\n            )\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // clear content before mounting\r\n    container.innerHTML = ''\r\n    const proxy = mount(container, false, container instanceof SVGElement)\r\n    if (container instanceof Element) {\r\n      container.removeAttribute('v-cloak')\r\n      container.setAttribute('data-v-app', '')\r\n    }\r\n    return proxy\r\n  }\r\n\r\n  return app\r\n}) as CreateAppFunction<Element>\r\n\r\nexport const createSSRApp = ((...args) => {\r\n  const app = ensureHydrationRenderer().createApp(...args)\r\n\r\n  if (__DEV__) {\r\n    injectNativeTagCheck(app)\r\n    injectCompilerOptionsCheck(app)\r\n  }\r\n\r\n  const { mount } = app\r\n  app.mount = (containerOrSelector: Element | ShadowRoot | string): any => {\r\n    const container = normalizeContainer(containerOrSelector)\r\n    if (container) {\r\n      return mount(container, true, container instanceof SVGElement)\r\n    }\r\n  }\r\n\r\n  return app\r\n}) as CreateAppFunction<Element>\r\n\r\nfunction injectNativeTagCheck(app: App) {\r\n  // Inject `isNativeTag`\r\n  // this is used for component name validation (dev only)\r\n  Object.defineProperty(app.config, 'isNativeTag', {\r\n    value: (tag: string) => isHTMLTag(tag) || isSVGTag(tag),\r\n    writable: false\r\n  })\r\n}\r\n\r\n// dev only\r\nfunction injectCompilerOptionsCheck(app: App) {\r\n  if (isRuntimeOnly()) {\r\n    const isCustomElement = app.config.isCustomElement\r\n    Object.defineProperty(app.config, 'isCustomElement', {\r\n      get() {\r\n        return isCustomElement\r\n      },\r\n      set() {\r\n        warn(\r\n          `The \\`isCustomElement\\` config option is deprecated. Use ` +\r\n            `\\`compilerOptions.isCustomElement\\` instead.`\r\n        )\r\n      }\r\n    })\r\n\r\n    const compilerOptions = app.config.compilerOptions\r\n    const msg =\r\n      `The \\`compilerOptions\\` config option is only respected when using ` +\r\n      `a build of Vue.js that includes the runtime compiler (aka \"full build\"). ` +\r\n      `Since you are using the runtime-only build, \\`compilerOptions\\` ` +\r\n      `must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\\n` +\r\n      `- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\\n` +\r\n      `- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\\n` +\r\n      `- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-dom`\r\n\r\n    Object.defineProperty(app.config, 'compilerOptions', {\r\n      get() {\r\n        warn(msg)\r\n        return compilerOptions\r\n      },\r\n      set() {\r\n        warn(msg)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction normalizeContainer(\r\n  container: Element | ShadowRoot | string\r\n): Element | null {\r\n  if (isString(container)) {\r\n    const res = document.querySelector(container)\r\n    if (__DEV__ && !res) {\r\n      warn(\r\n        `Failed to mount app: mount target selector \"${container}\" returned null.`\r\n      )\r\n    }\r\n    return res\r\n  }\r\n  if (\r\n    __DEV__ &&\r\n    window.ShadowRoot &&\r\n    container instanceof window.ShadowRoot &&\r\n    container.mode === 'closed'\r\n  ) {\r\n    warn(\r\n      `mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`\r\n    )\r\n  }\r\n  return container as any\r\n}\r\n\r\n// Custom element support\r\nexport {\r\n  defineCustomElement,\r\n  defineSSRCustomElement,\r\n  VueElement,\r\n  VueElementConstructor\r\n} from './apiCustomElement'\r\n\r\n// SFC CSS utilities\r\nexport { useCssModule } from './helpers/useCssModule'\r\nexport { useCssVars } from './helpers/useCssVars'\r\n\r\n// DOM-only components\r\nexport { Transition, TransitionProps } from './components/Transition'\r\nexport {\r\n  TransitionGroup,\r\n  TransitionGroupProps\r\n} from './components/TransitionGroup'\r\n\r\n// **Internal** DOM-only runtime directive helpers\r\nexport {\r\n  vModelText,\r\n  vModelCheckbox,\r\n  vModelRadio,\r\n  vModelSelect,\r\n  vModelDynamic\r\n} from './directives/vModel'\r\nexport { withModifiers, withKeys } from './directives/vOn'\r\nexport { vShow } from './directives/vShow'\r\n\r\nimport { initVModelForSSR } from './directives/vModel'\r\nimport { initVShowForSSR } from './directives/vShow'\r\n\r\nlet ssrDirectiveInitialized = false\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const initDirectivesForSSR = __SSR__\r\n  ? () => {\r\n      if (!ssrDirectiveInitialized) {\r\n        ssrDirectiveInitialized = true\r\n        initVModelForSSR()\r\n        initVShowForSSR()\r\n      }\r\n    }\r\n  : NOOP\r\n\r\n// re-export everything from core\r\n// h, Component, reactivity API, nextTick, flags & types\r\nexport * from '@vue/runtime-core'\r\n","import { Slot } from '../componentSlots'\r\nimport { isArray } from '@vue/shared'\r\n\r\ninterface CompiledSlotDescriptor {\r\n  name: string\r\n  fn: Slot\r\n}\r\n\r\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nexport function createSlots(\r\n  slots: Record<string, Slot>,\r\n  dynamicSlots: (\r\n    | CompiledSlotDescriptor\r\n    | CompiledSlotDescriptor[]\r\n    | undefined\r\n  )[]\r\n): Record<string, Slot> {\r\n  for (let i = 0; i < dynamicSlots.length; i++) {\r\n    const slot = dynamicSlots[i]\r\n    // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n    if (isArray(slot)) {\r\n      for (let j = 0; j < slot.length; j++) {\r\n        slots[slot[j].name] = slot[j].fn\r\n      }\r\n    } else if (slot) {\r\n      // conditional single slot generated by <template v-if=\"...\" #foo>\r\n      slots[slot.name] = slot.fn\r\n    }\r\n  }\r\n  return slots\r\n}\r\n","import { VNode, VNodeChild } from '../vnode'\r\nimport { isArray, isString, isObject } from '@vue/shared'\r\nimport { warn } from '../warning'\r\n\r\n/**\r\n * v-for string\r\n * @private\r\n */\r\nexport function renderList(\r\n  source: string,\r\n  renderItem: (value: string, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for number\r\n */\r\nexport function renderList(\r\n  source: number,\r\n  renderItem: (value: number, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for array\r\n */\r\nexport function renderList<T>(\r\n  source: T[],\r\n  renderItem: (value: T, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for iterable\r\n */\r\nexport function renderList<T>(\r\n  source: Iterable<T>,\r\n  renderItem: (value: T, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for object\r\n */\r\nexport function renderList<T>(\r\n  source: T,\r\n  renderItem: <K extends keyof T>(\r\n    value: T[K],\r\n    key: K,\r\n    index: number\r\n  ) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * Actual implementation\r\n */\r\nexport function renderList(\r\n  source: any,\r\n  renderItem: (...args: any[]) => VNodeChild,\r\n  cache?: any[],\r\n  index?: number\r\n): VNodeChild[] {\r\n  let ret: VNodeChild[]\r\n  const cached = (cache && cache[index!]) as VNode[] | undefined\r\n\r\n  if (isArray(source) || isString(source)) {\r\n    ret = new Array(source.length)\r\n    for (let i = 0, l = source.length; i < l; i++) {\r\n      ret[i] = renderItem(source[i], i, undefined, cached && cached[i])\r\n    }\r\n  } else if (typeof source === 'number') {\r\n    if (__DEV__ && !Number.isInteger(source)) {\r\n      warn(`The v-for range expect an integer value but got ${source}.`)\r\n    }\r\n    ret = new Array(source)\r\n    for (let i = 0; i < source; i++) {\r\n      ret[i] = renderItem(i + 1, i, undefined, cached && cached[i])\r\n    }\r\n  } else if (isObject(source)) {\r\n    if (source[Symbol.iterator as any]) {\r\n      ret = Array.from(source as Iterable<any>, (item, i) =>\r\n        renderItem(item, i, undefined, cached && cached[i])\r\n      )\r\n    } else {\r\n      const keys = Object.keys(source)\r\n      ret = new Array(keys.length)\r\n      for (let i = 0, l = keys.length; i < l; i++) {\r\n        const key = keys[i]\r\n        ret[i] = renderItem(source[key], key, i, cached && cached[i])\r\n      }\r\n    }\r\n  } else {\r\n    ret = []\r\n  }\r\n\r\n  if (cache) {\r\n    cache[index!] = ret\r\n  }\r\n  return ret\r\n}\r\n","import { toHandlerKey, isObject } from '@vue/shared'\r\nimport { warn } from '../warning'\r\n\r\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nexport function toHandlers(obj: Record<string, any>): Record<string, any> {\r\n  const ret: Record<string, any> = {}\r\n  if (__DEV__ && !isObject(obj)) {\r\n    warn(`v-on with no argument expects an object value.`)\r\n    return ret\r\n  }\r\n  for (const key in obj) {\r\n    ret[toHandlerKey(key)] = obj[key]\r\n  }\r\n  return ret\r\n}\r\n","import { warn, getCurrentInstance } from '@vue/runtime-core'\r\nimport { EMPTY_OBJ } from '@vue/shared'\r\n\r\nexport function useCssModule(name = '$style'): Record<string, string> {\r\n  /* istanbul ignore else */\r\n  if (!__GLOBAL__) {\r\n    const instance = getCurrentInstance()!\r\n    if (!instance) {\r\n      __DEV__ && warn(`useCssModule must be called inside setup()`)\r\n      return EMPTY_OBJ\r\n    }\r\n    const modules = instance.type.__cssModules\r\n    if (!modules) {\r\n      __DEV__ && warn(`Current instance does not have CSS modules injected.`)\r\n      return EMPTY_OBJ\r\n    }\r\n    const mod = modules[name]\r\n    if (!mod) {\r\n      __DEV__ &&\r\n        warn(`Current instance does not have CSS module named \"${name}\".`)\r\n      return EMPTY_OBJ\r\n    }\r\n    return mod as Record<string, string>\r\n  } else {\r\n    if (__DEV__) {\r\n      warn(`useCssModule() is not supported in the global build.`)\r\n    }\r\n    return EMPTY_OBJ\r\n  }\r\n}\r\n"],"names":["makeMap","str","expectsLowerCase","map","Object","create","list","split","i","length","val","toLowerCase","isGloballyWhitelisted","isSpecialBooleanAttr","includeBooleanAttr","value","normalizeStyle","isArray","res","item","normalized","isString","parseStringStyle","key","isObject","listDelimiterRE","propertyDelimiterRE","cssText","ret","forEach","tmp","trim","normalizeClass","name","looseEqual","a","b","aValidType","isDate","bValidType","getTime","isSymbol","equal","looseCompareArrays","keys","aHasKey","hasOwnProperty","bHasKey","String","looseIndexOf","arr","findIndex","replacer","_key","__v_isRef","isMap","size","entries","reduce","isSet","values","isPlainObject","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","test","isModelListener","startsWith","extend","assign","remove","el","indexOf","splice","prototype","hasOwn","call","Array","toTypeString","isFunction","isPromise","then","catch","objectToString","toString","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","fn","cache","camelizeRE","camelize","replace","_","c","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","slice","toHandlerKey","hasChanged","oldValue","is","invokeArrayFns","fns","arg","def","obj","defineProperty","configurable","enumerable","toNumber","n","parseFloat","isNaN","_globalThis","activeEffectScope","EffectScope","constructor","detached","this","parent","index","scopes","push","run","active","currentEffectScope","on","off","stop","fromParent","l","effects","cleanups","last","pop","recordEffectScope","effect","scope","createDep","dep","Set","w","wasTracked","trackOpBit","newTracked","targetMap","WeakMap","effectTrackDepth","activeEffect","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","ReactiveEffect","scheduler","undefined","lastShouldTrack","shouldTrack","deps","initDepMarkers","cleanupEffect","ptr","delete","finalizeDepMarkers","deferStop","onStop","trackStack","pauseTracking","resetTracking","track","target","type","depsMap","get","set","Map","trackEffects","debuggerEventExtraInfo","has","add","trigger","newValue","oldTarget","triggerEffects","computed","triggerEffect","allowRecurse","isNonTrackableKeys","builtInSymbols","getOwnPropertyNames","filter","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","createArrayInstrumentations","instrumentations","args","toRaw","apply","isReadonly","shallow","receiver","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","targetIsArray","Reflect","isRef","readonly","reactive","createSetter","isShallow","hadKey","Number","result","mutableHandlers","deleteProperty","ownKeys","readonlyHandlers","shallowReactiveHandlers","shallowReadonlyHandlers","toShallow","getProto","v","getPrototypeOf","rawTarget","rawKey","wrap","toReadonly","toReactive","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","method","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","next","done","createReadonlyMethod","createInstrumentations","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","shallowReadonlyInstrumentations","createInstrumentationGetter","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","shallowReadonlyCollectionHandlers","getTargetType","isExtensible","rawType","targetTypeMap","toRawType","createReactiveObject","shallowReactive","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","Proxy","isReactive","isProxy","raw","markRaw","trackRefValue","ref","triggerRefValue","newVal","r","createRef","rawValue","RefImpl","__v_isShallow","_rawValue","_value","useDirectValue","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","CustomRefImpl","factory","_get","_set","ObjectRefImpl","_object","_defaultValue","toRef","object","defaultValue","ComputedRefImpl","getter","_setter","isSSR","_dirty","_cacheable","self","stack","formatProps","props","formatProp","JSON","stringify","callWithErrorHandling","instance","err","handleError","callWithAsyncErrorHandling","throwInDev","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","config","errorHandler","contextVNode","console","error","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","nextTick","p","bind","queueJob","job","includes","id","start","end","middle","getId","findInsertionIndex","queueFlush","flushJobs","queueCb","cb","activeQueue","pendingQueue","queuePostFlushCb","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","deduped","sort","Infinity","buffer","emit","event","rawArgs","isUnmounted","vnode","modelArg","modifiersKey","number","handlerName","handler","onceHandler","emitted","normalizeEmitsOptions","comp","asMixin","emitsCache","cached","emits","hasExtends","extendEmits","normalizedFromExtend","mixins","extends","isEmitListener","options","currentRenderingInstance","currentScopeId","setCurrentRenderingInstance","prev","__scopeId","withCtx","ctx","isNonScopedSlot","_n","renderFnWithContext","_d","setBlockTracking","prevInstance","_c","renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","render","renderCache","data","setupState","inheritAttrs","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","blockStack","createVNode","Comment","root","some","filterModelListeners","cloneVNode","dirs","concat","transition","hasPropsChanged","prevProps","nextProps","emitsOptions","nextKeys","updateHOCHostEl","subTree","isSuspense","__isSuspense","Suspense","process","n1","n2","container","anchor","parentComponent","parentSuspense","isSVG","slotScopeIds","optimized","rendererInternals","patch","o","createElement","hiddenContainer","suspense","createSuspenseBoundary","pendingBranch","ssContent","triggerEvent","ssFallback","setActiveBranch","mountSuspense","um","unmount","newBranch","newFallback","activeBranch","isInFallback","isHydrating","isSameVNodeType","pendingId","timeout","setTimeout","fallback","patchSuspense","hydrate","node","hydrateNode","parentNode","document","normalize","children","isSlotChildren","normalizeSuspenseSlot","default","eventListener","m","move","resume","delayEnter","mode","afterLeave","hasUnresolvedAncestor","fallbackVNode","mountFallback","registerDep","setupRenderEffect","isInPendingSuspense","hydratedEl","asyncDep","asyncSetupResult","suspenseId","asyncResolved","handleSetupResult","placeholder","doRemove","s","block","trackBlock","isBlockTreeEnabled","openBlock","currentBlock","closeBlock","singleChild","singleRoot","child","isVNode","filterSingleRoot","dynamicChildren","queueEffectWithSuspense","branch","provide","currentInstance","provides","parentProvides","inject","treatDefaultAsFactory","arguments","watchPostEffect","doWatch","flush","INITIAL_WATCHER_VALUE","watch","source","immediate","deep","cleanup","forceTrigger","isMultiSource","traverse","onCleanup","baseGetter","queuePostRenderEffect","queuePreFlushCb","instanceWatch","publicThis","createPathGetter","setCurrentInstance","unsetCurrentInstance","path","segments","useTransitionState","state","isMounted","isLeaving","isUnmounting","leavingVNodes","onMounted","onBeforeUnmount","TransitionHookValidator","Function","BaseTransition","appear","Boolean","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","setup","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","rawProps","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","leavingHooks","update","delayLeave","earlyRemove","delayedLeave","getLeavingNodesForType","_leaveCb","leavingVNodesCache","callHook","hook","callAsyncHook","every","hooks","beforeEnter","leavingVNode","enter","afterHook","cancelHook","called","_enterCb","cancelled","leave","clone","isKeepAlive","component","keepComment","parentKey","keyedFragmentCount","Fragment","patchFlag","defineComponent","isAsyncWrapper","__asyncLoader","createInnerComp","__isKeepAlive","KeepAlive","include","RegExp","exclude","max","sharedContext","current","renderer","_unmount","storageContainer","resetShapeFlag","pruneCache","getComponentName","pruneCacheEntry","activate","isDeactivated","vnodeHook","onVnodeMounted","invokeVNodeHook","deactivate","da","onVnodeUnmounted","matches","pendingCacheKey","cacheSubtree","getInnerChild","onUpdated","rawVNode","__asyncResolved","cachedVNode","pattern","onActivated","registerKeepAliveHook","onDeactivated","wrappedHook","__wdc","injectHook","injectToKeepAliveRoot","keepAliveRoot","injected","onUnmounted","prepend","__weh","unshift","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onBeforeUpdate","onServerPrefetch","onRenderTriggered","onRenderTracked","onErrorCaptured","invokeDirectiveHook","prevVNode","bindings","oldBindings","binding","dir","COMPONENTS","NULL_DYNAMIC_COMPONENT","resolveAsset","warnMissing","maybeSelfReference","selfName","registry","ensureValidVNode","vnodes","getPublicInstance","isStatefulComponent","getExposeProxy","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","resolveMergedOptions","$forceUpdate","f","$nextTick","$watch","PublicInstanceProxyHandlers","accessCache","normalizedProps","shouldCacheAccess","publicGetter","cssModule","globalProperties","__cssModules","descriptor","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","applyOptions","beforeCreate","dataOptions","computedOptions","methods","watchOptions","provideOptions","injectOptions","created","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeUnmount","unmounted","renderTracked","renderTriggered","errorCaptured","serverPrefetch","expose","components","directives","checkDuplicateProperties","unwrapRef","normalizeInject","opt","from","resolveInjections","unwrapInjectedRef","methodHandler","createWatcher","registerLifecycleHook","register","_hook","exposed","h","base","extendsOptions","globalMixins","optionsCache","optionMergeStrategies","resolved","mergeOptions","to","strats","strat","internalOptionMergeStrats","mergeDataFn","mergeObjectOptions","mergeAsArray","beforeDestroy","destroyed","merged","setFullProps","needCastKeys","rawCastValues","hasAttrsChanged","camelKey","rawCurrentProps","castValues","resolvePropValue","isAbsent","hasDefault","propsDefaults","normalizePropsOptions","propsCache","extendProps","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","getType","ctor","match","isSameType","expectedTypes","t","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","createAppContext","app","isNativeTag","performance","warnHandler","compilerOptions","uid","createAppAPI","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","_instance","version","use","plugin","install","mixin","directive","mount","rootContainer","isHydrate","__vue_app__","setRef","rawRef","oldRawRef","isUnmount","refValue","owner","oldRef","refs","_isString","_isRef","doSet","existing","k","hasMismatch","isSVGContainer","namespaceURI","tagName","isComment","nodeType","createHydrationFunctions","mt","mountComponent","patchProp","createText","nextSibling","insert","createComment","isFragmentStart","onMismatch","handleMismatch","domType","nextNode","Text","Static","needToAdoptContent","staticCount","outerHTML","hydrateFragment","hydrateElement","locateClosingAsyncAnchor","previousSibling","lastChild","createTextVNode","hydrateChildren","forcePatchValue","endsWith","onClick","vnodeHooks","onVnodeBeforeMount","innerHTML","textContent","firstChild","parentVNode","fragmentSlotScopeIds","isFragment","hasChildNodes","_vnode","createRenderer","baseCreateRenderer","createHydrationRenderer","createHydrationFns","globalThis","window","global","__VUE__","hostInsert","hostRemove","hostPatchProp","hostCreateElement","hostCreateText","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","hostParentNode","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","getNextHostNode","processText","processCommentNode","mountStaticNode","processFragment","processElement","processComponent","internals","mountElement","patchElement","mountChildren","unmountChildren","scopeId","needCallTransitionHooks","cloneIfMounted","oldProps","newProps","toggleRecurse","onVnodeBeforeUpdate","areChildrenSVG","patchBlockChildren","patchChildren","patchProps","class","style","propsToUpdate","dynamicProps","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","traverseStaticChildren","updateComponent","initialVNode","emptyAppContext","exposeProxy","setupContext","bc","bm","bu","u","bum","rtg","rtc","sp","ce","createComponentInstance","isStateful","InternalObjectKey","initProps","initSlots","setupResult","createSetupContext","resolvedResult","e","finishComponentSetup","setupStatefulComponent","setupComponent","nextVNode","prevChildren","nextChildren","$stable","shouldUpdateComponent","updateComponentPreRender","invalidateJob","originNext","nextTree","prevTree","isAsyncWrapperVNode","hydrateSubTree","scopedInitialVNode","rawPrevProps","kebabKey","camelizedKey","updateProps","needDeletionCheck","deletionComparisonTarget","updateSlots","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","len","arrI","getSequence","nextIndex","moveType","moveStaticNode","performLeave","shouldInvokeDirs","shouldInvokeVnodeHook","onVnodeBeforeUnmount","unmountComponent","removeFragment","removeStaticNode","performRemove","mc","pc","pbc","createApp","allowed","ch1","ch2","isTeleportDisabled","disabled","isTargetSVG","SVGElement","resolveTarget","select","targetSelector","moveTeleport","targetAnchor","isReorder","Teleport","__isTeleport","querySelector","mainAnchor","wasDisabled","currentContainer","currentAnchor","nextTarget","targetNode","_lpa","disableTracking","setupBlock","createBlock","__v_isVNode","normalizeKey","normalizeRef","ref_key","ref_for","createBaseVNode","isBlockNode","needFullChildrenNormalization","__v_skip","normalizeChildren","cloned","__vccOpts","guardReactiveProps","klass","isTeleport","extraProps","mergeRef","mergedProps","mergeProps","text","flag","memo","slot","slotFlag","toMerge","incoming","compile","installWithProxy","skipOptions","template","isCustomElement","delimiters","componentCompilerOptions","finalCompilerOptions","createAttrsProxy","classifyRE","includeInferred","displayName","__name","formatComponentName","isRoot","__file","inferFromRegistry","getterOrOptions","debugOptions","setter","onlyGetter","_computed","getContext","propsOrChildren","ssrContextKey","isMemoSame","doc","templateContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","multiple","setAttribute","createTextNode","nodeValue","selector","content","before","wrapper","appendChild","importantRE","setStyle","setProperty","prefixed","rawName","prefixCache","prefixes","autoPrefix","xlinkNS","_getNow","skipTimestampCheck","Date","now","createEvent","timeStamp","ffMatch","navigator","userAgent","cachedNow","reset","addEventListener","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","optionsModifierRE","parseName","invoker","initialValue","attached","originalStop","stopImmediatePropagation","_stopped","patchStopImmediatePropagation","getNow","createInvoker","removeEventListener","nativeOnRE","transitionClasses","_vtc","join","removeAttribute","className","patchClass","isCssString","currentDisplay","display","patchStyle","shouldSetAsProp","needRemove","patchDOMProp","_trueValue","_falseValue","removeAttributeNS","setAttributeNS","isBoolean","patchAttr","setVarsOnVNode","vars","setVarsOnNode","TRANSITION","ANIMATION","Transition","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","TransitionPropsValidators","hasExplicitCallback","baseProps","durations","NumberOf","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","_isLeaving","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","cls","classList","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","d","toMs","body","offsetHeight","positionMap","newPositionMap","TransitionGroup","moveClass","hasCSSTransform","callPendingCbs","recordPosition","movedChildren","applyTranslation","transform","webkitTransform","transitionDuration","_moveCb","propertyName","cssTransitionProps","getBoundingClientRect","oldPos","newPos","dx","left","dy","top","getModelAssigner","onCompositionStart","composing","onCompositionEnd","dispatchEvent","Event","vModelText","modifiers","lazy","_assign","castToNumber","domValue","activeElement","vModelCheckbox","modelValue","_modelValue","elementValue","getValue","checked","found","filtered","getCheckboxValue","setChecked","vModelRadio","vModelSelect","isSetModel","selectedVal","selected","setSelected","_binding","isMultiple","option","optionValue","selectedIndex","vModelDynamic","callModelHook","resolveDynamicModel","systemModifiers","modifierGuards","stopPropagation","prevent","preventDefault","currentTarget","ctrl","ctrlKey","shift","shiftKey","alt","altKey","meta","metaKey","button","right","exact","keyNames","esc","space","up","down","vShow","_vod","setDisplay","rendererOptions","enabledHydration","defineCustomElement","Comp","VueCustomElement","VueElement","initialProps","super","BaseClass","HTMLElement","_def","shadowRoot","_createVNode","attachShadow","connectedCallback","_connected","_resolveDef","disconnectedCallback","_resolved","attributes","_setAttr","MutationObserver","mutations","attributeName","observe","hasOptions","rawKeys","numberProps","_numberProps","_setProp","_getProp","_applyStyles","_update","asyncDef","getAttribute","shouldReflect","shouldUpdate","isCE","CustomEvent","detail","host","ensureRenderer","ensureHydrationRenderer","normalizeContainer","initDirectivesForSSR","containerOrSelector","Element","asBlock","excludedKeys","dynamicSlots","numberOfNodes","loader","loadingComponent","errorComponent","delay","suspensible","onError","userOnError","resolvedComp","pendingRequest","retries","load","thisRequest","Error","reject","__esModule","toStringTag","loaded","delayed","_effect","runner","defaults","_compile","_rc","renderItem","noSlotted","validSlotContent","rendered","setDevtoolsHook","devtools","enabled","__VUE_DEVTOOLS_HOOK_REPLAY__","newHook","transformer","setVars","ob","childList","disconnect","msg","appWarnHandler","trace","currentVNode","normalizedStack","recurseCount","parentInstance","getComponentTrace","warnArgs","logs","entry","postfix","open","close","formatTraceEntry","formatTrace","warn","getAwaitable","awaitable","internalInstance","eventKey","guard","_id"],"mappings":"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Ce,GAEFjB,EACE,KACAc,EACAV,EAASD,gBACT,KACAT,EACAU,EACAR,EACAC,EACAC,GAEEM,EAAStT,MAAQ,EACnBsT,EAASxH,WAEToH,EACEgB,EACAD,EACAvB,EACAC,EACAC,EACA,KACAE,EACAC,EACAC,GAEFY,GAAgBN,EAAUW,KAEnBC,GAAgBG,GAAgBL,EAAWE,IAEpDhB,EACEgB,EACAF,EACAtB,EACAC,EACAC,EACAU,EACAR,EACAC,EACAC,GAGFM,EAASxH,SAAQ,KAGjBoH,EACE,KACAc,EACAV,EAASD,gBACT,KACAT,EACAU,EACAR,EACAC,EACAC,GAEEM,EAAStT,MAAQ,GACnBsT,EAASxH,iBAKf,GAAIoI,GAAgBG,GAAgBL,EAAWE,GAE7ChB,EACEgB,EACAF,EACAtB,EACAC,EACAC,EACAU,EACAR,EACAC,EACAC,GAEFY,GAAgBN,EAAUU,QAmB1B,GAfAN,GAAajB,EAAI,aAEjBa,EAASE,cAAgBQ,EACzBV,EAASgB,YACTpB,EACE,KACAc,EACAV,EAASD,gBACT,KACAT,EACAU,EACAR,EACAC,EACAC,GAEEM,EAAStT,MAAQ,EAEnBsT,EAASxH,cACJ,CACL,MAAMyI,QAAEA,EAAOD,UAAEA,GAAchB,EAC3BiB,EAAU,EACZC,YAAW,KACLlB,EAASgB,YAAcA,GACzBhB,EAASmB,SAASR,KAEnBM,GACkB,IAAZA,GACTjB,EAASmB,SAASR,IAnRtBS,CACElC,EACAC,EACAC,EACAC,EACAC,EACAE,EACAC,EACAC,EACAC,IAIN0B,QAkkBF,SACEC,EACA5G,EACA4E,EACAC,EACAC,EACAC,EACAC,EACAC,EACA4B,GAUA,MAAMvB,EAAYtF,EAAMsF,SAAWC,GACjCvF,EACA6E,EACAD,EACAgC,EAAKE,WACLC,SAAS3B,cAAc,OACvB,KACAN,EACAC,EACAC,EACAC,GACA,GAQItP,EAASkR,EACbD,EACCtB,EAASE,cAAgBxF,EAAMyF,UAChCb,EACAU,EACAP,EACAC,GAEoB,IAAlBM,EAAStT,MACXsT,EAASxH,UAEX,OAAOnI,GAlnBP3N,OAAQud,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"}