{"version":3,"file":"vue.runtime.esm-browser.prod.js","sources":["../../shared/src/makeMap.ts","../../shared/src/globalsWhitelist.ts","../../shared/src/domAttrConfig.ts","../../shared/src/normalizeProp.ts","../../shared/src/looseEqual.ts","../../shared/src/toDisplayString.ts","../../shared/src/index.ts","../../reactivity/src/effectScope.ts","../../reactivity/src/dep.ts","../../reactivity/src/effect.ts","../../reactivity/src/baseHandlers.ts","../../reactivity/src/collectionHandlers.ts","../../reactivity/src/reactive.ts","../../reactivity/src/ref.ts","../../reactivity/src/computed.ts","../../runtime-core/src/warning.ts","../../runtime-core/src/errorHandling.ts","../../runtime-core/src/scheduler.ts","../../runtime-core/src/devtools.ts","../../runtime-core/src/componentEmits.ts","../../runtime-core/src/componentRenderContext.ts","../../runtime-core/src/componentRenderUtils.ts","../../runtime-core/src/components/Suspense.ts","../../runtime-core/src/apiInject.ts","../../runtime-core/src/apiWatch.ts","../../runtime-core/src/components/BaseTransition.ts","../../runtime-core/src/apiDefineComponent.ts","../../runtime-core/src/apiAsyncComponent.ts","../../runtime-core/src/components/KeepAlive.ts","../../runtime-core/src/apiLifecycle.ts","../../runtime-core/src/directives.ts","../../runtime-core/src/helpers/resolveAssets.ts","../../runtime-core/src/helpers/renderList.ts","../../runtime-core/src/helpers/createSlots.ts","../../runtime-core/src/helpers/renderSlot.ts","../../runtime-core/src/helpers/toHandlers.ts","../../runtime-core/src/componentPublicInstance.ts","../../runtime-core/src/componentOptions.ts","../../runtime-core/src/componentProps.ts","../../runtime-core/src/componentSlots.ts","../../runtime-core/src/apiCreateApp.ts","../../runtime-core/src/rendererTemplateRef.ts","../../runtime-core/src/hydration.ts","../../runtime-core/src/renderer.ts","../../runtime-core/src/component.ts","../../runtime-core/src/components/Teleport.ts","../../runtime-core/src/vnode.ts","../../runtime-core/src/apiComputed.ts","../../runtime-core/src/apiSetupHelpers.ts","../../runtime-core/src/h.ts","../../runtime-core/src/helpers/useSsrContext.ts","../../runtime-core/src/customFormatter.ts","../../runtime-core/src/helpers/withMemo.ts","../../runtime-core/src/index.ts","../../runtime-dom/src/nodeOps.ts","../../runtime-dom/src/modules/style.ts","../../runtime-dom/src/modules/attrs.ts","../../runtime-dom/src/modules/events.ts","../../runtime-dom/src/patchProp.ts","../../runtime-dom/src/apiCustomElement.ts","../../runtime-dom/src/helpers/useCssModule.ts","../../runtime-dom/src/helpers/useCssVars.ts","../../runtime-dom/src/components/Transition.ts","../../runtime-dom/src/components/TransitionGroup.ts","../../runtime-dom/src/directives/vModel.ts","../../runtime-dom/src/directives/vOn.ts","../../runtime-dom/src/directives/vShow.ts","../../runtime-dom/src/index.ts","../../runtime-dom/src/modules/class.ts","../../runtime-dom/src/modules/props.ts","../src/runtime.ts"],"sourcesContent":["/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nexport function makeMap(\r\n  str: string,\r\n  expectsLowerCase?: boolean\r\n): (key: string) => boolean {\r\n  const map: Record<string, boolean> = Object.create(null)\r\n  const list: Array<string> = str.split(',')\r\n  for (let i = 0; i < list.length; i++) {\r\n    map[list[i]] = true\r\n  }\r\n  return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val]\r\n}\r\n","import { makeMap } from './makeMap'\r\n\r\nconst GLOBALS_WHITE_LISTED =\r\n  'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n  'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n  'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt'\r\n\r\nexport const isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED)\r\n","import { makeMap } from './makeMap'\r\n\r\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`\r\nexport const isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs)\r\n\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nexport const isBooleanAttr = /*#__PURE__*/ makeMap(\r\n  specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`\r\n)\r\n\r\n/**\r\n * Boolean attributes should be included if the value is truthy or ''.\r\n * e.g. `<select multiple>` compiles to `{ multiple: '' }`\r\n */\r\nexport function includeBooleanAttr(value: unknown): boolean {\r\n  return !!value || value === ''\r\n}\r\n\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/\r\nconst attrValidationCache: Record<string, boolean> = {}\r\n\r\nexport function isSSRSafeAttrName(name: string): boolean {\r\n  if (attrValidationCache.hasOwnProperty(name)) {\r\n    return attrValidationCache[name]\r\n  }\r\n  const isUnsafe = unsafeAttrCharRE.test(name)\r\n  if (isUnsafe) {\r\n    console.error(`unsafe attribute name: ${name}`)\r\n  }\r\n  return (attrValidationCache[name] = !isUnsafe)\r\n}\r\n\r\nexport const propsToAttrMap: Record<string, string | undefined> = {\r\n  acceptCharset: 'accept-charset',\r\n  className: 'class',\r\n  htmlFor: 'for',\r\n  httpEquiv: 'http-equiv'\r\n}\r\n\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nexport const isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(\r\n  `animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`\r\n)\r\n\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nexport const isKnownHtmlAttr = /*#__PURE__*/ makeMap(\r\n  `accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`\r\n)\r\n\r\n/**\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\r\n */\r\nexport const isKnownSvgAttr = /*#__PURE__*/ makeMap(\r\n  `xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,` +\r\n    `arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,` +\r\n    `baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,` +\r\n    `clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,` +\r\n    `color-interpolation-filters,color-profile,color-rendering,` +\r\n    `contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,` +\r\n    `descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,` +\r\n    `dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,` +\r\n    `fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,` +\r\n    `font-family,font-size,font-size-adjust,font-stretch,font-style,` +\r\n    `font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,` +\r\n    `glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,` +\r\n    `gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,` +\r\n    `horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,` +\r\n    `k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,` +\r\n    `lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,` +\r\n    `marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,` +\r\n    `mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,` +\r\n    `name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,` +\r\n    `overflow,overline-position,overline-thickness,panose-1,paint-order,path,` +\r\n    `pathLength,patternContentUnits,patternTransform,patternUnits,ping,` +\r\n    `pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,` +\r\n    `preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,` +\r\n    `rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,` +\r\n    `restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,` +\r\n    `specularConstant,specularExponent,speed,spreadMethod,startOffset,` +\r\n    `stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,` +\r\n    `strikethrough-position,strikethrough-thickness,string,stroke,` +\r\n    `stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,` +\r\n    `systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,` +\r\n    `text-decoration,text-rendering,textLength,to,transform,transform-origin,` +\r\n    `type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,` +\r\n    `unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,` +\r\n    `v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,` +\r\n    `vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,` +\r\n    `writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,` +\r\n    `xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,` +\r\n    `xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`\r\n)\r\n","import { isArray, isString, isObject, hyphenate } from './'\r\nimport { isNoUnitNumericStyleProp } from './domAttrConfig'\r\n\r\nexport type NormalizedStyle = Record<string, string | number>\r\n\r\nexport function normalizeStyle(\r\n  value: unknown\r\n): NormalizedStyle | string | undefined {\r\n  if (isArray(value)) {\r\n    const res: NormalizedStyle = {}\r\n    for (let i = 0; i < value.length; i++) {\r\n      const item = value[i]\r\n      const normalized = isString(item)\r\n        ? parseStringStyle(item)\r\n        : (normalizeStyle(item) as NormalizedStyle)\r\n      if (normalized) {\r\n        for (const key in normalized) {\r\n          res[key] = normalized[key]\r\n        }\r\n      }\r\n    }\r\n    return res\r\n  } else if (isString(value)) {\r\n    return value\r\n  } else if (isObject(value)) {\r\n    return value\r\n  }\r\n}\r\n\r\nconst listDelimiterRE = /;(?![^(]*\\))/g\r\nconst propertyDelimiterRE = /:(.+)/\r\n\r\nexport function parseStringStyle(cssText: string): NormalizedStyle {\r\n  const ret: NormalizedStyle = {}\r\n  cssText.split(listDelimiterRE).forEach(item => {\r\n    if (item) {\r\n      const tmp = item.split(propertyDelimiterRE)\r\n      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim())\r\n    }\r\n  })\r\n  return ret\r\n}\r\n\r\nexport function stringifyStyle(\r\n  styles: NormalizedStyle | string | undefined\r\n): string {\r\n  let ret = ''\r\n  if (!styles || isString(styles)) {\r\n    return ret\r\n  }\r\n  for (const key in styles) {\r\n    const value = styles[key]\r\n    const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key)\r\n    if (\r\n      isString(value) ||\r\n      (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))\r\n    ) {\r\n      // only render valid values\r\n      ret += `${normalizedKey}:${value};`\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\nexport function normalizeClass(value: unknown): string {\r\n  let res = ''\r\n  if (isString(value)) {\r\n    res = value\r\n  } else if (isArray(value)) {\r\n    for (let i = 0; i < value.length; i++) {\r\n      const normalized = normalizeClass(value[i])\r\n      if (normalized) {\r\n        res += normalized + ' '\r\n      }\r\n    }\r\n  } else if (isObject(value)) {\r\n    for (const name in value) {\r\n      if (value[name]) {\r\n        res += name + ' '\r\n      }\r\n    }\r\n  }\r\n  return res.trim()\r\n}\r\n\r\nexport function normalizeProps(props: Record<string, any> | null) {\r\n  if (!props) return null\r\n  let { class: klass, style } = props\r\n  if (klass && !isString(klass)) {\r\n    props.class = normalizeClass(klass)\r\n  }\r\n  if (style) {\r\n    props.style = normalizeStyle(style)\r\n  }\r\n  return props\r\n}\r\n","import { isArray, isDate, isObject, isSymbol } from './'\r\n\r\nfunction looseCompareArrays(a: any[], b: any[]) {\r\n  if (a.length !== b.length) return false\r\n  let equal = true\r\n  for (let i = 0; equal && i < a.length; i++) {\r\n    equal = looseEqual(a[i], b[i])\r\n  }\r\n  return equal\r\n}\r\n\r\nexport function looseEqual(a: any, b: any): boolean {\r\n  if (a === b) return true\r\n  let aValidType = isDate(a)\r\n  let bValidType = isDate(b)\r\n  if (aValidType || bValidType) {\r\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false\r\n  }\r\n  aValidType = isSymbol(a)\r\n  bValidType = isSymbol(b)\r\n  if (aValidType || bValidType) {\r\n    return a === b\r\n  }\r\n  aValidType = isArray(a)\r\n  bValidType = isArray(b)\r\n  if (aValidType || bValidType) {\r\n    return aValidType && bValidType ? looseCompareArrays(a, b) : false\r\n  }\r\n  aValidType = isObject(a)\r\n  bValidType = isObject(b)\r\n  if (aValidType || bValidType) {\r\n    /* istanbul ignore if: this if will probably never be called */\r\n    if (!aValidType || !bValidType) {\r\n      return false\r\n    }\r\n    const aKeysCount = Object.keys(a).length\r\n    const bKeysCount = Object.keys(b).length\r\n    if (aKeysCount !== bKeysCount) {\r\n      return false\r\n    }\r\n    for (const key in a) {\r\n      const aHasKey = a.hasOwnProperty(key)\r\n      const bHasKey = b.hasOwnProperty(key)\r\n      if (\r\n        (aHasKey && !bHasKey) ||\r\n        (!aHasKey && bHasKey) ||\r\n        !looseEqual(a[key], b[key])\r\n      ) {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  return String(a) === String(b)\r\n}\r\n\r\nexport function looseIndexOf(arr: any[], val: any): number {\r\n  return arr.findIndex(item => looseEqual(item, val))\r\n}\r\n","import {\r\n  isArray,\r\n  isMap,\r\n  isObject,\r\n  isFunction,\r\n  isPlainObject,\r\n  isSet,\r\n  objectToString,\r\n  isString\r\n} from './index'\r\n\r\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nexport const toDisplayString = (val: unknown): string => {\r\n  return isString(val)\r\n    ? val\r\n    : val == null\r\n    ? ''\r\n    : isArray(val) ||\r\n      (isObject(val) &&\r\n        (val.toString === objectToString || !isFunction(val.toString)))\r\n    ? JSON.stringify(val, replacer, 2)\r\n    : String(val)\r\n}\r\n\r\nconst replacer = (_key: string, val: any): any => {\r\n  // can't use isRef here since @vue/shared has no deps\r\n  if (val && val.__v_isRef) {\r\n    return replacer(_key, val.value)\r\n  } else if (isMap(val)) {\r\n    return {\r\n      [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n        ;(entries as any)[`${key} =>`] = val\r\n        return entries\r\n      }, {})\r\n    }\r\n  } else if (isSet(val)) {\r\n    return {\r\n      [`Set(${val.size})`]: [...val.values()]\r\n    }\r\n  } else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n    return String(val)\r\n  }\r\n  return val\r\n}\r\n","import { makeMap } from './makeMap'\r\n\r\nexport { makeMap }\r\nexport * from './patchFlags'\r\nexport * from './shapeFlags'\r\nexport * from './slotFlags'\r\nexport * from './globalsWhitelist'\r\nexport * from './codeframe'\r\nexport * from './normalizeProp'\r\nexport * from './domTagConfig'\r\nexport * from './domAttrConfig'\r\nexport * from './escapeHtml'\r\nexport * from './looseEqual'\r\nexport * from './toDisplayString'\r\nexport * from './typeUtils'\r\n\r\nexport const EMPTY_OBJ: { readonly [key: string]: any } = __DEV__\r\n  ? Object.freeze({})\r\n  : {}\r\nexport const EMPTY_ARR = __DEV__ ? Object.freeze([]) : []\r\n\r\nexport const NOOP = () => {}\r\n\r\n/**\r\n * Always return false.\r\n */\r\nexport const NO = () => false\r\n\r\nconst onRE = /^on[^a-z]/\r\nexport const isOn = (key: string) => onRE.test(key)\r\n\r\nexport const isModelListener = (key: string) => key.startsWith('onUpdate:')\r\n\r\nexport const extend = Object.assign\r\n\r\nexport const remove = <T>(arr: T[], el: T) => {\r\n  const i = arr.indexOf(el)\r\n  if (i > -1) {\r\n    arr.splice(i, 1)\r\n  }\r\n}\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty\r\nexport const hasOwn = (\r\n  val: object,\r\n  key: string | symbol\r\n): key is keyof typeof val => hasOwnProperty.call(val, key)\r\n\r\nexport const isArray = Array.isArray\r\nexport const isMap = (val: unknown): val is Map<any, any> =>\r\n  toTypeString(val) === '[object Map]'\r\nexport const isSet = (val: unknown): val is Set<any> =>\r\n  toTypeString(val) === '[object Set]'\r\n\r\nexport const isDate = (val: unknown): val is Date => toTypeString(val) === '[object Date]'\r\nexport const isFunction = (val: unknown): val is Function =>\r\n  typeof val === 'function'\r\nexport const isString = (val: unknown): val is string => typeof val === 'string'\r\nexport const isSymbol = (val: unknown): val is symbol => typeof val === 'symbol'\r\nexport const isObject = (val: unknown): val is Record<any, any> =>\r\n  val !== null && typeof val === 'object'\r\n\r\nexport const isPromise = <T = any>(val: unknown): val is Promise<T> => {\r\n  return isObject(val) && isFunction(val.then) && isFunction(val.catch)\r\n}\r\n\r\nexport const objectToString = Object.prototype.toString\r\nexport const toTypeString = (value: unknown): string =>\r\n  objectToString.call(value)\r\n\r\nexport const toRawType = (value: unknown): string => {\r\n  // extract \"RawType\" from strings like \"[object RawType]\"\r\n  return toTypeString(value).slice(8, -1)\r\n}\r\n\r\nexport const isPlainObject = (val: unknown): val is object =>\r\n  toTypeString(val) === '[object Object]'\r\n\r\nexport const isIntegerKey = (key: unknown) =>\r\n  isString(key) &&\r\n  key !== 'NaN' &&\r\n  key[0] !== '-' &&\r\n  '' + parseInt(key, 10) === key\r\n\r\nexport const isReservedProp = /*#__PURE__*/ makeMap(\r\n  // the leading comma is intentional so empty string \"\" is also included\r\n  ',key,ref,ref_for,ref_key,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted'\r\n)\r\n\r\nexport const isBuiltInDirective = /*#__PURE__*/ makeMap(\r\n  'bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo'\r\n)\r\n\r\nconst cacheStringFunction = <T extends (str: string) => string>(fn: T): T => {\r\n  const cache: Record<string, string> = Object.create(null)\r\n  return ((str: string) => {\r\n    const hit = cache[str]\r\n    return hit || (cache[str] = fn(str))\r\n  }) as any\r\n}\r\n\r\nconst camelizeRE = /-(\\w)/g\r\n/**\r\n * @private\r\n */\r\nexport const camelize = cacheStringFunction((str: string): string => {\r\n  return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''))\r\n})\r\n\r\nconst hyphenateRE = /\\B([A-Z])/g\r\n/**\r\n * @private\r\n */\r\nexport const hyphenate = cacheStringFunction((str: string) =>\r\n  str.replace(hyphenateRE, '-$1').toLowerCase()\r\n)\r\n\r\n/**\r\n * @private\r\n */\r\nexport const capitalize = cacheStringFunction(\r\n  (str: string) => str.charAt(0).toUpperCase() + str.slice(1)\r\n)\r\n\r\n/**\r\n * @private\r\n */\r\nexport const toHandlerKey = cacheStringFunction((str: string) =>\r\n  str ? `on${capitalize(str)}` : ``\r\n)\r\n\r\n// compare whether a value has changed, accounting for NaN.\r\nexport const hasChanged = (value: any, oldValue: any): boolean =>\r\n  !Object.is(value, oldValue)\r\n\r\nexport const invokeArrayFns = (fns: Function[], arg?: any) => {\r\n  for (let i = 0; i < fns.length; i++) {\r\n    fns[i](arg)\r\n  }\r\n}\r\n\r\nexport const def = (obj: object, key: string | symbol, value: any) => {\r\n  Object.defineProperty(obj, key, {\r\n    configurable: true,\r\n    enumerable: false,\r\n    value\r\n  })\r\n}\r\n\r\nexport const toNumber = (val: any): any => {\r\n  const n = parseFloat(val)\r\n  return isNaN(n) ? val : n\r\n}\r\n\r\nlet _globalThis: any\r\nexport const getGlobalThis = (): any => {\r\n  return (\r\n    _globalThis ||\r\n    (_globalThis =\r\n      typeof globalThis !== 'undefined'\r\n        ? globalThis\r\n        : typeof self !== 'undefined'\r\n        ? self\r\n        : typeof window !== 'undefined'\r\n        ? window\r\n        : typeof global !== 'undefined'\r\n        ? global\r\n        : {})\r\n  )\r\n}\r\n\r\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/\r\n\r\nexport function genPropsAccessExp(name: string) {\r\n  return identRE.test(name)\r\n    ? `__props.${name}`\r\n    : `__props[${JSON.stringify(name)}]`\r\n}\r\n","import { ReactiveEffect } from './effect'\r\nimport { warn } from './warning'\r\n\r\nlet activeEffectScope: EffectScope | undefined\r\n\r\nexport class EffectScope {\r\n  /**\r\n   * @internal\r\n   */\r\n  active = true\r\n  /**\r\n   * @internal\r\n   */\r\n  effects: ReactiveEffect[] = []\r\n  /**\r\n   * @internal\r\n   */\r\n  cleanups: (() => void)[] = []\r\n\r\n  /**\r\n   * only assigned by undetached scope\r\n   * @internal\r\n   */\r\n  parent: EffectScope | undefined\r\n  /**\r\n   * record undetached scopes\r\n   * @internal\r\n   */\r\n  scopes: EffectScope[] | undefined\r\n  /**\r\n   * track a child scope's index in its parent's scopes array for optimized\r\n   * removal\r\n   * @internal\r\n   */\r\n  private index: number | undefined\r\n\r\n  constructor(detached = false) {\r\n    if (!detached && activeEffectScope) {\r\n      this.parent = activeEffectScope\r\n      this.index =\r\n        (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(\r\n          this\r\n        ) - 1\r\n    }\r\n  }\r\n\r\n  run<T>(fn: () => T): T | undefined {\r\n    if (this.active) {\r\n      const currentEffectScope = activeEffectScope\r\n      try {\r\n        activeEffectScope = this\r\n        return fn()\r\n      } finally {\r\n        activeEffectScope = currentEffectScope\r\n      }\r\n    } else if (__DEV__) {\r\n      warn(`cannot run an inactive effect scope.`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This should only be called on non-detached scopes\r\n   * @internal\r\n   */\r\n  on() {\r\n    activeEffectScope = this\r\n  }\r\n\r\n  /**\r\n   * This should only be called on non-detached scopes\r\n   * @internal\r\n   */\r\n  off() {\r\n    activeEffectScope = this.parent\r\n  }\r\n\r\n  stop(fromParent?: boolean) {\r\n    if (this.active) {\r\n      let i, l\r\n      for (i = 0, l = this.effects.length; i < l; i++) {\r\n        this.effects[i].stop()\r\n      }\r\n      for (i = 0, l = this.cleanups.length; i < l; i++) {\r\n        this.cleanups[i]()\r\n      }\r\n      if (this.scopes) {\r\n        for (i = 0, l = this.scopes.length; i < l; i++) {\r\n          this.scopes[i].stop(true)\r\n        }\r\n      }\r\n      // nested scope, dereference from parent to avoid memory leaks\r\n      if (this.parent && !fromParent) {\r\n        // optimized O(1) removal\r\n        const last = this.parent.scopes!.pop()\r\n        if (last && last !== this) {\r\n          this.parent.scopes![this.index!] = last\r\n          last.index = this.index!\r\n        }\r\n      }\r\n      this.active = false\r\n    }\r\n  }\r\n}\r\n\r\nexport function effectScope(detached?: boolean) {\r\n  return new EffectScope(detached)\r\n}\r\n\r\nexport function recordEffectScope(\r\n  effect: ReactiveEffect,\r\n  scope: EffectScope | undefined = activeEffectScope\r\n) {\r\n  if (scope && scope.active) {\r\n    scope.effects.push(effect)\r\n  }\r\n}\r\n\r\nexport function getCurrentScope() {\r\n  return activeEffectScope\r\n}\r\n\r\nexport function onScopeDispose(fn: () => void) {\r\n  if (activeEffectScope) {\r\n    activeEffectScope.cleanups.push(fn)\r\n  } else if (__DEV__) {\r\n    warn(\r\n      `onScopeDispose() is called when there is no active effect scope` +\r\n        ` to be associated with.`\r\n    )\r\n  }\r\n}\r\n","import { ReactiveEffect, trackOpBit } from './effect'\r\n\r\nexport type Dep = Set<ReactiveEffect> & TrackedMarkers\r\n\r\n/**\r\n * wasTracked and newTracked maintain the status for several levels of effect\r\n * tracking recursion. One bit per level is used to define whether the dependency\r\n * was/is tracked.\r\n */\r\ntype TrackedMarkers = {\r\n  /**\r\n   * wasTracked\r\n   */\r\n  w: number\r\n  /**\r\n   * newTracked\r\n   */\r\n  n: number\r\n}\r\n\r\nexport const createDep = (effects?: ReactiveEffect[]): Dep => {\r\n  const dep = new Set<ReactiveEffect>(effects) as Dep\r\n  dep.w = 0\r\n  dep.n = 0\r\n  return dep\r\n}\r\n\r\nexport const wasTracked = (dep: Dep): boolean => (dep.w & trackOpBit) > 0\r\n\r\nexport const newTracked = (dep: Dep): boolean => (dep.n & trackOpBit) > 0\r\n\r\nexport const initDepMarkers = ({ deps }: ReactiveEffect) => {\r\n  if (deps.length) {\r\n    for (let i = 0; i < deps.length; i++) {\r\n      deps[i].w |= trackOpBit // set was tracked\r\n    }\r\n  }\r\n}\r\n\r\nexport const finalizeDepMarkers = (effect: ReactiveEffect) => {\r\n  const { deps } = effect\r\n  if (deps.length) {\r\n    let ptr = 0\r\n    for (let i = 0; i < deps.length; i++) {\r\n      const dep = deps[i]\r\n      if (wasTracked(dep) && !newTracked(dep)) {\r\n        dep.delete(effect)\r\n      } else {\r\n        deps[ptr++] = dep\r\n      }\r\n      // clear bits\r\n      dep.w &= ~trackOpBit\r\n      dep.n &= ~trackOpBit\r\n    }\r\n    deps.length = ptr\r\n  }\r\n}\r\n","import { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport { extend, isArray, isIntegerKey, isMap } from '@vue/shared'\r\nimport { EffectScope, recordEffectScope } from './effectScope'\r\nimport {\r\n  createDep,\r\n  Dep,\r\n  finalizeDepMarkers,\r\n  initDepMarkers,\r\n  newTracked,\r\n  wasTracked\r\n} from './dep'\r\nimport { ComputedRefImpl } from './computed'\r\n\r\n// The main WeakMap that stores {target -> key -> dep} connections.\r\n// Conceptually, it's easier to think of a dependency as a Dep class\r\n// which maintains a Set of subscribers, but we simply store them as\r\n// raw Sets to reduce memory overhead.\r\ntype KeyToDepMap = Map<any, Dep>\r\nconst targetMap = new WeakMap<any, KeyToDepMap>()\r\n\r\n// The number of effects currently being tracked recursively.\r\nlet effectTrackDepth = 0\r\n\r\nexport let trackOpBit = 1\r\n\r\n/**\r\n * The bitwise track markers support at most 30 levels of recursion.\r\n * This value is chosen to enable modern JS engines to use a SMI on all platforms.\r\n * When recursion depth is greater, fall back to using a full cleanup.\r\n */\r\nconst maxMarkerBits = 30\r\n\r\nexport type EffectScheduler = (...args: any[]) => any\r\n\r\nexport type DebuggerEvent = {\r\n  effect: ReactiveEffect\r\n} & DebuggerEventExtraInfo\r\n\r\nexport type DebuggerEventExtraInfo = {\r\n  target: object\r\n  type: TrackOpTypes | TriggerOpTypes\r\n  key: any\r\n  newValue?: any\r\n  oldValue?: any\r\n  oldTarget?: Map<any, any> | Set<any>\r\n}\r\n\r\nexport let activeEffect: ReactiveEffect | undefined\r\n\r\nexport const ITERATE_KEY = Symbol(__DEV__ ? 'iterate' : '')\r\nexport const MAP_KEY_ITERATE_KEY = Symbol(__DEV__ ? 'Map key iterate' : '')\r\n\r\nexport class ReactiveEffect<T = any> {\r\n  active = true\r\n  deps: Dep[] = []\r\n  parent: ReactiveEffect | undefined = undefined\r\n\r\n  /**\r\n   * Can be attached after creation\r\n   * @internal\r\n   */\r\n  computed?: ComputedRefImpl<T>\r\n  /**\r\n   * @internal\r\n   */\r\n  allowRecurse?: boolean\r\n  /**\r\n   * @internal\r\n   */\r\n  private deferStop?: boolean\r\n\r\n  onStop?: () => void\r\n  // dev only\r\n  onTrack?: (event: DebuggerEvent) => void\r\n  // dev only\r\n  onTrigger?: (event: DebuggerEvent) => void\r\n\r\n  constructor(\r\n    public fn: () => T,\r\n    public scheduler: EffectScheduler | null = null,\r\n    scope?: EffectScope\r\n  ) {\r\n    recordEffectScope(this, scope)\r\n  }\r\n\r\n  run() {\r\n    if (!this.active) {\r\n      return this.fn()\r\n    }\r\n    let parent: ReactiveEffect | undefined = activeEffect\r\n    let lastShouldTrack = shouldTrack\r\n    while (parent) {\r\n      if (parent === this) {\r\n        return\r\n      }\r\n      parent = parent.parent\r\n    }\r\n    try {\r\n      this.parent = activeEffect\r\n      activeEffect = this\r\n      shouldTrack = true\r\n\r\n      trackOpBit = 1 << ++effectTrackDepth\r\n\r\n      if (effectTrackDepth <= maxMarkerBits) {\r\n        initDepMarkers(this)\r\n      } else {\r\n        cleanupEffect(this)\r\n      }\r\n      return this.fn()\r\n    } finally {\r\n      if (effectTrackDepth <= maxMarkerBits) {\r\n        finalizeDepMarkers(this)\r\n      }\r\n\r\n      trackOpBit = 1 << --effectTrackDepth\r\n\r\n      activeEffect = this.parent\r\n      shouldTrack = lastShouldTrack\r\n      this.parent = undefined\r\n\r\n      if (this.deferStop) {\r\n        this.stop()\r\n      }\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    // stopped while running itself - defer the cleanup\r\n    if (activeEffect === this) {\r\n      this.deferStop = true\r\n    } else if (this.active) {\r\n      cleanupEffect(this)\r\n      if (this.onStop) {\r\n        this.onStop()\r\n      }\r\n      this.active = false\r\n    }\r\n  }\r\n}\r\n\r\nfunction cleanupEffect(effect: ReactiveEffect) {\r\n  const { deps } = effect\r\n  if (deps.length) {\r\n    for (let i = 0; i < deps.length; i++) {\r\n      deps[i].delete(effect)\r\n    }\r\n    deps.length = 0\r\n  }\r\n}\r\n\r\nexport interface DebuggerOptions {\r\n  onTrack?: (event: DebuggerEvent) => void\r\n  onTrigger?: (event: DebuggerEvent) => void\r\n}\r\n\r\nexport interface ReactiveEffectOptions extends DebuggerOptions {\r\n  lazy?: boolean\r\n  scheduler?: EffectScheduler\r\n  scope?: EffectScope\r\n  allowRecurse?: boolean\r\n  onStop?: () => void\r\n}\r\n\r\nexport interface ReactiveEffectRunner<T = any> {\r\n  (): T\r\n  effect: ReactiveEffect\r\n}\r\n\r\nexport function effect<T = any>(\r\n  fn: () => T,\r\n  options?: ReactiveEffectOptions\r\n): ReactiveEffectRunner {\r\n  if ((fn as ReactiveEffectRunner).effect) {\r\n    fn = (fn as ReactiveEffectRunner).effect.fn\r\n  }\r\n\r\n  const _effect = new ReactiveEffect(fn)\r\n  if (options) {\r\n    extend(_effect, options)\r\n    if (options.scope) recordEffectScope(_effect, options.scope)\r\n  }\r\n  if (!options || !options.lazy) {\r\n    _effect.run()\r\n  }\r\n  const runner = _effect.run.bind(_effect) as ReactiveEffectRunner\r\n  runner.effect = _effect\r\n  return runner\r\n}\r\n\r\nexport function stop(runner: ReactiveEffectRunner) {\r\n  runner.effect.stop()\r\n}\r\n\r\nexport let shouldTrack = true\r\nconst trackStack: boolean[] = []\r\n\r\nexport function pauseTracking() {\r\n  trackStack.push(shouldTrack)\r\n  shouldTrack = false\r\n}\r\n\r\nexport function enableTracking() {\r\n  trackStack.push(shouldTrack)\r\n  shouldTrack = true\r\n}\r\n\r\nexport function resetTracking() {\r\n  const last = trackStack.pop()\r\n  shouldTrack = last === undefined ? true : last\r\n}\r\n\r\nexport function track(target: object, type: TrackOpTypes, key: unknown) {\r\n  if (shouldTrack && activeEffect) {\r\n    let depsMap = targetMap.get(target)\r\n    if (!depsMap) {\r\n      targetMap.set(target, (depsMap = new Map()))\r\n    }\r\n    let dep = depsMap.get(key)\r\n    if (!dep) {\r\n      depsMap.set(key, (dep = createDep()))\r\n    }\r\n\r\n    const eventInfo = __DEV__\r\n      ? { effect: activeEffect, target, type, key }\r\n      : undefined\r\n\r\n    trackEffects(dep, eventInfo)\r\n  }\r\n}\r\n\r\nexport function trackEffects(\r\n  dep: Dep,\r\n  debuggerEventExtraInfo?: DebuggerEventExtraInfo\r\n) {\r\n  let shouldTrack = false\r\n  if (effectTrackDepth <= maxMarkerBits) {\r\n    if (!newTracked(dep)) {\r\n      dep.n |= trackOpBit // set newly tracked\r\n      shouldTrack = !wasTracked(dep)\r\n    }\r\n  } else {\r\n    // Full cleanup mode.\r\n    shouldTrack = !dep.has(activeEffect!)\r\n  }\r\n\r\n  if (shouldTrack) {\r\n    dep.add(activeEffect!)\r\n    activeEffect!.deps.push(dep)\r\n    if (__DEV__ && activeEffect!.onTrack) {\r\n      activeEffect!.onTrack({\r\n        effect: activeEffect!,\r\n        ...debuggerEventExtraInfo!\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport function trigger(\r\n  target: object,\r\n  type: TriggerOpTypes,\r\n  key?: unknown,\r\n  newValue?: unknown,\r\n  oldValue?: unknown,\r\n  oldTarget?: Map<unknown, unknown> | Set<unknown>\r\n) {\r\n  const depsMap = targetMap.get(target)\r\n  if (!depsMap) {\r\n    // never been tracked\r\n    return\r\n  }\r\n\r\n  let deps: (Dep | undefined)[] = []\r\n  if (type === TriggerOpTypes.CLEAR) {\r\n    // collection being cleared\r\n    // trigger all effects for target\r\n    deps = [...depsMap.values()]\r\n  } else if (key === 'length' && isArray(target)) {\r\n    depsMap.forEach((dep, key) => {\r\n      if (key === 'length' || key >= (newValue as number)) {\r\n        deps.push(dep)\r\n      }\r\n    })\r\n  } else {\r\n    // schedule runs for SET | ADD | DELETE\r\n    if (key !== void 0) {\r\n      deps.push(depsMap.get(key))\r\n    }\r\n\r\n    // also run for iteration key on ADD | DELETE | Map.SET\r\n    switch (type) {\r\n      case TriggerOpTypes.ADD:\r\n        if (!isArray(target)) {\r\n          deps.push(depsMap.get(ITERATE_KEY))\r\n          if (isMap(target)) {\r\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY))\r\n          }\r\n        } else if (isIntegerKey(key)) {\r\n          // new index added to array -> length changes\r\n          deps.push(depsMap.get('length'))\r\n        }\r\n        break\r\n      case TriggerOpTypes.DELETE:\r\n        if (!isArray(target)) {\r\n          deps.push(depsMap.get(ITERATE_KEY))\r\n          if (isMap(target)) {\r\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY))\r\n          }\r\n        }\r\n        break\r\n      case TriggerOpTypes.SET:\r\n        if (isMap(target)) {\r\n          deps.push(depsMap.get(ITERATE_KEY))\r\n        }\r\n        break\r\n    }\r\n  }\r\n\r\n  const eventInfo = __DEV__\r\n    ? { target, type, key, newValue, oldValue, oldTarget }\r\n    : undefined\r\n\r\n  if (deps.length === 1) {\r\n    if (deps[0]) {\r\n      if (__DEV__) {\r\n        triggerEffects(deps[0], eventInfo)\r\n      } else {\r\n        triggerEffects(deps[0])\r\n      }\r\n    }\r\n  } else {\r\n    const effects: ReactiveEffect[] = []\r\n    for (const dep of deps) {\r\n      if (dep) {\r\n        effects.push(...dep)\r\n      }\r\n    }\r\n    if (__DEV__) {\r\n      triggerEffects(createDep(effects), eventInfo)\r\n    } else {\r\n      triggerEffects(createDep(effects))\r\n    }\r\n  }\r\n}\r\n\r\nexport function triggerEffects(\r\n  dep: Dep | ReactiveEffect[],\r\n  debuggerEventExtraInfo?: DebuggerEventExtraInfo\r\n) {\r\n  // spread into array for stabilization\r\n  const effects = isArray(dep) ? dep : [...dep]\r\n  for (const effect of effects) {\r\n    if (effect.computed) {\r\n      triggerEffect(effect, debuggerEventExtraInfo)\r\n    }\r\n  }\r\n  for (const effect of effects) {\r\n    if (!effect.computed) {\r\n      triggerEffect(effect, debuggerEventExtraInfo)\r\n    }\r\n  }\r\n}\r\n\r\nfunction triggerEffect(\r\n  effect: ReactiveEffect,\r\n  debuggerEventExtraInfo?: DebuggerEventExtraInfo\r\n) {\r\n  if (effect !== activeEffect || effect.allowRecurse) {\r\n    if (__DEV__ && effect.onTrigger) {\r\n      effect.onTrigger(extend({ effect }, debuggerEventExtraInfo))\r\n    }\r\n    if (effect.scheduler) {\r\n      effect.scheduler()\r\n    } else {\r\n      effect.run()\r\n    }\r\n  }\r\n}\r\n","import {\r\n  reactive,\r\n  readonly,\r\n  toRaw,\r\n  ReactiveFlags,\r\n  Target,\r\n  readonlyMap,\r\n  reactiveMap,\r\n  shallowReactiveMap,\r\n  shallowReadonlyMap,\r\n  isReadonly,\r\n  isShallow\r\n} from './reactive'\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport {\r\n  track,\r\n  trigger,\r\n  ITERATE_KEY,\r\n  pauseTracking,\r\n  resetTracking\r\n} from './effect'\r\nimport {\r\n  isObject,\r\n  hasOwn,\r\n  isSymbol,\r\n  hasChanged,\r\n  isArray,\r\n  isIntegerKey,\r\n  extend,\r\n  makeMap\r\n} from '@vue/shared'\r\nimport { isRef } from './ref'\r\nimport { warn } from './warning'\r\n\r\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`)\r\n\r\nconst builtInSymbols = new Set(\r\n  /*#__PURE__*/\r\n  Object.getOwnPropertyNames(Symbol)\r\n    // ios10.x Object.getOwnPropertyNames(Symbol) can enumerate 'arguments' and 'caller'\r\n    // but accessing them on Symbol leads to TypeError because Symbol is a strict mode\r\n    // function\r\n    .filter(key => key !== 'arguments' && key !== 'caller')\r\n    .map(key => (Symbol as any)[key])\r\n    .filter(isSymbol)\r\n)\r\n\r\nconst get = /*#__PURE__*/ createGetter()\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true)\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true)\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true)\r\n\r\nconst arrayInstrumentations = /*#__PURE__*/ createArrayInstrumentations()\r\n\r\nfunction createArrayInstrumentations() {\r\n  const instrumentations: Record<string, Function> = {}\r\n  // instrument identity-sensitive Array methods to account for possible reactive\r\n  // values\r\n  ;(['includes', 'indexOf', 'lastIndexOf'] as const).forEach(key => {\r\n    instrumentations[key] = function (this: unknown[], ...args: unknown[]) {\r\n      const arr = toRaw(this) as any\r\n      for (let i = 0, l = this.length; i < l; i++) {\r\n        track(arr, TrackOpTypes.GET, i + '')\r\n      }\r\n      // we run the method using the original args first (which may be reactive)\r\n      const res = arr[key](...args)\r\n      if (res === -1 || res === false) {\r\n        // if that didn't work, run it again using raw values.\r\n        return arr[key](...args.map(toRaw))\r\n      } else {\r\n        return res\r\n      }\r\n    }\r\n  })\r\n  // instrument length-altering mutation methods to avoid length being tracked\r\n  // which leads to infinite loops in some cases (#2137)\r\n  ;(['push', 'pop', 'shift', 'unshift', 'splice'] as const).forEach(key => {\r\n    instrumentations[key] = function (this: unknown[], ...args: unknown[]) {\r\n      pauseTracking()\r\n      const res = (toRaw(this) as any)[key].apply(this, args)\r\n      resetTracking()\r\n      return res\r\n    }\r\n  })\r\n  return instrumentations\r\n}\r\n\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n  return function get(target: Target, key: string | symbol, receiver: object) {\r\n    if (key === ReactiveFlags.IS_REACTIVE) {\r\n      return !isReadonly\r\n    } else if (key === ReactiveFlags.IS_READONLY) {\r\n      return isReadonly\r\n    } else if (key === ReactiveFlags.IS_SHALLOW) {\r\n      return shallow\r\n    } else if (\r\n      key === ReactiveFlags.RAW &&\r\n      receiver ===\r\n        (isReadonly\r\n          ? shallow\r\n            ? shallowReadonlyMap\r\n            : readonlyMap\r\n          : shallow\r\n          ? shallowReactiveMap\r\n          : reactiveMap\r\n        ).get(target)\r\n    ) {\r\n      return target\r\n    }\r\n\r\n    const targetIsArray = isArray(target)\r\n\r\n    if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n      return Reflect.get(arrayInstrumentations, key, receiver)\r\n    }\r\n\r\n    const res = Reflect.get(target, key, receiver)\r\n\r\n    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\r\n      return res\r\n    }\r\n\r\n    if (!isReadonly) {\r\n      track(target, TrackOpTypes.GET, key)\r\n    }\r\n\r\n    if (shallow) {\r\n      return res\r\n    }\r\n\r\n    if (isRef(res)) {\r\n      // ref unwrapping - skip unwrap for Array + integer key.\r\n      return targetIsArray && isIntegerKey(key) ? res : res.value\r\n    }\r\n\r\n    if (isObject(res)) {\r\n      // Convert returned value into a proxy as well. we do the isObject check\r\n      // here to avoid invalid value warning. Also need to lazy access readonly\r\n      // and reactive here to avoid circular dependency.\r\n      return isReadonly ? readonly(res) : reactive(res)\r\n    }\r\n\r\n    return res\r\n  }\r\n}\r\n\r\nconst set = /*#__PURE__*/ createSetter()\r\nconst shallowSet = /*#__PURE__*/ createSetter(true)\r\n\r\nfunction createSetter(shallow = false) {\r\n  return function set(\r\n    target: object,\r\n    key: string | symbol,\r\n    value: unknown,\r\n    receiver: object\r\n  ): boolean {\r\n    let oldValue = (target as any)[key]\r\n    if (isReadonly(oldValue) && isRef(oldValue) && !isRef(value)) {\r\n      return false\r\n    }\r\n    if (!shallow) {\r\n      if (!isShallow(value) && !isReadonly(value)) {\r\n        oldValue = toRaw(oldValue)\r\n        value = toRaw(value)\r\n      }\r\n      if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n        oldValue.value = value\r\n        return true\r\n      }\r\n    } else {\r\n      // in shallow mode, objects are set as-is regardless of reactive or not\r\n    }\r\n\r\n    const hadKey =\r\n      isArray(target) && isIntegerKey(key)\r\n        ? Number(key) < target.length\r\n        : hasOwn(target, key)\r\n    const result = Reflect.set(target, key, value, receiver)\r\n    // don't trigger if target is something up in the prototype chain of original\r\n    if (target === toRaw(receiver)) {\r\n      if (!hadKey) {\r\n        trigger(target, TriggerOpTypes.ADD, key, value)\r\n      } else if (hasChanged(value, oldValue)) {\r\n        trigger(target, TriggerOpTypes.SET, key, value, oldValue)\r\n      }\r\n    }\r\n    return result\r\n  }\r\n}\r\n\r\nfunction deleteProperty(target: object, key: string | symbol): boolean {\r\n  const hadKey = hasOwn(target, key)\r\n  const oldValue = (target as any)[key]\r\n  const result = Reflect.deleteProperty(target, key)\r\n  if (result && hadKey) {\r\n    trigger(target, TriggerOpTypes.DELETE, key, undefined, oldValue)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction has(target: object, key: string | symbol): boolean {\r\n  const result = Reflect.has(target, key)\r\n  if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n    track(target, TrackOpTypes.HAS, key)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction ownKeys(target: object): (string | symbol)[] {\r\n  track(target, TrackOpTypes.ITERATE, isArray(target) ? 'length' : ITERATE_KEY)\r\n  return Reflect.ownKeys(target)\r\n}\r\n\r\nexport const mutableHandlers: ProxyHandler<object> = {\r\n  get,\r\n  set,\r\n  deleteProperty,\r\n  has,\r\n  ownKeys\r\n}\r\n\r\nexport const readonlyHandlers: ProxyHandler<object> = {\r\n  get: readonlyGet,\r\n  set(target, key) {\r\n    if (__DEV__) {\r\n      warn(\r\n        `Set operation on key \"${String(key)}\" failed: target is readonly.`,\r\n        target\r\n      )\r\n    }\r\n    return true\r\n  },\r\n  deleteProperty(target, key) {\r\n    if (__DEV__) {\r\n      warn(\r\n        `Delete operation on key \"${String(key)}\" failed: target is readonly.`,\r\n        target\r\n      )\r\n    }\r\n    return true\r\n  }\r\n}\r\n\r\nexport const shallowReactiveHandlers = /*#__PURE__*/ extend(\r\n  {},\r\n  mutableHandlers,\r\n  {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n  }\r\n)\r\n\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nexport const shallowReadonlyHandlers = /*#__PURE__*/ extend(\r\n  {},\r\n  readonlyHandlers,\r\n  {\r\n    get: shallowReadonlyGet\r\n  }\r\n)\r\n","import { toRaw, ReactiveFlags, toReactive, toReadonly } from './reactive'\r\nimport { track, trigger, ITERATE_KEY, MAP_KEY_ITERATE_KEY } from './effect'\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport { capitalize, hasOwn, hasChanged, toRawType, isMap } from '@vue/shared'\r\n\r\nexport type CollectionTypes = IterableCollections | WeakCollections\r\n\r\ntype IterableCollections = Map<any, any> | Set<any>\r\ntype WeakCollections = WeakMap<any, any> | WeakSet<any>\r\ntype MapTypes = Map<any, any> | WeakMap<any, any>\r\ntype SetTypes = Set<any> | WeakSet<any>\r\n\r\nconst toShallow = <T extends unknown>(value: T): T => value\r\n\r\nconst getProto = <T extends CollectionTypes>(v: T): any =>\r\n  Reflect.getPrototypeOf(v)\r\n\r\nfunction get(\r\n  target: MapTypes,\r\n  key: unknown,\r\n  isReadonly = false,\r\n  isShallow = false\r\n) {\r\n  // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n  // of the value\r\n  target = (target as any)[ReactiveFlags.RAW]\r\n  const rawTarget = toRaw(target)\r\n  const rawKey = toRaw(key)\r\n  if (!isReadonly) {\r\n    if (key !== rawKey) {\r\n      track(rawTarget, TrackOpTypes.GET, key)\r\n    }\r\n    track(rawTarget, TrackOpTypes.GET, rawKey)\r\n  }\r\n  const { has } = getProto(rawTarget)\r\n  const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\r\n  if (has.call(rawTarget, key)) {\r\n    return wrap(target.get(key))\r\n  } else if (has.call(rawTarget, rawKey)) {\r\n    return wrap(target.get(rawKey))\r\n  } else if (target !== rawTarget) {\r\n    // #3602 readonly(reactive(Map))\r\n    // ensure that the nested reactive `Map` can do tracking for itself\r\n    target.get(key)\r\n  }\r\n}\r\n\r\nfunction has(this: CollectionTypes, key: unknown, isReadonly = false): boolean {\r\n  const target = (this as any)[ReactiveFlags.RAW]\r\n  const rawTarget = toRaw(target)\r\n  const rawKey = toRaw(key)\r\n  if (!isReadonly) {\r\n    if (key !== rawKey) {\r\n      track(rawTarget, TrackOpTypes.HAS, key)\r\n    }\r\n    track(rawTarget, TrackOpTypes.HAS, rawKey)\r\n  }\r\n  return key === rawKey\r\n    ? target.has(key)\r\n    : target.has(key) || target.has(rawKey)\r\n}\r\n\r\nfunction size(target: IterableCollections, isReadonly = false) {\r\n  target = (target as any)[ReactiveFlags.RAW]\r\n  !isReadonly && track(toRaw(target), TrackOpTypes.ITERATE, ITERATE_KEY)\r\n  return Reflect.get(target, 'size', target)\r\n}\r\n\r\nfunction add(this: SetTypes, value: unknown) {\r\n  value = toRaw(value)\r\n  const target = toRaw(this)\r\n  const proto = getProto(target)\r\n  const hadKey = proto.has.call(target, value)\r\n  if (!hadKey) {\r\n    target.add(value)\r\n    trigger(target, TriggerOpTypes.ADD, value, value)\r\n  }\r\n  return this\r\n}\r\n\r\nfunction set(this: MapTypes, key: unknown, value: unknown) {\r\n  value = toRaw(value)\r\n  const target = toRaw(this)\r\n  const { has, get } = getProto(target)\r\n\r\n  let hadKey = has.call(target, key)\r\n  if (!hadKey) {\r\n    key = toRaw(key)\r\n    hadKey = has.call(target, key)\r\n  } else if (__DEV__) {\r\n    checkIdentityKeys(target, has, key)\r\n  }\r\n\r\n  const oldValue = get.call(target, key)\r\n  target.set(key, value)\r\n  if (!hadKey) {\r\n    trigger(target, TriggerOpTypes.ADD, key, value)\r\n  } else if (hasChanged(value, oldValue)) {\r\n    trigger(target, TriggerOpTypes.SET, key, value, oldValue)\r\n  }\r\n  return this\r\n}\r\n\r\nfunction deleteEntry(this: CollectionTypes, key: unknown) {\r\n  const target = toRaw(this)\r\n  const { has, get } = getProto(target)\r\n  let hadKey = has.call(target, key)\r\n  if (!hadKey) {\r\n    key = toRaw(key)\r\n    hadKey = has.call(target, key)\r\n  } else if (__DEV__) {\r\n    checkIdentityKeys(target, has, key)\r\n  }\r\n\r\n  const oldValue = get ? get.call(target, key) : undefined\r\n  // forward the operation before queueing reactions\r\n  const result = target.delete(key)\r\n  if (hadKey) {\r\n    trigger(target, TriggerOpTypes.DELETE, key, undefined, oldValue)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction clear(this: IterableCollections) {\r\n  const target = toRaw(this)\r\n  const hadItems = target.size !== 0\r\n  const oldTarget = __DEV__\r\n    ? isMap(target)\r\n      ? new Map(target)\r\n      : new Set(target)\r\n    : undefined\r\n  // forward the operation before queueing reactions\r\n  const result = target.clear()\r\n  if (hadItems) {\r\n    trigger(target, TriggerOpTypes.CLEAR, undefined, undefined, oldTarget)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction createForEach(isReadonly: boolean, isShallow: boolean) {\r\n  return function forEach(\r\n    this: IterableCollections,\r\n    callback: Function,\r\n    thisArg?: unknown\r\n  ) {\r\n    const observed = this as any\r\n    const target = observed[ReactiveFlags.RAW]\r\n    const rawTarget = toRaw(target)\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\r\n    !isReadonly && track(rawTarget, TrackOpTypes.ITERATE, ITERATE_KEY)\r\n    return target.forEach((value: unknown, key: unknown) => {\r\n      // important: make sure the callback is\r\n      // 1. invoked with the reactive map as `this` and 3rd arg\r\n      // 2. the value received should be a corresponding reactive/readonly.\r\n      return callback.call(thisArg, wrap(value), wrap(key), observed)\r\n    })\r\n  }\r\n}\r\n\r\ninterface Iterable {\r\n  [Symbol.iterator](): Iterator\r\n}\r\n\r\ninterface Iterator {\r\n  next(value?: any): IterationResult\r\n}\r\n\r\ninterface IterationResult {\r\n  value: any\r\n  done: boolean\r\n}\r\n\r\nfunction createIterableMethod(\r\n  method: string | symbol,\r\n  isReadonly: boolean,\r\n  isShallow: boolean\r\n) {\r\n  return function (\r\n    this: IterableCollections,\r\n    ...args: unknown[]\r\n  ): Iterable & Iterator {\r\n    const target = (this as any)[ReactiveFlags.RAW]\r\n    const rawTarget = toRaw(target)\r\n    const targetIsMap = isMap(rawTarget)\r\n    const isPair =\r\n      method === 'entries' || (method === Symbol.iterator && targetIsMap)\r\n    const isKeyOnly = method === 'keys' && targetIsMap\r\n    const innerIterator = target[method](...args)\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\r\n    !isReadonly &&\r\n      track(\r\n        rawTarget,\r\n        TrackOpTypes.ITERATE,\r\n        isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY\r\n      )\r\n    // return a wrapped iterator which returns observed versions of the\r\n    // values emitted from the real iterator\r\n    return {\r\n      // iterator protocol\r\n      next() {\r\n        const { value, done } = innerIterator.next()\r\n        return done\r\n          ? { value, done }\r\n          : {\r\n              value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n              done\r\n            }\r\n      },\r\n      // iterable protocol\r\n      [Symbol.iterator]() {\r\n        return this\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction createReadonlyMethod(type: TriggerOpTypes): Function {\r\n  return function (this: CollectionTypes, ...args: unknown[]) {\r\n    if (__DEV__) {\r\n      const key = args[0] ? `on key \"${args[0]}\" ` : ``\r\n      console.warn(\r\n        `${capitalize(type)} operation ${key}failed: target is readonly.`,\r\n        toRaw(this)\r\n      )\r\n    }\r\n    return type === TriggerOpTypes.DELETE ? false : this\r\n  }\r\n}\r\n\r\nfunction createInstrumentations() {\r\n  const mutableInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections)\r\n    },\r\n    has,\r\n    add,\r\n    set,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n  }\r\n\r\n  const shallowInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key, false, true)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections)\r\n    },\r\n    has,\r\n    add,\r\n    set,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n  }\r\n\r\n  const readonlyInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key, true)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections, true)\r\n    },\r\n    has(this: MapTypes, key: unknown) {\r\n      return has.call(this, key, true)\r\n    },\r\n    add: createReadonlyMethod(TriggerOpTypes.ADD),\r\n    set: createReadonlyMethod(TriggerOpTypes.SET),\r\n    delete: createReadonlyMethod(TriggerOpTypes.DELETE),\r\n    clear: createReadonlyMethod(TriggerOpTypes.CLEAR),\r\n    forEach: createForEach(true, false)\r\n  }\r\n\r\n  const shallowReadonlyInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key, true, true)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections, true)\r\n    },\r\n    has(this: MapTypes, key: unknown) {\r\n      return has.call(this, key, true)\r\n    },\r\n    add: createReadonlyMethod(TriggerOpTypes.ADD),\r\n    set: createReadonlyMethod(TriggerOpTypes.SET),\r\n    delete: createReadonlyMethod(TriggerOpTypes.DELETE),\r\n    clear: createReadonlyMethod(TriggerOpTypes.CLEAR),\r\n    forEach: createForEach(true, true)\r\n  }\r\n\r\n  const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator]\r\n  iteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      false,\r\n      false\r\n    )\r\n    readonlyInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      true,\r\n      false\r\n    )\r\n    shallowInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      false,\r\n      true\r\n    )\r\n    shallowReadonlyInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      true,\r\n      true\r\n    )\r\n  })\r\n\r\n  return [\r\n    mutableInstrumentations,\r\n    readonlyInstrumentations,\r\n    shallowInstrumentations,\r\n    shallowReadonlyInstrumentations\r\n  ]\r\n}\r\n\r\nconst [\r\n  mutableInstrumentations,\r\n  readonlyInstrumentations,\r\n  shallowInstrumentations,\r\n  shallowReadonlyInstrumentations\r\n] = /* #__PURE__*/ createInstrumentations()\r\n\r\nfunction createInstrumentationGetter(isReadonly: boolean, shallow: boolean) {\r\n  const instrumentations = shallow\r\n    ? isReadonly\r\n      ? shallowReadonlyInstrumentations\r\n      : shallowInstrumentations\r\n    : isReadonly\r\n    ? readonlyInstrumentations\r\n    : mutableInstrumentations\r\n\r\n  return (\r\n    target: CollectionTypes,\r\n    key: string | symbol,\r\n    receiver: CollectionTypes\r\n  ) => {\r\n    if (key === ReactiveFlags.IS_REACTIVE) {\r\n      return !isReadonly\r\n    } else if (key === ReactiveFlags.IS_READONLY) {\r\n      return isReadonly\r\n    } else if (key === ReactiveFlags.RAW) {\r\n      return target\r\n    }\r\n\r\n    return Reflect.get(\r\n      hasOwn(instrumentations, key) && key in target\r\n        ? instrumentations\r\n        : target,\r\n      key,\r\n      receiver\r\n    )\r\n  }\r\n}\r\n\r\nexport const mutableCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: /*#__PURE__*/ createInstrumentationGetter(false, false)\r\n}\r\n\r\nexport const shallowCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: /*#__PURE__*/ createInstrumentationGetter(false, true)\r\n}\r\n\r\nexport const readonlyCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: /*#__PURE__*/ createInstrumentationGetter(true, false)\r\n}\r\n\r\nexport const shallowReadonlyCollectionHandlers: ProxyHandler<CollectionTypes> =\r\n  {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, true)\r\n  }\r\n\r\nfunction checkIdentityKeys(\r\n  target: CollectionTypes,\r\n  has: (key: unknown) => boolean,\r\n  key: unknown\r\n) {\r\n  const rawKey = toRaw(key)\r\n  if (rawKey !== key && has.call(target, rawKey)) {\r\n    const type = toRawType(target)\r\n    console.warn(\r\n      `Reactive ${type} contains both the raw and reactive ` +\r\n        `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n        `which can lead to inconsistencies. ` +\r\n        `Avoid differentiating between the raw and reactive versions ` +\r\n        `of an object and only use the reactive version if possible.`\r\n    )\r\n  }\r\n}\r\n","import { isObject, toRawType, def } from '@vue/shared'\r\nimport {\r\n  mutableHandlers,\r\n  readonlyHandlers,\r\n  shallowReactiveHandlers,\r\n  shallowReadonlyHandlers\r\n} from './baseHandlers'\r\nimport {\r\n  mutableCollectionHandlers,\r\n  readonlyCollectionHandlers,\r\n  shallowCollectionHandlers,\r\n  shallowReadonlyCollectionHandlers\r\n} from './collectionHandlers'\r\nimport type { UnwrapRefSimple, Ref, RawSymbol } from './ref'\r\n\r\nexport const enum ReactiveFlags {\r\n  SKIP = '__v_skip',\r\n  IS_REACTIVE = '__v_isReactive',\r\n  IS_READONLY = '__v_isReadonly',\r\n  IS_SHALLOW = '__v_isShallow',\r\n  RAW = '__v_raw'\r\n}\r\n\r\nexport interface Target {\r\n  [ReactiveFlags.SKIP]?: boolean\r\n  [ReactiveFlags.IS_REACTIVE]?: boolean\r\n  [ReactiveFlags.IS_READONLY]?: boolean\r\n  [ReactiveFlags.IS_SHALLOW]?: boolean\r\n  [ReactiveFlags.RAW]?: any\r\n}\r\n\r\nexport const reactiveMap = new WeakMap<Target, any>()\r\nexport const shallowReactiveMap = new WeakMap<Target, any>()\r\nexport const readonlyMap = new WeakMap<Target, any>()\r\nexport const shallowReadonlyMap = new WeakMap<Target, any>()\r\n\r\nconst enum TargetType {\r\n  INVALID = 0,\r\n  COMMON = 1,\r\n  COLLECTION = 2\r\n}\r\n\r\nfunction targetTypeMap(rawType: string) {\r\n  switch (rawType) {\r\n    case 'Object':\r\n    case 'Array':\r\n      return TargetType.COMMON\r\n    case 'Map':\r\n    case 'Set':\r\n    case 'WeakMap':\r\n    case 'WeakSet':\r\n      return TargetType.COLLECTION\r\n    default:\r\n      return TargetType.INVALID\r\n  }\r\n}\r\n\r\nfunction getTargetType(value: Target) {\r\n  return value[ReactiveFlags.SKIP] || !Object.isExtensible(value)\r\n    ? TargetType.INVALID\r\n    : targetTypeMap(toRawType(value))\r\n}\r\n\r\n// only unwrap nested ref\r\nexport type UnwrapNestedRefs<T> = T extends Ref ? T : UnwrapRefSimple<T>\r\n\r\n/**\r\n * Creates a reactive copy of the original object.\r\n *\r\n * The reactive conversion is \"deep\"—it affects all nested properties. In the\r\n * ES2015 Proxy based implementation, the returned proxy is **not** equal to the\r\n * original object. It is recommended to work exclusively with the reactive\r\n * proxy and avoid relying on the original object.\r\n *\r\n * A reactive object also automatically unwraps refs contained in it, so you\r\n * don't need to use `.value` when accessing and mutating their value:\r\n *\r\n * ```js\r\n * const count = ref(0)\r\n * const obj = reactive({\r\n *   count\r\n * })\r\n *\r\n * obj.count++\r\n * obj.count // -> 1\r\n * count.value // -> 1\r\n * ```\r\n */\r\nexport function reactive<T extends object>(target: T): UnwrapNestedRefs<T>\r\nexport function reactive(target: object) {\r\n  // if trying to observe a readonly proxy, return the readonly version.\r\n  if (isReadonly(target)) {\r\n    return target\r\n  }\r\n  return createReactiveObject(\r\n    target,\r\n    false,\r\n    mutableHandlers,\r\n    mutableCollectionHandlers,\r\n    reactiveMap\r\n  )\r\n}\r\n\r\nexport declare const ShallowReactiveMarker: unique symbol\r\n\r\nexport type ShallowReactive<T> = T & { [ShallowReactiveMarker]?: true }\r\n\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nexport function shallowReactive<T extends object>(\r\n  target: T\r\n): ShallowReactive<T> {\r\n  return createReactiveObject(\r\n    target,\r\n    false,\r\n    shallowReactiveHandlers,\r\n    shallowCollectionHandlers,\r\n    shallowReactiveMap\r\n  )\r\n}\r\n\r\ntype Primitive = string | number | boolean | bigint | symbol | undefined | null\r\ntype Builtin = Primitive | Function | Date | Error | RegExp\r\nexport type DeepReadonly<T> = T extends Builtin\r\n  ? T\r\n  : T extends Map<infer K, infer V>\r\n  ? ReadonlyMap<DeepReadonly<K>, DeepReadonly<V>>\r\n  : T extends ReadonlyMap<infer K, infer V>\r\n  ? ReadonlyMap<DeepReadonly<K>, DeepReadonly<V>>\r\n  : T extends WeakMap<infer K, infer V>\r\n  ? WeakMap<DeepReadonly<K>, DeepReadonly<V>>\r\n  : T extends Set<infer U>\r\n  ? ReadonlySet<DeepReadonly<U>>\r\n  : T extends ReadonlySet<infer U>\r\n  ? ReadonlySet<DeepReadonly<U>>\r\n  : T extends WeakSet<infer U>\r\n  ? WeakSet<DeepReadonly<U>>\r\n  : T extends Promise<infer U>\r\n  ? Promise<DeepReadonly<U>>\r\n  : T extends Ref<infer U>\r\n  ? Readonly<Ref<DeepReadonly<U>>>\r\n  : T extends {}\r\n  ? { readonly [K in keyof T]: DeepReadonly<T[K]> }\r\n  : Readonly<T>\r\n\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nexport function readonly<T extends object>(\r\n  target: T\r\n): DeepReadonly<UnwrapNestedRefs<T>> {\r\n  return createReactiveObject(\r\n    target,\r\n    true,\r\n    readonlyHandlers,\r\n    readonlyCollectionHandlers,\r\n    readonlyMap\r\n  )\r\n}\r\n\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nexport function shallowReadonly<T extends object>(target: T): Readonly<T> {\r\n  return createReactiveObject(\r\n    target,\r\n    true,\r\n    shallowReadonlyHandlers,\r\n    shallowReadonlyCollectionHandlers,\r\n    shallowReadonlyMap\r\n  )\r\n}\r\n\r\nfunction createReactiveObject(\r\n  target: Target,\r\n  isReadonly: boolean,\r\n  baseHandlers: ProxyHandler<any>,\r\n  collectionHandlers: ProxyHandler<any>,\r\n  proxyMap: WeakMap<Target, any>\r\n) {\r\n  if (!isObject(target)) {\r\n    if (__DEV__) {\r\n      console.warn(`value cannot be made reactive: ${String(target)}`)\r\n    }\r\n    return target\r\n  }\r\n  // target is already a Proxy, return it.\r\n  // exception: calling readonly() on a reactive object\r\n  if (\r\n    target[ReactiveFlags.RAW] &&\r\n    !(isReadonly && target[ReactiveFlags.IS_REACTIVE])\r\n  ) {\r\n    return target\r\n  }\r\n  // target already has corresponding Proxy\r\n  const existingProxy = proxyMap.get(target)\r\n  if (existingProxy) {\r\n    return existingProxy\r\n  }\r\n  // only specific value types can be observed.\r\n  const targetType = getTargetType(target)\r\n  if (targetType === TargetType.INVALID) {\r\n    return target\r\n  }\r\n  const proxy = new Proxy(\r\n    target,\r\n    targetType === TargetType.COLLECTION ? collectionHandlers : baseHandlers\r\n  )\r\n  proxyMap.set(target, proxy)\r\n  return proxy\r\n}\r\n\r\nexport function isReactive(value: unknown): boolean {\r\n  if (isReadonly(value)) {\r\n    return isReactive((value as Target)[ReactiveFlags.RAW])\r\n  }\r\n  return !!(value && (value as Target)[ReactiveFlags.IS_REACTIVE])\r\n}\r\n\r\nexport function isReadonly(value: unknown): boolean {\r\n  return !!(value && (value as Target)[ReactiveFlags.IS_READONLY])\r\n}\r\n\r\nexport function isShallow(value: unknown): boolean {\r\n  return !!(value && (value as Target)[ReactiveFlags.IS_SHALLOW])\r\n}\r\n\r\nexport function isProxy(value: unknown): boolean {\r\n  return isReactive(value) || isReadonly(value)\r\n}\r\n\r\nexport function toRaw<T>(observed: T): T {\r\n  const raw = observed && (observed as Target)[ReactiveFlags.RAW]\r\n  return raw ? toRaw(raw) : observed\r\n}\r\n\r\nexport function markRaw<T extends object>(\r\n  value: T\r\n): T & { [RawSymbol]?: true } {\r\n  def(value, ReactiveFlags.SKIP, true)\r\n  return value\r\n}\r\n\r\nexport const toReactive = <T extends unknown>(value: T): T =>\r\n  isObject(value) ? reactive(value) : value\r\n\r\nexport const toReadonly = <T extends unknown>(value: T): T =>\r\n  isObject(value) ? readonly(value as Record<any, any>) : value\r\n","import {\r\n  activeEffect,\r\n  shouldTrack,\r\n  trackEffects,\r\n  triggerEffects\r\n} from './effect'\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport { isArray, hasChanged, IfAny } from '@vue/shared'\r\nimport {\r\n  isProxy,\r\n  toRaw,\r\n  isReactive,\r\n  toReactive,\r\n  isReadonly,\r\n  isShallow\r\n} from './reactive'\r\nimport type { ShallowReactiveMarker } from './reactive'\r\nimport { CollectionTypes } from './collectionHandlers'\r\nimport { createDep, Dep } from './dep'\r\n\r\ndeclare const RefSymbol: unique symbol\r\nexport declare const RawSymbol: unique symbol\r\n\r\nexport interface Ref<T = any> {\r\n  value: T\r\n  /**\r\n   * Type differentiator only.\r\n   * We need this to be in public d.ts but don't want it to show up in IDE\r\n   * autocomplete, so we use a private Symbol instead.\r\n   */\r\n  [RefSymbol]: true\r\n}\r\n\r\ntype RefBase<T> = {\r\n  dep?: Dep\r\n  value: T\r\n}\r\n\r\nexport function trackRefValue(ref: RefBase<any>) {\r\n  if (shouldTrack && activeEffect) {\r\n    ref = toRaw(ref)\r\n    if (__DEV__) {\r\n      trackEffects(ref.dep || (ref.dep = createDep()), {\r\n        target: ref,\r\n        type: TrackOpTypes.GET,\r\n        key: 'value'\r\n      })\r\n    } else {\r\n      trackEffects(ref.dep || (ref.dep = createDep()))\r\n    }\r\n  }\r\n}\r\n\r\nexport function triggerRefValue(ref: RefBase<any>, newVal?: any) {\r\n  ref = toRaw(ref)\r\n  if (ref.dep) {\r\n    if (__DEV__) {\r\n      triggerEffects(ref.dep, {\r\n        target: ref,\r\n        type: TriggerOpTypes.SET,\r\n        key: 'value',\r\n        newValue: newVal\r\n      })\r\n    } else {\r\n      triggerEffects(ref.dep)\r\n    }\r\n  }\r\n}\r\n\r\nexport function isRef<T>(r: Ref<T> | unknown): r is Ref<T>\r\nexport function isRef(r: any): r is Ref {\r\n  return !!(r && r.__v_isRef === true)\r\n}\r\n\r\nexport function ref<T extends object>(\r\n  value: T\r\n): [T] extends [Ref] ? T : Ref<UnwrapRef<T>>\r\nexport function ref<T>(value: T): Ref<UnwrapRef<T>>\r\nexport function ref<T = any>(): Ref<T | undefined>\r\nexport function ref(value?: unknown) {\r\n  return createRef(value, false)\r\n}\r\n\r\ndeclare const ShallowRefMarker: unique symbol\r\n\r\nexport type ShallowRef<T = any> = Ref<T> & { [ShallowRefMarker]?: true }\r\n\r\nexport function shallowRef<T extends object>(\r\n  value: T\r\n): T extends Ref ? T : ShallowRef<T>\r\nexport function shallowRef<T>(value: T): ShallowRef<T>\r\nexport function shallowRef<T = any>(): ShallowRef<T | undefined>\r\nexport function shallowRef(value?: unknown) {\r\n  return createRef(value, true)\r\n}\r\n\r\nfunction createRef(rawValue: unknown, shallow: boolean) {\r\n  if (isRef(rawValue)) {\r\n    return rawValue\r\n  }\r\n  return new RefImpl(rawValue, shallow)\r\n}\r\n\r\nclass RefImpl<T> {\r\n  private _value: T\r\n  private _rawValue: T\r\n\r\n  public dep?: Dep = undefined\r\n  public readonly __v_isRef = true\r\n\r\n  constructor(value: T, public readonly __v_isShallow: boolean) {\r\n    this._rawValue = __v_isShallow ? value : toRaw(value)\r\n    this._value = __v_isShallow ? value : toReactive(value)\r\n  }\r\n\r\n  get value() {\r\n    trackRefValue(this)\r\n    return this._value\r\n  }\r\n\r\n  set value(newVal) {\r\n    const useDirectValue =\r\n      this.__v_isShallow || isShallow(newVal) || isReadonly(newVal)\r\n    newVal = useDirectValue ? newVal : toRaw(newVal)\r\n    if (hasChanged(newVal, this._rawValue)) {\r\n      this._rawValue = newVal\r\n      this._value = useDirectValue ? newVal : toReactive(newVal)\r\n      triggerRefValue(this, newVal)\r\n    }\r\n  }\r\n}\r\n\r\nexport function triggerRef(ref: Ref) {\r\n  triggerRefValue(ref, __DEV__ ? ref.value : void 0)\r\n}\r\n\r\nexport function unref<T>(ref: T | Ref<T>): T {\r\n  return isRef(ref) ? (ref.value as any) : ref\r\n}\r\n\r\nconst shallowUnwrapHandlers: ProxyHandler<any> = {\r\n  get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n  set: (target, key, value, receiver) => {\r\n    const oldValue = target[key]\r\n    if (isRef(oldValue) && !isRef(value)) {\r\n      oldValue.value = value\r\n      return true\r\n    } else {\r\n      return Reflect.set(target, key, value, receiver)\r\n    }\r\n  }\r\n}\r\n\r\nexport function proxyRefs<T extends object>(\r\n  objectWithRefs: T\r\n): ShallowUnwrapRef<T> {\r\n  return isReactive(objectWithRefs)\r\n    ? objectWithRefs\r\n    : new Proxy(objectWithRefs, shallowUnwrapHandlers)\r\n}\r\n\r\nexport type CustomRefFactory<T> = (\r\n  track: () => void,\r\n  trigger: () => void\r\n) => {\r\n  get: () => T\r\n  set: (value: T) => void\r\n}\r\n\r\nclass CustomRefImpl<T> {\r\n  public dep?: Dep = undefined\r\n\r\n  private readonly _get: ReturnType<CustomRefFactory<T>>['get']\r\n  private readonly _set: ReturnType<CustomRefFactory<T>>['set']\r\n\r\n  public readonly __v_isRef = true\r\n\r\n  constructor(factory: CustomRefFactory<T>) {\r\n    const { get, set } = factory(\r\n      () => trackRefValue(this),\r\n      () => triggerRefValue(this)\r\n    )\r\n    this._get = get\r\n    this._set = set\r\n  }\r\n\r\n  get value() {\r\n    return this._get()\r\n  }\r\n\r\n  set value(newVal) {\r\n    this._set(newVal)\r\n  }\r\n}\r\n\r\nexport function customRef<T>(factory: CustomRefFactory<T>): Ref<T> {\r\n  return new CustomRefImpl(factory) as any\r\n}\r\n\r\nexport type ToRefs<T = any> = {\r\n  [K in keyof T]: ToRef<T[K]>\r\n}\r\nexport function toRefs<T extends object>(object: T): ToRefs<T> {\r\n  if (__DEV__ && !isProxy(object)) {\r\n    console.warn(`toRefs() expects a reactive object but received a plain one.`)\r\n  }\r\n  const ret: any = isArray(object) ? new Array(object.length) : {}\r\n  for (const key in object) {\r\n    ret[key] = toRef(object, key)\r\n  }\r\n  return ret\r\n}\r\n\r\nclass ObjectRefImpl<T extends object, K extends keyof T> {\r\n  public readonly __v_isRef = true\r\n\r\n  constructor(\r\n    private readonly _object: T,\r\n    private readonly _key: K,\r\n    private readonly _defaultValue?: T[K]\r\n  ) {}\r\n\r\n  get value() {\r\n    const val = this._object[this._key]\r\n    return val === undefined ? (this._defaultValue as T[K]) : val\r\n  }\r\n\r\n  set value(newVal) {\r\n    this._object[this._key] = newVal\r\n  }\r\n}\r\n\r\nexport type ToRef<T> = IfAny<T, Ref<T>, [T] extends [Ref] ? T : Ref<T>>\r\n\r\nexport function toRef<T extends object, K extends keyof T>(\r\n  object: T,\r\n  key: K\r\n): ToRef<T[K]>\r\n\r\nexport function toRef<T extends object, K extends keyof T>(\r\n  object: T,\r\n  key: K,\r\n  defaultValue: T[K]\r\n): ToRef<Exclude<T[K], undefined>>\r\n\r\nexport function toRef<T extends object, K extends keyof T>(\r\n  object: T,\r\n  key: K,\r\n  defaultValue?: T[K]\r\n): ToRef<T[K]> {\r\n  const val = object[key]\r\n  return isRef(val)\r\n    ? val\r\n    : (new ObjectRefImpl(object, key, defaultValue) as any)\r\n}\r\n\r\n// corner case when use narrows type\r\n// Ex. type RelativePath = string & { __brand: unknown }\r\n// RelativePath extends object -> true\r\ntype BaseTypes = string | number | boolean\r\n\r\n/**\r\n * This is a special exported interface for other packages to declare\r\n * additional types that should bail out for ref unwrapping. For example\r\n * \\@vue/runtime-dom can declare it like so in its d.ts:\r\n *\r\n * ``` ts\r\n * declare module '@vue/reactivity' {\r\n *   export interface RefUnwrapBailTypes {\r\n *     runtimeDOMBailTypes: Node | Window\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * Note that api-extractor somehow refuses to include `declare module`\r\n * augmentations in its generated d.ts, so we have to manually append them\r\n * to the final generated d.ts in our build process.\r\n */\r\nexport interface RefUnwrapBailTypes {}\r\n\r\nexport type ShallowUnwrapRef<T> = {\r\n  [K in keyof T]: T[K] extends Ref<infer V>\r\n    ? V\r\n    : // if `V` is `unknown` that means it does not extend `Ref` and is undefined\r\n    T[K] extends Ref<infer V> | undefined\r\n    ? unknown extends V\r\n      ? undefined\r\n      : V | undefined\r\n    : T[K]\r\n}\r\n\r\nexport type UnwrapRef<T> = T extends ShallowRef<infer V>\r\n  ? V\r\n  : T extends Ref<infer V>\r\n  ? UnwrapRefSimple<V>\r\n  : UnwrapRefSimple<T>\r\n\r\nexport type UnwrapRefSimple<T> = T extends\r\n  | Function\r\n  | CollectionTypes\r\n  | BaseTypes\r\n  | Ref\r\n  | RefUnwrapBailTypes[keyof RefUnwrapBailTypes]\r\n  | { [RawSymbol]?: true }\r\n  ? T\r\n  : T extends Array<any>\r\n  ? { [K in keyof T]: UnwrapRefSimple<T[K]> }\r\n  : T extends object & { [ShallowReactiveMarker]?: never }\r\n  ? {\r\n      [P in keyof T]: P extends symbol ? T[P] : UnwrapRef<T[P]>\r\n    }\r\n  : T\r\n","import { DebuggerOptions, ReactiveEffect } from './effect'\r\nimport { Ref, trackRefValue, triggerRefValue } from './ref'\r\nimport { isFunction, NOOP } from '@vue/shared'\r\nimport { ReactiveFlags, toRaw } from './reactive'\r\nimport { Dep } from './dep'\r\n\r\ndeclare const ComputedRefSymbol: unique symbol\r\n\r\nexport interface ComputedRef<T = any> extends WritableComputedRef<T> {\r\n  readonly value: T\r\n  [ComputedRefSymbol]: true\r\n}\r\n\r\nexport interface WritableComputedRef<T> extends Ref<T> {\r\n  readonly effect: ReactiveEffect<T>\r\n}\r\n\r\nexport type ComputedGetter<T> = (...args: any[]) => T\r\nexport type ComputedSetter<T> = (v: T) => void\r\n\r\nexport interface WritableComputedOptions<T> {\r\n  get: ComputedGetter<T>\r\n  set: ComputedSetter<T>\r\n}\r\n\r\nexport class ComputedRefImpl<T> {\r\n  public dep?: Dep = undefined\r\n\r\n  private _value!: T\r\n  public readonly effect: ReactiveEffect<T>\r\n\r\n  public readonly __v_isRef = true\r\n  public readonly [ReactiveFlags.IS_READONLY]: boolean = false\r\n\r\n  public _dirty = true\r\n  public _cacheable: boolean\r\n\r\n  constructor(\r\n    getter: ComputedGetter<T>,\r\n    private readonly _setter: ComputedSetter<T>,\r\n    isReadonly: boolean,\r\n    isSSR: boolean\r\n  ) {\r\n    this.effect = new ReactiveEffect(getter, () => {\r\n      if (!this._dirty) {\r\n        this._dirty = true\r\n        triggerRefValue(this)\r\n      }\r\n    })\r\n    this.effect.computed = this\r\n    this.effect.active = this._cacheable = !isSSR\r\n    this[ReactiveFlags.IS_READONLY] = isReadonly\r\n  }\r\n\r\n  get value() {\r\n    // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n    const self = toRaw(this)\r\n    trackRefValue(self)\r\n    if (self._dirty || !self._cacheable) {\r\n      self._dirty = false\r\n      self._value = self.effect.run()!\r\n    }\r\n    return self._value\r\n  }\r\n\r\n  set value(newValue: T) {\r\n    this._setter(newValue)\r\n  }\r\n}\r\n\r\nexport function computed<T>(\r\n  getter: ComputedGetter<T>,\r\n  debugOptions?: DebuggerOptions\r\n): ComputedRef<T>\r\nexport function computed<T>(\r\n  options: WritableComputedOptions<T>,\r\n  debugOptions?: DebuggerOptions\r\n): WritableComputedRef<T>\r\nexport function computed<T>(\r\n  getterOrOptions: ComputedGetter<T> | WritableComputedOptions<T>,\r\n  debugOptions?: DebuggerOptions,\r\n  isSSR = false\r\n) {\r\n  let getter: ComputedGetter<T>\r\n  let setter: ComputedSetter<T>\r\n\r\n  const onlyGetter = isFunction(getterOrOptions)\r\n  if (onlyGetter) {\r\n    getter = getterOrOptions\r\n    setter = __DEV__\r\n      ? () => {\r\n          console.warn('Write operation failed: computed value is readonly')\r\n        }\r\n      : NOOP\r\n  } else {\r\n    getter = getterOrOptions.get\r\n    setter = getterOrOptions.set\r\n  }\r\n\r\n  const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR)\r\n\r\n  if (__DEV__ && debugOptions && !isSSR) {\r\n    cRef.effect.onTrack = debugOptions.onTrack\r\n    cRef.effect.onTrigger = debugOptions.onTrigger\r\n  }\r\n\r\n  return cRef as any\r\n}\r\n","import { VNode } from './vnode'\r\nimport {\r\n  Data,\r\n  ComponentInternalInstance,\r\n  ConcreteComponent,\r\n  formatComponentName\r\n} from './component'\r\nimport { isString, isFunction } from '@vue/shared'\r\nimport { toRaw, isRef, pauseTracking, resetTracking } from '@vue/reactivity'\r\nimport { callWithErrorHandling, ErrorCodes } from './errorHandling'\r\n\r\ntype ComponentVNode = VNode & {\r\n  type: ConcreteComponent\r\n}\r\n\r\nconst stack: VNode[] = []\r\n\r\ntype TraceEntry = {\r\n  vnode: ComponentVNode\r\n  recurseCount: number\r\n}\r\n\r\ntype ComponentTraceStack = TraceEntry[]\r\n\r\nexport function pushWarningContext(vnode: VNode) {\r\n  stack.push(vnode)\r\n}\r\n\r\nexport function popWarningContext() {\r\n  stack.pop()\r\n}\r\n\r\nexport function warn(msg: string, ...args: any[]) {\r\n  // avoid props formatting or warn handler tracking deps that might be mutated\r\n  // during patch, leading to infinite recursion.\r\n  pauseTracking()\r\n\r\n  const instance = stack.length ? stack[stack.length - 1].component : null\r\n  const appWarnHandler = instance && instance.appContext.config.warnHandler\r\n  const trace = getComponentTrace()\r\n\r\n  if (appWarnHandler) {\r\n    callWithErrorHandling(\r\n      appWarnHandler,\r\n      instance,\r\n      ErrorCodes.APP_WARN_HANDLER,\r\n      [\r\n        msg + args.join(''),\r\n        instance && instance.proxy,\r\n        trace\r\n          .map(\r\n            ({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`\r\n          )\r\n          .join('\\n'),\r\n        trace\r\n      ]\r\n    )\r\n  } else {\r\n    const warnArgs = [`[Vue warn]: ${msg}`, ...args]\r\n    /* istanbul ignore if */\r\n    if (\r\n      trace.length &&\r\n      // avoid spamming console during tests\r\n      !__TEST__\r\n    ) {\r\n      warnArgs.push(`\\n`, ...formatTrace(trace))\r\n    }\r\n    console.warn(...warnArgs)\r\n  }\r\n\r\n  resetTracking()\r\n}\r\n\r\nexport function getComponentTrace(): ComponentTraceStack {\r\n  let currentVNode: VNode | null = stack[stack.length - 1]\r\n  if (!currentVNode) {\r\n    return []\r\n  }\r\n\r\n  // we can't just use the stack because it will be incomplete during updates\r\n  // that did not start from the root. Re-construct the parent chain using\r\n  // instance parent pointers.\r\n  const normalizedStack: ComponentTraceStack = []\r\n\r\n  while (currentVNode) {\r\n    const last = normalizedStack[0]\r\n    if (last && last.vnode === currentVNode) {\r\n      last.recurseCount++\r\n    } else {\r\n      normalizedStack.push({\r\n        vnode: currentVNode as ComponentVNode,\r\n        recurseCount: 0\r\n      })\r\n    }\r\n    const parentInstance: ComponentInternalInstance | null =\r\n      currentVNode.component && currentVNode.component.parent\r\n    currentVNode = parentInstance && parentInstance.vnode\r\n  }\r\n\r\n  return normalizedStack\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace: ComponentTraceStack): any[] {\r\n  const logs: any[] = []\r\n  trace.forEach((entry, i) => {\r\n    logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry))\r\n  })\r\n  return logs\r\n}\r\n\r\nfunction formatTraceEntry({ vnode, recurseCount }: TraceEntry): any[] {\r\n  const postfix =\r\n    recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``\r\n  const isRoot = vnode.component ? vnode.component.parent == null : false\r\n  const open = ` at <${formatComponentName(\r\n    vnode.component,\r\n    vnode.type,\r\n    isRoot\r\n  )}`\r\n  const close = `>` + postfix\r\n  return vnode.props\r\n    ? [open, ...formatProps(vnode.props), close]\r\n    : [open + close]\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction formatProps(props: Data): any[] {\r\n  const res: any[] = []\r\n  const keys = Object.keys(props)\r\n  keys.slice(0, 3).forEach(key => {\r\n    res.push(...formatProp(key, props[key]))\r\n  })\r\n  if (keys.length > 3) {\r\n    res.push(` ...`)\r\n  }\r\n  return res\r\n}\r\n\r\nfunction formatProp(key: string, value: unknown): any[]\r\nfunction formatProp(key: string, value: unknown, raw: true): any\r\n/* istanbul ignore next */\r\nfunction formatProp(key: string, value: unknown, raw?: boolean): any {\r\n  if (isString(value)) {\r\n    value = JSON.stringify(value)\r\n    return raw ? value : [`${key}=${value}`]\r\n  } else if (\r\n    typeof value === 'number' ||\r\n    typeof value === 'boolean' ||\r\n    value == null\r\n  ) {\r\n    return raw ? value : [`${key}=${value}`]\r\n  } else if (isRef(value)) {\r\n    value = formatProp(key, toRaw(value.value), true)\r\n    return raw ? value : [`${key}=Ref<`, value, `>`]\r\n  } else if (isFunction(value)) {\r\n    return [`${key}=fn${value.name ? `<${value.name}>` : ``}`]\r\n  } else {\r\n    value = toRaw(value)\r\n    return raw ? value : [`${key}=`, value]\r\n  }\r\n}\r\n","import { VNode } from './vnode'\r\nimport { ComponentInternalInstance, LifecycleHooks } from './component'\r\nimport { warn, pushWarningContext, popWarningContext } from './warning'\r\nimport { isPromise, isFunction } from '@vue/shared'\r\n\r\n// contexts where user provided function may be executed, in addition to\r\n// lifecycle hooks.\r\nexport const enum ErrorCodes {\r\n  SETUP_FUNCTION,\r\n  RENDER_FUNCTION,\r\n  WATCH_GETTER,\r\n  WATCH_CALLBACK,\r\n  WATCH_CLEANUP,\r\n  NATIVE_EVENT_HANDLER,\r\n  COMPONENT_EVENT_HANDLER,\r\n  VNODE_HOOK,\r\n  DIRECTIVE_HOOK,\r\n  TRANSITION_HOOK,\r\n  APP_ERROR_HANDLER,\r\n  APP_WARN_HANDLER,\r\n  FUNCTION_REF,\r\n  ASYNC_COMPONENT_LOADER,\r\n  SCHEDULER\r\n}\r\n\r\nexport const ErrorTypeStrings: Record<number | string, string> = {\r\n  [LifecycleHooks.SERVER_PREFETCH]: 'serverPrefetch hook',\r\n  [LifecycleHooks.BEFORE_CREATE]: 'beforeCreate hook',\r\n  [LifecycleHooks.CREATED]: 'created hook',\r\n  [LifecycleHooks.BEFORE_MOUNT]: 'beforeMount hook',\r\n  [LifecycleHooks.MOUNTED]: 'mounted hook',\r\n  [LifecycleHooks.BEFORE_UPDATE]: 'beforeUpdate hook',\r\n  [LifecycleHooks.UPDATED]: 'updated',\r\n  [LifecycleHooks.BEFORE_UNMOUNT]: 'beforeUnmount hook',\r\n  [LifecycleHooks.UNMOUNTED]: 'unmounted hook',\r\n  [LifecycleHooks.ACTIVATED]: 'activated hook',\r\n  [LifecycleHooks.DEACTIVATED]: 'deactivated hook',\r\n  [LifecycleHooks.ERROR_CAPTURED]: 'errorCaptured hook',\r\n  [LifecycleHooks.RENDER_TRACKED]: 'renderTracked hook',\r\n  [LifecycleHooks.RENDER_TRIGGERED]: 'renderTriggered hook',\r\n  [ErrorCodes.SETUP_FUNCTION]: 'setup function',\r\n  [ErrorCodes.RENDER_FUNCTION]: 'render function',\r\n  [ErrorCodes.WATCH_GETTER]: 'watcher getter',\r\n  [ErrorCodes.WATCH_CALLBACK]: 'watcher callback',\r\n  [ErrorCodes.WATCH_CLEANUP]: 'watcher cleanup function',\r\n  [ErrorCodes.NATIVE_EVENT_HANDLER]: 'native event handler',\r\n  [ErrorCodes.COMPONENT_EVENT_HANDLER]: 'component event handler',\r\n  [ErrorCodes.VNODE_HOOK]: 'vnode hook',\r\n  [ErrorCodes.DIRECTIVE_HOOK]: 'directive hook',\r\n  [ErrorCodes.TRANSITION_HOOK]: 'transition hook',\r\n  [ErrorCodes.APP_ERROR_HANDLER]: 'app errorHandler',\r\n  [ErrorCodes.APP_WARN_HANDLER]: 'app warnHandler',\r\n  [ErrorCodes.FUNCTION_REF]: 'ref function',\r\n  [ErrorCodes.ASYNC_COMPONENT_LOADER]: 'async component loader',\r\n  [ErrorCodes.SCHEDULER]:\r\n    'scheduler flush. This is likely a Vue internals bug. ' +\r\n    'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core'\r\n}\r\n\r\nexport type ErrorTypes = LifecycleHooks | ErrorCodes\r\n\r\nexport function callWithErrorHandling(\r\n  fn: Function,\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes,\r\n  args?: unknown[]\r\n) {\r\n  let res\r\n  try {\r\n    res = args ? fn(...args) : fn()\r\n  } catch (err) {\r\n    handleError(err, instance, type)\r\n  }\r\n  return res\r\n}\r\n\r\nexport function callWithAsyncErrorHandling(\r\n  fn: Function | Function[],\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes,\r\n  args?: unknown[]\r\n): any[] {\r\n  if (isFunction(fn)) {\r\n    const res = callWithErrorHandling(fn, instance, type, args)\r\n    if (res && isPromise(res)) {\r\n      res.catch(err => {\r\n        handleError(err, instance, type)\r\n      })\r\n    }\r\n    return res\r\n  }\r\n\r\n  const values = []\r\n  for (let i = 0; i < fn.length; i++) {\r\n    values.push(callWithAsyncErrorHandling(fn[i], instance, type, args))\r\n  }\r\n  return values\r\n}\r\n\r\nexport function handleError(\r\n  err: unknown,\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes,\r\n  throwInDev = true\r\n) {\r\n  const contextVNode = instance ? instance.vnode : null\r\n  if (instance) {\r\n    let cur = instance.parent\r\n    // the exposed instance is the render proxy to keep it consistent with 2.x\r\n    const exposedInstance = instance.proxy\r\n    // in production the hook receives only the error code\r\n    const errorInfo = __DEV__ ? ErrorTypeStrings[type] : type\r\n    while (cur) {\r\n      const errorCapturedHooks = cur.ec\r\n      if (errorCapturedHooks) {\r\n        for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n          if (\r\n            errorCapturedHooks[i](err, exposedInstance, errorInfo) === false\r\n          ) {\r\n            return\r\n          }\r\n        }\r\n      }\r\n      cur = cur.parent\r\n    }\r\n    // app-level handling\r\n    const appErrorHandler = instance.appContext.config.errorHandler\r\n    if (appErrorHandler) {\r\n      callWithErrorHandling(\r\n        appErrorHandler,\r\n        null,\r\n        ErrorCodes.APP_ERROR_HANDLER,\r\n        [err, exposedInstance, errorInfo]\r\n      )\r\n      return\r\n    }\r\n  }\r\n  logError(err, type, contextVNode, throwInDev)\r\n}\r\n\r\nfunction logError(\r\n  err: unknown,\r\n  type: ErrorTypes,\r\n  contextVNode: VNode | null,\r\n  throwInDev = true\r\n) {\r\n  if (__DEV__) {\r\n    const info = ErrorTypeStrings[type]\r\n    if (contextVNode) {\r\n      pushWarningContext(contextVNode)\r\n    }\r\n    warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`)\r\n    if (contextVNode) {\r\n      popWarningContext()\r\n    }\r\n    // crash in dev by default so it's more noticeable\r\n    if (throwInDev) {\r\n      throw err\r\n    } else if (!__TEST__) {\r\n      console.error(err)\r\n    }\r\n  } else {\r\n    // recover in prod to reduce the impact on end-user\r\n    console.error(err)\r\n  }\r\n}\r\n","import { ErrorCodes, callWithErrorHandling } from './errorHandling'\r\nimport { isArray, NOOP } from '@vue/shared'\r\nimport { ComponentInternalInstance, getComponentName } from './component'\r\nimport { warn } from './warning'\r\n\r\nexport interface SchedulerJob extends Function {\r\n  id?: number\r\n  active?: boolean\r\n  computed?: boolean\r\n  /**\r\n   * Indicates whether the effect is allowed to recursively trigger itself\r\n   * when managed by the scheduler.\r\n   *\r\n   * By default, a job cannot trigger itself because some built-in method calls,\r\n   * e.g. Array.prototype.push actually performs reads as well (#1740) which\r\n   * can lead to confusing infinite loops.\r\n   * The allowed cases are component update functions and watch callbacks.\r\n   * Component update functions may update child component props, which in turn\r\n   * trigger flush: \"pre\" watch callbacks that mutates state that the parent\r\n   * relies on (#1801). Watch callbacks doesn't track its dependencies so if it\r\n   * triggers itself again, it's likely intentional and it is the user's\r\n   * responsibility to perform recursive state mutation that eventually\r\n   * stabilizes (#1727).\r\n   */\r\n  allowRecurse?: boolean\r\n  /**\r\n   * Attached by renderer.ts when setting up a component's render effect\r\n   * Used to obtain component information when reporting max recursive updates.\r\n   * dev only.\r\n   */\r\n  ownerInstance?: ComponentInternalInstance\r\n}\r\n\r\nexport type SchedulerJobs = SchedulerJob | SchedulerJob[]\r\n\r\nlet isFlushing = false\r\nlet isFlushPending = false\r\n\r\nconst queue: SchedulerJob[] = []\r\nlet flushIndex = 0\r\n\r\nconst pendingPreFlushCbs: SchedulerJob[] = []\r\nlet activePreFlushCbs: SchedulerJob[] | null = null\r\nlet preFlushIndex = 0\r\n\r\nconst pendingPostFlushCbs: SchedulerJob[] = []\r\nlet activePostFlushCbs: SchedulerJob[] | null = null\r\nlet postFlushIndex = 0\r\n\r\nconst resolvedPromise = /*#__PURE__*/ Promise.resolve() as Promise<any>\r\nlet currentFlushPromise: Promise<void> | null = null\r\n\r\nlet currentPreFlushParentJob: SchedulerJob | null = null\r\n\r\nconst RECURSION_LIMIT = 100\r\ntype CountMap = Map<SchedulerJob, number>\r\n\r\nexport function nextTick<T = void>(\r\n  this: T,\r\n  fn?: (this: T) => void\r\n): Promise<void> {\r\n  const p = currentFlushPromise || resolvedPromise\r\n  return fn ? p.then(this ? fn.bind(this) : fn) : p\r\n}\r\n\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(id: number) {\r\n  // the start index should be `flushIndex + 1`\r\n  let start = flushIndex + 1\r\n  let end = queue.length\r\n\r\n  while (start < end) {\r\n    const middle = (start + end) >>> 1\r\n    const middleJobId = getId(queue[middle])\r\n    middleJobId < id ? (start = middle + 1) : (end = middle)\r\n  }\r\n\r\n  return start\r\n}\r\n\r\nexport function queueJob(job: SchedulerJob) {\r\n  // the dedupe search uses the startIndex argument of Array.includes()\r\n  // by default the search index includes the current job that is being run\r\n  // so it cannot recursively trigger itself again.\r\n  // if the job is a watch() callback, the search will start with a +1 index to\r\n  // allow it recursively trigger itself - it is the user's responsibility to\r\n  // ensure it doesn't end up in an infinite loop.\r\n  if (\r\n    (!queue.length ||\r\n      !queue.includes(\r\n        job,\r\n        isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex\r\n      )) &&\r\n    job !== currentPreFlushParentJob\r\n  ) {\r\n    if (job.id == null) {\r\n      queue.push(job)\r\n    } else {\r\n      queue.splice(findInsertionIndex(job.id), 0, job)\r\n    }\r\n    queueFlush()\r\n  }\r\n}\r\n\r\nfunction queueFlush() {\r\n  if (!isFlushing && !isFlushPending) {\r\n    isFlushPending = true\r\n    currentFlushPromise = resolvedPromise.then(flushJobs)\r\n  }\r\n}\r\n\r\nexport function invalidateJob(job: SchedulerJob) {\r\n  const i = queue.indexOf(job)\r\n  if (i > flushIndex) {\r\n    queue.splice(i, 1)\r\n  }\r\n}\r\n\r\nfunction queueCb(\r\n  cb: SchedulerJobs,\r\n  activeQueue: SchedulerJob[] | null,\r\n  pendingQueue: SchedulerJob[],\r\n  index: number\r\n) {\r\n  if (!isArray(cb)) {\r\n    if (\r\n      !activeQueue ||\r\n      !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)\r\n    ) {\r\n      pendingQueue.push(cb)\r\n    }\r\n  } else {\r\n    // if cb is an array, it is a component lifecycle hook which can only be\r\n    // triggered by a job, which is already deduped in the main queue, so\r\n    // we can skip duplicate check here to improve perf\r\n    pendingQueue.push(...cb)\r\n  }\r\n  queueFlush()\r\n}\r\n\r\nexport function queuePreFlushCb(cb: SchedulerJob) {\r\n  queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex)\r\n}\r\n\r\nexport function queuePostFlushCb(cb: SchedulerJobs) {\r\n  queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex)\r\n}\r\n\r\nexport function flushPreFlushCbs(\r\n  seen?: CountMap,\r\n  parentJob: SchedulerJob | null = null\r\n) {\r\n  if (pendingPreFlushCbs.length) {\r\n    currentPreFlushParentJob = parentJob\r\n    activePreFlushCbs = [...new Set(pendingPreFlushCbs)]\r\n    pendingPreFlushCbs.length = 0\r\n    if (__DEV__) {\r\n      seen = seen || new Map()\r\n    }\r\n    for (\r\n      preFlushIndex = 0;\r\n      preFlushIndex < activePreFlushCbs.length;\r\n      preFlushIndex++\r\n    ) {\r\n      if (\r\n        __DEV__ &&\r\n        checkRecursiveUpdates(seen!, activePreFlushCbs[preFlushIndex])\r\n      ) {\r\n        continue\r\n      }\r\n      activePreFlushCbs[preFlushIndex]()\r\n    }\r\n    activePreFlushCbs = null\r\n    preFlushIndex = 0\r\n    currentPreFlushParentJob = null\r\n    // recursively flush until it drains\r\n    flushPreFlushCbs(seen, parentJob)\r\n  }\r\n}\r\n\r\nexport function flushPostFlushCbs(seen?: CountMap) {\r\n  // flush any pre cbs queued during the flush (e.g. pre watchers)\r\n  flushPreFlushCbs()\r\n  if (pendingPostFlushCbs.length) {\r\n    const deduped = [...new Set(pendingPostFlushCbs)]\r\n    pendingPostFlushCbs.length = 0\r\n\r\n    // #1947 already has active queue, nested flushPostFlushCbs call\r\n    if (activePostFlushCbs) {\r\n      activePostFlushCbs.push(...deduped)\r\n      return\r\n    }\r\n\r\n    activePostFlushCbs = deduped\r\n    if (__DEV__) {\r\n      seen = seen || new Map()\r\n    }\r\n\r\n    activePostFlushCbs.sort((a, b) => getId(a) - getId(b))\r\n\r\n    for (\r\n      postFlushIndex = 0;\r\n      postFlushIndex < activePostFlushCbs.length;\r\n      postFlushIndex++\r\n    ) {\r\n      if (\r\n        __DEV__ &&\r\n        checkRecursiveUpdates(seen!, activePostFlushCbs[postFlushIndex])\r\n      ) {\r\n        continue\r\n      }\r\n      activePostFlushCbs[postFlushIndex]()\r\n    }\r\n    activePostFlushCbs = null\r\n    postFlushIndex = 0\r\n  }\r\n}\r\n\r\nconst getId = (job: SchedulerJob): number =>\r\n  job.id == null ? Infinity : job.id\r\n\r\nfunction flushJobs(seen?: CountMap) {\r\n  isFlushPending = false\r\n  isFlushing = true\r\n  if (__DEV__) {\r\n    seen = seen || new Map()\r\n  }\r\n\r\n  flushPreFlushCbs(seen)\r\n\r\n  // Sort queue before flush.\r\n  // This ensures that:\r\n  // 1. Components are updated from parent to child. (because parent is always\r\n  //    created before the child so its render effect will have smaller\r\n  //    priority number)\r\n  // 2. If a component is unmounted during a parent component's update,\r\n  //    its update can be skipped.\r\n  queue.sort((a, b) => getId(a) - getId(b))\r\n\r\n  // conditional usage of checkRecursiveUpdate must be determined out of\r\n  // try ... catch block since Rollup by default de-optimizes treeshaking\r\n  // inside try-catch. This can leave all warning code unshaked. Although\r\n  // they would get eventually shaken by a minifier like terser, some minifiers\r\n  // would fail to do that (e.g. https://github.com/evanw/esbuild/issues/1610)\r\n  const check = __DEV__\r\n    ? (job: SchedulerJob) => checkRecursiveUpdates(seen!, job)\r\n    : NOOP\r\n\r\n  try {\r\n    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n      const job = queue[flushIndex]\r\n      if (job && job.active !== false) {\r\n        if (__DEV__ && check(job)) {\r\n          continue\r\n        }\r\n        // console.log(`running:`, job.id)\r\n        callWithErrorHandling(job, null, ErrorCodes.SCHEDULER)\r\n      }\r\n    }\r\n  } finally {\r\n    flushIndex = 0\r\n    queue.length = 0\r\n\r\n    flushPostFlushCbs(seen)\r\n\r\n    isFlushing = false\r\n    currentFlushPromise = null\r\n    // some postFlushCb queued jobs!\r\n    // keep flushing until it drains.\r\n    if (\r\n      queue.length ||\r\n      pendingPreFlushCbs.length ||\r\n      pendingPostFlushCbs.length\r\n    ) {\r\n      flushJobs(seen)\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkRecursiveUpdates(seen: CountMap, fn: SchedulerJob) {\r\n  if (!seen.has(fn)) {\r\n    seen.set(fn, 1)\r\n  } else {\r\n    const count = seen.get(fn)!\r\n    if (count > RECURSION_LIMIT) {\r\n      const instance = fn.ownerInstance\r\n      const componentName = instance && getComponentName(instance.type)\r\n      warn(\r\n        `Maximum recursive updates exceeded${\r\n          componentName ? ` in component <${componentName}>` : ``\r\n        }. ` +\r\n          `This means you have a reactive effect that is mutating its own ` +\r\n          `dependencies and thus recursively triggering itself. Possible sources ` +\r\n          `include component template, render function, updated hook or ` +\r\n          `watcher source function.`\r\n      )\r\n      return true\r\n    } else {\r\n      seen.set(fn, count + 1)\r\n    }\r\n  }\r\n}\r\n","/* eslint-disable no-restricted-globals */\r\nimport { App } from './apiCreateApp'\r\nimport { Fragment, Text, Comment, Static } from './vnode'\r\nimport { ComponentInternalInstance } from './component'\r\n\r\ninterface AppRecord {\r\n  id: number\r\n  app: App\r\n  version: string\r\n  types: Record<string, string | Symbol>\r\n}\r\n\r\nconst enum DevtoolsHooks {\r\n  APP_INIT = 'app:init',\r\n  APP_UNMOUNT = 'app:unmount',\r\n  COMPONENT_UPDATED = 'component:updated',\r\n  COMPONENT_ADDED = 'component:added',\r\n  COMPONENT_REMOVED = 'component:removed',\r\n  COMPONENT_EMIT = 'component:emit',\r\n  PERFORMANCE_START = 'perf:start',\r\n  PERFORMANCE_END = 'perf:end'\r\n}\r\n\r\ninterface DevtoolsHook {\r\n  enabled?: boolean\r\n  emit: (event: string, ...payload: any[]) => void\r\n  on: (event: string, handler: Function) => void\r\n  once: (event: string, handler: Function) => void\r\n  off: (event: string, handler: Function) => void\r\n  appRecords: AppRecord[]\r\n}\r\n\r\nexport let devtools: DevtoolsHook\r\n\r\nlet buffer: { event: string; args: any[] }[] = []\r\n\r\nlet devtoolsNotInstalled = false\r\n\r\nfunction emit(event: string, ...args: any[]) {\r\n  if (devtools) {\r\n    devtools.emit(event, ...args)\r\n  } else if (!devtoolsNotInstalled) {\r\n    buffer.push({ event, args })\r\n  }\r\n}\r\n\r\nexport function setDevtoolsHook(hook: DevtoolsHook, target: any) {\r\n  devtools = hook\r\n  if (devtools) {\r\n    devtools.enabled = true\r\n    buffer.forEach(({ event, args }) => devtools.emit(event, ...args))\r\n    buffer = []\r\n  } else if (\r\n    // handle late devtools injection - only do this if we are in an actual\r\n    // browser environment to avoid the timer handle stalling test runner exit\r\n    // (#4815)\r\n    typeof window !== 'undefined' &&\r\n    // some envs mock window but not fully\r\n    window.HTMLElement &&\r\n    // also exclude jsdom\r\n    !window.navigator?.userAgent?.includes('jsdom')\r\n  ) {\r\n    const replay = (target.__VUE_DEVTOOLS_HOOK_REPLAY__ =\r\n      target.__VUE_DEVTOOLS_HOOK_REPLAY__ || [])\r\n    replay.push((newHook: DevtoolsHook) => {\r\n      setDevtoolsHook(newHook, target)\r\n    })\r\n    // clear buffer after 3s - the user probably doesn't have devtools installed\r\n    // at all, and keeping the buffer will cause memory leaks (#4738)\r\n    setTimeout(() => {\r\n      if (!devtools) {\r\n        target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null\r\n        devtoolsNotInstalled = true\r\n        buffer = []\r\n      }\r\n    }, 3000)\r\n  } else {\r\n    // non-browser env, assume not installed\r\n    devtoolsNotInstalled = true\r\n    buffer = []\r\n  }\r\n}\r\n\r\nexport function devtoolsInitApp(app: App, version: string) {\r\n  emit(DevtoolsHooks.APP_INIT, app, version, {\r\n    Fragment,\r\n    Text,\r\n    Comment,\r\n    Static\r\n  })\r\n}\r\n\r\nexport function devtoolsUnmountApp(app: App) {\r\n  emit(DevtoolsHooks.APP_UNMOUNT, app)\r\n}\r\n\r\nexport const devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\r\n  DevtoolsHooks.COMPONENT_ADDED\r\n)\r\n\r\nexport const devtoolsComponentUpdated =\r\n  /*#__PURE__*/ createDevtoolsComponentHook(DevtoolsHooks.COMPONENT_UPDATED)\r\n\r\nexport const devtoolsComponentRemoved =\r\n  /*#__PURE__*/ createDevtoolsComponentHook(DevtoolsHooks.COMPONENT_REMOVED)\r\n\r\nfunction createDevtoolsComponentHook(hook: DevtoolsHooks) {\r\n  return (component: ComponentInternalInstance) => {\r\n    emit(\r\n      hook,\r\n      component.appContext.app,\r\n      component.uid,\r\n      component.parent ? component.parent.uid : undefined,\r\n      component\r\n    )\r\n  }\r\n}\r\n\r\nexport const devtoolsPerfStart = /*#__PURE__*/ createDevtoolsPerformanceHook(\r\n  DevtoolsHooks.PERFORMANCE_START\r\n)\r\n\r\nexport const devtoolsPerfEnd = /*#__PURE__*/ createDevtoolsPerformanceHook(\r\n  DevtoolsHooks.PERFORMANCE_END\r\n)\r\n\r\nfunction createDevtoolsPerformanceHook(hook: DevtoolsHooks) {\r\n  return (component: ComponentInternalInstance, type: string, time: number) => {\r\n    emit(hook, component.appContext.app, component.uid, component, type, time)\r\n  }\r\n}\r\n\r\nexport function devtoolsComponentEmit(\r\n  component: ComponentInternalInstance,\r\n  event: string,\r\n  params: any[]\r\n) {\r\n  emit(\r\n    DevtoolsHooks.COMPONENT_EMIT,\r\n    component.appContext.app,\r\n    component,\r\n    event,\r\n    params\r\n  )\r\n}\r\n","import {\r\n  camelize,\r\n  EMPTY_OBJ,\r\n  toHandlerKey,\r\n  extend,\r\n  hasOwn,\r\n  hyphenate,\r\n  isArray,\r\n  isFunction,\r\n  isOn,\r\n  toNumber,\r\n  UnionToIntersection\r\n} from '@vue/shared'\r\nimport {\r\n  ComponentInternalInstance,\r\n  ComponentOptions,\r\n  ConcreteComponent,\r\n  formatComponentName\r\n} from './component'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from './errorHandling'\r\nimport { warn } from './warning'\r\nimport { devtoolsComponentEmit } from './devtools'\r\nimport { AppContext } from './apiCreateApp'\r\nimport { emit as compatInstanceEmit } from './compat/instanceEventEmitter'\r\nimport {\r\n  compatModelEventPrefix,\r\n  compatModelEmit\r\n} from './compat/componentVModel'\r\n\r\nexport type ObjectEmitsOptions = Record<\r\n  string,\r\n  ((...args: any[]) => any) | null\r\n>\r\n\r\nexport type EmitsOptions = ObjectEmitsOptions | string[]\r\n\r\nexport type EmitsToProps<T extends EmitsOptions> = T extends string[]\r\n  ? {\r\n      [K in string & `on${Capitalize<T[number]>}`]?: (...args: any[]) => any\r\n    }\r\n  : T extends ObjectEmitsOptions\r\n  ? {\r\n      [K in string &\r\n        `on${Capitalize<string & keyof T>}`]?: K extends `on${infer C}`\r\n        ? T[Uncapitalize<C>] extends null\r\n          ? (...args: any[]) => any\r\n          : (\r\n              ...args: T[Uncapitalize<C>] extends (...args: infer P) => any\r\n                ? P\r\n                : never\r\n            ) => any\r\n        : never\r\n    }\r\n  : {}\r\n\r\nexport type EmitFn<\r\n  Options = ObjectEmitsOptions,\r\n  Event extends keyof Options = keyof Options\r\n> = Options extends Array<infer V>\r\n  ? (event: V, ...args: any[]) => void\r\n  : {} extends Options // if the emit is empty object (usually the default value for emit) should be converted to function\r\n  ? (event: string, ...args: any[]) => void\r\n  : UnionToIntersection<\r\n      {\r\n        [key in Event]: Options[key] extends (...args: infer Args) => any\r\n          ? (event: key, ...args: Args) => void\r\n          : (event: key, ...args: any[]) => void\r\n      }[Event]\r\n    >\r\n\r\nexport function emit(\r\n  instance: ComponentInternalInstance,\r\n  event: string,\r\n  ...rawArgs: any[]\r\n) {\r\n  if (instance.isUnmounted) return\r\n  const props = instance.vnode.props || EMPTY_OBJ\r\n\r\n  if (__DEV__) {\r\n    const {\r\n      emitsOptions,\r\n      propsOptions: [propsOptions]\r\n    } = instance\r\n    if (emitsOptions) {\r\n      if (\r\n        !(event in emitsOptions) &&\r\n        !(\r\n          __COMPAT__ &&\r\n          (event.startsWith('hook:') ||\r\n            event.startsWith(compatModelEventPrefix))\r\n        )\r\n      ) {\r\n        if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n          warn(\r\n            `Component emitted event \"${event}\" but it is neither declared in ` +\r\n              `the emits option nor as an \"${toHandlerKey(event)}\" prop.`\r\n          )\r\n        }\r\n      } else {\r\n        const validator = emitsOptions[event]\r\n        if (isFunction(validator)) {\r\n          const isValid = validator(...rawArgs)\r\n          if (!isValid) {\r\n            warn(\r\n              `Invalid event arguments: event validation failed for event \"${event}\".`\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let args = rawArgs\r\n  const isModelListener = event.startsWith('update:')\r\n\r\n  // for v-model update:xxx events, apply modifiers on args\r\n  const modelArg = isModelListener && event.slice(7)\r\n  if (modelArg && modelArg in props) {\r\n    const modifiersKey = `${\r\n      modelArg === 'modelValue' ? 'model' : modelArg\r\n    }Modifiers`\r\n    const { number, trim } = props[modifiersKey] || EMPTY_OBJ\r\n    if (trim) {\r\n      args = rawArgs.map(a => a.trim())\r\n    }\r\n    if (number) {\r\n      args = rawArgs.map(toNumber)\r\n    }\r\n  }\r\n\r\n  if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n    devtoolsComponentEmit(instance, event, args)\r\n  }\r\n\r\n  if (__DEV__) {\r\n    const lowerCaseEvent = event.toLowerCase()\r\n    if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n      warn(\r\n        `Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n          `${formatComponentName(\r\n            instance,\r\n            instance.type\r\n          )} but the handler is registered for \"${event}\". ` +\r\n          `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n          `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n          `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`\r\n      )\r\n    }\r\n  }\r\n\r\n  let handlerName\r\n  let handler =\r\n    props[(handlerName = toHandlerKey(event))] ||\r\n    // also try camelCase event handler (#2249)\r\n    props[(handlerName = toHandlerKey(camelize(event)))]\r\n  // for v-model update:xxx events, also trigger kebab-case equivalent\r\n  // for props passed via kebab-case\r\n  if (!handler && isModelListener) {\r\n    handler = props[(handlerName = toHandlerKey(hyphenate(event)))]\r\n  }\r\n\r\n  if (handler) {\r\n    callWithAsyncErrorHandling(\r\n      handler,\r\n      instance,\r\n      ErrorCodes.COMPONENT_EVENT_HANDLER,\r\n      args\r\n    )\r\n  }\r\n\r\n  const onceHandler = props[handlerName + `Once`]\r\n  if (onceHandler) {\r\n    if (!instance.emitted) {\r\n      instance.emitted = {} as Record<any, boolean>\r\n    } else if (instance.emitted[handlerName]) {\r\n      return\r\n    }\r\n    instance.emitted[handlerName] = true\r\n    callWithAsyncErrorHandling(\r\n      onceHandler,\r\n      instance,\r\n      ErrorCodes.COMPONENT_EVENT_HANDLER,\r\n      args\r\n    )\r\n  }\r\n\r\n  if (__COMPAT__) {\r\n    compatModelEmit(instance, event, args)\r\n    return compatInstanceEmit(instance, event, args)\r\n  }\r\n}\r\n\r\nexport function normalizeEmitsOptions(\r\n  comp: ConcreteComponent,\r\n  appContext: AppContext,\r\n  asMixin = false\r\n): ObjectEmitsOptions | null {\r\n  const cache = appContext.emitsCache\r\n  const cached = cache.get(comp)\r\n  if (cached !== undefined) {\r\n    return cached\r\n  }\r\n\r\n  const raw = comp.emits\r\n  let normalized: ObjectEmitsOptions = {}\r\n\r\n  // apply mixin/extends props\r\n  let hasExtends = false\r\n  if (__FEATURE_OPTIONS_API__ && !isFunction(comp)) {\r\n    const extendEmits = (raw: ComponentOptions) => {\r\n      const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true)\r\n      if (normalizedFromExtend) {\r\n        hasExtends = true\r\n        extend(normalized, normalizedFromExtend)\r\n      }\r\n    }\r\n    if (!asMixin && appContext.mixins.length) {\r\n      appContext.mixins.forEach(extendEmits)\r\n    }\r\n    if (comp.extends) {\r\n      extendEmits(comp.extends)\r\n    }\r\n    if (comp.mixins) {\r\n      comp.mixins.forEach(extendEmits)\r\n    }\r\n  }\r\n\r\n  if (!raw && !hasExtends) {\r\n    cache.set(comp, null)\r\n    return null\r\n  }\r\n\r\n  if (isArray(raw)) {\r\n    raw.forEach(key => (normalized[key] = null))\r\n  } else {\r\n    extend(normalized, raw)\r\n  }\r\n\r\n  cache.set(comp, normalized)\r\n  return normalized\r\n}\r\n\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nexport function isEmitListener(\r\n  options: ObjectEmitsOptions | null,\r\n  key: string\r\n): boolean {\r\n  if (!options || !isOn(key)) {\r\n    return false\r\n  }\r\n\r\n  if (__COMPAT__ && key.startsWith(compatModelEventPrefix)) {\r\n    return true\r\n  }\r\n\r\n  key = key.slice(2).replace(/Once$/, '')\r\n  return (\r\n    hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n    hasOwn(options, hyphenate(key)) ||\r\n    hasOwn(options, key)\r\n  )\r\n}\r\n","import { ComponentInternalInstance } from './component'\r\nimport { devtoolsComponentUpdated } from './devtools'\r\nimport { setBlockTracking } from './vnode'\r\n\r\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nexport let currentRenderingInstance: ComponentInternalInstance | null = null\r\nexport let currentScopeId: string | null = null\r\n\r\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\r\nexport function setCurrentRenderingInstance(\r\n  instance: ComponentInternalInstance | null\r\n): ComponentInternalInstance | null {\r\n  const prev = currentRenderingInstance\r\n  currentRenderingInstance = instance\r\n  currentScopeId = (instance && instance.type.__scopeId) || null\r\n  // v2 pre-compiled components uses _scopeId instead of __scopeId\r\n  if (__COMPAT__ && !currentScopeId) {\r\n    currentScopeId = (instance && (instance.type as any)._scopeId) || null\r\n  }\r\n  return prev\r\n}\r\n\r\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\r\nexport function pushScopeId(id: string | null) {\r\n  currentScopeId = id\r\n}\r\n\r\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\r\nexport function popScopeId() {\r\n  currentScopeId = null\r\n}\r\n\r\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\r\nexport const withScopeId = (_id: string) => withCtx\r\n\r\nexport type ContextualRenderFn = {\r\n  (...args: any[]): any\r\n  _n: boolean /* already normalized */\r\n  _c: boolean /* compiled */\r\n  _d: boolean /* disableTracking */\r\n  _ns: boolean /* nonScoped */\r\n}\r\n\r\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\r\nexport function withCtx(\r\n  fn: Function,\r\n  ctx: ComponentInternalInstance | null = currentRenderingInstance,\r\n  isNonScopedSlot?: boolean // __COMPAT__ only\r\n) {\r\n  if (!ctx) return fn\r\n\r\n  // already normalized\r\n  if ((fn as ContextualRenderFn)._n) {\r\n    return fn\r\n  }\r\n\r\n  const renderFnWithContext: ContextualRenderFn = (...args: any[]) => {\r\n    // If a user calls a compiled slot inside a template expression (#1745), it\r\n    // can mess up block tracking, so by default we disable block tracking and\r\n    // force bail out when invoking a compiled slot (indicated by the ._d flag).\r\n    // This isn't necessary if rendering a compiled `<slot>`, so we flip the\r\n    // ._d flag off when invoking the wrapped fn inside `renderSlot`.\r\n    if (renderFnWithContext._d) {\r\n      setBlockTracking(-1)\r\n    }\r\n    const prevInstance = setCurrentRenderingInstance(ctx)\r\n    const res = fn(...args)\r\n    setCurrentRenderingInstance(prevInstance)\r\n    if (renderFnWithContext._d) {\r\n      setBlockTracking(1)\r\n    }\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      devtoolsComponentUpdated(ctx)\r\n    }\r\n\r\n    return res\r\n  }\r\n\r\n  // mark normalized to avoid duplicated wrapping\r\n  renderFnWithContext._n = true\r\n  // mark this as compiled by default\r\n  // this is used in vnode.ts -> normalizeChildren() to set the slot\r\n  // rendering flag.\r\n  renderFnWithContext._c = true\r\n  // disable block tracking by default\r\n  renderFnWithContext._d = true\r\n  // compat build only flag to distinguish scoped slots from non-scoped ones\r\n  if (__COMPAT__ && isNonScopedSlot) {\r\n    renderFnWithContext._ns = true\r\n  }\r\n  return renderFnWithContext\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  FunctionalComponent,\r\n  Data,\r\n  getComponentName\r\n} from './component'\r\nimport {\r\n  VNode,\r\n  normalizeVNode,\r\n  createVNode,\r\n  Comment,\r\n  cloneVNode,\r\n  VNodeArrayChildren,\r\n  isVNode,\r\n  blockStack\r\n} from './vnode'\r\nimport { handleError, ErrorCodes } from './errorHandling'\r\nimport { PatchFlags, ShapeFlags, isOn, isModelListener } from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { isHmrUpdating } from './hmr'\r\nimport { NormalizedProps } from './componentProps'\r\nimport { isEmitListener } from './componentEmits'\r\nimport { setCurrentRenderingInstance } from './componentRenderContext'\r\nimport {\r\n  DeprecationTypes,\r\n  isCompatEnabled,\r\n  warnDeprecation\r\n} from './compat/compatConfig'\r\n\r\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs: boolean = false\r\n\r\nexport function markAttrsAccessed() {\r\n  accessedAttrs = true\r\n}\r\n\r\ntype SetRootFn = ((root: VNode) => void) | undefined\r\n\r\nexport function renderComponentRoot(\r\n  instance: ComponentInternalInstance\r\n): VNode {\r\n  const {\r\n    type: Component,\r\n    vnode,\r\n    proxy,\r\n    withProxy,\r\n    props,\r\n    propsOptions: [propsOptions],\r\n    slots,\r\n    attrs,\r\n    emit,\r\n    render,\r\n    renderCache,\r\n    data,\r\n    setupState,\r\n    ctx,\r\n    inheritAttrs\r\n  } = instance\r\n\r\n  let result\r\n  let fallthroughAttrs\r\n  const prev = setCurrentRenderingInstance(instance)\r\n  if (__DEV__) {\r\n    accessedAttrs = false\r\n  }\r\n\r\n  try {\r\n    if (vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\r\n      // withProxy is a proxy with a different `has` trap only for\r\n      // runtime-compiled render functions using `with` block.\r\n      const proxyToUse = withProxy || proxy\r\n      result = normalizeVNode(\r\n        render!.call(\r\n          proxyToUse,\r\n          proxyToUse!,\r\n          renderCache,\r\n          props,\r\n          setupState,\r\n          data,\r\n          ctx\r\n        )\r\n      )\r\n      fallthroughAttrs = attrs\r\n    } else {\r\n      // functional\r\n      const render = Component as FunctionalComponent\r\n      // in dev, mark attrs accessed if optional props (attrs === props)\r\n      if (__DEV__ && attrs === props) {\r\n        markAttrsAccessed()\r\n      }\r\n      result = normalizeVNode(\r\n        render.length > 1\r\n          ? render(\r\n              props,\r\n              __DEV__\r\n                ? {\r\n                    get attrs() {\r\n                      markAttrsAccessed()\r\n                      return attrs\r\n                    },\r\n                    slots,\r\n                    emit\r\n                  }\r\n                : { attrs, slots, emit }\r\n            )\r\n          : render(props, null as any /* we know it doesn't need it */)\r\n      )\r\n      fallthroughAttrs = Component.props\r\n        ? attrs\r\n        : getFunctionalFallthrough(attrs)\r\n    }\r\n  } catch (err) {\r\n    blockStack.length = 0\r\n    handleError(err, instance, ErrorCodes.RENDER_FUNCTION)\r\n    result = createVNode(Comment)\r\n  }\r\n\r\n  // attr merging\r\n  // in dev mode, comments are preserved, and it's possible for a template\r\n  // to have comments along side the root element which makes it a fragment\r\n  let root = result\r\n  let setRoot: SetRootFn = undefined\r\n  if (\r\n    __DEV__ &&\r\n    result.patchFlag > 0 &&\r\n    result.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT\r\n  ) {\r\n    ;[root, setRoot] = getChildRoot(result)\r\n  }\r\n\r\n  if (fallthroughAttrs && inheritAttrs !== false) {\r\n    const keys = Object.keys(fallthroughAttrs)\r\n    const { shapeFlag } = root\r\n    if (keys.length) {\r\n      if (shapeFlag & (ShapeFlags.ELEMENT | ShapeFlags.COMPONENT)) {\r\n        if (propsOptions && keys.some(isModelListener)) {\r\n          // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n          // prop, it indicates this component expects to handle v-model and\r\n          // it should not fallthrough.\r\n          // related: #1543, #1643, #1989\r\n          fallthroughAttrs = filterModelListeners(\r\n            fallthroughAttrs,\r\n            propsOptions\r\n          )\r\n        }\r\n        root = cloneVNode(root, fallthroughAttrs)\r\n      } else if (__DEV__ && !accessedAttrs && root.type !== Comment) {\r\n        const allAttrs = Object.keys(attrs)\r\n        const eventAttrs: string[] = []\r\n        const extraAttrs: string[] = []\r\n        for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n          const key = allAttrs[i]\r\n          if (isOn(key)) {\r\n            // ignore v-model handlers when they fail to fallthrough\r\n            if (!isModelListener(key)) {\r\n              // remove `on`, lowercase first letter to reflect event casing\r\n              // accurately\r\n              eventAttrs.push(key[2].toLowerCase() + key.slice(3))\r\n            }\r\n          } else {\r\n            extraAttrs.push(key)\r\n          }\r\n        }\r\n        if (extraAttrs.length) {\r\n          warn(\r\n            `Extraneous non-props attributes (` +\r\n              `${extraAttrs.join(', ')}) ` +\r\n              `were passed to component but could not be automatically inherited ` +\r\n              `because component renders fragment or text root nodes.`\r\n          )\r\n        }\r\n        if (eventAttrs.length) {\r\n          warn(\r\n            `Extraneous non-emits event listeners (` +\r\n              `${eventAttrs.join(', ')}) ` +\r\n              `were passed to component but could not be automatically inherited ` +\r\n              `because component renders fragment or text root nodes. ` +\r\n              `If the listener is intended to be a component custom event listener only, ` +\r\n              `declare it using the \"emits\" option.`\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (\r\n    __COMPAT__ &&\r\n    isCompatEnabled(DeprecationTypes.INSTANCE_ATTRS_CLASS_STYLE, instance) &&\r\n    vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT &&\r\n    root.shapeFlag & (ShapeFlags.ELEMENT | ShapeFlags.COMPONENT)\r\n  ) {\r\n    const { class: cls, style } = vnode.props || {}\r\n    if (cls || style) {\r\n      if (__DEV__ && inheritAttrs === false) {\r\n        warnDeprecation(\r\n          DeprecationTypes.INSTANCE_ATTRS_CLASS_STYLE,\r\n          instance,\r\n          getComponentName(instance.type)\r\n        )\r\n      }\r\n      root = cloneVNode(root, {\r\n        class: cls,\r\n        style: style\r\n      })\r\n    }\r\n  }\r\n\r\n  // inherit directives\r\n  if (vnode.dirs) {\r\n    if (__DEV__ && !isElementRoot(root)) {\r\n      warn(\r\n        `Runtime directive used on component with non-element root node. ` +\r\n          `The directives will not function as intended.`\r\n      )\r\n    }\r\n    // clone before mutating since the root may be a hoisted vnode\r\n    root = cloneVNode(root)\r\n    root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs\r\n  }\r\n  // inherit transition data\r\n  if (vnode.transition) {\r\n    if (__DEV__ && !isElementRoot(root)) {\r\n      warn(\r\n        `Component inside <Transition> renders non-element root node ` +\r\n          `that cannot be animated.`\r\n      )\r\n    }\r\n    root.transition = vnode.transition\r\n  }\r\n\r\n  if (__DEV__ && setRoot) {\r\n    setRoot(root)\r\n  } else {\r\n    result = root\r\n  }\r\n\r\n  setCurrentRenderingInstance(prev)\r\n  return result\r\n}\r\n\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode: VNode): [VNode, SetRootFn] => {\r\n  const rawChildren = vnode.children as VNodeArrayChildren\r\n  const dynamicChildren = vnode.dynamicChildren\r\n  const childRoot = filterSingleRoot(rawChildren)\r\n  if (!childRoot) {\r\n    return [vnode, undefined]\r\n  }\r\n  const index = rawChildren.indexOf(childRoot)\r\n  const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1\r\n  const setRoot: SetRootFn = (updatedRoot: VNode) => {\r\n    rawChildren[index] = updatedRoot\r\n    if (dynamicChildren) {\r\n      if (dynamicIndex > -1) {\r\n        dynamicChildren[dynamicIndex] = updatedRoot\r\n      } else if (updatedRoot.patchFlag > 0) {\r\n        vnode.dynamicChildren = [...dynamicChildren, updatedRoot]\r\n      }\r\n    }\r\n  }\r\n  return [normalizeVNode(childRoot), setRoot]\r\n}\r\n\r\nexport function filterSingleRoot(\r\n  children: VNodeArrayChildren\r\n): VNode | undefined {\r\n  let singleRoot\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    if (isVNode(child)) {\r\n      // ignore user comment\r\n      if (child.type !== Comment || child.children === 'v-if') {\r\n        if (singleRoot) {\r\n          // has more than 1 non-comment child, return now\r\n          return\r\n        } else {\r\n          singleRoot = child\r\n        }\r\n      }\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n  return singleRoot\r\n}\r\n\r\nconst getFunctionalFallthrough = (attrs: Data): Data | undefined => {\r\n  let res: Data | undefined\r\n  for (const key in attrs) {\r\n    if (key === 'class' || key === 'style' || isOn(key)) {\r\n      ;(res || (res = {}))[key] = attrs[key]\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nconst filterModelListeners = (attrs: Data, props: NormalizedProps): Data => {\r\n  const res: Data = {}\r\n  for (const key in attrs) {\r\n    if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n      res[key] = attrs[key]\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nconst isElementRoot = (vnode: VNode) => {\r\n  return (\r\n    vnode.shapeFlag & (ShapeFlags.COMPONENT | ShapeFlags.ELEMENT) ||\r\n    vnode.type === Comment // potential v-if branch switch\r\n  )\r\n}\r\n\r\nexport function shouldUpdateComponent(\r\n  prevVNode: VNode,\r\n  nextVNode: VNode,\r\n  optimized?: boolean\r\n): boolean {\r\n  const { props: prevProps, children: prevChildren, component } = prevVNode\r\n  const { props: nextProps, children: nextChildren, patchFlag } = nextVNode\r\n  const emits = component!.emitsOptions\r\n\r\n  // Parent component's render function was hot-updated. Since this may have\r\n  // caused the child component's slots content to have changed, we need to\r\n  // force the child to update as well.\r\n  if (__DEV__ && (prevChildren || nextChildren) && isHmrUpdating) {\r\n    return true\r\n  }\r\n\r\n  // force child update for runtime directive or transition on component vnode.\r\n  if (nextVNode.dirs || nextVNode.transition) {\r\n    return true\r\n  }\r\n\r\n  if (optimized && patchFlag >= 0) {\r\n    if (patchFlag & PatchFlags.DYNAMIC_SLOTS) {\r\n      // slot content that references values that might have changed,\r\n      // e.g. in a v-for\r\n      return true\r\n    }\r\n    if (patchFlag & PatchFlags.FULL_PROPS) {\r\n      if (!prevProps) {\r\n        return !!nextProps\r\n      }\r\n      // presence of this flag indicates props are always non-null\r\n      return hasPropsChanged(prevProps, nextProps!, emits)\r\n    } else if (patchFlag & PatchFlags.PROPS) {\r\n      const dynamicProps = nextVNode.dynamicProps!\r\n      for (let i = 0; i < dynamicProps.length; i++) {\r\n        const key = dynamicProps[i]\r\n        if (\r\n          nextProps![key] !== prevProps![key] &&\r\n          !isEmitListener(emits, key)\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // this path is only taken by manually written render functions\r\n    // so presence of any children leads to a forced update\r\n    if (prevChildren || nextChildren) {\r\n      if (!nextChildren || !(nextChildren as any).$stable) {\r\n        return true\r\n      }\r\n    }\r\n    if (prevProps === nextProps) {\r\n      return false\r\n    }\r\n    if (!prevProps) {\r\n      return !!nextProps\r\n    }\r\n    if (!nextProps) {\r\n      return true\r\n    }\r\n    return hasPropsChanged(prevProps, nextProps, emits)\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nfunction hasPropsChanged(\r\n  prevProps: Data,\r\n  nextProps: Data,\r\n  emitsOptions: ComponentInternalInstance['emitsOptions']\r\n): boolean {\r\n  const nextKeys = Object.keys(nextProps)\r\n  if (nextKeys.length !== Object.keys(prevProps).length) {\r\n    return true\r\n  }\r\n  for (let i = 0; i < nextKeys.length; i++) {\r\n    const key = nextKeys[i]\r\n    if (\r\n      nextProps[key] !== prevProps[key] &&\r\n      !isEmitListener(emitsOptions, key)\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport function updateHOCHostEl(\r\n  { vnode, parent }: ComponentInternalInstance,\r\n  el: typeof vnode.el // HostNode\r\n) {\r\n  while (parent && parent.subTree === vnode) {\r\n    ;(vnode = parent.vnode).el = el\r\n    parent = parent.parent\r\n  }\r\n}\r\n","import {\r\n  VNode,\r\n  normalizeVNode,\r\n  VNodeProps,\r\n  isSameVNodeType,\r\n  openBlock,\r\n  closeBlock,\r\n  currentBlock,\r\n  Comment,\r\n  createVNode,\r\n  isBlockTreeEnabled\r\n} from '../vnode'\r\nimport { isFunction, isArray, ShapeFlags, toNumber } from '@vue/shared'\r\nimport { ComponentInternalInstance, handleSetupResult } from '../component'\r\nimport { Slots } from '../componentSlots'\r\nimport {\r\n  RendererInternals,\r\n  MoveType,\r\n  SetupRenderEffectFn,\r\n  RendererNode,\r\n  RendererElement\r\n} from '../renderer'\r\nimport { queuePostFlushCb } from '../scheduler'\r\nimport { filterSingleRoot, updateHOCHostEl } from '../componentRenderUtils'\r\nimport { pushWarningContext, popWarningContext, warn } from '../warning'\r\nimport { handleError, ErrorCodes } from '../errorHandling'\r\n\r\nexport interface SuspenseProps {\r\n  onResolve?: () => void\r\n  onPending?: () => void\r\n  onFallback?: () => void\r\n  timeout?: string | number\r\n}\r\n\r\nexport const isSuspense = (type: any): boolean => type.__isSuspense\r\n\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nexport const SuspenseImpl = {\r\n  name: 'Suspense',\r\n  // In order to make Suspense tree-shakable, we need to avoid importing it\r\n  // directly in the renderer. The renderer checks for the __isSuspense flag\r\n  // on a vnode's type and calls the `process` method, passing in renderer\r\n  // internals.\r\n  __isSuspense: true,\r\n  process(\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n    // platform-specific impl passed from renderer\r\n    rendererInternals: RendererInternals\r\n  ) {\r\n    if (n1 == null) {\r\n      mountSuspense(\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized,\r\n        rendererInternals\r\n      )\r\n    } else {\r\n      patchSuspense(\r\n        n1,\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized,\r\n        rendererInternals\r\n      )\r\n    }\r\n  },\r\n  hydrate: hydrateSuspense,\r\n  create: createSuspenseBoundary,\r\n  normalize: normalizeSuspenseChildren\r\n}\r\n\r\n// Force-casted public typing for h and TSX props inference\r\nexport const Suspense = (__FEATURE_SUSPENSE__ ? SuspenseImpl : null) as any as {\r\n  __isSuspense: true\r\n  new (): { $props: VNodeProps & SuspenseProps }\r\n}\r\n\r\nfunction triggerEvent(\r\n  vnode: VNode,\r\n  name: 'onResolve' | 'onPending' | 'onFallback'\r\n) {\r\n  const eventListener = vnode.props && vnode.props[name]\r\n  if (isFunction(eventListener)) {\r\n    eventListener()\r\n  }\r\n}\r\n\r\nfunction mountSuspense(\r\n  vnode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals\r\n) {\r\n  const {\r\n    p: patch,\r\n    o: { createElement }\r\n  } = rendererInternals\r\n  const hiddenContainer = createElement('div')\r\n  const suspense = (vnode.suspense = createSuspenseBoundary(\r\n    vnode,\r\n    parentSuspense,\r\n    parentComponent,\r\n    container,\r\n    hiddenContainer,\r\n    anchor,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized,\r\n    rendererInternals\r\n  ))\r\n\r\n  // start mounting the content subtree in an off-dom container\r\n  patch(\r\n    null,\r\n    (suspense.pendingBranch = vnode.ssContent!),\r\n    hiddenContainer,\r\n    null,\r\n    parentComponent,\r\n    suspense,\r\n    isSVG,\r\n    slotScopeIds\r\n  )\r\n  // now check if we have encountered any async deps\r\n  if (suspense.deps > 0) {\r\n    // has async\r\n    // invoke @fallback event\r\n    triggerEvent(vnode, 'onPending')\r\n    triggerEvent(vnode, 'onFallback')\r\n\r\n    // mount the fallback tree\r\n    patch(\r\n      null,\r\n      vnode.ssFallback!,\r\n      container,\r\n      anchor,\r\n      parentComponent,\r\n      null, // fallback tree will not have suspense context\r\n      isSVG,\r\n      slotScopeIds\r\n    )\r\n    setActiveBranch(suspense, vnode.ssFallback!)\r\n  } else {\r\n    // Suspense has no async deps. Just resolve.\r\n    suspense.resolve()\r\n  }\r\n}\r\n\r\nfunction patchSuspense(\r\n  n1: VNode,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  { p: patch, um: unmount, o: { createElement } }: RendererInternals\r\n) {\r\n  const suspense = (n2.suspense = n1.suspense)!\r\n  suspense.vnode = n2\r\n  n2.el = n1.el\r\n  const newBranch = n2.ssContent!\r\n  const newFallback = n2.ssFallback!\r\n\r\n  const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense\r\n  if (pendingBranch) {\r\n    suspense.pendingBranch = newBranch\r\n    if (isSameVNodeType(newBranch, pendingBranch)) {\r\n      // same root type but content may have changed.\r\n      patch(\r\n        pendingBranch,\r\n        newBranch,\r\n        suspense.hiddenContainer,\r\n        null,\r\n        parentComponent,\r\n        suspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n      if (suspense.deps <= 0) {\r\n        suspense.resolve()\r\n      } else if (isInFallback) {\r\n        patch(\r\n          activeBranch,\r\n          newFallback,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          null, // fallback tree will not have suspense context\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        setActiveBranch(suspense, newFallback)\r\n      }\r\n    } else {\r\n      // toggled before pending tree is resolved\r\n      suspense.pendingId++\r\n      if (isHydrating) {\r\n        // if toggled before hydration is finished, the current DOM tree is\r\n        // no longer valid. set it as the active branch so it will be unmounted\r\n        // when resolved\r\n        suspense.isHydrating = false\r\n        suspense.activeBranch = pendingBranch\r\n      } else {\r\n        unmount(pendingBranch, parentComponent, suspense)\r\n      }\r\n      // increment pending ID. this is used to invalidate async callbacks\r\n      // reset suspense state\r\n      suspense.deps = 0\r\n      // discard effects from pending branch\r\n      suspense.effects.length = 0\r\n      // discard previous container\r\n      suspense.hiddenContainer = createElement('div')\r\n\r\n      if (isInFallback) {\r\n        // already in fallback state\r\n        patch(\r\n          null,\r\n          newBranch,\r\n          suspense.hiddenContainer,\r\n          null,\r\n          parentComponent,\r\n          suspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        if (suspense.deps <= 0) {\r\n          suspense.resolve()\r\n        } else {\r\n          patch(\r\n            activeBranch,\r\n            newFallback,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            null, // fallback tree will not have suspense context\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n          setActiveBranch(suspense, newFallback)\r\n        }\r\n      } else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n        // toggled \"back\" to current active branch\r\n        patch(\r\n          activeBranch,\r\n          newBranch,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          suspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        // force resolve\r\n        suspense.resolve(true)\r\n      } else {\r\n        // switched to a 3rd branch\r\n        patch(\r\n          null,\r\n          newBranch,\r\n          suspense.hiddenContainer,\r\n          null,\r\n          parentComponent,\r\n          suspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        if (suspense.deps <= 0) {\r\n          suspense.resolve()\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n      // root did not change, just normal patch\r\n      patch(\r\n        activeBranch,\r\n        newBranch,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        suspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n      setActiveBranch(suspense, newBranch)\r\n    } else {\r\n      // root node toggled\r\n      // invoke @pending event\r\n      triggerEvent(n2, 'onPending')\r\n      // mount pending branch in off-dom container\r\n      suspense.pendingBranch = newBranch\r\n      suspense.pendingId++\r\n      patch(\r\n        null,\r\n        newBranch,\r\n        suspense.hiddenContainer,\r\n        null,\r\n        parentComponent,\r\n        suspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n      if (suspense.deps <= 0) {\r\n        // incoming branch has no async deps, resolve now.\r\n        suspense.resolve()\r\n      } else {\r\n        const { timeout, pendingId } = suspense\r\n        if (timeout > 0) {\r\n          setTimeout(() => {\r\n            if (suspense.pendingId === pendingId) {\r\n              suspense.fallback(newFallback)\r\n            }\r\n          }, timeout)\r\n        } else if (timeout === 0) {\r\n          suspense.fallback(newFallback)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport interface SuspenseBoundary {\r\n  vnode: VNode<RendererNode, RendererElement, SuspenseProps>\r\n  parent: SuspenseBoundary | null\r\n  parentComponent: ComponentInternalInstance | null\r\n  isSVG: boolean\r\n  container: RendererElement\r\n  hiddenContainer: RendererElement\r\n  anchor: RendererNode | null\r\n  activeBranch: VNode | null\r\n  pendingBranch: VNode | null\r\n  deps: number\r\n  pendingId: number\r\n  timeout: number\r\n  isInFallback: boolean\r\n  isHydrating: boolean\r\n  isUnmounted: boolean\r\n  effects: Function[]\r\n  resolve(force?: boolean): void\r\n  fallback(fallbackVNode: VNode): void\r\n  move(\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    type: MoveType\r\n  ): void\r\n  next(): RendererNode | null\r\n  registerDep(\r\n    instance: ComponentInternalInstance,\r\n    setupRenderEffect: SetupRenderEffectFn\r\n  ): void\r\n  unmount(parentSuspense: SuspenseBoundary | null, doRemove?: boolean): void\r\n}\r\n\r\nlet hasWarned = false\r\n\r\nfunction createSuspenseBoundary(\r\n  vnode: VNode,\r\n  parent: SuspenseBoundary | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  container: RendererElement,\r\n  hiddenContainer: RendererElement,\r\n  anchor: RendererNode | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals,\r\n  isHydrating = false\r\n): SuspenseBoundary {\r\n  /* istanbul ignore if */\r\n  if (__DEV__ && !__TEST__ && !hasWarned) {\r\n    hasWarned = true\r\n    // @ts-ignore `console.info` cannot be null error\r\n    console[console.info ? 'info' : 'log'](\r\n      `<Suspense> is an experimental feature and its API will likely change.`\r\n    )\r\n  }\r\n\r\n  const {\r\n    p: patch,\r\n    m: move,\r\n    um: unmount,\r\n    n: next,\r\n    o: { parentNode, remove }\r\n  } = rendererInternals\r\n\r\n  const timeout = toNumber(vnode.props && vnode.props.timeout)\r\n  const suspense: SuspenseBoundary = {\r\n    vnode,\r\n    parent,\r\n    parentComponent,\r\n    isSVG,\r\n    container,\r\n    hiddenContainer,\r\n    anchor,\r\n    deps: 0,\r\n    pendingId: 0,\r\n    timeout: typeof timeout === 'number' ? timeout : -1,\r\n    activeBranch: null,\r\n    pendingBranch: null,\r\n    isInFallback: true,\r\n    isHydrating,\r\n    isUnmounted: false,\r\n    effects: [],\r\n\r\n    resolve(resume = false) {\r\n      if (__DEV__) {\r\n        if (!resume && !suspense.pendingBranch) {\r\n          throw new Error(\r\n            `suspense.resolve() is called without a pending branch.`\r\n          )\r\n        }\r\n        if (suspense.isUnmounted) {\r\n          throw new Error(\r\n            `suspense.resolve() is called on an already unmounted suspense boundary.`\r\n          )\r\n        }\r\n      }\r\n      const {\r\n        vnode,\r\n        activeBranch,\r\n        pendingBranch,\r\n        pendingId,\r\n        effects,\r\n        parentComponent,\r\n        container\r\n      } = suspense\r\n\r\n      if (suspense.isHydrating) {\r\n        suspense.isHydrating = false\r\n      } else if (!resume) {\r\n        const delayEnter =\r\n          activeBranch &&\r\n          pendingBranch!.transition &&\r\n          pendingBranch!.transition.mode === 'out-in'\r\n        if (delayEnter) {\r\n          activeBranch!.transition!.afterLeave = () => {\r\n            if (pendingId === suspense.pendingId) {\r\n              move(pendingBranch!, container, anchor, MoveType.ENTER)\r\n            }\r\n          }\r\n        }\r\n        // this is initial anchor on mount\r\n        let { anchor } = suspense\r\n        // unmount current active tree\r\n        if (activeBranch) {\r\n          // if the fallback tree was mounted, it may have been moved\r\n          // as part of a parent suspense. get the latest anchor for insertion\r\n          anchor = next(activeBranch)\r\n          unmount(activeBranch, parentComponent, suspense, true)\r\n        }\r\n        if (!delayEnter) {\r\n          // move content from off-dom container to actual container\r\n          move(pendingBranch!, container, anchor, MoveType.ENTER)\r\n        }\r\n      }\r\n\r\n      setActiveBranch(suspense, pendingBranch!)\r\n      suspense.pendingBranch = null\r\n      suspense.isInFallback = false\r\n\r\n      // flush buffered effects\r\n      // check if there is a pending parent suspense\r\n      let parent = suspense.parent\r\n      let hasUnresolvedAncestor = false\r\n      while (parent) {\r\n        if (parent.pendingBranch) {\r\n          // found a pending parent suspense, merge buffered post jobs\r\n          // into that parent\r\n          parent.effects.push(...effects)\r\n          hasUnresolvedAncestor = true\r\n          break\r\n        }\r\n        parent = parent.parent\r\n      }\r\n      // no pending parent suspense, flush all jobs\r\n      if (!hasUnresolvedAncestor) {\r\n        queuePostFlushCb(effects)\r\n      }\r\n      suspense.effects = []\r\n\r\n      // invoke @resolve event\r\n      triggerEvent(vnode, 'onResolve')\r\n    },\r\n\r\n    fallback(fallbackVNode) {\r\n      if (!suspense.pendingBranch) {\r\n        return\r\n      }\r\n\r\n      const { vnode, activeBranch, parentComponent, container, isSVG } =\r\n        suspense\r\n\r\n      // invoke @fallback event\r\n      triggerEvent(vnode, 'onFallback')\r\n\r\n      const anchor = next(activeBranch!)\r\n      const mountFallback = () => {\r\n        if (!suspense.isInFallback) {\r\n          return\r\n        }\r\n        // mount the fallback tree\r\n        patch(\r\n          null,\r\n          fallbackVNode,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          null, // fallback tree will not have suspense context\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        setActiveBranch(suspense, fallbackVNode)\r\n      }\r\n\r\n      const delayEnter =\r\n        fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in'\r\n      if (delayEnter) {\r\n        activeBranch!.transition!.afterLeave = mountFallback\r\n      }\r\n      suspense.isInFallback = true\r\n\r\n      // unmount current active branch\r\n      unmount(\r\n        activeBranch!,\r\n        parentComponent,\r\n        null, // no suspense so unmount hooks fire now\r\n        true // shouldRemove\r\n      )\r\n\r\n      if (!delayEnter) {\r\n        mountFallback()\r\n      }\r\n    },\r\n\r\n    move(container, anchor, type) {\r\n      suspense.activeBranch &&\r\n        move(suspense.activeBranch, container, anchor, type)\r\n      suspense.container = container\r\n    },\r\n\r\n    next() {\r\n      return suspense.activeBranch && next(suspense.activeBranch)\r\n    },\r\n\r\n    registerDep(instance, setupRenderEffect) {\r\n      const isInPendingSuspense = !!suspense.pendingBranch\r\n      if (isInPendingSuspense) {\r\n        suspense.deps++\r\n      }\r\n      const hydratedEl = instance.vnode.el\r\n      instance\r\n        .asyncDep!.catch(err => {\r\n          handleError(err, instance, ErrorCodes.SETUP_FUNCTION)\r\n        })\r\n        .then(asyncSetupResult => {\r\n          // retry when the setup() promise resolves.\r\n          // component may have been unmounted before resolve.\r\n          if (\r\n            instance.isUnmounted ||\r\n            suspense.isUnmounted ||\r\n            suspense.pendingId !== instance.suspenseId\r\n          ) {\r\n            return\r\n          }\r\n          // retry from this component\r\n          instance.asyncResolved = true\r\n          const { vnode } = instance\r\n          if (__DEV__) {\r\n            pushWarningContext(vnode)\r\n          }\r\n          handleSetupResult(instance, asyncSetupResult, false)\r\n          if (hydratedEl) {\r\n            // vnode may have been replaced if an update happened before the\r\n            // async dep is resolved.\r\n            vnode.el = hydratedEl\r\n          }\r\n          const placeholder = !hydratedEl && instance.subTree.el\r\n          setupRenderEffect(\r\n            instance,\r\n            vnode,\r\n            // component may have been moved before resolve.\r\n            // if this is not a hydration, instance.subTree will be the comment\r\n            // placeholder.\r\n            parentNode(hydratedEl || instance.subTree.el!)!,\r\n            // anchor will not be used if this is hydration, so only need to\r\n            // consider the comment placeholder case.\r\n            hydratedEl ? null : next(instance.subTree),\r\n            suspense,\r\n            isSVG,\r\n            optimized\r\n          )\r\n          if (placeholder) {\r\n            remove(placeholder)\r\n          }\r\n          updateHOCHostEl(instance, vnode.el)\r\n          if (__DEV__) {\r\n            popWarningContext()\r\n          }\r\n          // only decrease deps count if suspense is not already resolved\r\n          if (isInPendingSuspense && --suspense.deps === 0) {\r\n            suspense.resolve()\r\n          }\r\n        })\r\n    },\r\n\r\n    unmount(parentSuspense, doRemove) {\r\n      suspense.isUnmounted = true\r\n      if (suspense.activeBranch) {\r\n        unmount(\r\n          suspense.activeBranch,\r\n          parentComponent,\r\n          parentSuspense,\r\n          doRemove\r\n        )\r\n      }\r\n      if (suspense.pendingBranch) {\r\n        unmount(\r\n          suspense.pendingBranch,\r\n          parentComponent,\r\n          parentSuspense,\r\n          doRemove\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  return suspense\r\n}\r\n\r\nfunction hydrateSuspense(\r\n  node: Node,\r\n  vnode: VNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals,\r\n  hydrateNode: (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => Node | null\r\n): Node | null {\r\n  /* eslint-disable no-restricted-globals */\r\n  const suspense = (vnode.suspense = createSuspenseBoundary(\r\n    vnode,\r\n    parentSuspense,\r\n    parentComponent,\r\n    node.parentNode!,\r\n    document.createElement('div'),\r\n    null,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized,\r\n    rendererInternals,\r\n    true /* hydrating */\r\n  ))\r\n  // there are two possible scenarios for server-rendered suspense:\r\n  // - success: ssr content should be fully resolved\r\n  // - failure: ssr content should be the fallback branch.\r\n  // however, on the client we don't really know if it has failed or not\r\n  // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n  // need to construct a suspense boundary first\r\n  const result = hydrateNode(\r\n    node,\r\n    (suspense.pendingBranch = vnode.ssContent!),\r\n    parentComponent,\r\n    suspense,\r\n    slotScopeIds,\r\n    optimized\r\n  )\r\n  if (suspense.deps === 0) {\r\n    suspense.resolve()\r\n  }\r\n  return result\r\n  /* eslint-enable no-restricted-globals */\r\n}\r\n\r\nfunction normalizeSuspenseChildren(vnode: VNode) {\r\n  const { shapeFlag, children } = vnode\r\n  const isSlotChildren = shapeFlag & ShapeFlags.SLOTS_CHILDREN\r\n  vnode.ssContent = normalizeSuspenseSlot(\r\n    isSlotChildren ? (children as Slots).default : children\r\n  )\r\n  vnode.ssFallback = isSlotChildren\r\n    ? normalizeSuspenseSlot((children as Slots).fallback)\r\n    : createVNode(Comment)\r\n}\r\n\r\nfunction normalizeSuspenseSlot(s: any) {\r\n  let block: VNode[] | null | undefined\r\n  if (isFunction(s)) {\r\n    const trackBlock = isBlockTreeEnabled && s._c\r\n    if (trackBlock) {\r\n      // disableTracking: false\r\n      // allow block tracking for compiled slots\r\n      // (see ./componentRenderContext.ts)\r\n      s._d = false\r\n      openBlock()\r\n    }\r\n    s = s()\r\n    if (trackBlock) {\r\n      s._d = true\r\n      block = currentBlock\r\n      closeBlock()\r\n    }\r\n  }\r\n  if (isArray(s)) {\r\n    const singleChild = filterSingleRoot(s)\r\n    if (__DEV__ && !singleChild) {\r\n      warn(`<Suspense> slots expect a single root node.`)\r\n    }\r\n    s = singleChild\r\n  }\r\n  s = normalizeVNode(s)\r\n  if (block && !s.dynamicChildren) {\r\n    s.dynamicChildren = block.filter(c => c !== s)\r\n  }\r\n  return s\r\n}\r\n\r\nexport function queueEffectWithSuspense(\r\n  fn: Function | Function[],\r\n  suspense: SuspenseBoundary | null\r\n): void {\r\n  if (suspense && suspense.pendingBranch) {\r\n    if (isArray(fn)) {\r\n      suspense.effects.push(...fn)\r\n    } else {\r\n      suspense.effects.push(fn)\r\n    }\r\n  } else {\r\n    queuePostFlushCb(fn)\r\n  }\r\n}\r\n\r\nfunction setActiveBranch(suspense: SuspenseBoundary, branch: VNode) {\r\n  suspense.activeBranch = branch\r\n  const { vnode, parentComponent } = suspense\r\n  const el = (vnode.el = branch.el)\r\n  // in case suspense is the root node of a component,\r\n  // recursively update the HOC el\r\n  if (parentComponent && parentComponent.subTree === vnode) {\r\n    parentComponent.vnode.el = el\r\n    updateHOCHostEl(parentComponent, el)\r\n  }\r\n}\r\n","import { isFunction } from '@vue/shared'\r\nimport { currentInstance } from './component'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { warn } from './warning'\r\n\r\nexport interface InjectionKey<T> extends Symbol {}\r\n\r\nexport function provide<T>(key: InjectionKey<T> | string | number, value: T) {\r\n  if (!currentInstance) {\r\n    if (__DEV__) {\r\n      warn(`provide() can only be used inside setup().`)\r\n    }\r\n  } else {\r\n    let provides = currentInstance.provides\r\n    // by default an instance inherits its parent's provides object\r\n    // but when it needs to provide values of its own, it creates its\r\n    // own provides object using parent provides object as prototype.\r\n    // this way in `inject` we can simply look up injections from direct\r\n    // parent and let the prototype chain do the work.\r\n    const parentProvides =\r\n      currentInstance.parent && currentInstance.parent.provides\r\n    if (parentProvides === provides) {\r\n      provides = currentInstance.provides = Object.create(parentProvides)\r\n    }\r\n    // TS doesn't allow symbol as index type\r\n    provides[key as string] = value\r\n  }\r\n}\r\n\r\nexport function inject<T>(key: InjectionKey<T> | string): T | undefined\r\nexport function inject<T>(\r\n  key: InjectionKey<T> | string,\r\n  defaultValue: T,\r\n  treatDefaultAsFactory?: false\r\n): T\r\nexport function inject<T>(\r\n  key: InjectionKey<T> | string,\r\n  defaultValue: T | (() => T),\r\n  treatDefaultAsFactory: true\r\n): T\r\nexport function inject(\r\n  key: InjectionKey<any> | string,\r\n  defaultValue?: unknown,\r\n  treatDefaultAsFactory = false\r\n) {\r\n  // fallback to `currentRenderingInstance` so that this can be called in\r\n  // a functional component\r\n  const instance = currentInstance || currentRenderingInstance\r\n  if (instance) {\r\n    // #2400\r\n    // to support `app.use` plugins,\r\n    // fallback to appContext's `provides` if the instance is at root\r\n    const provides =\r\n      instance.parent == null\r\n        ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n        : instance.parent.provides\r\n\r\n    if (provides && (key as string | symbol) in provides) {\r\n      // TS doesn't allow symbol as index type\r\n      return provides[key as string]\r\n    } else if (arguments.length > 1) {\r\n      return treatDefaultAsFactory && isFunction(defaultValue)\r\n        ? defaultValue.call(instance.proxy)\r\n        : defaultValue\r\n    } else if (__DEV__) {\r\n      warn(`injection \"${String(key)}\" not found.`)\r\n    }\r\n  } else if (__DEV__) {\r\n    warn(`inject() can only be used inside setup() or functional components.`)\r\n  }\r\n}\r\n","import {\r\n  isRef,\r\n  isShallow,\r\n  Ref,\r\n  ComputedRef,\r\n  ReactiveEffect,\r\n  isReactive,\r\n  ReactiveFlags,\r\n  EffectScheduler,\r\n  DebuggerOptions\r\n} from '@vue/reactivity'\r\nimport { SchedulerJob, queuePreFlushCb } from './scheduler'\r\nimport {\r\n  EMPTY_OBJ,\r\n  isObject,\r\n  isArray,\r\n  isFunction,\r\n  isString,\r\n  hasChanged,\r\n  NOOP,\r\n  remove,\r\n  isMap,\r\n  isSet,\r\n  isPlainObject\r\n} from '@vue/shared'\r\nimport {\r\n  currentInstance,\r\n  ComponentInternalInstance,\r\n  isInSSRComponentSetup,\r\n  setCurrentInstance,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport {\r\n  ErrorCodes,\r\n  callWithErrorHandling,\r\n  callWithAsyncErrorHandling\r\n} from './errorHandling'\r\nimport { queuePostRenderEffect } from './renderer'\r\nimport { warn } from './warning'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport { checkCompatEnabled, isCompatEnabled } from './compat/compatConfig'\r\nimport { ObjectWatchOptionItem } from './componentOptions'\r\n\r\nexport type WatchEffect = (onCleanup: OnCleanup) => void\r\n\r\nexport type WatchSource<T = any> = Ref<T> | ComputedRef<T> | (() => T)\r\n\r\nexport type WatchCallback<V = any, OV = any> = (\r\n  value: V,\r\n  oldValue: OV,\r\n  onCleanup: OnCleanup\r\n) => any\r\n\r\ntype MapSources<T, Immediate> = {\r\n  [K in keyof T]: T[K] extends WatchSource<infer V>\r\n    ? Immediate extends true\r\n      ? V | undefined\r\n      : V\r\n    : T[K] extends object\r\n    ? Immediate extends true\r\n      ? T[K] | undefined\r\n      : T[K]\r\n    : never\r\n}\r\n\r\ntype OnCleanup = (cleanupFn: () => void) => void\r\n\r\nexport interface WatchOptionsBase extends DebuggerOptions {\r\n  flush?: 'pre' | 'post' | 'sync'\r\n}\r\n\r\nexport interface WatchOptions<Immediate = boolean> extends WatchOptionsBase {\r\n  immediate?: Immediate\r\n  deep?: boolean\r\n}\r\n\r\nexport type WatchStopHandle = () => void\r\n\r\n// Simple effect.\r\nexport function watchEffect(\r\n  effect: WatchEffect,\r\n  options?: WatchOptionsBase\r\n): WatchStopHandle {\r\n  return doWatch(effect, null, options)\r\n}\r\n\r\nexport function watchPostEffect(\r\n  effect: WatchEffect,\r\n  options?: DebuggerOptions\r\n) {\r\n  return doWatch(\r\n    effect,\r\n    null,\r\n    (__DEV__\r\n      ? { ...options, flush: 'post' }\r\n      : { flush: 'post' }) as WatchOptionsBase\r\n  )\r\n}\r\n\r\nexport function watchSyncEffect(\r\n  effect: WatchEffect,\r\n  options?: DebuggerOptions\r\n) {\r\n  return doWatch(\r\n    effect,\r\n    null,\r\n    (__DEV__\r\n      ? { ...options, flush: 'sync' }\r\n      : { flush: 'sync' }) as WatchOptionsBase\r\n  )\r\n}\r\n\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {}\r\n\r\ntype MultiWatchSources = (WatchSource<unknown> | object)[]\r\n\r\n// overload: array of multiple sources + cb\r\nexport function watch<\r\n  T extends MultiWatchSources,\r\n  Immediate extends Readonly<boolean> = false\r\n>(\r\n  sources: [...T],\r\n  cb: WatchCallback<MapSources<T, false>, MapSources<T, Immediate>>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// overload: multiple sources w/ `as const`\r\n// watch([foo, bar] as const, () => {})\r\n// somehow [...T] breaks when the type is readonly\r\nexport function watch<\r\n  T extends Readonly<MultiWatchSources>,\r\n  Immediate extends Readonly<boolean> = false\r\n>(\r\n  source: T,\r\n  cb: WatchCallback<MapSources<T, false>, MapSources<T, Immediate>>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// overload: single source + cb\r\nexport function watch<T, Immediate extends Readonly<boolean> = false>(\r\n  source: WatchSource<T>,\r\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// overload: watching reactive object w/ cb\r\nexport function watch<\r\n  T extends object,\r\n  Immediate extends Readonly<boolean> = false\r\n>(\r\n  source: T,\r\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// implementation\r\nexport function watch<T = any, Immediate extends Readonly<boolean> = false>(\r\n  source: T | WatchSource<T>,\r\n  cb: any,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle {\r\n  if (__DEV__ && !isFunction(cb)) {\r\n    warn(\r\n      `\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n        `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n        `supports \\`watch(source, cb, options?) signature.`\r\n    )\r\n  }\r\n  return doWatch(source as any, cb, options)\r\n}\r\n\r\nfunction doWatch(\r\n  source: WatchSource | WatchSource[] | WatchEffect | object,\r\n  cb: WatchCallback | null,\r\n  { immediate, deep, flush, onTrack, onTrigger }: WatchOptions = EMPTY_OBJ\r\n): WatchStopHandle {\r\n  if (__DEV__ && !cb) {\r\n    if (immediate !== undefined) {\r\n      warn(\r\n        `watch() \"immediate\" option is only respected when using the ` +\r\n          `watch(source, callback, options?) signature.`\r\n      )\r\n    }\r\n    if (deep !== undefined) {\r\n      warn(\r\n        `watch() \"deep\" option is only respected when using the ` +\r\n          `watch(source, callback, options?) signature.`\r\n      )\r\n    }\r\n  }\r\n\r\n  const warnInvalidSource = (s: unknown) => {\r\n    warn(\r\n      `Invalid watch source: `,\r\n      s,\r\n      `A watch source can only be a getter/effect function, a ref, ` +\r\n        `a reactive object, or an array of these types.`\r\n    )\r\n  }\r\n\r\n  const instance = currentInstance\r\n  let getter: () => any\r\n  let forceTrigger = false\r\n  let isMultiSource = false\r\n\r\n  if (isRef(source)) {\r\n    getter = () => source.value\r\n    forceTrigger = isShallow(source)\r\n  } else if (isReactive(source)) {\r\n    getter = () => source\r\n    deep = true\r\n  } else if (isArray(source)) {\r\n    isMultiSource = true\r\n    forceTrigger = source.some(s => isReactive(s) || isShallow(s))\r\n    getter = () =>\r\n      source.map(s => {\r\n        if (isRef(s)) {\r\n          return s.value\r\n        } else if (isReactive(s)) {\r\n          return traverse(s)\r\n        } else if (isFunction(s)) {\r\n          return callWithErrorHandling(s, instance, ErrorCodes.WATCH_GETTER)\r\n        } else {\r\n          __DEV__ && warnInvalidSource(s)\r\n        }\r\n      })\r\n  } else if (isFunction(source)) {\r\n    if (cb) {\r\n      // getter with cb\r\n      getter = () =>\r\n        callWithErrorHandling(source, instance, ErrorCodes.WATCH_GETTER)\r\n    } else {\r\n      // no cb -> simple effect\r\n      getter = () => {\r\n        if (instance && instance.isUnmounted) {\r\n          return\r\n        }\r\n        if (cleanup) {\r\n          cleanup()\r\n        }\r\n        return callWithAsyncErrorHandling(\r\n          source,\r\n          instance,\r\n          ErrorCodes.WATCH_CALLBACK,\r\n          [onCleanup]\r\n        )\r\n      }\r\n    }\r\n  } else {\r\n    getter = NOOP\r\n    __DEV__ && warnInvalidSource(source)\r\n  }\r\n\r\n  // 2.x array mutation watch compat\r\n  if (__COMPAT__ && cb && !deep) {\r\n    const baseGetter = getter\r\n    getter = () => {\r\n      const val = baseGetter()\r\n      if (\r\n        isArray(val) &&\r\n        checkCompatEnabled(DeprecationTypes.WATCH_ARRAY, instance)\r\n      ) {\r\n        traverse(val)\r\n      }\r\n      return val\r\n    }\r\n  }\r\n\r\n  if (cb && deep) {\r\n    const baseGetter = getter\r\n    getter = () => traverse(baseGetter())\r\n  }\r\n\r\n  let cleanup: () => void\r\n  let onCleanup: OnCleanup = (fn: () => void) => {\r\n    cleanup = effect.onStop = () => {\r\n      callWithErrorHandling(fn, instance, ErrorCodes.WATCH_CLEANUP)\r\n    }\r\n  }\r\n\r\n  // in SSR there is no need to setup an actual effect, and it should be noop\r\n  // unless it's eager\r\n  if (__SSR__ && isInSSRComponentSetup) {\r\n    // we will also not call the invalidate callback (+ runner is not set up)\r\n    onCleanup = NOOP\r\n    if (!cb) {\r\n      getter()\r\n    } else if (immediate) {\r\n      callWithAsyncErrorHandling(cb, instance, ErrorCodes.WATCH_CALLBACK, [\r\n        getter(),\r\n        isMultiSource ? [] : undefined,\r\n        onCleanup\r\n      ])\r\n    }\r\n    return NOOP\r\n  }\r\n\r\n  let oldValue = isMultiSource ? [] : INITIAL_WATCHER_VALUE\r\n  const job: SchedulerJob = () => {\r\n    if (!effect.active) {\r\n      return\r\n    }\r\n    if (cb) {\r\n      // watch(source, cb)\r\n      const newValue = effect.run()\r\n      if (\r\n        deep ||\r\n        forceTrigger ||\r\n        (isMultiSource\r\n          ? (newValue as any[]).some((v, i) =>\r\n              hasChanged(v, (oldValue as any[])[i])\r\n            )\r\n          : hasChanged(newValue, oldValue)) ||\r\n        (__COMPAT__ &&\r\n          isArray(newValue) &&\r\n          isCompatEnabled(DeprecationTypes.WATCH_ARRAY, instance))\r\n      ) {\r\n        // cleanup before running cb again\r\n        if (cleanup) {\r\n          cleanup()\r\n        }\r\n        callWithAsyncErrorHandling(cb, instance, ErrorCodes.WATCH_CALLBACK, [\r\n          newValue,\r\n          // pass undefined as the old value when it's changed for the first time\r\n          oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n          onCleanup\r\n        ])\r\n        oldValue = newValue\r\n      }\r\n    } else {\r\n      // watchEffect\r\n      effect.run()\r\n    }\r\n  }\r\n\r\n  // important: mark the job as a watcher callback so that scheduler knows\r\n  // it is allowed to self-trigger (#1727)\r\n  job.allowRecurse = !!cb\r\n\r\n  let scheduler: EffectScheduler\r\n  if (flush === 'sync') {\r\n    scheduler = job as any // the scheduler function gets called directly\r\n  } else if (flush === 'post') {\r\n    scheduler = () => queuePostRenderEffect(job, instance && instance.suspense)\r\n  } else {\r\n    // default: 'pre'\r\n    scheduler = () => queuePreFlushCb(job)\r\n  }\r\n\r\n  const effect = new ReactiveEffect(getter, scheduler)\r\n\r\n  if (__DEV__) {\r\n    effect.onTrack = onTrack\r\n    effect.onTrigger = onTrigger\r\n  }\r\n\r\n  // initial run\r\n  if (cb) {\r\n    if (immediate) {\r\n      job()\r\n    } else {\r\n      oldValue = effect.run()\r\n    }\r\n  } else if (flush === 'post') {\r\n    queuePostRenderEffect(\r\n      effect.run.bind(effect),\r\n      instance && instance.suspense\r\n    )\r\n  } else {\r\n    effect.run()\r\n  }\r\n\r\n  return () => {\r\n    effect.stop()\r\n    if (instance && instance.scope) {\r\n      remove(instance.scope.effects!, effect)\r\n    }\r\n  }\r\n}\r\n\r\n// this.$watch\r\nexport function instanceWatch(\r\n  this: ComponentInternalInstance,\r\n  source: string | Function,\r\n  value: WatchCallback | ObjectWatchOptionItem,\r\n  options?: WatchOptions\r\n): WatchStopHandle {\r\n  const publicThis = this.proxy as any\r\n  const getter = isString(source)\r\n    ? source.includes('.')\r\n      ? createPathGetter(publicThis, source)\r\n      : () => publicThis[source]\r\n    : source.bind(publicThis, publicThis)\r\n  let cb\r\n  if (isFunction(value)) {\r\n    cb = value\r\n  } else {\r\n    cb = value.handler as Function\r\n    options = value\r\n  }\r\n  const cur = currentInstance\r\n  setCurrentInstance(this)\r\n  const res = doWatch(getter, cb.bind(publicThis), options)\r\n  if (cur) {\r\n    setCurrentInstance(cur)\r\n  } else {\r\n    unsetCurrentInstance()\r\n  }\r\n  return res\r\n}\r\n\r\nexport function createPathGetter(ctx: any, path: string) {\r\n  const segments = path.split('.')\r\n  return () => {\r\n    let cur = ctx\r\n    for (let i = 0; i < segments.length && cur; i++) {\r\n      cur = cur[segments[i]]\r\n    }\r\n    return cur\r\n  }\r\n}\r\n\r\nexport function traverse(value: unknown, seen?: Set<unknown>) {\r\n  if (!isObject(value) || (value as any)[ReactiveFlags.SKIP]) {\r\n    return value\r\n  }\r\n  seen = seen || new Set()\r\n  if (seen.has(value)) {\r\n    return value\r\n  }\r\n  seen.add(value)\r\n  if (isRef(value)) {\r\n    traverse(value.value, seen)\r\n  } else if (isArray(value)) {\r\n    for (let i = 0; i < value.length; i++) {\r\n      traverse(value[i], seen)\r\n    }\r\n  } else if (isSet(value) || isMap(value)) {\r\n    value.forEach((v: any) => {\r\n      traverse(v, seen)\r\n    })\r\n  } else if (isPlainObject(value)) {\r\n    for (const key in value) {\r\n      traverse((value as any)[key], seen)\r\n    }\r\n  }\r\n  return value\r\n}\r\n","import {\r\n  getCurrentInstance,\r\n  SetupContext,\r\n  ComponentInternalInstance,\r\n  ComponentOptions\r\n} from '../component'\r\nimport {\r\n  cloneVNode,\r\n  Comment,\r\n  isSameVNodeType,\r\n  VNode,\r\n  VNodeArrayChildren,\r\n  Fragment\r\n} from '../vnode'\r\nimport { warn } from '../warning'\r\nimport { isKeepAlive } from './KeepAlive'\r\nimport { toRaw } from '@vue/reactivity'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from '../errorHandling'\r\nimport { ShapeFlags, PatchFlags, isArray } from '@vue/shared'\r\nimport { onBeforeUnmount, onMounted } from '../apiLifecycle'\r\nimport { RendererElement } from '../renderer'\r\n\r\ntype Hook<T = () => void> = T | T[]\r\n\r\nexport interface BaseTransitionProps<HostElement = RendererElement> {\r\n  mode?: 'in-out' | 'out-in' | 'default'\r\n  appear?: boolean\r\n\r\n  // If true, indicates this is a transition that doesn't actually insert/remove\r\n  // the element, but toggles the show / hidden status instead.\r\n  // The transition hooks are injected, but will be skipped by the renderer.\r\n  // Instead, a custom directive can control the transition by calling the\r\n  // injected hooks (e.g. v-show).\r\n  persisted?: boolean\r\n\r\n  // Hooks. Using camel case for easier usage in render functions & JSX.\r\n  // In templates these can be written as @before-enter=\"xxx\" as prop names\r\n  // are camelized.\r\n  onBeforeEnter?: Hook<(el: HostElement) => void>\r\n  onEnter?: Hook<(el: HostElement, done: () => void) => void>\r\n  onAfterEnter?: Hook<(el: HostElement) => void>\r\n  onEnterCancelled?: Hook<(el: HostElement) => void>\r\n  // leave\r\n  onBeforeLeave?: Hook<(el: HostElement) => void>\r\n  onLeave?: Hook<(el: HostElement, done: () => void) => void>\r\n  onAfterLeave?: Hook<(el: HostElement) => void>\r\n  onLeaveCancelled?: Hook<(el: HostElement) => void> // only fired in persisted mode\r\n  // appear\r\n  onBeforeAppear?: Hook<(el: HostElement) => void>\r\n  onAppear?: Hook<(el: HostElement, done: () => void) => void>\r\n  onAfterAppear?: Hook<(el: HostElement) => void>\r\n  onAppearCancelled?: Hook<(el: HostElement) => void>\r\n}\r\n\r\nexport interface TransitionHooks<\r\n  HostElement extends RendererElement = RendererElement\r\n> {\r\n  mode: BaseTransitionProps['mode']\r\n  persisted: boolean\r\n  beforeEnter(el: HostElement): void\r\n  enter(el: HostElement): void\r\n  leave(el: HostElement, remove: () => void): void\r\n  clone(vnode: VNode): TransitionHooks<HostElement>\r\n  // optional\r\n  afterLeave?(): void\r\n  delayLeave?(\r\n    el: HostElement,\r\n    earlyRemove: () => void,\r\n    delayedLeave: () => void\r\n  ): void\r\n  delayedLeave?(): void\r\n}\r\n\r\nexport type TransitionHookCaller = <T extends any[] = [el: any]>(\r\n  hook: Hook<(...args: T) => void> | undefined,\r\n  args?: T\r\n) => void\r\n\r\nexport type PendingCallback = (cancelled?: boolean) => void\r\n\r\nexport interface TransitionState {\r\n  isMounted: boolean\r\n  isLeaving: boolean\r\n  isUnmounting: boolean\r\n  // Track pending leave callbacks for children of the same key.\r\n  // This is used to force remove leaving a child when a new copy is entering.\r\n  leavingVNodes: Map<any, Record<string, VNode>>\r\n}\r\n\r\nexport interface TransitionElement {\r\n  // in persisted mode (e.g. v-show), the same element is toggled, so the\r\n  // pending enter/leave callbacks may need to be cancelled if the state is toggled\r\n  // before it finishes.\r\n  _enterCb?: PendingCallback\r\n  _leaveCb?: PendingCallback\r\n}\r\n\r\nexport function useTransitionState(): TransitionState {\r\n  const state: TransitionState = {\r\n    isMounted: false,\r\n    isLeaving: false,\r\n    isUnmounting: false,\r\n    leavingVNodes: new Map()\r\n  }\r\n  onMounted(() => {\r\n    state.isMounted = true\r\n  })\r\n  onBeforeUnmount(() => {\r\n    state.isUnmounting = true\r\n  })\r\n  return state\r\n}\r\n\r\nconst TransitionHookValidator = [Function, Array]\r\n\r\nconst BaseTransitionImpl: ComponentOptions = {\r\n  name: `BaseTransition`,\r\n\r\n  props: {\r\n    mode: String,\r\n    appear: Boolean,\r\n    persisted: Boolean,\r\n    // enter\r\n    onBeforeEnter: TransitionHookValidator,\r\n    onEnter: TransitionHookValidator,\r\n    onAfterEnter: TransitionHookValidator,\r\n    onEnterCancelled: TransitionHookValidator,\r\n    // leave\r\n    onBeforeLeave: TransitionHookValidator,\r\n    onLeave: TransitionHookValidator,\r\n    onAfterLeave: TransitionHookValidator,\r\n    onLeaveCancelled: TransitionHookValidator,\r\n    // appear\r\n    onBeforeAppear: TransitionHookValidator,\r\n    onAppear: TransitionHookValidator,\r\n    onAfterAppear: TransitionHookValidator,\r\n    onAppearCancelled: TransitionHookValidator\r\n  },\r\n\r\n  setup(props: BaseTransitionProps, { slots }: SetupContext) {\r\n    const instance = getCurrentInstance()!\r\n    const state = useTransitionState()\r\n\r\n    let prevTransitionKey: any\r\n\r\n    return () => {\r\n      const children =\r\n        slots.default && getTransitionRawChildren(slots.default(), true)\r\n      if (!children || !children.length) {\r\n        return\r\n      }\r\n\r\n      let child: VNode = children[0]\r\n      if (children.length > 1) {\r\n        let hasFound = false\r\n        // locate first non-comment child\r\n        for (const c of children) {\r\n          if (c.type !== Comment) {\r\n            if (__DEV__ && hasFound) {\r\n              // warn more than one non-comment child\r\n              warn(\r\n                '<transition> can only be used on a single element or component. ' +\r\n                  'Use <transition-group> for lists.'\r\n              )\r\n              break\r\n            }\r\n            child = c\r\n            hasFound = true\r\n            if (!__DEV__) break\r\n          }\r\n        }\r\n      }\r\n\r\n      // there's no need to track reactivity for these props so use the raw\r\n      // props for a bit better perf\r\n      const rawProps = toRaw(props)\r\n      const { mode } = rawProps\r\n      // check mode\r\n      if (\r\n        __DEV__ &&\r\n        mode &&\r\n        mode !== 'in-out' &&\r\n        mode !== 'out-in' &&\r\n        mode !== 'default'\r\n      ) {\r\n        warn(`invalid <transition> mode: ${mode}`)\r\n      }\r\n\r\n      if (state.isLeaving) {\r\n        return emptyPlaceholder(child)\r\n      }\r\n\r\n      // in the case of <transition><keep-alive/></transition>, we need to\r\n      // compare the type of the kept-alive children.\r\n      const innerChild = getKeepAliveChild(child)\r\n      if (!innerChild) {\r\n        return emptyPlaceholder(child)\r\n      }\r\n\r\n      const enterHooks = resolveTransitionHooks(\r\n        innerChild,\r\n        rawProps,\r\n        state,\r\n        instance\r\n      )\r\n      setTransitionHooks(innerChild, enterHooks)\r\n\r\n      const oldChild = instance.subTree\r\n      const oldInnerChild = oldChild && getKeepAliveChild(oldChild)\r\n\r\n      let transitionKeyChanged = false\r\n      const { getTransitionKey } = innerChild.type as any\r\n      if (getTransitionKey) {\r\n        const key = getTransitionKey()\r\n        if (prevTransitionKey === undefined) {\r\n          prevTransitionKey = key\r\n        } else if (key !== prevTransitionKey) {\r\n          prevTransitionKey = key\r\n          transitionKeyChanged = true\r\n        }\r\n      }\r\n\r\n      // handle mode\r\n      if (\r\n        oldInnerChild &&\r\n        oldInnerChild.type !== Comment &&\r\n        (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)\r\n      ) {\r\n        const leavingHooks = resolveTransitionHooks(\r\n          oldInnerChild,\r\n          rawProps,\r\n          state,\r\n          instance\r\n        )\r\n        // update old tree's hooks in case of dynamic transition\r\n        setTransitionHooks(oldInnerChild, leavingHooks)\r\n        // switching between different views\r\n        if (mode === 'out-in') {\r\n          state.isLeaving = true\r\n          // return placeholder node and queue update when leave finishes\r\n          leavingHooks.afterLeave = () => {\r\n            state.isLeaving = false\r\n            instance.update()\r\n          }\r\n          return emptyPlaceholder(child)\r\n        } else if (mode === 'in-out' && innerChild.type !== Comment) {\r\n          leavingHooks.delayLeave = (\r\n            el: TransitionElement,\r\n            earlyRemove,\r\n            delayedLeave\r\n          ) => {\r\n            const leavingVNodesCache = getLeavingNodesForType(\r\n              state,\r\n              oldInnerChild\r\n            )\r\n            leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild\r\n            // early removal callback\r\n            el._leaveCb = () => {\r\n              earlyRemove()\r\n              el._leaveCb = undefined\r\n              delete enterHooks.delayedLeave\r\n            }\r\n            enterHooks.delayedLeave = delayedLeave\r\n          }\r\n        }\r\n      }\r\n\r\n      return child\r\n    }\r\n  }\r\n}\r\n\r\nif (__COMPAT__) {\r\n  BaseTransitionImpl.__isBuiltIn = true\r\n}\r\n\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nexport const BaseTransition = BaseTransitionImpl as any as {\r\n  new (): {\r\n    $props: BaseTransitionProps<any>\r\n  }\r\n}\r\n\r\nfunction getLeavingNodesForType(\r\n  state: TransitionState,\r\n  vnode: VNode\r\n): Record<string, VNode> {\r\n  const { leavingVNodes } = state\r\n  let leavingVNodesCache = leavingVNodes.get(vnode.type)!\r\n  if (!leavingVNodesCache) {\r\n    leavingVNodesCache = Object.create(null)\r\n    leavingVNodes.set(vnode.type, leavingVNodesCache)\r\n  }\r\n  return leavingVNodesCache\r\n}\r\n\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nexport function resolveTransitionHooks(\r\n  vnode: VNode,\r\n  props: BaseTransitionProps<any>,\r\n  state: TransitionState,\r\n  instance: ComponentInternalInstance\r\n): TransitionHooks {\r\n  const {\r\n    appear,\r\n    mode,\r\n    persisted = false,\r\n    onBeforeEnter,\r\n    onEnter,\r\n    onAfterEnter,\r\n    onEnterCancelled,\r\n    onBeforeLeave,\r\n    onLeave,\r\n    onAfterLeave,\r\n    onLeaveCancelled,\r\n    onBeforeAppear,\r\n    onAppear,\r\n    onAfterAppear,\r\n    onAppearCancelled\r\n  } = props\r\n  const key = String(vnode.key)\r\n  const leavingVNodesCache = getLeavingNodesForType(state, vnode)\r\n\r\n  const callHook: TransitionHookCaller = (hook, args) => {\r\n    hook &&\r\n      callWithAsyncErrorHandling(\r\n        hook,\r\n        instance,\r\n        ErrorCodes.TRANSITION_HOOK,\r\n        args\r\n      )\r\n  }\r\n\r\n  const callAsyncHook = (\r\n    hook: Hook<(el: any, done: () => void) => void>,\r\n    args: [TransitionElement, () => void]\r\n  ) => {\r\n    const done = args[1]\r\n    callHook(hook, args)\r\n    if (isArray(hook)) {\r\n      if (hook.every(hook => hook.length <= 1)) done()\r\n    } else if (hook.length <= 1) {\r\n      done()\r\n    }\r\n  }\r\n\r\n  const hooks: TransitionHooks<TransitionElement> = {\r\n    mode,\r\n    persisted,\r\n    beforeEnter(el) {\r\n      let hook = onBeforeEnter\r\n      if (!state.isMounted) {\r\n        if (appear) {\r\n          hook = onBeforeAppear || onBeforeEnter\r\n        } else {\r\n          return\r\n        }\r\n      }\r\n      // for same element (v-show)\r\n      if (el._leaveCb) {\r\n        el._leaveCb(true /* cancelled */)\r\n      }\r\n      // for toggled element with same key (v-if)\r\n      const leavingVNode = leavingVNodesCache[key]\r\n      if (\r\n        leavingVNode &&\r\n        isSameVNodeType(vnode, leavingVNode) &&\r\n        leavingVNode.el!._leaveCb\r\n      ) {\r\n        // force early removal (not cancelled)\r\n        leavingVNode.el!._leaveCb()\r\n      }\r\n      callHook(hook, [el])\r\n    },\r\n\r\n    enter(el) {\r\n      let hook = onEnter\r\n      let afterHook = onAfterEnter\r\n      let cancelHook = onEnterCancelled\r\n      if (!state.isMounted) {\r\n        if (appear) {\r\n          hook = onAppear || onEnter\r\n          afterHook = onAfterAppear || onAfterEnter\r\n          cancelHook = onAppearCancelled || onEnterCancelled\r\n        } else {\r\n          return\r\n        }\r\n      }\r\n      let called = false\r\n      const done = (el._enterCb = (cancelled?) => {\r\n        if (called) return\r\n        called = true\r\n        if (cancelled) {\r\n          callHook(cancelHook, [el])\r\n        } else {\r\n          callHook(afterHook, [el])\r\n        }\r\n        if (hooks.delayedLeave) {\r\n          hooks.delayedLeave()\r\n        }\r\n        el._enterCb = undefined\r\n      })\r\n      if (hook) {\r\n        callAsyncHook(hook, [el, done])\r\n      } else {\r\n        done()\r\n      }\r\n    },\r\n\r\n    leave(el, remove) {\r\n      const key = String(vnode.key)\r\n      if (el._enterCb) {\r\n        el._enterCb(true /* cancelled */)\r\n      }\r\n      if (state.isUnmounting) {\r\n        return remove()\r\n      }\r\n      callHook(onBeforeLeave, [el])\r\n      let called = false\r\n      const done = (el._leaveCb = (cancelled?) => {\r\n        if (called) return\r\n        called = true\r\n        remove()\r\n        if (cancelled) {\r\n          callHook(onLeaveCancelled, [el])\r\n        } else {\r\n          callHook(onAfterLeave, [el])\r\n        }\r\n        el._leaveCb = undefined\r\n        if (leavingVNodesCache[key] === vnode) {\r\n          delete leavingVNodesCache[key]\r\n        }\r\n      })\r\n      leavingVNodesCache[key] = vnode\r\n      if (onLeave) {\r\n        callAsyncHook(onLeave, [el, done])\r\n      } else {\r\n        done()\r\n      }\r\n    },\r\n\r\n    clone(vnode) {\r\n      return resolveTransitionHooks(vnode, props, state, instance)\r\n    }\r\n  }\r\n\r\n  return hooks\r\n}\r\n\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode: VNode): VNode | undefined {\r\n  if (isKeepAlive(vnode)) {\r\n    vnode = cloneVNode(vnode)\r\n    vnode.children = null\r\n    return vnode\r\n  }\r\n}\r\n\r\nfunction getKeepAliveChild(vnode: VNode): VNode | undefined {\r\n  return isKeepAlive(vnode)\r\n    ? vnode.children\r\n      ? ((vnode.children as VNodeArrayChildren)[0] as VNode)\r\n      : undefined\r\n    : vnode\r\n}\r\n\r\nexport function setTransitionHooks(vnode: VNode, hooks: TransitionHooks) {\r\n  if (vnode.shapeFlag & ShapeFlags.COMPONENT && vnode.component) {\r\n    setTransitionHooks(vnode.component.subTree, hooks)\r\n  } else if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n    vnode.ssContent!.transition = hooks.clone(vnode.ssContent!)\r\n    vnode.ssFallback!.transition = hooks.clone(vnode.ssFallback!)\r\n  } else {\r\n    vnode.transition = hooks\r\n  }\r\n}\r\n\r\nexport function getTransitionRawChildren(\r\n  children: VNode[],\r\n  keepComment: boolean = false,\r\n  parentKey?: VNode['key']\r\n): VNode[] {\r\n  let ret: VNode[] = []\r\n  let keyedFragmentCount = 0\r\n  for (let i = 0; i < children.length; i++) {\r\n    let child = children[i]\r\n    // #5360 inherit parent key in case of <template v-for>\r\n    const key =\r\n      parentKey == null\r\n        ? child.key\r\n        : String(parentKey) + String(child.key != null ? child.key : i)\r\n    // handle fragment children case, e.g. v-for\r\n    if (child.type === Fragment) {\r\n      if (child.patchFlag & PatchFlags.KEYED_FRAGMENT) keyedFragmentCount++\r\n      ret = ret.concat(\r\n        getTransitionRawChildren(child.children as VNode[], keepComment, key)\r\n      )\r\n    }\r\n    // comment placeholders should be skipped, e.g. v-if\r\n    else if (keepComment || child.type !== Comment) {\r\n      ret.push(key != null ? cloneVNode(child, { key }) : child)\r\n    }\r\n  }\r\n  // #1126 if a transition children list contains multiple sub fragments, these\r\n  // fragments will be merged into a flat children array. Since each v-for\r\n  // fragment may contain different static bindings inside, we need to de-op\r\n  // these children to force full diffs to ensure correct behavior.\r\n  if (keyedFragmentCount > 1) {\r\n    for (let i = 0; i < ret.length; i++) {\r\n      ret[i].patchFlag = PatchFlags.BAIL\r\n    }\r\n  }\r\n  return ret\r\n}\r\n","import {\r\n  ComputedOptions,\r\n  MethodOptions,\r\n  ComponentOptionsWithoutProps,\r\n  ComponentOptionsWithArrayProps,\r\n  ComponentOptionsWithObjectProps,\r\n  ComponentOptionsMixin,\r\n  RenderFunction,\r\n  ComponentOptionsBase\r\n} from './componentOptions'\r\nimport {\r\n  SetupContext,\r\n  AllowedComponentProps,\r\n  ComponentCustomProps\r\n} from './component'\r\nimport {\r\n  ExtractPropTypes,\r\n  ComponentPropsOptions,\r\n  ExtractDefaultPropTypes\r\n} from './componentProps'\r\nimport { EmitsOptions, EmitsToProps } from './componentEmits'\r\nimport { isFunction } from '@vue/shared'\r\nimport { VNodeProps } from './vnode'\r\nimport {\r\n  CreateComponentPublicInstance,\r\n  ComponentPublicInstanceConstructor\r\n} from './componentPublicInstance'\r\n\r\nexport type PublicProps = VNodeProps &\r\n  AllowedComponentProps &\r\n  ComponentCustomProps\r\n\r\nexport type DefineComponent<\r\n  PropsOrPropOptions = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions,\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  EE extends string = string,\r\n  PP = PublicProps,\r\n  Props = Readonly<\r\n    PropsOrPropOptions extends ComponentPropsOptions\r\n      ? ExtractPropTypes<PropsOrPropOptions>\r\n      : PropsOrPropOptions\r\n  > &\r\n    ({} extends E ? {} : EmitsToProps<E>),\r\n  Defaults = ExtractDefaultPropTypes<PropsOrPropOptions>\r\n> = ComponentPublicInstanceConstructor<\r\n  CreateComponentPublicInstance<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    PP & Props,\r\n    Defaults,\r\n    true\r\n  > &\r\n    Props\r\n> &\r\n  ComponentOptionsBase<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE,\r\n    Defaults\r\n  > &\r\n  PP\r\n\r\n// defineComponent is a utility that is primarily used for type inference\r\n// when declaring components. Type inference is provided in the component\r\n// options (provided as the argument). The returned value has artificial types\r\n// for TSX / manual render function / IDE support.\r\n\r\n// overload 1: direct setup function\r\n// (uses user defined props interface)\r\nexport function defineComponent<Props, RawBindings = object>(\r\n  setup: (\r\n    props: Readonly<Props>,\r\n    ctx: SetupContext\r\n  ) => RawBindings | RenderFunction\r\n): DefineComponent<Props, RawBindings>\r\n\r\n// overload 2: object format with no props\r\n// (uses user defined props interface)\r\n// return type is for Vetur and TSX support\r\nexport function defineComponent<\r\n  Props = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithoutProps<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n): DefineComponent<Props, RawBindings, D, C, M, Mixin, Extends, E, EE>\r\n\r\n// overload 3: object format with array props declaration\r\n// props inferred as { [key in PropNames]?: any }\r\n// return type is for Vetur and TSX support\r\nexport function defineComponent<\r\n  PropNames extends string,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithArrayProps<\r\n    PropNames,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n): DefineComponent<\r\n  Readonly<{ [key in PropNames]?: any }>,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE\r\n>\r\n\r\n// overload 4: object format with object props declaration\r\n// see `ExtractPropTypes` in ./componentProps.ts\r\nexport function defineComponent<\r\n  // the Readonly constraint allows TS to treat the type of { required: true }\r\n  // as constant instead of boolean.\r\n  PropsOptions extends Readonly<ComponentPropsOptions>,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithObjectProps<\r\n    PropsOptions,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n): DefineComponent<PropsOptions, RawBindings, D, C, M, Mixin, Extends, E, EE>\r\n\r\n// implementation, close to no-op\r\nexport function defineComponent(options: unknown) {\r\n  return isFunction(options) ? { setup: options, name: options.name } : options\r\n}\r\n","import {\r\n  Component,\r\n  ConcreteComponent,\r\n  currentInstance,\r\n  ComponentInternalInstance,\r\n  isInSSRComponentSetup,\r\n  ComponentOptions\r\n} from './component'\r\nimport { isFunction, isObject } from '@vue/shared'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { createVNode, VNode } from './vnode'\r\nimport { defineComponent } from './apiDefineComponent'\r\nimport { warn } from './warning'\r\nimport { ref } from '@vue/reactivity'\r\nimport { handleError, ErrorCodes } from './errorHandling'\r\nimport { isKeepAlive } from './components/KeepAlive'\r\nimport { queueJob } from './scheduler'\r\n\r\nexport type AsyncComponentResolveResult<T = Component> = T | { default: T } // es modules\r\n\r\nexport type AsyncComponentLoader<T = any> = () => Promise<\r\n  AsyncComponentResolveResult<T>\r\n>\r\n\r\nexport interface AsyncComponentOptions<T = any> {\r\n  loader: AsyncComponentLoader<T>\r\n  loadingComponent?: Component\r\n  errorComponent?: Component\r\n  delay?: number\r\n  timeout?: number\r\n  suspensible?: boolean\r\n  onError?: (\r\n    error: Error,\r\n    retry: () => void,\r\n    fail: () => void,\r\n    attempts: number\r\n  ) => any\r\n}\r\n\r\nexport const isAsyncWrapper = (i: ComponentInternalInstance | VNode): boolean =>\r\n  !!(i.type as ComponentOptions).__asyncLoader\r\n\r\nexport function defineAsyncComponent<\r\n  T extends Component = { new (): ComponentPublicInstance }\r\n>(source: AsyncComponentLoader<T> | AsyncComponentOptions<T>): T {\r\n  if (isFunction(source)) {\r\n    source = { loader: source }\r\n  }\r\n\r\n  const {\r\n    loader,\r\n    loadingComponent,\r\n    errorComponent,\r\n    delay = 200,\r\n    timeout, // undefined = never times out\r\n    suspensible = true,\r\n    onError: userOnError\r\n  } = source\r\n\r\n  let pendingRequest: Promise<ConcreteComponent> | null = null\r\n  let resolvedComp: ConcreteComponent | undefined\r\n\r\n  let retries = 0\r\n  const retry = () => {\r\n    retries++\r\n    pendingRequest = null\r\n    return load()\r\n  }\r\n\r\n  const load = (): Promise<ConcreteComponent> => {\r\n    let thisRequest: Promise<ConcreteComponent>\r\n    return (\r\n      pendingRequest ||\r\n      (thisRequest = pendingRequest =\r\n        loader()\r\n          .catch(err => {\r\n            err = err instanceof Error ? err : new Error(String(err))\r\n            if (userOnError) {\r\n              return new Promise((resolve, reject) => {\r\n                const userRetry = () => resolve(retry())\r\n                const userFail = () => reject(err)\r\n                userOnError(err, userRetry, userFail, retries + 1)\r\n              })\r\n            } else {\r\n              throw err\r\n            }\r\n          })\r\n          .then((comp: any) => {\r\n            if (thisRequest !== pendingRequest && pendingRequest) {\r\n              return pendingRequest\r\n            }\r\n            if (__DEV__ && !comp) {\r\n              warn(\r\n                `Async component loader resolved to undefined. ` +\r\n                  `If you are using retry(), make sure to return its return value.`\r\n              )\r\n            }\r\n            // interop module default\r\n            if (\r\n              comp &&\r\n              (comp.__esModule || comp[Symbol.toStringTag] === 'Module')\r\n            ) {\r\n              comp = comp.default\r\n            }\r\n            if (__DEV__ && comp && !isObject(comp) && !isFunction(comp)) {\r\n              throw new Error(`Invalid async component load result: ${comp}`)\r\n            }\r\n            resolvedComp = comp\r\n            return comp\r\n          }))\r\n    )\r\n  }\r\n\r\n  return defineComponent({\r\n    name: 'AsyncComponentWrapper',\r\n\r\n    __asyncLoader: load,\r\n\r\n    get __asyncResolved() {\r\n      return resolvedComp\r\n    },\r\n\r\n    setup() {\r\n      const instance = currentInstance!\r\n\r\n      // already resolved\r\n      if (resolvedComp) {\r\n        return () => createInnerComp(resolvedComp!, instance)\r\n      }\r\n\r\n      const onError = (err: Error) => {\r\n        pendingRequest = null\r\n        handleError(\r\n          err,\r\n          instance,\r\n          ErrorCodes.ASYNC_COMPONENT_LOADER,\r\n          !errorComponent /* do not throw in dev if user provided error component */\r\n        )\r\n      }\r\n\r\n      // suspense-controlled or SSR.\r\n      if (\r\n        (__FEATURE_SUSPENSE__ && suspensible && instance.suspense) ||\r\n        (__SSR__ && isInSSRComponentSetup)\r\n      ) {\r\n        return load()\r\n          .then(comp => {\r\n            return () => createInnerComp(comp, instance)\r\n          })\r\n          .catch(err => {\r\n            onError(err)\r\n            return () =>\r\n              errorComponent\r\n                ? createVNode(errorComponent as ConcreteComponent, {\r\n                    error: err\r\n                  })\r\n                : null\r\n          })\r\n      }\r\n\r\n      const loaded = ref(false)\r\n      const error = ref()\r\n      const delayed = ref(!!delay)\r\n\r\n      if (delay) {\r\n        setTimeout(() => {\r\n          delayed.value = false\r\n        }, delay)\r\n      }\r\n\r\n      if (timeout != null) {\r\n        setTimeout(() => {\r\n          if (!loaded.value && !error.value) {\r\n            const err = new Error(\r\n              `Async component timed out after ${timeout}ms.`\r\n            )\r\n            onError(err)\r\n            error.value = err\r\n          }\r\n        }, timeout)\r\n      }\r\n\r\n      load()\r\n        .then(() => {\r\n          loaded.value = true\r\n          if (instance.parent && isKeepAlive(instance.parent.vnode)) {\r\n            // parent is keep-alive, force update so the loaded component's\r\n            // name is taken into account\r\n            queueJob(instance.parent.update)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          onError(err)\r\n          error.value = err\r\n        })\r\n\r\n      return () => {\r\n        if (loaded.value && resolvedComp) {\r\n          return createInnerComp(resolvedComp, instance)\r\n        } else if (error.value && errorComponent) {\r\n          return createVNode(errorComponent as ConcreteComponent, {\r\n            error: error.value\r\n          })\r\n        } else if (loadingComponent && !delayed.value) {\r\n          return createVNode(loadingComponent as ConcreteComponent)\r\n        }\r\n      }\r\n    }\r\n  }) as T\r\n}\r\n\r\nfunction createInnerComp(\r\n  comp: ConcreteComponent,\r\n  {\r\n    vnode: { ref, props, children, shapeFlag },\r\n    parent\r\n  }: ComponentInternalInstance\r\n) {\r\n  const vnode = createVNode(comp, props, children)\r\n  // ensure inner component inherits the async wrapper's ref owner\r\n  vnode.ref = ref\r\n  return vnode\r\n}\r\n","import {\r\n  ConcreteComponent,\r\n  getCurrentInstance,\r\n  SetupContext,\r\n  ComponentInternalInstance,\r\n  LifecycleHooks,\r\n  currentInstance,\r\n  getComponentName,\r\n  ComponentOptions\r\n} from '../component'\r\nimport {\r\n  VNode,\r\n  cloneVNode,\r\n  isVNode,\r\n  VNodeProps,\r\n  invokeVNodeHook\r\n} from '../vnode'\r\nimport { warn } from '../warning'\r\nimport {\r\n  onBeforeUnmount,\r\n  injectHook,\r\n  onUnmounted,\r\n  onMounted,\r\n  onUpdated\r\n} from '../apiLifecycle'\r\nimport {\r\n  isString,\r\n  isArray,\r\n  ShapeFlags,\r\n  remove,\r\n  invokeArrayFns\r\n} from '@vue/shared'\r\nimport { watch } from '../apiWatch'\r\nimport {\r\n  RendererInternals,\r\n  queuePostRenderEffect,\r\n  MoveType,\r\n  RendererElement,\r\n  RendererNode\r\n} from '../renderer'\r\nimport { setTransitionHooks } from './BaseTransition'\r\nimport { ComponentRenderContext } from '../componentPublicInstance'\r\nimport { devtoolsComponentAdded } from '../devtools'\r\nimport { isAsyncWrapper } from '../apiAsyncComponent'\r\nimport { isSuspense } from './Suspense'\r\n\r\ntype MatchPattern = string | RegExp | (string | RegExp)[]\r\n\r\nexport interface KeepAliveProps {\r\n  include?: MatchPattern\r\n  exclude?: MatchPattern\r\n  max?: number | string\r\n}\r\n\r\ntype CacheKey = string | number | symbol | ConcreteComponent\r\ntype Cache = Map<CacheKey, VNode>\r\ntype Keys = Set<CacheKey>\r\n\r\nexport interface KeepAliveContext extends ComponentRenderContext {\r\n  renderer: RendererInternals\r\n  activate: (\r\n    vnode: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    isSVG: boolean,\r\n    optimized: boolean\r\n  ) => void\r\n  deactivate: (vnode: VNode) => void\r\n}\r\n\r\nexport const isKeepAlive = (vnode: VNode): boolean =>\r\n  (vnode.type as any).__isKeepAlive\r\n\r\nconst KeepAliveImpl: ComponentOptions = {\r\n  name: `KeepAlive`,\r\n\r\n  // Marker for special handling inside the renderer. We are not using a ===\r\n  // check directly on KeepAlive in the renderer, because importing it directly\r\n  // would prevent it from being tree-shaken.\r\n  __isKeepAlive: true,\r\n\r\n  props: {\r\n    include: [String, RegExp, Array],\r\n    exclude: [String, RegExp, Array],\r\n    max: [String, Number]\r\n  },\r\n\r\n  setup(props: KeepAliveProps, { slots }: SetupContext) {\r\n    const instance = getCurrentInstance()!\r\n    // KeepAlive communicates with the instantiated renderer via the\r\n    // ctx where the renderer passes in its internals,\r\n    // and the KeepAlive instance exposes activate/deactivate implementations.\r\n    // The whole point of this is to avoid importing KeepAlive directly in the\r\n    // renderer to facilitate tree-shaking.\r\n    const sharedContext = instance.ctx as KeepAliveContext\r\n\r\n    // if the internal renderer is not registered, it indicates that this is server-side rendering,\r\n    // for KeepAlive, we just need to render its children\r\n    if (__SSR__ && !sharedContext.renderer) {\r\n      return () => {\r\n        const children = slots.default && slots.default()\r\n        return children && children.length === 1 ? children[0] : children\r\n      }\r\n    }\r\n\r\n    const cache: Cache = new Map()\r\n    const keys: Keys = new Set()\r\n    let current: VNode | null = null\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      ;(instance as any).__v_cache = cache\r\n    }\r\n\r\n    const parentSuspense = instance.suspense\r\n\r\n    const {\r\n      renderer: {\r\n        p: patch,\r\n        m: move,\r\n        um: _unmount,\r\n        o: { createElement }\r\n      }\r\n    } = sharedContext\r\n    const storageContainer = createElement('div')\r\n\r\n    sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n      const instance = vnode.component!\r\n      move(vnode, container, anchor, MoveType.ENTER, parentSuspense)\r\n      // in case props have changed\r\n      patch(\r\n        instance.vnode,\r\n        vnode,\r\n        container,\r\n        anchor,\r\n        instance,\r\n        parentSuspense,\r\n        isSVG,\r\n        vnode.slotScopeIds,\r\n        optimized\r\n      )\r\n      queuePostRenderEffect(() => {\r\n        instance.isDeactivated = false\r\n        if (instance.a) {\r\n          invokeArrayFns(instance.a)\r\n        }\r\n        const vnodeHook = vnode.props && vnode.props.onVnodeMounted\r\n        if (vnodeHook) {\r\n          invokeVNodeHook(vnodeHook, instance.parent, vnode)\r\n        }\r\n      }, parentSuspense)\r\n\r\n      if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n        // Update components tree\r\n        devtoolsComponentAdded(instance)\r\n      }\r\n    }\r\n\r\n    sharedContext.deactivate = (vnode: VNode) => {\r\n      const instance = vnode.component!\r\n      move(vnode, storageContainer, null, MoveType.LEAVE, parentSuspense)\r\n      queuePostRenderEffect(() => {\r\n        if (instance.da) {\r\n          invokeArrayFns(instance.da)\r\n        }\r\n        const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted\r\n        if (vnodeHook) {\r\n          invokeVNodeHook(vnodeHook, instance.parent, vnode)\r\n        }\r\n        instance.isDeactivated = true\r\n      }, parentSuspense)\r\n\r\n      if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n        // Update components tree\r\n        devtoolsComponentAdded(instance)\r\n      }\r\n    }\r\n\r\n    function unmount(vnode: VNode) {\r\n      // reset the shapeFlag so it can be properly unmounted\r\n      resetShapeFlag(vnode)\r\n      _unmount(vnode, instance, parentSuspense, true)\r\n    }\r\n\r\n    function pruneCache(filter?: (name: string) => boolean) {\r\n      cache.forEach((vnode, key) => {\r\n        const name = getComponentName(vnode.type as ConcreteComponent)\r\n        if (name && (!filter || !filter(name))) {\r\n          pruneCacheEntry(key)\r\n        }\r\n      })\r\n    }\r\n\r\n    function pruneCacheEntry(key: CacheKey) {\r\n      const cached = cache.get(key) as VNode\r\n      if (!current || cached.type !== current.type) {\r\n        unmount(cached)\r\n      } else if (current) {\r\n        // current active instance should no longer be kept-alive.\r\n        // we can't unmount it now but it might be later, so reset its flag now.\r\n        resetShapeFlag(current)\r\n      }\r\n      cache.delete(key)\r\n      keys.delete(key)\r\n    }\r\n\r\n    // prune cache on include/exclude prop change\r\n    watch(\r\n      () => [props.include, props.exclude],\r\n      ([include, exclude]) => {\r\n        include && pruneCache(name => matches(include, name))\r\n        exclude && pruneCache(name => !matches(exclude, name))\r\n      },\r\n      // prune post-render after `current` has been updated\r\n      { flush: 'post', deep: true }\r\n    )\r\n\r\n    // cache sub tree after render\r\n    let pendingCacheKey: CacheKey | null = null\r\n    const cacheSubtree = () => {\r\n      // fix #1621, the pendingCacheKey could be 0\r\n      if (pendingCacheKey != null) {\r\n        cache.set(pendingCacheKey, getInnerChild(instance.subTree))\r\n      }\r\n    }\r\n    onMounted(cacheSubtree)\r\n    onUpdated(cacheSubtree)\r\n\r\n    onBeforeUnmount(() => {\r\n      cache.forEach(cached => {\r\n        const { subTree, suspense } = instance\r\n        const vnode = getInnerChild(subTree)\r\n        if (cached.type === vnode.type) {\r\n          // current instance will be unmounted as part of keep-alive's unmount\r\n          resetShapeFlag(vnode)\r\n          // but invoke its deactivated hook here\r\n          const da = vnode.component!.da\r\n          da && queuePostRenderEffect(da, suspense)\r\n          return\r\n        }\r\n        unmount(cached)\r\n      })\r\n    })\r\n\r\n    return () => {\r\n      pendingCacheKey = null\r\n\r\n      if (!slots.default) {\r\n        return null\r\n      }\r\n\r\n      const children = slots.default()\r\n      const rawVNode = children[0]\r\n      if (children.length > 1) {\r\n        if (__DEV__) {\r\n          warn(`KeepAlive should contain exactly one component child.`)\r\n        }\r\n        current = null\r\n        return children\r\n      } else if (\r\n        !isVNode(rawVNode) ||\r\n        (!(rawVNode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) &&\r\n          !(rawVNode.shapeFlag & ShapeFlags.SUSPENSE))\r\n      ) {\r\n        current = null\r\n        return rawVNode\r\n      }\r\n\r\n      let vnode = getInnerChild(rawVNode)\r\n      const comp = vnode.type as ConcreteComponent\r\n\r\n      // for async components, name check should be based in its loaded\r\n      // inner component if available\r\n      const name = getComponentName(\r\n        isAsyncWrapper(vnode)\r\n          ? (vnode.type as ComponentOptions).__asyncResolved || {}\r\n          : comp\r\n      )\r\n\r\n      const { include, exclude, max } = props\r\n\r\n      if (\r\n        (include && (!name || !matches(include, name))) ||\r\n        (exclude && name && matches(exclude, name))\r\n      ) {\r\n        current = vnode\r\n        return rawVNode\r\n      }\r\n\r\n      const key = vnode.key == null ? comp : vnode.key\r\n      const cachedVNode = cache.get(key)\r\n\r\n      // clone vnode if it's reused because we are going to mutate it\r\n      if (vnode.el) {\r\n        vnode = cloneVNode(vnode)\r\n        if (rawVNode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n          rawVNode.ssContent = vnode\r\n        }\r\n      }\r\n      // #1513 it's possible for the returned vnode to be cloned due to attr\r\n      // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n      // that is mounted. Instead of caching it directly, we store the pending\r\n      // key and cache `instance.subTree` (the normalized vnode) in\r\n      // beforeMount/beforeUpdate hooks.\r\n      pendingCacheKey = key\r\n\r\n      if (cachedVNode) {\r\n        // copy over mounted state\r\n        vnode.el = cachedVNode.el\r\n        vnode.component = cachedVNode.component\r\n        if (vnode.transition) {\r\n          // recursively update transition hooks on subTree\r\n          setTransitionHooks(vnode, vnode.transition!)\r\n        }\r\n        // avoid vnode being mounted as fresh\r\n        vnode.shapeFlag |= ShapeFlags.COMPONENT_KEPT_ALIVE\r\n        // make this key the freshest\r\n        keys.delete(key)\r\n        keys.add(key)\r\n      } else {\r\n        keys.add(key)\r\n        // prune oldest entry\r\n        if (max && keys.size > parseInt(max as string, 10)) {\r\n          pruneCacheEntry(keys.values().next().value)\r\n        }\r\n      }\r\n      // avoid vnode being unmounted\r\n      vnode.shapeFlag |= ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\r\n\r\n      current = vnode\r\n      return isSuspense(rawVNode.type) ? rawVNode : vnode\r\n    }\r\n  }\r\n}\r\n\r\nif (__COMPAT__) {\r\n  KeepAliveImpl.__isBuildIn = true\r\n}\r\n\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nexport const KeepAlive = KeepAliveImpl as any as {\r\n  __isKeepAlive: true\r\n  new (): {\r\n    $props: VNodeProps & KeepAliveProps\r\n  }\r\n}\r\n\r\nfunction matches(pattern: MatchPattern, name: string): boolean {\r\n  if (isArray(pattern)) {\r\n    return pattern.some((p: string | RegExp) => matches(p, name))\r\n  } else if (isString(pattern)) {\r\n    return pattern.split(',').includes(name)\r\n  } else if (pattern.test) {\r\n    return pattern.test(name)\r\n  }\r\n  /* istanbul ignore next */\r\n  return false\r\n}\r\n\r\nexport function onActivated(\r\n  hook: Function,\r\n  target?: ComponentInternalInstance | null\r\n) {\r\n  registerKeepAliveHook(hook, LifecycleHooks.ACTIVATED, target)\r\n}\r\n\r\nexport function onDeactivated(\r\n  hook: Function,\r\n  target?: ComponentInternalInstance | null\r\n) {\r\n  registerKeepAliveHook(hook, LifecycleHooks.DEACTIVATED, target)\r\n}\r\n\r\nfunction registerKeepAliveHook(\r\n  hook: Function & { __wdc?: Function },\r\n  type: LifecycleHooks,\r\n  target: ComponentInternalInstance | null = currentInstance\r\n) {\r\n  // cache the deactivate branch check wrapper for injected hooks so the same\r\n  // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n  // deactivation check\".\r\n  const wrappedHook =\r\n    hook.__wdc ||\r\n    (hook.__wdc = () => {\r\n      // only fire the hook if the target instance is NOT in a deactivated branch.\r\n      let current: ComponentInternalInstance | null = target\r\n      while (current) {\r\n        if (current.isDeactivated) {\r\n          return\r\n        }\r\n        current = current.parent\r\n      }\r\n      return hook()\r\n    })\r\n  injectHook(type, wrappedHook, target)\r\n  // In addition to registering it on the target instance, we walk up the parent\r\n  // chain and register it on all ancestor instances that are keep-alive roots.\r\n  // This avoids the need to walk the entire component tree when invoking these\r\n  // hooks, and more importantly, avoids the need to track child components in\r\n  // arrays.\r\n  if (target) {\r\n    let current = target.parent\r\n    while (current && current.parent) {\r\n      if (isKeepAlive(current.parent.vnode)) {\r\n        injectToKeepAliveRoot(wrappedHook, type, target, current)\r\n      }\r\n      current = current.parent\r\n    }\r\n  }\r\n}\r\n\r\nfunction injectToKeepAliveRoot(\r\n  hook: Function & { __weh?: Function },\r\n  type: LifecycleHooks,\r\n  target: ComponentInternalInstance,\r\n  keepAliveRoot: ComponentInternalInstance\r\n) {\r\n  // injectHook wraps the original for error handling, so make sure to remove\r\n  // the wrapped version.\r\n  const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */)\r\n  onUnmounted(() => {\r\n    remove(keepAliveRoot[type]!, injected)\r\n  }, target)\r\n}\r\n\r\nfunction resetShapeFlag(vnode: VNode) {\r\n  let shapeFlag = vnode.shapeFlag\r\n  if (shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE) {\r\n    shapeFlag -= ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\r\n  }\r\n  if (shapeFlag & ShapeFlags.COMPONENT_KEPT_ALIVE) {\r\n    shapeFlag -= ShapeFlags.COMPONENT_KEPT_ALIVE\r\n  }\r\n  vnode.shapeFlag = shapeFlag\r\n}\r\n\r\nfunction getInnerChild(vnode: VNode) {\r\n  return vnode.shapeFlag & ShapeFlags.SUSPENSE ? vnode.ssContent! : vnode\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  currentInstance,\r\n  isInSSRComponentSetup,\r\n  LifecycleHooks,\r\n  setCurrentInstance,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { callWithAsyncErrorHandling, ErrorTypeStrings } from './errorHandling'\r\nimport { warn } from './warning'\r\nimport { toHandlerKey } from '@vue/shared'\r\nimport { DebuggerEvent, pauseTracking, resetTracking } from '@vue/reactivity'\r\n\r\nexport { onActivated, onDeactivated } from './components/KeepAlive'\r\n\r\nexport function injectHook(\r\n  type: LifecycleHooks,\r\n  hook: Function & { __weh?: Function },\r\n  target: ComponentInternalInstance | null = currentInstance,\r\n  prepend: boolean = false\r\n): Function | undefined {\r\n  if (target) {\r\n    const hooks = target[type] || (target[type] = [])\r\n    // cache the error handling wrapper for injected hooks so the same hook\r\n    // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n    // handling\".\r\n    const wrappedHook =\r\n      hook.__weh ||\r\n      (hook.__weh = (...args: unknown[]) => {\r\n        if (target.isUnmounted) {\r\n          return\r\n        }\r\n        // disable tracking inside all lifecycle hooks\r\n        // since they can potentially be called inside effects.\r\n        pauseTracking()\r\n        // Set currentInstance during hook invocation.\r\n        // This assumes the hook does not synchronously trigger other hooks, which\r\n        // can only be false when the user does something really funky.\r\n        setCurrentInstance(target)\r\n        const res = callWithAsyncErrorHandling(hook, target, type, args)\r\n        unsetCurrentInstance()\r\n        resetTracking()\r\n        return res\r\n      })\r\n    if (prepend) {\r\n      hooks.unshift(wrappedHook)\r\n    } else {\r\n      hooks.push(wrappedHook)\r\n    }\r\n    return wrappedHook\r\n  } else if (__DEV__) {\r\n    const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''))\r\n    warn(\r\n      `${apiName} is called when there is no active component instance to be ` +\r\n        `associated with. ` +\r\n        `Lifecycle injection APIs can only be used during execution of setup().` +\r\n        (__FEATURE_SUSPENSE__\r\n          ? ` If you are using async setup(), make sure to register lifecycle ` +\r\n            `hooks before the first await statement.`\r\n          : ``)\r\n    )\r\n  }\r\n}\r\n\r\nexport const createHook =\r\n  <T extends Function = () => any>(lifecycle: LifecycleHooks) =>\r\n  (hook: T, target: ComponentInternalInstance | null = currentInstance) =>\r\n    // post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\r\n    (!isInSSRComponentSetup || lifecycle === LifecycleHooks.SERVER_PREFETCH) &&\r\n    injectHook(lifecycle, hook, target)\r\n\r\nexport const onBeforeMount = createHook(LifecycleHooks.BEFORE_MOUNT)\r\nexport const onMounted = createHook(LifecycleHooks.MOUNTED)\r\nexport const onBeforeUpdate = createHook(LifecycleHooks.BEFORE_UPDATE)\r\nexport const onUpdated = createHook(LifecycleHooks.UPDATED)\r\nexport const onBeforeUnmount = createHook(LifecycleHooks.BEFORE_UNMOUNT)\r\nexport const onUnmounted = createHook(LifecycleHooks.UNMOUNTED)\r\nexport const onServerPrefetch = createHook(LifecycleHooks.SERVER_PREFETCH)\r\n\r\nexport type DebuggerHook = (e: DebuggerEvent) => void\r\nexport const onRenderTriggered = createHook<DebuggerHook>(\r\n  LifecycleHooks.RENDER_TRIGGERED\r\n)\r\nexport const onRenderTracked = createHook<DebuggerHook>(\r\n  LifecycleHooks.RENDER_TRACKED\r\n)\r\n\r\nexport type ErrorCapturedHook<TError = unknown> = (\r\n  err: TError,\r\n  instance: ComponentPublicInstance | null,\r\n  info: string\r\n) => boolean | void\r\n\r\nexport function onErrorCaptured<TError = Error>(\r\n  hook: ErrorCapturedHook<TError>,\r\n  target: ComponentInternalInstance | null = currentInstance\r\n) {\r\n  injectHook(LifecycleHooks.ERROR_CAPTURED, hook, target)\r\n}\r\n","/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\r\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\r\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\n\r\nimport { VNode } from './vnode'\r\nimport { isFunction, EMPTY_OBJ, isBuiltInDirective } from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { ComponentInternalInstance, Data, getExposeProxy } from './component'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from './errorHandling'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { mapCompatDirectiveHook } from './compat/customDirective'\r\nimport { pauseTracking, resetTracking } from '@vue/reactivity'\r\nimport { traverse } from './apiWatch'\r\n\r\nexport interface DirectiveBinding<V = any> {\r\n  instance: ComponentPublicInstance | null\r\n  value: V\r\n  oldValue: V | null\r\n  arg?: string\r\n  modifiers: DirectiveModifiers\r\n  dir: ObjectDirective<any, V>\r\n}\r\n\r\nexport type DirectiveHook<T = any, Prev = VNode<any, T> | null, V = any> = (\r\n  el: T,\r\n  binding: DirectiveBinding<V>,\r\n  vnode: VNode<any, T>,\r\n  prevVNode: Prev\r\n) => void\r\n\r\nexport type SSRDirectiveHook = (\r\n  binding: DirectiveBinding,\r\n  vnode: VNode\r\n) => Data | undefined\r\n\r\nexport interface ObjectDirective<T = any, V = any> {\r\n  created?: DirectiveHook<T, null, V>\r\n  beforeMount?: DirectiveHook<T, null, V>\r\n  mounted?: DirectiveHook<T, null, V>\r\n  beforeUpdate?: DirectiveHook<T, VNode<any, T>, V>\r\n  updated?: DirectiveHook<T, VNode<any, T>, V>\r\n  beforeUnmount?: DirectiveHook<T, null, V>\r\n  unmounted?: DirectiveHook<T, null, V>\r\n  getSSRProps?: SSRDirectiveHook\r\n  deep?: boolean\r\n}\r\n\r\nexport type FunctionDirective<T = any, V = any> = DirectiveHook<T, any, V>\r\n\r\nexport type Directive<T = any, V = any> =\r\n  | ObjectDirective<T, V>\r\n  | FunctionDirective<T, V>\r\n\r\nexport type DirectiveModifiers = Record<string, boolean>\r\n\r\nexport function validateDirectiveName(name: string) {\r\n  if (isBuiltInDirective(name)) {\r\n    warn('Do not use built-in directive ids as custom directive id: ' + name)\r\n  }\r\n}\r\n\r\n// Directive, value, argument, modifiers\r\nexport type DirectiveArguments = Array<\r\n  | [Directive]\r\n  | [Directive, any]\r\n  | [Directive, any, string]\r\n  | [Directive, any, string, DirectiveModifiers]\r\n>\r\n\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nexport function withDirectives<T extends VNode>(\r\n  vnode: T,\r\n  directives: DirectiveArguments\r\n): T {\r\n  const internalInstance = currentRenderingInstance\r\n  if (internalInstance === null) {\r\n    __DEV__ && warn(`withDirectives can only be used inside render functions.`)\r\n    return vnode\r\n  }\r\n  const instance =\r\n    (getExposeProxy(internalInstance) as ComponentPublicInstance) ||\r\n    internalInstance.proxy\r\n  const bindings: DirectiveBinding[] = vnode.dirs || (vnode.dirs = [])\r\n  for (let i = 0; i < directives.length; i++) {\r\n    let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i]\r\n    if (isFunction(dir)) {\r\n      dir = {\r\n        mounted: dir,\r\n        updated: dir\r\n      } as ObjectDirective\r\n    }\r\n    if (dir.deep) {\r\n      traverse(value)\r\n    }\r\n    bindings.push({\r\n      dir,\r\n      instance,\r\n      value,\r\n      oldValue: void 0,\r\n      arg,\r\n      modifiers\r\n    })\r\n  }\r\n  return vnode\r\n}\r\n\r\nexport function invokeDirectiveHook(\r\n  vnode: VNode,\r\n  prevVNode: VNode | null,\r\n  instance: ComponentInternalInstance | null,\r\n  name: keyof ObjectDirective\r\n) {\r\n  const bindings = vnode.dirs!\r\n  const oldBindings = prevVNode && prevVNode.dirs!\r\n  for (let i = 0; i < bindings.length; i++) {\r\n    const binding = bindings[i]\r\n    if (oldBindings) {\r\n      binding.oldValue = oldBindings[i].value\r\n    }\r\n    let hook = binding.dir[name] as DirectiveHook | DirectiveHook[] | undefined\r\n    if (__COMPAT__ && !hook) {\r\n      hook = mapCompatDirectiveHook(name, binding.dir, instance)\r\n    }\r\n    if (hook) {\r\n      // disable tracking inside all lifecycle hooks\r\n      // since they can potentially be called inside effects.\r\n      pauseTracking()\r\n      callWithAsyncErrorHandling(hook, instance, ErrorCodes.DIRECTIVE_HOOK, [\r\n        vnode.el,\r\n        binding,\r\n        vnode,\r\n        prevVNode\r\n      ])\r\n      resetTracking()\r\n    }\r\n  }\r\n}\r\n","import {\r\n  currentInstance,\r\n  ConcreteComponent,\r\n  ComponentOptions,\r\n  getComponentName\r\n} from '../component'\r\nimport { currentRenderingInstance } from '../componentRenderContext'\r\nimport { Directive } from '../directives'\r\nimport { camelize, capitalize, isString } from '@vue/shared'\r\nimport { warn } from '../warning'\r\nimport { VNodeTypes } from '../vnode'\r\n\r\nexport const COMPONENTS = 'components'\r\nexport const DIRECTIVES = 'directives'\r\nexport const FILTERS = 'filters'\r\n\r\nexport type AssetTypes = typeof COMPONENTS | typeof DIRECTIVES | typeof FILTERS\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveComponent(\r\n  name: string,\r\n  maybeSelfReference?: boolean\r\n): ConcreteComponent | string {\r\n  return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name\r\n}\r\n\r\nexport const NULL_DYNAMIC_COMPONENT = Symbol()\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveDynamicComponent(component: unknown): VNodeTypes {\r\n  if (isString(component)) {\r\n    return resolveAsset(COMPONENTS, component, false) || component\r\n  } else {\r\n    // invalid types will fallthrough to createVNode and raise warning\r\n    return (component || NULL_DYNAMIC_COMPONENT) as any\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveDirective(name: string): Directive | undefined {\r\n  return resolveAsset(DIRECTIVES, name)\r\n}\r\n\r\n/**\r\n * v2 compat only\r\n * @internal\r\n */\r\nexport function resolveFilter(name: string): Function | undefined {\r\n  return resolveAsset(FILTERS, name)\r\n}\r\n\r\n/**\r\n * @private\r\n * overload 1: components\r\n */\r\nfunction resolveAsset(\r\n  type: typeof COMPONENTS,\r\n  name: string,\r\n  warnMissing?: boolean,\r\n  maybeSelfReference?: boolean\r\n): ConcreteComponent | undefined\r\n// overload 2: directives\r\nfunction resolveAsset(\r\n  type: typeof DIRECTIVES,\r\n  name: string\r\n): Directive | undefined\r\n// implementation\r\n// overload 3: filters (compat only)\r\nfunction resolveAsset(type: typeof FILTERS, name: string): Function | undefined\r\n// implementation\r\nfunction resolveAsset(\r\n  type: AssetTypes,\r\n  name: string,\r\n  warnMissing = true,\r\n  maybeSelfReference = false\r\n) {\r\n  const instance = currentRenderingInstance || currentInstance\r\n  if (instance) {\r\n    const Component = instance.type\r\n\r\n    // explicit self name has highest priority\r\n    if (type === COMPONENTS) {\r\n      const selfName = getComponentName(\r\n        Component,\r\n        false /* do not include inferred name to avoid breaking existing code */\r\n      )\r\n      if (\r\n        selfName &&\r\n        (selfName === name ||\r\n          selfName === camelize(name) ||\r\n          selfName === capitalize(camelize(name)))\r\n      ) {\r\n        return Component\r\n      }\r\n    }\r\n\r\n    const res =\r\n      // local registration\r\n      // check instance[type] first which is resolved for options API\r\n      resolve(instance[type] || (Component as ComponentOptions)[type], name) ||\r\n      // global registration\r\n      resolve(instance.appContext[type], name)\r\n\r\n    if (!res && maybeSelfReference) {\r\n      // fallback to implicit self-reference\r\n      return Component\r\n    }\r\n\r\n    if (__DEV__ && warnMissing && !res) {\r\n      const extra =\r\n        type === COMPONENTS\r\n          ? `\\nIf this is a native custom element, make sure to exclude it from ` +\r\n            `component resolution via compilerOptions.isCustomElement.`\r\n          : ``\r\n      warn(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`)\r\n    }\r\n\r\n    return res\r\n  } else if (__DEV__) {\r\n    warn(\r\n      `resolve${capitalize(type.slice(0, -1))} ` +\r\n        `can only be used in render() or setup().`\r\n    )\r\n  }\r\n}\r\n\r\nfunction resolve(registry: Record<string, any> | undefined, name: string) {\r\n  return (\r\n    registry &&\r\n    (registry[name] ||\r\n      registry[camelize(name)] ||\r\n      registry[capitalize(camelize(name))])\r\n  )\r\n}\r\n","import { VNode, VNodeChild } from '../vnode'\r\nimport { isArray, isString, isObject } from '@vue/shared'\r\nimport { warn } from '../warning'\r\n\r\n/**\r\n * v-for string\r\n * @private\r\n */\r\nexport function renderList(\r\n  source: string,\r\n  renderItem: (value: string, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for number\r\n */\r\nexport function renderList(\r\n  source: number,\r\n  renderItem: (value: number, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for array\r\n */\r\nexport function renderList<T>(\r\n  source: T[],\r\n  renderItem: (value: T, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for iterable\r\n */\r\nexport function renderList<T>(\r\n  source: Iterable<T>,\r\n  renderItem: (value: T, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for object\r\n */\r\nexport function renderList<T>(\r\n  source: T,\r\n  renderItem: <K extends keyof T>(\r\n    value: T[K],\r\n    key: K,\r\n    index: number\r\n  ) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * Actual implementation\r\n */\r\nexport function renderList(\r\n  source: any,\r\n  renderItem: (...args: any[]) => VNodeChild,\r\n  cache?: any[],\r\n  index?: number\r\n): VNodeChild[] {\r\n  let ret: VNodeChild[]\r\n  const cached = (cache && cache[index!]) as VNode[] | undefined\r\n\r\n  if (isArray(source) || isString(source)) {\r\n    ret = new Array(source.length)\r\n    for (let i = 0, l = source.length; i < l; i++) {\r\n      ret[i] = renderItem(source[i], i, undefined, cached && cached[i])\r\n    }\r\n  } else if (typeof source === 'number') {\r\n    if (__DEV__ && !Number.isInteger(source)) {\r\n      warn(`The v-for range expect an integer value but got ${source}.`)\r\n    }\r\n    ret = new Array(source)\r\n    for (let i = 0; i < source; i++) {\r\n      ret[i] = renderItem(i + 1, i, undefined, cached && cached[i])\r\n    }\r\n  } else if (isObject(source)) {\r\n    if (source[Symbol.iterator as any]) {\r\n      ret = Array.from(source as Iterable<any>, (item, i) =>\r\n        renderItem(item, i, undefined, cached && cached[i])\r\n      )\r\n    } else {\r\n      const keys = Object.keys(source)\r\n      ret = new Array(keys.length)\r\n      for (let i = 0, l = keys.length; i < l; i++) {\r\n        const key = keys[i]\r\n        ret[i] = renderItem(source[key], key, i, cached && cached[i])\r\n      }\r\n    }\r\n  } else {\r\n    ret = []\r\n  }\r\n\r\n  if (cache) {\r\n    cache[index!] = ret\r\n  }\r\n  return ret\r\n}\r\n","import { Slot } from '../componentSlots'\r\nimport { isArray } from '@vue/shared'\r\n\r\ninterface CompiledSlotDescriptor {\r\n  name: string\r\n  fn: Slot\r\n}\r\n\r\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nexport function createSlots(\r\n  slots: Record<string, Slot>,\r\n  dynamicSlots: (\r\n    | CompiledSlotDescriptor\r\n    | CompiledSlotDescriptor[]\r\n    | undefined\r\n  )[]\r\n): Record<string, Slot> {\r\n  for (let i = 0; i < dynamicSlots.length; i++) {\r\n    const slot = dynamicSlots[i]\r\n    // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n    if (isArray(slot)) {\r\n      for (let j = 0; j < slot.length; j++) {\r\n        slots[slot[j].name] = slot[j].fn\r\n      }\r\n    } else if (slot) {\r\n      // conditional single slot generated by <template v-if=\"...\" #foo>\r\n      slots[slot.name] = slot.fn\r\n    }\r\n  }\r\n  return slots\r\n}\r\n","import { Data } from '../component'\r\nimport { Slots, RawSlots } from '../componentSlots'\r\nimport {\r\n  ContextualRenderFn,\r\n  currentRenderingInstance\r\n} from '../componentRenderContext'\r\nimport {\r\n  Comment,\r\n  isVNode,\r\n  VNodeArrayChildren,\r\n  openBlock,\r\n  createBlock,\r\n  Fragment,\r\n  VNode\r\n} from '../vnode'\r\nimport { PatchFlags, SlotFlags } from '@vue/shared'\r\nimport { warn } from '../warning'\r\nimport { createVNode } from '@vue/runtime-core'\r\nimport { isAsyncWrapper } from '../apiAsyncComponent'\r\n\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nexport function renderSlot(\r\n  slots: Slots,\r\n  name: string,\r\n  props: Data = {},\r\n  // this is not a user-facing function, so the fallback is always generated by\r\n  // the compiler and guaranteed to be a function returning an array\r\n  fallback?: () => VNodeArrayChildren,\r\n  noSlotted?: boolean\r\n): VNode {\r\n  if (\r\n    currentRenderingInstance!.isCE ||\r\n    (currentRenderingInstance!.parent &&\r\n      isAsyncWrapper(currentRenderingInstance!.parent) &&\r\n      currentRenderingInstance!.parent.isCE)\r\n  ) {\r\n    return createVNode(\r\n      'slot',\r\n      name === 'default' ? null : { name },\r\n      fallback && fallback()\r\n    )\r\n  }\r\n\r\n  let slot = slots[name]\r\n\r\n  if (__DEV__ && slot && slot.length > 1) {\r\n    warn(\r\n      `SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n        `function. You need to mark this component with $dynamic-slots in the ` +\r\n        `parent template.`\r\n    )\r\n    slot = () => []\r\n  }\r\n\r\n  // a compiled slot disables block tracking by default to avoid manual\r\n  // invocation interfering with template-based block tracking, but in\r\n  // `renderSlot` we can be sure that it's template-based so we can force\r\n  // enable it.\r\n  if (slot && (slot as ContextualRenderFn)._c) {\r\n    ;(slot as ContextualRenderFn)._d = false\r\n  }\r\n  openBlock()\r\n  const validSlotContent = slot && ensureValidVNode(slot(props))\r\n  const rendered = createBlock(\r\n    Fragment,\r\n    { key: props.key || `_${name}` },\r\n    validSlotContent || (fallback ? fallback() : []),\r\n    validSlotContent && (slots as RawSlots)._ === SlotFlags.STABLE\r\n      ? PatchFlags.STABLE_FRAGMENT\r\n      : PatchFlags.BAIL\r\n  )\r\n  if (!noSlotted && rendered.scopeId) {\r\n    rendered.slotScopeIds = [rendered.scopeId + '-s']\r\n  }\r\n  if (slot && (slot as ContextualRenderFn)._c) {\r\n    ;(slot as ContextualRenderFn)._d = true\r\n  }\r\n  return rendered\r\n}\r\n\r\nfunction ensureValidVNode(vnodes: VNodeArrayChildren) {\r\n  return vnodes.some(child => {\r\n    if (!isVNode(child)) return true\r\n    if (child.type === Comment) return false\r\n    if (\r\n      child.type === Fragment &&\r\n      !ensureValidVNode(child.children as VNodeArrayChildren)\r\n    )\r\n      return false\r\n    return true\r\n  })\r\n    ? vnodes\r\n    : null\r\n}\r\n","import { toHandlerKey, isObject } from '@vue/shared'\r\nimport { warn } from '../warning'\r\n\r\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nexport function toHandlers(obj: Record<string, any>): Record<string, any> {\r\n  const ret: Record<string, any> = {}\r\n  if (__DEV__ && !isObject(obj)) {\r\n    warn(`v-on with no argument expects an object value.`)\r\n    return ret\r\n  }\r\n  for (const key in obj) {\r\n    ret[toHandlerKey(key)] = obj[key]\r\n  }\r\n  return ret\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  Data,\r\n  getExposeProxy,\r\n  isStatefulComponent\r\n} from './component'\r\nimport { nextTick, queueJob } from './scheduler'\r\nimport { instanceWatch, WatchOptions, WatchStopHandle } from './apiWatch'\r\nimport {\r\n  EMPTY_OBJ,\r\n  hasOwn,\r\n  isGloballyWhitelisted,\r\n  NOOP,\r\n  extend,\r\n  isString,\r\n  isFunction,\r\n  UnionToIntersection\r\n} from '@vue/shared'\r\nimport {\r\n  toRaw,\r\n  shallowReadonly,\r\n  track,\r\n  TrackOpTypes,\r\n  ShallowUnwrapRef,\r\n  UnwrapNestedRefs\r\n} from '@vue/reactivity'\r\nimport {\r\n  ExtractComputedReturns,\r\n  ComponentOptionsBase,\r\n  ComputedOptions,\r\n  MethodOptions,\r\n  ComponentOptionsMixin,\r\n  OptionTypesType,\r\n  OptionTypesKeys,\r\n  resolveMergedOptions,\r\n  shouldCacheAccess,\r\n  MergedComponentOptionsOverride\r\n} from './componentOptions'\r\nimport { EmitsOptions, EmitFn } from './componentEmits'\r\nimport { Slots } from './componentSlots'\r\nimport { markAttrsAccessed } from './componentRenderUtils'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { warn } from './warning'\r\nimport { installCompatInstanceProperties } from './compat/instance'\r\n\r\n/**\r\n * Custom properties added to component instances in any way and can be accessed through `this`\r\n *\r\n * @example\r\n * Here is an example of adding a property `$router` to every component instance:\r\n * ```ts\r\n * import { createApp } from 'vue'\r\n * import { Router, createRouter } from 'vue-router'\r\n *\r\n * declare module '@vue/runtime-core' {\r\n *   interface ComponentCustomProperties {\r\n *     $router: Router\r\n *   }\r\n * }\r\n *\r\n * // effectively adding the router to every component instance\r\n * const app = createApp({})\r\n * const router = createRouter()\r\n * app.config.globalProperties.$router = router\r\n *\r\n * const vm = app.mount('#app')\r\n * // we can access the router from the instance\r\n * vm.$router.push('/')\r\n * ```\r\n */\r\nexport interface ComponentCustomProperties {}\r\n\r\ntype IsDefaultMixinComponent<T> = T extends ComponentOptionsMixin\r\n  ? ComponentOptionsMixin extends T\r\n    ? true\r\n    : false\r\n  : false\r\n\r\ntype MixinToOptionTypes<T> = T extends ComponentOptionsBase<\r\n  infer P,\r\n  infer B,\r\n  infer D,\r\n  infer C,\r\n  infer M,\r\n  infer Mixin,\r\n  infer Extends,\r\n  any,\r\n  any,\r\n  infer Defaults\r\n>\r\n  ? OptionTypesType<P & {}, B & {}, D & {}, C & {}, M & {}, Defaults & {}> &\r\n      IntersectionMixin<Mixin> &\r\n      IntersectionMixin<Extends>\r\n  : never\r\n\r\n// ExtractMixin(map type) is used to resolve circularly references\r\ntype ExtractMixin<T> = {\r\n  Mixin: MixinToOptionTypes<T>\r\n}[T extends ComponentOptionsMixin ? 'Mixin' : never]\r\n\r\ntype IntersectionMixin<T> = IsDefaultMixinComponent<T> extends true\r\n  ? OptionTypesType<{}, {}, {}, {}, {}>\r\n  : UnionToIntersection<ExtractMixin<T>>\r\n\r\ntype UnwrapMixinsType<\r\n  T,\r\n  Type extends OptionTypesKeys\r\n> = T extends OptionTypesType ? T[Type] : never\r\n\r\ntype EnsureNonVoid<T> = T extends void ? {} : T\r\n\r\nexport type ComponentPublicInstanceConstructor<\r\n  T extends ComponentPublicInstance<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M\r\n  > = ComponentPublicInstance<any>,\r\n  Props = any,\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions\r\n> = {\r\n  __isFragment?: never\r\n  __isTeleport?: never\r\n  __isSuspense?: never\r\n  new (...args: any[]): T\r\n}\r\n\r\nexport type CreateComponentPublicInstance<\r\n  P = {},\r\n  B = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  PublicProps = P,\r\n  Defaults = {},\r\n  MakeDefaultsOptional extends boolean = false,\r\n  PublicMixin = IntersectionMixin<Mixin> & IntersectionMixin<Extends>,\r\n  PublicP = UnwrapMixinsType<PublicMixin, 'P'> & EnsureNonVoid<P>,\r\n  PublicB = UnwrapMixinsType<PublicMixin, 'B'> & EnsureNonVoid<B>,\r\n  PublicD = UnwrapMixinsType<PublicMixin, 'D'> & EnsureNonVoid<D>,\r\n  PublicC extends ComputedOptions = UnwrapMixinsType<PublicMixin, 'C'> &\r\n    EnsureNonVoid<C>,\r\n  PublicM extends MethodOptions = UnwrapMixinsType<PublicMixin, 'M'> &\r\n    EnsureNonVoid<M>,\r\n  PublicDefaults = UnwrapMixinsType<PublicMixin, 'Defaults'> &\r\n    EnsureNonVoid<Defaults>\r\n> = ComponentPublicInstance<\r\n  PublicP,\r\n  PublicB,\r\n  PublicD,\r\n  PublicC,\r\n  PublicM,\r\n  E,\r\n  PublicProps,\r\n  PublicDefaults,\r\n  MakeDefaultsOptional,\r\n  ComponentOptionsBase<P, B, D, C, M, Mixin, Extends, E, string, Defaults>\r\n>\r\n\r\n// public properties exposed on the proxy, which is used as the render context\r\n// in templates (as `this` in the render option)\r\nexport type ComponentPublicInstance<\r\n  P = {}, // props type extracted from props option\r\n  B = {}, // raw bindings returned from setup()\r\n  D = {}, // return from data()\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  E extends EmitsOptions = {},\r\n  PublicProps = P,\r\n  Defaults = {},\r\n  MakeDefaultsOptional extends boolean = false,\r\n  Options = ComponentOptionsBase<any, any, any, any, any, any, any, any, any>\r\n> = {\r\n  $: ComponentInternalInstance\r\n  $data: D\r\n  $props: MakeDefaultsOptional extends true\r\n    ? Partial<Defaults> & Omit<P & PublicProps, keyof Defaults>\r\n    : P & PublicProps\r\n  $attrs: Data\r\n  $refs: Data\r\n  $slots: Slots\r\n  $root: ComponentPublicInstance | null\r\n  $parent: ComponentPublicInstance | null\r\n  $emit: EmitFn<E>\r\n  $el: any\r\n  $options: Options & MergedComponentOptionsOverride\r\n  $forceUpdate: () => void\r\n  $nextTick: typeof nextTick\r\n  $watch(\r\n    source: string | Function,\r\n    cb: Function,\r\n    options?: WatchOptions\r\n  ): WatchStopHandle\r\n} & P &\r\n  ShallowUnwrapRef<B> &\r\n  UnwrapNestedRefs<D> &\r\n  ExtractComputedReturns<C> &\r\n  M &\r\n  ComponentCustomProperties\r\n\r\nexport type PublicPropertiesMap = Record<\r\n  string,\r\n  (i: ComponentInternalInstance) => any\r\n>\r\n\r\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (\r\n  i: ComponentInternalInstance | null\r\n): ComponentPublicInstance | ComponentInternalInstance['exposed'] | null => {\r\n  if (!i) return null\r\n  if (isStatefulComponent(i)) return getExposeProxy(i) || i.proxy\r\n  return getPublicInstance(i.parent)\r\n}\r\n\r\nexport const publicPropertiesMap: PublicPropertiesMap =\r\n  // Move PURE marker to new line to workaround compiler discarding it\r\n  // due to type annotation\r\n  /*#__PURE__*/ extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => (__DEV__ ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => (__DEV__ ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => (__DEV__ ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => (__DEV__ ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (__FEATURE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => i.f || (i.f = () => queueJob(i.update)),\r\n    $nextTick: i => i.n || (i.n = nextTick.bind(i.proxy!)),\r\n    $watch: i => (__FEATURE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n  } as PublicPropertiesMap)\r\n\r\nif (__COMPAT__) {\r\n  installCompatInstanceProperties(publicPropertiesMap)\r\n}\r\n\r\nconst enum AccessTypes {\r\n  OTHER,\r\n  SETUP,\r\n  DATA,\r\n  PROPS,\r\n  CONTEXT\r\n}\r\n\r\nexport interface ComponentRenderContext {\r\n  [key: string]: any\r\n  _: ComponentInternalInstance\r\n}\r\n\r\nexport const isReservedPrefix = (key: string) => key === '_' || key === '$'\r\n\r\nexport const PublicInstanceProxyHandlers: ProxyHandler<any> = {\r\n  get({ _: instance }: ComponentRenderContext, key: string) {\r\n    const { ctx, setupState, data, props, accessCache, type, appContext } =\r\n      instance\r\n\r\n    // for internal formatters to know that this is a Vue instance\r\n    if (__DEV__ && key === '__isVue') {\r\n      return true\r\n    }\r\n\r\n    // prioritize <script setup> bindings during dev.\r\n    // this allows even properties that start with _ or $ to be used - so that\r\n    // it aligns with the production behavior where the render fn is inlined and\r\n    // indeed has access to all declared variables.\r\n    if (\r\n      __DEV__ &&\r\n      setupState !== EMPTY_OBJ &&\r\n      setupState.__isScriptSetup &&\r\n      hasOwn(setupState, key)\r\n    ) {\r\n      return setupState[key]\r\n    }\r\n\r\n    // data / props / ctx\r\n    // This getter gets called for every property access on the render context\r\n    // during render and is a major hotspot. The most expensive part of this\r\n    // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n    // access on a plain object, so we use an accessCache object (with null\r\n    // prototype) to memoize what access type a key corresponds to.\r\n    let normalizedProps\r\n    if (key[0] !== '$') {\r\n      const n = accessCache![key]\r\n      if (n !== undefined) {\r\n        switch (n) {\r\n          case AccessTypes.SETUP:\r\n            return setupState[key]\r\n          case AccessTypes.DATA:\r\n            return data[key]\r\n          case AccessTypes.CONTEXT:\r\n            return ctx[key]\r\n          case AccessTypes.PROPS:\r\n            return props![key]\r\n          // default: just fallthrough\r\n        }\r\n      } else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n        accessCache![key] = AccessTypes.SETUP\r\n        return setupState[key]\r\n      } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n        accessCache![key] = AccessTypes.DATA\r\n        return data[key]\r\n      } else if (\r\n        // only cache other properties when instance has declared (thus stable)\r\n        // props\r\n        (normalizedProps = instance.propsOptions[0]) &&\r\n        hasOwn(normalizedProps, key)\r\n      ) {\r\n        accessCache![key] = AccessTypes.PROPS\r\n        return props![key]\r\n      } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n        accessCache![key] = AccessTypes.CONTEXT\r\n        return ctx[key]\r\n      } else if (!__FEATURE_OPTIONS_API__ || shouldCacheAccess) {\r\n        accessCache![key] = AccessTypes.OTHER\r\n      }\r\n    }\r\n\r\n    const publicGetter = publicPropertiesMap[key]\r\n    let cssModule, globalProperties\r\n    // public $xxx properties\r\n    if (publicGetter) {\r\n      if (key === '$attrs') {\r\n        track(instance, TrackOpTypes.GET, key)\r\n        __DEV__ && markAttrsAccessed()\r\n      }\r\n      return publicGetter(instance)\r\n    } else if (\r\n      // css module (injected by vue-loader)\r\n      (cssModule = type.__cssModules) &&\r\n      (cssModule = cssModule[key])\r\n    ) {\r\n      return cssModule\r\n    } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n      // user may set custom properties to `this` that start with `$`\r\n      accessCache![key] = AccessTypes.CONTEXT\r\n      return ctx[key]\r\n    } else if (\r\n      // global properties\r\n      ((globalProperties = appContext.config.globalProperties),\r\n      hasOwn(globalProperties, key))\r\n    ) {\r\n      if (__COMPAT__) {\r\n        const desc = Object.getOwnPropertyDescriptor(globalProperties, key)!\r\n        if (desc.get) {\r\n          return desc.get.call(instance.proxy)\r\n        } else {\r\n          const val = globalProperties[key]\r\n          return isFunction(val)\r\n            ? Object.assign(val.bind(instance.proxy), val)\r\n            : val\r\n        }\r\n      } else {\r\n        return globalProperties[key]\r\n      }\r\n    } else if (\r\n      __DEV__ &&\r\n      currentRenderingInstance &&\r\n      (!isString(key) ||\r\n        // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n        // to infinite warning loop\r\n        key.indexOf('__v') !== 0)\r\n    ) {\r\n      if (data !== EMPTY_OBJ && isReservedPrefix(key[0]) && hasOwn(data, key)) {\r\n        warn(\r\n          `Property ${JSON.stringify(\r\n            key\r\n          )} must be accessed via $data because it starts with a reserved ` +\r\n            `character (\"$\" or \"_\") and is not proxied on the render context.`\r\n        )\r\n      } else if (instance === currentRenderingInstance) {\r\n        warn(\r\n          `Property ${JSON.stringify(key)} was accessed during render ` +\r\n            `but is not defined on instance.`\r\n        )\r\n      }\r\n    }\r\n  },\r\n\r\n  set(\r\n    { _: instance }: ComponentRenderContext,\r\n    key: string,\r\n    value: any\r\n  ): boolean {\r\n    const { data, setupState, ctx } = instance\r\n    if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n      setupState[key] = value\r\n      return true\r\n    } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n      data[key] = value\r\n      return true\r\n    } else if (hasOwn(instance.props, key)) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Attempting to mutate prop \"${key}\". Props are readonly.`,\r\n          instance\r\n        )\r\n      return false\r\n    }\r\n    if (key[0] === '$' && key.slice(1) in instance) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Attempting to mutate public property \"${key}\". ` +\r\n            `Properties starting with $ are reserved and readonly.`,\r\n          instance\r\n        )\r\n      return false\r\n    } else {\r\n      if (__DEV__ && key in instance.appContext.config.globalProperties) {\r\n        Object.defineProperty(ctx, key, {\r\n          enumerable: true,\r\n          configurable: true,\r\n          value\r\n        })\r\n      } else {\r\n        ctx[key] = value\r\n      }\r\n    }\r\n    return true\r\n  },\r\n\r\n  has(\r\n    {\r\n      _: { data, setupState, accessCache, ctx, appContext, propsOptions }\r\n    }: ComponentRenderContext,\r\n    key: string\r\n  ) {\r\n    let normalizedProps\r\n    return (\r\n      !!accessCache![key] ||\r\n      (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n      (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n      ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n      hasOwn(ctx, key) ||\r\n      hasOwn(publicPropertiesMap, key) ||\r\n      hasOwn(appContext.config.globalProperties, key)\r\n    )\r\n  },\r\n\r\n  defineProperty(\r\n    target: ComponentRenderContext,\r\n    key: string,\r\n    descriptor: PropertyDescriptor\r\n  ) {\r\n    if (descriptor.get != null) {\r\n      // invalidate key cache of a getter based property #5417\r\n      target._.accessCache![key] = 0\r\n    } else if (hasOwn(descriptor, 'value')) {\r\n      this.set!(target, key, descriptor.value, null)\r\n    }\r\n    return Reflect.defineProperty(target, key, descriptor)\r\n  }\r\n}\r\n\r\nif (__DEV__ && !__TEST__) {\r\n  PublicInstanceProxyHandlers.ownKeys = (target: ComponentRenderContext) => {\r\n    warn(\r\n      `Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n        `The keys will be empty in production mode to avoid performance overhead.`\r\n    )\r\n    return Reflect.ownKeys(target)\r\n  }\r\n}\r\n\r\nexport const RuntimeCompiledPublicInstanceProxyHandlers = /*#__PURE__*/ extend(\r\n  {},\r\n  PublicInstanceProxyHandlers,\r\n  {\r\n    get(target: ComponentRenderContext, key: string) {\r\n      // fast path for unscopables when using `with` block\r\n      if ((key as any) === Symbol.unscopables) {\r\n        return\r\n      }\r\n      return PublicInstanceProxyHandlers.get!(target, key, target)\r\n    },\r\n    has(_: ComponentRenderContext, key: string) {\r\n      const has = key[0] !== '_' && !isGloballyWhitelisted(key)\r\n      if (__DEV__ && !has && PublicInstanceProxyHandlers.has!(_, key)) {\r\n        warn(\r\n          `Property ${JSON.stringify(\r\n            key\r\n          )} should not start with _ which is a reserved prefix for Vue internals.`\r\n        )\r\n      }\r\n      return has\r\n    }\r\n  }\r\n)\r\n\r\n// dev only\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nexport function createDevRenderContext(instance: ComponentInternalInstance) {\r\n  const target: Record<string, any> = {}\r\n\r\n  // expose internal instance for proxy handlers\r\n  Object.defineProperty(target, `_`, {\r\n    configurable: true,\r\n    enumerable: false,\r\n    get: () => instance\r\n  })\r\n\r\n  // expose public properties\r\n  Object.keys(publicPropertiesMap).forEach(key => {\r\n    Object.defineProperty(target, key, {\r\n      configurable: true,\r\n      enumerable: false,\r\n      get: () => publicPropertiesMap[key](instance),\r\n      // intercepted by the proxy so no need for implementation,\r\n      // but needed to prevent set errors\r\n      set: NOOP\r\n    })\r\n  })\r\n\r\n  return target as ComponentRenderContext\r\n}\r\n\r\n// dev only\r\nexport function exposePropsOnRenderContext(\r\n  instance: ComponentInternalInstance\r\n) {\r\n  const {\r\n    ctx,\r\n    propsOptions: [propsOptions]\r\n  } = instance\r\n  if (propsOptions) {\r\n    Object.keys(propsOptions).forEach(key => {\r\n      Object.defineProperty(ctx, key, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get: () => instance.props[key],\r\n        set: NOOP\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// dev only\r\nexport function exposeSetupStateOnRenderContext(\r\n  instance: ComponentInternalInstance\r\n) {\r\n  const { ctx, setupState } = instance\r\n  Object.keys(toRaw(setupState)).forEach(key => {\r\n    if (!setupState.__isScriptSetup) {\r\n      if (isReservedPrefix(key[0])) {\r\n        warn(\r\n          `setup() return property ${JSON.stringify(\r\n            key\r\n          )} should not start with \"$\" or \"_\" ` +\r\n            `which are reserved prefixes for Vue internals.`\r\n        )\r\n        return\r\n      }\r\n      Object.defineProperty(ctx, key, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get: () => setupState[key],\r\n        set: NOOP\r\n      })\r\n    }\r\n  })\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  Data,\r\n  SetupContext,\r\n  ComponentInternalOptions,\r\n  Component,\r\n  ConcreteComponent,\r\n  InternalRenderFunction,\r\n  LifecycleHooks\r\n} from './component'\r\nimport {\r\n  isFunction,\r\n  extend,\r\n  isString,\r\n  isObject,\r\n  isArray,\r\n  NOOP,\r\n  isPromise,\r\n  LooseRequired,\r\n  UnionToIntersection\r\n} from '@vue/shared'\r\nimport { isRef, Ref } from '@vue/reactivity'\r\nimport { computed } from './apiComputed'\r\nimport {\r\n  watch,\r\n  WatchOptions,\r\n  WatchCallback,\r\n  createPathGetter\r\n} from './apiWatch'\r\nimport { provide, inject } from './apiInject'\r\nimport {\r\n  onBeforeMount,\r\n  onMounted,\r\n  onBeforeUpdate,\r\n  onUpdated,\r\n  onErrorCaptured,\r\n  onRenderTracked,\r\n  onBeforeUnmount,\r\n  onUnmounted,\r\n  onActivated,\r\n  onDeactivated,\r\n  onRenderTriggered,\r\n  DebuggerHook,\r\n  ErrorCapturedHook,\r\n  onServerPrefetch\r\n} from './apiLifecycle'\r\nimport {\r\n  reactive,\r\n  ComputedGetter,\r\n  WritableComputedOptions\r\n} from '@vue/reactivity'\r\nimport {\r\n  ComponentObjectPropsOptions,\r\n  ExtractPropTypes,\r\n  ExtractDefaultPropTypes\r\n} from './componentProps'\r\nimport { EmitsOptions, EmitsToProps } from './componentEmits'\r\nimport { Directive } from './directives'\r\nimport {\r\n  CreateComponentPublicInstance,\r\n  ComponentPublicInstance,\r\n  isReservedPrefix\r\n} from './componentPublicInstance'\r\nimport { warn } from './warning'\r\nimport { VNodeChild } from './vnode'\r\nimport { callWithAsyncErrorHandling } from './errorHandling'\r\nimport { deepMergeData } from './compat/data'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport {\r\n  CompatConfig,\r\n  isCompatEnabled,\r\n  softAssertCompatEnabled\r\n} from './compat/compatConfig'\r\nimport { OptionMergeFunction } from './apiCreateApp'\r\n\r\n/**\r\n * Interface for declaring custom options.\r\n *\r\n * @example\r\n * ```ts\r\n * declare module '@vue/runtime-core' {\r\n *   interface ComponentCustomOptions {\r\n *     beforeRouteUpdate?(\r\n *       to: Route,\r\n *       from: Route,\r\n *       next: () => void\r\n *     ): void\r\n *   }\r\n * }\r\n * ```\r\n */\r\nexport interface ComponentCustomOptions {}\r\n\r\nexport type RenderFunction = () => VNodeChild\r\n\r\ntype ExtractOptionProp<T> = T extends ComponentOptionsBase<\r\n  infer P, // Props\r\n  any, // RawBindings\r\n  any, // D\r\n  any, // C\r\n  any, // M\r\n  any, // Mixin\r\n  any, // Extends\r\n  any // EmitsOptions\r\n>\r\n  ? unknown extends P\r\n    ? {}\r\n    : P\r\n  : {}\r\n\r\nexport interface ComponentOptionsBase<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions,\r\n  M extends MethodOptions,\r\n  Mixin extends ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin,\r\n  E extends EmitsOptions,\r\n  EE extends string = string,\r\n  Defaults = {}\r\n> extends LegacyOptions<Props, D, C, M, Mixin, Extends>,\r\n    ComponentInternalOptions,\r\n    ComponentCustomOptions {\r\n  setup?: (\r\n    this: void,\r\n    props: Readonly<\r\n      LooseRequired<\r\n        Props &\r\n          UnionToIntersection<ExtractOptionProp<Mixin>> &\r\n          UnionToIntersection<ExtractOptionProp<Extends>>\r\n      >\r\n    >,\r\n    ctx: SetupContext<E>\r\n  ) => Promise<RawBindings> | RawBindings | RenderFunction | void\r\n  name?: string\r\n  template?: string | object // can be a direct DOM node\r\n  // Note: we are intentionally using the signature-less `Function` type here\r\n  // since any type with signature will cause the whole inference to fail when\r\n  // the return expression contains reference to `this`.\r\n  // Luckily `render()` doesn't need any arguments nor does it care about return\r\n  // type.\r\n  render?: Function\r\n  components?: Record<string, Component>\r\n  directives?: Record<string, Directive>\r\n  inheritAttrs?: boolean\r\n  emits?: (E | EE[]) & ThisType<void>\r\n  // TODO infer public instance type based on exposed keys\r\n  expose?: string[]\r\n  serverPrefetch?(): Promise<any>\r\n\r\n  // Runtime compiler only -----------------------------------------------------\r\n  compilerOptions?: RuntimeCompilerOptions\r\n\r\n  // Internal ------------------------------------------------------------------\r\n\r\n  /**\r\n   * SSR only. This is produced by compiler-ssr and attached in compiler-sfc\r\n   * not user facing, so the typing is lax and for test only.\r\n   * @internal\r\n   */\r\n  ssrRender?: (\r\n    ctx: any,\r\n    push: (item: any) => void,\r\n    parentInstance: ComponentInternalInstance,\r\n    attrs: Data | undefined,\r\n    // for compiler-optimized bindings\r\n    $props: ComponentInternalInstance['props'],\r\n    $setup: ComponentInternalInstance['setupState'],\r\n    $data: ComponentInternalInstance['data'],\r\n    $options: ComponentInternalInstance['ctx']\r\n  ) => void\r\n\r\n  /**\r\n   * Only generated by compiler-sfc to mark a ssr render function inlined and\r\n   * returned from setup()\r\n   * @internal\r\n   */\r\n  __ssrInlineRender?: boolean\r\n\r\n  /**\r\n   * marker for AsyncComponentWrapper\r\n   * @internal\r\n   */\r\n  __asyncLoader?: () => Promise<ConcreteComponent>\r\n  /**\r\n   * the inner component resolved by the AsyncComponentWrapper\r\n   * @internal\r\n   */\r\n  __asyncResolved?: ConcreteComponent\r\n\r\n  // Type differentiators ------------------------------------------------------\r\n\r\n  // Note these are internal but need to be exposed in d.ts for type inference\r\n  // to work!\r\n\r\n  // type-only differentiator to separate OptionWithoutProps from a constructor\r\n  // type returned by defineComponent() or FunctionalComponent\r\n  call?: (this: unknown, ...args: unknown[]) => never\r\n  // type-only differentiators for built-in Vnode types\r\n  __isFragment?: never\r\n  __isTeleport?: never\r\n  __isSuspense?: never\r\n\r\n  __defaults?: Defaults\r\n}\r\n\r\n/**\r\n * Subset of compiler options that makes sense for the runtime.\r\n */\r\nexport interface RuntimeCompilerOptions {\r\n  isCustomElement?: (tag: string) => boolean\r\n  whitespace?: 'preserve' | 'condense'\r\n  comments?: boolean\r\n  delimiters?: [string, string]\r\n}\r\n\r\nexport type ComponentOptionsWithoutProps<\r\n  Props = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  PE = Props & EmitsToProps<E>\r\n> = ComponentOptionsBase<\r\n  PE,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  {}\r\n> & {\r\n  props?: undefined\r\n} & ThisType<\r\n    CreateComponentPublicInstance<PE, RawBindings, D, C, M, Mixin, Extends, E>\r\n  >\r\n\r\nexport type ComponentOptionsWithArrayProps<\r\n  PropNames extends string = string,\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  Props = Readonly<{ [key in PropNames]?: any }> & EmitsToProps<E>\r\n> = ComponentOptionsBase<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  {}\r\n> & {\r\n  props: PropNames[]\r\n} & ThisType<\r\n    CreateComponentPublicInstance<\r\n      Props,\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E\r\n    >\r\n  >\r\n\r\nexport type ComponentOptionsWithObjectProps<\r\n  PropsOptions = ComponentObjectPropsOptions,\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  Props = Readonly<ExtractPropTypes<PropsOptions>> & EmitsToProps<E>,\r\n  Defaults = ExtractDefaultPropTypes<PropsOptions>\r\n> = ComponentOptionsBase<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  Defaults\r\n> & {\r\n  props: PropsOptions & ThisType<void>\r\n} & ThisType<\r\n    CreateComponentPublicInstance<\r\n      Props,\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E,\r\n      Props,\r\n      Defaults,\r\n      false\r\n    >\r\n  >\r\n\r\nexport type ComponentOptions<\r\n  Props = {},\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = any,\r\n  M extends MethodOptions = any,\r\n  Mixin extends ComponentOptionsMixin = any,\r\n  Extends extends ComponentOptionsMixin = any,\r\n  E extends EmitsOptions = any\r\n> = ComponentOptionsBase<Props, RawBindings, D, C, M, Mixin, Extends, E> &\r\n  ThisType<\r\n    CreateComponentPublicInstance<\r\n      {},\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E,\r\n      Readonly<Props>\r\n    >\r\n  >\r\n\r\nexport type ComponentOptionsMixin = ComponentOptionsBase<\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any\r\n>\r\n\r\nexport type ComputedOptions = Record<\r\n  string,\r\n  ComputedGetter<any> | WritableComputedOptions<any>\r\n>\r\n\r\nexport interface MethodOptions {\r\n  [key: string]: Function\r\n}\r\n\r\nexport type ExtractComputedReturns<T extends any> = {\r\n  [key in keyof T]: T[key] extends { get: (...args: any[]) => infer TReturn }\r\n    ? TReturn\r\n    : T[key] extends (...args: any[]) => infer TReturn\r\n    ? TReturn\r\n    : never\r\n}\r\n\r\nexport type ObjectWatchOptionItem = {\r\n  handler: WatchCallback | string\r\n} & WatchOptions\r\n\r\ntype WatchOptionItem = string | WatchCallback | ObjectWatchOptionItem\r\n\r\ntype ComponentWatchOptionItem = WatchOptionItem | WatchOptionItem[]\r\n\r\ntype ComponentWatchOptions = Record<string, ComponentWatchOptionItem>\r\n\r\nexport type ComponentProvideOptions = ObjectProvideOptions | Function\r\n\r\ntype ObjectProvideOptions = Record<string | symbol, unknown>\r\n\r\ntype ComponentInjectOptions = string[] | ObjectInjectOptions\r\n\r\ntype ObjectInjectOptions = Record<\r\n  string | symbol,\r\n  string | symbol | { from?: string | symbol; default?: unknown }\r\n>\r\n\r\ninterface LegacyOptions<\r\n  Props,\r\n  D,\r\n  C extends ComputedOptions,\r\n  M extends MethodOptions,\r\n  Mixin extends ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin\r\n> {\r\n  compatConfig?: CompatConfig\r\n\r\n  // allow any custom options\r\n  [key: string]: any\r\n\r\n  // state\r\n  // Limitation: we cannot expose RawBindings on the `this` context for data\r\n  // since that leads to some sort of circular inference and breaks ThisType\r\n  // for the entire component.\r\n  data?: (\r\n    this: CreateComponentPublicInstance<\r\n      Props,\r\n      {},\r\n      {},\r\n      {},\r\n      MethodOptions,\r\n      Mixin,\r\n      Extends\r\n    >,\r\n    vm: CreateComponentPublicInstance<\r\n      Props,\r\n      {},\r\n      {},\r\n      {},\r\n      MethodOptions,\r\n      Mixin,\r\n      Extends\r\n    >\r\n  ) => D\r\n  computed?: C\r\n  methods?: M\r\n  watch?: ComponentWatchOptions\r\n  provide?: ComponentProvideOptions\r\n  inject?: ComponentInjectOptions\r\n\r\n  // assets\r\n  filters?: Record<string, Function>\r\n\r\n  // composition\r\n  mixins?: Mixin[]\r\n  extends?: Extends\r\n\r\n  // lifecycle\r\n  beforeCreate?(): void\r\n  created?(): void\r\n  beforeMount?(): void\r\n  mounted?(): void\r\n  beforeUpdate?(): void\r\n  updated?(): void\r\n  activated?(): void\r\n  deactivated?(): void\r\n  /** @deprecated use `beforeUnmount` instead */\r\n  beforeDestroy?(): void\r\n  beforeUnmount?(): void\r\n  /** @deprecated use `unmounted` instead */\r\n  destroyed?(): void\r\n  unmounted?(): void\r\n  renderTracked?: DebuggerHook\r\n  renderTriggered?: DebuggerHook\r\n  errorCaptured?: ErrorCapturedHook\r\n\r\n  /**\r\n   * runtime compile only\r\n   * @deprecated use `compilerOptions.delimiters` instead.\r\n   */\r\n  delimiters?: [string, string]\r\n\r\n  /**\r\n   * #3468\r\n   *\r\n   * type-only, used to assist Mixin's type inference,\r\n   * typescript will try to simplify the inferred `Mixin` type,\r\n   * with the `__differentiator`, typescript won't be able to combine different mixins,\r\n   * because the `__differentiator` will be different\r\n   */\r\n  __differentiator?: keyof D | keyof C | keyof M\r\n}\r\n\r\ntype MergedHook<T = () => void> = T | T[]\r\n\r\nexport type MergedComponentOptions = ComponentOptions &\r\n  MergedComponentOptionsOverride\r\n\r\nexport type MergedComponentOptionsOverride = {\r\n  beforeCreate?: MergedHook\r\n  created?: MergedHook\r\n  beforeMount?: MergedHook\r\n  mounted?: MergedHook\r\n  beforeUpdate?: MergedHook\r\n  updated?: MergedHook\r\n  activated?: MergedHook\r\n  deactivated?: MergedHook\r\n  /** @deprecated use `beforeUnmount` instead */\r\n  beforeDestroy?: MergedHook\r\n  beforeUnmount?: MergedHook\r\n  /** @deprecated use `unmounted` instead */\r\n  destroyed?: MergedHook\r\n  unmounted?: MergedHook\r\n  renderTracked?: MergedHook<DebuggerHook>\r\n  renderTriggered?: MergedHook<DebuggerHook>\r\n  errorCaptured?: MergedHook<ErrorCapturedHook>\r\n}\r\n\r\nexport type OptionTypesKeys = 'P' | 'B' | 'D' | 'C' | 'M' | 'Defaults'\r\n\r\nexport type OptionTypesType<\r\n  P = {},\r\n  B = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Defaults = {}\r\n> = {\r\n  P: P\r\n  B: B\r\n  D: D\r\n  C: C\r\n  M: M\r\n  Defaults: Defaults\r\n}\r\n\r\nconst enum OptionTypes {\r\n  PROPS = 'Props',\r\n  DATA = 'Data',\r\n  COMPUTED = 'Computed',\r\n  METHODS = 'Methods',\r\n  INJECT = 'Inject'\r\n}\r\n\r\nfunction createDuplicateChecker() {\r\n  const cache = Object.create(null)\r\n  return (type: OptionTypes, key: string) => {\r\n    if (cache[key]) {\r\n      warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`)\r\n    } else {\r\n      cache[key] = type\r\n    }\r\n  }\r\n}\r\n\r\nexport let shouldCacheAccess = true\r\n\r\nexport function applyOptions(instance: ComponentInternalInstance) {\r\n  const options = resolveMergedOptions(instance)\r\n  const publicThis = instance.proxy! as any\r\n  const ctx = instance.ctx\r\n\r\n  // do not cache property access on public proxy during state initialization\r\n  shouldCacheAccess = false\r\n\r\n  // call beforeCreate first before accessing other options since\r\n  // the hook may mutate resolved options (#2791)\r\n  if (options.beforeCreate) {\r\n    callHook(options.beforeCreate, instance, LifecycleHooks.BEFORE_CREATE)\r\n  }\r\n\r\n  const {\r\n    // state\r\n    data: dataOptions,\r\n    computed: computedOptions,\r\n    methods,\r\n    watch: watchOptions,\r\n    provide: provideOptions,\r\n    inject: injectOptions,\r\n    // lifecycle\r\n    created,\r\n    beforeMount,\r\n    mounted,\r\n    beforeUpdate,\r\n    updated,\r\n    activated,\r\n    deactivated,\r\n    beforeDestroy,\r\n    beforeUnmount,\r\n    destroyed,\r\n    unmounted,\r\n    render,\r\n    renderTracked,\r\n    renderTriggered,\r\n    errorCaptured,\r\n    serverPrefetch,\r\n    // public API\r\n    expose,\r\n    inheritAttrs,\r\n    // assets\r\n    components,\r\n    directives,\r\n    filters\r\n  } = options\r\n\r\n  const checkDuplicateProperties = __DEV__ ? createDuplicateChecker() : null\r\n\r\n  if (__DEV__) {\r\n    const [propsOptions] = instance.propsOptions\r\n    if (propsOptions) {\r\n      for (const key in propsOptions) {\r\n        checkDuplicateProperties!(OptionTypes.PROPS, key)\r\n      }\r\n    }\r\n  }\r\n\r\n  // options initialization order (to be consistent with Vue 2):\r\n  // - props (already done outside of this function)\r\n  // - inject\r\n  // - methods\r\n  // - data (deferred since it relies on `this` access)\r\n  // - computed\r\n  // - watch (deferred since it relies on `this` access)\r\n\r\n  if (injectOptions) {\r\n    resolveInjections(\r\n      injectOptions,\r\n      ctx,\r\n      checkDuplicateProperties,\r\n      instance.appContext.config.unwrapInjectedRef\r\n    )\r\n  }\r\n\r\n  if (methods) {\r\n    for (const key in methods) {\r\n      const methodHandler = (methods as MethodOptions)[key]\r\n      if (isFunction(methodHandler)) {\r\n        // In dev mode, we use the `createRenderContext` function to define\r\n        // methods to the proxy target, and those are read-only but\r\n        // reconfigurable, so it needs to be redefined here\r\n        if (__DEV__) {\r\n          Object.defineProperty(ctx, key, {\r\n            value: methodHandler.bind(publicThis),\r\n            configurable: true,\r\n            enumerable: true,\r\n            writable: true\r\n          })\r\n        } else {\r\n          ctx[key] = methodHandler.bind(publicThis)\r\n        }\r\n        if (__DEV__) {\r\n          checkDuplicateProperties!(OptionTypes.METHODS, key)\r\n        }\r\n      } else if (__DEV__) {\r\n        warn(\r\n          `Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n            `Did you reference the function correctly?`\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  if (dataOptions) {\r\n    if (__DEV__ && !isFunction(dataOptions)) {\r\n      warn(\r\n        `The data option must be a function. ` +\r\n          `Plain object usage is no longer supported.`\r\n      )\r\n    }\r\n    const data = dataOptions.call(publicThis, publicThis)\r\n    if (__DEV__ && isPromise(data)) {\r\n      warn(\r\n        `data() returned a Promise - note data() cannot be async; If you ` +\r\n          `intend to perform data fetching before component renders, use ` +\r\n          `async setup() + <Suspense>.`\r\n      )\r\n    }\r\n    if (!isObject(data)) {\r\n      __DEV__ && warn(`data() should return an object.`)\r\n    } else {\r\n      instance.data = reactive(data)\r\n      if (__DEV__) {\r\n        for (const key in data) {\r\n          checkDuplicateProperties!(OptionTypes.DATA, key)\r\n          // expose data on ctx during dev\r\n          if (!isReservedPrefix(key[0])) {\r\n            Object.defineProperty(ctx, key, {\r\n              configurable: true,\r\n              enumerable: true,\r\n              get: () => data[key],\r\n              set: NOOP\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // state initialization complete at this point - start caching access\r\n  shouldCacheAccess = true\r\n\r\n  if (computedOptions) {\r\n    for (const key in computedOptions) {\r\n      const opt = (computedOptions as ComputedOptions)[key]\r\n      const get = isFunction(opt)\r\n        ? opt.bind(publicThis, publicThis)\r\n        : isFunction(opt.get)\r\n        ? opt.get.bind(publicThis, publicThis)\r\n        : NOOP\r\n      if (__DEV__ && get === NOOP) {\r\n        warn(`Computed property \"${key}\" has no getter.`)\r\n      }\r\n      const set =\r\n        !isFunction(opt) && isFunction(opt.set)\r\n          ? opt.set.bind(publicThis)\r\n          : __DEV__\r\n          ? () => {\r\n              warn(\r\n                `Write operation failed: computed property \"${key}\" is readonly.`\r\n              )\r\n            }\r\n          : NOOP\r\n      const c = computed({\r\n        get,\r\n        set\r\n      })\r\n      Object.defineProperty(ctx, key, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get: () => c.value,\r\n        set: v => (c.value = v)\r\n      })\r\n      if (__DEV__) {\r\n        checkDuplicateProperties!(OptionTypes.COMPUTED, key)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (watchOptions) {\r\n    for (const key in watchOptions) {\r\n      createWatcher(watchOptions[key], ctx, publicThis, key)\r\n    }\r\n  }\r\n\r\n  if (provideOptions) {\r\n    const provides = isFunction(provideOptions)\r\n      ? provideOptions.call(publicThis)\r\n      : provideOptions\r\n    Reflect.ownKeys(provides).forEach(key => {\r\n      provide(key, provides[key])\r\n    })\r\n  }\r\n\r\n  if (created) {\r\n    callHook(created, instance, LifecycleHooks.CREATED)\r\n  }\r\n\r\n  function registerLifecycleHook(\r\n    register: Function,\r\n    hook?: Function | Function[]\r\n  ) {\r\n    if (isArray(hook)) {\r\n      hook.forEach(_hook => register(_hook.bind(publicThis)))\r\n    } else if (hook) {\r\n      register((hook as Function).bind(publicThis))\r\n    }\r\n  }\r\n\r\n  registerLifecycleHook(onBeforeMount, beforeMount)\r\n  registerLifecycleHook(onMounted, mounted)\r\n  registerLifecycleHook(onBeforeUpdate, beforeUpdate)\r\n  registerLifecycleHook(onUpdated, updated)\r\n  registerLifecycleHook(onActivated, activated)\r\n  registerLifecycleHook(onDeactivated, deactivated)\r\n  registerLifecycleHook(onErrorCaptured, errorCaptured)\r\n  registerLifecycleHook(onRenderTracked, renderTracked)\r\n  registerLifecycleHook(onRenderTriggered, renderTriggered)\r\n  registerLifecycleHook(onBeforeUnmount, beforeUnmount)\r\n  registerLifecycleHook(onUnmounted, unmounted)\r\n  registerLifecycleHook(onServerPrefetch, serverPrefetch)\r\n\r\n  if (__COMPAT__) {\r\n    if (\r\n      beforeDestroy &&\r\n      softAssertCompatEnabled(DeprecationTypes.OPTIONS_BEFORE_DESTROY, instance)\r\n    ) {\r\n      registerLifecycleHook(onBeforeUnmount, beforeDestroy)\r\n    }\r\n    if (\r\n      destroyed &&\r\n      softAssertCompatEnabled(DeprecationTypes.OPTIONS_DESTROYED, instance)\r\n    ) {\r\n      registerLifecycleHook(onUnmounted, destroyed)\r\n    }\r\n  }\r\n\r\n  if (isArray(expose)) {\r\n    if (expose.length) {\r\n      const exposed = instance.exposed || (instance.exposed = {})\r\n      expose.forEach(key => {\r\n        Object.defineProperty(exposed, key, {\r\n          get: () => publicThis[key],\r\n          set: val => (publicThis[key] = val)\r\n        })\r\n      })\r\n    } else if (!instance.exposed) {\r\n      instance.exposed = {}\r\n    }\r\n  }\r\n\r\n  // options that are handled when creating the instance but also need to be\r\n  // applied from mixins\r\n  if (render && instance.render === NOOP) {\r\n    instance.render = render as InternalRenderFunction\r\n  }\r\n  if (inheritAttrs != null) {\r\n    instance.inheritAttrs = inheritAttrs\r\n  }\r\n\r\n  // asset options.\r\n  if (components) instance.components = components as any\r\n  if (directives) instance.directives = directives\r\n  if (\r\n    __COMPAT__ &&\r\n    filters &&\r\n    isCompatEnabled(DeprecationTypes.FILTERS, instance)\r\n  ) {\r\n    instance.filters = filters\r\n  }\r\n}\r\n\r\nexport function resolveInjections(\r\n  injectOptions: ComponentInjectOptions,\r\n  ctx: any,\r\n  checkDuplicateProperties = NOOP as any,\r\n  unwrapRef = false\r\n) {\r\n  if (isArray(injectOptions)) {\r\n    injectOptions = normalizeInject(injectOptions)!\r\n  }\r\n  for (const key in injectOptions) {\r\n    const opt = (injectOptions as ObjectInjectOptions)[key]\r\n    let injected: unknown\r\n    if (isObject(opt)) {\r\n      if ('default' in opt) {\r\n        injected = inject(\r\n          opt.from || key,\r\n          opt.default,\r\n          true /* treat default function as factory */\r\n        )\r\n      } else {\r\n        injected = inject(opt.from || key)\r\n      }\r\n    } else {\r\n      injected = inject(opt)\r\n    }\r\n    if (isRef(injected)) {\r\n      // TODO remove the check in 3.3\r\n      if (unwrapRef) {\r\n        Object.defineProperty(ctx, key, {\r\n          enumerable: true,\r\n          configurable: true,\r\n          get: () => (injected as Ref).value,\r\n          set: v => ((injected as Ref).value = v)\r\n        })\r\n      } else {\r\n        if (__DEV__) {\r\n          warn(\r\n            `injected property \"${key}\" is a ref and will be auto-unwrapped ` +\r\n              `and no longer needs \\`.value\\` in the next minor release. ` +\r\n              `To opt-in to the new behavior now, ` +\r\n              `set \\`app.config.unwrapInjectedRef = true\\` (this config is ` +\r\n              `temporary and will not be needed in the future.)`\r\n          )\r\n        }\r\n        ctx[key] = injected\r\n      }\r\n    } else {\r\n      ctx[key] = injected\r\n    }\r\n    if (__DEV__) {\r\n      checkDuplicateProperties!(OptionTypes.INJECT, key)\r\n    }\r\n  }\r\n}\r\n\r\nfunction callHook(\r\n  hook: Function,\r\n  instance: ComponentInternalInstance,\r\n  type: LifecycleHooks\r\n) {\r\n  callWithAsyncErrorHandling(\r\n    isArray(hook)\r\n      ? hook.map(h => h.bind(instance.proxy!))\r\n      : hook.bind(instance.proxy!),\r\n    instance,\r\n    type\r\n  )\r\n}\r\n\r\nexport function createWatcher(\r\n  raw: ComponentWatchOptionItem,\r\n  ctx: Data,\r\n  publicThis: ComponentPublicInstance,\r\n  key: string\r\n) {\r\n  const getter = key.includes('.')\r\n    ? createPathGetter(publicThis, key)\r\n    : () => (publicThis as any)[key]\r\n  if (isString(raw)) {\r\n    const handler = ctx[raw]\r\n    if (isFunction(handler)) {\r\n      watch(getter, handler as WatchCallback)\r\n    } else if (__DEV__) {\r\n      warn(`Invalid watch handler specified by key \"${raw}\"`, handler)\r\n    }\r\n  } else if (isFunction(raw)) {\r\n    watch(getter, raw.bind(publicThis))\r\n  } else if (isObject(raw)) {\r\n    if (isArray(raw)) {\r\n      raw.forEach(r => createWatcher(r, ctx, publicThis, key))\r\n    } else {\r\n      const handler = isFunction(raw.handler)\r\n        ? raw.handler.bind(publicThis)\r\n        : (ctx[raw.handler] as WatchCallback)\r\n      if (isFunction(handler)) {\r\n        watch(getter, handler, raw)\r\n      } else if (__DEV__) {\r\n        warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler)\r\n      }\r\n    }\r\n  } else if (__DEV__) {\r\n    warn(`Invalid watch option: \"${key}\"`, raw)\r\n  }\r\n}\r\n\r\n/**\r\n * Resolve merged options and cache it on the component.\r\n * This is done only once per-component since the merging does not involve\r\n * instances.\r\n */\r\nexport function resolveMergedOptions(\r\n  instance: ComponentInternalInstance\r\n): MergedComponentOptions {\r\n  const base = instance.type as ComponentOptions\r\n  const { mixins, extends: extendsOptions } = base\r\n  const {\r\n    mixins: globalMixins,\r\n    optionsCache: cache,\r\n    config: { optionMergeStrategies }\r\n  } = instance.appContext\r\n  const cached = cache.get(base)\r\n\r\n  let resolved: MergedComponentOptions\r\n\r\n  if (cached) {\r\n    resolved = cached\r\n  } else if (!globalMixins.length && !mixins && !extendsOptions) {\r\n    if (\r\n      __COMPAT__ &&\r\n      isCompatEnabled(DeprecationTypes.PRIVATE_APIS, instance)\r\n    ) {\r\n      resolved = extend({}, base) as MergedComponentOptions\r\n      resolved.parent = instance.parent && instance.parent.proxy\r\n      resolved.propsData = instance.vnode.props\r\n    } else {\r\n      resolved = base as MergedComponentOptions\r\n    }\r\n  } else {\r\n    resolved = {}\r\n    if (globalMixins.length) {\r\n      globalMixins.forEach(m =>\r\n        mergeOptions(resolved, m, optionMergeStrategies, true)\r\n      )\r\n    }\r\n    mergeOptions(resolved, base, optionMergeStrategies)\r\n  }\r\n\r\n  cache.set(base, resolved)\r\n  return resolved\r\n}\r\n\r\nexport function mergeOptions(\r\n  to: any,\r\n  from: any,\r\n  strats: Record<string, OptionMergeFunction>,\r\n  asMixin = false\r\n) {\r\n  if (__COMPAT__ && isFunction(from)) {\r\n    from = from.options\r\n  }\r\n\r\n  const { mixins, extends: extendsOptions } = from\r\n\r\n  if (extendsOptions) {\r\n    mergeOptions(to, extendsOptions, strats, true)\r\n  }\r\n  if (mixins) {\r\n    mixins.forEach((m: ComponentOptionsMixin) =>\r\n      mergeOptions(to, m, strats, true)\r\n    )\r\n  }\r\n\r\n  for (const key in from) {\r\n    if (asMixin && key === 'expose') {\r\n      __DEV__ &&\r\n        warn(\r\n          `\"expose\" option is ignored when declared in mixins or extends. ` +\r\n            `It should only be declared in the base component itself.`\r\n        )\r\n    } else {\r\n      const strat = internalOptionMergeStrats[key] || (strats && strats[key])\r\n      to[key] = strat ? strat(to[key], from[key]) : from[key]\r\n    }\r\n  }\r\n  return to\r\n}\r\n\r\nexport const internalOptionMergeStrats: Record<string, Function> = {\r\n  data: mergeDataFn,\r\n  props: mergeObjectOptions, // TODO\r\n  emits: mergeObjectOptions, // TODO\r\n  // objects\r\n  methods: mergeObjectOptions,\r\n  computed: mergeObjectOptions,\r\n  // lifecycle\r\n  beforeCreate: mergeAsArray,\r\n  created: mergeAsArray,\r\n  beforeMount: mergeAsArray,\r\n  mounted: mergeAsArray,\r\n  beforeUpdate: mergeAsArray,\r\n  updated: mergeAsArray,\r\n  beforeDestroy: mergeAsArray,\r\n  beforeUnmount: mergeAsArray,\r\n  destroyed: mergeAsArray,\r\n  unmounted: mergeAsArray,\r\n  activated: mergeAsArray,\r\n  deactivated: mergeAsArray,\r\n  errorCaptured: mergeAsArray,\r\n  serverPrefetch: mergeAsArray,\r\n  // assets\r\n  components: mergeObjectOptions,\r\n  directives: mergeObjectOptions,\r\n  // watch\r\n  watch: mergeWatchOptions,\r\n  // provide / inject\r\n  provide: mergeDataFn,\r\n  inject: mergeInject\r\n}\r\n\r\nif (__COMPAT__) {\r\n  internalOptionMergeStrats.filters = mergeObjectOptions\r\n}\r\n\r\nfunction mergeDataFn(to: any, from: any) {\r\n  if (!from) {\r\n    return to\r\n  }\r\n  if (!to) {\r\n    return from\r\n  }\r\n  return function mergedDataFn(this: ComponentPublicInstance) {\r\n    return (\r\n      __COMPAT__ && isCompatEnabled(DeprecationTypes.OPTIONS_DATA_MERGE, null)\r\n        ? deepMergeData\r\n        : extend\r\n    )(\r\n      isFunction(to) ? to.call(this, this) : to,\r\n      isFunction(from) ? from.call(this, this) : from\r\n    )\r\n  }\r\n}\r\n\r\nfunction mergeInject(\r\n  to: ComponentInjectOptions | undefined,\r\n  from: ComponentInjectOptions\r\n) {\r\n  return mergeObjectOptions(normalizeInject(to), normalizeInject(from))\r\n}\r\n\r\nfunction normalizeInject(\r\n  raw: ComponentInjectOptions | undefined\r\n): ObjectInjectOptions | undefined {\r\n  if (isArray(raw)) {\r\n    const res: ObjectInjectOptions = {}\r\n    for (let i = 0; i < raw.length; i++) {\r\n      res[raw[i]] = raw[i]\r\n    }\r\n    return res\r\n  }\r\n  return raw\r\n}\r\n\r\nfunction mergeAsArray<T = Function>(to: T[] | T | undefined, from: T | T[]) {\r\n  return to ? [...new Set([].concat(to as any, from as any))] : from\r\n}\r\n\r\nfunction mergeObjectOptions(to: Object | undefined, from: Object | undefined) {\r\n  return to ? extend(extend(Object.create(null), to), from) : from\r\n}\r\n\r\nfunction mergeWatchOptions(\r\n  to: ComponentWatchOptions | undefined,\r\n  from: ComponentWatchOptions | undefined\r\n) {\r\n  if (!to) return from\r\n  if (!from) return to\r\n  const merged = extend(Object.create(null), to)\r\n  for (const key in from) {\r\n    merged[key] = mergeAsArray(to[key], from[key])\r\n  }\r\n  return merged\r\n}\r\n","import {\r\n  toRaw,\r\n  shallowReactive,\r\n  trigger,\r\n  TriggerOpTypes\r\n} from '@vue/reactivity'\r\nimport {\r\n  EMPTY_OBJ,\r\n  camelize,\r\n  hyphenate,\r\n  capitalize,\r\n  isString,\r\n  isFunction,\r\n  isArray,\r\n  isObject,\r\n  hasOwn,\r\n  toRawType,\r\n  PatchFlags,\r\n  makeMap,\r\n  isReservedProp,\r\n  EMPTY_ARR,\r\n  def,\r\n  extend,\r\n  isOn,\r\n  IfAny\r\n} from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport {\r\n  Data,\r\n  ComponentInternalInstance,\r\n  ComponentOptions,\r\n  ConcreteComponent,\r\n  setCurrentInstance,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport { isEmitListener } from './componentEmits'\r\nimport { InternalObjectKey } from './vnode'\r\nimport { AppContext } from './apiCreateApp'\r\nimport { createPropsDefaultThis } from './compat/props'\r\nimport { isCompatEnabled, softAssertCompatEnabled } from './compat/compatConfig'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport { shouldSkipAttr } from './compat/attrsFallthrough'\r\n\r\nexport type ComponentPropsOptions<P = Data> =\r\n  | ComponentObjectPropsOptions<P>\r\n  | string[]\r\n\r\nexport type ComponentObjectPropsOptions<P = Data> = {\r\n  [K in keyof P]: Prop<P[K]> | null\r\n}\r\n\r\nexport type Prop<T, D = T> = PropOptions<T, D> | PropType<T>\r\n\r\ntype DefaultFactory<T> = (props: Data) => T | null | undefined\r\n\r\nexport interface PropOptions<T = any, D = T> {\r\n  type?: PropType<T> | true | null\r\n  required?: boolean\r\n  default?: D | DefaultFactory<D> | null | undefined | object\r\n  validator?(value: unknown): boolean\r\n}\r\n\r\nexport type PropType<T> = PropConstructor<T> | PropConstructor<T>[]\r\n\r\ntype PropConstructor<T = any> =\r\n  | { new (...args: any[]): T & {} }\r\n  | { (): T }\r\n  | PropMethod<T>\r\n\r\ntype PropMethod<T, TConstructor = any> = [T] extends [\r\n  ((...args: any) => any) | undefined\r\n] // if is function with args, allowing non-required functions\r\n  ? { new (): TConstructor; (): T; readonly prototype: TConstructor } // Create Function like constructor\r\n  : never\r\n\r\ntype RequiredKeys<T> = {\r\n  [K in keyof T]: T[K] extends\r\n    | { required: true }\r\n    | { default: any }\r\n    // don't mark Boolean props as undefined\r\n    | BooleanConstructor\r\n    | { type: BooleanConstructor }\r\n    ? T[K] extends { default: undefined | (() => undefined) }\r\n      ? never\r\n      : K\r\n    : never\r\n}[keyof T]\r\n\r\ntype OptionalKeys<T> = Exclude<keyof T, RequiredKeys<T>>\r\n\r\ntype DefaultKeys<T> = {\r\n  [K in keyof T]: T[K] extends\r\n    | { default: any }\r\n    // Boolean implicitly defaults to false\r\n    | BooleanConstructor\r\n    | { type: BooleanConstructor }\r\n    ? T[K] extends { type: BooleanConstructor; required: true } // not default if Boolean is marked as required\r\n      ? never\r\n      : K\r\n    : never\r\n}[keyof T]\r\n\r\ntype InferPropType<T> = [T] extends [null]\r\n  ? any // null & true would fail to infer\r\n  : [T] extends [{ type: null | true }]\r\n  ? any // As TS issue https://github.com/Microsoft/TypeScript/issues/14829 // somehow `ObjectConstructor` when inferred from { (): T } becomes `any` // `BooleanConstructor` when inferred from PropConstructor(with PropMethod) becomes `Boolean`\r\n  : [T] extends [ObjectConstructor | { type: ObjectConstructor }]\r\n  ? Record<string, any>\r\n  : [T] extends [BooleanConstructor | { type: BooleanConstructor }]\r\n  ? boolean\r\n  : [T] extends [DateConstructor | { type: DateConstructor }]\r\n  ? Date\r\n  : [T] extends [(infer U)[] | { type: (infer U)[] }]\r\n  ? U extends DateConstructor\r\n    ? Date | InferPropType<U>\r\n    : InferPropType<U>\r\n  : [T] extends [Prop<infer V, infer D>]\r\n  ? unknown extends V\r\n    ? IfAny<V, V, D>\r\n    : V\r\n  : T\r\n\r\nexport type ExtractPropTypes<O> = {\r\n  // use `keyof Pick<O, RequiredKeys<O>>` instead of `RequiredKeys<O>` to support IDE features\r\n  [K in keyof Pick<O, RequiredKeys<O>>]: InferPropType<O[K]>\r\n} & {\r\n  // use `keyof Pick<O, OptionalKeys<O>>` instead of `OptionalKeys<O>` to support IDE features\r\n  [K in keyof Pick<O, OptionalKeys<O>>]?: InferPropType<O[K]>\r\n}\r\n\r\nconst enum BooleanFlags {\r\n  shouldCast,\r\n  shouldCastTrue\r\n}\r\n\r\n// extract props which defined with default from prop options\r\nexport type ExtractDefaultPropTypes<O> = O extends object\r\n  ? // use `keyof Pick<O, DefaultKeys<O>>` instead of `DefaultKeys<O>` to support IDE features\r\n    { [K in keyof Pick<O, DefaultKeys<O>>]: InferPropType<O[K]> }\r\n  : {}\r\n\r\ntype NormalizedProp =\r\n  | null\r\n  | (PropOptions & {\r\n      [BooleanFlags.shouldCast]?: boolean\r\n      [BooleanFlags.shouldCastTrue]?: boolean\r\n    })\r\n\r\n// normalized value is a tuple of the actual normalized options\r\n// and an array of prop keys that need value casting (booleans and defaults)\r\nexport type NormalizedProps = Record<string, NormalizedProp>\r\nexport type NormalizedPropsOptions = [NormalizedProps, string[]] | []\r\n\r\nexport function initProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  isStateful: number, // result of bitwise flag comparison\r\n  isSSR = false\r\n) {\r\n  const props: Data = {}\r\n  const attrs: Data = {}\r\n  def(attrs, InternalObjectKey, 1)\r\n\r\n  instance.propsDefaults = Object.create(null)\r\n\r\n  setFullProps(instance, rawProps, props, attrs)\r\n\r\n  // ensure all declared prop keys are present\r\n  for (const key in instance.propsOptions[0]) {\r\n    if (!(key in props)) {\r\n      props[key] = undefined\r\n    }\r\n  }\r\n\r\n  // validation\r\n  if (__DEV__) {\r\n    validateProps(rawProps || {}, props, instance)\r\n  }\r\n\r\n  if (isStateful) {\r\n    // stateful\r\n    instance.props = isSSR ? props : shallowReactive(props)\r\n  } else {\r\n    if (!instance.type.props) {\r\n      // functional w/ optional props, props === attrs\r\n      instance.props = attrs\r\n    } else {\r\n      // functional w/ declared props\r\n      instance.props = props\r\n    }\r\n  }\r\n  instance.attrs = attrs\r\n}\r\n\r\nexport function updateProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  rawPrevProps: Data | null,\r\n  optimized: boolean\r\n) {\r\n  const {\r\n    props,\r\n    attrs,\r\n    vnode: { patchFlag }\r\n  } = instance\r\n  const rawCurrentProps = toRaw(props)\r\n  const [options] = instance.propsOptions\r\n  let hasAttrsChanged = false\r\n\r\n  if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !(\r\n      __DEV__ &&\r\n      (instance.type.__hmrId ||\r\n        (instance.parent && instance.parent.type.__hmrId))\r\n    ) &&\r\n    (optimized || patchFlag > 0) &&\r\n    !(patchFlag & PatchFlags.FULL_PROPS)\r\n  ) {\r\n    if (patchFlag & PatchFlags.PROPS) {\r\n      // Compiler-generated props & no keys change, just set the updated\r\n      // the props.\r\n      const propsToUpdate = instance.vnode.dynamicProps!\r\n      for (let i = 0; i < propsToUpdate.length; i++) {\r\n        let key = propsToUpdate[i]\r\n        // skip if the prop key is a declared emit event listener\r\n        if (isEmitListener(instance.emitsOptions, key)) {\r\n          continue\r\n        }\r\n        // PROPS flag guarantees rawProps to be non-null\r\n        const value = rawProps![key]\r\n        if (options) {\r\n          // attr / props separation was done on init and will be consistent\r\n          // in this code path, so just check if attrs have it.\r\n          if (hasOwn(attrs, key)) {\r\n            if (value !== attrs[key]) {\r\n              attrs[key] = value\r\n              hasAttrsChanged = true\r\n            }\r\n          } else {\r\n            const camelizedKey = camelize(key)\r\n            props[camelizedKey] = resolvePropValue(\r\n              options,\r\n              rawCurrentProps,\r\n              camelizedKey,\r\n              value,\r\n              instance,\r\n              false /* isAbsent */\r\n            )\r\n          }\r\n        } else {\r\n          if (__COMPAT__) {\r\n            if (isOn(key) && key.endsWith('Native')) {\r\n              key = key.slice(0, -6) // remove Native postfix\r\n            } else if (shouldSkipAttr(key, instance)) {\r\n              continue\r\n            }\r\n          }\r\n          if (value !== attrs[key]) {\r\n            attrs[key] = value\r\n            hasAttrsChanged = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // full props update.\r\n    if (setFullProps(instance, rawProps, props, attrs)) {\r\n      hasAttrsChanged = true\r\n    }\r\n    // in case of dynamic props, check if we need to delete keys from\r\n    // the props object\r\n    let kebabKey: string\r\n    for (const key in rawCurrentProps) {\r\n      if (\r\n        !rawProps ||\r\n        // for camelCase\r\n        (!hasOwn(rawProps, key) &&\r\n          // it's possible the original props was passed in as kebab-case\r\n          // and converted to camelCase (#955)\r\n          ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))\r\n      ) {\r\n        if (options) {\r\n          if (\r\n            rawPrevProps &&\r\n            // for camelCase\r\n            (rawPrevProps[key] !== undefined ||\r\n              // for kebab-case\r\n              rawPrevProps[kebabKey!] !== undefined)\r\n          ) {\r\n            props[key] = resolvePropValue(\r\n              options,\r\n              rawCurrentProps,\r\n              key,\r\n              undefined,\r\n              instance,\r\n              true /* isAbsent */\r\n            )\r\n          }\r\n        } else {\r\n          delete props[key]\r\n        }\r\n      }\r\n    }\r\n    // in the case of functional component w/o props declaration, props and\r\n    // attrs point to the same object so it should already have been updated.\r\n    if (attrs !== rawCurrentProps) {\r\n      for (const key in attrs) {\r\n        if (\r\n          !rawProps ||\r\n          (!hasOwn(rawProps, key) &&\r\n            (!__COMPAT__ || !hasOwn(rawProps, key + 'Native')))\r\n        ) {\r\n          delete attrs[key]\r\n          hasAttrsChanged = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // trigger updates for $attrs in case it's used in component slots\r\n  if (hasAttrsChanged) {\r\n    trigger(instance, TriggerOpTypes.SET, '$attrs')\r\n  }\r\n\r\n  if (__DEV__) {\r\n    validateProps(rawProps || {}, props, instance)\r\n  }\r\n}\r\n\r\nfunction setFullProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  props: Data,\r\n  attrs: Data\r\n) {\r\n  const [options, needCastKeys] = instance.propsOptions\r\n  let hasAttrsChanged = false\r\n  let rawCastValues: Data | undefined\r\n  if (rawProps) {\r\n    for (let key in rawProps) {\r\n      // key, ref are reserved and never passed down\r\n      if (isReservedProp(key)) {\r\n        continue\r\n      }\r\n\r\n      if (__COMPAT__) {\r\n        if (key.startsWith('onHook:')) {\r\n          softAssertCompatEnabled(\r\n            DeprecationTypes.INSTANCE_EVENT_HOOKS,\r\n            instance,\r\n            key.slice(2).toLowerCase()\r\n          )\r\n        }\r\n        if (key === 'inline-template') {\r\n          continue\r\n        }\r\n      }\r\n\r\n      const value = rawProps[key]\r\n      // prop option names are camelized during normalization, so to support\r\n      // kebab -> camel conversion here we need to camelize the key.\r\n      let camelKey\r\n      if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n        if (!needCastKeys || !needCastKeys.includes(camelKey)) {\r\n          props[camelKey] = value\r\n        } else {\r\n          ;(rawCastValues || (rawCastValues = {}))[camelKey] = value\r\n        }\r\n      } else if (!isEmitListener(instance.emitsOptions, key)) {\r\n        // Any non-declared (either as a prop or an emitted event) props are put\r\n        // into a separate `attrs` object for spreading. Make sure to preserve\r\n        // original key casing\r\n        if (__COMPAT__) {\r\n          if (isOn(key) && key.endsWith('Native')) {\r\n            key = key.slice(0, -6) // remove Native postfix\r\n          } else if (shouldSkipAttr(key, instance)) {\r\n            continue\r\n          }\r\n        }\r\n        if (!(key in attrs) || value !== attrs[key]) {\r\n          attrs[key] = value\r\n          hasAttrsChanged = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (needCastKeys) {\r\n    const rawCurrentProps = toRaw(props)\r\n    const castValues = rawCastValues || EMPTY_OBJ\r\n    for (let i = 0; i < needCastKeys.length; i++) {\r\n      const key = needCastKeys[i]\r\n      props[key] = resolvePropValue(\r\n        options!,\r\n        rawCurrentProps,\r\n        key,\r\n        castValues[key],\r\n        instance,\r\n        !hasOwn(castValues, key)\r\n      )\r\n    }\r\n  }\r\n\r\n  return hasAttrsChanged\r\n}\r\n\r\nfunction resolvePropValue(\r\n  options: NormalizedProps,\r\n  props: Data,\r\n  key: string,\r\n  value: unknown,\r\n  instance: ComponentInternalInstance,\r\n  isAbsent: boolean\r\n) {\r\n  const opt = options[key]\r\n  if (opt != null) {\r\n    const hasDefault = hasOwn(opt, 'default')\r\n    // default values\r\n    if (hasDefault && value === undefined) {\r\n      const defaultValue = opt.default\r\n      if (opt.type !== Function && isFunction(defaultValue)) {\r\n        const { propsDefaults } = instance\r\n        if (key in propsDefaults) {\r\n          value = propsDefaults[key]\r\n        } else {\r\n          setCurrentInstance(instance)\r\n          value = propsDefaults[key] = defaultValue.call(\r\n            __COMPAT__ &&\r\n              isCompatEnabled(DeprecationTypes.PROPS_DEFAULT_THIS, instance)\r\n              ? createPropsDefaultThis(instance, props, key)\r\n              : null,\r\n            props\r\n          )\r\n          unsetCurrentInstance()\r\n        }\r\n      } else {\r\n        value = defaultValue\r\n      }\r\n    }\r\n    // boolean casting\r\n    if (opt[BooleanFlags.shouldCast]) {\r\n      if (isAbsent && !hasDefault) {\r\n        value = false\r\n      } else if (\r\n        opt[BooleanFlags.shouldCastTrue] &&\r\n        (value === '' || value === hyphenate(key))\r\n      ) {\r\n        value = true\r\n      }\r\n    }\r\n  }\r\n  return value\r\n}\r\n\r\nexport function normalizePropsOptions(\r\n  comp: ConcreteComponent,\r\n  appContext: AppContext,\r\n  asMixin = false\r\n): NormalizedPropsOptions {\r\n  const cache = appContext.propsCache\r\n  const cached = cache.get(comp)\r\n  if (cached) {\r\n    return cached\r\n  }\r\n\r\n  const raw = comp.props\r\n  const normalized: NormalizedPropsOptions[0] = {}\r\n  const needCastKeys: NormalizedPropsOptions[1] = []\r\n\r\n  // apply mixin/extends props\r\n  let hasExtends = false\r\n  if (__FEATURE_OPTIONS_API__ && !isFunction(comp)) {\r\n    const extendProps = (raw: ComponentOptions) => {\r\n      if (__COMPAT__ && isFunction(raw)) {\r\n        raw = raw.options\r\n      }\r\n      hasExtends = true\r\n      const [props, keys] = normalizePropsOptions(raw, appContext, true)\r\n      extend(normalized, props)\r\n      if (keys) needCastKeys.push(...keys)\r\n    }\r\n    if (!asMixin && appContext.mixins.length) {\r\n      appContext.mixins.forEach(extendProps)\r\n    }\r\n    if (comp.extends) {\r\n      extendProps(comp.extends)\r\n    }\r\n    if (comp.mixins) {\r\n      comp.mixins.forEach(extendProps)\r\n    }\r\n  }\r\n\r\n  if (!raw && !hasExtends) {\r\n    cache.set(comp, EMPTY_ARR as any)\r\n    return EMPTY_ARR as any\r\n  }\r\n\r\n  if (isArray(raw)) {\r\n    for (let i = 0; i < raw.length; i++) {\r\n      if (__DEV__ && !isString(raw[i])) {\r\n        warn(`props must be strings when using array syntax.`, raw[i])\r\n      }\r\n      const normalizedKey = camelize(raw[i])\r\n      if (validatePropName(normalizedKey)) {\r\n        normalized[normalizedKey] = EMPTY_OBJ\r\n      }\r\n    }\r\n  } else if (raw) {\r\n    if (__DEV__ && !isObject(raw)) {\r\n      warn(`invalid props options`, raw)\r\n    }\r\n    for (const key in raw) {\r\n      const normalizedKey = camelize(key)\r\n      if (validatePropName(normalizedKey)) {\r\n        const opt = raw[key]\r\n        const prop: NormalizedProp = (normalized[normalizedKey] =\r\n          isArray(opt) || isFunction(opt) ? { type: opt } : opt)\r\n        if (prop) {\r\n          const booleanIndex = getTypeIndex(Boolean, prop.type)\r\n          const stringIndex = getTypeIndex(String, prop.type)\r\n          prop[BooleanFlags.shouldCast] = booleanIndex > -1\r\n          prop[BooleanFlags.shouldCastTrue] =\r\n            stringIndex < 0 || booleanIndex < stringIndex\r\n          // if the prop needs boolean casting or default value\r\n          if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n            needCastKeys.push(normalizedKey)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const res: NormalizedPropsOptions = [normalized, needCastKeys]\r\n  cache.set(comp, res)\r\n  return res\r\n}\r\n\r\nfunction validatePropName(key: string) {\r\n  if (key[0] !== '$') {\r\n    return true\r\n  } else if (__DEV__) {\r\n    warn(`Invalid prop name: \"${key}\" is a reserved property.`)\r\n  }\r\n  return false\r\n}\r\n\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor: Prop<any>): string {\r\n  const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/)\r\n  return match ? match[1] : ctor === null ? 'null' : ''\r\n}\r\n\r\nfunction isSameType(a: Prop<any>, b: Prop<any>): boolean {\r\n  return getType(a) === getType(b)\r\n}\r\n\r\nfunction getTypeIndex(\r\n  type: Prop<any>,\r\n  expectedTypes: PropType<any> | void | null | true\r\n): number {\r\n  if (isArray(expectedTypes)) {\r\n    return expectedTypes.findIndex(t => isSameType(t, type))\r\n  } else if (isFunction(expectedTypes)) {\r\n    return isSameType(expectedTypes, type) ? 0 : -1\r\n  }\r\n  return -1\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(\r\n  rawProps: Data,\r\n  props: Data,\r\n  instance: ComponentInternalInstance\r\n) {\r\n  const resolvedValues = toRaw(props)\r\n  const options = instance.propsOptions[0]\r\n  for (const key in options) {\r\n    let opt = options[key]\r\n    if (opt == null) continue\r\n    validateProp(\r\n      key,\r\n      resolvedValues[key],\r\n      opt,\r\n      !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key))\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(\r\n  name: string,\r\n  value: unknown,\r\n  prop: PropOptions,\r\n  isAbsent: boolean\r\n) {\r\n  const { type, required, validator } = prop\r\n  // required!\r\n  if (required && isAbsent) {\r\n    warn('Missing required prop: \"' + name + '\"')\r\n    return\r\n  }\r\n  // missing but optional\r\n  if (value == null && !prop.required) {\r\n    return\r\n  }\r\n  // type check\r\n  if (type != null && type !== true) {\r\n    let isValid = false\r\n    const types = isArray(type) ? type : [type]\r\n    const expectedTypes = []\r\n    // value is valid as long as one of the specified types match\r\n    for (let i = 0; i < types.length && !isValid; i++) {\r\n      const { valid, expectedType } = assertType(value, types[i])\r\n      expectedTypes.push(expectedType || '')\r\n      isValid = valid\r\n    }\r\n    if (!isValid) {\r\n      warn(getInvalidTypeMessage(name, value, expectedTypes))\r\n      return\r\n    }\r\n  }\r\n  // custom validator\r\n  if (validator && !validator(value)) {\r\n    warn('Invalid prop: custom validator check failed for prop \"' + name + '\".')\r\n  }\r\n}\r\n\r\nconst isSimpleType = /*#__PURE__*/ makeMap(\r\n  'String,Number,Boolean,Function,Symbol,BigInt'\r\n)\r\n\r\ntype AssertionResult = {\r\n  valid: boolean\r\n  expectedType: string\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value: unknown, type: PropConstructor): AssertionResult {\r\n  let valid\r\n  const expectedType = getType(type)\r\n  if (isSimpleType(expectedType)) {\r\n    const t = typeof value\r\n    valid = t === expectedType.toLowerCase()\r\n    // for primitive wrapper objects\r\n    if (!valid && t === 'object') {\r\n      valid = value instanceof type\r\n    }\r\n  } else if (expectedType === 'Object') {\r\n    valid = isObject(value)\r\n  } else if (expectedType === 'Array') {\r\n    valid = isArray(value)\r\n  } else if (expectedType === 'null') {\r\n    valid = value === null\r\n  } else {\r\n    valid = value instanceof type\r\n  }\r\n  return {\r\n    valid,\r\n    expectedType\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(\r\n  name: string,\r\n  value: unknown,\r\n  expectedTypes: string[]\r\n): string {\r\n  let message =\r\n    `Invalid prop: type check failed for prop \"${name}\".` +\r\n    ` Expected ${expectedTypes.map(capitalize).join(' | ')}`\r\n  const expectedType = expectedTypes[0]\r\n  const receivedType = toRawType(value)\r\n  const expectedValue = styleValue(value, expectedType)\r\n  const receivedValue = styleValue(value, receivedType)\r\n  // check if we need to specify expected value\r\n  if (\r\n    expectedTypes.length === 1 &&\r\n    isExplicable(expectedType) &&\r\n    !isBoolean(expectedType, receivedType)\r\n  ) {\r\n    message += ` with value ${expectedValue}`\r\n  }\r\n  message += `, got ${receivedType} `\r\n  // check if we need to specify received value\r\n  if (isExplicable(receivedType)) {\r\n    message += `with value ${receivedValue}.`\r\n  }\r\n  return message\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value: unknown, type: string): string {\r\n  if (type === 'String') {\r\n    return `\"${value}\"`\r\n  } else if (type === 'Number') {\r\n    return `${Number(value)}`\r\n  } else {\r\n    return `${value}`\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type: string): boolean {\r\n  const explicitTypes = ['string', 'number', 'boolean']\r\n  return explicitTypes.some(elem => type.toLowerCase() === elem)\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args: string[]): boolean {\r\n  return args.some(elem => elem.toLowerCase() === 'boolean')\r\n}\r\n","import { ComponentInternalInstance, currentInstance } from './component'\r\nimport {\r\n  VNode,\r\n  VNodeNormalizedChildren,\r\n  normalizeVNode,\r\n  VNodeChild,\r\n  InternalObjectKey\r\n} from './vnode'\r\nimport {\r\n  isArray,\r\n  isFunction,\r\n  EMPTY_OBJ,\r\n  ShapeFlags,\r\n  extend,\r\n  def,\r\n  SlotFlags\r\n} from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { isKeepAlive } from './components/KeepAlive'\r\nimport { ContextualRenderFn, withCtx } from './componentRenderContext'\r\nimport { isHmrUpdating } from './hmr'\r\nimport { DeprecationTypes, isCompatEnabled } from './compat/compatConfig'\r\nimport { toRaw } from '@vue/reactivity'\r\n\r\nexport type Slot = (...args: any[]) => VNode[]\r\n\r\nexport type InternalSlots = {\r\n  [name: string]: Slot | undefined\r\n}\r\n\r\nexport type Slots = Readonly<InternalSlots>\r\n\r\nexport type RawSlots = {\r\n  [name: string]: unknown\r\n  // manual render fn hint to skip forced children updates\r\n  $stable?: boolean\r\n  /**\r\n   * for tracking slot owner instance. This is attached during\r\n   * normalizeChildren when the component vnode is created.\r\n   * @internal\r\n   */\r\n  _ctx?: ComponentInternalInstance | null\r\n  /**\r\n   * indicates compiler generated slots\r\n   * we use a reserved property instead of a vnode patchFlag because the slots\r\n   * object may be directly passed down to a child component in a manual\r\n   * render function, and the optimization hint need to be on the slot object\r\n   * itself to be preserved.\r\n   * @internal\r\n   */\r\n  _?: SlotFlags\r\n}\r\n\r\nconst isInternalKey = (key: string) => key[0] === '_' || key === '$stable'\r\n\r\nconst normalizeSlotValue = (value: unknown): VNode[] =>\r\n  isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value as VNodeChild)]\r\n\r\nconst normalizeSlot = (\r\n  key: string,\r\n  rawSlot: Function,\r\n  ctx: ComponentInternalInstance | null | undefined\r\n): Slot => {\r\n  if ((rawSlot as any)._n) {\r\n    // already normalized - #5353\r\n    return rawSlot as Slot\r\n  }\r\n  const normalized = withCtx((...args: any[]) => {\r\n    if (__DEV__ && currentInstance) {\r\n      warn(\r\n        `Slot \"${key}\" invoked outside of the render function: ` +\r\n          `this will not track dependencies used in the slot. ` +\r\n          `Invoke the slot function inside the render function instead.`\r\n      )\r\n    }\r\n    return normalizeSlotValue(rawSlot(...args))\r\n  }, ctx) as Slot\r\n  // NOT a compiled slot\r\n  ;(normalized as ContextualRenderFn)._c = false\r\n  return normalized\r\n}\r\n\r\nconst normalizeObjectSlots = (\r\n  rawSlots: RawSlots,\r\n  slots: InternalSlots,\r\n  instance: ComponentInternalInstance\r\n) => {\r\n  const ctx = rawSlots._ctx\r\n  for (const key in rawSlots) {\r\n    if (isInternalKey(key)) continue\r\n    const value = rawSlots[key]\r\n    if (isFunction(value)) {\r\n      slots[key] = normalizeSlot(key, value, ctx)\r\n    } else if (value != null) {\r\n      if (\r\n        __DEV__ &&\r\n        !(\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.RENDER_FUNCTION, instance)\r\n        )\r\n      ) {\r\n        warn(\r\n          `Non-function value encountered for slot \"${key}\". ` +\r\n            `Prefer function slots for better performance.`\r\n        )\r\n      }\r\n      const normalized = normalizeSlotValue(value)\r\n      slots[key] = () => normalized\r\n    }\r\n  }\r\n}\r\n\r\nconst normalizeVNodeSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren\r\n) => {\r\n  if (\r\n    __DEV__ &&\r\n    !isKeepAlive(instance.vnode) &&\r\n    !(__COMPAT__ && isCompatEnabled(DeprecationTypes.RENDER_FUNCTION, instance))\r\n  ) {\r\n    warn(\r\n      `Non-function value encountered for default slot. ` +\r\n        `Prefer function slots for better performance.`\r\n    )\r\n  }\r\n  const normalized = normalizeSlotValue(children)\r\n  instance.slots.default = () => normalized\r\n}\r\n\r\nexport const initSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren\r\n) => {\r\n  if (instance.vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\r\n    const type = (children as RawSlots)._\r\n    if (type) {\r\n      // users can get the shallow readonly version of the slots object through `this.$slots`,\r\n      // we should avoid the proxy object polluting the slots of the internal instance\r\n      instance.slots = toRaw(children as InternalSlots)\r\n      // make compiler marker non-enumerable\r\n      def(children as InternalSlots, '_', type)\r\n    } else {\r\n      normalizeObjectSlots(\r\n        children as RawSlots,\r\n        (instance.slots = {}),\r\n        instance\r\n      )\r\n    }\r\n  } else {\r\n    instance.slots = {}\r\n    if (children) {\r\n      normalizeVNodeSlots(instance, children)\r\n    }\r\n  }\r\n  def(instance.slots, InternalObjectKey, 1)\r\n}\r\n\r\nexport const updateSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren,\r\n  optimized: boolean\r\n) => {\r\n  const { vnode, slots } = instance\r\n  let needDeletionCheck = true\r\n  let deletionComparisonTarget = EMPTY_OBJ\r\n  if (vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\r\n    const type = (children as RawSlots)._\r\n    if (type) {\r\n      // compiled slots.\r\n      if (__DEV__ && isHmrUpdating) {\r\n        // Parent was HMR updated so slot content may have changed.\r\n        // force update slots and mark instance for hmr as well\r\n        extend(slots, children as Slots)\r\n      } else if (optimized && type === SlotFlags.STABLE) {\r\n        // compiled AND stable.\r\n        // no need to update, and skip stale slots removal.\r\n        needDeletionCheck = false\r\n      } else {\r\n        // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n        // normalization.\r\n        extend(slots, children as Slots)\r\n        // #2893\r\n        // when rendering the optimized slots by manually written render function,\r\n        // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\r\n        // i.e. let the `renderSlot` create the bailed Fragment\r\n        if (!optimized && type === SlotFlags.STABLE) {\r\n          delete slots._\r\n        }\r\n      }\r\n    } else {\r\n      needDeletionCheck = !(children as RawSlots).$stable\r\n      normalizeObjectSlots(children as RawSlots, slots, instance)\r\n    }\r\n    deletionComparisonTarget = children as RawSlots\r\n  } else if (children) {\r\n    // non slot object children (direct value) passed to a component\r\n    normalizeVNodeSlots(instance, children)\r\n    deletionComparisonTarget = { default: 1 }\r\n  }\r\n\r\n  // delete stale slots\r\n  if (needDeletionCheck) {\r\n    for (const key in slots) {\r\n      if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n        delete slots[key]\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ConcreteComponent,\r\n  Data,\r\n  validateComponentName,\r\n  Component,\r\n  ComponentInternalInstance,\r\n  getExposeProxy\r\n} from './component'\r\nimport {\r\n  ComponentOptions,\r\n  MergedComponentOptions,\r\n  RuntimeCompilerOptions\r\n} from './componentOptions'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { Directive, validateDirectiveName } from './directives'\r\nimport { RootRenderFunction } from './renderer'\r\nimport { InjectionKey } from './apiInject'\r\nimport { warn } from './warning'\r\nimport { createVNode, cloneVNode, VNode } from './vnode'\r\nimport { RootHydrateFunction } from './hydration'\r\nimport { devtoolsInitApp, devtoolsUnmountApp } from './devtools'\r\nimport { isFunction, NO, isObject } from '@vue/shared'\r\nimport { version } from '.'\r\nimport { installAppCompatProperties } from './compat/global'\r\nimport { NormalizedPropsOptions } from './componentProps'\r\nimport { ObjectEmitsOptions } from './componentEmits'\r\n\r\nexport interface App<HostElement = any> {\r\n  version: string\r\n  config: AppConfig\r\n  use(plugin: Plugin, ...options: any[]): this\r\n  mixin(mixin: ComponentOptions): this\r\n  component(name: string): Component | undefined\r\n  component(name: string, component: Component): this\r\n  directive(name: string): Directive | undefined\r\n  directive(name: string, directive: Directive): this\r\n  mount(\r\n    rootContainer: HostElement | string,\r\n    isHydrate?: boolean,\r\n    isSVG?: boolean\r\n  ): ComponentPublicInstance\r\n  unmount(): void\r\n  provide<T>(key: InjectionKey<T> | string, value: T): this\r\n\r\n  // internal, but we need to expose these for the server-renderer and devtools\r\n  _uid: number\r\n  _component: ConcreteComponent\r\n  _props: Data | null\r\n  _container: HostElement | null\r\n  _context: AppContext\r\n  _instance: ComponentInternalInstance | null\r\n\r\n  /**\r\n   * v2 compat only\r\n   */\r\n  filter?(name: string): Function | undefined\r\n  filter?(name: string, filter: Function): this\r\n\r\n  /**\r\n   * @internal v3 compat only\r\n   */\r\n  _createRoot?(options: ComponentOptions): ComponentPublicInstance\r\n}\r\n\r\nexport type OptionMergeFunction = (to: unknown, from: unknown) => any\r\n\r\nexport interface AppConfig {\r\n  // @private\r\n  readonly isNativeTag?: (tag: string) => boolean\r\n\r\n  performance: boolean\r\n  optionMergeStrategies: Record<string, OptionMergeFunction>\r\n  globalProperties: Record<string, any>\r\n  errorHandler?: (\r\n    err: unknown,\r\n    instance: ComponentPublicInstance | null,\r\n    info: string\r\n  ) => void\r\n  warnHandler?: (\r\n    msg: string,\r\n    instance: ComponentPublicInstance | null,\r\n    trace: string\r\n  ) => void\r\n\r\n  /**\r\n   * Options to pass to `@vue/compiler-dom`.\r\n   * Only supported in runtime compiler build.\r\n   */\r\n  compilerOptions: RuntimeCompilerOptions\r\n\r\n  /**\r\n   * @deprecated use config.compilerOptions.isCustomElement\r\n   */\r\n  isCustomElement?: (tag: string) => boolean\r\n\r\n  /**\r\n   * Temporary config for opt-in to unwrap injected refs.\r\n   * TODO deprecate in 3.3\r\n   */\r\n  unwrapInjectedRef?: boolean\r\n}\r\n\r\nexport interface AppContext {\r\n  app: App // for devtools\r\n  config: AppConfig\r\n  mixins: ComponentOptions[]\r\n  components: Record<string, Component>\r\n  directives: Record<string, Directive>\r\n  provides: Record<string | symbol, any>\r\n\r\n  /**\r\n   * Cache for merged/normalized component options\r\n   * Each app instance has its own cache because app-level global mixins and\r\n   * optionMergeStrategies can affect merge behavior.\r\n   * @internal\r\n   */\r\n  optionsCache: WeakMap<ComponentOptions, MergedComponentOptions>\r\n  /**\r\n   * Cache for normalized props options\r\n   * @internal\r\n   */\r\n  propsCache: WeakMap<ConcreteComponent, NormalizedPropsOptions>\r\n  /**\r\n   * Cache for normalized emits options\r\n   * @internal\r\n   */\r\n  emitsCache: WeakMap<ConcreteComponent, ObjectEmitsOptions | null>\r\n  /**\r\n   * HMR only\r\n   * @internal\r\n   */\r\n  reload?: () => void\r\n  /**\r\n   * v2 compat only\r\n   * @internal\r\n   */\r\n  filters?: Record<string, Function>\r\n}\r\n\r\ntype PluginInstallFunction = (app: App, ...options: any[]) => any\r\n\r\nexport type Plugin =\r\n  | (PluginInstallFunction & { install?: PluginInstallFunction })\r\n  | {\r\n      install: PluginInstallFunction\r\n    }\r\n\r\nexport function createAppContext(): AppContext {\r\n  return {\r\n    app: null as any,\r\n    config: {\r\n      isNativeTag: NO,\r\n      performance: false,\r\n      globalProperties: {},\r\n      optionMergeStrategies: {},\r\n      errorHandler: undefined,\r\n      warnHandler: undefined,\r\n      compilerOptions: {}\r\n    },\r\n    mixins: [],\r\n    components: {},\r\n    directives: {},\r\n    provides: Object.create(null),\r\n    optionsCache: new WeakMap(),\r\n    propsCache: new WeakMap(),\r\n    emitsCache: new WeakMap()\r\n  }\r\n}\r\n\r\nexport type CreateAppFunction<HostElement> = (\r\n  rootComponent: Component,\r\n  rootProps?: Data | null\r\n) => App<HostElement>\r\n\r\nlet uid = 0\r\n\r\nexport function createAppAPI<HostElement>(\r\n  render: RootRenderFunction,\r\n  hydrate?: RootHydrateFunction\r\n): CreateAppFunction<HostElement> {\r\n  return function createApp(rootComponent, rootProps = null) {\r\n    if (!isFunction(rootComponent)) {\r\n      rootComponent = { ...rootComponent }\r\n    }\r\n\r\n    if (rootProps != null && !isObject(rootProps)) {\r\n      __DEV__ && warn(`root props passed to app.mount() must be an object.`)\r\n      rootProps = null\r\n    }\r\n\r\n    const context = createAppContext()\r\n    const installedPlugins = new Set()\r\n\r\n    let isMounted = false\r\n\r\n    const app: App = (context.app = {\r\n      _uid: uid++,\r\n      _component: rootComponent as ConcreteComponent,\r\n      _props: rootProps,\r\n      _container: null,\r\n      _context: context,\r\n      _instance: null,\r\n\r\n      version,\r\n\r\n      get config() {\r\n        return context.config\r\n      },\r\n\r\n      set config(v) {\r\n        if (__DEV__) {\r\n          warn(\r\n            `app.config cannot be replaced. Modify individual options instead.`\r\n          )\r\n        }\r\n      },\r\n\r\n      use(plugin: Plugin, ...options: any[]) {\r\n        if (installedPlugins.has(plugin)) {\r\n          __DEV__ && warn(`Plugin has already been applied to target app.`)\r\n        } else if (plugin && isFunction(plugin.install)) {\r\n          installedPlugins.add(plugin)\r\n          plugin.install(app, ...options)\r\n        } else if (isFunction(plugin)) {\r\n          installedPlugins.add(plugin)\r\n          plugin(app, ...options)\r\n        } else if (__DEV__) {\r\n          warn(\r\n            `A plugin must either be a function or an object with an \"install\" ` +\r\n              `function.`\r\n          )\r\n        }\r\n        return app\r\n      },\r\n\r\n      mixin(mixin: ComponentOptions) {\r\n        if (__FEATURE_OPTIONS_API__) {\r\n          if (!context.mixins.includes(mixin)) {\r\n            context.mixins.push(mixin)\r\n          } else if (__DEV__) {\r\n            warn(\r\n              'Mixin has already been applied to target app' +\r\n                (mixin.name ? `: ${mixin.name}` : '')\r\n            )\r\n          }\r\n        } else if (__DEV__) {\r\n          warn('Mixins are only available in builds supporting Options API')\r\n        }\r\n        return app\r\n      },\r\n\r\n      component(name: string, component?: Component): any {\r\n        if (__DEV__) {\r\n          validateComponentName(name, context.config)\r\n        }\r\n        if (!component) {\r\n          return context.components[name]\r\n        }\r\n        if (__DEV__ && context.components[name]) {\r\n          warn(`Component \"${name}\" has already been registered in target app.`)\r\n        }\r\n        context.components[name] = component\r\n        return app\r\n      },\r\n\r\n      directive(name: string, directive?: Directive) {\r\n        if (__DEV__) {\r\n          validateDirectiveName(name)\r\n        }\r\n\r\n        if (!directive) {\r\n          return context.directives[name] as any\r\n        }\r\n        if (__DEV__ && context.directives[name]) {\r\n          warn(`Directive \"${name}\" has already been registered in target app.`)\r\n        }\r\n        context.directives[name] = directive\r\n        return app\r\n      },\r\n\r\n      mount(\r\n        rootContainer: HostElement,\r\n        isHydrate?: boolean,\r\n        isSVG?: boolean\r\n      ): any {\r\n        if (!isMounted) {\r\n          // #5571\r\n          if (__DEV__ && (rootContainer as any).__vue_app__) {\r\n            warn(\r\n              `There is already an app instance mounted on the host container.\\n` +\r\n                ` If you want to mount another app on the same host container,` +\r\n                ` you need to unmount the previous app by calling \\`app.unmount()\\` first.`\r\n            )\r\n          }\r\n          const vnode = createVNode(\r\n            rootComponent as ConcreteComponent,\r\n            rootProps\r\n          )\r\n          // store app context on the root VNode.\r\n          // this will be set on the root instance on initial mount.\r\n          vnode.appContext = context\r\n\r\n          // HMR root reload\r\n          if (__DEV__) {\r\n            context.reload = () => {\r\n              render(cloneVNode(vnode), rootContainer, isSVG)\r\n            }\r\n          }\r\n\r\n          if (isHydrate && hydrate) {\r\n            hydrate(vnode as VNode<Node, Element>, rootContainer as any)\r\n          } else {\r\n            render(vnode, rootContainer, isSVG)\r\n          }\r\n          isMounted = true\r\n          app._container = rootContainer\r\n          // for devtools and telemetry\r\n          ;(rootContainer as any).__vue_app__ = app\r\n\r\n          if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n            app._instance = vnode.component\r\n            devtoolsInitApp(app, version)\r\n          }\r\n\r\n          return getExposeProxy(vnode.component!) || vnode.component!.proxy\r\n        } else if (__DEV__) {\r\n          warn(\r\n            `App has already been mounted.\\n` +\r\n              `If you want to remount the same app, move your app creation logic ` +\r\n              `into a factory function and create fresh app instances for each ` +\r\n              `mount - e.g. \\`const createMyApp = () => createApp(App)\\``\r\n          )\r\n        }\r\n      },\r\n\r\n      unmount() {\r\n        if (isMounted) {\r\n          render(null, app._container)\r\n          if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n            app._instance = null\r\n            devtoolsUnmountApp(app)\r\n          }\r\n          delete app._container.__vue_app__\r\n        } else if (__DEV__) {\r\n          warn(`Cannot unmount an app that is not mounted.`)\r\n        }\r\n      },\r\n\r\n      provide(key, value) {\r\n        if (__DEV__ && (key as string | symbol) in context.provides) {\r\n          warn(\r\n            `App already provides property with key \"${String(key)}\". ` +\r\n              `It will be overwritten with the new value.`\r\n          )\r\n        }\r\n\r\n        context.provides[key as string | symbol] = value\r\n\r\n        return app\r\n      }\r\n    })\r\n\r\n    if (__COMPAT__) {\r\n      installAppCompatProperties(app, context, render)\r\n    }\r\n\r\n    return app\r\n  }\r\n}\r\n","import { SuspenseBoundary } from './components/Suspense'\r\nimport { VNode, VNodeNormalizedRef, VNodeNormalizedRefAtom } from './vnode'\r\nimport {\r\n  EMPTY_OBJ,\r\n  hasOwn,\r\n  isArray,\r\n  isFunction,\r\n  isString,\r\n  remove,\r\n  ShapeFlags\r\n} from '@vue/shared'\r\nimport { isAsyncWrapper } from './apiAsyncComponent'\r\nimport { getExposeProxy } from './component'\r\nimport { warn } from './warning'\r\nimport { isRef } from '@vue/reactivity'\r\nimport { callWithErrorHandling, ErrorCodes } from './errorHandling'\r\nimport { SchedulerJob } from './scheduler'\r\nimport { queuePostRenderEffect } from './renderer'\r\n\r\n/**\r\n * Function for handling a template ref\r\n */\r\nexport function setRef(\r\n  rawRef: VNodeNormalizedRef,\r\n  oldRawRef: VNodeNormalizedRef | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  vnode: VNode,\r\n  isUnmount = false\r\n) {\r\n  if (isArray(rawRef)) {\r\n    rawRef.forEach((r, i) =>\r\n      setRef(\r\n        r,\r\n        oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef),\r\n        parentSuspense,\r\n        vnode,\r\n        isUnmount\r\n      )\r\n    )\r\n    return\r\n  }\r\n\r\n  if (isAsyncWrapper(vnode) && !isUnmount) {\r\n    // when mounting async components, nothing needs to be done,\r\n    // because the template ref is forwarded to inner component\r\n    return\r\n  }\r\n\r\n  const refValue =\r\n    vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT\r\n      ? getExposeProxy(vnode.component!) || vnode.component!.proxy\r\n      : vnode.el\r\n  const value = isUnmount ? null : refValue\r\n\r\n  const { i: owner, r: ref } = rawRef\r\n  if (__DEV__ && !owner) {\r\n    warn(\r\n      `Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n        `A vnode with ref must be created inside the render function.`\r\n    )\r\n    return\r\n  }\r\n  const oldRef = oldRawRef && (oldRawRef as VNodeNormalizedRefAtom).r\r\n  const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs\r\n  const setupState = owner.setupState\r\n\r\n  // dynamic ref changed. unset old ref\r\n  if (oldRef != null && oldRef !== ref) {\r\n    if (isString(oldRef)) {\r\n      refs[oldRef] = null\r\n      if (hasOwn(setupState, oldRef)) {\r\n        setupState[oldRef] = null\r\n      }\r\n    } else if (isRef(oldRef)) {\r\n      oldRef.value = null\r\n    }\r\n  }\r\n\r\n  if (isFunction(ref)) {\r\n    callWithErrorHandling(ref, owner, ErrorCodes.FUNCTION_REF, [value, refs])\r\n  } else {\r\n    const _isString = isString(ref)\r\n    const _isRef = isRef(ref)\r\n    if (_isString || _isRef) {\r\n      const doSet = () => {\r\n        if (rawRef.f) {\r\n          const existing = _isString ? refs[ref] : ref.value\r\n          if (isUnmount) {\r\n            isArray(existing) && remove(existing, refValue)\r\n          } else {\r\n            if (!isArray(existing)) {\r\n              if (_isString) {\r\n                refs[ref] = [refValue]\r\n                if (hasOwn(setupState, ref)) {\r\n                  setupState[ref] = refs[ref]\r\n                }\r\n              } else {\r\n                ref.value = [refValue]\r\n                if (rawRef.k) refs[rawRef.k] = ref.value\r\n              }\r\n            } else if (!existing.includes(refValue)) {\r\n              existing.push(refValue)\r\n            }\r\n          }\r\n        } else if (_isString) {\r\n          refs[ref] = value\r\n          if (hasOwn(setupState, ref)) {\r\n            setupState[ref] = value\r\n          }\r\n        } else if (_isRef) {\r\n          ref.value = value\r\n          if (rawRef.k) refs[rawRef.k] = value\r\n        } else if (__DEV__) {\r\n          warn('Invalid template ref type:', ref, `(${typeof ref})`)\r\n        }\r\n      }\r\n      if (value) {\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        ;(doSet as SchedulerJob).id = -1\r\n        queuePostRenderEffect(doSet, parentSuspense)\r\n      } else {\r\n        doSet()\r\n      }\r\n    } else if (__DEV__) {\r\n      warn('Invalid template ref type:', ref, `(${typeof ref})`)\r\n    }\r\n  }\r\n}\r\n","import {\r\n  VNode,\r\n  normalizeVNode,\r\n  Text,\r\n  Comment,\r\n  Static,\r\n  Fragment,\r\n  VNodeHook,\r\n  createVNode,\r\n  createTextVNode,\r\n  invokeVNodeHook\r\n} from './vnode'\r\nimport { flushPostFlushCbs } from './scheduler'\r\nimport { ComponentInternalInstance } from './component'\r\nimport { invokeDirectiveHook } from './directives'\r\nimport { warn } from './warning'\r\nimport { PatchFlags, ShapeFlags, isReservedProp, isOn } from '@vue/shared'\r\nimport { RendererInternals } from './renderer'\r\nimport { setRef } from './rendererTemplateRef'\r\nimport {\r\n  SuspenseImpl,\r\n  SuspenseBoundary,\r\n  queueEffectWithSuspense\r\n} from './components/Suspense'\r\nimport { TeleportImpl, TeleportVNode } from './components/Teleport'\r\nimport { isAsyncWrapper } from './apiAsyncComponent'\r\n\r\nexport type RootHydrateFunction = (\r\n  vnode: VNode<Node, Element>,\r\n  container: (Element | ShadowRoot) & { _vnode?: VNode }\r\n) => void\r\n\r\nconst enum DOMNodeTypes {\r\n  ELEMENT = 1,\r\n  TEXT = 3,\r\n  COMMENT = 8\r\n}\r\n\r\nlet hasMismatch = false\r\n\r\nconst isSVGContainer = (container: Element) =>\r\n  /svg/.test(container.namespaceURI!) && container.tagName !== 'foreignObject'\r\n\r\nconst isComment = (node: Node): node is Comment =>\r\n  node.nodeType === DOMNodeTypes.COMMENT\r\n\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nexport function createHydrationFunctions(\r\n  rendererInternals: RendererInternals<Node, Element>\r\n) {\r\n  const {\r\n    mt: mountComponent,\r\n    p: patch,\r\n    o: {\r\n      patchProp,\r\n      createText,\r\n      nextSibling,\r\n      parentNode,\r\n      remove,\r\n      insert,\r\n      createComment\r\n    }\r\n  } = rendererInternals\r\n\r\n  const hydrate: RootHydrateFunction = (vnode, container) => {\r\n    if (!container.hasChildNodes()) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Attempting to hydrate existing markup but container is empty. ` +\r\n            `Performing full mount instead.`\r\n        )\r\n      patch(null, vnode, container)\r\n      flushPostFlushCbs()\r\n      container._vnode = vnode\r\n      return\r\n    }\r\n    hasMismatch = false\r\n    hydrateNode(container.firstChild!, vnode, null, null, null)\r\n    flushPostFlushCbs()\r\n    container._vnode = vnode\r\n    if (hasMismatch && !__TEST__) {\r\n      // this error should show up in production\r\n      console.error(`Hydration completed but contains mismatches.`)\r\n    }\r\n  }\r\n\r\n  const hydrateNode = (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized = false\r\n  ): Node | null => {\r\n    const isFragmentStart = isComment(node) && node.data === '['\r\n    const onMismatch = () =>\r\n      handleMismatch(\r\n        node,\r\n        vnode,\r\n        parentComponent,\r\n        parentSuspense,\r\n        slotScopeIds,\r\n        isFragmentStart\r\n      )\r\n\r\n    const { type, ref, shapeFlag, patchFlag } = vnode\r\n    const domType = node.nodeType\r\n    vnode.el = node\r\n\r\n    if (patchFlag === PatchFlags.BAIL) {\r\n      optimized = false\r\n      vnode.dynamicChildren = null\r\n    }\r\n\r\n    let nextNode: Node | null = null\r\n    switch (type) {\r\n      case Text:\r\n        if (domType !== DOMNodeTypes.TEXT) {\r\n          // #5728 empty text node inside a slot can cause hydration failure\r\n          // because the server rendered HTML won't contain a text node\r\n          if (vnode.children === '') {\r\n            insert((vnode.el = createText('')), parentNode(node)!, node)\r\n            nextNode = node\r\n          } else {\r\n            nextNode = onMismatch()\r\n          }\r\n        } else {\r\n          if ((node as Text).data !== vnode.children) {\r\n            hasMismatch = true\r\n            __DEV__ &&\r\n              warn(\r\n                `Hydration text mismatch:` +\r\n                  `\\n- Client: ${JSON.stringify((node as Text).data)}` +\r\n                  `\\n- Server: ${JSON.stringify(vnode.children)}`\r\n              )\r\n            ;(node as Text).data = vnode.children as string\r\n          }\r\n          nextNode = nextSibling(node)\r\n        }\r\n        break\r\n      case Comment:\r\n        if (domType !== DOMNodeTypes.COMMENT || isFragmentStart) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          nextNode = nextSibling(node)\r\n        }\r\n        break\r\n      case Static:\r\n        if (domType !== DOMNodeTypes.ELEMENT && domType !== DOMNodeTypes.TEXT) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          // determine anchor, adopt content\r\n          nextNode = node\r\n          // if the static vnode has its content stripped during build,\r\n          // adopt it from the server-rendered HTML.\r\n          const needToAdoptContent = !(vnode.children as string).length\r\n          for (let i = 0; i < vnode.staticCount!; i++) {\r\n            if (needToAdoptContent)\r\n              vnode.children +=\r\n                nextNode.nodeType === DOMNodeTypes.ELEMENT\r\n                  ? (nextNode as Element).outerHTML\r\n                  : (nextNode as Text).data\r\n            if (i === vnode.staticCount! - 1) {\r\n              vnode.anchor = nextNode\r\n            }\r\n            nextNode = nextSibling(nextNode)!\r\n          }\r\n          return nextNode\r\n        }\r\n        break\r\n      case Fragment:\r\n        if (!isFragmentStart) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          nextNode = hydrateFragment(\r\n            node as Comment,\r\n            vnode,\r\n            parentComponent,\r\n            parentSuspense,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        }\r\n        break\r\n      default:\r\n        if (shapeFlag & ShapeFlags.ELEMENT) {\r\n          if (\r\n            domType !== DOMNodeTypes.ELEMENT ||\r\n            (vnode.type as string).toLowerCase() !==\r\n              (node as Element).tagName.toLowerCase()\r\n          ) {\r\n            nextNode = onMismatch()\r\n          } else {\r\n            nextNode = hydrateElement(\r\n              node as Element,\r\n              vnode,\r\n              parentComponent,\r\n              parentSuspense,\r\n              slotScopeIds,\r\n              optimized\r\n            )\r\n          }\r\n        } else if (shapeFlag & ShapeFlags.COMPONENT) {\r\n          // when setting up the render effect, if the initial vnode already\r\n          // has .el set, the component will perform hydration instead of mount\r\n          // on its sub-tree.\r\n          vnode.slotScopeIds = slotScopeIds\r\n          const container = parentNode(node)!\r\n          mountComponent(\r\n            vnode,\r\n            container,\r\n            null,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVGContainer(container),\r\n            optimized\r\n          )\r\n\r\n          // component may be async, so in the case of fragments we cannot rely\r\n          // on component's rendered output to determine the end of the fragment\r\n          // instead, we do a lookahead to find the end anchor node.\r\n          nextNode = isFragmentStart\r\n            ? locateClosingAsyncAnchor(node)\r\n            : nextSibling(node)\r\n\r\n          // #4293 teleport as component root\r\n          if (\r\n            nextNode &&\r\n            isComment(nextNode) &&\r\n            nextNode.data === 'teleport end'\r\n          ) {\r\n            nextNode = nextSibling(nextNode)\r\n          }\r\n\r\n          // #3787\r\n          // if component is async, it may get moved / unmounted before its\r\n          // inner component is loaded, so we need to give it a placeholder\r\n          // vnode that matches its adopted DOM.\r\n          if (isAsyncWrapper(vnode)) {\r\n            let subTree\r\n            if (isFragmentStart) {\r\n              subTree = createVNode(Fragment)\r\n              subTree.anchor = nextNode\r\n                ? nextNode.previousSibling\r\n                : container.lastChild\r\n            } else {\r\n              subTree =\r\n                node.nodeType === 3 ? createTextVNode('') : createVNode('div')\r\n            }\r\n            subTree.el = node\r\n            vnode.component!.subTree = subTree\r\n          }\r\n        } else if (shapeFlag & ShapeFlags.TELEPORT) {\r\n          if (domType !== DOMNodeTypes.COMMENT) {\r\n            nextNode = onMismatch()\r\n          } else {\r\n            nextNode = (vnode.type as typeof TeleportImpl).hydrate(\r\n              node,\r\n              vnode as TeleportVNode,\r\n              parentComponent,\r\n              parentSuspense,\r\n              slotScopeIds,\r\n              optimized,\r\n              rendererInternals,\r\n              hydrateChildren\r\n            )\r\n          }\r\n        } else if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n          nextNode = (vnode.type as typeof SuspenseImpl).hydrate(\r\n            node,\r\n            vnode,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVGContainer(parentNode(node)!),\r\n            slotScopeIds,\r\n            optimized,\r\n            rendererInternals,\r\n            hydrateNode\r\n          )\r\n        } else if (__DEV__) {\r\n          warn('Invalid HostVNode type:', type, `(${typeof type})`)\r\n        }\r\n    }\r\n\r\n    if (ref != null) {\r\n      setRef(ref, null, parentSuspense, vnode)\r\n    }\r\n\r\n    return nextNode\r\n  }\r\n\r\n  const hydrateElement = (\r\n    el: Element,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    optimized = optimized || !!vnode.dynamicChildren\r\n    const { type, props, patchFlag, shapeFlag, dirs } = vnode\r\n    // #4006 for form elements with non-string v-model value bindings\r\n    // e.g. <option :value=\"obj\">, <input type=\"checkbox\" :true-value=\"1\">\r\n    const forcePatchValue = (type === 'input' && dirs) || type === 'option'\r\n    // skip props & children if this is hoisted static nodes\r\n    // #5405 in dev, always hydrate children for HMR\r\n    if (__DEV__ || forcePatchValue || patchFlag !== PatchFlags.HOISTED) {\r\n      if (dirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'created')\r\n      }\r\n      // props\r\n      if (props) {\r\n        if (\r\n          forcePatchValue ||\r\n          !optimized ||\r\n          patchFlag & (PatchFlags.FULL_PROPS | PatchFlags.HYDRATE_EVENTS)\r\n        ) {\r\n          for (const key in props) {\r\n            if (\r\n              (forcePatchValue && key.endsWith('value')) ||\r\n              (isOn(key) && !isReservedProp(key))\r\n            ) {\r\n              patchProp(\r\n                el,\r\n                key,\r\n                null,\r\n                props[key],\r\n                false,\r\n                undefined,\r\n                parentComponent\r\n              )\r\n            }\r\n          }\r\n        } else if (props.onClick) {\r\n          // Fast path for click listeners (which is most often) to avoid\r\n          // iterating through props.\r\n          patchProp(\r\n            el,\r\n            'onClick',\r\n            null,\r\n            props.onClick,\r\n            false,\r\n            undefined,\r\n            parentComponent\r\n          )\r\n        }\r\n      }\r\n      // vnode / directive hooks\r\n      let vnodeHooks: VNodeHook | null | undefined\r\n      if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n        invokeVNodeHook(vnodeHooks, parentComponent, vnode)\r\n      }\r\n      if (dirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount')\r\n      }\r\n      if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n        queueEffectWithSuspense(() => {\r\n          vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode)\r\n          dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted')\r\n        }, parentSuspense)\r\n      }\r\n      // children\r\n      if (\r\n        shapeFlag & ShapeFlags.ARRAY_CHILDREN &&\r\n        // skip if element has innerHTML / textContent\r\n        !(props && (props.innerHTML || props.textContent))\r\n      ) {\r\n        let next = hydrateChildren(\r\n          el.firstChild,\r\n          vnode,\r\n          el,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        let hasWarned = false\r\n        while (next) {\r\n          hasMismatch = true\r\n          if (__DEV__ && !hasWarned) {\r\n            warn(\r\n              `Hydration children mismatch in <${vnode.type as string}>: ` +\r\n                `server rendered element contains more child nodes than client vdom.`\r\n            )\r\n            hasWarned = true\r\n          }\r\n          // The SSRed DOM contains more nodes than it should. Remove them.\r\n          const cur = next\r\n          next = next.nextSibling\r\n          remove(cur)\r\n        }\r\n      } else if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n        if (el.textContent !== vnode.children) {\r\n          hasMismatch = true\r\n          __DEV__ &&\r\n            warn(\r\n              `Hydration text content mismatch in <${\r\n                vnode.type as string\r\n              }>:\\n` +\r\n                `- Client: ${el.textContent}\\n` +\r\n                `- Server: ${vnode.children as string}`\r\n            )\r\n          el.textContent = vnode.children as string\r\n        }\r\n      }\r\n    }\r\n    return el.nextSibling\r\n  }\r\n\r\n  const hydrateChildren = (\r\n    node: Node | null,\r\n    parentVNode: VNode,\r\n    container: Element,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ): Node | null => {\r\n    optimized = optimized || !!parentVNode.dynamicChildren\r\n    const children = parentVNode.children as VNode[]\r\n    const l = children.length\r\n    let hasWarned = false\r\n    for (let i = 0; i < l; i++) {\r\n      const vnode = optimized\r\n        ? children[i]\r\n        : (children[i] = normalizeVNode(children[i]))\r\n      if (node) {\r\n        node = hydrateNode(\r\n          node,\r\n          vnode,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      } else if (vnode.type === Text && !vnode.children) {\r\n        continue\r\n      } else {\r\n        hasMismatch = true\r\n        if (__DEV__ && !hasWarned) {\r\n          warn(\r\n            `Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n              `server rendered element contains fewer child nodes than client vdom.`\r\n          )\r\n          hasWarned = true\r\n        }\r\n        // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n        patch(\r\n          null,\r\n          vnode,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVGContainer(container),\r\n          slotScopeIds\r\n        )\r\n      }\r\n    }\r\n    return node\r\n  }\r\n\r\n  const hydrateFragment = (\r\n    node: Comment,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    const { slotScopeIds: fragmentSlotScopeIds } = vnode\r\n    if (fragmentSlotScopeIds) {\r\n      slotScopeIds = slotScopeIds\r\n        ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n        : fragmentSlotScopeIds\r\n    }\r\n\r\n    const container = parentNode(node)!\r\n    const next = hydrateChildren(\r\n      nextSibling(node)!,\r\n      vnode,\r\n      container,\r\n      parentComponent,\r\n      parentSuspense,\r\n      slotScopeIds,\r\n      optimized\r\n    )\r\n    if (next && isComment(next) && next.data === ']') {\r\n      return nextSibling((vnode.anchor = next))\r\n    } else {\r\n      // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n      // back. This should have led to node/children mismatch warnings.\r\n      hasMismatch = true\r\n      // since the anchor is missing, we need to create one and insert it\r\n      insert((vnode.anchor = createComment(`]`)), container, next)\r\n      return next\r\n    }\r\n  }\r\n\r\n  const handleMismatch = (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    isFragment: boolean\r\n  ): Node | null => {\r\n    hasMismatch = true\r\n    __DEV__ &&\r\n      warn(\r\n        `Hydration node mismatch:\\n- Client vnode:`,\r\n        vnode.type,\r\n        `\\n- Server rendered DOM:`,\r\n        node,\r\n        node.nodeType === DOMNodeTypes.TEXT\r\n          ? `(text)`\r\n          : isComment(node) && node.data === '['\r\n          ? `(start of fragment)`\r\n          : ``\r\n      )\r\n    vnode.el = null\r\n\r\n    if (isFragment) {\r\n      // remove excessive fragment nodes\r\n      const end = locateClosingAsyncAnchor(node)\r\n      while (true) {\r\n        const next = nextSibling(node)\r\n        if (next && next !== end) {\r\n          remove(next)\r\n        } else {\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    const next = nextSibling(node)\r\n    const container = parentNode(node)!\r\n    remove(node)\r\n\r\n    patch(\r\n      null,\r\n      vnode,\r\n      container,\r\n      next,\r\n      parentComponent,\r\n      parentSuspense,\r\n      isSVGContainer(container),\r\n      slotScopeIds\r\n    )\r\n    return next\r\n  }\r\n\r\n  const locateClosingAsyncAnchor = (node: Node | null): Node | null => {\r\n    let match = 0\r\n    while (node) {\r\n      node = nextSibling(node)\r\n      if (node && isComment(node)) {\r\n        if (node.data === '[') match++\r\n        if (node.data === ']') {\r\n          if (match === 0) {\r\n            return nextSibling(node)\r\n          } else {\r\n            match--\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return node\r\n  }\r\n\r\n  return [hydrate, hydrateNode] as const\r\n}\r\n","import {\r\n  Text,\r\n  Fragment,\r\n  Comment,\r\n  cloneIfMounted,\r\n  normalizeVNode,\r\n  VNode,\r\n  VNodeArrayChildren,\r\n  createVNode,\r\n  isSameVNodeType,\r\n  Static,\r\n  VNodeHook,\r\n  VNodeProps,\r\n  invokeVNodeHook\r\n} from './vnode'\r\nimport {\r\n  ComponentInternalInstance,\r\n  ComponentOptions,\r\n  createComponentInstance,\r\n  Data,\r\n  setupComponent\r\n} from './component'\r\nimport {\r\n  filterSingleRoot,\r\n  renderComponentRoot,\r\n  shouldUpdateComponent,\r\n  updateHOCHostEl\r\n} from './componentRenderUtils'\r\nimport {\r\n  EMPTY_OBJ,\r\n  EMPTY_ARR,\r\n  isReservedProp,\r\n  PatchFlags,\r\n  ShapeFlags,\r\n  NOOP,\r\n  invokeArrayFns,\r\n  isArray,\r\n  getGlobalThis\r\n} from '@vue/shared'\r\nimport {\r\n  queueJob,\r\n  queuePostFlushCb,\r\n  flushPostFlushCbs,\r\n  invalidateJob,\r\n  flushPreFlushCbs,\r\n  SchedulerJob\r\n} from './scheduler'\r\nimport { pauseTracking, resetTracking, ReactiveEffect } from '@vue/reactivity'\r\nimport { updateProps } from './componentProps'\r\nimport { updateSlots } from './componentSlots'\r\nimport { pushWarningContext, popWarningContext, warn } from './warning'\r\nimport { createAppAPI, CreateAppFunction } from './apiCreateApp'\r\nimport { setRef } from './rendererTemplateRef'\r\nimport {\r\n  SuspenseBoundary,\r\n  queueEffectWithSuspense,\r\n  SuspenseImpl\r\n} from './components/Suspense'\r\nimport { TeleportImpl, TeleportVNode } from './components/Teleport'\r\nimport { isKeepAlive, KeepAliveContext } from './components/KeepAlive'\r\nimport { registerHMR, unregisterHMR, isHmrUpdating } from './hmr'\r\nimport { createHydrationFunctions, RootHydrateFunction } from './hydration'\r\nimport { invokeDirectiveHook } from './directives'\r\nimport { startMeasure, endMeasure } from './profiling'\r\nimport {\r\n  devtoolsComponentAdded,\r\n  devtoolsComponentRemoved,\r\n  devtoolsComponentUpdated,\r\n  setDevtoolsHook\r\n} from './devtools'\r\nimport { initFeatureFlags } from './featureFlags'\r\nimport { isAsyncWrapper } from './apiAsyncComponent'\r\nimport { isCompatEnabled } from './compat/compatConfig'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\n\r\nexport interface Renderer<HostElement = RendererElement> {\r\n  render: RootRenderFunction<HostElement>\r\n  createApp: CreateAppFunction<HostElement>\r\n}\r\n\r\nexport interface HydrationRenderer extends Renderer<Element | ShadowRoot> {\r\n  hydrate: RootHydrateFunction\r\n}\r\n\r\nexport type RootRenderFunction<HostElement = RendererElement> = (\r\n  vnode: VNode | null,\r\n  container: HostElement,\r\n  isSVG?: boolean\r\n) => void\r\n\r\nexport interface RendererOptions<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n> {\r\n  patchProp(\r\n    el: HostElement,\r\n    key: string,\r\n    prevValue: any,\r\n    nextValue: any,\r\n    isSVG?: boolean,\r\n    prevChildren?: VNode<HostNode, HostElement>[],\r\n    parentComponent?: ComponentInternalInstance | null,\r\n    parentSuspense?: SuspenseBoundary | null,\r\n    unmountChildren?: UnmountChildrenFn\r\n  ): void\r\n  insert(el: HostNode, parent: HostElement, anchor?: HostNode | null): void\r\n  remove(el: HostNode): void\r\n  createElement(\r\n    type: string,\r\n    isSVG?: boolean,\r\n    isCustomizedBuiltIn?: string,\r\n    vnodeProps?: (VNodeProps & { [key: string]: any }) | null\r\n  ): HostElement\r\n  createText(text: string): HostNode\r\n  createComment(text: string): HostNode\r\n  setText(node: HostNode, text: string): void\r\n  setElementText(node: HostElement, text: string): void\r\n  parentNode(node: HostNode): HostElement | null\r\n  nextSibling(node: HostNode): HostNode | null\r\n  querySelector?(selector: string): HostElement | null\r\n  setScopeId?(el: HostElement, id: string): void\r\n  cloneNode?(node: HostNode): HostNode\r\n  insertStaticContent?(\r\n    content: string,\r\n    parent: HostElement,\r\n    anchor: HostNode | null,\r\n    isSVG: boolean,\r\n    start?: HostNode | null,\r\n    end?: HostNode | null\r\n  ): [HostNode, HostNode]\r\n}\r\n\r\n// Renderer Node can technically be any object in the context of core renderer\r\n// logic - they are never directly operated on and always passed to the node op\r\n// functions provided via options, so the internal constraint is really just\r\n// a generic object.\r\nexport interface RendererNode {\r\n  [key: string]: any\r\n}\r\n\r\nexport interface RendererElement extends RendererNode {}\r\n\r\n// An object exposing the internals of a renderer, passed to tree-shakeable\r\n// features so that they can be decoupled from this file. Keys are shortened\r\n// to optimize bundle size.\r\nexport interface RendererInternals<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n> {\r\n  p: PatchFn\r\n  um: UnmountFn\r\n  r: RemoveFn\r\n  m: MoveFn\r\n  mt: MountComponentFn\r\n  mc: MountChildrenFn\r\n  pc: PatchChildrenFn\r\n  pbc: PatchBlockChildrenFn\r\n  n: NextFn\r\n  o: RendererOptions<HostNode, HostElement>\r\n}\r\n\r\n// These functions are created inside a closure and therefore their types cannot\r\n// be directly exported. In order to avoid maintaining function signatures in\r\n// two places, we declare them once here and use them inside the closure.\r\ntype PatchFn = (\r\n  n1: VNode | null, // null means this is a mount\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor?: RendererNode | null,\r\n  parentComponent?: ComponentInternalInstance | null,\r\n  parentSuspense?: SuspenseBoundary | null,\r\n  isSVG?: boolean,\r\n  slotScopeIds?: string[] | null,\r\n  optimized?: boolean\r\n) => void\r\n\r\ntype MountChildrenFn = (\r\n  children: VNodeArrayChildren,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  start?: number\r\n) => void\r\n\r\ntype PatchChildrenFn = (\r\n  n1: VNode | null,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean\r\n) => void\r\n\r\ntype PatchBlockChildrenFn = (\r\n  oldChildren: VNode[],\r\n  newChildren: VNode[],\r\n  fallbackContainer: RendererElement,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null\r\n) => void\r\n\r\ntype MoveFn = (\r\n  vnode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  type: MoveType,\r\n  parentSuspense?: SuspenseBoundary | null\r\n) => void\r\n\r\ntype NextFn = (vnode: VNode) => RendererNode | null\r\n\r\ntype UnmountFn = (\r\n  vnode: VNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  doRemove?: boolean,\r\n  optimized?: boolean\r\n) => void\r\n\r\ntype RemoveFn = (vnode: VNode) => void\r\n\r\ntype UnmountChildrenFn = (\r\n  children: VNode[],\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  doRemove?: boolean,\r\n  optimized?: boolean,\r\n  start?: number\r\n) => void\r\n\r\nexport type MountComponentFn = (\r\n  initialVNode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  optimized: boolean\r\n) => void\r\n\r\ntype ProcessTextOrCommentFn = (\r\n  n1: VNode | null,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null\r\n) => void\r\n\r\nexport type SetupRenderEffectFn = (\r\n  instance: ComponentInternalInstance,\r\n  initialVNode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  optimized: boolean\r\n) => void\r\n\r\nexport const enum MoveType {\r\n  ENTER,\r\n  LEAVE,\r\n  REORDER\r\n}\r\n\r\nexport const queuePostRenderEffect = __FEATURE_SUSPENSE__\r\n  ? queueEffectWithSuspense\r\n  : queuePostFlushCb\r\n\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nexport function createRenderer<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n>(options: RendererOptions<HostNode, HostElement>) {\r\n  return baseCreateRenderer<HostNode, HostElement>(options)\r\n}\r\n\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nexport function createHydrationRenderer(\r\n  options: RendererOptions<Node, Element>\r\n) {\r\n  return baseCreateRenderer(options, createHydrationFunctions)\r\n}\r\n\r\n// overload 1: no hydration\r\nfunction baseCreateRenderer<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n>(options: RendererOptions<HostNode, HostElement>): Renderer<HostElement>\r\n\r\n// overload 2: with hydration\r\nfunction baseCreateRenderer(\r\n  options: RendererOptions<Node, Element>,\r\n  createHydrationFns: typeof createHydrationFunctions\r\n): HydrationRenderer\r\n\r\n// implementation\r\nfunction baseCreateRenderer(\r\n  options: RendererOptions,\r\n  createHydrationFns?: typeof createHydrationFunctions\r\n): any {\r\n  // compile-time feature flags check\r\n  if (__ESM_BUNDLER__ && !__TEST__) {\r\n    initFeatureFlags()\r\n  }\r\n\r\n  const target = getGlobalThis()\r\n  target.__VUE__ = true\r\n  if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n    setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target)\r\n  }\r\n\r\n  const {\r\n    insert: hostInsert,\r\n    remove: hostRemove,\r\n    patchProp: hostPatchProp,\r\n    createElement: hostCreateElement,\r\n    createText: hostCreateText,\r\n    createComment: hostCreateComment,\r\n    setText: hostSetText,\r\n    setElementText: hostSetElementText,\r\n    parentNode: hostParentNode,\r\n    nextSibling: hostNextSibling,\r\n    setScopeId: hostSetScopeId = NOOP,\r\n    cloneNode: hostCloneNode,\r\n    insertStaticContent: hostInsertStaticContent\r\n  } = options\r\n\r\n  // Note: functions inside this closure should use `const xxx = () => {}`\r\n  // style in order to prevent being inlined by minifiers.\r\n  const patch: PatchFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor = null,\r\n    parentComponent = null,\r\n    parentSuspense = null,\r\n    isSVG = false,\r\n    slotScopeIds = null,\r\n    optimized = __DEV__ && isHmrUpdating ? false : !!n2.dynamicChildren\r\n  ) => {\r\n    if (n1 === n2) {\r\n      return\r\n    }\r\n\r\n    // patching & not same type, unmount old tree\r\n    if (n1 && !isSameVNodeType(n1, n2)) {\r\n      anchor = getNextHostNode(n1)\r\n      unmount(n1, parentComponent, parentSuspense, true)\r\n      n1 = null\r\n    }\r\n\r\n    if (n2.patchFlag === PatchFlags.BAIL) {\r\n      optimized = false\r\n      n2.dynamicChildren = null\r\n    }\r\n\r\n    const { type, ref, shapeFlag } = n2\r\n    switch (type) {\r\n      case Text:\r\n        processText(n1, n2, container, anchor)\r\n        break\r\n      case Comment:\r\n        processCommentNode(n1, n2, container, anchor)\r\n        break\r\n      case Static:\r\n        if (n1 == null) {\r\n          mountStaticNode(n2, container, anchor, isSVG)\r\n        } else if (__DEV__) {\r\n          patchStaticNode(n1, n2, container, isSVG)\r\n        }\r\n        break\r\n      case Fragment:\r\n        processFragment(\r\n          n1,\r\n          n2,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        break\r\n      default:\r\n        if (shapeFlag & ShapeFlags.ELEMENT) {\r\n          processElement(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else if (shapeFlag & ShapeFlags.COMPONENT) {\r\n          processComponent(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else if (shapeFlag & ShapeFlags.TELEPORT) {\r\n          ;(type as typeof TeleportImpl).process(\r\n            n1 as TeleportVNode,\r\n            n2 as TeleportVNode,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized,\r\n            internals\r\n          )\r\n        } else if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n          ;(type as typeof SuspenseImpl).process(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized,\r\n            internals\r\n          )\r\n        } else if (__DEV__) {\r\n          warn('Invalid VNode type:', type, `(${typeof type})`)\r\n        }\r\n    }\r\n\r\n    // set ref\r\n    if (ref != null && parentComponent) {\r\n      setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2)\r\n    }\r\n  }\r\n\r\n  const processText: ProcessTextOrCommentFn = (n1, n2, container, anchor) => {\r\n    if (n1 == null) {\r\n      hostInsert(\r\n        (n2.el = hostCreateText(n2.children as string)),\r\n        container,\r\n        anchor\r\n      )\r\n    } else {\r\n      const el = (n2.el = n1.el!)\r\n      if (n2.children !== n1.children) {\r\n        hostSetText(el, n2.children as string)\r\n      }\r\n    }\r\n  }\r\n\r\n  const processCommentNode: ProcessTextOrCommentFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor\r\n  ) => {\r\n    if (n1 == null) {\r\n      hostInsert(\r\n        (n2.el = hostCreateComment((n2.children as string) || '')),\r\n        container,\r\n        anchor\r\n      )\r\n    } else {\r\n      // there's no support for dynamic comments\r\n      n2.el = n1.el\r\n    }\r\n  }\r\n\r\n  const mountStaticNode = (\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    isSVG: boolean\r\n  ) => {\r\n    // static nodes are only present when used with compiler-dom/runtime-dom\r\n    // which guarantees presence of hostInsertStaticContent.\r\n    ;[n2.el, n2.anchor] = hostInsertStaticContent!(\r\n      n2.children as string,\r\n      container,\r\n      anchor,\r\n      isSVG,\r\n      n2.el,\r\n      n2.anchor\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Dev / HMR only\r\n   */\r\n  const patchStaticNode = (\r\n    n1: VNode,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    isSVG: boolean\r\n  ) => {\r\n    // static nodes are only patched during dev for HMR\r\n    if (n2.children !== n1.children) {\r\n      const anchor = hostNextSibling(n1.anchor!)\r\n      // remove existing\r\n      removeStaticNode(n1)\r\n      // insert new\r\n      ;[n2.el, n2.anchor] = hostInsertStaticContent!(\r\n        n2.children as string,\r\n        container,\r\n        anchor,\r\n        isSVG\r\n      )\r\n    } else {\r\n      n2.el = n1.el\r\n      n2.anchor = n1.anchor\r\n    }\r\n  }\r\n\r\n  const moveStaticNode = (\r\n    { el, anchor }: VNode,\r\n    container: RendererElement,\r\n    nextSibling: RendererNode | null\r\n  ) => {\r\n    let next\r\n    while (el && el !== anchor) {\r\n      next = hostNextSibling(el)\r\n      hostInsert(el, container, nextSibling)\r\n      el = next\r\n    }\r\n    hostInsert(anchor!, container, nextSibling)\r\n  }\r\n\r\n  const removeStaticNode = ({ el, anchor }: VNode) => {\r\n    let next\r\n    while (el && el !== anchor) {\r\n      next = hostNextSibling(el)\r\n      hostRemove(el)\r\n      el = next\r\n    }\r\n    hostRemove(anchor!)\r\n  }\r\n\r\n  const processElement = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    isSVG = isSVG || (n2.type as string) === 'svg'\r\n    if (n1 == null) {\r\n      mountElement(\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    } else {\r\n      patchElement(\r\n        n1,\r\n        n2,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    }\r\n  }\r\n\r\n  const mountElement = (\r\n    vnode: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    let el: RendererElement\r\n    let vnodeHook: VNodeHook | undefined | null\r\n    const { type, props, shapeFlag, transition, patchFlag, dirs } = vnode\r\n    if (\r\n      !__DEV__ &&\r\n      vnode.el &&\r\n      hostCloneNode !== undefined &&\r\n      patchFlag === PatchFlags.HOISTED\r\n    ) {\r\n      // If a vnode has non-null el, it means it's being reused.\r\n      // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n      // exactly the same, and we can simply do a clone here.\r\n      // only do this in production since cloned trees cannot be HMR updated.\r\n      el = vnode.el = hostCloneNode(vnode.el)\r\n    } else {\r\n      el = vnode.el = hostCreateElement(\r\n        vnode.type as string,\r\n        isSVG,\r\n        props && props.is,\r\n        props\r\n      )\r\n\r\n      // mount children first, since some props may rely on child content\r\n      // being already rendered, e.g. `<select value>`\r\n      if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n        hostSetElementText(el, vnode.children as string)\r\n      } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        mountChildren(\r\n          vnode.children as VNodeArrayChildren,\r\n          el,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG && type !== 'foreignObject',\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      }\r\n\r\n      if (dirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'created')\r\n      }\r\n      // props\r\n      if (props) {\r\n        for (const key in props) {\r\n          if (key !== 'value' && !isReservedProp(key)) {\r\n            hostPatchProp(\r\n              el,\r\n              key,\r\n              null,\r\n              props[key],\r\n              isSVG,\r\n              vnode.children as VNode[],\r\n              parentComponent,\r\n              parentSuspense,\r\n              unmountChildren\r\n            )\r\n          }\r\n        }\r\n        /**\r\n         * Special case for setting value on DOM elements:\r\n         * - it can be order-sensitive (e.g. should be set *after* min/max, #2325, #4024)\r\n         * - it needs to be forced (#1471)\r\n         * #2353 proposes adding another renderer option to configure this, but\r\n         * the properties affects are so finite it is worth special casing it\r\n         * here to reduce the complexity. (Special casing it also should not\r\n         * affect non-DOM renderers)\r\n         */\r\n        if ('value' in props) {\r\n          hostPatchProp(el, 'value', null, props.value)\r\n        }\r\n        if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n          invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n        }\r\n      }\r\n      // scopeId\r\n      setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent)\r\n    }\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      Object.defineProperty(el, '__vnode', {\r\n        value: vnode,\r\n        enumerable: false\r\n      })\r\n      Object.defineProperty(el, '__vueParentComponent', {\r\n        value: parentComponent,\r\n        enumerable: false\r\n      })\r\n    }\r\n    if (dirs) {\r\n      invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount')\r\n    }\r\n    // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n    // #1689 For inside suspense + suspense resolved case, just call it\r\n    const needCallTransitionHooks =\r\n      (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n      transition &&\r\n      !transition.persisted\r\n    if (needCallTransitionHooks) {\r\n      transition!.beforeEnter(el)\r\n    }\r\n    hostInsert(el, container, anchor)\r\n    if (\r\n      (vnodeHook = props && props.onVnodeMounted) ||\r\n      needCallTransitionHooks ||\r\n      dirs\r\n    ) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n        needCallTransitionHooks && transition!.enter(el)\r\n        dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  const setScopeId = (\r\n    el: RendererElement,\r\n    vnode: VNode,\r\n    scopeId: string | null,\r\n    slotScopeIds: string[] | null,\r\n    parentComponent: ComponentInternalInstance | null\r\n  ) => {\r\n    if (scopeId) {\r\n      hostSetScopeId(el, scopeId)\r\n    }\r\n    if (slotScopeIds) {\r\n      for (let i = 0; i < slotScopeIds.length; i++) {\r\n        hostSetScopeId(el, slotScopeIds[i])\r\n      }\r\n    }\r\n    if (parentComponent) {\r\n      let subTree = parentComponent.subTree\r\n      if (\r\n        __DEV__ &&\r\n        subTree.patchFlag > 0 &&\r\n        subTree.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT\r\n      ) {\r\n        subTree =\r\n          filterSingleRoot(subTree.children as VNodeArrayChildren) || subTree\r\n      }\r\n      if (vnode === subTree) {\r\n        const parentVNode = parentComponent.vnode\r\n        setScopeId(\r\n          el,\r\n          parentVNode,\r\n          parentVNode.scopeId,\r\n          parentVNode.slotScopeIds,\r\n          parentComponent.parent\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const mountChildren: MountChildrenFn = (\r\n    children,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized,\r\n    start = 0\r\n  ) => {\r\n    for (let i = start; i < children.length; i++) {\r\n      const child = (children[i] = optimized\r\n        ? cloneIfMounted(children[i] as VNode)\r\n        : normalizeVNode(children[i]))\r\n      patch(\r\n        null,\r\n        child,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    }\r\n  }\r\n\r\n  const patchElement = (\r\n    n1: VNode,\r\n    n2: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    const el = (n2.el = n1.el!)\r\n    let { patchFlag, dynamicChildren, dirs } = n2\r\n    // #1426 take the old vnode's patch flag into account since user may clone a\r\n    // compiler-generated vnode, which de-opts to FULL_PROPS\r\n    patchFlag |= n1.patchFlag & PatchFlags.FULL_PROPS\r\n    const oldProps = n1.props || EMPTY_OBJ\r\n    const newProps = n2.props || EMPTY_OBJ\r\n    let vnodeHook: VNodeHook | undefined | null\r\n\r\n    // disable recurse in beforeUpdate hooks\r\n    parentComponent && toggleRecurse(parentComponent, false)\r\n    if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n      invokeVNodeHook(vnodeHook, parentComponent, n2, n1)\r\n    }\r\n    if (dirs) {\r\n      invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate')\r\n    }\r\n    parentComponent && toggleRecurse(parentComponent, true)\r\n\r\n    if (__DEV__ && isHmrUpdating) {\r\n      // HMR updated, force full diff\r\n      patchFlag = 0\r\n      optimized = false\r\n      dynamicChildren = null\r\n    }\r\n\r\n    const areChildrenSVG = isSVG && n2.type !== 'foreignObject'\r\n    if (dynamicChildren) {\r\n      patchBlockChildren(\r\n        n1.dynamicChildren!,\r\n        dynamicChildren,\r\n        el,\r\n        parentComponent,\r\n        parentSuspense,\r\n        areChildrenSVG,\r\n        slotScopeIds\r\n      )\r\n      if (__DEV__ && parentComponent && parentComponent.type.__hmrId) {\r\n        traverseStaticChildren(n1, n2)\r\n      }\r\n    } else if (!optimized) {\r\n      // full diff\r\n      patchChildren(\r\n        n1,\r\n        n2,\r\n        el,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        areChildrenSVG,\r\n        slotScopeIds,\r\n        false\r\n      )\r\n    }\r\n\r\n    if (patchFlag > 0) {\r\n      // the presence of a patchFlag means this element's render code was\r\n      // generated by the compiler and can take the fast path.\r\n      // in this path old node and new node are guaranteed to have the same shape\r\n      // (i.e. at the exact same position in the source template)\r\n      if (patchFlag & PatchFlags.FULL_PROPS) {\r\n        // element props contain dynamic keys, full diff needed\r\n        patchProps(\r\n          el,\r\n          n2,\r\n          oldProps,\r\n          newProps,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG\r\n        )\r\n      } else {\r\n        // class\r\n        // this flag is matched when the element has dynamic class bindings.\r\n        if (patchFlag & PatchFlags.CLASS) {\r\n          if (oldProps.class !== newProps.class) {\r\n            hostPatchProp(el, 'class', null, newProps.class, isSVG)\r\n          }\r\n        }\r\n\r\n        // style\r\n        // this flag is matched when the element has dynamic style bindings\r\n        if (patchFlag & PatchFlags.STYLE) {\r\n          hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG)\r\n        }\r\n\r\n        // props\r\n        // This flag is matched when the element has dynamic prop/attr bindings\r\n        // other than class and style. The keys of dynamic prop/attrs are saved for\r\n        // faster iteration.\r\n        // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n        // bail out and go through a full diff because we need to unset the old key\r\n        if (patchFlag & PatchFlags.PROPS) {\r\n          // if the flag is present then dynamicProps must be non-null\r\n          const propsToUpdate = n2.dynamicProps!\r\n          for (let i = 0; i < propsToUpdate.length; i++) {\r\n            const key = propsToUpdate[i]\r\n            const prev = oldProps[key]\r\n            const next = newProps[key]\r\n            // #1471 force patch value\r\n            if (next !== prev || key === 'value') {\r\n              hostPatchProp(\r\n                el,\r\n                key,\r\n                prev,\r\n                next,\r\n                isSVG,\r\n                n1.children as VNode[],\r\n                parentComponent,\r\n                parentSuspense,\r\n                unmountChildren\r\n              )\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // text\r\n      // This flag is matched when the element has only dynamic text children.\r\n      if (patchFlag & PatchFlags.TEXT) {\r\n        if (n1.children !== n2.children) {\r\n          hostSetElementText(el, n2.children as string)\r\n        }\r\n      }\r\n    } else if (!optimized && dynamicChildren == null) {\r\n      // unoptimized, full diff\r\n      patchProps(\r\n        el,\r\n        n2,\r\n        oldProps,\r\n        newProps,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG\r\n      )\r\n    }\r\n\r\n    if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1)\r\n        dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  // The fast path for blocks.\r\n  const patchBlockChildren: PatchBlockChildrenFn = (\r\n    oldChildren,\r\n    newChildren,\r\n    fallbackContainer,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    slotScopeIds\r\n  ) => {\r\n    for (let i = 0; i < newChildren.length; i++) {\r\n      const oldVNode = oldChildren[i]\r\n      const newVNode = newChildren[i]\r\n      // Determine the container (parent element) for the patch.\r\n      const container =\r\n        // oldVNode may be an errored async setup() component inside Suspense\r\n        // which will not have a mounted element\r\n        oldVNode.el &&\r\n        // - In the case of a Fragment, we need to provide the actual parent\r\n        // of the Fragment itself so it can move its children.\r\n        (oldVNode.type === Fragment ||\r\n          // - In the case of different nodes, there is going to be a replacement\r\n          // which also requires the correct parent container\r\n          !isSameVNodeType(oldVNode, newVNode) ||\r\n          // - In the case of a component, it could contain anything.\r\n          oldVNode.shapeFlag & (ShapeFlags.COMPONENT | ShapeFlags.TELEPORT))\r\n          ? hostParentNode(oldVNode.el)!\r\n          : // In other cases, the parent container is not actually used so we\r\n            // just pass the block element here to avoid a DOM parentNode call.\r\n            fallbackContainer\r\n      patch(\r\n        oldVNode,\r\n        newVNode,\r\n        container,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        true\r\n      )\r\n    }\r\n  }\r\n\r\n  const patchProps = (\r\n    el: RendererElement,\r\n    vnode: VNode,\r\n    oldProps: Data,\r\n    newProps: Data,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean\r\n  ) => {\r\n    if (oldProps !== newProps) {\r\n      for (const key in newProps) {\r\n        // empty string is not valid prop\r\n        if (isReservedProp(key)) continue\r\n        const next = newProps[key]\r\n        const prev = oldProps[key]\r\n        // defer patching value\r\n        if (next !== prev && key !== 'value') {\r\n          hostPatchProp(\r\n            el,\r\n            key,\r\n            prev,\r\n            next,\r\n            isSVG,\r\n            vnode.children as VNode[],\r\n            parentComponent,\r\n            parentSuspense,\r\n            unmountChildren\r\n          )\r\n        }\r\n      }\r\n      if (oldProps !== EMPTY_OBJ) {\r\n        for (const key in oldProps) {\r\n          if (!isReservedProp(key) && !(key in newProps)) {\r\n            hostPatchProp(\r\n              el,\r\n              key,\r\n              oldProps[key],\r\n              null,\r\n              isSVG,\r\n              vnode.children as VNode[],\r\n              parentComponent,\r\n              parentSuspense,\r\n              unmountChildren\r\n            )\r\n          }\r\n        }\r\n      }\r\n      if ('value' in newProps) {\r\n        hostPatchProp(el, 'value', oldProps.value, newProps.value)\r\n      }\r\n    }\r\n  }\r\n\r\n  const processFragment = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''))!\r\n    const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''))!\r\n\r\n    let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2\r\n\r\n    if (\r\n      __DEV__ &&\r\n      // #5523 dev root fragment may inherit directives\r\n      (isHmrUpdating || patchFlag & PatchFlags.DEV_ROOT_FRAGMENT)\r\n    ) {\r\n      // HMR updated / Dev root fragment (w/ comments), force full diff\r\n      patchFlag = 0\r\n      optimized = false\r\n      dynamicChildren = null\r\n    }\r\n\r\n    // check if this is a slot fragment with :slotted scope ids\r\n    if (fragmentSlotScopeIds) {\r\n      slotScopeIds = slotScopeIds\r\n        ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n        : fragmentSlotScopeIds\r\n    }\r\n\r\n    if (n1 == null) {\r\n      hostInsert(fragmentStartAnchor, container, anchor)\r\n      hostInsert(fragmentEndAnchor, container, anchor)\r\n      // a fragment can only have array children\r\n      // since they are either generated by the compiler, or implicitly created\r\n      // from arrays.\r\n      mountChildren(\r\n        n2.children as VNodeArrayChildren,\r\n        container,\r\n        fragmentEndAnchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    } else {\r\n      if (\r\n        patchFlag > 0 &&\r\n        patchFlag & PatchFlags.STABLE_FRAGMENT &&\r\n        dynamicChildren &&\r\n        // #2715 the previous fragment could've been a BAILed one as a result\r\n        // of renderSlot() with no valid children\r\n        n1.dynamicChildren\r\n      ) {\r\n        // a stable fragment (template root or <template v-for>) doesn't need to\r\n        // patch children order, but it may contain dynamicChildren.\r\n        patchBlockChildren(\r\n          n1.dynamicChildren,\r\n          dynamicChildren,\r\n          container,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds\r\n        )\r\n        if (__DEV__ && parentComponent && parentComponent.type.__hmrId) {\r\n          traverseStaticChildren(n1, n2)\r\n        } else if (\r\n          // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n          //  get moved around. Make sure all root level vnodes inherit el.\r\n          // #2134 or if it's a component root, it may also get moved around\r\n          // as the component is being moved.\r\n          n2.key != null ||\r\n          (parentComponent && n2 === parentComponent.subTree)\r\n        ) {\r\n          traverseStaticChildren(n1, n2, true /* shallow */)\r\n        }\r\n      } else {\r\n        // keyed / unkeyed, or manual fragments.\r\n        // for keyed & unkeyed, since they are compiler generated from v-for,\r\n        // each child is guaranteed to be a block so the fragment will never\r\n        // have dynamicChildren.\r\n        patchChildren(\r\n          n1,\r\n          n2,\r\n          container,\r\n          fragmentEndAnchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const processComponent = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    n2.slotScopeIds = slotScopeIds\r\n    if (n1 == null) {\r\n      if (n2.shapeFlag & ShapeFlags.COMPONENT_KEPT_ALIVE) {\r\n        ;(parentComponent!.ctx as KeepAliveContext).activate(\r\n          n2,\r\n          container,\r\n          anchor,\r\n          isSVG,\r\n          optimized\r\n        )\r\n      } else {\r\n        mountComponent(\r\n          n2,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          optimized\r\n        )\r\n      }\r\n    } else {\r\n      updateComponent(n1, n2, optimized)\r\n    }\r\n  }\r\n\r\n  const mountComponent: MountComponentFn = (\r\n    initialVNode,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    optimized\r\n  ) => {\r\n    // 2.x compat may pre-create the component instance before actually\r\n    // mounting\r\n    const compatMountInstance =\r\n      __COMPAT__ && initialVNode.isCompatRoot && initialVNode.component\r\n    const instance: ComponentInternalInstance =\r\n      compatMountInstance ||\r\n      (initialVNode.component = createComponentInstance(\r\n        initialVNode,\r\n        parentComponent,\r\n        parentSuspense\r\n      ))\r\n\r\n    if (__DEV__ && instance.type.__hmrId) {\r\n      registerHMR(instance)\r\n    }\r\n\r\n    if (__DEV__) {\r\n      pushWarningContext(initialVNode)\r\n      startMeasure(instance, `mount`)\r\n    }\r\n\r\n    // inject renderer internals for keepAlive\r\n    if (isKeepAlive(initialVNode)) {\r\n      ;(instance.ctx as KeepAliveContext).renderer = internals\r\n    }\r\n\r\n    // resolve props and slots for setup context\r\n    if (!(__COMPAT__ && compatMountInstance)) {\r\n      if (__DEV__) {\r\n        startMeasure(instance, `init`)\r\n      }\r\n      setupComponent(instance)\r\n      if (__DEV__) {\r\n        endMeasure(instance, `init`)\r\n      }\r\n    }\r\n\r\n    // setup() is async. This component relies on async logic to be resolved\r\n    // before proceeding\r\n    if (__FEATURE_SUSPENSE__ && instance.asyncDep) {\r\n      parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect)\r\n\r\n      // Give it a placeholder if this is not hydration\r\n      // TODO handle self-defined fallback\r\n      if (!initialVNode.el) {\r\n        const placeholder = (instance.subTree = createVNode(Comment))\r\n        processCommentNode(null, placeholder, container!, anchor)\r\n      }\r\n      return\r\n    }\r\n\r\n    setupRenderEffect(\r\n      instance,\r\n      initialVNode,\r\n      container,\r\n      anchor,\r\n      parentSuspense,\r\n      isSVG,\r\n      optimized\r\n    )\r\n\r\n    if (__DEV__) {\r\n      popWarningContext()\r\n      endMeasure(instance, `mount`)\r\n    }\r\n  }\r\n\r\n  const updateComponent = (n1: VNode, n2: VNode, optimized: boolean) => {\r\n    const instance = (n2.component = n1.component)!\r\n    if (shouldUpdateComponent(n1, n2, optimized)) {\r\n      if (\r\n        __FEATURE_SUSPENSE__ &&\r\n        instance.asyncDep &&\r\n        !instance.asyncResolved\r\n      ) {\r\n        // async & still pending - just update props and slots\r\n        // since the component's reactive effect for render isn't set-up yet\r\n        if (__DEV__) {\r\n          pushWarningContext(n2)\r\n        }\r\n        updateComponentPreRender(instance, n2, optimized)\r\n        if (__DEV__) {\r\n          popWarningContext()\r\n        }\r\n        return\r\n      } else {\r\n        // normal update\r\n        instance.next = n2\r\n        // in case the child component is also queued, remove it to avoid\r\n        // double updating the same child component in the same flush.\r\n        invalidateJob(instance.update)\r\n        // instance.update is the reactive effect.\r\n        instance.update()\r\n      }\r\n    } else {\r\n      // no update needed. just copy over properties\r\n      n2.el = n1.el\r\n      instance.vnode = n2\r\n    }\r\n  }\r\n\r\n  const setupRenderEffect: SetupRenderEffectFn = (\r\n    instance,\r\n    initialVNode,\r\n    container,\r\n    anchor,\r\n    parentSuspense,\r\n    isSVG,\r\n    optimized\r\n  ) => {\r\n    const componentUpdateFn = () => {\r\n      if (!instance.isMounted) {\r\n        let vnodeHook: VNodeHook | null | undefined\r\n        const { el, props } = initialVNode\r\n        const { bm, m, parent } = instance\r\n        const isAsyncWrapperVNode = isAsyncWrapper(initialVNode)\r\n\r\n        toggleRecurse(instance, false)\r\n        // beforeMount hook\r\n        if (bm) {\r\n          invokeArrayFns(bm)\r\n        }\r\n        // onVnodeBeforeMount\r\n        if (\r\n          !isAsyncWrapperVNode &&\r\n          (vnodeHook = props && props.onVnodeBeforeMount)\r\n        ) {\r\n          invokeVNodeHook(vnodeHook, parent, initialVNode)\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          instance.emit('hook:beforeMount')\r\n        }\r\n        toggleRecurse(instance, true)\r\n\r\n        if (el && hydrateNode) {\r\n          // vnode has adopted host node - perform hydration instead of mount.\r\n          const hydrateSubTree = () => {\r\n            if (__DEV__) {\r\n              startMeasure(instance, `render`)\r\n            }\r\n            instance.subTree = renderComponentRoot(instance)\r\n            if (__DEV__) {\r\n              endMeasure(instance, `render`)\r\n            }\r\n            if (__DEV__) {\r\n              startMeasure(instance, `hydrate`)\r\n            }\r\n            hydrateNode!(\r\n              el as Node,\r\n              instance.subTree,\r\n              instance,\r\n              parentSuspense,\r\n              null\r\n            )\r\n            if (__DEV__) {\r\n              endMeasure(instance, `hydrate`)\r\n            }\r\n          }\r\n\r\n          if (isAsyncWrapperVNode) {\r\n            ;(initialVNode.type as ComponentOptions).__asyncLoader!().then(\r\n              // note: we are moving the render call into an async callback,\r\n              // which means it won't track dependencies - but it's ok because\r\n              // a server-rendered async wrapper is already in resolved state\r\n              // and it will never need to change.\r\n              () => !instance.isUnmounted && hydrateSubTree()\r\n            )\r\n          } else {\r\n            hydrateSubTree()\r\n          }\r\n        } else {\r\n          if (__DEV__) {\r\n            startMeasure(instance, `render`)\r\n          }\r\n          const subTree = (instance.subTree = renderComponentRoot(instance))\r\n          if (__DEV__) {\r\n            endMeasure(instance, `render`)\r\n          }\r\n          if (__DEV__) {\r\n            startMeasure(instance, `patch`)\r\n          }\r\n          patch(\r\n            null,\r\n            subTree,\r\n            container,\r\n            anchor,\r\n            instance,\r\n            parentSuspense,\r\n            isSVG\r\n          )\r\n          if (__DEV__) {\r\n            endMeasure(instance, `patch`)\r\n          }\r\n          initialVNode.el = subTree.el\r\n        }\r\n        // mounted hook\r\n        if (m) {\r\n          queuePostRenderEffect(m, parentSuspense)\r\n        }\r\n        // onVnodeMounted\r\n        if (\r\n          !isAsyncWrapperVNode &&\r\n          (vnodeHook = props && props.onVnodeMounted)\r\n        ) {\r\n          const scopedInitialVNode = initialVNode\r\n          queuePostRenderEffect(\r\n            () => invokeVNodeHook(vnodeHook!, parent, scopedInitialVNode),\r\n            parentSuspense\r\n          )\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          queuePostRenderEffect(\r\n            () => instance.emit('hook:mounted'),\r\n            parentSuspense\r\n          )\r\n        }\r\n\r\n        // activated hook for keep-alive roots.\r\n        // #1742 activated hook must be accessed after first render\r\n        // since the hook may be injected by a child keep-alive\r\n        if (\r\n          initialVNode.shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE ||\r\n          (parent &&\r\n            isAsyncWrapper(parent.vnode) &&\r\n            parent.vnode.shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE)\r\n        ) {\r\n          instance.a && queuePostRenderEffect(instance.a, parentSuspense)\r\n          if (\r\n            __COMPAT__ &&\r\n            isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n          ) {\r\n            queuePostRenderEffect(\r\n              () => instance.emit('hook:activated'),\r\n              parentSuspense\r\n            )\r\n          }\r\n        }\r\n        instance.isMounted = true\r\n\r\n        if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n          devtoolsComponentAdded(instance)\r\n        }\r\n\r\n        // #2458: deference mount-only object parameters to prevent memleaks\r\n        initialVNode = container = anchor = null as any\r\n      } else {\r\n        // updateComponent\r\n        // This is triggered by mutation of component's own state (next: null)\r\n        // OR parent calling processComponent (next: VNode)\r\n        let { next, bu, u, parent, vnode } = instance\r\n        let originNext = next\r\n        let vnodeHook: VNodeHook | null | undefined\r\n        if (__DEV__) {\r\n          pushWarningContext(next || instance.vnode)\r\n        }\r\n\r\n        // Disallow component effect recursion during pre-lifecycle hooks.\r\n        toggleRecurse(instance, false)\r\n        if (next) {\r\n          next.el = vnode.el\r\n          updateComponentPreRender(instance, next, optimized)\r\n        } else {\r\n          next = vnode\r\n        }\r\n\r\n        // beforeUpdate hook\r\n        if (bu) {\r\n          invokeArrayFns(bu)\r\n        }\r\n        // onVnodeBeforeUpdate\r\n        if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n          invokeVNodeHook(vnodeHook, parent, next, vnode)\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          instance.emit('hook:beforeUpdate')\r\n        }\r\n        toggleRecurse(instance, true)\r\n\r\n        // render\r\n        if (__DEV__) {\r\n          startMeasure(instance, `render`)\r\n        }\r\n        const nextTree = renderComponentRoot(instance)\r\n        if (__DEV__) {\r\n          endMeasure(instance, `render`)\r\n        }\r\n        const prevTree = instance.subTree\r\n        instance.subTree = nextTree\r\n\r\n        if (__DEV__) {\r\n          startMeasure(instance, `patch`)\r\n        }\r\n        patch(\r\n          prevTree,\r\n          nextTree,\r\n          // parent may have changed if it's in a teleport\r\n          hostParentNode(prevTree.el!)!,\r\n          // anchor may have changed if it's in a fragment\r\n          getNextHostNode(prevTree),\r\n          instance,\r\n          parentSuspense,\r\n          isSVG\r\n        )\r\n        if (__DEV__) {\r\n          endMeasure(instance, `patch`)\r\n        }\r\n        next.el = nextTree.el\r\n        if (originNext === null) {\r\n          // self-triggered update. In case of HOC, update parent component\r\n          // vnode el. HOC is indicated by parent instance's subTree pointing\r\n          // to child component's vnode\r\n          updateHOCHostEl(instance, nextTree.el)\r\n        }\r\n        // updated hook\r\n        if (u) {\r\n          queuePostRenderEffect(u, parentSuspense)\r\n        }\r\n        // onVnodeUpdated\r\n        if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n          queuePostRenderEffect(\r\n            () => invokeVNodeHook(vnodeHook!, parent, next!, vnode),\r\n            parentSuspense\r\n          )\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          queuePostRenderEffect(\r\n            () => instance.emit('hook:updated'),\r\n            parentSuspense\r\n          )\r\n        }\r\n\r\n        if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n          devtoolsComponentUpdated(instance)\r\n        }\r\n\r\n        if (__DEV__) {\r\n          popWarningContext()\r\n        }\r\n      }\r\n    }\r\n\r\n    // create reactive effect for rendering\r\n    const effect = (instance.effect = new ReactiveEffect(\r\n      componentUpdateFn,\r\n      () => queueJob(update),\r\n      instance.scope // track it in component's effect scope\r\n    ))\r\n\r\n    const update: SchedulerJob = (instance.update = () => effect.run())\r\n    update.id = instance.uid\r\n    // allowRecurse\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    toggleRecurse(instance, true)\r\n\r\n    if (__DEV__) {\r\n      effect.onTrack = instance.rtc\r\n        ? e => invokeArrayFns(instance.rtc!, e)\r\n        : void 0\r\n      effect.onTrigger = instance.rtg\r\n        ? e => invokeArrayFns(instance.rtg!, e)\r\n        : void 0\r\n      update.ownerInstance = instance\r\n    }\r\n\r\n    update()\r\n  }\r\n\r\n  const updateComponentPreRender = (\r\n    instance: ComponentInternalInstance,\r\n    nextVNode: VNode,\r\n    optimized: boolean\r\n  ) => {\r\n    nextVNode.component = instance\r\n    const prevProps = instance.vnode.props\r\n    instance.vnode = nextVNode\r\n    instance.next = null\r\n    updateProps(instance, nextVNode.props, prevProps, optimized)\r\n    updateSlots(instance, nextVNode.children, optimized)\r\n\r\n    pauseTracking()\r\n    // props update may have triggered pre-flush watchers.\r\n    // flush them before the render update.\r\n    flushPreFlushCbs(undefined, instance.update)\r\n    resetTracking()\r\n  }\r\n\r\n  const patchChildren: PatchChildrenFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized = false\r\n  ) => {\r\n    const c1 = n1 && n1.children\r\n    const prevShapeFlag = n1 ? n1.shapeFlag : 0\r\n    const c2 = n2.children\r\n\r\n    const { patchFlag, shapeFlag } = n2\r\n    // fast path\r\n    if (patchFlag > 0) {\r\n      if (patchFlag & PatchFlags.KEYED_FRAGMENT) {\r\n        // this could be either fully-keyed or mixed (some keyed some not)\r\n        // presence of patchFlag means children are guaranteed to be arrays\r\n        patchKeyedChildren(\r\n          c1 as VNode[],\r\n          c2 as VNodeArrayChildren,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        return\r\n      } else if (patchFlag & PatchFlags.UNKEYED_FRAGMENT) {\r\n        // unkeyed\r\n        patchUnkeyedChildren(\r\n          c1 as VNode[],\r\n          c2 as VNodeArrayChildren,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        return\r\n      }\r\n    }\r\n\r\n    // children has 3 possibilities: text, array or no children.\r\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n      // text children fast path\r\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        unmountChildren(c1 as VNode[], parentComponent, parentSuspense)\r\n      }\r\n      if (c2 !== c1) {\r\n        hostSetElementText(container, c2 as string)\r\n      }\r\n    } else {\r\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        // prev children was array\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          // two arrays, cannot assume anything, do full diff\r\n          patchKeyedChildren(\r\n            c1 as VNode[],\r\n            c2 as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else {\r\n          // no new children, just unmount old\r\n          unmountChildren(c1 as VNode[], parentComponent, parentSuspense, true)\r\n        }\r\n      } else {\r\n        // prev children was text OR null\r\n        // new children is array OR null\r\n        if (prevShapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n          hostSetElementText(container, '')\r\n        }\r\n        // mount new if array\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          mountChildren(\r\n            c2 as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const patchUnkeyedChildren = (\r\n    c1: VNode[],\r\n    c2: VNodeArrayChildren,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    c1 = c1 || EMPTY_ARR\r\n    c2 = c2 || EMPTY_ARR\r\n    const oldLength = c1.length\r\n    const newLength = c2.length\r\n    const commonLength = Math.min(oldLength, newLength)\r\n    let i\r\n    for (i = 0; i < commonLength; i++) {\r\n      const nextChild = (c2[i] = optimized\r\n        ? cloneIfMounted(c2[i] as VNode)\r\n        : normalizeVNode(c2[i]))\r\n      patch(\r\n        c1[i],\r\n        nextChild,\r\n        container,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    }\r\n    if (oldLength > newLength) {\r\n      // remove old\r\n      unmountChildren(\r\n        c1,\r\n        parentComponent,\r\n        parentSuspense,\r\n        true,\r\n        false,\r\n        commonLength\r\n      )\r\n    } else {\r\n      // mount new\r\n      mountChildren(\r\n        c2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized,\r\n        commonLength\r\n      )\r\n    }\r\n  }\r\n\r\n  // can be all-keyed or mixed\r\n  const patchKeyedChildren = (\r\n    c1: VNode[],\r\n    c2: VNodeArrayChildren,\r\n    container: RendererElement,\r\n    parentAnchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    let i = 0\r\n    const l2 = c2.length\r\n    let e1 = c1.length - 1 // prev ending index\r\n    let e2 = l2 - 1 // next ending index\r\n\r\n    // 1. sync from start\r\n    // (a b) c\r\n    // (a b) d e\r\n    while (i <= e1 && i <= e2) {\r\n      const n1 = c1[i]\r\n      const n2 = (c2[i] = optimized\r\n        ? cloneIfMounted(c2[i] as VNode)\r\n        : normalizeVNode(c2[i]))\r\n      if (isSameVNodeType(n1, n2)) {\r\n        patch(\r\n          n1,\r\n          n2,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      } else {\r\n        break\r\n      }\r\n      i++\r\n    }\r\n\r\n    // 2. sync from end\r\n    // a (b c)\r\n    // d e (b c)\r\n    while (i <= e1 && i <= e2) {\r\n      const n1 = c1[e1]\r\n      const n2 = (c2[e2] = optimized\r\n        ? cloneIfMounted(c2[e2] as VNode)\r\n        : normalizeVNode(c2[e2]))\r\n      if (isSameVNodeType(n1, n2)) {\r\n        patch(\r\n          n1,\r\n          n2,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      } else {\r\n        break\r\n      }\r\n      e1--\r\n      e2--\r\n    }\r\n\r\n    // 3. common sequence + mount\r\n    // (a b)\r\n    // (a b) c\r\n    // i = 2, e1 = 1, e2 = 2\r\n    // (a b)\r\n    // c (a b)\r\n    // i = 0, e1 = -1, e2 = 0\r\n    if (i > e1) {\r\n      if (i <= e2) {\r\n        const nextPos = e2 + 1\r\n        const anchor = nextPos < l2 ? (c2[nextPos] as VNode).el : parentAnchor\r\n        while (i <= e2) {\r\n          patch(\r\n            null,\r\n            (c2[i] = optimized\r\n              ? cloneIfMounted(c2[i] as VNode)\r\n              : normalizeVNode(c2[i])),\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n          i++\r\n        }\r\n      }\r\n    }\r\n\r\n    // 4. common sequence + unmount\r\n    // (a b) c\r\n    // (a b)\r\n    // i = 2, e1 = 2, e2 = 1\r\n    // a (b c)\r\n    // (b c)\r\n    // i = 0, e1 = 0, e2 = -1\r\n    else if (i > e2) {\r\n      while (i <= e1) {\r\n        unmount(c1[i], parentComponent, parentSuspense, true)\r\n        i++\r\n      }\r\n    }\r\n\r\n    // 5. unknown sequence\r\n    // [i ... e1 + 1]: a b [c d e] f g\r\n    // [i ... e2 + 1]: a b [e d c h] f g\r\n    // i = 2, e1 = 4, e2 = 5\r\n    else {\r\n      const s1 = i // prev starting index\r\n      const s2 = i // next starting index\r\n\r\n      // 5.1 build key:index map for newChildren\r\n      const keyToNewIndexMap: Map<string | number | symbol, number> = new Map()\r\n      for (i = s2; i <= e2; i++) {\r\n        const nextChild = (c2[i] = optimized\r\n          ? cloneIfMounted(c2[i] as VNode)\r\n          : normalizeVNode(c2[i]))\r\n        if (nextChild.key != null) {\r\n          if (__DEV__ && keyToNewIndexMap.has(nextChild.key)) {\r\n            warn(\r\n              `Duplicate keys found during update:`,\r\n              JSON.stringify(nextChild.key),\r\n              `Make sure keys are unique.`\r\n            )\r\n          }\r\n          keyToNewIndexMap.set(nextChild.key, i)\r\n        }\r\n      }\r\n\r\n      // 5.2 loop through old children left to be patched and try to patch\r\n      // matching nodes & remove nodes that are no longer present\r\n      let j\r\n      let patched = 0\r\n      const toBePatched = e2 - s2 + 1\r\n      let moved = false\r\n      // used to track whether any node has moved\r\n      let maxNewIndexSoFar = 0\r\n      // works as Map<newIndex, oldIndex>\r\n      // Note that oldIndex is offset by +1\r\n      // and oldIndex = 0 is a special value indicating the new node has\r\n      // no corresponding old node.\r\n      // used for determining longest stable subsequence\r\n      const newIndexToOldIndexMap = new Array(toBePatched)\r\n      for (i = 0; i < toBePatched; i++) newIndexToOldIndexMap[i] = 0\r\n\r\n      for (i = s1; i <= e1; i++) {\r\n        const prevChild = c1[i]\r\n        if (patched >= toBePatched) {\r\n          // all new children have been patched so this can only be a removal\r\n          unmount(prevChild, parentComponent, parentSuspense, true)\r\n          continue\r\n        }\r\n        let newIndex\r\n        if (prevChild.key != null) {\r\n          newIndex = keyToNewIndexMap.get(prevChild.key)\r\n        } else {\r\n          // key-less node, try to locate a key-less node of the same type\r\n          for (j = s2; j <= e2; j++) {\r\n            if (\r\n              newIndexToOldIndexMap[j - s2] === 0 &&\r\n              isSameVNodeType(prevChild, c2[j] as VNode)\r\n            ) {\r\n              newIndex = j\r\n              break\r\n            }\r\n          }\r\n        }\r\n        if (newIndex === undefined) {\r\n          unmount(prevChild, parentComponent, parentSuspense, true)\r\n        } else {\r\n          newIndexToOldIndexMap[newIndex - s2] = i + 1\r\n          if (newIndex >= maxNewIndexSoFar) {\r\n            maxNewIndexSoFar = newIndex\r\n          } else {\r\n            moved = true\r\n          }\r\n          patch(\r\n            prevChild,\r\n            c2[newIndex] as VNode,\r\n            container,\r\n            null,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n          patched++\r\n        }\r\n      }\r\n\r\n      // 5.3 move and mount\r\n      // generate longest stable subsequence only when nodes have moved\r\n      const increasingNewIndexSequence = moved\r\n        ? getSequence(newIndexToOldIndexMap)\r\n        : EMPTY_ARR\r\n      j = increasingNewIndexSequence.length - 1\r\n      // looping backwards so that we can use last patched node as anchor\r\n      for (i = toBePatched - 1; i >= 0; i--) {\r\n        const nextIndex = s2 + i\r\n        const nextChild = c2[nextIndex] as VNode\r\n        const anchor =\r\n          nextIndex + 1 < l2 ? (c2[nextIndex + 1] as VNode).el : parentAnchor\r\n        if (newIndexToOldIndexMap[i] === 0) {\r\n          // mount new\r\n          patch(\r\n            null,\r\n            nextChild,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else if (moved) {\r\n          // move if:\r\n          // There is no stable subsequence (e.g. a reverse)\r\n          // OR current node is not among the stable sequence\r\n          if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n            move(nextChild, container, anchor, MoveType.REORDER)\r\n          } else {\r\n            j--\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const move: MoveFn = (\r\n    vnode,\r\n    container,\r\n    anchor,\r\n    moveType,\r\n    parentSuspense = null\r\n  ) => {\r\n    const { el, type, transition, children, shapeFlag } = vnode\r\n    if (shapeFlag & ShapeFlags.COMPONENT) {\r\n      move(vnode.component!.subTree, container, anchor, moveType)\r\n      return\r\n    }\r\n\r\n    if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n      vnode.suspense!.move(container, anchor, moveType)\r\n      return\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.TELEPORT) {\r\n      ;(type as typeof TeleportImpl).move(vnode, container, anchor, internals)\r\n      return\r\n    }\r\n\r\n    if (type === Fragment) {\r\n      hostInsert(el!, container, anchor)\r\n      for (let i = 0; i < (children as VNode[]).length; i++) {\r\n        move((children as VNode[])[i], container, anchor, moveType)\r\n      }\r\n      hostInsert(vnode.anchor!, container, anchor)\r\n      return\r\n    }\r\n\r\n    if (type === Static) {\r\n      moveStaticNode(vnode, container, anchor)\r\n      return\r\n    }\r\n\r\n    // single nodes\r\n    const needTransition =\r\n      moveType !== MoveType.REORDER &&\r\n      shapeFlag & ShapeFlags.ELEMENT &&\r\n      transition\r\n    if (needTransition) {\r\n      if (moveType === MoveType.ENTER) {\r\n        transition!.beforeEnter(el!)\r\n        hostInsert(el!, container, anchor)\r\n        queuePostRenderEffect(() => transition!.enter(el!), parentSuspense)\r\n      } else {\r\n        const { leave, delayLeave, afterLeave } = transition!\r\n        const remove = () => hostInsert(el!, container, anchor)\r\n        const performLeave = () => {\r\n          leave(el!, () => {\r\n            remove()\r\n            afterLeave && afterLeave()\r\n          })\r\n        }\r\n        if (delayLeave) {\r\n          delayLeave(el!, remove, performLeave)\r\n        } else {\r\n          performLeave()\r\n        }\r\n      }\r\n    } else {\r\n      hostInsert(el!, container, anchor)\r\n    }\r\n  }\r\n\r\n  const unmount: UnmountFn = (\r\n    vnode,\r\n    parentComponent,\r\n    parentSuspense,\r\n    doRemove = false,\r\n    optimized = false\r\n  ) => {\r\n    const {\r\n      type,\r\n      props,\r\n      ref,\r\n      children,\r\n      dynamicChildren,\r\n      shapeFlag,\r\n      patchFlag,\r\n      dirs\r\n    } = vnode\r\n    // unset ref\r\n    if (ref != null) {\r\n      setRef(ref, null, parentSuspense, vnode, true)\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE) {\r\n      ;(parentComponent!.ctx as KeepAliveContext).deactivate(vnode)\r\n      return\r\n    }\r\n\r\n    const shouldInvokeDirs = shapeFlag & ShapeFlags.ELEMENT && dirs\r\n    const shouldInvokeVnodeHook = !isAsyncWrapper(vnode)\r\n\r\n    let vnodeHook: VNodeHook | undefined | null\r\n    if (\r\n      shouldInvokeVnodeHook &&\r\n      (vnodeHook = props && props.onVnodeBeforeUnmount)\r\n    ) {\r\n      invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.COMPONENT) {\r\n      unmountComponent(vnode.component!, parentSuspense, doRemove)\r\n    } else {\r\n      if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n        vnode.suspense!.unmount(parentSuspense, doRemove)\r\n        return\r\n      }\r\n\r\n      if (shouldInvokeDirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount')\r\n      }\r\n\r\n      if (shapeFlag & ShapeFlags.TELEPORT) {\r\n        ;(vnode.type as typeof TeleportImpl).remove(\r\n          vnode,\r\n          parentComponent,\r\n          parentSuspense,\r\n          optimized,\r\n          internals,\r\n          doRemove\r\n        )\r\n      } else if (\r\n        dynamicChildren &&\r\n        // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n        (type !== Fragment ||\r\n          (patchFlag > 0 && patchFlag & PatchFlags.STABLE_FRAGMENT))\r\n      ) {\r\n        // fast path for block nodes: only need to unmount dynamic children.\r\n        unmountChildren(\r\n          dynamicChildren,\r\n          parentComponent,\r\n          parentSuspense,\r\n          false,\r\n          true\r\n        )\r\n      } else if (\r\n        (type === Fragment &&\r\n          patchFlag &\r\n            (PatchFlags.KEYED_FRAGMENT | PatchFlags.UNKEYED_FRAGMENT)) ||\r\n        (!optimized && shapeFlag & ShapeFlags.ARRAY_CHILDREN)\r\n      ) {\r\n        unmountChildren(children as VNode[], parentComponent, parentSuspense)\r\n      }\r\n\r\n      if (doRemove) {\r\n        remove(vnode)\r\n      }\r\n    }\r\n\r\n    if (\r\n      (shouldInvokeVnodeHook &&\r\n        (vnodeHook = props && props.onVnodeUnmounted)) ||\r\n      shouldInvokeDirs\r\n    ) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n        shouldInvokeDirs &&\r\n          invokeDirectiveHook(vnode, null, parentComponent, 'unmounted')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  const remove: RemoveFn = vnode => {\r\n    const { type, el, anchor, transition } = vnode\r\n    if (type === Fragment) {\r\n      if (\r\n        __DEV__ &&\r\n        vnode.patchFlag > 0 &&\r\n        vnode.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT &&\r\n        transition &&\r\n        !transition.persisted\r\n      ) {\r\n        ;(vnode.children as VNode[]).forEach(child => {\r\n          if (child.type === Comment) {\r\n            hostRemove(child.el!)\r\n          } else {\r\n            remove(child)\r\n          }\r\n        })\r\n      } else {\r\n        removeFragment(el!, anchor!)\r\n      }\r\n      return\r\n    }\r\n\r\n    if (type === Static) {\r\n      removeStaticNode(vnode)\r\n      return\r\n    }\r\n\r\n    const performRemove = () => {\r\n      hostRemove(el!)\r\n      if (transition && !transition.persisted && transition.afterLeave) {\r\n        transition.afterLeave()\r\n      }\r\n    }\r\n\r\n    if (\r\n      vnode.shapeFlag & ShapeFlags.ELEMENT &&\r\n      transition &&\r\n      !transition.persisted\r\n    ) {\r\n      const { leave, delayLeave } = transition\r\n      const performLeave = () => leave(el!, performRemove)\r\n      if (delayLeave) {\r\n        delayLeave(vnode.el!, performRemove, performLeave)\r\n      } else {\r\n        performLeave()\r\n      }\r\n    } else {\r\n      performRemove()\r\n    }\r\n  }\r\n\r\n  const removeFragment = (cur: RendererNode, end: RendererNode) => {\r\n    // For fragments, directly remove all contained DOM nodes.\r\n    // (fragment child nodes cannot have transition)\r\n    let next\r\n    while (cur !== end) {\r\n      next = hostNextSibling(cur)!\r\n      hostRemove(cur)\r\n      cur = next\r\n    }\r\n    hostRemove(end)\r\n  }\r\n\r\n  const unmountComponent = (\r\n    instance: ComponentInternalInstance,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    doRemove?: boolean\r\n  ) => {\r\n    if (__DEV__ && instance.type.__hmrId) {\r\n      unregisterHMR(instance)\r\n    }\r\n\r\n    const { bum, scope, update, subTree, um } = instance\r\n\r\n    // beforeUnmount hook\r\n    if (bum) {\r\n      invokeArrayFns(bum)\r\n    }\r\n\r\n    if (\r\n      __COMPAT__ &&\r\n      isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n    ) {\r\n      instance.emit('hook:beforeDestroy')\r\n    }\r\n\r\n    // stop effects in component scope\r\n    scope.stop()\r\n\r\n    // update may be null if a component is unmounted before its async\r\n    // setup has resolved.\r\n    if (update) {\r\n      // so that scheduler will no longer invoke it\r\n      update.active = false\r\n      unmount(subTree, instance, parentSuspense, doRemove)\r\n    }\r\n    // unmounted hook\r\n    if (um) {\r\n      queuePostRenderEffect(um, parentSuspense)\r\n    }\r\n    if (\r\n      __COMPAT__ &&\r\n      isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n    ) {\r\n      queuePostRenderEffect(\r\n        () => instance.emit('hook:destroyed'),\r\n        parentSuspense\r\n      )\r\n    }\r\n    queuePostRenderEffect(() => {\r\n      instance.isUnmounted = true\r\n    }, parentSuspense)\r\n\r\n    // A component with async dep inside a pending suspense is unmounted before\r\n    // its async dep resolves. This should remove the dep from the suspense, and\r\n    // cause the suspense to resolve immediately if that was the last dep.\r\n    if (\r\n      __FEATURE_SUSPENSE__ &&\r\n      parentSuspense &&\r\n      parentSuspense.pendingBranch &&\r\n      !parentSuspense.isUnmounted &&\r\n      instance.asyncDep &&\r\n      !instance.asyncResolved &&\r\n      instance.suspenseId === parentSuspense.pendingId\r\n    ) {\r\n      parentSuspense.deps--\r\n      if (parentSuspense.deps === 0) {\r\n        parentSuspense.resolve()\r\n      }\r\n    }\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      devtoolsComponentRemoved(instance)\r\n    }\r\n  }\r\n\r\n  const unmountChildren: UnmountChildrenFn = (\r\n    children,\r\n    parentComponent,\r\n    parentSuspense,\r\n    doRemove = false,\r\n    optimized = false,\r\n    start = 0\r\n  ) => {\r\n    for (let i = start; i < children.length; i++) {\r\n      unmount(children[i], parentComponent, parentSuspense, doRemove, optimized)\r\n    }\r\n  }\r\n\r\n  const getNextHostNode: NextFn = vnode => {\r\n    if (vnode.shapeFlag & ShapeFlags.COMPONENT) {\r\n      return getNextHostNode(vnode.component!.subTree)\r\n    }\r\n    if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n      return vnode.suspense!.next()\r\n    }\r\n    return hostNextSibling((vnode.anchor || vnode.el)!)\r\n  }\r\n\r\n  const render: RootRenderFunction = (vnode, container, isSVG) => {\r\n    if (vnode == null) {\r\n      if (container._vnode) {\r\n        unmount(container._vnode, null, null, true)\r\n      }\r\n    } else {\r\n      patch(container._vnode || null, vnode, container, null, null, null, isSVG)\r\n    }\r\n    flushPostFlushCbs()\r\n    container._vnode = vnode\r\n  }\r\n\r\n  const internals: RendererInternals = {\r\n    p: patch,\r\n    um: unmount,\r\n    m: move,\r\n    r: remove,\r\n    mt: mountComponent,\r\n    mc: mountChildren,\r\n    pc: patchChildren,\r\n    pbc: patchBlockChildren,\r\n    n: getNextHostNode,\r\n    o: options\r\n  }\r\n\r\n  let hydrate: ReturnType<typeof createHydrationFunctions>[0] | undefined\r\n  let hydrateNode: ReturnType<typeof createHydrationFunctions>[1] | undefined\r\n  if (createHydrationFns) {\r\n    ;[hydrate, hydrateNode] = createHydrationFns(\r\n      internals as RendererInternals<Node, Element>\r\n    )\r\n  }\r\n\r\n  return {\r\n    render,\r\n    hydrate,\r\n    createApp: createAppAPI(render, hydrate)\r\n  }\r\n}\r\n\r\nfunction toggleRecurse(\r\n  { effect, update }: ComponentInternalInstance,\r\n  allowed: boolean\r\n) {\r\n  effect.allowRecurse = update.allowRecurse = allowed\r\n}\r\n\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always be moved. Therefore, in order to ensure correct move\r\n * position, el should be inherited from previous nodes.\r\n */\r\nexport function traverseStaticChildren(n1: VNode, n2: VNode, shallow = false) {\r\n  const ch1 = n1.children\r\n  const ch2 = n2.children\r\n  if (isArray(ch1) && isArray(ch2)) {\r\n    for (let i = 0; i < ch1.length; i++) {\r\n      // this is only called in the optimized path so array children are\r\n      // guaranteed to be vnodes\r\n      const c1 = ch1[i] as VNode\r\n      let c2 = ch2[i] as VNode\r\n      if (c2.shapeFlag & ShapeFlags.ELEMENT && !c2.dynamicChildren) {\r\n        if (c2.patchFlag <= 0 || c2.patchFlag === PatchFlags.HYDRATE_EVENTS) {\r\n          c2 = ch2[i] = cloneIfMounted(ch2[i] as VNode)\r\n          c2.el = c1.el\r\n        }\r\n        if (!shallow) traverseStaticChildren(c1, c2)\r\n      }\r\n      // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n      // would have received .el during block patch)\r\n      if (__DEV__ && c2.type === Comment && !c2.el) {\r\n        c2.el = c1.el\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr: number[]): number[] {\r\n  const p = arr.slice()\r\n  const result = [0]\r\n  let i, j, u, v, c\r\n  const len = arr.length\r\n  for (i = 0; i < len; i++) {\r\n    const arrI = arr[i]\r\n    if (arrI !== 0) {\r\n      j = result[result.length - 1]\r\n      if (arr[j] < arrI) {\r\n        p[i] = j\r\n        result.push(i)\r\n        continue\r\n      }\r\n      u = 0\r\n      v = result.length - 1\r\n      while (u < v) {\r\n        c = (u + v) >> 1\r\n        if (arr[result[c]] < arrI) {\r\n          u = c + 1\r\n        } else {\r\n          v = c\r\n        }\r\n      }\r\n      if (arrI < arr[result[u]]) {\r\n        if (u > 0) {\r\n          p[i] = result[u - 1]\r\n        }\r\n        result[u] = i\r\n      }\r\n    }\r\n  }\r\n  u = result.length\r\n  v = result[u - 1]\r\n  while (u-- > 0) {\r\n    result[u] = v\r\n    v = p[v]\r\n  }\r\n  return result\r\n}\r\n","import { VNode, VNodeChild, isVNode } from './vnode'\r\nimport {\r\n  pauseTracking,\r\n  resetTracking,\r\n  shallowReadonly,\r\n  proxyRefs,\r\n  EffectScope,\r\n  markRaw,\r\n  track,\r\n  TrackOpTypes,\r\n  ReactiveEffect\r\n} from '@vue/reactivity'\r\nimport {\r\n  ComponentPublicInstance,\r\n  PublicInstanceProxyHandlers,\r\n  createDevRenderContext,\r\n  exposePropsOnRenderContext,\r\n  exposeSetupStateOnRenderContext,\r\n  ComponentPublicInstanceConstructor,\r\n  publicPropertiesMap,\r\n  RuntimeCompiledPublicInstanceProxyHandlers\r\n} from './componentPublicInstance'\r\nimport {\r\n  ComponentPropsOptions,\r\n  NormalizedPropsOptions,\r\n  initProps,\r\n  normalizePropsOptions\r\n} from './componentProps'\r\nimport { Slots, initSlots, InternalSlots } from './componentSlots'\r\nimport { warn } from './warning'\r\nimport { ErrorCodes, callWithErrorHandling, handleError } from './errorHandling'\r\nimport { AppContext, createAppContext, AppConfig } from './apiCreateApp'\r\nimport { Directive, validateDirectiveName } from './directives'\r\nimport {\r\n  applyOptions,\r\n  ComponentOptions,\r\n  ComputedOptions,\r\n  MethodOptions\r\n} from './componentOptions'\r\nimport {\r\n  EmitsOptions,\r\n  ObjectEmitsOptions,\r\n  EmitFn,\r\n  emit,\r\n  normalizeEmitsOptions\r\n} from './componentEmits'\r\nimport {\r\n  EMPTY_OBJ,\r\n  isFunction,\r\n  NOOP,\r\n  isObject,\r\n  NO,\r\n  makeMap,\r\n  isPromise,\r\n  ShapeFlags,\r\n  extend\r\n} from '@vue/shared'\r\nimport { SuspenseBoundary } from './components/Suspense'\r\nimport { CompilerOptions } from '@vue/compiler-core'\r\nimport { markAttrsAccessed } from './componentRenderUtils'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { startMeasure, endMeasure } from './profiling'\r\nimport { convertLegacyRenderFn } from './compat/renderFn'\r\nimport {\r\n  CompatConfig,\r\n  globalCompatConfig,\r\n  validateCompatConfig\r\n} from './compat/compatConfig'\r\nimport { SchedulerJob } from './scheduler'\r\n\r\nexport type Data = Record<string, unknown>\r\n\r\n/**\r\n * For extending allowed non-declared props on components in TSX\r\n */\r\nexport interface ComponentCustomProps {}\r\n\r\n/**\r\n * Default allowed non-declared props on component in TSX\r\n */\r\nexport interface AllowedComponentProps {\r\n  class?: unknown\r\n  style?: unknown\r\n}\r\n\r\n// Note: can't mark this whole interface internal because some public interfaces\r\n// extend it.\r\nexport interface ComponentInternalOptions {\r\n  /**\r\n   * @internal\r\n   */\r\n  __scopeId?: string\r\n  /**\r\n   * @internal\r\n   */\r\n  __cssModules?: Data\r\n  /**\r\n   * @internal\r\n   */\r\n  __hmrId?: string\r\n  /**\r\n   * Compat build only, for bailing out of certain compatibility behavior\r\n   */\r\n  __isBuiltIn?: boolean\r\n  /**\r\n   * This one should be exposed so that devtools can make use of it\r\n   */\r\n  __file?: string\r\n  /**\r\n   * name inferred from filename\r\n   */\r\n  __name?: string\r\n}\r\n\r\nexport interface FunctionalComponent<P = {}, E extends EmitsOptions = {}>\r\n  extends ComponentInternalOptions {\r\n  // use of any here is intentional so it can be a valid JSX Element constructor\r\n  (props: P, ctx: Omit<SetupContext<E>, 'expose'>): any\r\n  props?: ComponentPropsOptions<P>\r\n  emits?: E | (keyof E)[]\r\n  inheritAttrs?: boolean\r\n  displayName?: string\r\n  compatConfig?: CompatConfig\r\n}\r\n\r\nexport interface ClassComponent {\r\n  new (...args: any[]): ComponentPublicInstance<any, any, any, any, any>\r\n  __vccOpts: ComponentOptions\r\n}\r\n\r\n/**\r\n * Concrete component type matches its actual value: it's either an options\r\n * object, or a function. Use this where the code expects to work with actual\r\n * values, e.g. checking if its a function or not. This is mostly for internal\r\n * implementation code.\r\n */\r\nexport type ConcreteComponent<\r\n  Props = {},\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions\r\n> =\r\n  | ComponentOptions<Props, RawBindings, D, C, M>\r\n  | FunctionalComponent<Props, any>\r\n\r\n/**\r\n * A type used in public APIs where a component type is expected.\r\n * The constructor type is an artificial type returned by defineComponent().\r\n */\r\nexport type Component<\r\n  Props = any,\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions\r\n> =\r\n  | ConcreteComponent<Props, RawBindings, D, C, M>\r\n  | ComponentPublicInstanceConstructor<Props>\r\n\r\nexport { ComponentOptions }\r\n\r\ntype LifecycleHook<TFn = Function> = TFn[] | null\r\n\r\nexport const enum LifecycleHooks {\r\n  BEFORE_CREATE = 'bc',\r\n  CREATED = 'c',\r\n  BEFORE_MOUNT = 'bm',\r\n  MOUNTED = 'm',\r\n  BEFORE_UPDATE = 'bu',\r\n  UPDATED = 'u',\r\n  BEFORE_UNMOUNT = 'bum',\r\n  UNMOUNTED = 'um',\r\n  DEACTIVATED = 'da',\r\n  ACTIVATED = 'a',\r\n  RENDER_TRIGGERED = 'rtg',\r\n  RENDER_TRACKED = 'rtc',\r\n  ERROR_CAPTURED = 'ec',\r\n  SERVER_PREFETCH = 'sp'\r\n}\r\n\r\nexport interface SetupContext<E = EmitsOptions> {\r\n  attrs: Data\r\n  slots: Slots\r\n  emit: EmitFn<E>\r\n  expose: (exposed?: Record<string, any>) => void\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type InternalRenderFunction = {\r\n  (\r\n    ctx: ComponentPublicInstance,\r\n    cache: ComponentInternalInstance['renderCache'],\r\n    // for compiler-optimized bindings\r\n    $props: ComponentInternalInstance['props'],\r\n    $setup: ComponentInternalInstance['setupState'],\r\n    $data: ComponentInternalInstance['data'],\r\n    $options: ComponentInternalInstance['ctx']\r\n  ): VNodeChild\r\n  _rc?: boolean // isRuntimeCompiled\r\n\r\n  // __COMPAT__ only\r\n  _compatChecked?: boolean // v3 and already checked for v2 compat\r\n  _compatWrapped?: boolean // is wrapped for v2 compat\r\n}\r\n\r\n/**\r\n * We expose a subset of properties on the internal instance as they are\r\n * useful for advanced external libraries and tools.\r\n */\r\nexport interface ComponentInternalInstance {\r\n  uid: number\r\n  type: ConcreteComponent\r\n  parent: ComponentInternalInstance | null\r\n  root: ComponentInternalInstance\r\n  appContext: AppContext\r\n  /**\r\n   * Vnode representing this component in its parent's vdom tree\r\n   */\r\n  vnode: VNode\r\n  /**\r\n   * The pending new vnode from parent updates\r\n   * @internal\r\n   */\r\n  next: VNode | null\r\n  /**\r\n   * Root vnode of this component's own vdom tree\r\n   */\r\n  subTree: VNode\r\n  /**\r\n   * Render effect instance\r\n   */\r\n  effect: ReactiveEffect\r\n  /**\r\n   * Bound effect runner to be passed to schedulers\r\n   */\r\n  update: SchedulerJob\r\n  /**\r\n   * The render function that returns vdom tree.\r\n   * @internal\r\n   */\r\n  render: InternalRenderFunction | null\r\n  /**\r\n   * SSR render function\r\n   * @internal\r\n   */\r\n  ssrRender?: Function | null\r\n  /**\r\n   * Object containing values this component provides for its descendents\r\n   * @internal\r\n   */\r\n  provides: Data\r\n  /**\r\n   * Tracking reactive effects (e.g. watchers) associated with this component\r\n   * so that they can be automatically stopped on component unmount\r\n   * @internal\r\n   */\r\n  scope: EffectScope\r\n  /**\r\n   * cache for proxy access type to avoid hasOwnProperty calls\r\n   * @internal\r\n   */\r\n  accessCache: Data | null\r\n  /**\r\n   * cache for render function values that rely on _ctx but won't need updates\r\n   * after initialized (e.g. inline handlers)\r\n   * @internal\r\n   */\r\n  renderCache: (Function | VNode)[]\r\n\r\n  /**\r\n   * Resolved component registry, only for components with mixins or extends\r\n   * @internal\r\n   */\r\n  components: Record<string, ConcreteComponent> | null\r\n  /**\r\n   * Resolved directive registry, only for components with mixins or extends\r\n   * @internal\r\n   */\r\n  directives: Record<string, Directive> | null\r\n  /**\r\n   * Resolved filters registry, v2 compat only\r\n   * @internal\r\n   */\r\n  filters?: Record<string, Function>\r\n  /**\r\n   * resolved props options\r\n   * @internal\r\n   */\r\n  propsOptions: NormalizedPropsOptions\r\n  /**\r\n   * resolved emits options\r\n   * @internal\r\n   */\r\n  emitsOptions: ObjectEmitsOptions | null\r\n  /**\r\n   * resolved inheritAttrs options\r\n   * @internal\r\n   */\r\n  inheritAttrs?: boolean\r\n  /**\r\n   * is custom element?\r\n   */\r\n  isCE?: boolean\r\n  /**\r\n   * custom element specific HMR method\r\n   */\r\n  ceReload?: (newStyles?: string[]) => void\r\n\r\n  // the rest are only for stateful components ---------------------------------\r\n\r\n  // main proxy that serves as the public instance (`this`)\r\n  proxy: ComponentPublicInstance | null\r\n\r\n  // exposed properties via expose()\r\n  exposed: Record<string, any> | null\r\n  exposeProxy: Record<string, any> | null\r\n\r\n  /**\r\n   * alternative proxy used only for runtime-compiled render functions using\r\n   * `with` block\r\n   * @internal\r\n   */\r\n  withProxy: ComponentPublicInstance | null\r\n  /**\r\n   * This is the target for the public instance proxy. It also holds properties\r\n   * injected by user options (computed, methods etc.) and user-attached\r\n   * custom properties (via `this.x = ...`)\r\n   * @internal\r\n   */\r\n  ctx: Data\r\n\r\n  // state\r\n  data: Data\r\n  props: Data\r\n  attrs: Data\r\n  slots: InternalSlots\r\n  refs: Data\r\n  emit: EmitFn\r\n  /**\r\n   * used for keeping track of .once event handlers on components\r\n   * @internal\r\n   */\r\n  emitted: Record<string, boolean> | null\r\n  /**\r\n   * used for caching the value returned from props default factory functions to\r\n   * avoid unnecessary watcher trigger\r\n   * @internal\r\n   */\r\n  propsDefaults: Data\r\n  /**\r\n   * setup related\r\n   * @internal\r\n   */\r\n  setupState: Data\r\n  /**\r\n   * devtools access to additional info\r\n   * @internal\r\n   */\r\n  devtoolsRawSetupState?: any\r\n  /**\r\n   * @internal\r\n   */\r\n  setupContext: SetupContext | null\r\n\r\n  /**\r\n   * suspense related\r\n   * @internal\r\n   */\r\n  suspense: SuspenseBoundary | null\r\n  /**\r\n   * suspense pending batch id\r\n   * @internal\r\n   */\r\n  suspenseId: number\r\n  /**\r\n   * @internal\r\n   */\r\n  asyncDep: Promise<any> | null\r\n  /**\r\n   * @internal\r\n   */\r\n  asyncResolved: boolean\r\n\r\n  // lifecycle\r\n  isMounted: boolean\r\n  isUnmounted: boolean\r\n  isDeactivated: boolean\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_CREATE]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.CREATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_MOUNT]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.MOUNTED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_UPDATE]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.UPDATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_UNMOUNT]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.UNMOUNTED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.RENDER_TRACKED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.RENDER_TRIGGERED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.ACTIVATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.DEACTIVATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.ERROR_CAPTURED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.SERVER_PREFETCH]: LifecycleHook<() => Promise<unknown>>\r\n\r\n  /**\r\n   * For caching bound $forceUpdate on public proxy access\r\n   */\r\n  f?: () => void\r\n  /**\r\n   * For caching bound $nextTick on public proxy access\r\n   */\r\n  n?: () => Promise<void>\r\n}\r\n\r\nconst emptyAppContext = createAppContext()\r\n\r\nlet uid = 0\r\n\r\nexport function createComponentInstance(\r\n  vnode: VNode,\r\n  parent: ComponentInternalInstance | null,\r\n  suspense: SuspenseBoundary | null\r\n) {\r\n  const type = vnode.type as ConcreteComponent\r\n  // inherit parent app context - or - if root, adopt from root vnode\r\n  const appContext =\r\n    (parent ? parent.appContext : vnode.appContext) || emptyAppContext\r\n\r\n  const instance: ComponentInternalInstance = {\r\n    uid: uid++,\r\n    vnode,\r\n    type,\r\n    parent,\r\n    appContext,\r\n    root: null!, // to be immediately set\r\n    next: null,\r\n    subTree: null!, // will be set synchronously right after creation\r\n    effect: null!,\r\n    update: null!, // will be set synchronously right after creation\r\n    scope: new EffectScope(true /* detached */),\r\n    render: null,\r\n    proxy: null,\r\n    exposed: null,\r\n    exposeProxy: null,\r\n    withProxy: null,\r\n    provides: parent ? parent.provides : Object.create(appContext.provides),\r\n    accessCache: null!,\r\n    renderCache: [],\r\n\r\n    // local resolved assets\r\n    components: null,\r\n    directives: null,\r\n\r\n    // resolved props and emits options\r\n    propsOptions: normalizePropsOptions(type, appContext),\r\n    emitsOptions: normalizeEmitsOptions(type, appContext),\r\n\r\n    // emit\r\n    emit: null!, // to be set immediately\r\n    emitted: null,\r\n\r\n    // props default value\r\n    propsDefaults: EMPTY_OBJ,\r\n\r\n    // inheritAttrs\r\n    inheritAttrs: type.inheritAttrs,\r\n\r\n    // state\r\n    ctx: EMPTY_OBJ,\r\n    data: EMPTY_OBJ,\r\n    props: EMPTY_OBJ,\r\n    attrs: EMPTY_OBJ,\r\n    slots: EMPTY_OBJ,\r\n    refs: EMPTY_OBJ,\r\n    setupState: EMPTY_OBJ,\r\n    setupContext: null,\r\n\r\n    // suspense related\r\n    suspense,\r\n    suspenseId: suspense ? suspense.pendingId : 0,\r\n    asyncDep: null,\r\n    asyncResolved: false,\r\n\r\n    // lifecycle hooks\r\n    // not using enums here because it results in computed properties\r\n    isMounted: false,\r\n    isUnmounted: false,\r\n    isDeactivated: false,\r\n    bc: null,\r\n    c: null,\r\n    bm: null,\r\n    m: null,\r\n    bu: null,\r\n    u: null,\r\n    um: null,\r\n    bum: null,\r\n    da: null,\r\n    a: null,\r\n    rtg: null,\r\n    rtc: null,\r\n    ec: null,\r\n    sp: null\r\n  }\r\n  if (__DEV__) {\r\n    instance.ctx = createDevRenderContext(instance)\r\n  } else {\r\n    instance.ctx = { _: instance }\r\n  }\r\n  instance.root = parent ? parent.root : instance\r\n  instance.emit = emit.bind(null, instance)\r\n\r\n  // apply custom element special handling\r\n  if (vnode.ce) {\r\n    vnode.ce(instance)\r\n  }\r\n\r\n  return instance\r\n}\r\n\r\nexport let currentInstance: ComponentInternalInstance | null = null\r\n\r\nexport const getCurrentInstance: () => ComponentInternalInstance | null = () =>\r\n  currentInstance || currentRenderingInstance\r\n\r\nexport const setCurrentInstance = (instance: ComponentInternalInstance) => {\r\n  currentInstance = instance\r\n  instance.scope.on()\r\n}\r\n\r\nexport const unsetCurrentInstance = () => {\r\n  currentInstance && currentInstance.scope.off()\r\n  currentInstance = null\r\n}\r\n\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component')\r\n\r\nexport function validateComponentName(name: string, config: AppConfig) {\r\n  const appIsNativeTag = config.isNativeTag || NO\r\n  if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n    warn(\r\n      'Do not use built-in or reserved HTML elements as component id: ' + name\r\n    )\r\n  }\r\n}\r\n\r\nexport function isStatefulComponent(instance: ComponentInternalInstance) {\r\n  return instance.vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT\r\n}\r\n\r\nexport let isInSSRComponentSetup = false\r\n\r\nexport function setupComponent(\r\n  instance: ComponentInternalInstance,\r\n  isSSR = false\r\n) {\r\n  isInSSRComponentSetup = isSSR\r\n\r\n  const { props, children } = instance.vnode\r\n  const isStateful = isStatefulComponent(instance)\r\n  initProps(instance, props, isStateful, isSSR)\r\n  initSlots(instance, children)\r\n\r\n  const setupResult = isStateful\r\n    ? setupStatefulComponent(instance, isSSR)\r\n    : undefined\r\n  isInSSRComponentSetup = false\r\n  return setupResult\r\n}\r\n\r\nfunction setupStatefulComponent(\r\n  instance: ComponentInternalInstance,\r\n  isSSR: boolean\r\n) {\r\n  const Component = instance.type as ComponentOptions\r\n\r\n  if (__DEV__) {\r\n    if (Component.name) {\r\n      validateComponentName(Component.name, instance.appContext.config)\r\n    }\r\n    if (Component.components) {\r\n      const names = Object.keys(Component.components)\r\n      for (let i = 0; i < names.length; i++) {\r\n        validateComponentName(names[i], instance.appContext.config)\r\n      }\r\n    }\r\n    if (Component.directives) {\r\n      const names = Object.keys(Component.directives)\r\n      for (let i = 0; i < names.length; i++) {\r\n        validateDirectiveName(names[i])\r\n      }\r\n    }\r\n    if (Component.compilerOptions && isRuntimeOnly()) {\r\n      warn(\r\n        `\"compilerOptions\" is only supported when using a build of Vue that ` +\r\n          `includes the runtime compiler. Since you are using a runtime-only ` +\r\n          `build, the options should be passed via your build tool config instead.`\r\n      )\r\n    }\r\n  }\r\n  // 0. create render proxy property access cache\r\n  instance.accessCache = Object.create(null)\r\n  // 1. create public instance / render proxy\r\n  // also mark it raw so it's never observed\r\n  instance.proxy = markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers))\r\n  if (__DEV__) {\r\n    exposePropsOnRenderContext(instance)\r\n  }\r\n  // 2. call setup()\r\n  const { setup } = Component\r\n  if (setup) {\r\n    const setupContext = (instance.setupContext =\r\n      setup.length > 1 ? createSetupContext(instance) : null)\r\n\r\n    setCurrentInstance(instance)\r\n    pauseTracking()\r\n    const setupResult = callWithErrorHandling(\r\n      setup,\r\n      instance,\r\n      ErrorCodes.SETUP_FUNCTION,\r\n      [__DEV__ ? shallowReadonly(instance.props) : instance.props, setupContext]\r\n    )\r\n    resetTracking()\r\n    unsetCurrentInstance()\r\n\r\n    if (isPromise(setupResult)) {\r\n      setupResult.then(unsetCurrentInstance, unsetCurrentInstance)\r\n      if (isSSR) {\r\n        // return the promise so server-renderer can wait on it\r\n        return setupResult\r\n          .then((resolvedResult: unknown) => {\r\n            handleSetupResult(instance, resolvedResult, isSSR)\r\n          })\r\n          .catch(e => {\r\n            handleError(e, instance, ErrorCodes.SETUP_FUNCTION)\r\n          })\r\n      } else if (__FEATURE_SUSPENSE__) {\r\n        // async setup returned Promise.\r\n        // bail here and wait for re-entry.\r\n        instance.asyncDep = setupResult\r\n        if (__DEV__ && !instance.suspense) {\r\n          const name = Component.name ?? 'Anonymous'\r\n          warn(\r\n            `Component <${name}>: setup function returned a promise, but no ` +\r\n              `<Suspense> boundary was found in the parent component tree. ` +\r\n              `A component with async setup() must be nested in a <Suspense> ` +\r\n              `in order to be rendered.`\r\n          )\r\n        }\r\n      } else if (__DEV__) {\r\n        warn(\r\n          `setup() returned a Promise, but the version of Vue you are using ` +\r\n            `does not support it yet.`\r\n        )\r\n      }\r\n    } else {\r\n      handleSetupResult(instance, setupResult, isSSR)\r\n    }\r\n  } else {\r\n    finishComponentSetup(instance, isSSR)\r\n  }\r\n}\r\n\r\nexport function handleSetupResult(\r\n  instance: ComponentInternalInstance,\r\n  setupResult: unknown,\r\n  isSSR: boolean\r\n) {\r\n  if (isFunction(setupResult)) {\r\n    // setup returned an inline render function\r\n    if (__SSR__ && (instance.type as ComponentOptions).__ssrInlineRender) {\r\n      // when the function's name is `ssrRender` (compiled by SFC inline mode),\r\n      // set it as ssrRender instead.\r\n      instance.ssrRender = setupResult\r\n    } else {\r\n      instance.render = setupResult as InternalRenderFunction\r\n    }\r\n  } else if (isObject(setupResult)) {\r\n    if (__DEV__ && isVNode(setupResult)) {\r\n      warn(\r\n        `setup() should not return VNodes directly - ` +\r\n          `return a render function instead.`\r\n      )\r\n    }\r\n    // setup returned bindings.\r\n    // assuming a render function compiled from template is present.\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      instance.devtoolsRawSetupState = setupResult\r\n    }\r\n    instance.setupState = proxyRefs(setupResult)\r\n    if (__DEV__) {\r\n      exposeSetupStateOnRenderContext(instance)\r\n    }\r\n  } else if (__DEV__ && setupResult !== undefined) {\r\n    warn(\r\n      `setup() should return an object. Received: ${\r\n        setupResult === null ? 'null' : typeof setupResult\r\n      }`\r\n    )\r\n  }\r\n  finishComponentSetup(instance, isSSR)\r\n}\r\n\r\ntype CompileFunction = (\r\n  template: string | object,\r\n  options?: CompilerOptions\r\n) => InternalRenderFunction\r\n\r\nlet compile: CompileFunction | undefined\r\nlet installWithProxy: (i: ComponentInternalInstance) => void\r\n\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nexport function registerRuntimeCompiler(_compile: any) {\r\n  compile = _compile\r\n  installWithProxy = i => {\r\n    if (i.render!._rc) {\r\n      i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers)\r\n    }\r\n  }\r\n}\r\n\r\n// dev only\r\nexport const isRuntimeOnly = () => !compile\r\n\r\nexport function finishComponentSetup(\r\n  instance: ComponentInternalInstance,\r\n  isSSR: boolean,\r\n  skipOptions?: boolean\r\n) {\r\n  const Component = instance.type as ComponentOptions\r\n\r\n  if (__COMPAT__) {\r\n    convertLegacyRenderFn(instance)\r\n\r\n    if (__DEV__ && Component.compatConfig) {\r\n      validateCompatConfig(Component.compatConfig)\r\n    }\r\n  }\r\n\r\n  // template / render function normalization\r\n  // could be already set when returned from setup()\r\n  if (!instance.render) {\r\n    // only do on-the-fly compile if not in SSR - SSR on-the-fly compilation\r\n    // is done by server-renderer\r\n    if (!isSSR && compile && !Component.render) {\r\n      const template =\r\n        (__COMPAT__ &&\r\n          instance.vnode.props &&\r\n          instance.vnode.props['inline-template']) ||\r\n        Component.template\r\n      if (template) {\r\n        if (__DEV__) {\r\n          startMeasure(instance, `compile`)\r\n        }\r\n        const { isCustomElement, compilerOptions } = instance.appContext.config\r\n        const { delimiters, compilerOptions: componentCompilerOptions } =\r\n          Component\r\n        const finalCompilerOptions: CompilerOptions = extend(\r\n          extend(\r\n            {\r\n              isCustomElement,\r\n              delimiters\r\n            },\r\n            compilerOptions\r\n          ),\r\n          componentCompilerOptions\r\n        )\r\n        if (__COMPAT__) {\r\n          // pass runtime compat config into the compiler\r\n          finalCompilerOptions.compatConfig = Object.create(globalCompatConfig)\r\n          if (Component.compatConfig) {\r\n            // @ts-expect-error types are not compatible\r\n            extend(finalCompilerOptions.compatConfig, Component.compatConfig)\r\n          }\r\n        }\r\n        Component.render = compile(template, finalCompilerOptions)\r\n        if (__DEV__) {\r\n          endMeasure(instance, `compile`)\r\n        }\r\n      }\r\n    }\r\n\r\n    instance.render = (Component.render || NOOP) as InternalRenderFunction\r\n\r\n    // for runtime-compiled render functions using `with` blocks, the render\r\n    // proxy used needs a different `has` handler which is more performant and\r\n    // also only allows a whitelist of globals to fallthrough.\r\n    if (installWithProxy) {\r\n      installWithProxy(instance)\r\n    }\r\n  }\r\n\r\n  // support for 2.x options\r\n  if (__FEATURE_OPTIONS_API__ && !(__COMPAT__ && skipOptions)) {\r\n    setCurrentInstance(instance)\r\n    pauseTracking()\r\n    applyOptions(instance)\r\n    resetTracking()\r\n    unsetCurrentInstance()\r\n  }\r\n\r\n  // warn missing template/render\r\n  // the runtime compilation of template in SSR is done by server-render\r\n  if (__DEV__ && !Component.render && instance.render === NOOP && !isSSR) {\r\n    /* istanbul ignore if */\r\n    if (!compile && Component.template) {\r\n      warn(\r\n        `Component provided template option but ` +\r\n          `runtime compilation is not supported in this build of Vue.` +\r\n          (__ESM_BUNDLER__\r\n            ? ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n            : __ESM_BROWSER__\r\n            ? ` Use \"vue.esm-browser.js\" instead.`\r\n            : __GLOBAL__\r\n            ? ` Use \"vue.global.js\" instead.`\r\n            : ``) /* should not happen */\r\n      )\r\n    } else {\r\n      warn(`Component is missing template or render function.`)\r\n    }\r\n  }\r\n}\r\n\r\nfunction createAttrsProxy(instance: ComponentInternalInstance): Data {\r\n  return new Proxy(\r\n    instance.attrs,\r\n    __DEV__\r\n      ? {\r\n          get(target, key: string) {\r\n            markAttrsAccessed()\r\n            track(instance, TrackOpTypes.GET, '$attrs')\r\n            return target[key]\r\n          },\r\n          set() {\r\n            warn(`setupContext.attrs is readonly.`)\r\n            return false\r\n          },\r\n          deleteProperty() {\r\n            warn(`setupContext.attrs is readonly.`)\r\n            return false\r\n          }\r\n        }\r\n      : {\r\n          get(target, key: string) {\r\n            track(instance, TrackOpTypes.GET, '$attrs')\r\n            return target[key]\r\n          }\r\n        }\r\n  )\r\n}\r\n\r\nexport function createSetupContext(\r\n  instance: ComponentInternalInstance\r\n): SetupContext {\r\n  const expose: SetupContext['expose'] = exposed => {\r\n    if (__DEV__ && instance.exposed) {\r\n      warn(`expose() should be called only once per setup().`)\r\n    }\r\n    instance.exposed = exposed || {}\r\n  }\r\n\r\n  let attrs: Data\r\n  if (__DEV__) {\r\n    // We use getters in dev in case libs like test-utils overwrite instance\r\n    // properties (overwrites should not be done in prod)\r\n    return Object.freeze({\r\n      get attrs() {\r\n        return attrs || (attrs = createAttrsProxy(instance))\r\n      },\r\n      get slots() {\r\n        return shallowReadonly(instance.slots)\r\n      },\r\n      get emit() {\r\n        return (event: string, ...args: any[]) => instance.emit(event, ...args)\r\n      },\r\n      expose\r\n    })\r\n  } else {\r\n    return {\r\n      get attrs() {\r\n        return attrs || (attrs = createAttrsProxy(instance))\r\n      },\r\n      slots: instance.slots,\r\n      emit: instance.emit,\r\n      expose\r\n    }\r\n  }\r\n}\r\n\r\nexport function getExposeProxy(instance: ComponentInternalInstance) {\r\n  if (instance.exposed) {\r\n    return (\r\n      instance.exposeProxy ||\r\n      (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\r\n        get(target, key: string) {\r\n          if (key in target) {\r\n            return target[key]\r\n          } else if (key in publicPropertiesMap) {\r\n            return publicPropertiesMap[key](instance)\r\n          }\r\n        }\r\n      }))\r\n    )\r\n  }\r\n}\r\n\r\nconst classifyRE = /(?:^|[-_])(\\w)/g\r\nconst classify = (str: string): string =>\r\n  str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '')\r\n\r\nexport function getComponentName(\r\n  Component: ConcreteComponent,\r\n  includeInferred = true\r\n): string | false | undefined {\r\n  return isFunction(Component)\r\n    ? Component.displayName || Component.name\r\n    : Component.name || (includeInferred && Component.__name)\r\n}\r\n\r\n/* istanbul ignore next */\r\nexport function formatComponentName(\r\n  instance: ComponentInternalInstance | null,\r\n  Component: ConcreteComponent,\r\n  isRoot = false\r\n): string {\r\n  let name = getComponentName(Component)\r\n  if (!name && Component.__file) {\r\n    const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/)\r\n    if (match) {\r\n      name = match[1]\r\n    }\r\n  }\r\n\r\n  if (!name && instance && instance.parent) {\r\n    // try to infer the name based on reverse resolution\r\n    const inferFromRegistry = (registry: Record<string, any> | undefined) => {\r\n      for (const key in registry) {\r\n        if (registry[key] === Component) {\r\n          return key\r\n        }\r\n      }\r\n    }\r\n    name =\r\n      inferFromRegistry(\r\n        instance.components ||\r\n          (instance.parent.type as ComponentOptions).components\r\n      ) || inferFromRegistry(instance.appContext.components)\r\n  }\r\n\r\n  return name ? classify(name) : isRoot ? `App` : `Anonymous`\r\n}\r\n\r\nexport function isClassComponent(value: unknown): value is ClassComponent {\r\n  return isFunction(value) && '__vccOpts' in value\r\n}\r\n","import { ComponentInternalInstance } from '../component'\r\nimport { SuspenseBoundary } from './Suspense'\r\nimport {\r\n  RendererInternals,\r\n  MoveType,\r\n  RendererElement,\r\n  RendererNode,\r\n  RendererOptions,\r\n  traverseStaticChildren\r\n} from '../renderer'\r\nimport { VNode, VNodeArrayChildren, VNodeProps } from '../vnode'\r\nimport { isString, ShapeFlags } from '@vue/shared'\r\nimport { warn } from '../warning'\r\nimport { isHmrUpdating } from '../hmr'\r\n\r\nexport type TeleportVNode = VNode<RendererNode, RendererElement, TeleportProps>\r\n\r\nexport interface TeleportProps {\r\n  to: string | RendererElement | null | undefined\r\n  disabled?: boolean\r\n}\r\n\r\nexport const isTeleport = (type: any): boolean => type.__isTeleport\r\n\r\nconst isTeleportDisabled = (props: VNode['props']): boolean =>\r\n  props && (props.disabled || props.disabled === '')\r\n\r\nconst isTargetSVG = (target: RendererElement): boolean =>\r\n  typeof SVGElement !== 'undefined' && target instanceof SVGElement\r\n\r\nconst resolveTarget = <T = RendererElement>(\r\n  props: TeleportProps | null,\r\n  select: RendererOptions['querySelector']\r\n): T | null => {\r\n  const targetSelector = props && props.to\r\n  if (isString(targetSelector)) {\r\n    if (!select) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Current renderer does not support string target for Teleports. ` +\r\n            `(missing querySelector renderer option)`\r\n        )\r\n      return null\r\n    } else {\r\n      const target = select(targetSelector)\r\n      if (!target) {\r\n        __DEV__ &&\r\n          warn(\r\n            `Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n              `Note the target element must exist before the component is mounted - ` +\r\n              `i.e. the target cannot be rendered by the component itself, and ` +\r\n              `ideally should be outside of the entire Vue component tree.`\r\n          )\r\n      }\r\n      return target as any\r\n    }\r\n  } else {\r\n    if (__DEV__ && !targetSelector && !isTeleportDisabled(props)) {\r\n      warn(`Invalid Teleport target: ${targetSelector}`)\r\n    }\r\n    return targetSelector as any\r\n  }\r\n}\r\n\r\nexport const TeleportImpl = {\r\n  __isTeleport: true,\r\n  process(\r\n    n1: TeleportVNode | null,\r\n    n2: TeleportVNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n    internals: RendererInternals\r\n  ) {\r\n    const {\r\n      mc: mountChildren,\r\n      pc: patchChildren,\r\n      pbc: patchBlockChildren,\r\n      o: { insert, querySelector, createText, createComment }\r\n    } = internals\r\n\r\n    const disabled = isTeleportDisabled(n2.props)\r\n    let { shapeFlag, children, dynamicChildren } = n2\r\n\r\n    // #3302\r\n    // HMR updated, force full diff\r\n    if (__DEV__ && isHmrUpdating) {\r\n      optimized = false\r\n      dynamicChildren = null\r\n    }\r\n\r\n    if (n1 == null) {\r\n      // insert anchors in the main view\r\n      const placeholder = (n2.el = __DEV__\r\n        ? createComment('teleport start')\r\n        : createText(''))\r\n      const mainAnchor = (n2.anchor = __DEV__\r\n        ? createComment('teleport end')\r\n        : createText(''))\r\n      insert(placeholder, container, anchor)\r\n      insert(mainAnchor, container, anchor)\r\n      const target = (n2.target = resolveTarget(n2.props, querySelector))\r\n      const targetAnchor = (n2.targetAnchor = createText(''))\r\n      if (target) {\r\n        insert(targetAnchor, target)\r\n        // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n        isSVG = isSVG || isTargetSVG(target)\r\n      } else if (__DEV__ && !disabled) {\r\n        warn('Invalid Teleport target on mount:', target, `(${typeof target})`)\r\n      }\r\n\r\n      const mount = (container: RendererElement, anchor: RendererNode) => {\r\n        // Teleport *always* has Array children. This is enforced in both the\r\n        // compiler and vnode children normalization.\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          mountChildren(\r\n            children as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        }\r\n      }\r\n\r\n      if (disabled) {\r\n        mount(container, mainAnchor)\r\n      } else if (target) {\r\n        mount(target, targetAnchor)\r\n      }\r\n    } else {\r\n      // update content\r\n      n2.el = n1.el\r\n      const mainAnchor = (n2.anchor = n1.anchor)!\r\n      const target = (n2.target = n1.target)!\r\n      const targetAnchor = (n2.targetAnchor = n1.targetAnchor)!\r\n      const wasDisabled = isTeleportDisabled(n1.props)\r\n      const currentContainer = wasDisabled ? container : target\r\n      const currentAnchor = wasDisabled ? mainAnchor : targetAnchor\r\n      isSVG = isSVG || isTargetSVG(target)\r\n\r\n      if (dynamicChildren) {\r\n        // fast path when the teleport happens to be a block root\r\n        patchBlockChildren(\r\n          n1.dynamicChildren!,\r\n          dynamicChildren,\r\n          currentContainer,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds\r\n        )\r\n        // even in block tree mode we need to make sure all root-level nodes\r\n        // in the teleport inherit previous DOM references so that they can\r\n        // be moved in future patches.\r\n        traverseStaticChildren(n1, n2, true)\r\n      } else if (!optimized) {\r\n        patchChildren(\r\n          n1,\r\n          n2,\r\n          currentContainer,\r\n          currentAnchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          false\r\n        )\r\n      }\r\n\r\n      if (disabled) {\r\n        if (!wasDisabled) {\r\n          // enabled -> disabled\r\n          // move into main container\r\n          moveTeleport(\r\n            n2,\r\n            container,\r\n            mainAnchor,\r\n            internals,\r\n            TeleportMoveTypes.TOGGLE\r\n          )\r\n        }\r\n      } else {\r\n        // target changed\r\n        if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n          const nextTarget = (n2.target = resolveTarget(\r\n            n2.props,\r\n            querySelector\r\n          ))\r\n          if (nextTarget) {\r\n            moveTeleport(\r\n              n2,\r\n              nextTarget,\r\n              null,\r\n              internals,\r\n              TeleportMoveTypes.TARGET_CHANGE\r\n            )\r\n          } else if (__DEV__) {\r\n            warn(\r\n              'Invalid Teleport target on update:',\r\n              target,\r\n              `(${typeof target})`\r\n            )\r\n          }\r\n        } else if (wasDisabled) {\r\n          // disabled -> enabled\r\n          // move into teleport target\r\n          moveTeleport(\r\n            n2,\r\n            target,\r\n            targetAnchor,\r\n            internals,\r\n            TeleportMoveTypes.TOGGLE\r\n          )\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  remove(\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    optimized: boolean,\r\n    { um: unmount, o: { remove: hostRemove } }: RendererInternals,\r\n    doRemove: Boolean\r\n  ) {\r\n    const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode\r\n\r\n    if (target) {\r\n      hostRemove(targetAnchor!)\r\n    }\r\n\r\n    // an unmounted teleport should always remove its children if not disabled\r\n    if (doRemove || !isTeleportDisabled(props)) {\r\n      hostRemove(anchor!)\r\n      if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        for (let i = 0; i < (children as VNode[]).length; i++) {\r\n          const child = (children as VNode[])[i]\r\n          unmount(\r\n            child,\r\n            parentComponent,\r\n            parentSuspense,\r\n            true,\r\n            !!child.dynamicChildren\r\n          )\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  move: moveTeleport,\r\n  hydrate: hydrateTeleport\r\n}\r\n\r\nexport const enum TeleportMoveTypes {\r\n  TARGET_CHANGE,\r\n  TOGGLE, // enable / disable\r\n  REORDER // moved in the main view\r\n}\r\n\r\nfunction moveTeleport(\r\n  vnode: VNode,\r\n  container: RendererElement,\r\n  parentAnchor: RendererNode | null,\r\n  { o: { insert }, m: move }: RendererInternals,\r\n  moveType: TeleportMoveTypes = TeleportMoveTypes.REORDER\r\n) {\r\n  // move target anchor if this is a target change.\r\n  if (moveType === TeleportMoveTypes.TARGET_CHANGE) {\r\n    insert(vnode.targetAnchor!, container, parentAnchor)\r\n  }\r\n  const { el, anchor, shapeFlag, children, props } = vnode\r\n  const isReorder = moveType === TeleportMoveTypes.REORDER\r\n  // move main view anchor if this is a re-order.\r\n  if (isReorder) {\r\n    insert(el!, container, parentAnchor)\r\n  }\r\n  // if this is a re-order and teleport is enabled (content is in target)\r\n  // do not move children. So the opposite is: only move children if this\r\n  // is not a reorder, or the teleport is disabled\r\n  if (!isReorder || isTeleportDisabled(props)) {\r\n    // Teleport has either Array children or no children.\r\n    if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n      for (let i = 0; i < (children as VNode[]).length; i++) {\r\n        move(\r\n          (children as VNode[])[i],\r\n          container,\r\n          parentAnchor,\r\n          MoveType.REORDER\r\n        )\r\n      }\r\n    }\r\n  }\r\n  // move main view anchor if this is a re-order.\r\n  if (isReorder) {\r\n    insert(anchor!, container, parentAnchor)\r\n  }\r\n}\r\n\r\ninterface TeleportTargetElement extends Element {\r\n  // last teleport target\r\n  _lpa?: Node | null\r\n}\r\n\r\nfunction hydrateTeleport(\r\n  node: Node,\r\n  vnode: TeleportVNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  {\r\n    o: { nextSibling, parentNode, querySelector }\r\n  }: RendererInternals<Node, Element>,\r\n  hydrateChildren: (\r\n    node: Node | null,\r\n    vnode: VNode,\r\n    container: Element,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => Node | null\r\n): Node | null {\r\n  const target = (vnode.target = resolveTarget<Element>(\r\n    vnode.props,\r\n    querySelector\r\n  ))\r\n  if (target) {\r\n    // if multiple teleports rendered to the same target element, we need to\r\n    // pick up from where the last teleport finished instead of the first node\r\n    const targetNode =\r\n      (target as TeleportTargetElement)._lpa || target.firstChild\r\n    if (vnode.shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n      if (isTeleportDisabled(vnode.props)) {\r\n        vnode.anchor = hydrateChildren(\r\n          nextSibling(node),\r\n          vnode,\r\n          parentNode(node)!,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        vnode.targetAnchor = targetNode\r\n      } else {\r\n        vnode.anchor = nextSibling(node)\r\n\r\n        // lookahead until we find the target anchor\r\n        // we cannot rely on return value of hydrateChildren() because there\r\n        // could be nested teleports\r\n        let targetAnchor = targetNode\r\n        while (targetAnchor) {\r\n          targetAnchor = nextSibling(targetAnchor)\r\n          if (\r\n            targetAnchor &&\r\n            targetAnchor.nodeType === 8 &&\r\n            (targetAnchor as Comment).data === 'teleport anchor'\r\n          ) {\r\n            vnode.targetAnchor = targetAnchor\r\n            ;(target as TeleportTargetElement)._lpa =\r\n              vnode.targetAnchor && nextSibling(vnode.targetAnchor as Node)\r\n            break\r\n          }\r\n        }\r\n\r\n        hydrateChildren(\r\n          targetNode,\r\n          vnode,\r\n          target,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      }\r\n    }\r\n  }\r\n  return vnode.anchor && nextSibling(vnode.anchor as Node)\r\n}\r\n\r\n// Force-casted public typing for h and TSX props inference\r\nexport const Teleport = TeleportImpl as any as {\r\n  __isTeleport: true\r\n  new (): { $props: VNodeProps & TeleportProps }\r\n}\r\n","import {\r\n  isArray,\r\n  isFunction,\r\n  isString,\r\n  isObject,\r\n  EMPTY_ARR,\r\n  extend,\r\n  normalizeClass,\r\n  normalizeStyle,\r\n  PatchFlags,\r\n  ShapeFlags,\r\n  SlotFlags,\r\n  isOn\r\n} from '@vue/shared'\r\nimport {\r\n  ComponentInternalInstance,\r\n  Data,\r\n  ConcreteComponent,\r\n  ClassComponent,\r\n  Component,\r\n  isClassComponent\r\n} from './component'\r\nimport { RawSlots } from './componentSlots'\r\nimport { isProxy, Ref, toRaw, ReactiveFlags, isRef } from '@vue/reactivity'\r\nimport { AppContext } from './apiCreateApp'\r\nimport {\r\n  SuspenseImpl,\r\n  isSuspense,\r\n  SuspenseBoundary\r\n} from './components/Suspense'\r\nimport { DirectiveBinding } from './directives'\r\nimport { TransitionHooks } from './components/BaseTransition'\r\nimport { warn } from './warning'\r\nimport { TeleportImpl, isTeleport } from './components/Teleport'\r\nimport {\r\n  currentRenderingInstance,\r\n  currentScopeId\r\n} from './componentRenderContext'\r\nimport { RendererNode, RendererElement } from './renderer'\r\nimport { NULL_DYNAMIC_COMPONENT } from './helpers/resolveAssets'\r\nimport { hmrDirtyComponents } from './hmr'\r\nimport { convertLegacyComponent } from './compat/component'\r\nimport { convertLegacyVModelProps } from './compat/componentVModel'\r\nimport { defineLegacyVNodeProperties } from './compat/renderFn'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from './errorHandling'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\n\r\nexport const Fragment = Symbol(__DEV__ ? 'Fragment' : undefined) as any as {\r\n  __isFragment: true\r\n  new (): {\r\n    $props: VNodeProps\r\n  }\r\n}\r\nexport const Text = Symbol(__DEV__ ? 'Text' : undefined)\r\nexport const Comment = Symbol(__DEV__ ? 'Comment' : undefined)\r\nexport const Static = Symbol(__DEV__ ? 'Static' : undefined)\r\n\r\nexport type VNodeTypes =\r\n  | string\r\n  | VNode\r\n  | Component\r\n  | typeof Text\r\n  | typeof Static\r\n  | typeof Comment\r\n  | typeof Fragment\r\n  | typeof TeleportImpl\r\n  | typeof SuspenseImpl\r\n\r\nexport type VNodeRef =\r\n  | string\r\n  | Ref\r\n  | ((\r\n      ref: Element | ComponentPublicInstance | null,\r\n      refs: Record<string, any>\r\n    ) => void)\r\n\r\nexport type VNodeNormalizedRefAtom = {\r\n  i: ComponentInternalInstance\r\n  r: VNodeRef\r\n  k?: string // setup ref key\r\n  f?: boolean // refInFor marker\r\n}\r\n\r\nexport type VNodeNormalizedRef =\r\n  | VNodeNormalizedRefAtom\r\n  | VNodeNormalizedRefAtom[]\r\n\r\ntype VNodeMountHook = (vnode: VNode) => void\r\ntype VNodeUpdateHook = (vnode: VNode, oldVNode: VNode) => void\r\nexport type VNodeHook =\r\n  | VNodeMountHook\r\n  | VNodeUpdateHook\r\n  | VNodeMountHook[]\r\n  | VNodeUpdateHook[]\r\n\r\n// https://github.com/microsoft/TypeScript/issues/33099\r\nexport type VNodeProps = {\r\n  key?: string | number | symbol\r\n  ref?: VNodeRef\r\n  ref_for?: boolean\r\n  ref_key?: string\r\n\r\n  // vnode hooks\r\n  onVnodeBeforeMount?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeMounted?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeBeforeUpdate?: VNodeUpdateHook | VNodeUpdateHook[]\r\n  onVnodeUpdated?: VNodeUpdateHook | VNodeUpdateHook[]\r\n  onVnodeBeforeUnmount?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeUnmounted?: VNodeMountHook | VNodeMountHook[]\r\n}\r\n\r\ntype VNodeChildAtom =\r\n  | VNode\r\n  | string\r\n  | number\r\n  | boolean\r\n  | null\r\n  | undefined\r\n  | void\r\n\r\nexport type VNodeArrayChildren = Array<VNodeArrayChildren | VNodeChildAtom>\r\n\r\nexport type VNodeChild = VNodeChildAtom | VNodeArrayChildren\r\n\r\nexport type VNodeNormalizedChildren =\r\n  | string\r\n  | VNodeArrayChildren\r\n  | RawSlots\r\n  | null\r\n\r\nexport interface VNode<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement,\r\n  ExtraProps = { [key: string]: any }\r\n> {\r\n  /**\r\n   * @internal\r\n   */\r\n  __v_isVNode: true\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  [ReactiveFlags.SKIP]: true\r\n\r\n  type: VNodeTypes\r\n  props: (VNodeProps & ExtraProps) | null\r\n  key: string | number | symbol | null\r\n  ref: VNodeNormalizedRef | null\r\n  /**\r\n   * SFC only. This is assigned on vnode creation using currentScopeId\r\n   * which is set alongside currentRenderingInstance.\r\n   */\r\n  scopeId: string | null\r\n  /**\r\n   * SFC only. This is assigned to:\r\n   * - Slot fragment vnodes with :slotted SFC styles.\r\n   * - Component vnodes (during patch/hydration) so that its root node can\r\n   *   inherit the component's slotScopeIds\r\n   * @internal\r\n   */\r\n  slotScopeIds: string[] | null\r\n  children: VNodeNormalizedChildren\r\n  component: ComponentInternalInstance | null\r\n  dirs: DirectiveBinding[] | null\r\n  transition: TransitionHooks<HostElement> | null\r\n\r\n  // DOM\r\n  el: HostNode | null\r\n  anchor: HostNode | null // fragment anchor\r\n  target: HostElement | null // teleport target\r\n  targetAnchor: HostNode | null // teleport target anchor\r\n  /**\r\n   * number of elements contained in a static vnode\r\n   * @internal\r\n   */\r\n  staticCount: number\r\n\r\n  // suspense\r\n  suspense: SuspenseBoundary | null\r\n  /**\r\n   * @internal\r\n   */\r\n  ssContent: VNode | null\r\n  /**\r\n   * @internal\r\n   */\r\n  ssFallback: VNode | null\r\n\r\n  // optimization only\r\n  shapeFlag: number\r\n  patchFlag: number\r\n  /**\r\n   * @internal\r\n   */\r\n  dynamicProps: string[] | null\r\n  /**\r\n   * @internal\r\n   */\r\n  dynamicChildren: VNode[] | null\r\n\r\n  // application root node only\r\n  appContext: AppContext | null\r\n\r\n  /**\r\n   * @internal attached by v-memo\r\n   */\r\n  memo?: any[]\r\n  /**\r\n   * @internal __COMPAT__ only\r\n   */\r\n  isCompatRoot?: true\r\n  /**\r\n   * @internal custom element interception hook\r\n   */\r\n  ce?: (instance: ComponentInternalInstance) => void\r\n}\r\n\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nexport const blockStack: (VNode[] | null)[] = []\r\nexport let currentBlock: VNode[] | null = null\r\n\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nexport function openBlock(disableTracking = false) {\r\n  blockStack.push((currentBlock = disableTracking ? null : []))\r\n}\r\n\r\nexport function closeBlock() {\r\n  blockStack.pop()\r\n  currentBlock = blockStack[blockStack.length - 1] || null\r\n}\r\n\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nexport let isBlockTreeEnabled = 1\r\n\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nexport function setBlockTracking(value: number) {\r\n  isBlockTreeEnabled += value\r\n}\r\n\r\nfunction setupBlock(vnode: VNode) {\r\n  // save current block children on the block vnode\r\n  vnode.dynamicChildren =\r\n    isBlockTreeEnabled > 0 ? currentBlock || (EMPTY_ARR as any) : null\r\n  // close block\r\n  closeBlock()\r\n  // a block is always going to be patched, so track it as a child of its\r\n  // parent block\r\n  if (isBlockTreeEnabled > 0 && currentBlock) {\r\n    currentBlock.push(vnode)\r\n  }\r\n  return vnode\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createElementBlock(\r\n  type: string | typeof Fragment,\r\n  props?: Record<string, any> | null,\r\n  children?: any,\r\n  patchFlag?: number,\r\n  dynamicProps?: string[],\r\n  shapeFlag?: number\r\n) {\r\n  return setupBlock(\r\n    createBaseVNode(\r\n      type,\r\n      props,\r\n      children,\r\n      patchFlag,\r\n      dynamicProps,\r\n      shapeFlag,\r\n      true /* isBlock */\r\n    )\r\n  )\r\n}\r\n\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nexport function createBlock(\r\n  type: VNodeTypes | ClassComponent,\r\n  props?: Record<string, any> | null,\r\n  children?: any,\r\n  patchFlag?: number,\r\n  dynamicProps?: string[]\r\n): VNode {\r\n  return setupBlock(\r\n    createVNode(\r\n      type,\r\n      props,\r\n      children,\r\n      patchFlag,\r\n      dynamicProps,\r\n      true /* isBlock: prevent a block from tracking itself */\r\n    )\r\n  )\r\n}\r\n\r\nexport function isVNode(value: any): value is VNode {\r\n  return value ? value.__v_isVNode === true : false\r\n}\r\n\r\nexport function isSameVNodeType(n1: VNode, n2: VNode): boolean {\r\n  if (\r\n    __DEV__ &&\r\n    n2.shapeFlag & ShapeFlags.COMPONENT &&\r\n    hmrDirtyComponents.has(n2.type as ConcreteComponent)\r\n  ) {\r\n    // HMR only: if the component has been hot-updated, force a reload.\r\n    return false\r\n  }\r\n  return n1.type === n2.type && n1.key === n2.key\r\n}\r\n\r\nlet vnodeArgsTransformer:\r\n  | ((\r\n      args: Parameters<typeof _createVNode>,\r\n      instance: ComponentInternalInstance | null\r\n    ) => Parameters<typeof _createVNode>)\r\n  | undefined\r\n\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nexport function transformVNodeArgs(transformer?: typeof vnodeArgsTransformer) {\r\n  vnodeArgsTransformer = transformer\r\n}\r\n\r\nconst createVNodeWithArgsTransform = (\r\n  ...args: Parameters<typeof _createVNode>\r\n): VNode => {\r\n  return _createVNode(\r\n    ...(vnodeArgsTransformer\r\n      ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n      : args)\r\n  )\r\n}\r\n\r\nexport const InternalObjectKey = `__vInternal`\r\n\r\nconst normalizeKey = ({ key }: VNodeProps): VNode['key'] =>\r\n  key != null ? key : null\r\n\r\nconst normalizeRef = ({\r\n  ref,\r\n  ref_key,\r\n  ref_for\r\n}: VNodeProps): VNodeNormalizedRefAtom | null => {\r\n  return (\r\n    ref != null\r\n      ? isString(ref) || isRef(ref) || isFunction(ref)\r\n        ? { i: currentRenderingInstance, r: ref, k: ref_key, f: !!ref_for }\r\n        : ref\r\n      : null\r\n  ) as any\r\n}\r\n\r\nfunction createBaseVNode(\r\n  type: VNodeTypes | ClassComponent | typeof NULL_DYNAMIC_COMPONENT,\r\n  props: (Data & VNodeProps) | null = null,\r\n  children: unknown = null,\r\n  patchFlag = 0,\r\n  dynamicProps: string[] | null = null,\r\n  shapeFlag = type === Fragment ? 0 : ShapeFlags.ELEMENT,\r\n  isBlockNode = false,\r\n  needFullChildrenNormalization = false\r\n) {\r\n  const vnode = {\r\n    __v_isVNode: true,\r\n    __v_skip: true,\r\n    type,\r\n    props,\r\n    key: props && normalizeKey(props),\r\n    ref: props && normalizeRef(props),\r\n    scopeId: currentScopeId,\r\n    slotScopeIds: null,\r\n    children,\r\n    component: null,\r\n    suspense: null,\r\n    ssContent: null,\r\n    ssFallback: null,\r\n    dirs: null,\r\n    transition: null,\r\n    el: null,\r\n    anchor: null,\r\n    target: null,\r\n    targetAnchor: null,\r\n    staticCount: 0,\r\n    shapeFlag,\r\n    patchFlag,\r\n    dynamicProps,\r\n    dynamicChildren: null,\r\n    appContext: null\r\n  } as VNode\r\n\r\n  if (needFullChildrenNormalization) {\r\n    normalizeChildren(vnode, children)\r\n    // normalize suspense children\r\n    if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n      ;(type as typeof SuspenseImpl).normalize(vnode)\r\n    }\r\n  } else if (children) {\r\n    // compiled element vnode - if children is passed, only possible types are\r\n    // string or Array.\r\n    vnode.shapeFlag |= isString(children)\r\n      ? ShapeFlags.TEXT_CHILDREN\r\n      : ShapeFlags.ARRAY_CHILDREN\r\n  }\r\n\r\n  // validate key\r\n  if (__DEV__ && vnode.key !== vnode.key) {\r\n    warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type)\r\n  }\r\n\r\n  // track vnode for block tree\r\n  if (\r\n    isBlockTreeEnabled > 0 &&\r\n    // avoid a block node from tracking itself\r\n    !isBlockNode &&\r\n    // has current parent block\r\n    currentBlock &&\r\n    // presence of a patch flag indicates this node needs patching on updates.\r\n    // component nodes also should always be patched, because even if the\r\n    // component doesn't need to update, it needs to persist the instance on to\r\n    // the next vnode so that it can be properly unmounted later.\r\n    (vnode.patchFlag > 0 || shapeFlag & ShapeFlags.COMPONENT) &&\r\n    // the EVENTS flag is only for hydration and if it is the only flag, the\r\n    // vnode should not be considered dynamic due to handler caching.\r\n    vnode.patchFlag !== PatchFlags.HYDRATE_EVENTS\r\n  ) {\r\n    currentBlock.push(vnode)\r\n  }\r\n\r\n  if (__COMPAT__) {\r\n    convertLegacyVModelProps(vnode)\r\n    defineLegacyVNodeProperties(vnode)\r\n  }\r\n\r\n  return vnode\r\n}\r\n\r\nexport { createBaseVNode as createElementVNode }\r\n\r\nexport const createVNode = (\r\n  __DEV__ ? createVNodeWithArgsTransform : _createVNode\r\n) as typeof _createVNode\r\n\r\nfunction _createVNode(\r\n  type: VNodeTypes | ClassComponent | typeof NULL_DYNAMIC_COMPONENT,\r\n  props: (Data & VNodeProps) | null = null,\r\n  children: unknown = null,\r\n  patchFlag: number = 0,\r\n  dynamicProps: string[] | null = null,\r\n  isBlockNode = false\r\n): VNode {\r\n  if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n    if (__DEV__ && !type) {\r\n      warn(`Invalid vnode type when creating vnode: ${type}.`)\r\n    }\r\n    type = Comment\r\n  }\r\n\r\n  if (isVNode(type)) {\r\n    // createVNode receiving an existing vnode. This happens in cases like\r\n    // <component :is=\"vnode\"/>\r\n    // #2078 make sure to merge refs during the clone instead of overwriting it\r\n    const cloned = cloneVNode(type, props, true /* mergeRef: true */)\r\n    if (children) {\r\n      normalizeChildren(cloned, children)\r\n    }\r\n    if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {\r\n      if (cloned.shapeFlag & ShapeFlags.COMPONENT) {\r\n        currentBlock[currentBlock.indexOf(type)] = cloned\r\n      } else {\r\n        currentBlock.push(cloned)\r\n      }\r\n    }\r\n    cloned.patchFlag |= PatchFlags.BAIL\r\n    return cloned\r\n  }\r\n\r\n  // class component normalization.\r\n  if (isClassComponent(type)) {\r\n    type = type.__vccOpts\r\n  }\r\n\r\n  // 2.x async/functional component compat\r\n  if (__COMPAT__) {\r\n    type = convertLegacyComponent(type, currentRenderingInstance)\r\n  }\r\n\r\n  // class & style normalization.\r\n  if (props) {\r\n    // for reactive or proxy objects, we need to clone it to enable mutation.\r\n    props = guardReactiveProps(props)!\r\n    let { class: klass, style } = props\r\n    if (klass && !isString(klass)) {\r\n      props.class = normalizeClass(klass)\r\n    }\r\n    if (isObject(style)) {\r\n      // reactive state objects need to be cloned since they are likely to be\r\n      // mutated\r\n      if (isProxy(style) && !isArray(style)) {\r\n        style = extend({}, style)\r\n      }\r\n      props.style = normalizeStyle(style)\r\n    }\r\n  }\r\n\r\n  // encode the vnode type information into a bitmap\r\n  const shapeFlag = isString(type)\r\n    ? ShapeFlags.ELEMENT\r\n    : __FEATURE_SUSPENSE__ && isSuspense(type)\r\n    ? ShapeFlags.SUSPENSE\r\n    : isTeleport(type)\r\n    ? ShapeFlags.TELEPORT\r\n    : isObject(type)\r\n    ? ShapeFlags.STATEFUL_COMPONENT\r\n    : isFunction(type)\r\n    ? ShapeFlags.FUNCTIONAL_COMPONENT\r\n    : 0\r\n\r\n  if (__DEV__ && shapeFlag & ShapeFlags.STATEFUL_COMPONENT && isProxy(type)) {\r\n    type = toRaw(type)\r\n    warn(\r\n      `Vue received a Component which was made a reactive object. This can ` +\r\n        `lead to unnecessary performance overhead, and should be avoided by ` +\r\n        `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n        `instead of \\`ref\\`.`,\r\n      `\\nComponent that was made reactive: `,\r\n      type\r\n    )\r\n  }\r\n\r\n  return createBaseVNode(\r\n    type,\r\n    props,\r\n    children,\r\n    patchFlag,\r\n    dynamicProps,\r\n    shapeFlag,\r\n    isBlockNode,\r\n    true\r\n  )\r\n}\r\n\r\nexport function guardReactiveProps(props: (Data & VNodeProps) | null) {\r\n  if (!props) return null\r\n  return isProxy(props) || InternalObjectKey in props\r\n    ? extend({}, props)\r\n    : props\r\n}\r\n\r\nexport function cloneVNode<T, U>(\r\n  vnode: VNode<T, U>,\r\n  extraProps?: (Data & VNodeProps) | null,\r\n  mergeRef = false\r\n): VNode<T, U> {\r\n  // This is intentionally NOT using spread or extend to avoid the runtime\r\n  // key enumeration cost.\r\n  const { props, ref, patchFlag, children } = vnode\r\n  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props\r\n  const cloned: VNode = {\r\n    __v_isVNode: true,\r\n    __v_skip: true,\r\n    type: vnode.type,\r\n    props: mergedProps,\r\n    key: mergedProps && normalizeKey(mergedProps),\r\n    ref:\r\n      extraProps && extraProps.ref\r\n        ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n          // if the vnode itself already has a ref, cloneVNode will need to merge\r\n          // the refs so the single vnode can be set on multiple refs\r\n          mergeRef && ref\r\n          ? isArray(ref)\r\n            ? ref.concat(normalizeRef(extraProps)!)\r\n            : [ref, normalizeRef(extraProps)!]\r\n          : normalizeRef(extraProps)\r\n        : ref,\r\n    scopeId: vnode.scopeId,\r\n    slotScopeIds: vnode.slotScopeIds,\r\n    children:\r\n      __DEV__ && patchFlag === PatchFlags.HOISTED && isArray(children)\r\n        ? (children as VNode[]).map(deepCloneVNode)\r\n        : children,\r\n    target: vnode.target,\r\n    targetAnchor: vnode.targetAnchor,\r\n    staticCount: vnode.staticCount,\r\n    shapeFlag: vnode.shapeFlag,\r\n    // if the vnode is cloned with extra props, we can no longer assume its\r\n    // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n    // note: preserve flag for fragments since they use the flag for children\r\n    // fast paths only.\r\n    patchFlag:\r\n      extraProps && vnode.type !== Fragment\r\n        ? patchFlag === -1 // hoisted node\r\n          ? PatchFlags.FULL_PROPS\r\n          : patchFlag | PatchFlags.FULL_PROPS\r\n        : patchFlag,\r\n    dynamicProps: vnode.dynamicProps,\r\n    dynamicChildren: vnode.dynamicChildren,\r\n    appContext: vnode.appContext,\r\n    dirs: vnode.dirs,\r\n    transition: vnode.transition,\r\n\r\n    // These should technically only be non-null on mounted VNodes. However,\r\n    // they *should* be copied for kept-alive vnodes. So we just always copy\r\n    // them since them being non-null during a mount doesn't affect the logic as\r\n    // they will simply be overwritten.\r\n    component: vnode.component,\r\n    suspense: vnode.suspense,\r\n    ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n    ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n    el: vnode.el,\r\n    anchor: vnode.anchor\r\n  }\r\n  if (__COMPAT__) {\r\n    defineLegacyVNodeProperties(cloned)\r\n  }\r\n  return cloned as any\r\n}\r\n\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode: VNode): VNode {\r\n  const cloned = cloneVNode(vnode)\r\n  if (isArray(vnode.children)) {\r\n    cloned.children = (vnode.children as VNode[]).map(deepCloneVNode)\r\n  }\r\n  return cloned\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createTextVNode(text: string = ' ', flag: number = 0): VNode {\r\n  return createVNode(Text, null, text, flag)\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createStaticVNode(\r\n  content: string,\r\n  numberOfNodes: number\r\n): VNode {\r\n  // A static vnode can contain multiple stringified elements, and the number\r\n  // of elements is necessary for hydration.\r\n  const vnode = createVNode(Static, null, content)\r\n  vnode.staticCount = numberOfNodes\r\n  return vnode\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createCommentVNode(\r\n  text: string = '',\r\n  // when used as the v-else branch, the comment node must be created as a\r\n  // block to ensure correct updates.\r\n  asBlock: boolean = false\r\n): VNode {\r\n  return asBlock\r\n    ? (openBlock(), createBlock(Comment, null, text))\r\n    : createVNode(Comment, null, text)\r\n}\r\n\r\nexport function normalizeVNode(child: VNodeChild): VNode {\r\n  if (child == null || typeof child === 'boolean') {\r\n    // empty placeholder\r\n    return createVNode(Comment)\r\n  } else if (isArray(child)) {\r\n    // fragment\r\n    return createVNode(\r\n      Fragment,\r\n      null,\r\n      // #3666, avoid reference pollution when reusing vnode\r\n      child.slice()\r\n    )\r\n  } else if (typeof child === 'object') {\r\n    // already vnode, this should be the most common since compiled templates\r\n    // always produce all-vnode children arrays\r\n    return cloneIfMounted(child)\r\n  } else {\r\n    // strings and numbers\r\n    return createVNode(Text, null, String(child))\r\n  }\r\n}\r\n\r\n// optimized normalization for template-compiled render fns\r\nexport function cloneIfMounted(child: VNode): VNode {\r\n  return child.el === null || child.memo ? child : cloneVNode(child)\r\n}\r\n\r\nexport function normalizeChildren(vnode: VNode, children: unknown) {\r\n  let type = 0\r\n  const { shapeFlag } = vnode\r\n  if (children == null) {\r\n    children = null\r\n  } else if (isArray(children)) {\r\n    type = ShapeFlags.ARRAY_CHILDREN\r\n  } else if (typeof children === 'object') {\r\n    if (shapeFlag & (ShapeFlags.ELEMENT | ShapeFlags.TELEPORT)) {\r\n      // Normalize slot to plain children for plain element and Teleport\r\n      const slot = (children as any).default\r\n      if (slot) {\r\n        // _c marker is added by withCtx() indicating this is a compiled slot\r\n        slot._c && (slot._d = false)\r\n        normalizeChildren(vnode, slot())\r\n        slot._c && (slot._d = true)\r\n      }\r\n      return\r\n    } else {\r\n      type = ShapeFlags.SLOTS_CHILDREN\r\n      const slotFlag = (children as RawSlots)._\r\n      if (!slotFlag && !(InternalObjectKey in children!)) {\r\n        // if slots are not normalized, attach context instance\r\n        // (compiled / normalized slots already have context)\r\n        ;(children as RawSlots)._ctx = currentRenderingInstance\r\n      } else if (slotFlag === SlotFlags.FORWARDED && currentRenderingInstance) {\r\n        // a child component receives forwarded slots from the parent.\r\n        // its slot type is determined by its parent's slot type.\r\n        if (\r\n          (currentRenderingInstance.slots as RawSlots)._ === SlotFlags.STABLE\r\n        ) {\r\n          ;(children as RawSlots)._ = SlotFlags.STABLE\r\n        } else {\r\n          ;(children as RawSlots)._ = SlotFlags.DYNAMIC\r\n          vnode.patchFlag |= PatchFlags.DYNAMIC_SLOTS\r\n        }\r\n      }\r\n    }\r\n  } else if (isFunction(children)) {\r\n    children = { default: children, _ctx: currentRenderingInstance }\r\n    type = ShapeFlags.SLOTS_CHILDREN\r\n  } else {\r\n    children = String(children)\r\n    // force teleport children to array so it can be moved around\r\n    if (shapeFlag & ShapeFlags.TELEPORT) {\r\n      type = ShapeFlags.ARRAY_CHILDREN\r\n      children = [createTextVNode(children as string)]\r\n    } else {\r\n      type = ShapeFlags.TEXT_CHILDREN\r\n    }\r\n  }\r\n  vnode.children = children as VNodeNormalizedChildren\r\n  vnode.shapeFlag |= type\r\n}\r\n\r\nexport function mergeProps(...args: (Data & VNodeProps)[]) {\r\n  const ret: Data = {}\r\n  for (let i = 0; i < args.length; i++) {\r\n    const toMerge = args[i]\r\n    for (const key in toMerge) {\r\n      if (key === 'class') {\r\n        if (ret.class !== toMerge.class) {\r\n          ret.class = normalizeClass([ret.class, toMerge.class])\r\n        }\r\n      } else if (key === 'style') {\r\n        ret.style = normalizeStyle([ret.style, toMerge.style])\r\n      } else if (isOn(key)) {\r\n        const existing = ret[key]\r\n        const incoming = toMerge[key]\r\n        if (\r\n          incoming &&\r\n          existing !== incoming &&\r\n          !(isArray(existing) && existing.includes(incoming))\r\n        ) {\r\n          ret[key] = existing\r\n            ? [].concat(existing as any, incoming as any)\r\n            : incoming\r\n        }\r\n      } else if (key !== '') {\r\n        ret[key] = toMerge[key]\r\n      }\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\nexport function invokeVNodeHook(\r\n  hook: VNodeHook,\r\n  instance: ComponentInternalInstance | null,\r\n  vnode: VNode,\r\n  prevVNode: VNode | null = null\r\n) {\r\n  callWithAsyncErrorHandling(hook, instance, ErrorCodes.VNODE_HOOK, [\r\n    vnode,\r\n    prevVNode\r\n  ])\r\n}\r\n","import { computed as _computed } from '@vue/reactivity'\r\nimport { isInSSRComponentSetup } from './component'\r\n\r\nexport const computed = ((getterOrOptions: any, debugOptions?: any) => {\r\n  // @ts-ignore\r\n  return _computed(getterOrOptions, debugOptions, isInSSRComponentSetup)\r\n}) as typeof _computed\r\n","import { ComponentPropsOptions } from '@vue/runtime-core'\r\nimport { isArray, isPromise, isFunction } from '@vue/shared'\r\nimport {\r\n  getCurrentInstance,\r\n  setCurrentInstance,\r\n  SetupContext,\r\n  createSetupContext,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport { EmitFn, EmitsOptions } from './componentEmits'\r\nimport { ComponentObjectPropsOptions, ExtractPropTypes } from './componentProps'\r\nimport { warn } from './warning'\r\n\r\n// dev only\r\nconst warnRuntimeUsage = (method: string) =>\r\n  warn(\r\n    `${method}() is a compiler-hint helper that is only usable inside ` +\r\n      `<script setup> of a single file component. Its arguments should be ` +\r\n      `compiled away and passing it at runtime has no effect.`\r\n  )\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring component props. The\r\n * expected argument is the same as the component `props` option.\r\n *\r\n * Example runtime declaration:\r\n * ```js\r\n * // using Array syntax\r\n * const props = defineProps(['foo', 'bar'])\r\n * // using Object syntax\r\n * const props = defineProps({\r\n *   foo: String,\r\n *   bar: {\r\n *     type: Number,\r\n *     required: true\r\n *   }\r\n * })\r\n * ```\r\n *\r\n * Equivalent type-based declaration:\r\n * ```ts\r\n * // will be compiled into equivalent runtime declarations\r\n * const props = defineProps<{\r\n *   foo?: string\r\n *   bar: number\r\n * }>()\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\n// overload 1: runtime props w/ array\r\nexport function defineProps<PropNames extends string = string>(\r\n  props: PropNames[]\r\n): Readonly<{ [key in PropNames]?: any }>\r\n// overload 2: runtime props w/ object\r\nexport function defineProps<\r\n  PP extends ComponentObjectPropsOptions = ComponentObjectPropsOptions\r\n>(props: PP): Readonly<ExtractPropTypes<PP>>\r\n// overload 3: typed-based declaration\r\nexport function defineProps<TypeProps>(): Readonly<TypeProps>\r\n// implementation\r\nexport function defineProps() {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`defineProps`)\r\n  }\r\n  return null as any\r\n}\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's emitted\r\n * events. The expected argument is the same as the component `emits` option.\r\n *\r\n * Example runtime declaration:\r\n * ```js\r\n * const emit = defineEmits(['change', 'update'])\r\n * ```\r\n *\r\n * Example type-based declaration:\r\n * ```ts\r\n * const emit = defineEmits<{\r\n *   (event: 'change'): void\r\n *   (event: 'update', id: number): void\r\n * }>()\r\n *\r\n * emit('change')\r\n * emit('update', 1)\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\n// overload 1: runtime emits w/ array\r\nexport function defineEmits<EE extends string = string>(\r\n  emitOptions: EE[]\r\n): EmitFn<EE[]>\r\nexport function defineEmits<E extends EmitsOptions = EmitsOptions>(\r\n  emitOptions: E\r\n): EmitFn<E>\r\nexport function defineEmits<TypeEmit>(): TypeEmit\r\n// implementation\r\nexport function defineEmits() {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`defineEmits`)\r\n  }\r\n  return null as any\r\n}\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's exposed\r\n * instance properties when it is accessed by a parent component via template\r\n * refs.\r\n *\r\n * `<script setup>` components are closed by default - i.e. variables inside\r\n * the `<script setup>` scope is not exposed to parent unless explicitly exposed\r\n * via `defineExpose`.\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\nexport function defineExpose<\r\n  Exposed extends Record<string, any> = Record<string, any>\r\n>(exposed?: Exposed) {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`defineExpose`)\r\n  }\r\n}\r\n\r\ntype NotUndefined<T> = T extends undefined ? never : T\r\n\r\ntype InferDefaults<T> = {\r\n  [K in keyof T]?: InferDefault<T, NotUndefined<T[K]>>\r\n}\r\n\r\ntype InferDefault<P, T> = T extends\r\n  | null\r\n  | number\r\n  | string\r\n  | boolean\r\n  | symbol\r\n  | Function\r\n  ? T | ((props: P) => T)\r\n  : (props: P) => T\r\n\r\ntype PropsWithDefaults<Base, Defaults> = Base & {\r\n  [K in keyof Defaults]: K extends keyof Base ? NotUndefined<Base[K]> : never\r\n}\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for providing props default values when\r\n * using type-based `defineProps` declaration.\r\n *\r\n * Example usage:\r\n * ```ts\r\n * withDefaults(defineProps<{\r\n *   size?: number\r\n *   labels?: string[]\r\n * }>(), {\r\n *   size: 3,\r\n *   labels: () => ['default label']\r\n * })\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the output\r\n * and should **not** be actually called at runtime.\r\n */\r\nexport function withDefaults<Props, Defaults extends InferDefaults<Props>>(\r\n  props: Props,\r\n  defaults: Defaults\r\n): PropsWithDefaults<Props, Defaults> {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`withDefaults`)\r\n  }\r\n  return null as any\r\n}\r\n\r\nexport function useSlots(): SetupContext['slots'] {\r\n  return getContext().slots\r\n}\r\n\r\nexport function useAttrs(): SetupContext['attrs'] {\r\n  return getContext().attrs\r\n}\r\n\r\nfunction getContext(): SetupContext {\r\n  const i = getCurrentInstance()!\r\n  if (__DEV__ && !i) {\r\n    warn(`useContext() called without active instance.`)\r\n  }\r\n  return i.setupContext || (i.setupContext = createSetupContext(i))\r\n}\r\n\r\n/**\r\n * Runtime helper for merging default declarations. Imported by compiled code\r\n * only.\r\n * @internal\r\n */\r\nexport function mergeDefaults(\r\n  raw: ComponentPropsOptions,\r\n  defaults: Record<string, any>\r\n): ComponentObjectPropsOptions {\r\n  const props = isArray(raw)\r\n    ? raw.reduce(\r\n        (normalized, p) => ((normalized[p] = {}), normalized),\r\n        {} as ComponentObjectPropsOptions\r\n      )\r\n    : raw\r\n  for (const key in defaults) {\r\n    const opt = props[key]\r\n    if (opt) {\r\n      if (isArray(opt) || isFunction(opt)) {\r\n        props[key] = { type: opt, default: defaults[key] }\r\n      } else {\r\n        opt.default = defaults[key]\r\n      }\r\n    } else if (opt === null) {\r\n      props[key] = { default: defaults[key] }\r\n    } else if (__DEV__) {\r\n      warn(`props default key \"${key}\" has no corresponding declaration.`)\r\n    }\r\n  }\r\n  return props\r\n}\r\n\r\n/**\r\n * Used to create a proxy for the rest element when destructuring props with\r\n * defineProps().\r\n * @internal\r\n */\r\nexport function createPropsRestProxy(\r\n  props: any,\r\n  excludedKeys: string[]\r\n): Record<string, any> {\r\n  const ret: Record<string, any> = {}\r\n  for (const key in props) {\r\n    if (!excludedKeys.includes(key)) {\r\n      Object.defineProperty(ret, key, {\r\n        enumerable: true,\r\n        get: () => props[key]\r\n      })\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\n/**\r\n * `<script setup>` helper for persisting the current instance context over\r\n * async/await flows.\r\n *\r\n * `@vue/compiler-sfc` converts the following:\r\n *\r\n * ```ts\r\n * const x = await foo()\r\n * ```\r\n *\r\n * into:\r\n *\r\n * ```ts\r\n * let __temp, __restore\r\n * const x = (([__temp, __restore] = withAsyncContext(() => foo())),__temp=await __temp,__restore(),__temp)\r\n * ```\r\n * @internal\r\n */\r\nexport function withAsyncContext(getAwaitable: () => any) {\r\n  const ctx = getCurrentInstance()!\r\n  if (__DEV__ && !ctx) {\r\n    warn(\r\n      `withAsyncContext called without active current instance. ` +\r\n        `This is likely a bug.`\r\n    )\r\n  }\r\n  let awaitable = getAwaitable()\r\n  unsetCurrentInstance()\r\n  if (isPromise(awaitable)) {\r\n    awaitable = awaitable.catch(e => {\r\n      setCurrentInstance(ctx)\r\n      throw e\r\n    })\r\n  }\r\n  return [awaitable, () => setCurrentInstance(ctx)]\r\n}\r\n","import {\r\n  VNode,\r\n  VNodeProps,\r\n  createVNode,\r\n  VNodeArrayChildren,\r\n  Fragment,\r\n  Text,\r\n  Comment,\r\n  isVNode\r\n} from './vnode'\r\nimport { Teleport, TeleportProps } from './components/Teleport'\r\nimport { Suspense, SuspenseProps } from './components/Suspense'\r\nimport { isObject, isArray } from '@vue/shared'\r\nimport { RawSlots } from './componentSlots'\r\nimport {\r\n  FunctionalComponent,\r\n  Component,\r\n  ComponentOptions,\r\n  ConcreteComponent\r\n} from './component'\r\nimport { EmitsOptions } from './componentEmits'\r\nimport { DefineComponent } from './apiDefineComponent'\r\n\r\n// `h` is a more user-friendly version of `createVNode` that allows omitting the\r\n// props when possible. It is intended for manually written render functions.\r\n// Compiler-generated code uses `createVNode` because\r\n// 1. it is monomorphic and avoids the extra call overhead\r\n// 2. it allows specifying patchFlags for optimization\r\n\r\n/*\r\n// type only\r\nh('div')\r\n\r\n// type + props\r\nh('div', {})\r\n\r\n// type + omit props + children\r\n// Omit props does NOT support named slots\r\nh('div', []) // array\r\nh('div', 'foo') // text\r\nh('div', h('br')) // vnode\r\nh(Component, () => {}) // default slot\r\n\r\n// type + props + children\r\nh('div', {}, []) // array\r\nh('div', {}, 'foo') // text\r\nh('div', {}, h('br')) // vnode\r\nh(Component, {}, () => {}) // default slot\r\nh(Component, {}, {}) // named slots\r\n\r\n// named slots without props requires explicit `null` to avoid ambiguity\r\nh(Component, null, {})\r\n**/\r\n\r\ntype RawProps = VNodeProps & {\r\n  // used to differ from a single VNode object as children\r\n  __v_isVNode?: never\r\n  // used to differ from Array children\r\n  [Symbol.iterator]?: never\r\n} & Record<string, any>\r\n\r\ntype RawChildren =\r\n  | string\r\n  | number\r\n  | boolean\r\n  | VNode\r\n  | VNodeArrayChildren\r\n  | (() => any)\r\n\r\n// fake constructor type returned from `defineComponent`\r\ninterface Constructor<P = any> {\r\n  __isFragment?: never\r\n  __isTeleport?: never\r\n  __isSuspense?: never\r\n  new (...args: any[]): { $props: P }\r\n}\r\n\r\n// The following is a series of overloads for providing props validation of\r\n// manually written render functions.\r\n\r\n// element\r\nexport function h(type: string, children?: RawChildren): VNode\r\nexport function h(\r\n  type: string,\r\n  props?: RawProps | null,\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// text/comment\r\nexport function h(\r\n  type: typeof Text | typeof Comment,\r\n  children?: string | number | boolean\r\n): VNode\r\nexport function h(\r\n  type: typeof Text | typeof Comment,\r\n  props?: null,\r\n  children?: string | number | boolean\r\n): VNode\r\n// fragment\r\nexport function h(type: typeof Fragment, children?: VNodeArrayChildren): VNode\r\nexport function h(\r\n  type: typeof Fragment,\r\n  props?: RawProps | null,\r\n  children?: VNodeArrayChildren\r\n): VNode\r\n\r\n// teleport (target prop is required)\r\nexport function h(\r\n  type: typeof Teleport,\r\n  props: RawProps & TeleportProps,\r\n  children: RawChildren\r\n): VNode\r\n\r\n// suspense\r\nexport function h(type: typeof Suspense, children?: RawChildren): VNode\r\nexport function h(\r\n  type: typeof Suspense,\r\n  props?: (RawProps & SuspenseProps) | null,\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// functional component\r\nexport function h<P, E extends EmitsOptions = {}>(\r\n  type: FunctionalComponent<P, E>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// catch-all for generic component types\r\nexport function h(type: Component, children?: RawChildren): VNode\r\n\r\n// concrete component\r\nexport function h<P>(\r\n  type: ConcreteComponent | string,\r\n  children?: RawChildren\r\n): VNode\r\nexport function h<P>(\r\n  type: ConcreteComponent<P> | string,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren\r\n): VNode\r\n\r\n// component without props\r\nexport function h(\r\n  type: Component,\r\n  props: null,\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// exclude `defineComponent` constructors\r\nexport function h<P>(\r\n  type: ComponentOptions<P>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// fake constructor type returned by `defineComponent` or class component\r\nexport function h(type: Constructor, children?: RawChildren): VNode\r\nexport function h<P>(\r\n  type: Constructor<P>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// fake constructor type returned by `defineComponent`\r\nexport function h(type: DefineComponent, children?: RawChildren): VNode\r\nexport function h<P>(\r\n  type: DefineComponent<P>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// Actual implementation\r\nexport function h(type: any, propsOrChildren?: any, children?: any): VNode {\r\n  const l = arguments.length\r\n  if (l === 2) {\r\n    if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n      // single vnode without props\r\n      if (isVNode(propsOrChildren)) {\r\n        return createVNode(type, null, [propsOrChildren])\r\n      }\r\n      // props without children\r\n      return createVNode(type, propsOrChildren)\r\n    } else {\r\n      // omit props\r\n      return createVNode(type, null, propsOrChildren)\r\n    }\r\n  } else {\r\n    if (l > 3) {\r\n      children = Array.prototype.slice.call(arguments, 2)\r\n    } else if (l === 3 && isVNode(children)) {\r\n      children = [children]\r\n    }\r\n    return createVNode(type, propsOrChildren, children)\r\n  }\r\n}\r\n","import { inject } from '../apiInject'\r\nimport { warn } from '../warning'\r\n\r\nexport const ssrContextKey = Symbol(__DEV__ ? `ssrContext` : ``)\r\n\r\nexport const useSSRContext = <T = Record<string, any>>() => {\r\n  if (!__GLOBAL__) {\r\n    const ctx = inject<T>(ssrContextKey)\r\n    if (!ctx) {\r\n      warn(\r\n        `Server rendering context not provided. Make sure to only call ` +\r\n          `useSSRContext() conditionally in the server build.`\r\n      )\r\n    }\r\n    return ctx\r\n  } else if (__DEV__) {\r\n    warn(`useSSRContext() is not supported in the global build.`)\r\n  }\r\n}\r\n","import { isReactive, isReadonly, isRef, Ref, toRaw } from '@vue/reactivity'\r\nimport { EMPTY_OBJ, extend, isArray, isFunction, isObject } from '@vue/shared'\r\nimport { isShallow } from '../../reactivity/src/reactive'\r\nimport { ComponentInternalInstance, ComponentOptions } from './component'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\n\r\nexport function initCustomFormatter() {\r\n  /* eslint-disable no-restricted-globals */\r\n  if (!__DEV__ || typeof window === 'undefined') {\r\n    return\r\n  }\r\n\r\n  const vueStyle = { style: 'color:#3ba776' }\r\n  const numberStyle = { style: 'color:#0b1bc9' }\r\n  const stringStyle = { style: 'color:#b62e24' }\r\n  const keywordStyle = { style: 'color:#9d288c' }\r\n\r\n  // custom formatter for Chrome\r\n  // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n  const formatter = {\r\n    header(obj: unknown) {\r\n      // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n      if (!isObject(obj)) {\r\n        return null\r\n      }\r\n\r\n      if (obj.__isVue) {\r\n        return ['div', vueStyle, `VueInstance`]\r\n      } else if (isRef(obj)) {\r\n        return [\r\n          'div',\r\n          {},\r\n          ['span', vueStyle, genRefFlag(obj)],\r\n          '<',\r\n          formatValue(obj.value),\r\n          `>`\r\n        ]\r\n      } else if (isReactive(obj)) {\r\n        return [\r\n          'div',\r\n          {},\r\n          ['span', vueStyle, isShallow(obj) ? 'ShallowReactive' : 'Reactive'],\r\n          '<',\r\n          formatValue(obj),\r\n          `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n        ]\r\n      } else if (isReadonly(obj)) {\r\n        return [\r\n          'div',\r\n          {},\r\n          ['span', vueStyle, isShallow(obj) ? 'ShallowReadonly' : 'Readonly'],\r\n          '<',\r\n          formatValue(obj),\r\n          '>'\r\n        ]\r\n      }\r\n      return null\r\n    },\r\n    hasBody(obj: unknown) {\r\n      return obj && (obj as any).__isVue\r\n    },\r\n    body(obj: unknown) {\r\n      if (obj && (obj as any).__isVue) {\r\n        return [\r\n          'div',\r\n          {},\r\n          ...formatInstance((obj as ComponentPublicInstance).$)\r\n        ]\r\n      }\r\n    }\r\n  }\r\n\r\n  function formatInstance(instance: ComponentInternalInstance) {\r\n    const blocks = []\r\n    if (instance.type.props && instance.props) {\r\n      blocks.push(createInstanceBlock('props', toRaw(instance.props)))\r\n    }\r\n    if (instance.setupState !== EMPTY_OBJ) {\r\n      blocks.push(createInstanceBlock('setup', instance.setupState))\r\n    }\r\n    if (instance.data !== EMPTY_OBJ) {\r\n      blocks.push(createInstanceBlock('data', toRaw(instance.data)))\r\n    }\r\n    const computed = extractKeys(instance, 'computed')\r\n    if (computed) {\r\n      blocks.push(createInstanceBlock('computed', computed))\r\n    }\r\n    const injected = extractKeys(instance, 'inject')\r\n    if (injected) {\r\n      blocks.push(createInstanceBlock('injected', injected))\r\n    }\r\n\r\n    blocks.push([\r\n      'div',\r\n      {},\r\n      [\r\n        'span',\r\n        {\r\n          style: keywordStyle.style + ';opacity:0.66'\r\n        },\r\n        '$ (internal): '\r\n      ],\r\n      ['object', { object: instance }]\r\n    ])\r\n    return blocks\r\n  }\r\n\r\n  function createInstanceBlock(type: string, target: any) {\r\n    target = extend({}, target)\r\n    if (!Object.keys(target).length) {\r\n      return ['span', {}]\r\n    }\r\n    return [\r\n      'div',\r\n      { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n      [\r\n        'div',\r\n        {\r\n          style: 'color:#476582'\r\n        },\r\n        type\r\n      ],\r\n      [\r\n        'div',\r\n        {\r\n          style: 'padding-left:1.25em'\r\n        },\r\n        ...Object.keys(target).map(key => {\r\n          return [\r\n            'div',\r\n            {},\r\n            ['span', keywordStyle, key + ': '],\r\n            formatValue(target[key], false)\r\n          ]\r\n        })\r\n      ]\r\n    ]\r\n  }\r\n\r\n  function formatValue(v: unknown, asRaw = true) {\r\n    if (typeof v === 'number') {\r\n      return ['span', numberStyle, v]\r\n    } else if (typeof v === 'string') {\r\n      return ['span', stringStyle, JSON.stringify(v)]\r\n    } else if (typeof v === 'boolean') {\r\n      return ['span', keywordStyle, v]\r\n    } else if (isObject(v)) {\r\n      return ['object', { object: asRaw ? toRaw(v) : v }]\r\n    } else {\r\n      return ['span', stringStyle, String(v)]\r\n    }\r\n  }\r\n\r\n  function extractKeys(instance: ComponentInternalInstance, type: string) {\r\n    const Comp = instance.type\r\n    if (isFunction(Comp)) {\r\n      return\r\n    }\r\n    const extracted: Record<string, any> = {}\r\n    for (const key in instance.ctx) {\r\n      if (isKeyOfType(Comp, key, type)) {\r\n        extracted[key] = instance.ctx[key]\r\n      }\r\n    }\r\n    return extracted\r\n  }\r\n\r\n  function isKeyOfType(Comp: ComponentOptions, key: string, type: string) {\r\n    const opts = Comp[type]\r\n    if (\r\n      (isArray(opts) && opts.includes(key)) ||\r\n      (isObject(opts) && key in opts)\r\n    ) {\r\n      return true\r\n    }\r\n    if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n      return true\r\n    }\r\n    if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  function genRefFlag(v: Ref) {\r\n    if (isShallow(v)) {\r\n      return `ShallowRef`\r\n    }\r\n    if ((v as any).effect) {\r\n      return `ComputedRef`\r\n    }\r\n    return `Ref`\r\n  }\r\n\r\n  if ((window as any).devtoolsFormatters) {\r\n    ;(window as any).devtoolsFormatters.push(formatter)\r\n  } else {\r\n    ;(window as any).devtoolsFormatters = [formatter]\r\n  }\r\n}\r\n","import { hasChanged } from '@vue/shared'\r\nimport { currentBlock, isBlockTreeEnabled, VNode } from '../vnode'\r\n\r\nexport function withMemo(\r\n  memo: any[],\r\n  render: () => VNode<any, any>,\r\n  cache: any[],\r\n  index: number\r\n) {\r\n  const cached = cache[index] as VNode | undefined\r\n  if (cached && isMemoSame(cached, memo)) {\r\n    return cached\r\n  }\r\n  const ret = render()\r\n\r\n  // shallow clone\r\n  ret.memo = memo.slice()\r\n  return (cache[index] = ret)\r\n}\r\n\r\nexport function isMemoSame(cached: VNode, memo: any[]) {\r\n  const prev: any[] = cached.memo!\r\n  if (prev.length != memo.length) {\r\n    return false\r\n  }\r\n  \r\n  for (let i = 0; i < prev.length; i++) {\r\n    if (hasChanged(prev[i], memo[i])) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // make sure to let parent block track it when returning cached\r\n  if (isBlockTreeEnabled > 0 && currentBlock) {\r\n    currentBlock.push(cached)\r\n  }\r\n  return true\r\n}\r\n","// Core API ------------------------------------------------------------------\r\n\r\nexport const version = __VERSION__\r\nexport {\r\n  // core\r\n  reactive,\r\n  ref,\r\n  readonly,\r\n  // utilities\r\n  unref,\r\n  proxyRefs,\r\n  isRef,\r\n  toRef,\r\n  toRefs,\r\n  isProxy,\r\n  isReactive,\r\n  isReadonly,\r\n  isShallow,\r\n  // advanced\r\n  customRef,\r\n  triggerRef,\r\n  shallowRef,\r\n  shallowReactive,\r\n  shallowReadonly,\r\n  markRaw,\r\n  toRaw,\r\n  // effect\r\n  effect,\r\n  stop,\r\n  ReactiveEffect,\r\n  // effect scope\r\n  effectScope,\r\n  EffectScope,\r\n  getCurrentScope,\r\n  onScopeDispose\r\n} from '@vue/reactivity'\r\nexport { computed } from './apiComputed'\r\nexport {\r\n  watch,\r\n  watchEffect,\r\n  watchPostEffect,\r\n  watchSyncEffect\r\n} from './apiWatch'\r\nexport {\r\n  onBeforeMount,\r\n  onMounted,\r\n  onBeforeUpdate,\r\n  onUpdated,\r\n  onBeforeUnmount,\r\n  onUnmounted,\r\n  onActivated,\r\n  onDeactivated,\r\n  onRenderTracked,\r\n  onRenderTriggered,\r\n  onErrorCaptured,\r\n  onServerPrefetch\r\n} from './apiLifecycle'\r\nexport { provide, inject } from './apiInject'\r\nexport { nextTick } from './scheduler'\r\nexport { defineComponent } from './apiDefineComponent'\r\nexport { defineAsyncComponent } from './apiAsyncComponent'\r\nexport { useAttrs, useSlots } from './apiSetupHelpers'\r\n\r\n// <script setup> API ----------------------------------------------------------\r\n\r\nexport {\r\n  // macros runtime, for typing and warnings only\r\n  defineProps,\r\n  defineEmits,\r\n  defineExpose,\r\n  withDefaults,\r\n  // internal\r\n  mergeDefaults,\r\n  createPropsRestProxy,\r\n  withAsyncContext\r\n} from './apiSetupHelpers'\r\n\r\n// Advanced API ----------------------------------------------------------------\r\n\r\n// For getting a hold of the internal instance in setup() - useful for advanced\r\n// plugins\r\nexport { getCurrentInstance } from './component'\r\n\r\n// For raw render function users\r\nexport { h } from './h'\r\n// Advanced render function utilities\r\nexport { createVNode, cloneVNode, mergeProps, isVNode } from './vnode'\r\n// VNode types\r\nexport { Fragment, Text, Comment, Static, VNodeRef } from './vnode'\r\n// Built-in components\r\nexport { Teleport, TeleportProps } from './components/Teleport'\r\nexport { Suspense, SuspenseProps } from './components/Suspense'\r\nexport { KeepAlive, KeepAliveProps } from './components/KeepAlive'\r\nexport {\r\n  BaseTransition,\r\n  BaseTransitionProps\r\n} from './components/BaseTransition'\r\n// For using custom directives\r\nexport { withDirectives } from './directives'\r\n// SSR context\r\nexport { useSSRContext, ssrContextKey } from './helpers/useSsrContext'\r\n\r\n// Custom Renderer API ---------------------------------------------------------\r\n\r\nexport { createRenderer, createHydrationRenderer } from './renderer'\r\nexport { queuePostFlushCb } from './scheduler'\r\nexport { warn } from './warning'\r\nexport {\r\n  handleError,\r\n  callWithErrorHandling,\r\n  callWithAsyncErrorHandling,\r\n  ErrorCodes\r\n} from './errorHandling'\r\nexport {\r\n  resolveComponent,\r\n  resolveDirective,\r\n  resolveDynamicComponent\r\n} from './helpers/resolveAssets'\r\n// For integration with runtime compiler\r\nexport { registerRuntimeCompiler, isRuntimeOnly } from './component'\r\nexport {\r\n  useTransitionState,\r\n  resolveTransitionHooks,\r\n  setTransitionHooks,\r\n  getTransitionRawChildren\r\n} from './components/BaseTransition'\r\nexport { initCustomFormatter } from './customFormatter'\r\n\r\n// For devtools\r\nexport { devtools, setDevtoolsHook } from './devtools'\r\n\r\n// Types -------------------------------------------------------------------------\r\n\r\nimport { VNode } from './vnode'\r\nimport { ComponentInternalInstance } from './component'\r\n\r\n// Augment Ref unwrap bail types.\r\n// Note: if updating this, also update `types/refBail.d.ts`.\r\ndeclare module '@vue/reactivity' {\r\n  export interface RefUnwrapBailTypes {\r\n    runtimeCoreBailTypes:\r\n      | VNode\r\n      | {\r\n          // directly bailing on ComponentPublicInstance results in recursion\r\n          // so we use this as a bail hint\r\n          $: ComponentInternalInstance\r\n        }\r\n  }\r\n}\r\n\r\nexport {\r\n  Ref,\r\n  ToRef,\r\n  ToRefs,\r\n  UnwrapRef,\r\n  ShallowRef,\r\n  ShallowUnwrapRef,\r\n  CustomRefFactory,\r\n  ReactiveFlags,\r\n  DeepReadonly,\r\n  ShallowReactive,\r\n  UnwrapNestedRefs,\r\n  ComputedRef,\r\n  WritableComputedRef,\r\n  WritableComputedOptions,\r\n  ComputedGetter,\r\n  ComputedSetter,\r\n  ReactiveEffectRunner,\r\n  ReactiveEffectOptions,\r\n  EffectScheduler,\r\n  DebuggerOptions,\r\n  DebuggerEvent,\r\n  DebuggerEventExtraInfo,\r\n  TrackOpTypes,\r\n  TriggerOpTypes\r\n} from '@vue/reactivity'\r\nexport {\r\n  WatchEffect,\r\n  WatchOptions,\r\n  WatchOptionsBase,\r\n  WatchCallback,\r\n  WatchSource,\r\n  WatchStopHandle\r\n} from './apiWatch'\r\nexport { InjectionKey } from './apiInject'\r\nexport {\r\n  App,\r\n  AppConfig,\r\n  AppContext,\r\n  Plugin,\r\n  CreateAppFunction,\r\n  OptionMergeFunction\r\n} from './apiCreateApp'\r\nexport {\r\n  VNode,\r\n  VNodeChild,\r\n  VNodeTypes,\r\n  VNodeProps,\r\n  VNodeArrayChildren,\r\n  VNodeNormalizedChildren\r\n} from './vnode'\r\nexport {\r\n  Component,\r\n  ConcreteComponent,\r\n  FunctionalComponent,\r\n  ComponentInternalInstance,\r\n  SetupContext,\r\n  ComponentCustomProps,\r\n  AllowedComponentProps\r\n} from './component'\r\nexport { DefineComponent } from './apiDefineComponent'\r\nexport {\r\n  ComponentOptions,\r\n  ComponentOptionsMixin,\r\n  ComponentOptionsWithoutProps,\r\n  ComponentOptionsWithObjectProps,\r\n  ComponentOptionsWithArrayProps,\r\n  ComponentCustomOptions,\r\n  ComponentOptionsBase,\r\n  ComponentProvideOptions,\r\n  RenderFunction,\r\n  MethodOptions,\r\n  ComputedOptions,\r\n  RuntimeCompilerOptions\r\n} from './componentOptions'\r\nexport { EmitsOptions, ObjectEmitsOptions } from './componentEmits'\r\nexport {\r\n  ComponentPublicInstance,\r\n  ComponentCustomProperties,\r\n  CreateComponentPublicInstance\r\n} from './componentPublicInstance'\r\nexport {\r\n  Renderer,\r\n  RendererNode,\r\n  RendererElement,\r\n  HydrationRenderer,\r\n  RendererOptions,\r\n  RootRenderFunction\r\n} from './renderer'\r\nexport { RootHydrateFunction } from './hydration'\r\nexport { Slot, Slots } from './componentSlots'\r\nexport {\r\n  Prop,\r\n  PropType,\r\n  ComponentPropsOptions,\r\n  ComponentObjectPropsOptions,\r\n  ExtractPropTypes,\r\n  ExtractDefaultPropTypes\r\n} from './componentProps'\r\nexport {\r\n  Directive,\r\n  DirectiveBinding,\r\n  DirectiveHook,\r\n  ObjectDirective,\r\n  FunctionDirective,\r\n  DirectiveArguments\r\n} from './directives'\r\nexport { SuspenseBoundary } from './components/Suspense'\r\nexport { TransitionState, TransitionHooks } from './components/BaseTransition'\r\nexport {\r\n  AsyncComponentOptions,\r\n  AsyncComponentLoader\r\n} from './apiAsyncComponent'\r\nexport { HMRRuntime } from './hmr'\r\n\r\n// Internal API ----------------------------------------------------------------\r\n\r\n// **IMPORTANT** Internal APIs may change without notice between versions and\r\n// user code should avoid relying on them.\r\n\r\n// For compiler generated code\r\n// should sync with '@vue/compiler-core/src/runtimeHelpers.ts'\r\nexport {\r\n  withCtx,\r\n  pushScopeId,\r\n  popScopeId,\r\n  withScopeId\r\n} from './componentRenderContext'\r\nexport { renderList } from './helpers/renderList'\r\nexport { toHandlers } from './helpers/toHandlers'\r\nexport { renderSlot } from './helpers/renderSlot'\r\nexport { createSlots } from './helpers/createSlots'\r\nexport { withMemo, isMemoSame } from './helpers/withMemo'\r\nexport {\r\n  openBlock,\r\n  createBlock,\r\n  setBlockTracking,\r\n  createTextVNode,\r\n  createCommentVNode,\r\n  createStaticVNode,\r\n  createElementVNode,\r\n  createElementBlock,\r\n  guardReactiveProps\r\n} from './vnode'\r\nexport {\r\n  toDisplayString,\r\n  camelize,\r\n  capitalize,\r\n  toHandlerKey,\r\n  normalizeProps,\r\n  normalizeClass,\r\n  normalizeStyle\r\n} from '@vue/shared'\r\n\r\n// For test-utils\r\nexport { transformVNodeArgs } from './vnode'\r\n\r\n// SSR -------------------------------------------------------------------------\r\n\r\n// **IMPORTANT** These APIs are exposed solely for @vue/server-renderer and may\r\n// change without notice between versions. User code should never rely on them.\r\n\r\nimport { createComponentInstance, setupComponent } from './component'\r\nimport { renderComponentRoot } from './componentRenderUtils'\r\nimport { setCurrentRenderingInstance } from './componentRenderContext'\r\nimport { isVNode, normalizeVNode } from './vnode'\r\n\r\nconst _ssrUtils = {\r\n  createComponentInstance,\r\n  setupComponent,\r\n  renderComponentRoot,\r\n  setCurrentRenderingInstance,\r\n  isVNode,\r\n  normalizeVNode\r\n}\r\n\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in ssr-possible builds.\r\n * @internal\r\n */\r\nexport const ssrUtils = (__SSR__ ? _ssrUtils : null) as typeof _ssrUtils\r\n\r\n// 2.x COMPAT ------------------------------------------------------------------\r\n\r\nexport { DeprecationTypes } from './compat/compatConfig'\r\nexport { CompatVue } from './compat/global'\r\nexport { LegacyConfig } from './compat/globalConfig'\r\n\r\nimport { warnDeprecation } from './compat/compatConfig'\r\nimport { createCompatVue } from './compat/global'\r\nimport {\r\n  isCompatEnabled,\r\n  checkCompatEnabled,\r\n  softAssertCompatEnabled\r\n} from './compat/compatConfig'\r\nimport { resolveFilter as _resolveFilter } from './helpers/resolveAssets'\r\n\r\n/**\r\n * @internal only exposed in compat builds\r\n */\r\nexport const resolveFilter = __COMPAT__ ? _resolveFilter : null\r\n\r\nconst _compatUtils = {\r\n  warnDeprecation,\r\n  createCompatVue,\r\n  isCompatEnabled,\r\n  checkCompatEnabled,\r\n  softAssertCompatEnabled\r\n}\r\n\r\n/**\r\n * @internal only exposed in compat builds.\r\n */\r\nexport const compatUtils = (\r\n  __COMPAT__ ? _compatUtils : null\r\n) as typeof _compatUtils\r\n","import { RendererOptions } from '@vue/runtime-core'\r\n\r\nexport const svgNS = 'http://www.w3.org/2000/svg'\r\n\r\nconst doc = (typeof document !== 'undefined' ? document : null) as Document\r\n\r\nconst templateContainer = doc && /*#__PURE__*/ doc.createElement('template')\r\n\r\nexport const nodeOps: Omit<RendererOptions<Node, Element>, 'patchProp'> = {\r\n  insert: (child, parent, anchor) => {\r\n    parent.insertBefore(child, anchor || null)\r\n  },\r\n\r\n  remove: child => {\r\n    const parent = child.parentNode\r\n    if (parent) {\r\n      parent.removeChild(child)\r\n    }\r\n  },\r\n\r\n  createElement: (tag, isSVG, is, props): Element => {\r\n    const el = isSVG\r\n      ? doc.createElementNS(svgNS, tag)\r\n      : doc.createElement(tag, is ? { is } : undefined)\r\n\r\n    if (tag === 'select' && props && props.multiple != null) {\r\n      ;(el as HTMLSelectElement).setAttribute('multiple', props.multiple)\r\n    }\r\n\r\n    return el\r\n  },\r\n\r\n  createText: text => doc.createTextNode(text),\r\n\r\n  createComment: text => doc.createComment(text),\r\n\r\n  setText: (node, text) => {\r\n    node.nodeValue = text\r\n  },\r\n\r\n  setElementText: (el, text) => {\r\n    el.textContent = text\r\n  },\r\n\r\n  parentNode: node => node.parentNode as Element | null,\r\n\r\n  nextSibling: node => node.nextSibling,\r\n\r\n  querySelector: selector => doc.querySelector(selector),\r\n\r\n  setScopeId(el, id) {\r\n    el.setAttribute(id, '')\r\n  },\r\n\r\n  cloneNode(el) {\r\n    const cloned = el.cloneNode(true)\r\n    // #3072\r\n    // - in `patchDOMProp`, we store the actual value in the `el._value` property.\r\n    // - normally, elements using `:value` bindings will not be hoisted, but if\r\n    //   the bound value is a constant, e.g. `:value=\"true\"` - they do get\r\n    //   hoisted.\r\n    // - in production, hoisted nodes are cloned when subsequent inserts, but\r\n    //   cloneNode() does not copy the custom property we attached.\r\n    // - This may need to account for other custom DOM properties we attach to\r\n    //   elements in addition to `_value` in the future.\r\n    if (`_value` in el) {\r\n      ;(cloned as any)._value = (el as any)._value\r\n    }\r\n    return cloned\r\n  },\r\n\r\n  // __UNSAFE__\r\n  // Reason: innerHTML.\r\n  // Static content here can only come from compiled templates.\r\n  // As long as the user only uses trusted templates, this is safe.\r\n  insertStaticContent(content, parent, anchor, isSVG, start, end) {\r\n    // <parent> before | first ... last | anchor </parent>\r\n    const before = anchor ? anchor.previousSibling : parent.lastChild\r\n    // #5308 can only take cached path if:\r\n    // - has a single root node\r\n    // - nextSibling info is still available\r\n    if (start && (start === end || start.nextSibling)) {\r\n      // cached\r\n      while (true) {\r\n        parent.insertBefore(start!.cloneNode(true), anchor)\r\n        if (start === end || !(start = start!.nextSibling)) break\r\n      }\r\n    } else {\r\n      // fresh insert\r\n      templateContainer.innerHTML = isSVG ? `<svg>${content}</svg>` : content\r\n      const template = templateContainer.content\r\n      if (isSVG) {\r\n        // remove outer svg wrapper\r\n        const wrapper = template.firstChild!\r\n        while (wrapper.firstChild) {\r\n          template.appendChild(wrapper.firstChild)\r\n        }\r\n        template.removeChild(wrapper)\r\n      }\r\n      parent.insertBefore(template, anchor)\r\n    }\r\n    return [\r\n      // first\r\n      before ? before.nextSibling! : parent.firstChild!,\r\n      // last\r\n      anchor ? anchor.previousSibling! : parent.lastChild!\r\n    ]\r\n  }\r\n}\r\n","import { isString, hyphenate, capitalize, isArray } from '@vue/shared'\r\nimport { camelize } from '@vue/runtime-core'\r\n\r\ntype Style = string | Record<string, string | string[]> | null\r\n\r\nexport function patchStyle(el: Element, prev: Style, next: Style) {\r\n  const style = (el as HTMLElement).style\r\n  const isCssString = isString(next)\r\n  if (next && !isCssString) {\r\n    for (const key in next) {\r\n      setStyle(style, key, next[key])\r\n    }\r\n    if (prev && !isString(prev)) {\r\n      for (const key in prev) {\r\n        if (next[key] == null) {\r\n          setStyle(style, key, '')\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    const currentDisplay = style.display\r\n    if (isCssString) {\r\n      if (prev !== next) {\r\n        style.cssText = next as string\r\n      }\r\n    } else if (prev) {\r\n      el.removeAttribute('style')\r\n    }\r\n    // indicates that the `display` of the element is controlled by `v-show`,\r\n    // so we always keep the current `display` value regardless of the `style`\r\n    // value, thus handing over control to `v-show`.\r\n    if ('_vod' in el) {\r\n      style.display = currentDisplay\r\n    }\r\n  }\r\n}\r\n\r\nconst importantRE = /\\s*!important$/\r\n\r\nfunction setStyle(\r\n  style: CSSStyleDeclaration,\r\n  name: string,\r\n  val: string | string[]\r\n) {\r\n  if (isArray(val)) {\r\n    val.forEach(v => setStyle(style, name, v))\r\n  } else {\r\n    if (val == null) val = ''\r\n    if (name.startsWith('--')) {\r\n      // custom property definition\r\n      style.setProperty(name, val)\r\n    } else {\r\n      const prefixed = autoPrefix(style, name)\r\n      if (importantRE.test(val)) {\r\n        // !important\r\n        style.setProperty(\r\n          hyphenate(prefixed),\r\n          val.replace(importantRE, ''),\r\n          'important'\r\n        )\r\n      } else {\r\n        style[prefixed as any] = val\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst prefixes = ['Webkit', 'Moz', 'ms']\r\nconst prefixCache: Record<string, string> = {}\r\n\r\nfunction autoPrefix(style: CSSStyleDeclaration, rawName: string): string {\r\n  const cached = prefixCache[rawName]\r\n  if (cached) {\r\n    return cached\r\n  }\r\n  let name = camelize(rawName)\r\n  if (name !== 'filter' && name in style) {\r\n    return (prefixCache[rawName] = name)\r\n  }\r\n  name = capitalize(name)\r\n  for (let i = 0; i < prefixes.length; i++) {\r\n    const prefixed = prefixes[i] + name\r\n    if (prefixed in style) {\r\n      return (prefixCache[rawName] = prefixed)\r\n    }\r\n  }\r\n  return rawName\r\n}\r\n","import {\r\n  includeBooleanAttr,\r\n  isSpecialBooleanAttr,\r\n  makeMap,\r\n  NOOP\r\n} from '@vue/shared'\r\nimport {\r\n  compatUtils,\r\n  ComponentInternalInstance,\r\n  DeprecationTypes\r\n} from '@vue/runtime-core'\r\n\r\nexport const xlinkNS = 'http://www.w3.org/1999/xlink'\r\n\r\nexport function patchAttr(\r\n  el: Element,\r\n  key: string,\r\n  value: any,\r\n  isSVG: boolean,\r\n  instance?: ComponentInternalInstance | null\r\n) {\r\n  if (isSVG && key.startsWith('xlink:')) {\r\n    if (value == null) {\r\n      el.removeAttributeNS(xlinkNS, key.slice(6, key.length))\r\n    } else {\r\n      el.setAttributeNS(xlinkNS, key, value)\r\n    }\r\n  } else {\r\n    if (__COMPAT__ && compatCoerceAttr(el, key, value, instance)) {\r\n      return\r\n    }\r\n\r\n    // note we are only checking boolean attributes that don't have a\r\n    // corresponding dom prop of the same name here.\r\n    const isBoolean = isSpecialBooleanAttr(key)\r\n    if (value == null || (isBoolean && !includeBooleanAttr(value))) {\r\n      el.removeAttribute(key)\r\n    } else {\r\n      el.setAttribute(key, isBoolean ? '' : value)\r\n    }\r\n  }\r\n}\r\n\r\n// 2.x compat\r\nconst isEnumeratedAttr = __COMPAT__\r\n  ? /*#__PURE__*/ makeMap('contenteditable,draggable,spellcheck')\r\n  : NOOP\r\n\r\nexport function compatCoerceAttr(\r\n  el: Element,\r\n  key: string,\r\n  value: unknown,\r\n  instance: ComponentInternalInstance | null = null\r\n): boolean {\r\n  if (isEnumeratedAttr(key)) {\r\n    const v2CocercedValue =\r\n      value === null\r\n        ? 'false'\r\n        : typeof value !== 'boolean' && value !== undefined\r\n        ? 'true'\r\n        : null\r\n    if (\r\n      v2CocercedValue &&\r\n      compatUtils.softAssertCompatEnabled(\r\n        DeprecationTypes.ATTR_ENUMERATED_COERCION,\r\n        instance,\r\n        key,\r\n        value,\r\n        v2CocercedValue\r\n      )\r\n    ) {\r\n      el.setAttribute(key, v2CocercedValue)\r\n      return true\r\n    }\r\n  } else if (\r\n    value === false &&\r\n    !isSpecialBooleanAttr(key) &&\r\n    compatUtils.softAssertCompatEnabled(\r\n      DeprecationTypes.ATTR_FALSE_VALUE,\r\n      instance,\r\n      key\r\n    )\r\n  ) {\r\n    el.removeAttribute(key)\r\n    return true\r\n  }\r\n  return false\r\n}\r\n","import { hyphenate, isArray } from '@vue/shared'\r\nimport {\r\n  ComponentInternalInstance,\r\n  callWithAsyncErrorHandling\r\n} from '@vue/runtime-core'\r\nimport { ErrorCodes } from 'packages/runtime-core/src/errorHandling'\r\n\r\ninterface Invoker extends EventListener {\r\n  value: EventValue\r\n  attached: number\r\n}\r\n\r\ntype EventValue = Function | Function[]\r\n\r\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nconst [_getNow, skipTimestampCheck] = /*#__PURE__*/ (() => {\r\n  let _getNow = Date.now\r\n  let skipTimestampCheck = false\r\n  if (typeof window !== 'undefined') {\r\n    // Determine what event timestamp the browser is using. Annoyingly, the\r\n    // timestamp can either be hi-res (relative to page load) or low-res\r\n    // (relative to UNIX epoch), so in order to compare time we have to use the\r\n    // same timestamp type when saving the flush timestamp.\r\n    if (Date.now() > document.createEvent('Event').timeStamp) {\r\n      // if the low-res timestamp which is bigger than the event timestamp\r\n      // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n      // and we need to use the hi-res version for event listeners as well.\r\n      _getNow = performance.now.bind(performance)\r\n    }\r\n    // #3485: Firefox <= 53 has incorrect Event.timeStamp implementation\r\n    // and does not fire microtasks in between event propagation, so safe to exclude.\r\n    const ffMatch = navigator.userAgent.match(/firefox\\/(\\d+)/i)\r\n    skipTimestampCheck = !!(ffMatch && Number(ffMatch[1]) <= 53)\r\n  }\r\n  return [_getNow, skipTimestampCheck]\r\n})()\r\n\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow: number = 0\r\nconst p = /*#__PURE__*/ Promise.resolve()\r\nconst reset = () => {\r\n  cachedNow = 0\r\n}\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()))\r\n\r\nexport function addEventListener(\r\n  el: Element,\r\n  event: string,\r\n  handler: EventListener,\r\n  options?: EventListenerOptions\r\n) {\r\n  el.addEventListener(event, handler, options)\r\n}\r\n\r\nexport function removeEventListener(\r\n  el: Element,\r\n  event: string,\r\n  handler: EventListener,\r\n  options?: EventListenerOptions\r\n) {\r\n  el.removeEventListener(event, handler, options)\r\n}\r\n\r\nexport function patchEvent(\r\n  el: Element & { _vei?: Record<string, Invoker | undefined> },\r\n  rawName: string,\r\n  prevValue: EventValue | null,\r\n  nextValue: EventValue | null,\r\n  instance: ComponentInternalInstance | null = null\r\n) {\r\n  // vei = vue event invokers\r\n  const invokers = el._vei || (el._vei = {})\r\n  const existingInvoker = invokers[rawName]\r\n  if (nextValue && existingInvoker) {\r\n    // patch\r\n    existingInvoker.value = nextValue\r\n  } else {\r\n    const [name, options] = parseName(rawName)\r\n    if (nextValue) {\r\n      // add\r\n      const invoker = (invokers[rawName] = createInvoker(nextValue, instance))\r\n      addEventListener(el, name, invoker, options)\r\n    } else if (existingInvoker) {\r\n      // remove\r\n      removeEventListener(el, name, existingInvoker, options)\r\n      invokers[rawName] = undefined\r\n    }\r\n  }\r\n}\r\n\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/\r\n\r\nfunction parseName(name: string): [string, EventListenerOptions | undefined] {\r\n  let options: EventListenerOptions | undefined\r\n  if (optionsModifierRE.test(name)) {\r\n    options = {}\r\n    let m\r\n    while ((m = name.match(optionsModifierRE))) {\r\n      name = name.slice(0, name.length - m[0].length)\r\n      ;(options as any)[m[0].toLowerCase()] = true\r\n    }\r\n  }\r\n  return [hyphenate(name.slice(2)), options]\r\n}\r\n\r\nfunction createInvoker(\r\n  initialValue: EventValue,\r\n  instance: ComponentInternalInstance | null\r\n) {\r\n  const invoker: Invoker = (e: Event) => {\r\n    // async edge case #6566: inner click event triggers patch, event handler\r\n    // attached to outer element during patch, and triggered again. This\r\n    // happens because browsers fire microtask ticks between event propagation.\r\n    // the solution is simple: we save the timestamp when a handler is attached,\r\n    // and the handler would only fire if the event passed to it was fired\r\n    // AFTER it was attached.\r\n    const timeStamp = e.timeStamp || _getNow()\r\n\r\n    if (skipTimestampCheck || timeStamp >= invoker.attached - 1) {\r\n      callWithAsyncErrorHandling(\r\n        patchStopImmediatePropagation(e, invoker.value),\r\n        instance,\r\n        ErrorCodes.NATIVE_EVENT_HANDLER,\r\n        [e]\r\n      )\r\n    }\r\n  }\r\n  invoker.value = initialValue\r\n  invoker.attached = getNow()\r\n  return invoker\r\n}\r\n\r\nfunction patchStopImmediatePropagation(\r\n  e: Event,\r\n  value: EventValue\r\n): EventValue {\r\n  if (isArray(value)) {\r\n    const originalStop = e.stopImmediatePropagation\r\n    e.stopImmediatePropagation = () => {\r\n      originalStop.call(e)\r\n      ;(e as any)._stopped = true\r\n    }\r\n    return value.map(fn => (e: Event) => !(e as any)._stopped && fn && fn(e))\r\n  } else {\r\n    return value\r\n  }\r\n}\r\n","import { patchClass } from './modules/class'\r\nimport { patchStyle } from './modules/style'\r\nimport { patchAttr } from './modules/attrs'\r\nimport { patchDOMProp } from './modules/props'\r\nimport { patchEvent } from './modules/events'\r\nimport { isOn, isString, isFunction, isModelListener } from '@vue/shared'\r\nimport { RendererOptions } from '@vue/runtime-core'\r\n\r\nconst nativeOnRE = /^on[a-z]/\r\n\r\ntype DOMRendererOptions = RendererOptions<Node, Element>\r\n\r\nexport const patchProp: DOMRendererOptions['patchProp'] = (\r\n  el,\r\n  key,\r\n  prevValue,\r\n  nextValue,\r\n  isSVG = false,\r\n  prevChildren,\r\n  parentComponent,\r\n  parentSuspense,\r\n  unmountChildren\r\n) => {\r\n  if (key === 'class') {\r\n    patchClass(el, nextValue, isSVG)\r\n  } else if (key === 'style') {\r\n    patchStyle(el, prevValue, nextValue)\r\n  } else if (isOn(key)) {\r\n    // ignore v-model listeners\r\n    if (!isModelListener(key)) {\r\n      patchEvent(el, key, prevValue, nextValue, parentComponent)\r\n    }\r\n  } else if (\r\n    key[0] === '.'\r\n      ? ((key = key.slice(1)), true)\r\n      : key[0] === '^'\r\n      ? ((key = key.slice(1)), false)\r\n      : shouldSetAsProp(el, key, nextValue, isSVG)\r\n  ) {\r\n    patchDOMProp(\r\n      el,\r\n      key,\r\n      nextValue,\r\n      prevChildren,\r\n      parentComponent,\r\n      parentSuspense,\r\n      unmountChildren\r\n    )\r\n  } else {\r\n    // special case for <input v-model type=\"checkbox\"> with\r\n    // :true-value & :false-value\r\n    // store value as dom properties since non-string values will be\r\n    // stringified.\r\n    if (key === 'true-value') {\r\n      ;(el as any)._trueValue = nextValue\r\n    } else if (key === 'false-value') {\r\n      ;(el as any)._falseValue = nextValue\r\n    }\r\n    patchAttr(el, key, nextValue, isSVG, parentComponent)\r\n  }\r\n}\r\n\r\nfunction shouldSetAsProp(\r\n  el: Element,\r\n  key: string,\r\n  value: unknown,\r\n  isSVG: boolean\r\n) {\r\n  if (isSVG) {\r\n    // most keys must be set as attribute on svg elements to work\r\n    // ...except innerHTML & textContent\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n      return true\r\n    }\r\n    // or native onclick with function values\r\n    if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  // these are enumerated attrs, however their corresponding DOM properties\r\n  // are actually booleans - this leads to setting it with a string \"false\"\r\n  // value leading it to be coerced to `true`, so we need to always treat\r\n  // them as attributes.\r\n  // Note that `contentEditable` doesn't have this problem: its DOM\r\n  // property is also enumerated string values.\r\n  if (key === 'spellcheck' || key === 'draggable' || key === 'translate') {\r\n    return false\r\n  }\r\n\r\n  // #1787, #2840 form property on form elements is readonly and must be set as\r\n  // attribute.\r\n  if (key === 'form') {\r\n    return false\r\n  }\r\n\r\n  // #1526 <input list> must be set as attribute\r\n  if (key === 'list' && el.tagName === 'INPUT') {\r\n    return false\r\n  }\r\n\r\n  // #2766 <textarea type> must be set as attribute\r\n  if (key === 'type' && el.tagName === 'TEXTAREA') {\r\n    return false\r\n  }\r\n\r\n  // native onclick with string value, must be set as attribute\r\n  if (nativeOnRE.test(key) && isString(value)) {\r\n    return false\r\n  }\r\n\r\n  return key in el\r\n}\r\n","import {\r\n  ComponentOptionsMixin,\r\n  ComponentOptionsWithArrayProps,\r\n  ComponentOptionsWithObjectProps,\r\n  ComponentOptionsWithoutProps,\r\n  ComponentPropsOptions,\r\n  ComponentPublicInstance,\r\n  ComputedOptions,\r\n  EmitsOptions,\r\n  MethodOptions,\r\n  RenderFunction,\r\n  SetupContext,\r\n  ComponentInternalInstance,\r\n  VNode,\r\n  RootHydrateFunction,\r\n  ExtractPropTypes,\r\n  createVNode,\r\n  defineComponent,\r\n  nextTick,\r\n  warn,\r\n  ConcreteComponent,\r\n  ComponentOptions\r\n} from '@vue/runtime-core'\r\nimport { camelize, extend, hyphenate, isArray, toNumber } from '@vue/shared'\r\nimport { hydrate, render } from '.'\r\n\r\nexport type VueElementConstructor<P = {}> = {\r\n  new (initialProps?: Record<string, any>): VueElement & P\r\n}\r\n\r\n// defineCustomElement provides the same type inference as defineComponent\r\n// so most of the following overloads should be kept in sync w/ defineComponent.\r\n\r\n// overload 1: direct setup function\r\nexport function defineCustomElement<Props, RawBindings = object>(\r\n  setup: (\r\n    props: Readonly<Props>,\r\n    ctx: SetupContext\r\n  ) => RawBindings | RenderFunction\r\n): VueElementConstructor<Props>\r\n\r\n// overload 2: object format with no props\r\nexport function defineCustomElement<\r\n  Props = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithoutProps<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  > & { styles?: string[] }\r\n): VueElementConstructor<Props>\r\n\r\n// overload 3: object format with array props declaration\r\nexport function defineCustomElement<\r\n  PropNames extends string,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = Record<string, any>,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithArrayProps<\r\n    PropNames,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  > & { styles?: string[] }\r\n): VueElementConstructor<{ [K in PropNames]: any }>\r\n\r\n// overload 4: object format with object props declaration\r\nexport function defineCustomElement<\r\n  PropsOptions extends Readonly<ComponentPropsOptions>,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = Record<string, any>,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithObjectProps<\r\n    PropsOptions,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  > & { styles?: string[] }\r\n): VueElementConstructor<ExtractPropTypes<PropsOptions>>\r\n\r\n// overload 5: defining a custom element from the returned value of\r\n// `defineComponent`\r\nexport function defineCustomElement(options: {\r\n  new (...args: any[]): ComponentPublicInstance\r\n}): VueElementConstructor\r\n\r\nexport function defineCustomElement(\r\n  options: any,\r\n  hydrate?: RootHydrateFunction\r\n): VueElementConstructor {\r\n  const Comp = defineComponent(options as any)\r\n  class VueCustomElement extends VueElement {\r\n    static def = Comp\r\n    constructor(initialProps?: Record<string, any>) {\r\n      super(Comp, initialProps, hydrate)\r\n    }\r\n  }\r\n\r\n  return VueCustomElement\r\n}\r\n\r\nexport const defineSSRCustomElement = ((options: any) => {\r\n  // @ts-ignore\r\n  return defineCustomElement(options, hydrate)\r\n}) as typeof defineCustomElement\r\n\r\nconst BaseClass = (\r\n  typeof HTMLElement !== 'undefined' ? HTMLElement : class {}\r\n) as typeof HTMLElement\r\n\r\ntype InnerComponentDef = ConcreteComponent & { styles?: string[] }\r\n\r\nexport class VueElement extends BaseClass {\r\n  /**\r\n   * @internal\r\n   */\r\n  _instance: ComponentInternalInstance | null = null\r\n\r\n  private _connected = false\r\n  private _resolved = false\r\n  private _numberProps: Record<string, true> | null = null\r\n  private _styles?: HTMLStyleElement[]\r\n\r\n  constructor(\r\n    private _def: InnerComponentDef,\r\n    private _props: Record<string, any> = {},\r\n    hydrate?: RootHydrateFunction\r\n  ) {\r\n    super()\r\n    if (this.shadowRoot && hydrate) {\r\n      hydrate(this._createVNode(), this.shadowRoot)\r\n    } else {\r\n      if (__DEV__ && this.shadowRoot) {\r\n        warn(\r\n          `Custom element has pre-rendered declarative shadow root but is not ` +\r\n            `defined as hydratable. Use \\`defineSSRCustomElement\\`.`\r\n        )\r\n      }\r\n      this.attachShadow({ mode: 'open' })\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    this._connected = true\r\n    if (!this._instance) {\r\n      this._resolveDef()\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this._connected = false\r\n    nextTick(() => {\r\n      if (!this._connected) {\r\n        render(null, this.shadowRoot!)\r\n        this._instance = null\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * resolve inner component definition (handle possible async component)\r\n   */\r\n  private _resolveDef() {\r\n    if (this._resolved) {\r\n      return\r\n    }\r\n    this._resolved = true\r\n\r\n    // set initial attrs\r\n    for (let i = 0; i < this.attributes.length; i++) {\r\n      this._setAttr(this.attributes[i].name)\r\n    }\r\n\r\n    // watch future attr changes\r\n    new MutationObserver(mutations => {\r\n      for (const m of mutations) {\r\n        this._setAttr(m.attributeName!)\r\n      }\r\n    }).observe(this, { attributes: true })\r\n\r\n    const resolve = (def: InnerComponentDef) => {\r\n      const { props, styles } = def\r\n      const hasOptions = !isArray(props)\r\n      const rawKeys = props ? (hasOptions ? Object.keys(props) : props) : []\r\n\r\n      // cast Number-type props set before resolve\r\n      let numberProps\r\n      if (hasOptions) {\r\n        for (const key in this._props) {\r\n          const opt = props[key]\r\n          if (opt === Number || (opt && opt.type === Number)) {\r\n            this._props[key] = toNumber(this._props[key])\r\n            ;(numberProps || (numberProps = Object.create(null)))[key] = true\r\n          }\r\n        }\r\n      }\r\n      this._numberProps = numberProps\r\n\r\n      // check if there are props set pre-upgrade or connect\r\n      for (const key of Object.keys(this)) {\r\n        if (key[0] !== '_') {\r\n          this._setProp(key, this[key as keyof this], true, false)\r\n        }\r\n      }\r\n\r\n      // defining getter/setters on prototype\r\n      for (const key of rawKeys.map(camelize)) {\r\n        Object.defineProperty(this, key, {\r\n          get() {\r\n            return this._getProp(key)\r\n          },\r\n          set(val) {\r\n            this._setProp(key, val)\r\n          }\r\n        })\r\n      }\r\n\r\n      // apply CSS\r\n      this._applyStyles(styles)\r\n\r\n      // initial render\r\n      this._update()\r\n    }\r\n\r\n    const asyncDef = (this._def as ComponentOptions).__asyncLoader\r\n    if (asyncDef) {\r\n      asyncDef().then(resolve)\r\n    } else {\r\n      resolve(this._def)\r\n    }\r\n  }\r\n\r\n  protected _setAttr(key: string) {\r\n    let value = this.getAttribute(key)\r\n    if (this._numberProps && this._numberProps[key]) {\r\n      value = toNumber(value)\r\n    }\r\n    this._setProp(camelize(key), value, false)\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  protected _getProp(key: string) {\r\n    return this._props[key]\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  protected _setProp(\r\n    key: string,\r\n    val: any,\r\n    shouldReflect = true,\r\n    shouldUpdate = true\r\n  ) {\r\n    if (val !== this._props[key]) {\r\n      this._props[key] = val\r\n      if (shouldUpdate && this._instance) {\r\n        this._update()\r\n      }\r\n      // reflect\r\n      if (shouldReflect) {\r\n        if (val === true) {\r\n          this.setAttribute(hyphenate(key), '')\r\n        } else if (typeof val === 'string' || typeof val === 'number') {\r\n          this.setAttribute(hyphenate(key), val + '')\r\n        } else if (!val) {\r\n          this.removeAttribute(hyphenate(key))\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private _update() {\r\n    render(this._createVNode(), this.shadowRoot!)\r\n  }\r\n\r\n  private _createVNode(): VNode<any, any> {\r\n    const vnode = createVNode(this._def, extend({}, this._props))\r\n    if (!this._instance) {\r\n      vnode.ce = instance => {\r\n        this._instance = instance\r\n        instance.isCE = true\r\n        // HMR\r\n        if (__DEV__) {\r\n          instance.ceReload = newStyles => {\r\n            // always reset styles\r\n            if (this._styles) {\r\n              this._styles.forEach(s => this.shadowRoot!.removeChild(s))\r\n              this._styles.length = 0\r\n            }\r\n            this._applyStyles(newStyles)\r\n            // if this is an async component, ceReload is called from the inner\r\n            // component so no need to reload the async wrapper\r\n            if (!(this._def as ComponentOptions).__asyncLoader) {\r\n              // reload\r\n              this._instance = null\r\n              this._update()\r\n            }\r\n          }\r\n        }\r\n\r\n        // intercept emit\r\n        instance.emit = (event: string, ...args: any[]) => {\r\n          this.dispatchEvent(\r\n            new CustomEvent(event, {\r\n              detail: args\r\n            })\r\n          )\r\n        }\r\n\r\n        // locate nearest Vue custom element parent for provide/inject\r\n        let parent: Node | null = this\r\n        while (\r\n          (parent =\r\n            parent && (parent.parentNode || (parent as ShadowRoot).host))\r\n        ) {\r\n          if (parent instanceof VueElement) {\r\n            instance.parent = parent._instance\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return vnode\r\n  }\r\n\r\n  private _applyStyles(styles: string[] | undefined) {\r\n    if (styles) {\r\n      styles.forEach(css => {\r\n        const s = document.createElement('style')\r\n        s.textContent = css\r\n        this.shadowRoot!.appendChild(s)\r\n        // record for HMR\r\n        if (__DEV__) {\r\n          ;(this._styles || (this._styles = [])).push(s)\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n","import { warn, getCurrentInstance } from '@vue/runtime-core'\r\nimport { EMPTY_OBJ } from '@vue/shared'\r\n\r\nexport function useCssModule(name = '$style'): Record<string, string> {\r\n  /* istanbul ignore else */\r\n  if (!__GLOBAL__) {\r\n    const instance = getCurrentInstance()!\r\n    if (!instance) {\r\n      __DEV__ && warn(`useCssModule must be called inside setup()`)\r\n      return EMPTY_OBJ\r\n    }\r\n    const modules = instance.type.__cssModules\r\n    if (!modules) {\r\n      __DEV__ && warn(`Current instance does not have CSS modules injected.`)\r\n      return EMPTY_OBJ\r\n    }\r\n    const mod = modules[name]\r\n    if (!mod) {\r\n      __DEV__ &&\r\n        warn(`Current instance does not have CSS module named \"${name}\".`)\r\n      return EMPTY_OBJ\r\n    }\r\n    return mod as Record<string, string>\r\n  } else {\r\n    if (__DEV__) {\r\n      warn(`useCssModule() is not supported in the global build.`)\r\n    }\r\n    return EMPTY_OBJ\r\n  }\r\n}\r\n","import {\r\n  getCurrentInstance,\r\n  warn,\r\n  VNode,\r\n  Fragment,\r\n  Static,\r\n  watchPostEffect,\r\n  onMounted,\r\n  onUnmounted\r\n} from '@vue/runtime-core'\r\nimport { ShapeFlags } from '@vue/shared'\r\n\r\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nexport function useCssVars(getter: (ctx: any) => Record<string, string>) {\r\n  if (!__BROWSER__ && !__TEST__) return\r\n\r\n  const instance = getCurrentInstance()\r\n  /* istanbul ignore next */\r\n  if (!instance) {\r\n    __DEV__ &&\r\n      warn(`useCssVars is called without current active component instance.`)\r\n    return\r\n  }\r\n\r\n  const setVars = () =>\r\n    setVarsOnVNode(instance.subTree, getter(instance.proxy!))\r\n  watchPostEffect(setVars)\r\n  onMounted(() => {\r\n    const ob = new MutationObserver(setVars)\r\n    ob.observe(instance.subTree.el!.parentNode, { childList: true })\r\n    onUnmounted(() => ob.disconnect())\r\n  })\r\n}\r\n\r\nfunction setVarsOnVNode(vnode: VNode, vars: Record<string, string>) {\r\n  if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n    const suspense = vnode.suspense!\r\n    vnode = suspense.activeBranch!\r\n    if (suspense.pendingBranch && !suspense.isHydrating) {\r\n      suspense.effects.push(() => {\r\n        setVarsOnVNode(suspense.activeBranch!, vars)\r\n      })\r\n    }\r\n  }\r\n\r\n  // drill down HOCs until it's a non-component vnode\r\n  while (vnode.component) {\r\n    vnode = vnode.component.subTree\r\n  }\r\n\r\n  if (vnode.shapeFlag & ShapeFlags.ELEMENT && vnode.el) {\r\n    setVarsOnNode(vnode.el as Node, vars)\r\n  } else if (vnode.type === Fragment) {\r\n    ;(vnode.children as VNode[]).forEach(c => setVarsOnVNode(c, vars))\r\n  } else if (vnode.type === Static) {\r\n    let { el, anchor } = vnode\r\n    while (el) {\r\n      setVarsOnNode(el as Node, vars)\r\n      if (el === anchor) break\r\n      el = el.nextSibling\r\n    }\r\n  }\r\n}\r\n\r\nfunction setVarsOnNode(el: Node, vars: Record<string, string>) {\r\n  if (el.nodeType === 1) {\r\n    const style = (el as HTMLElement).style\r\n    for (const key in vars) {\r\n      style.setProperty(`--${key}`, vars[key])\r\n    }\r\n  }\r\n}\r\n","import {\r\n  BaseTransition,\r\n  BaseTransitionProps,\r\n  h,\r\n  warn,\r\n  FunctionalComponent,\r\n  compatUtils,\r\n  DeprecationTypes\r\n} from '@vue/runtime-core'\r\nimport { isObject, toNumber, extend, isArray } from '@vue/shared'\r\n\r\nconst TRANSITION = 'transition'\r\nconst ANIMATION = 'animation'\r\n\r\nexport interface TransitionProps extends BaseTransitionProps<Element> {\r\n  name?: string\r\n  type?: typeof TRANSITION | typeof ANIMATION\r\n  css?: boolean\r\n  duration?: number | { enter: number; leave: number }\r\n  // custom transition classes\r\n  enterFromClass?: string\r\n  enterActiveClass?: string\r\n  enterToClass?: string\r\n  appearFromClass?: string\r\n  appearActiveClass?: string\r\n  appearToClass?: string\r\n  leaveFromClass?: string\r\n  leaveActiveClass?: string\r\n  leaveToClass?: string\r\n}\r\n\r\nexport interface ElementWithTransition extends HTMLElement {\r\n  // _vtc = Vue Transition Classes.\r\n  // Store the temporarily-added transition classes on the element\r\n  // so that we can avoid overwriting them if the element's class is patched\r\n  // during the transition.\r\n  _vtc?: Set<string>\r\n}\r\n\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nexport const Transition: FunctionalComponent<TransitionProps> = (\r\n  props,\r\n  { slots }\r\n) => h(BaseTransition, resolveTransitionProps(props), slots)\r\n\r\nTransition.displayName = 'Transition'\r\n\r\nif (__COMPAT__) {\r\n  Transition.__isBuiltIn = true\r\n}\r\n\r\nconst DOMTransitionPropsValidators = {\r\n  name: String,\r\n  type: String,\r\n  css: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  duration: [String, Number, Object],\r\n  enterFromClass: String,\r\n  enterActiveClass: String,\r\n  enterToClass: String,\r\n  appearFromClass: String,\r\n  appearActiveClass: String,\r\n  appearToClass: String,\r\n  leaveFromClass: String,\r\n  leaveActiveClass: String,\r\n  leaveToClass: String\r\n}\r\n\r\nexport const TransitionPropsValidators = (Transition.props =\r\n  /*#__PURE__*/ extend(\r\n    {},\r\n    (BaseTransition as any).props,\r\n    DOMTransitionPropsValidators\r\n  ))\r\n\r\n/**\r\n * #3227 Incoming hooks may be merged into arrays when wrapping Transition\r\n * with custom HOCs.\r\n */\r\nconst callHook = (\r\n  hook: Function | Function[] | undefined,\r\n  args: any[] = []\r\n) => {\r\n  if (isArray(hook)) {\r\n    hook.forEach(h => h(...args))\r\n  } else if (hook) {\r\n    hook(...args)\r\n  }\r\n}\r\n\r\n/**\r\n * Check if a hook expects a callback (2nd arg), which means the user\r\n * intends to explicitly control the end of the transition.\r\n */\r\nconst hasExplicitCallback = (\r\n  hook: Function | Function[] | undefined\r\n): boolean => {\r\n  return hook\r\n    ? isArray(hook)\r\n      ? hook.some(h => h.length > 1)\r\n      : hook.length > 1\r\n    : false\r\n}\r\n\r\nexport function resolveTransitionProps(\r\n  rawProps: TransitionProps\r\n): BaseTransitionProps<Element> {\r\n  const baseProps: BaseTransitionProps<Element> = {}\r\n  for (const key in rawProps) {\r\n    if (!(key in DOMTransitionPropsValidators)) {\r\n      ;(baseProps as any)[key] = (rawProps as any)[key]\r\n    }\r\n  }\r\n\r\n  if (rawProps.css === false) {\r\n    return baseProps\r\n  }\r\n\r\n  const {\r\n    name = 'v',\r\n    type,\r\n    duration,\r\n    enterFromClass = `${name}-enter-from`,\r\n    enterActiveClass = `${name}-enter-active`,\r\n    enterToClass = `${name}-enter-to`,\r\n    appearFromClass = enterFromClass,\r\n    appearActiveClass = enterActiveClass,\r\n    appearToClass = enterToClass,\r\n    leaveFromClass = `${name}-leave-from`,\r\n    leaveActiveClass = `${name}-leave-active`,\r\n    leaveToClass = `${name}-leave-to`\r\n  } = rawProps\r\n\r\n  // legacy transition class compat\r\n  const legacyClassEnabled =\r\n    __COMPAT__ &&\r\n    compatUtils.isCompatEnabled(DeprecationTypes.TRANSITION_CLASSES, null)\r\n  let legacyEnterFromClass: string\r\n  let legacyAppearFromClass: string\r\n  let legacyLeaveFromClass: string\r\n  if (__COMPAT__ && legacyClassEnabled) {\r\n    const toLegacyClass = (cls: string) => cls.replace(/-from$/, '')\r\n    if (!rawProps.enterFromClass) {\r\n      legacyEnterFromClass = toLegacyClass(enterFromClass)\r\n    }\r\n    if (!rawProps.appearFromClass) {\r\n      legacyAppearFromClass = toLegacyClass(appearFromClass)\r\n    }\r\n    if (!rawProps.leaveFromClass) {\r\n      legacyLeaveFromClass = toLegacyClass(leaveFromClass)\r\n    }\r\n  }\r\n\r\n  const durations = normalizeDuration(duration)\r\n  const enterDuration = durations && durations[0]\r\n  const leaveDuration = durations && durations[1]\r\n  const {\r\n    onBeforeEnter,\r\n    onEnter,\r\n    onEnterCancelled,\r\n    onLeave,\r\n    onLeaveCancelled,\r\n    onBeforeAppear = onBeforeEnter,\r\n    onAppear = onEnter,\r\n    onAppearCancelled = onEnterCancelled\r\n  } = baseProps\r\n\r\n  const finishEnter = (el: Element, isAppear: boolean, done?: () => void) => {\r\n    removeTransitionClass(el, isAppear ? appearToClass : enterToClass)\r\n    removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass)\r\n    done && done()\r\n  }\r\n\r\n  const finishLeave = (\r\n    el: Element & { _isLeaving?: boolean },\r\n    done?: () => void\r\n  ) => {\r\n    el._isLeaving = false\r\n    removeTransitionClass(el, leaveFromClass)\r\n    removeTransitionClass(el, leaveToClass)\r\n    removeTransitionClass(el, leaveActiveClass)\r\n    done && done()\r\n  }\r\n\r\n  const makeEnterHook = (isAppear: boolean) => {\r\n    return (el: Element, done: () => void) => {\r\n      const hook = isAppear ? onAppear : onEnter\r\n      const resolve = () => finishEnter(el, isAppear, done)\r\n      callHook(hook, [el, resolve])\r\n      nextFrame(() => {\r\n        removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass)\r\n        if (__COMPAT__ && legacyClassEnabled) {\r\n          removeTransitionClass(\r\n            el,\r\n            isAppear ? legacyAppearFromClass : legacyEnterFromClass\r\n          )\r\n        }\r\n        addTransitionClass(el, isAppear ? appearToClass : enterToClass)\r\n        if (!hasExplicitCallback(hook)) {\r\n          whenTransitionEnds(el, type, enterDuration, resolve)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return extend(baseProps, {\r\n    onBeforeEnter(el) {\r\n      callHook(onBeforeEnter, [el])\r\n      addTransitionClass(el, enterFromClass)\r\n      if (__COMPAT__ && legacyClassEnabled) {\r\n        addTransitionClass(el, legacyEnterFromClass)\r\n      }\r\n      addTransitionClass(el, enterActiveClass)\r\n    },\r\n    onBeforeAppear(el) {\r\n      callHook(onBeforeAppear, [el])\r\n      addTransitionClass(el, appearFromClass)\r\n      if (__COMPAT__ && legacyClassEnabled) {\r\n        addTransitionClass(el, legacyAppearFromClass)\r\n      }\r\n      addTransitionClass(el, appearActiveClass)\r\n    },\r\n    onEnter: makeEnterHook(false),\r\n    onAppear: makeEnterHook(true),\r\n    onLeave(el: Element & { _isLeaving?: boolean }, done) {\r\n      el._isLeaving = true\r\n      const resolve = () => finishLeave(el, done)\r\n      addTransitionClass(el, leaveFromClass)\r\n      if (__COMPAT__ && legacyClassEnabled) {\r\n        addTransitionClass(el, legacyLeaveFromClass)\r\n      }\r\n      // force reflow so *-leave-from classes immediately take effect (#2593)\r\n      forceReflow()\r\n      addTransitionClass(el, leaveActiveClass)\r\n      nextFrame(() => {\r\n        if (!el._isLeaving) {\r\n          // cancelled\r\n          return\r\n        }\r\n        removeTransitionClass(el, leaveFromClass)\r\n        if (__COMPAT__ && legacyClassEnabled) {\r\n          removeTransitionClass(el, legacyLeaveFromClass)\r\n        }\r\n        addTransitionClass(el, leaveToClass)\r\n        if (!hasExplicitCallback(onLeave)) {\r\n          whenTransitionEnds(el, type, leaveDuration, resolve)\r\n        }\r\n      })\r\n      callHook(onLeave, [el, resolve])\r\n    },\r\n    onEnterCancelled(el) {\r\n      finishEnter(el, false)\r\n      callHook(onEnterCancelled, [el])\r\n    },\r\n    onAppearCancelled(el) {\r\n      finishEnter(el, true)\r\n      callHook(onAppearCancelled, [el])\r\n    },\r\n    onLeaveCancelled(el) {\r\n      finishLeave(el)\r\n      callHook(onLeaveCancelled, [el])\r\n    }\r\n  } as BaseTransitionProps<Element>)\r\n}\r\n\r\nfunction normalizeDuration(\r\n  duration: TransitionProps['duration']\r\n): [number, number] | null {\r\n  if (duration == null) {\r\n    return null\r\n  } else if (isObject(duration)) {\r\n    return [NumberOf(duration.enter), NumberOf(duration.leave)]\r\n  } else {\r\n    const n = NumberOf(duration)\r\n    return [n, n]\r\n  }\r\n}\r\n\r\nfunction NumberOf(val: unknown): number {\r\n  const res = toNumber(val)\r\n  if (__DEV__) validateDuration(res)\r\n  return res\r\n}\r\n\r\nfunction validateDuration(val: unknown) {\r\n  if (typeof val !== 'number') {\r\n    warn(\r\n      `<transition> explicit duration is not a valid number - ` +\r\n        `got ${JSON.stringify(val)}.`\r\n    )\r\n  } else if (isNaN(val)) {\r\n    warn(\r\n      `<transition> explicit duration is NaN - ` +\r\n        'the duration expression might be incorrect.'\r\n    )\r\n  }\r\n}\r\n\r\nexport function addTransitionClass(el: Element, cls: string) {\r\n  cls.split(/\\s+/).forEach(c => c && el.classList.add(c))\r\n  ;(\r\n    (el as ElementWithTransition)._vtc ||\r\n    ((el as ElementWithTransition)._vtc = new Set())\r\n  ).add(cls)\r\n}\r\n\r\nexport function removeTransitionClass(el: Element, cls: string) {\r\n  cls.split(/\\s+/).forEach(c => c && el.classList.remove(c))\r\n  const { _vtc } = el as ElementWithTransition\r\n  if (_vtc) {\r\n    _vtc.delete(cls)\r\n    if (!_vtc!.size) {\r\n      ;(el as ElementWithTransition)._vtc = undefined\r\n    }\r\n  }\r\n}\r\n\r\nfunction nextFrame(cb: () => void) {\r\n  requestAnimationFrame(() => {\r\n    requestAnimationFrame(cb)\r\n  })\r\n}\r\n\r\nlet endId = 0\r\n\r\nfunction whenTransitionEnds(\r\n  el: Element & { _endId?: number },\r\n  expectedType: TransitionProps['type'] | undefined,\r\n  explicitTimeout: number | null,\r\n  resolve: () => void\r\n) {\r\n  const id = (el._endId = ++endId)\r\n  const resolveIfNotStale = () => {\r\n    if (id === el._endId) {\r\n      resolve()\r\n    }\r\n  }\r\n\r\n  if (explicitTimeout) {\r\n    return setTimeout(resolveIfNotStale, explicitTimeout)\r\n  }\r\n\r\n  const { type, timeout, propCount } = getTransitionInfo(el, expectedType)\r\n  if (!type) {\r\n    return resolve()\r\n  }\r\n\r\n  const endEvent = type + 'end'\r\n  let ended = 0\r\n  const end = () => {\r\n    el.removeEventListener(endEvent, onEnd)\r\n    resolveIfNotStale()\r\n  }\r\n  const onEnd = (e: Event) => {\r\n    if (e.target === el && ++ended >= propCount) {\r\n      end()\r\n    }\r\n  }\r\n  setTimeout(() => {\r\n    if (ended < propCount) {\r\n      end()\r\n    }\r\n  }, timeout + 1)\r\n  el.addEventListener(endEvent, onEnd)\r\n}\r\n\r\ninterface CSSTransitionInfo {\r\n  type: typeof TRANSITION | typeof ANIMATION | null\r\n  propCount: number\r\n  timeout: number\r\n  hasTransform: boolean\r\n}\r\n\r\nexport function getTransitionInfo(\r\n  el: Element,\r\n  expectedType?: TransitionProps['type']\r\n): CSSTransitionInfo {\r\n  const styles: any = window.getComputedStyle(el)\r\n  // JSDOM may return undefined for transition properties\r\n  const getStyleProperties = (key: string) => (styles[key] || '').split(', ')\r\n  const transitionDelays = getStyleProperties(TRANSITION + 'Delay')\r\n  const transitionDurations = getStyleProperties(TRANSITION + 'Duration')\r\n  const transitionTimeout = getTimeout(transitionDelays, transitionDurations)\r\n  const animationDelays = getStyleProperties(ANIMATION + 'Delay')\r\n  const animationDurations = getStyleProperties(ANIMATION + 'Duration')\r\n  const animationTimeout = getTimeout(animationDelays, animationDurations)\r\n\r\n  let type: CSSTransitionInfo['type'] = null\r\n  let timeout = 0\r\n  let propCount = 0\r\n  /* istanbul ignore if */\r\n  if (expectedType === TRANSITION) {\r\n    if (transitionTimeout > 0) {\r\n      type = TRANSITION\r\n      timeout = transitionTimeout\r\n      propCount = transitionDurations.length\r\n    }\r\n  } else if (expectedType === ANIMATION) {\r\n    if (animationTimeout > 0) {\r\n      type = ANIMATION\r\n      timeout = animationTimeout\r\n      propCount = animationDurations.length\r\n    }\r\n  } else {\r\n    timeout = Math.max(transitionTimeout, animationTimeout)\r\n    type =\r\n      timeout > 0\r\n        ? transitionTimeout > animationTimeout\r\n          ? TRANSITION\r\n          : ANIMATION\r\n        : null\r\n    propCount = type\r\n      ? type === TRANSITION\r\n        ? transitionDurations.length\r\n        : animationDurations.length\r\n      : 0\r\n  }\r\n  const hasTransform =\r\n    type === TRANSITION &&\r\n    /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property'])\r\n  return {\r\n    type,\r\n    timeout,\r\n    propCount,\r\n    hasTransform\r\n  }\r\n}\r\n\r\nfunction getTimeout(delays: string[], durations: string[]): number {\r\n  while (delays.length < durations.length) {\r\n    delays = delays.concat(delays)\r\n  }\r\n  return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])))\r\n}\r\n\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s: string): number {\r\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\r\n}\r\n\r\n// synchronously force layout to put elements into a certain state\r\nexport function forceReflow() {\r\n  return document.body.offsetHeight\r\n}\r\n","import {\r\n  TransitionProps,\r\n  addTransitionClass,\r\n  removeTransitionClass,\r\n  ElementWithTransition,\r\n  getTransitionInfo,\r\n  resolveTransitionProps,\r\n  TransitionPropsValidators,\r\n  forceReflow\r\n} from './Transition'\r\nimport {\r\n  Fragment,\r\n  VNode,\r\n  warn,\r\n  resolveTransitionHooks,\r\n  useTransitionState,\r\n  getTransitionRawChildren,\r\n  getCurrentInstance,\r\n  setTransitionHooks,\r\n  createVNode,\r\n  onUpdated,\r\n  SetupContext,\r\n  toRaw,\r\n  compatUtils,\r\n  DeprecationTypes,\r\n  ComponentOptions\r\n} from '@vue/runtime-core'\r\nimport { extend } from '@vue/shared'\r\n\r\nconst positionMap = new WeakMap<VNode, DOMRect>()\r\nconst newPositionMap = new WeakMap<VNode, DOMRect>()\r\n\r\nexport type TransitionGroupProps = Omit<TransitionProps, 'mode'> & {\r\n  tag?: string\r\n  moveClass?: string\r\n}\r\n\r\nconst TransitionGroupImpl: ComponentOptions = {\r\n  name: 'TransitionGroup',\r\n\r\n  props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n    tag: String,\r\n    moveClass: String\r\n  }),\r\n\r\n  setup(props: TransitionGroupProps, { slots }: SetupContext) {\r\n    const instance = getCurrentInstance()!\r\n    const state = useTransitionState()\r\n    let prevChildren: VNode[]\r\n    let children: VNode[]\r\n\r\n    onUpdated(() => {\r\n      // children is guaranteed to exist after initial render\r\n      if (!prevChildren.length) {\r\n        return\r\n      }\r\n      const moveClass = props.moveClass || `${props.name || 'v'}-move`\r\n\r\n      if (\r\n        !hasCSSTransform(\r\n          prevChildren[0].el as ElementWithTransition,\r\n          instance.vnode.el as Node,\r\n          moveClass\r\n        )\r\n      ) {\r\n        return\r\n      }\r\n\r\n      // we divide the work into three loops to avoid mixing DOM reads and writes\r\n      // in each iteration - which helps prevent layout thrashing.\r\n      prevChildren.forEach(callPendingCbs)\r\n      prevChildren.forEach(recordPosition)\r\n      const movedChildren = prevChildren.filter(applyTranslation)\r\n\r\n      // force reflow to put everything in position\r\n      forceReflow()\r\n\r\n      movedChildren.forEach(c => {\r\n        const el = c.el as ElementWithTransition\r\n        const style = el.style\r\n        addTransitionClass(el, moveClass)\r\n        style.transform = style.webkitTransform = style.transitionDuration = ''\r\n        const cb = ((el as any)._moveCb = (e: TransitionEvent) => {\r\n          if (e && e.target !== el) {\r\n            return\r\n          }\r\n          if (!e || /transform$/.test(e.propertyName)) {\r\n            el.removeEventListener('transitionend', cb)\r\n            ;(el as any)._moveCb = null\r\n            removeTransitionClass(el, moveClass)\r\n          }\r\n        })\r\n        el.addEventListener('transitionend', cb)\r\n      })\r\n    })\r\n\r\n    return () => {\r\n      const rawProps = toRaw(props)\r\n      const cssTransitionProps = resolveTransitionProps(rawProps)\r\n      let tag = rawProps.tag || Fragment\r\n\r\n      if (\r\n        __COMPAT__ &&\r\n        !rawProps.tag &&\r\n        compatUtils.checkCompatEnabled(\r\n          DeprecationTypes.TRANSITION_GROUP_ROOT,\r\n          instance.parent\r\n        )\r\n      ) {\r\n        tag = 'span'\r\n      }\r\n\r\n      prevChildren = children\r\n      children = slots.default ? getTransitionRawChildren(slots.default()) : []\r\n\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i]\r\n        if (child.key != null) {\r\n          setTransitionHooks(\r\n            child,\r\n            resolveTransitionHooks(child, cssTransitionProps, state, instance)\r\n          )\r\n        } else if (__DEV__) {\r\n          warn(`<TransitionGroup> children must be keyed.`)\r\n        }\r\n      }\r\n\r\n      if (prevChildren) {\r\n        for (let i = 0; i < prevChildren.length; i++) {\r\n          const child = prevChildren[i]\r\n          setTransitionHooks(\r\n            child,\r\n            resolveTransitionHooks(child, cssTransitionProps, state, instance)\r\n          )\r\n          positionMap.set(child, (child.el as Element).getBoundingClientRect())\r\n        }\r\n      }\r\n\r\n      return createVNode(tag, null, children)\r\n    }\r\n  }\r\n}\r\n\r\nif (__COMPAT__) {\r\n  TransitionGroupImpl.__isBuiltIn = true\r\n}\r\n\r\n/**\r\n * TransitionGroup does not support \"mode\" so we need to remove it from the\r\n * props declarations, but direct delete operation is considered a side effect\r\n * and will make the entire transition feature non-tree-shakeable, so we do it\r\n * in a function and mark the function's invocation as pure.\r\n */\r\nconst removeMode = (props: any) => delete props.mode\r\n/*#__PURE__*/ removeMode(TransitionGroupImpl.props)\r\n\r\nexport const TransitionGroup = TransitionGroupImpl as unknown as {\r\n  new (): {\r\n    $props: TransitionGroupProps\r\n  }\r\n}\r\n\r\nfunction callPendingCbs(c: VNode) {\r\n  const el = c.el as any\r\n  if (el._moveCb) {\r\n    el._moveCb()\r\n  }\r\n  if (el._enterCb) {\r\n    el._enterCb()\r\n  }\r\n}\r\n\r\nfunction recordPosition(c: VNode) {\r\n  newPositionMap.set(c, (c.el as Element).getBoundingClientRect())\r\n}\r\n\r\nfunction applyTranslation(c: VNode): VNode | undefined {\r\n  const oldPos = positionMap.get(c)!\r\n  const newPos = newPositionMap.get(c)!\r\n  const dx = oldPos.left - newPos.left\r\n  const dy = oldPos.top - newPos.top\r\n  if (dx || dy) {\r\n    const s = (c.el as HTMLElement).style\r\n    s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`\r\n    s.transitionDuration = '0s'\r\n    return c\r\n  }\r\n}\r\n\r\nfunction hasCSSTransform(\r\n  el: ElementWithTransition,\r\n  root: Node,\r\n  moveClass: string\r\n): boolean {\r\n  // Detect whether an element with the move class applied has\r\n  // CSS transitions. Since the element may be inside an entering\r\n  // transition at this very moment, we make a clone of it and remove\r\n  // all other transition classes applied to ensure only the move class\r\n  // is applied.\r\n  const clone = el.cloneNode() as HTMLElement\r\n  if (el._vtc) {\r\n    el._vtc.forEach(cls => {\r\n      cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c))\r\n    })\r\n  }\r\n  moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c))\r\n  clone.style.display = 'none'\r\n  const container = (\r\n    root.nodeType === 1 ? root : root.parentNode\r\n  ) as HTMLElement\r\n  container.appendChild(clone)\r\n  const { hasTransform } = getTransitionInfo(clone)\r\n  container.removeChild(clone)\r\n  return hasTransform\r\n}\r\n","import {\r\n  ObjectDirective,\r\n  VNode,\r\n  DirectiveHook,\r\n  DirectiveBinding,\r\n  warn\r\n} from '@vue/runtime-core'\r\nimport { addEventListener } from '../modules/events'\r\nimport {\r\n  isArray,\r\n  looseEqual,\r\n  looseIndexOf,\r\n  invokeArrayFns,\r\n  toNumber,\r\n  isSet\r\n} from '@vue/shared'\r\n\r\ntype AssignerFn = (value: any) => void\r\n\r\nconst getModelAssigner = (vnode: VNode): AssignerFn => {\r\n  const fn =\r\n    vnode.props!['onUpdate:modelValue'] ||\r\n    (__COMPAT__ && vnode.props!['onModelCompat:input'])\r\n  return isArray(fn) ? value => invokeArrayFns(fn, value) : fn\r\n}\r\n\r\nfunction onCompositionStart(e: Event) {\r\n  ;(e.target as any).composing = true\r\n}\r\n\r\nfunction onCompositionEnd(e: Event) {\r\n  const target = e.target as any\r\n  if (target.composing) {\r\n    target.composing = false\r\n    target.dispatchEvent(new Event('input'))\r\n  }\r\n}\r\n\r\ntype ModelDirective<T> = ObjectDirective<T & { _assign: AssignerFn }>\r\n\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nexport const vModelText: ModelDirective<\r\n  HTMLInputElement | HTMLTextAreaElement\r\n> = {\r\n  created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    const castToNumber =\r\n      number || (vnode.props && vnode.props.type === 'number')\r\n    addEventListener(el, lazy ? 'change' : 'input', e => {\r\n      if ((e.target as any).composing) return\r\n      let domValue: string | number = el.value\r\n      if (trim) {\r\n        domValue = domValue.trim()\r\n      }\r\n      if (castToNumber) {\r\n        domValue = toNumber(domValue)\r\n      }\r\n      el._assign(domValue)\r\n    })\r\n    if (trim) {\r\n      addEventListener(el, 'change', () => {\r\n        el.value = el.value.trim()\r\n      })\r\n    }\r\n    if (!lazy) {\r\n      addEventListener(el, 'compositionstart', onCompositionStart)\r\n      addEventListener(el, 'compositionend', onCompositionEnd)\r\n      // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n      // switching focus before confirming composition choice\r\n      // this also fixes the issue where some browsers e.g. iOS Chrome\r\n      // fires \"change\" instead of \"input\" on autocomplete.\r\n      addEventListener(el, 'change', onCompositionEnd)\r\n    }\r\n  },\r\n  // set value on mounted so it's after min/max for type=\"range\"\r\n  mounted(el, { value }) {\r\n    el.value = value == null ? '' : value\r\n  },\r\n  beforeUpdate(el, { value, modifiers: { lazy, trim, number } }, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    // avoid clearing unresolved text. #2302\r\n    if ((el as any).composing) return\r\n    if (document.activeElement === el && el.type !== 'range') {\r\n      if (lazy) {\r\n        return\r\n      }\r\n      if (trim && el.value.trim() === value) {\r\n        return\r\n      }\r\n      if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n        return\r\n      }\r\n    }\r\n    const newValue = value == null ? '' : value\r\n    if (el.value !== newValue) {\r\n      el.value = newValue\r\n    }\r\n  }\r\n}\r\n\r\nexport const vModelCheckbox: ModelDirective<HTMLInputElement> = {\r\n  // #4096 array checkboxes need to be deep traversed\r\n  deep: true,\r\n  created(el, _, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    addEventListener(el, 'change', () => {\r\n      const modelValue = (el as any)._modelValue\r\n      const elementValue = getValue(el)\r\n      const checked = el.checked\r\n      const assign = el._assign\r\n      if (isArray(modelValue)) {\r\n        const index = looseIndexOf(modelValue, elementValue)\r\n        const found = index !== -1\r\n        if (checked && !found) {\r\n          assign(modelValue.concat(elementValue))\r\n        } else if (!checked && found) {\r\n          const filtered = [...modelValue]\r\n          filtered.splice(index, 1)\r\n          assign(filtered)\r\n        }\r\n      } else if (isSet(modelValue)) {\r\n        const cloned = new Set(modelValue)\r\n        if (checked) {\r\n          cloned.add(elementValue)\r\n        } else {\r\n          cloned.delete(elementValue)\r\n        }\r\n        assign(cloned)\r\n      } else {\r\n        assign(getCheckboxValue(el, checked))\r\n      }\r\n    })\r\n  },\r\n  // set initial checked on mount to wait for true-value/false-value\r\n  mounted: setChecked,\r\n  beforeUpdate(el, binding, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    setChecked(el, binding, vnode)\r\n  }\r\n}\r\n\r\nfunction setChecked(\r\n  el: HTMLInputElement,\r\n  { value, oldValue }: DirectiveBinding,\r\n  vnode: VNode\r\n) {\r\n  // store the v-model value on the element so it can be accessed by the\r\n  // change listener.\r\n  ;(el as any)._modelValue = value\r\n  if (isArray(value)) {\r\n    el.checked = looseIndexOf(value, vnode.props!.value) > -1\r\n  } else if (isSet(value)) {\r\n    el.checked = value.has(vnode.props!.value)\r\n  } else if (value !== oldValue) {\r\n    el.checked = looseEqual(value, getCheckboxValue(el, true))\r\n  }\r\n}\r\n\r\nexport const vModelRadio: ModelDirective<HTMLInputElement> = {\r\n  created(el, { value }, vnode) {\r\n    el.checked = looseEqual(value, vnode.props!.value)\r\n    el._assign = getModelAssigner(vnode)\r\n    addEventListener(el, 'change', () => {\r\n      el._assign(getValue(el))\r\n    })\r\n  },\r\n  beforeUpdate(el, { value, oldValue }, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    if (value !== oldValue) {\r\n      el.checked = looseEqual(value, vnode.props!.value)\r\n    }\r\n  }\r\n}\r\n\r\nexport const vModelSelect: ModelDirective<HTMLSelectElement> = {\r\n  // <select multiple> value need to be deep traversed\r\n  deep: true,\r\n  created(el, { value, modifiers: { number } }, vnode) {\r\n    const isSetModel = isSet(value)\r\n    addEventListener(el, 'change', () => {\r\n      const selectedVal = Array.prototype.filter\r\n        .call(el.options, (o: HTMLOptionElement) => o.selected)\r\n        .map((o: HTMLOptionElement) =>\r\n          number ? toNumber(getValue(o)) : getValue(o)\r\n        )\r\n      el._assign(\r\n        el.multiple\r\n          ? isSetModel\r\n            ? new Set(selectedVal)\r\n            : selectedVal\r\n          : selectedVal[0]\r\n      )\r\n    })\r\n    el._assign = getModelAssigner(vnode)\r\n  },\r\n  // set value in mounted & updated because <select> relies on its children\r\n  // <option>s.\r\n  mounted(el, { value }) {\r\n    setSelected(el, value)\r\n  },\r\n  beforeUpdate(el, _binding, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n  },\r\n  updated(el, { value }) {\r\n    setSelected(el, value)\r\n  }\r\n}\r\n\r\nfunction setSelected(el: HTMLSelectElement, value: any) {\r\n  const isMultiple = el.multiple\r\n  if (isMultiple && !isArray(value) && !isSet(value)) {\r\n    __DEV__ &&\r\n      warn(\r\n        `<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n          `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`\r\n      )\r\n    return\r\n  }\r\n  for (let i = 0, l = el.options.length; i < l; i++) {\r\n    const option = el.options[i]\r\n    const optionValue = getValue(option)\r\n    if (isMultiple) {\r\n      if (isArray(value)) {\r\n        option.selected = looseIndexOf(value, optionValue) > -1\r\n      } else {\r\n        option.selected = value.has(optionValue)\r\n      }\r\n    } else {\r\n      if (looseEqual(getValue(option), value)) {\r\n        if (el.selectedIndex !== i) el.selectedIndex = i\r\n        return\r\n      }\r\n    }\r\n  }\r\n  if (!isMultiple && el.selectedIndex !== -1) {\r\n    el.selectedIndex = -1\r\n  }\r\n}\r\n\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el: HTMLOptionElement | HTMLInputElement) {\r\n  return '_value' in el ? (el as any)._value : el.value\r\n}\r\n\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(\r\n  el: HTMLInputElement & { _trueValue?: any; _falseValue?: any },\r\n  checked: boolean\r\n) {\r\n  const key = checked ? '_trueValue' : '_falseValue'\r\n  return key in el ? el[key] : checked\r\n}\r\n\r\nexport const vModelDynamic: ObjectDirective<\r\n  HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\r\n> = {\r\n  created(el, binding, vnode) {\r\n    callModelHook(el, binding, vnode, null, 'created')\r\n  },\r\n  mounted(el, binding, vnode) {\r\n    callModelHook(el, binding, vnode, null, 'mounted')\r\n  },\r\n  beforeUpdate(el, binding, vnode, prevVNode) {\r\n    callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate')\r\n  },\r\n  updated(el, binding, vnode, prevVNode) {\r\n    callModelHook(el, binding, vnode, prevVNode, 'updated')\r\n  }\r\n}\r\n\r\nfunction resolveDynamicModel(tagName: string, type: string | undefined) {\r\n  switch (tagName) {\r\n    case 'SELECT':\r\n      return vModelSelect\r\n    case 'TEXTAREA':\r\n      return vModelText\r\n    default:\r\n      switch (type) {\r\n        case 'checkbox':\r\n          return vModelCheckbox\r\n        case 'radio':\r\n          return vModelRadio\r\n        default:\r\n          return vModelText\r\n      }\r\n  }\r\n}\r\n\r\nfunction callModelHook(\r\n  el: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement,\r\n  binding: DirectiveBinding,\r\n  vnode: VNode,\r\n  prevVNode: VNode | null,\r\n  hook: keyof ObjectDirective\r\n) {\r\n  const modelToUse = resolveDynamicModel(\r\n    el.tagName,\r\n    vnode.props && vnode.props.type\r\n  )\r\n  const fn = modelToUse[hook] as DirectiveHook\r\n  fn && fn(el, binding, vnode, prevVNode)\r\n}\r\n\r\n// SSR vnode transforms, only used when user includes client-oriented render\r\n// function in SSR\r\nexport function initVModelForSSR() {\r\n  vModelText.getSSRProps = ({ value }) => ({ value })\r\n\r\n  vModelRadio.getSSRProps = ({ value }, vnode) => {\r\n    if (vnode.props && looseEqual(vnode.props.value, value)) {\r\n      return { checked: true }\r\n    }\r\n  }\r\n\r\n  vModelCheckbox.getSSRProps = ({ value }, vnode) => {\r\n    if (isArray(value)) {\r\n      if (vnode.props && looseIndexOf(value, vnode.props.value) > -1) {\r\n        return { checked: true }\r\n      }\r\n    } else if (isSet(value)) {\r\n      if (vnode.props && value.has(vnode.props.value)) {\r\n        return { checked: true }\r\n      }\r\n    } else if (value) {\r\n      return { checked: true }\r\n    }\r\n  }\r\n\r\n  vModelDynamic.getSSRProps = (binding, vnode) => {\r\n    if (typeof vnode.type !== 'string') {\r\n      return\r\n    }\r\n    const modelToUse = resolveDynamicModel(\r\n      // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase\r\n      vnode.type.toUpperCase(),\r\n      vnode.props && vnode.props.type\r\n    )\r\n    if (modelToUse.getSSRProps) {\r\n      return modelToUse.getSSRProps(binding, vnode)\r\n    }\r\n  }\r\n}\r\n","import {\r\n  getCurrentInstance,\r\n  DeprecationTypes,\r\n  LegacyConfig,\r\n  compatUtils,\r\n  ComponentInternalInstance\r\n} from '@vue/runtime-core'\r\nimport { hyphenate, isArray } from '@vue/shared'\r\n\r\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta']\r\n\r\ntype KeyedEvent = KeyboardEvent | MouseEvent | TouchEvent\r\n\r\nconst modifierGuards: Record<\r\n  string,\r\n  (e: Event, modifiers: string[]) => void | boolean\r\n> = {\r\n  stop: e => e.stopPropagation(),\r\n  prevent: e => e.preventDefault(),\r\n  self: e => e.target !== e.currentTarget,\r\n  ctrl: e => !(e as KeyedEvent).ctrlKey,\r\n  shift: e => !(e as KeyedEvent).shiftKey,\r\n  alt: e => !(e as KeyedEvent).altKey,\r\n  meta: e => !(e as KeyedEvent).metaKey,\r\n  left: e => 'button' in e && (e as MouseEvent).button !== 0,\r\n  middle: e => 'button' in e && (e as MouseEvent).button !== 1,\r\n  right: e => 'button' in e && (e as MouseEvent).button !== 2,\r\n  exact: (e, modifiers) =>\r\n    systemModifiers.some(m => (e as any)[`${m}Key`] && !modifiers.includes(m))\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport const withModifiers = (fn: Function, modifiers: string[]) => {\r\n  return (event: Event, ...args: unknown[]) => {\r\n    for (let i = 0; i < modifiers.length; i++) {\r\n      const guard = modifierGuards[modifiers[i]]\r\n      if (guard && guard(event, modifiers)) return\r\n    }\r\n    return fn(event, ...args)\r\n  }\r\n}\r\n\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames: Record<string, string | string[]> = {\r\n  esc: 'escape',\r\n  space: ' ',\r\n  up: 'arrow-up',\r\n  left: 'arrow-left',\r\n  right: 'arrow-right',\r\n  down: 'arrow-down',\r\n  delete: 'backspace'\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport const withKeys = (fn: Function, modifiers: string[]) => {\r\n  let globalKeyCodes: LegacyConfig['keyCodes']\r\n  let instance: ComponentInternalInstance | null = null\r\n  if (__COMPAT__) {\r\n    instance = getCurrentInstance()\r\n    if (\r\n      compatUtils.isCompatEnabled(DeprecationTypes.CONFIG_KEY_CODES, instance)\r\n    ) {\r\n      if (instance) {\r\n        globalKeyCodes = (instance.appContext.config as LegacyConfig).keyCodes\r\n      }\r\n    }\r\n    if (__DEV__ && modifiers.some(m => /^\\d+$/.test(m))) {\r\n      compatUtils.warnDeprecation(\r\n        DeprecationTypes.V_ON_KEYCODE_MODIFIER,\r\n        instance\r\n      )\r\n    }\r\n  }\r\n\r\n  return (event: KeyboardEvent) => {\r\n    if (!('key' in event)) {\r\n      return\r\n    }\r\n\r\n    const eventKey = hyphenate(event.key)\r\n    if (modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n      return fn(event)\r\n    }\r\n\r\n    if (__COMPAT__) {\r\n      const keyCode = String(event.keyCode)\r\n      if (\r\n        compatUtils.isCompatEnabled(\r\n          DeprecationTypes.V_ON_KEYCODE_MODIFIER,\r\n          instance\r\n        ) &&\r\n        modifiers.some(mod => mod == keyCode)\r\n      ) {\r\n        return fn(event)\r\n      }\r\n      if (globalKeyCodes) {\r\n        for (const mod of modifiers) {\r\n          const codes = globalKeyCodes[mod]\r\n          if (codes) {\r\n            const matches = isArray(codes)\r\n              ? codes.some(code => String(code) === keyCode)\r\n              : String(codes) === keyCode\r\n            if (matches) {\r\n              return fn(event)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { ObjectDirective } from '@vue/runtime-core'\r\n\r\ninterface VShowElement extends HTMLElement {\r\n  // _vod = vue original display\r\n  _vod: string\r\n}\r\n\r\nexport const vShow: ObjectDirective<VShowElement> = {\r\n  beforeMount(el, { value }, { transition }) {\r\n    el._vod = el.style.display === 'none' ? '' : el.style.display\r\n    if (transition && value) {\r\n      transition.beforeEnter(el)\r\n    } else {\r\n      setDisplay(el, value)\r\n    }\r\n  },\r\n  mounted(el, { value }, { transition }) {\r\n    if (transition && value) {\r\n      transition.enter(el)\r\n    }\r\n  },\r\n  updated(el, { value, oldValue }, { transition }) {\r\n    if (!value === !oldValue) return\r\n    if (transition) {\r\n      if (value) {\r\n        transition.beforeEnter(el)\r\n        setDisplay(el, true)\r\n        transition.enter(el)\r\n      } else {\r\n        transition.leave(el, () => {\r\n          setDisplay(el, false)\r\n        })\r\n      }\r\n    } else {\r\n      setDisplay(el, value)\r\n    }\r\n  },\r\n  beforeUnmount(el, { value }) {\r\n    setDisplay(el, value)\r\n  }\r\n}\r\n\r\nfunction setDisplay(el: VShowElement, value: unknown): void {\r\n  el.style.display = value ? el._vod : 'none'\r\n}\r\n\r\n// SSR vnode transforms, only used when user includes client-oriented render\r\n// function in SSR\r\nexport function initVShowForSSR() {\r\n  vShow.getSSRProps = ({ value }) => {\r\n    if (!value) {\r\n      return { style: { display: 'none' } }\r\n    }\r\n  }\r\n}\r\n","import {\r\n  createRenderer,\r\n  createHydrationRenderer,\r\n  warn,\r\n  RootRenderFunction,\r\n  CreateAppFunction,\r\n  Renderer,\r\n  HydrationRenderer,\r\n  App,\r\n  RootHydrateFunction,\r\n  isRuntimeOnly,\r\n  DeprecationTypes,\r\n  compatUtils\r\n} from '@vue/runtime-core'\r\nimport { nodeOps } from './nodeOps'\r\nimport { patchProp } from './patchProp'\r\n// Importing from the compiler, will be tree-shaken in prod\r\nimport {\r\n  isFunction,\r\n  isString,\r\n  isHTMLTag,\r\n  isSVGTag,\r\n  extend,\r\n  NOOP\r\n} from '@vue/shared'\r\n\r\ndeclare module '@vue/reactivity' {\r\n  export interface RefUnwrapBailTypes {\r\n    // Note: if updating this, also update `types/refBail.d.ts`.\r\n    runtimeDOMBailTypes: Node | Window\r\n  }\r\n}\r\n\r\nconst rendererOptions = /*#__PURE__*/ extend({ patchProp }, nodeOps)\r\n\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer: Renderer<Element | ShadowRoot> | HydrationRenderer\r\n\r\nlet enabledHydration = false\r\n\r\nfunction ensureRenderer() {\r\n  return (\r\n    renderer ||\r\n    (renderer = createRenderer<Node, Element | ShadowRoot>(rendererOptions))\r\n  )\r\n}\r\n\r\nfunction ensureHydrationRenderer() {\r\n  renderer = enabledHydration\r\n    ? renderer\r\n    : createHydrationRenderer(rendererOptions)\r\n  enabledHydration = true\r\n  return renderer as HydrationRenderer\r\n}\r\n\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nexport const render = ((...args) => {\r\n  ensureRenderer().render(...args)\r\n}) as RootRenderFunction<Element | ShadowRoot>\r\n\r\nexport const hydrate = ((...args) => {\r\n  ensureHydrationRenderer().hydrate(...args)\r\n}) as RootHydrateFunction\r\n\r\nexport const createApp = ((...args) => {\r\n  const app = ensureRenderer().createApp(...args)\r\n\r\n  if (__DEV__) {\r\n    injectNativeTagCheck(app)\r\n    injectCompilerOptionsCheck(app)\r\n  }\r\n\r\n  const { mount } = app\r\n  app.mount = (containerOrSelector: Element | ShadowRoot | string): any => {\r\n    const container = normalizeContainer(containerOrSelector)\r\n    if (!container) return\r\n\r\n    const component = app._component\r\n    if (!isFunction(component) && !component.render && !component.template) {\r\n      // __UNSAFE__\r\n      // Reason: potential execution of JS expressions in in-DOM template.\r\n      // The user must make sure the in-DOM template is trusted. If it's\r\n      // rendered by the server, the template should not contain any user data.\r\n      component.template = container.innerHTML\r\n      // 2.x compat check\r\n      if (__COMPAT__ && __DEV__) {\r\n        for (let i = 0; i < container.attributes.length; i++) {\r\n          const attr = container.attributes[i]\r\n          if (attr.name !== 'v-cloak' && /^(v-|:|@)/.test(attr.name)) {\r\n            compatUtils.warnDeprecation(\r\n              DeprecationTypes.GLOBAL_MOUNT_CONTAINER,\r\n              null\r\n            )\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // clear content before mounting\r\n    container.innerHTML = ''\r\n    const proxy = mount(container, false, container instanceof SVGElement)\r\n    if (container instanceof Element) {\r\n      container.removeAttribute('v-cloak')\r\n      container.setAttribute('data-v-app', '')\r\n    }\r\n    return proxy\r\n  }\r\n\r\n  return app\r\n}) as CreateAppFunction<Element>\r\n\r\nexport const createSSRApp = ((...args) => {\r\n  const app = ensureHydrationRenderer().createApp(...args)\r\n\r\n  if (__DEV__) {\r\n    injectNativeTagCheck(app)\r\n    injectCompilerOptionsCheck(app)\r\n  }\r\n\r\n  const { mount } = app\r\n  app.mount = (containerOrSelector: Element | ShadowRoot | string): any => {\r\n    const container = normalizeContainer(containerOrSelector)\r\n    if (container) {\r\n      return mount(container, true, container instanceof SVGElement)\r\n    }\r\n  }\r\n\r\n  return app\r\n}) as CreateAppFunction<Element>\r\n\r\nfunction injectNativeTagCheck(app: App) {\r\n  // Inject `isNativeTag`\r\n  // this is used for component name validation (dev only)\r\n  Object.defineProperty(app.config, 'isNativeTag', {\r\n    value: (tag: string) => isHTMLTag(tag) || isSVGTag(tag),\r\n    writable: false\r\n  })\r\n}\r\n\r\n// dev only\r\nfunction injectCompilerOptionsCheck(app: App) {\r\n  if (isRuntimeOnly()) {\r\n    const isCustomElement = app.config.isCustomElement\r\n    Object.defineProperty(app.config, 'isCustomElement', {\r\n      get() {\r\n        return isCustomElement\r\n      },\r\n      set() {\r\n        warn(\r\n          `The \\`isCustomElement\\` config option is deprecated. Use ` +\r\n            `\\`compilerOptions.isCustomElement\\` instead.`\r\n        )\r\n      }\r\n    })\r\n\r\n    const compilerOptions = app.config.compilerOptions\r\n    const msg =\r\n      `The \\`compilerOptions\\` config option is only respected when using ` +\r\n      `a build of Vue.js that includes the runtime compiler (aka \"full build\"). ` +\r\n      `Since you are using the runtime-only build, \\`compilerOptions\\` ` +\r\n      `must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\\n` +\r\n      `- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\\n` +\r\n      `- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\\n` +\r\n      `- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-dom`\r\n\r\n    Object.defineProperty(app.config, 'compilerOptions', {\r\n      get() {\r\n        warn(msg)\r\n        return compilerOptions\r\n      },\r\n      set() {\r\n        warn(msg)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction normalizeContainer(\r\n  container: Element | ShadowRoot | string\r\n): Element | null {\r\n  if (isString(container)) {\r\n    const res = document.querySelector(container)\r\n    if (__DEV__ && !res) {\r\n      warn(\r\n        `Failed to mount app: mount target selector \"${container}\" returned null.`\r\n      )\r\n    }\r\n    return res\r\n  }\r\n  if (\r\n    __DEV__ &&\r\n    window.ShadowRoot &&\r\n    container instanceof window.ShadowRoot &&\r\n    container.mode === 'closed'\r\n  ) {\r\n    warn(\r\n      `mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`\r\n    )\r\n  }\r\n  return container as any\r\n}\r\n\r\n// Custom element support\r\nexport {\r\n  defineCustomElement,\r\n  defineSSRCustomElement,\r\n  VueElement,\r\n  VueElementConstructor\r\n} from './apiCustomElement'\r\n\r\n// SFC CSS utilities\r\nexport { useCssModule } from './helpers/useCssModule'\r\nexport { useCssVars } from './helpers/useCssVars'\r\n\r\n// DOM-only components\r\nexport { Transition, TransitionProps } from './components/Transition'\r\nexport {\r\n  TransitionGroup,\r\n  TransitionGroupProps\r\n} from './components/TransitionGroup'\r\n\r\n// **Internal** DOM-only runtime directive helpers\r\nexport {\r\n  vModelText,\r\n  vModelCheckbox,\r\n  vModelRadio,\r\n  vModelSelect,\r\n  vModelDynamic\r\n} from './directives/vModel'\r\nexport { withModifiers, withKeys } from './directives/vOn'\r\nexport { vShow } from './directives/vShow'\r\n\r\nimport { initVModelForSSR } from './directives/vModel'\r\nimport { initVShowForSSR } from './directives/vShow'\r\n\r\nlet ssrDirectiveInitialized = false\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const initDirectivesForSSR = __SSR__\r\n  ? () => {\r\n      if (!ssrDirectiveInitialized) {\r\n        ssrDirectiveInitialized = true\r\n        initVModelForSSR()\r\n        initVShowForSSR()\r\n      }\r\n    }\r\n  : NOOP\r\n\r\n// re-export everything from core\r\n// h, Component, reactivity API, nextTick, flags & types\r\nexport * from '@vue/runtime-core'\r\n","import { ElementWithTransition } from '../components/Transition'\r\n\r\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nexport function patchClass(el: Element, value: string | null, isSVG: boolean) {\r\n  // directly setting className should be faster than setAttribute in theory\r\n  // if this is an element during a transition, take the temporary transition\r\n  // classes into account.\r\n  const transitionClasses = (el as ElementWithTransition)._vtc\r\n  if (transitionClasses) {\r\n    value = (\r\n      value ? [value, ...transitionClasses] : [...transitionClasses]\r\n    ).join(' ')\r\n  }\r\n  if (value == null) {\r\n    el.removeAttribute('class')\r\n  } else if (isSVG) {\r\n    el.setAttribute('class', value)\r\n  } else {\r\n    el.className = value\r\n  }\r\n}\r\n","// __UNSAFE__\r\n// Reason: potentially setting innerHTML.\r\n// This can come from explicit usage of v-html or innerHTML as a prop in render\r\n\r\nimport { warn, DeprecationTypes, compatUtils } from '@vue/runtime-core'\r\nimport { includeBooleanAttr } from '@vue/shared'\r\n\r\n// functions. The user is responsible for using them with only trusted content.\r\nexport function patchDOMProp(\r\n  el: any,\r\n  key: string,\r\n  value: any,\r\n  // the following args are passed only due to potential innerHTML/textContent\r\n  // overriding existing VNodes, in which case the old tree must be properly\r\n  // unmounted.\r\n  prevChildren: any,\r\n  parentComponent: any,\r\n  parentSuspense: any,\r\n  unmountChildren: any\r\n) {\r\n  if (key === 'innerHTML' || key === 'textContent') {\r\n    if (prevChildren) {\r\n      unmountChildren(prevChildren, parentComponent, parentSuspense)\r\n    }\r\n    el[key] = value == null ? '' : value\r\n    return\r\n  }\r\n\r\n  if (\r\n    key === 'value' &&\r\n    el.tagName !== 'PROGRESS' &&\r\n    // custom elements may use _value internally\r\n    !el.tagName.includes('-')\r\n  ) {\r\n    // store value as _value as well since\r\n    // non-string values will be stringified.\r\n    el._value = value\r\n    const newValue = value == null ? '' : value\r\n    if (\r\n      el.value !== newValue ||\r\n      // #4956: always set for OPTION elements because its value falls back to\r\n      // textContent if no value attribute is present. And setting .value for\r\n      // OPTION has no side effect\r\n      el.tagName === 'OPTION'\r\n    ) {\r\n      el.value = newValue\r\n    }\r\n    if (value == null) {\r\n      el.removeAttribute(key)\r\n    }\r\n    return\r\n  }\r\n\r\n  let needRemove = false\r\n  if (value === '' || value == null) {\r\n    const type = typeof el[key]\r\n    if (type === 'boolean') {\r\n      // e.g. <select multiple> compiles to { multiple: '' }\r\n      value = includeBooleanAttr(value)\r\n    } else if (value == null && type === 'string') {\r\n      // e.g. <div :id=\"null\">\r\n      value = ''\r\n      needRemove = true\r\n    } else if (type === 'number') {\r\n      // e.g. <img :width=\"null\">\r\n      // the value of some IDL attr must be greater than 0, e.g. input.size = 0 -> error\r\n      value = 0\r\n      needRemove = true\r\n    }\r\n  } else {\r\n    if (\r\n      __COMPAT__ &&\r\n      value === false &&\r\n      compatUtils.isCompatEnabled(\r\n        DeprecationTypes.ATTR_FALSE_VALUE,\r\n        parentComponent\r\n      )\r\n    ) {\r\n      const type = typeof el[key]\r\n      if (type === 'string' || type === 'number') {\r\n        __DEV__ &&\r\n          compatUtils.warnDeprecation(\r\n            DeprecationTypes.ATTR_FALSE_VALUE,\r\n            parentComponent,\r\n            key\r\n          )\r\n        value = type === 'number' ? 0 : ''\r\n        needRemove = true\r\n      }\r\n    }\r\n  }\r\n\r\n  // some properties perform value validation and throw,\r\n  // some properties has getter, no setter, will error in 'use strict'\r\n  // eg. <select :type=\"null\"></select> <select :willValidate=\"null\"></select>\r\n  try {\r\n    el[key] = value\r\n  } catch (e: any) {\r\n    if (__DEV__) {\r\n      warn(\r\n        `Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n          `value ${value} is invalid.`,\r\n        e\r\n      )\r\n    }\r\n  }\r\n  needRemove && el.removeAttribute(key)\r\n}\r\n","// This entry exports the runtime only, and is built as\r\n// `dist/vue.esm-bundler.js` which is used by default for bundlers.\r\nimport { initDev } from './dev'\r\nimport { warn } from '@vue/runtime-dom'\r\n\r\nif (__DEV__) {\r\n  initDev()\r\n}\r\n\r\nexport * from '@vue/runtime-dom'\r\n\r\nexport const compile = () => {\r\n  if (__DEV__) {\r\n    warn(\r\n      `Runtime compilation is not supported in this build of Vue.` +\r\n        (__ESM_BUNDLER__\r\n          ? ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n          : __ESM_BROWSER__\r\n          ? ` Use \"vue.esm-browser.js\" instead.`\r\n          : __GLOBAL__\r\n          ? ` Use \"vue.global.js\" instead.`\r\n          : ``) /* should not happen */\r\n    )\r\n  }\r\n}\r\n"],"names":["makeMap","str","expectsLowerCase","map","Object","create","list","split","i","length","val","toLowerCase","isGloballyWhitelisted","isSpecialBooleanAttr","includeBooleanAttr","value","normalizeStyle","isArray","res","item","normalized","isString","parseStringStyle","key","isObject","listDelimiterRE","propertyDelimiterRE","cssText","ret","forEach","tmp","trim","normalizeClass","name","normalizeProps","props","class","klass","style","looseEqual","a","b","aValidType","isDate","bValidType","getTime","isSymbol","equal","looseCompareArrays","keys","aHasKey","hasOwnProperty","bHasKey","String","looseIndexOf","arr","findIndex","toDisplayString","toString","objectToString","isFunction","JSON","stringify","replacer","_key","__v_isRef","isMap","size","entries","reduce","isSet","values","isPlainObject","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","test","isModelListener","startsWith","extend","assign","remove","el","indexOf","splice","prototype","hasOwn","call","Array","toTypeString","isPromise","then","catch","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","fn","cache","camelizeRE","camelize","replace","_","c","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","slice","toHandlerKey","hasChanged","oldValue","is","invokeArrayFns","fns","arg","def","obj","defineProperty","configurable","enumerable","toNumber","n","parseFloat","isNaN","_globalThis","activeEffectScope","EffectScope","constructor","detached","this","parent","index","scopes","push","run","active","currentEffectScope","on","off","stop","fromParent","l","effects","cleanups","last","pop","effectScope","recordEffectScope","effect","scope","getCurrentScope","onScopeDispose","createDep","dep","Set","w","wasTracked","trackOpBit","newTracked","targetMap","WeakMap","effectTrackDepth","activeEffect","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","ReactiveEffect","scheduler","undefined","lastShouldTrack","shouldTrack","deps","initDepMarkers","cleanupEffect","ptr","delete","finalizeDepMarkers","deferStop","onStop","options","_effect","lazy","runner","bind","trackStack","pauseTracking","resetTracking","track","target","type","depsMap","get","set","Map","trackEffects","debuggerEventExtraInfo","has","add","trigger","newValue","oldTarget","triggerEffects","computed","triggerEffect","allowRecurse","isNonTrackableKeys","builtInSymbols","getOwnPropertyNames","filter","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","createArrayInstrumentations","instrumentations","args","toRaw","apply","isReadonly","shallow","receiver","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","targetIsArray","Reflect","isRef","readonly","reactive","createSetter","isShallow","hadKey","Number","result","mutableHandlers","deleteProperty","ownKeys","readonlyHandlers","shallowReactiveHandlers","shallowReadonlyHandlers","toShallow","getProto","v","getPrototypeOf","rawTarget","rawKey","wrap","toReadonly","toReactive","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","method","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","next","done","createReadonlyMethod","createInstrumentations","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","shallowReadonlyInstrumentations","createInstrumentationGetter","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","shallowReadonlyCollectionHandlers","getTargetType","isExtensible","rawType","targetTypeMap","toRawType","createReactiveObject","shallowReactive","shallowReadonly","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","Proxy","isReactive","isProxy","raw","markRaw","trackRefValue","ref","triggerRefValue","newVal","r","createRef","shallowRef","rawValue","RefImpl","__v_isShallow","_rawValue","_value","useDirectValue","triggerRef","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","CustomRefImpl","factory","_get","_set","customRef","toRefs","object","toRef","ObjectRefImpl","_object","_defaultValue","defaultValue","ComputedRefImpl","getter","_setter","isSSR","_dirty","_cacheable","self","stack","warn","msg","instance","component","appWarnHandler","appContext","config","warnHandler","trace","currentVNode","normalizedStack","vnode","recurseCount","parentInstance","getComponentTrace","callWithErrorHandling","join","formatComponentName","warnArgs","logs","entry","postfix","open","close","formatProps","formatTraceEntry","formatTrace","console","formatProp","err","handleError","callWithAsyncErrorHandling","throwInDev","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","errorHandler","contextVNode","error","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","nextTick","p","queueJob","job","includes","id","start","end","middle","getId","findInsertionIndex","queueFlush","flushJobs","queueCb","cb","activeQueue","pendingQueue","queuePostFlushCb","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","deduped","sort","Infinity","devtools","buffer","setDevtoolsHook","hook","enabled","event","emit","window","HTMLElement","navigator","userAgent","__VUE_DEVTOOLS_HOOK_REPLAY__","newHook","setTimeout","rawArgs","isUnmounted","modelArg","modifiersKey","number","handlerName","handler","onceHandler","emitted","normalizeEmitsOptions","comp","asMixin","emitsCache","cached","emits","hasExtends","extendEmits","normalizedFromExtend","mixins","extends","isEmitListener","currentRenderingInstance","currentScopeId","setCurrentRenderingInstance","prev","__scopeId","pushScopeId","popScopeId","withScopeId","_id","withCtx","ctx","isNonScopedSlot","_n","renderFnWithContext","_d","setBlockTracking","prevInstance","_c","renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","render","renderCache","data","setupState","inheritAttrs","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","blockStack","createVNode","Comment","root","some","filterModelListeners","cloneVNode","dirs","concat","transition","hasPropsChanged","prevProps","nextProps","emitsOptions","nextKeys","updateHOCHostEl","subTree","isSuspense","__isSuspense","Suspense","process","n1","n2","container","anchor","parentComponent","parentSuspense","isSVG","slotScopeIds","optimized","rendererInternals","patch","o","createElement","hiddenContainer","suspense","createSuspenseBoundary","pendingBranch","ssContent","triggerEvent","ssFallback","setActiveBranch","mountSuspense","um","unmount","newBranch","newFallback","activeBranch","isInFallback","isHydrating","isSameVNodeType","pendingId","timeout","fallback","patchSuspense","hydrate","node","hydrateNode","parentNode","document","normalize","children","isSlotChildren","normalizeSuspenseSlot","default","eventListener","m","move","resume","delayEnter","mode","afterLeave","hasUnresolvedAncestor","fallbackVNode","mountFallback","registerDep","setupRenderEffect","isInPendingSuspense","hydratedEl","asyncDep","asyncSetupResult","suspenseId","asyncResolved","handleSetupResult","placeholder","doRemove","s","block","trackBlock","isBlockTreeEnabled","openBlock","currentBlock","closeBlock","singleChild","singleRoot","child","isVNode","filterSingleRoot","dynamicChildren","queueEffectWithSuspense","branch","provide","currentInstance","provides","parentProvides","inject","treatDefaultAsFactory","arguments","watchEffect","doWatch","watchPostEffect","flush","watchSyncEffect","INITIAL_WATCHER_VALUE","watch","source","immediate","deep","cleanup","forceTrigger","isMultiSource","traverse","onCleanup","baseGetter","queuePostRenderEffect","queuePreFlushCb","instanceWatch","publicThis","createPathGetter","setCurrentInstance","unsetCurrentInstance","path","segments","useTransitionState","state","isMounted","isLeaving","isUnmounting","leavingVNodes","onMounted","onBeforeUnmount","TransitionHookValidator","Function","BaseTransition","appear","Boolean","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","setup","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","rawProps","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","leavingHooks","update","delayLeave","earlyRemove","delayedLeave","getLeavingNodesForType","_leaveCb","leavingVNodesCache","callHook","callAsyncHook","every","hooks","beforeEnter","leavingVNode","enter","afterHook","cancelHook","called","_enterCb","cancelled","leave","clone","isKeepAlive","keepComment","parentKey","keyedFragmentCount","Fragment","patchFlag","defineComponent","isAsyncWrapper","__asyncLoader","defineAsyncComponent","loader","loadingComponent","errorComponent","delay","suspensible","onError","userOnError","resolvedComp","pendingRequest","retries","load","thisRequest","Error","reject","__esModule","toStringTag","__asyncResolved","createInnerComp","loaded","delayed","__isKeepAlive","KeepAlive","include","RegExp","exclude","max","sharedContext","current","renderer","_unmount","storageContainer","resetShapeFlag","pruneCache","getComponentName","pruneCacheEntry","activate","isDeactivated","vnodeHook","onVnodeMounted","invokeVNodeHook","deactivate","da","onVnodeUnmounted","matches","pendingCacheKey","cacheSubtree","getInnerChild","onUpdated","rawVNode","cachedVNode","pattern","onActivated","registerKeepAliveHook","onDeactivated","wrappedHook","__wdc","injectHook","injectToKeepAliveRoot","keepAliveRoot","injected","onUnmounted","prepend","__weh","unshift","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onBeforeUpdate","onServerPrefetch","onRenderTriggered","onRenderTracked","onErrorCaptured","withDirectives","directives","internalInstance","getExposeProxy","bindings","dir","modifiers","mounted","updated","invokeDirectiveHook","prevVNode","oldBindings","binding","resolveComponent","maybeSelfReference","resolveAsset","NULL_DYNAMIC_COMPONENT","resolveDynamicComponent","resolveDirective","warnMissing","selfName","registry","renderList","renderItem","from","createSlots","dynamicSlots","slot","j","renderSlot","noSlotted","isCE","validSlotContent","ensureValidVNode","rendered","createBlock","scopeId","vnodes","toHandlers","getPublicInstance","isStatefulComponent","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","resolveMergedOptions","$forceUpdate","f","$nextTick","$watch","PublicInstanceProxyHandlers","accessCache","normalizedProps","shouldCacheAccess","publicGetter","cssModule","globalProperties","__cssModules","descriptor","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","applyOptions","beforeCreate","dataOptions","computedOptions","methods","watchOptions","provideOptions","injectOptions","created","beforeMount","beforeUpdate","activated","deactivated","beforeUnmount","unmounted","renderTracked","renderTriggered","errorCaptured","serverPrefetch","expose","components","checkDuplicateProperties","unwrapRef","normalizeInject","opt","resolveInjections","unwrapInjectedRef","methodHandler","createWatcher","registerLifecycleHook","register","_hook","exposed","h","base","extendsOptions","globalMixins","optionsCache","optionMergeStrategies","resolved","mergeOptions","to","strats","strat","internalOptionMergeStrats","mergeDataFn","mergeObjectOptions","mergeAsArray","beforeDestroy","destroyed","merged","setFullProps","needCastKeys","rawCastValues","hasAttrsChanged","camelKey","rawCurrentProps","castValues","resolvePropValue","isAbsent","hasDefault","propsDefaults","normalizePropsOptions","propsCache","extendProps","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","getType","ctor","match","isSameType","expectedTypes","t","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","createAppContext","app","isNativeTag","performance","compilerOptions","uid","createAppAPI","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","_instance","version","use","plugin","install","mixin","directive","mount","rootContainer","isHydrate","__vue_app__","setRef","rawRef","oldRawRef","isUnmount","refValue","owner","oldRef","refs","_isString","_isRef","doSet","existing","k","hasMismatch","isSVGContainer","namespaceURI","tagName","isComment","nodeType","createHydrationFunctions","mt","mountComponent","patchProp","createText","nextSibling","insert","createComment","isFragmentStart","onMismatch","handleMismatch","domType","nextNode","Text","Static","needToAdoptContent","staticCount","outerHTML","hydrateFragment","hydrateElement","locateClosingAsyncAnchor","previousSibling","lastChild","createTextVNode","hydrateChildren","forcePatchValue","endsWith","onClick","vnodeHooks","onVnodeBeforeMount","innerHTML","textContent","firstChild","parentVNode","fragmentSlotScopeIds","isFragment","hasChildNodes","_vnode","createRenderer","baseCreateRenderer","createHydrationRenderer","createHydrationFns","globalThis","global","__VUE__","hostInsert","hostRemove","hostPatchProp","hostCreateElement","hostCreateText","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","hostParentNode","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","getNextHostNode","processText","processCommentNode","mountStaticNode","processFragment","processElement","processComponent","internals","mountElement","patchElement","mountChildren","unmountChildren","needCallTransitionHooks","cloneIfMounted","oldProps","newProps","toggleRecurse","onVnodeBeforeUpdate","areChildrenSVG","patchBlockChildren","patchChildren","patchProps","propsToUpdate","dynamicProps","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","traverseStaticChildren","updateComponent","initialVNode","emptyAppContext","exposeProxy","setupContext","bc","bm","bu","u","bum","rtg","rtc","sp","ce","createComponentInstance","isStateful","InternalObjectKey","initProps","initSlots","setupResult","createSetupContext","resolvedResult","e","finishComponentSetup","setupStatefulComponent","setupComponent","nextVNode","prevChildren","nextChildren","$stable","shouldUpdateComponent","updateComponentPreRender","invalidateJob","originNext","nextTree","prevTree","isAsyncWrapperVNode","hydrateSubTree","scopedInitialVNode","rawPrevProps","kebabKey","camelizedKey","updateProps","needDeletionCheck","deletionComparisonTarget","updateSlots","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","len","arrI","getSequence","nextIndex","moveType","moveStaticNode","performLeave","shouldInvokeDirs","shouldInvokeVnodeHook","onVnodeBeforeUnmount","unmountComponent","removeFragment","removeStaticNode","performRemove","mc","pc","pbc","createApp","allowed","ch1","ch2","isTeleportDisabled","disabled","isTargetSVG","SVGElement","resolveTarget","select","targetSelector","moveTeleport","targetAnchor","isReorder","Teleport","__isTeleport","querySelector","mainAnchor","wasDisabled","currentContainer","currentAnchor","nextTarget","targetNode","_lpa","disableTracking","setupBlock","createElementBlock","createBaseVNode","__v_isVNode","transformVNodeArgs","transformer","normalizeKey","normalizeRef","ref_key","ref_for","isBlockNode","needFullChildrenNormalization","__v_skip","normalizeChildren","cloned","__vccOpts","guardReactiveProps","isTeleport","extraProps","mergeRef","mergedProps","mergeProps","text","flag","createStaticVNode","content","numberOfNodes","createCommentVNode","asBlock","memo","slotFlag","toMerge","incoming","compile","installWithProxy","registerRuntimeCompiler","_compile","_rc","isRuntimeOnly","skipOptions","template","isCustomElement","delimiters","componentCompilerOptions","finalCompilerOptions","createAttrsProxy","classifyRE","includeInferred","displayName","__name","isRoot","__file","inferFromRegistry","getterOrOptions","debugOptions","setter","onlyGetter","_computed","defineProps","defineEmits","defineExpose","withDefaults","defaults","useSlots","getContext","useAttrs","mergeDefaults","createPropsRestProxy","excludedKeys","withAsyncContext","getAwaitable","awaitable","propsOrChildren","ssrContextKey","useSSRContext","initCustomFormatter","withMemo","isMemoSame","ssrUtils","resolveFilter","compatUtils","doc","templateContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","multiple","setAttribute","createTextNode","nodeValue","selector","before","wrapper","appendChild","importantRE","setStyle","setProperty","prefixed","rawName","prefixCache","prefixes","autoPrefix","xlinkNS","_getNow","skipTimestampCheck","Date","now","createEvent","timeStamp","ffMatch","cachedNow","reset","addEventListener","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","optionsModifierRE","parseName","invoker","initialValue","attached","originalStop","stopImmediatePropagation","_stopped","patchStopImmediatePropagation","getNow","createInvoker","removeEventListener","nativeOnRE","defineCustomElement","Comp","VueCustomElement","VueElement","initialProps","super","defineSSRCustomElement","BaseClass","_def","shadowRoot","_createVNode","attachShadow","connectedCallback","_connected","_resolveDef","disconnectedCallback","_resolved","attributes","_setAttr","MutationObserver","mutations","attributeName","observe","styles","hasOptions","rawKeys","numberProps","_numberProps","_setProp","_getProp","_applyStyles","_update","asyncDef","getAttribute","shouldReflect","shouldUpdate","removeAttribute","dispatchEvent","CustomEvent","detail","host","css","useCssModule","modules","mod","useCssVars","setVars","setVarsOnVNode","ob","childList","disconnect","vars","setVarsOnNode","Transition","resolveTransitionProps","DOMTransitionPropsValidators","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","TransitionPropsValidators","hasExplicitCallback","baseProps","durations","NumberOf","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","_isLeaving","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","cls","classList","_vtc","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","propCount","getTransitionInfo","endEvent","ended","onEnd","getComputedStyle","getStyleProperties","transitionDelays","TRANSITION","transitionDurations","transitionTimeout","getTimeout","animationDelays","ANIMATION","animationDurations","animationTimeout","hasTransform","delays","d","toMs","body","offsetHeight","positionMap","newPositionMap","TransitionGroup","moveClass","display","hasCSSTransform","callPendingCbs","recordPosition","movedChildren","applyTranslation","transform","webkitTransform","transitionDuration","_moveCb","propertyName","cssTransitionProps","getBoundingClientRect","oldPos","newPos","dx","left","dy","top","getModelAssigner","onCompositionStart","composing","onCompositionEnd","Event","vModelText","_assign","castToNumber","domValue","activeElement","vModelCheckbox","modelValue","_modelValue","elementValue","getValue","checked","found","filtered","getCheckboxValue","setChecked","vModelRadio","vModelSelect","isSetModel","selectedVal","selected","setSelected","_binding","isMultiple","option","optionValue","selectedIndex","vModelDynamic","callModelHook","resolveDynamicModel","systemModifiers","modifierGuards","stopPropagation","prevent","preventDefault","currentTarget","ctrl","ctrlKey","shift","shiftKey","alt","altKey","meta","metaKey","button","right","exact","withModifiers","guard","keyNames","esc","space","up","down","withKeys","eventKey","vShow","_vod","setDisplay","rendererOptions","transitionClasses","className","patchClass","isCssString","currentDisplay","patchStyle","shouldSetAsProp","needRemove","patchDOMProp","_trueValue","_falseValue","removeAttributeNS","setAttributeNS","isBoolean","patchAttr","enabledHydration","ensureRenderer","ensureHydrationRenderer","containerOrSelector","normalizeContainer","Element","createSSRApp","initDirectivesForSSR"],"mappings":"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"}