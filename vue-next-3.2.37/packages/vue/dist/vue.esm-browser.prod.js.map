{"version":3,"file":"vue.esm-browser.prod.js","sources":["../../shared/src/makeMap.ts","../../shared/src/globalsWhitelist.ts","../../shared/src/domAttrConfig.ts","../../shared/src/normalizeProp.ts","../../shared/src/domTagConfig.ts","../../shared/src/looseEqual.ts","../../shared/src/toDisplayString.ts","../../shared/src/index.ts","../../reactivity/src/effectScope.ts","../../reactivity/src/dep.ts","../../reactivity/src/effect.ts","../../reactivity/src/baseHandlers.ts","../../reactivity/src/collectionHandlers.ts","../../reactivity/src/reactive.ts","../../reactivity/src/ref.ts","../../reactivity/src/computed.ts","../../runtime-core/src/warning.ts","../../runtime-core/src/errorHandling.ts","../../runtime-core/src/scheduler.ts","../../runtime-core/src/devtools.ts","../../runtime-core/src/componentEmits.ts","../../runtime-core/src/componentRenderContext.ts","../../runtime-core/src/componentRenderUtils.ts","../../runtime-core/src/components/Suspense.ts","../../runtime-core/src/apiInject.ts","../../runtime-core/src/apiWatch.ts","../../runtime-core/src/components/BaseTransition.ts","../../runtime-core/src/apiDefineComponent.ts","../../runtime-core/src/apiAsyncComponent.ts","../../runtime-core/src/components/KeepAlive.ts","../../runtime-core/src/apiLifecycle.ts","../../runtime-core/src/directives.ts","../../runtime-core/src/helpers/resolveAssets.ts","../../runtime-core/src/helpers/renderList.ts","../../runtime-core/src/helpers/createSlots.ts","../../runtime-core/src/helpers/renderSlot.ts","../../runtime-core/src/helpers/toHandlers.ts","../../runtime-core/src/componentPublicInstance.ts","../../runtime-core/src/componentOptions.ts","../../runtime-core/src/componentProps.ts","../../runtime-core/src/componentSlots.ts","../../runtime-core/src/apiCreateApp.ts","../../runtime-core/src/rendererTemplateRef.ts","../../runtime-core/src/hydration.ts","../../runtime-core/src/renderer.ts","../../runtime-core/src/component.ts","../../runtime-core/src/components/Teleport.ts","../../runtime-core/src/vnode.ts","../../runtime-core/src/apiComputed.ts","../../runtime-core/src/apiSetupHelpers.ts","../../runtime-core/src/h.ts","../../runtime-core/src/helpers/useSsrContext.ts","../../runtime-core/src/customFormatter.ts","../../runtime-core/src/helpers/withMemo.ts","../../runtime-core/src/index.ts","../../runtime-dom/src/nodeOps.ts","../../runtime-dom/src/modules/style.ts","../../runtime-dom/src/modules/attrs.ts","../../runtime-dom/src/modules/events.ts","../../runtime-dom/src/patchProp.ts","../../runtime-dom/src/apiCustomElement.ts","../../runtime-dom/src/helpers/useCssModule.ts","../../runtime-dom/src/helpers/useCssVars.ts","../../runtime-dom/src/components/Transition.ts","../../runtime-dom/src/components/TransitionGroup.ts","../../runtime-dom/src/directives/vModel.ts","../../runtime-dom/src/directives/vOn.ts","../../runtime-dom/src/directives/vShow.ts","../../runtime-dom/src/index.ts","../../runtime-dom/src/modules/class.ts","../../runtime-dom/src/modules/props.ts","../../compiler-core/src/errors.ts","../../compiler-core/src/runtimeHelpers.ts","../../compiler-core/src/ast.ts","../../compiler-core/src/utils.ts","../../compiler-core/src/parse.ts","../../compiler-core/src/transforms/hoistStatic.ts","../../compiler-core/src/transform.ts","../../compiler-core/src/codegen.ts","../../compiler-core/src/transforms/vIf.ts","../../compiler-core/src/transforms/vFor.ts","../../compiler-core/src/transforms/vSlot.ts","../../compiler-core/src/transforms/transformElement.ts","../../compiler-core/src/transforms/transformSlotOutlet.ts","../../compiler-core/src/transforms/vOn.ts","../../compiler-core/src/transforms/vBind.ts","../../compiler-core/src/transforms/transformText.ts","../../compiler-core/src/transforms/vOnce.ts","../../compiler-core/src/transforms/vModel.ts","../../compiler-core/src/transforms/vMemo.ts","../../compiler-core/src/compile.ts","../../compiler-core/src/transforms/noopDirectiveTransform.ts","../../compiler-dom/src/runtimeHelpers.ts","../../compiler-dom/src/decodeHtmlBrowser.ts","../../compiler-dom/src/parserOptions.ts","../../compiler-dom/src/transforms/transformStyle.ts","../../compiler-dom/src/transforms/vHtml.ts","../../compiler-dom/src/transforms/vOn.ts","../../compiler-dom/src/transforms/ignoreSideEffectTags.ts","../../compiler-dom/src/index.ts","../../compiler-dom/src/transforms/vText.ts","../../compiler-dom/src/transforms/vModel.ts","../../compiler-dom/src/transforms/vShow.ts","../src/index.ts"],"sourcesContent":["/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nexport function makeMap(\r\n  str: string,\r\n  expectsLowerCase?: boolean\r\n): (key: string) => boolean {\r\n  const map: Record<string, boolean> = Object.create(null)\r\n  const list: Array<string> = str.split(',')\r\n  for (let i = 0; i < list.length; i++) {\r\n    map[list[i]] = true\r\n  }\r\n  return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val]\r\n}\r\n","import { makeMap } from './makeMap'\r\n\r\nconst GLOBALS_WHITE_LISTED =\r\n  'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n  'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n  'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt'\r\n\r\nexport const isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED)\r\n","import { makeMap } from './makeMap'\r\n\r\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`\r\nexport const isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs)\r\n\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nexport const isBooleanAttr = /*#__PURE__*/ makeMap(\r\n  specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`\r\n)\r\n\r\n/**\r\n * Boolean attributes should be included if the value is truthy or ''.\r\n * e.g. `<select multiple>` compiles to `{ multiple: '' }`\r\n */\r\nexport function includeBooleanAttr(value: unknown): boolean {\r\n  return !!value || value === ''\r\n}\r\n\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/\r\nconst attrValidationCache: Record<string, boolean> = {}\r\n\r\nexport function isSSRSafeAttrName(name: string): boolean {\r\n  if (attrValidationCache.hasOwnProperty(name)) {\r\n    return attrValidationCache[name]\r\n  }\r\n  const isUnsafe = unsafeAttrCharRE.test(name)\r\n  if (isUnsafe) {\r\n    console.error(`unsafe attribute name: ${name}`)\r\n  }\r\n  return (attrValidationCache[name] = !isUnsafe)\r\n}\r\n\r\nexport const propsToAttrMap: Record<string, string | undefined> = {\r\n  acceptCharset: 'accept-charset',\r\n  className: 'class',\r\n  htmlFor: 'for',\r\n  httpEquiv: 'http-equiv'\r\n}\r\n\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nexport const isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(\r\n  `animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`\r\n)\r\n\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nexport const isKnownHtmlAttr = /*#__PURE__*/ makeMap(\r\n  `accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`\r\n)\r\n\r\n/**\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\r\n */\r\nexport const isKnownSvgAttr = /*#__PURE__*/ makeMap(\r\n  `xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,` +\r\n    `arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,` +\r\n    `baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,` +\r\n    `clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,` +\r\n    `color-interpolation-filters,color-profile,color-rendering,` +\r\n    `contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,` +\r\n    `descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,` +\r\n    `dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,` +\r\n    `fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,` +\r\n    `font-family,font-size,font-size-adjust,font-stretch,font-style,` +\r\n    `font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,` +\r\n    `glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,` +\r\n    `gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,` +\r\n    `horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,` +\r\n    `k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,` +\r\n    `lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,` +\r\n    `marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,` +\r\n    `mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,` +\r\n    `name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,` +\r\n    `overflow,overline-position,overline-thickness,panose-1,paint-order,path,` +\r\n    `pathLength,patternContentUnits,patternTransform,patternUnits,ping,` +\r\n    `pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,` +\r\n    `preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,` +\r\n    `rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,` +\r\n    `restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,` +\r\n    `specularConstant,specularExponent,speed,spreadMethod,startOffset,` +\r\n    `stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,` +\r\n    `strikethrough-position,strikethrough-thickness,string,stroke,` +\r\n    `stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,` +\r\n    `systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,` +\r\n    `text-decoration,text-rendering,textLength,to,transform,transform-origin,` +\r\n    `type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,` +\r\n    `unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,` +\r\n    `v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,` +\r\n    `vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,` +\r\n    `writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,` +\r\n    `xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,` +\r\n    `xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`\r\n)\r\n","import { isArray, isString, isObject, hyphenate } from './'\r\nimport { isNoUnitNumericStyleProp } from './domAttrConfig'\r\n\r\nexport type NormalizedStyle = Record<string, string | number>\r\n\r\nexport function normalizeStyle(\r\n  value: unknown\r\n): NormalizedStyle | string | undefined {\r\n  if (isArray(value)) {\r\n    const res: NormalizedStyle = {}\r\n    for (let i = 0; i < value.length; i++) {\r\n      const item = value[i]\r\n      const normalized = isString(item)\r\n        ? parseStringStyle(item)\r\n        : (normalizeStyle(item) as NormalizedStyle)\r\n      if (normalized) {\r\n        for (const key in normalized) {\r\n          res[key] = normalized[key]\r\n        }\r\n      }\r\n    }\r\n    return res\r\n  } else if (isString(value)) {\r\n    return value\r\n  } else if (isObject(value)) {\r\n    return value\r\n  }\r\n}\r\n\r\nconst listDelimiterRE = /;(?![^(]*\\))/g\r\nconst propertyDelimiterRE = /:(.+)/\r\n\r\nexport function parseStringStyle(cssText: string): NormalizedStyle {\r\n  const ret: NormalizedStyle = {}\r\n  cssText.split(listDelimiterRE).forEach(item => {\r\n    if (item) {\r\n      const tmp = item.split(propertyDelimiterRE)\r\n      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim())\r\n    }\r\n  })\r\n  return ret\r\n}\r\n\r\nexport function stringifyStyle(\r\n  styles: NormalizedStyle | string | undefined\r\n): string {\r\n  let ret = ''\r\n  if (!styles || isString(styles)) {\r\n    return ret\r\n  }\r\n  for (const key in styles) {\r\n    const value = styles[key]\r\n    const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key)\r\n    if (\r\n      isString(value) ||\r\n      (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))\r\n    ) {\r\n      // only render valid values\r\n      ret += `${normalizedKey}:${value};`\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\nexport function normalizeClass(value: unknown): string {\r\n  let res = ''\r\n  if (isString(value)) {\r\n    res = value\r\n  } else if (isArray(value)) {\r\n    for (let i = 0; i < value.length; i++) {\r\n      const normalized = normalizeClass(value[i])\r\n      if (normalized) {\r\n        res += normalized + ' '\r\n      }\r\n    }\r\n  } else if (isObject(value)) {\r\n    for (const name in value) {\r\n      if (value[name]) {\r\n        res += name + ' '\r\n      }\r\n    }\r\n  }\r\n  return res.trim()\r\n}\r\n\r\nexport function normalizeProps(props: Record<string, any> | null) {\r\n  if (!props) return null\r\n  let { class: klass, style } = props\r\n  if (klass && !isString(klass)) {\r\n    props.class = normalizeClass(klass)\r\n  }\r\n  if (style) {\r\n    props.style = normalizeStyle(style)\r\n  }\r\n  return props\r\n}\r\n","// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// must be extracted in shared to avoid creating a dependency between the two.\r\nimport { makeMap } from './makeMap'\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS =\r\n  'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n  'header,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,' +\r\n  'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n  'data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,' +\r\n  'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n  'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n  'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n  'option,output,progress,select,textarea,details,dialog,menu,' +\r\n  'summary,template,blockquote,iframe,tfoot'\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS =\r\n  'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n  'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n  'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n  'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n  'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n  'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n  'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n  'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n  'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n  'text,textPath,title,tspan,unknown,use,view'\r\n\r\nconst VOID_TAGS =\r\n  'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr'\r\n\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `__DEV__` flag.\r\n */\r\nexport const isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS)\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `__DEV__` flag.\r\n */\r\nexport const isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS)\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `__DEV__` flag.\r\n */\r\nexport const isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS)\r\n","import { isArray, isDate, isObject, isSymbol } from './'\r\n\r\nfunction looseCompareArrays(a: any[], b: any[]) {\r\n  if (a.length !== b.length) return false\r\n  let equal = true\r\n  for (let i = 0; equal && i < a.length; i++) {\r\n    equal = looseEqual(a[i], b[i])\r\n  }\r\n  return equal\r\n}\r\n\r\nexport function looseEqual(a: any, b: any): boolean {\r\n  if (a === b) return true\r\n  let aValidType = isDate(a)\r\n  let bValidType = isDate(b)\r\n  if (aValidType || bValidType) {\r\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false\r\n  }\r\n  aValidType = isSymbol(a)\r\n  bValidType = isSymbol(b)\r\n  if (aValidType || bValidType) {\r\n    return a === b\r\n  }\r\n  aValidType = isArray(a)\r\n  bValidType = isArray(b)\r\n  if (aValidType || bValidType) {\r\n    return aValidType && bValidType ? looseCompareArrays(a, b) : false\r\n  }\r\n  aValidType = isObject(a)\r\n  bValidType = isObject(b)\r\n  if (aValidType || bValidType) {\r\n    /* istanbul ignore if: this if will probably never be called */\r\n    if (!aValidType || !bValidType) {\r\n      return false\r\n    }\r\n    const aKeysCount = Object.keys(a).length\r\n    const bKeysCount = Object.keys(b).length\r\n    if (aKeysCount !== bKeysCount) {\r\n      return false\r\n    }\r\n    for (const key in a) {\r\n      const aHasKey = a.hasOwnProperty(key)\r\n      const bHasKey = b.hasOwnProperty(key)\r\n      if (\r\n        (aHasKey && !bHasKey) ||\r\n        (!aHasKey && bHasKey) ||\r\n        !looseEqual(a[key], b[key])\r\n      ) {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  return String(a) === String(b)\r\n}\r\n\r\nexport function looseIndexOf(arr: any[], val: any): number {\r\n  return arr.findIndex(item => looseEqual(item, val))\r\n}\r\n","import {\r\n  isArray,\r\n  isMap,\r\n  isObject,\r\n  isFunction,\r\n  isPlainObject,\r\n  isSet,\r\n  objectToString,\r\n  isString\r\n} from './index'\r\n\r\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nexport const toDisplayString = (val: unknown): string => {\r\n  return isString(val)\r\n    ? val\r\n    : val == null\r\n    ? ''\r\n    : isArray(val) ||\r\n      (isObject(val) &&\r\n        (val.toString === objectToString || !isFunction(val.toString)))\r\n    ? JSON.stringify(val, replacer, 2)\r\n    : String(val)\r\n}\r\n\r\nconst replacer = (_key: string, val: any): any => {\r\n  // can't use isRef here since @vue/shared has no deps\r\n  if (val && val.__v_isRef) {\r\n    return replacer(_key, val.value)\r\n  } else if (isMap(val)) {\r\n    return {\r\n      [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n        ;(entries as any)[`${key} =>`] = val\r\n        return entries\r\n      }, {})\r\n    }\r\n  } else if (isSet(val)) {\r\n    return {\r\n      [`Set(${val.size})`]: [...val.values()]\r\n    }\r\n  } else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n    return String(val)\r\n  }\r\n  return val\r\n}\r\n","import { makeMap } from './makeMap'\r\n\r\nexport { makeMap }\r\nexport * from './patchFlags'\r\nexport * from './shapeFlags'\r\nexport * from './slotFlags'\r\nexport * from './globalsWhitelist'\r\nexport * from './codeframe'\r\nexport * from './normalizeProp'\r\nexport * from './domTagConfig'\r\nexport * from './domAttrConfig'\r\nexport * from './escapeHtml'\r\nexport * from './looseEqual'\r\nexport * from './toDisplayString'\r\nexport * from './typeUtils'\r\n\r\nexport const EMPTY_OBJ: { readonly [key: string]: any } = __DEV__\r\n  ? Object.freeze({})\r\n  : {}\r\nexport const EMPTY_ARR = __DEV__ ? Object.freeze([]) : []\r\n\r\nexport const NOOP = () => {}\r\n\r\n/**\r\n * Always return false.\r\n */\r\nexport const NO = () => false\r\n\r\nconst onRE = /^on[^a-z]/\r\nexport const isOn = (key: string) => onRE.test(key)\r\n\r\nexport const isModelListener = (key: string) => key.startsWith('onUpdate:')\r\n\r\nexport const extend = Object.assign\r\n\r\nexport const remove = <T>(arr: T[], el: T) => {\r\n  const i = arr.indexOf(el)\r\n  if (i > -1) {\r\n    arr.splice(i, 1)\r\n  }\r\n}\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty\r\nexport const hasOwn = (\r\n  val: object,\r\n  key: string | symbol\r\n): key is keyof typeof val => hasOwnProperty.call(val, key)\r\n\r\nexport const isArray = Array.isArray\r\nexport const isMap = (val: unknown): val is Map<any, any> =>\r\n  toTypeString(val) === '[object Map]'\r\nexport const isSet = (val: unknown): val is Set<any> =>\r\n  toTypeString(val) === '[object Set]'\r\n\r\nexport const isDate = (val: unknown): val is Date => toTypeString(val) === '[object Date]'\r\nexport const isFunction = (val: unknown): val is Function =>\r\n  typeof val === 'function'\r\nexport const isString = (val: unknown): val is string => typeof val === 'string'\r\nexport const isSymbol = (val: unknown): val is symbol => typeof val === 'symbol'\r\nexport const isObject = (val: unknown): val is Record<any, any> =>\r\n  val !== null && typeof val === 'object'\r\n\r\nexport const isPromise = <T = any>(val: unknown): val is Promise<T> => {\r\n  return isObject(val) && isFunction(val.then) && isFunction(val.catch)\r\n}\r\n\r\nexport const objectToString = Object.prototype.toString\r\nexport const toTypeString = (value: unknown): string =>\r\n  objectToString.call(value)\r\n\r\nexport const toRawType = (value: unknown): string => {\r\n  // extract \"RawType\" from strings like \"[object RawType]\"\r\n  return toTypeString(value).slice(8, -1)\r\n}\r\n\r\nexport const isPlainObject = (val: unknown): val is object =>\r\n  toTypeString(val) === '[object Object]'\r\n\r\nexport const isIntegerKey = (key: unknown) =>\r\n  isString(key) &&\r\n  key !== 'NaN' &&\r\n  key[0] !== '-' &&\r\n  '' + parseInt(key, 10) === key\r\n\r\nexport const isReservedProp = /*#__PURE__*/ makeMap(\r\n  // the leading comma is intentional so empty string \"\" is also included\r\n  ',key,ref,ref_for,ref_key,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted'\r\n)\r\n\r\nexport const isBuiltInDirective = /*#__PURE__*/ makeMap(\r\n  'bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo'\r\n)\r\n\r\nconst cacheStringFunction = <T extends (str: string) => string>(fn: T): T => {\r\n  const cache: Record<string, string> = Object.create(null)\r\n  return ((str: string) => {\r\n    const hit = cache[str]\r\n    return hit || (cache[str] = fn(str))\r\n  }) as any\r\n}\r\n\r\nconst camelizeRE = /-(\\w)/g\r\n/**\r\n * @private\r\n */\r\nexport const camelize = cacheStringFunction((str: string): string => {\r\n  return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''))\r\n})\r\n\r\nconst hyphenateRE = /\\B([A-Z])/g\r\n/**\r\n * @private\r\n */\r\nexport const hyphenate = cacheStringFunction((str: string) =>\r\n  str.replace(hyphenateRE, '-$1').toLowerCase()\r\n)\r\n\r\n/**\r\n * @private\r\n */\r\nexport const capitalize = cacheStringFunction(\r\n  (str: string) => str.charAt(0).toUpperCase() + str.slice(1)\r\n)\r\n\r\n/**\r\n * @private\r\n */\r\nexport const toHandlerKey = cacheStringFunction((str: string) =>\r\n  str ? `on${capitalize(str)}` : ``\r\n)\r\n\r\n// compare whether a value has changed, accounting for NaN.\r\nexport const hasChanged = (value: any, oldValue: any): boolean =>\r\n  !Object.is(value, oldValue)\r\n\r\nexport const invokeArrayFns = (fns: Function[], arg?: any) => {\r\n  for (let i = 0; i < fns.length; i++) {\r\n    fns[i](arg)\r\n  }\r\n}\r\n\r\nexport const def = (obj: object, key: string | symbol, value: any) => {\r\n  Object.defineProperty(obj, key, {\r\n    configurable: true,\r\n    enumerable: false,\r\n    value\r\n  })\r\n}\r\n\r\nexport const toNumber = (val: any): any => {\r\n  const n = parseFloat(val)\r\n  return isNaN(n) ? val : n\r\n}\r\n\r\nlet _globalThis: any\r\nexport const getGlobalThis = (): any => {\r\n  return (\r\n    _globalThis ||\r\n    (_globalThis =\r\n      typeof globalThis !== 'undefined'\r\n        ? globalThis\r\n        : typeof self !== 'undefined'\r\n        ? self\r\n        : typeof window !== 'undefined'\r\n        ? window\r\n        : typeof global !== 'undefined'\r\n        ? global\r\n        : {})\r\n  )\r\n}\r\n\r\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/\r\n\r\nexport function genPropsAccessExp(name: string) {\r\n  return identRE.test(name)\r\n    ? `__props.${name}`\r\n    : `__props[${JSON.stringify(name)}]`\r\n}\r\n","import { ReactiveEffect } from './effect'\r\nimport { warn } from './warning'\r\n\r\nlet activeEffectScope: EffectScope | undefined\r\n\r\nexport class EffectScope {\r\n  /**\r\n   * @internal\r\n   */\r\n  active = true\r\n  /**\r\n   * @internal\r\n   */\r\n  effects: ReactiveEffect[] = []\r\n  /**\r\n   * @internal\r\n   */\r\n  cleanups: (() => void)[] = []\r\n\r\n  /**\r\n   * only assigned by undetached scope\r\n   * @internal\r\n   */\r\n  parent: EffectScope | undefined\r\n  /**\r\n   * record undetached scopes\r\n   * @internal\r\n   */\r\n  scopes: EffectScope[] | undefined\r\n  /**\r\n   * track a child scope's index in its parent's scopes array for optimized\r\n   * removal\r\n   * @internal\r\n   */\r\n  private index: number | undefined\r\n\r\n  constructor(detached = false) {\r\n    if (!detached && activeEffectScope) {\r\n      this.parent = activeEffectScope\r\n      this.index =\r\n        (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(\r\n          this\r\n        ) - 1\r\n    }\r\n  }\r\n\r\n  run<T>(fn: () => T): T | undefined {\r\n    if (this.active) {\r\n      const currentEffectScope = activeEffectScope\r\n      try {\r\n        activeEffectScope = this\r\n        return fn()\r\n      } finally {\r\n        activeEffectScope = currentEffectScope\r\n      }\r\n    } else if (__DEV__) {\r\n      warn(`cannot run an inactive effect scope.`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This should only be called on non-detached scopes\r\n   * @internal\r\n   */\r\n  on() {\r\n    activeEffectScope = this\r\n  }\r\n\r\n  /**\r\n   * This should only be called on non-detached scopes\r\n   * @internal\r\n   */\r\n  off() {\r\n    activeEffectScope = this.parent\r\n  }\r\n\r\n  stop(fromParent?: boolean) {\r\n    if (this.active) {\r\n      let i, l\r\n      for (i = 0, l = this.effects.length; i < l; i++) {\r\n        this.effects[i].stop()\r\n      }\r\n      for (i = 0, l = this.cleanups.length; i < l; i++) {\r\n        this.cleanups[i]()\r\n      }\r\n      if (this.scopes) {\r\n        for (i = 0, l = this.scopes.length; i < l; i++) {\r\n          this.scopes[i].stop(true)\r\n        }\r\n      }\r\n      // nested scope, dereference from parent to avoid memory leaks\r\n      if (this.parent && !fromParent) {\r\n        // optimized O(1) removal\r\n        const last = this.parent.scopes!.pop()\r\n        if (last && last !== this) {\r\n          this.parent.scopes![this.index!] = last\r\n          last.index = this.index!\r\n        }\r\n      }\r\n      this.active = false\r\n    }\r\n  }\r\n}\r\n\r\nexport function effectScope(detached?: boolean) {\r\n  return new EffectScope(detached)\r\n}\r\n\r\nexport function recordEffectScope(\r\n  effect: ReactiveEffect,\r\n  scope: EffectScope | undefined = activeEffectScope\r\n) {\r\n  if (scope && scope.active) {\r\n    scope.effects.push(effect)\r\n  }\r\n}\r\n\r\nexport function getCurrentScope() {\r\n  return activeEffectScope\r\n}\r\n\r\nexport function onScopeDispose(fn: () => void) {\r\n  if (activeEffectScope) {\r\n    activeEffectScope.cleanups.push(fn)\r\n  } else if (__DEV__) {\r\n    warn(\r\n      `onScopeDispose() is called when there is no active effect scope` +\r\n        ` to be associated with.`\r\n    )\r\n  }\r\n}\r\n","import { ReactiveEffect, trackOpBit } from './effect'\r\n\r\nexport type Dep = Set<ReactiveEffect> & TrackedMarkers\r\n\r\n/**\r\n * wasTracked and newTracked maintain the status for several levels of effect\r\n * tracking recursion. One bit per level is used to define whether the dependency\r\n * was/is tracked.\r\n */\r\ntype TrackedMarkers = {\r\n  /**\r\n   * wasTracked\r\n   */\r\n  w: number\r\n  /**\r\n   * newTracked\r\n   */\r\n  n: number\r\n}\r\n\r\nexport const createDep = (effects?: ReactiveEffect[]): Dep => {\r\n  const dep = new Set<ReactiveEffect>(effects) as Dep\r\n  dep.w = 0\r\n  dep.n = 0\r\n  return dep\r\n}\r\n\r\nexport const wasTracked = (dep: Dep): boolean => (dep.w & trackOpBit) > 0\r\n\r\nexport const newTracked = (dep: Dep): boolean => (dep.n & trackOpBit) > 0\r\n\r\nexport const initDepMarkers = ({ deps }: ReactiveEffect) => {\r\n  if (deps.length) {\r\n    for (let i = 0; i < deps.length; i++) {\r\n      deps[i].w |= trackOpBit // set was tracked\r\n    }\r\n  }\r\n}\r\n\r\nexport const finalizeDepMarkers = (effect: ReactiveEffect) => {\r\n  const { deps } = effect\r\n  if (deps.length) {\r\n    let ptr = 0\r\n    for (let i = 0; i < deps.length; i++) {\r\n      const dep = deps[i]\r\n      if (wasTracked(dep) && !newTracked(dep)) {\r\n        dep.delete(effect)\r\n      } else {\r\n        deps[ptr++] = dep\r\n      }\r\n      // clear bits\r\n      dep.w &= ~trackOpBit\r\n      dep.n &= ~trackOpBit\r\n    }\r\n    deps.length = ptr\r\n  }\r\n}\r\n","import { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport { extend, isArray, isIntegerKey, isMap } from '@vue/shared'\r\nimport { EffectScope, recordEffectScope } from './effectScope'\r\nimport {\r\n  createDep,\r\n  Dep,\r\n  finalizeDepMarkers,\r\n  initDepMarkers,\r\n  newTracked,\r\n  wasTracked\r\n} from './dep'\r\nimport { ComputedRefImpl } from './computed'\r\n\r\n// The main WeakMap that stores {target -> key -> dep} connections.\r\n// Conceptually, it's easier to think of a dependency as a Dep class\r\n// which maintains a Set of subscribers, but we simply store them as\r\n// raw Sets to reduce memory overhead.\r\ntype KeyToDepMap = Map<any, Dep>\r\nconst targetMap = new WeakMap<any, KeyToDepMap>()\r\n\r\n// The number of effects currently being tracked recursively.\r\nlet effectTrackDepth = 0\r\n\r\nexport let trackOpBit = 1\r\n\r\n/**\r\n * The bitwise track markers support at most 30 levels of recursion.\r\n * This value is chosen to enable modern JS engines to use a SMI on all platforms.\r\n * When recursion depth is greater, fall back to using a full cleanup.\r\n */\r\nconst maxMarkerBits = 30\r\n\r\nexport type EffectScheduler = (...args: any[]) => any\r\n\r\nexport type DebuggerEvent = {\r\n  effect: ReactiveEffect\r\n} & DebuggerEventExtraInfo\r\n\r\nexport type DebuggerEventExtraInfo = {\r\n  target: object\r\n  type: TrackOpTypes | TriggerOpTypes\r\n  key: any\r\n  newValue?: any\r\n  oldValue?: any\r\n  oldTarget?: Map<any, any> | Set<any>\r\n}\r\n\r\nexport let activeEffect: ReactiveEffect | undefined\r\n\r\nexport const ITERATE_KEY = Symbol(__DEV__ ? 'iterate' : '')\r\nexport const MAP_KEY_ITERATE_KEY = Symbol(__DEV__ ? 'Map key iterate' : '')\r\n\r\nexport class ReactiveEffect<T = any> {\r\n  active = true\r\n  deps: Dep[] = []\r\n  parent: ReactiveEffect | undefined = undefined\r\n\r\n  /**\r\n   * Can be attached after creation\r\n   * @internal\r\n   */\r\n  computed?: ComputedRefImpl<T>\r\n  /**\r\n   * @internal\r\n   */\r\n  allowRecurse?: boolean\r\n  /**\r\n   * @internal\r\n   */\r\n  private deferStop?: boolean\r\n\r\n  onStop?: () => void\r\n  // dev only\r\n  onTrack?: (event: DebuggerEvent) => void\r\n  // dev only\r\n  onTrigger?: (event: DebuggerEvent) => void\r\n\r\n  constructor(\r\n    public fn: () => T,\r\n    public scheduler: EffectScheduler | null = null,\r\n    scope?: EffectScope\r\n  ) {\r\n    recordEffectScope(this, scope)\r\n  }\r\n\r\n  run() {\r\n    if (!this.active) {\r\n      return this.fn()\r\n    }\r\n    let parent: ReactiveEffect | undefined = activeEffect\r\n    let lastShouldTrack = shouldTrack\r\n    while (parent) {\r\n      if (parent === this) {\r\n        return\r\n      }\r\n      parent = parent.parent\r\n    }\r\n    try {\r\n      this.parent = activeEffect\r\n      activeEffect = this\r\n      shouldTrack = true\r\n\r\n      trackOpBit = 1 << ++effectTrackDepth\r\n\r\n      if (effectTrackDepth <= maxMarkerBits) {\r\n        initDepMarkers(this)\r\n      } else {\r\n        cleanupEffect(this)\r\n      }\r\n      return this.fn()\r\n    } finally {\r\n      if (effectTrackDepth <= maxMarkerBits) {\r\n        finalizeDepMarkers(this)\r\n      }\r\n\r\n      trackOpBit = 1 << --effectTrackDepth\r\n\r\n      activeEffect = this.parent\r\n      shouldTrack = lastShouldTrack\r\n      this.parent = undefined\r\n\r\n      if (this.deferStop) {\r\n        this.stop()\r\n      }\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    // stopped while running itself - defer the cleanup\r\n    if (activeEffect === this) {\r\n      this.deferStop = true\r\n    } else if (this.active) {\r\n      cleanupEffect(this)\r\n      if (this.onStop) {\r\n        this.onStop()\r\n      }\r\n      this.active = false\r\n    }\r\n  }\r\n}\r\n\r\nfunction cleanupEffect(effect: ReactiveEffect) {\r\n  const { deps } = effect\r\n  if (deps.length) {\r\n    for (let i = 0; i < deps.length; i++) {\r\n      deps[i].delete(effect)\r\n    }\r\n    deps.length = 0\r\n  }\r\n}\r\n\r\nexport interface DebuggerOptions {\r\n  onTrack?: (event: DebuggerEvent) => void\r\n  onTrigger?: (event: DebuggerEvent) => void\r\n}\r\n\r\nexport interface ReactiveEffectOptions extends DebuggerOptions {\r\n  lazy?: boolean\r\n  scheduler?: EffectScheduler\r\n  scope?: EffectScope\r\n  allowRecurse?: boolean\r\n  onStop?: () => void\r\n}\r\n\r\nexport interface ReactiveEffectRunner<T = any> {\r\n  (): T\r\n  effect: ReactiveEffect\r\n}\r\n\r\nexport function effect<T = any>(\r\n  fn: () => T,\r\n  options?: ReactiveEffectOptions\r\n): ReactiveEffectRunner {\r\n  if ((fn as ReactiveEffectRunner).effect) {\r\n    fn = (fn as ReactiveEffectRunner).effect.fn\r\n  }\r\n\r\n  const _effect = new ReactiveEffect(fn)\r\n  if (options) {\r\n    extend(_effect, options)\r\n    if (options.scope) recordEffectScope(_effect, options.scope)\r\n  }\r\n  if (!options || !options.lazy) {\r\n    _effect.run()\r\n  }\r\n  const runner = _effect.run.bind(_effect) as ReactiveEffectRunner\r\n  runner.effect = _effect\r\n  return runner\r\n}\r\n\r\nexport function stop(runner: ReactiveEffectRunner) {\r\n  runner.effect.stop()\r\n}\r\n\r\nexport let shouldTrack = true\r\nconst trackStack: boolean[] = []\r\n\r\nexport function pauseTracking() {\r\n  trackStack.push(shouldTrack)\r\n  shouldTrack = false\r\n}\r\n\r\nexport function enableTracking() {\r\n  trackStack.push(shouldTrack)\r\n  shouldTrack = true\r\n}\r\n\r\nexport function resetTracking() {\r\n  const last = trackStack.pop()\r\n  shouldTrack = last === undefined ? true : last\r\n}\r\n\r\nexport function track(target: object, type: TrackOpTypes, key: unknown) {\r\n  if (shouldTrack && activeEffect) {\r\n    let depsMap = targetMap.get(target)\r\n    if (!depsMap) {\r\n      targetMap.set(target, (depsMap = new Map()))\r\n    }\r\n    let dep = depsMap.get(key)\r\n    if (!dep) {\r\n      depsMap.set(key, (dep = createDep()))\r\n    }\r\n\r\n    const eventInfo = __DEV__\r\n      ? { effect: activeEffect, target, type, key }\r\n      : undefined\r\n\r\n    trackEffects(dep, eventInfo)\r\n  }\r\n}\r\n\r\nexport function trackEffects(\r\n  dep: Dep,\r\n  debuggerEventExtraInfo?: DebuggerEventExtraInfo\r\n) {\r\n  let shouldTrack = false\r\n  if (effectTrackDepth <= maxMarkerBits) {\r\n    if (!newTracked(dep)) {\r\n      dep.n |= trackOpBit // set newly tracked\r\n      shouldTrack = !wasTracked(dep)\r\n    }\r\n  } else {\r\n    // Full cleanup mode.\r\n    shouldTrack = !dep.has(activeEffect!)\r\n  }\r\n\r\n  if (shouldTrack) {\r\n    dep.add(activeEffect!)\r\n    activeEffect!.deps.push(dep)\r\n    if (__DEV__ && activeEffect!.onTrack) {\r\n      activeEffect!.onTrack({\r\n        effect: activeEffect!,\r\n        ...debuggerEventExtraInfo!\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport function trigger(\r\n  target: object,\r\n  type: TriggerOpTypes,\r\n  key?: unknown,\r\n  newValue?: unknown,\r\n  oldValue?: unknown,\r\n  oldTarget?: Map<unknown, unknown> | Set<unknown>\r\n) {\r\n  const depsMap = targetMap.get(target)\r\n  if (!depsMap) {\r\n    // never been tracked\r\n    return\r\n  }\r\n\r\n  let deps: (Dep | undefined)[] = []\r\n  if (type === TriggerOpTypes.CLEAR) {\r\n    // collection being cleared\r\n    // trigger all effects for target\r\n    deps = [...depsMap.values()]\r\n  } else if (key === 'length' && isArray(target)) {\r\n    depsMap.forEach((dep, key) => {\r\n      if (key === 'length' || key >= (newValue as number)) {\r\n        deps.push(dep)\r\n      }\r\n    })\r\n  } else {\r\n    // schedule runs for SET | ADD | DELETE\r\n    if (key !== void 0) {\r\n      deps.push(depsMap.get(key))\r\n    }\r\n\r\n    // also run for iteration key on ADD | DELETE | Map.SET\r\n    switch (type) {\r\n      case TriggerOpTypes.ADD:\r\n        if (!isArray(target)) {\r\n          deps.push(depsMap.get(ITERATE_KEY))\r\n          if (isMap(target)) {\r\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY))\r\n          }\r\n        } else if (isIntegerKey(key)) {\r\n          // new index added to array -> length changes\r\n          deps.push(depsMap.get('length'))\r\n        }\r\n        break\r\n      case TriggerOpTypes.DELETE:\r\n        if (!isArray(target)) {\r\n          deps.push(depsMap.get(ITERATE_KEY))\r\n          if (isMap(target)) {\r\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY))\r\n          }\r\n        }\r\n        break\r\n      case TriggerOpTypes.SET:\r\n        if (isMap(target)) {\r\n          deps.push(depsMap.get(ITERATE_KEY))\r\n        }\r\n        break\r\n    }\r\n  }\r\n\r\n  const eventInfo = __DEV__\r\n    ? { target, type, key, newValue, oldValue, oldTarget }\r\n    : undefined\r\n\r\n  if (deps.length === 1) {\r\n    if (deps[0]) {\r\n      if (__DEV__) {\r\n        triggerEffects(deps[0], eventInfo)\r\n      } else {\r\n        triggerEffects(deps[0])\r\n      }\r\n    }\r\n  } else {\r\n    const effects: ReactiveEffect[] = []\r\n    for (const dep of deps) {\r\n      if (dep) {\r\n        effects.push(...dep)\r\n      }\r\n    }\r\n    if (__DEV__) {\r\n      triggerEffects(createDep(effects), eventInfo)\r\n    } else {\r\n      triggerEffects(createDep(effects))\r\n    }\r\n  }\r\n}\r\n\r\nexport function triggerEffects(\r\n  dep: Dep | ReactiveEffect[],\r\n  debuggerEventExtraInfo?: DebuggerEventExtraInfo\r\n) {\r\n  // spread into array for stabilization\r\n  const effects = isArray(dep) ? dep : [...dep]\r\n  for (const effect of effects) {\r\n    if (effect.computed) {\r\n      triggerEffect(effect, debuggerEventExtraInfo)\r\n    }\r\n  }\r\n  for (const effect of effects) {\r\n    if (!effect.computed) {\r\n      triggerEffect(effect, debuggerEventExtraInfo)\r\n    }\r\n  }\r\n}\r\n\r\nfunction triggerEffect(\r\n  effect: ReactiveEffect,\r\n  debuggerEventExtraInfo?: DebuggerEventExtraInfo\r\n) {\r\n  if (effect !== activeEffect || effect.allowRecurse) {\r\n    if (__DEV__ && effect.onTrigger) {\r\n      effect.onTrigger(extend({ effect }, debuggerEventExtraInfo))\r\n    }\r\n    if (effect.scheduler) {\r\n      effect.scheduler()\r\n    } else {\r\n      effect.run()\r\n    }\r\n  }\r\n}\r\n","import {\r\n  reactive,\r\n  readonly,\r\n  toRaw,\r\n  ReactiveFlags,\r\n  Target,\r\n  readonlyMap,\r\n  reactiveMap,\r\n  shallowReactiveMap,\r\n  shallowReadonlyMap,\r\n  isReadonly,\r\n  isShallow\r\n} from './reactive'\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport {\r\n  track,\r\n  trigger,\r\n  ITERATE_KEY,\r\n  pauseTracking,\r\n  resetTracking\r\n} from './effect'\r\nimport {\r\n  isObject,\r\n  hasOwn,\r\n  isSymbol,\r\n  hasChanged,\r\n  isArray,\r\n  isIntegerKey,\r\n  extend,\r\n  makeMap\r\n} from '@vue/shared'\r\nimport { isRef } from './ref'\r\nimport { warn } from './warning'\r\n\r\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`)\r\n\r\nconst builtInSymbols = new Set(\r\n  /*#__PURE__*/\r\n  Object.getOwnPropertyNames(Symbol)\r\n    // ios10.x Object.getOwnPropertyNames(Symbol) can enumerate 'arguments' and 'caller'\r\n    // but accessing them on Symbol leads to TypeError because Symbol is a strict mode\r\n    // function\r\n    .filter(key => key !== 'arguments' && key !== 'caller')\r\n    .map(key => (Symbol as any)[key])\r\n    .filter(isSymbol)\r\n)\r\n\r\nconst get = /*#__PURE__*/ createGetter()\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true)\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true)\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true)\r\n\r\nconst arrayInstrumentations = /*#__PURE__*/ createArrayInstrumentations()\r\n\r\nfunction createArrayInstrumentations() {\r\n  const instrumentations: Record<string, Function> = {}\r\n  // instrument identity-sensitive Array methods to account for possible reactive\r\n  // values\r\n  ;(['includes', 'indexOf', 'lastIndexOf'] as const).forEach(key => {\r\n    instrumentations[key] = function (this: unknown[], ...args: unknown[]) {\r\n      const arr = toRaw(this) as any\r\n      for (let i = 0, l = this.length; i < l; i++) {\r\n        track(arr, TrackOpTypes.GET, i + '')\r\n      }\r\n      // we run the method using the original args first (which may be reactive)\r\n      const res = arr[key](...args)\r\n      if (res === -1 || res === false) {\r\n        // if that didn't work, run it again using raw values.\r\n        return arr[key](...args.map(toRaw))\r\n      } else {\r\n        return res\r\n      }\r\n    }\r\n  })\r\n  // instrument length-altering mutation methods to avoid length being tracked\r\n  // which leads to infinite loops in some cases (#2137)\r\n  ;(['push', 'pop', 'shift', 'unshift', 'splice'] as const).forEach(key => {\r\n    instrumentations[key] = function (this: unknown[], ...args: unknown[]) {\r\n      pauseTracking()\r\n      const res = (toRaw(this) as any)[key].apply(this, args)\r\n      resetTracking()\r\n      return res\r\n    }\r\n  })\r\n  return instrumentations\r\n}\r\n\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n  return function get(target: Target, key: string | symbol, receiver: object) {\r\n    if (key === ReactiveFlags.IS_REACTIVE) {\r\n      return !isReadonly\r\n    } else if (key === ReactiveFlags.IS_READONLY) {\r\n      return isReadonly\r\n    } else if (key === ReactiveFlags.IS_SHALLOW) {\r\n      return shallow\r\n    } else if (\r\n      key === ReactiveFlags.RAW &&\r\n      receiver ===\r\n        (isReadonly\r\n          ? shallow\r\n            ? shallowReadonlyMap\r\n            : readonlyMap\r\n          : shallow\r\n          ? shallowReactiveMap\r\n          : reactiveMap\r\n        ).get(target)\r\n    ) {\r\n      return target\r\n    }\r\n\r\n    const targetIsArray = isArray(target)\r\n\r\n    if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n      return Reflect.get(arrayInstrumentations, key, receiver)\r\n    }\r\n\r\n    const res = Reflect.get(target, key, receiver)\r\n\r\n    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\r\n      return res\r\n    }\r\n\r\n    if (!isReadonly) {\r\n      track(target, TrackOpTypes.GET, key)\r\n    }\r\n\r\n    if (shallow) {\r\n      return res\r\n    }\r\n\r\n    if (isRef(res)) {\r\n      // ref unwrapping - skip unwrap for Array + integer key.\r\n      return targetIsArray && isIntegerKey(key) ? res : res.value\r\n    }\r\n\r\n    if (isObject(res)) {\r\n      // Convert returned value into a proxy as well. we do the isObject check\r\n      // here to avoid invalid value warning. Also need to lazy access readonly\r\n      // and reactive here to avoid circular dependency.\r\n      return isReadonly ? readonly(res) : reactive(res)\r\n    }\r\n\r\n    return res\r\n  }\r\n}\r\n\r\nconst set = /*#__PURE__*/ createSetter()\r\nconst shallowSet = /*#__PURE__*/ createSetter(true)\r\n\r\nfunction createSetter(shallow = false) {\r\n  return function set(\r\n    target: object,\r\n    key: string | symbol,\r\n    value: unknown,\r\n    receiver: object\r\n  ): boolean {\r\n    let oldValue = (target as any)[key]\r\n    if (isReadonly(oldValue) && isRef(oldValue) && !isRef(value)) {\r\n      return false\r\n    }\r\n    if (!shallow) {\r\n      if (!isShallow(value) && !isReadonly(value)) {\r\n        oldValue = toRaw(oldValue)\r\n        value = toRaw(value)\r\n      }\r\n      if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n        oldValue.value = value\r\n        return true\r\n      }\r\n    } else {\r\n      // in shallow mode, objects are set as-is regardless of reactive or not\r\n    }\r\n\r\n    const hadKey =\r\n      isArray(target) && isIntegerKey(key)\r\n        ? Number(key) < target.length\r\n        : hasOwn(target, key)\r\n    const result = Reflect.set(target, key, value, receiver)\r\n    // don't trigger if target is something up in the prototype chain of original\r\n    if (target === toRaw(receiver)) {\r\n      if (!hadKey) {\r\n        trigger(target, TriggerOpTypes.ADD, key, value)\r\n      } else if (hasChanged(value, oldValue)) {\r\n        trigger(target, TriggerOpTypes.SET, key, value, oldValue)\r\n      }\r\n    }\r\n    return result\r\n  }\r\n}\r\n\r\nfunction deleteProperty(target: object, key: string | symbol): boolean {\r\n  const hadKey = hasOwn(target, key)\r\n  const oldValue = (target as any)[key]\r\n  const result = Reflect.deleteProperty(target, key)\r\n  if (result && hadKey) {\r\n    trigger(target, TriggerOpTypes.DELETE, key, undefined, oldValue)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction has(target: object, key: string | symbol): boolean {\r\n  const result = Reflect.has(target, key)\r\n  if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n    track(target, TrackOpTypes.HAS, key)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction ownKeys(target: object): (string | symbol)[] {\r\n  track(target, TrackOpTypes.ITERATE, isArray(target) ? 'length' : ITERATE_KEY)\r\n  return Reflect.ownKeys(target)\r\n}\r\n\r\nexport const mutableHandlers: ProxyHandler<object> = {\r\n  get,\r\n  set,\r\n  deleteProperty,\r\n  has,\r\n  ownKeys\r\n}\r\n\r\nexport const readonlyHandlers: ProxyHandler<object> = {\r\n  get: readonlyGet,\r\n  set(target, key) {\r\n    if (__DEV__) {\r\n      warn(\r\n        `Set operation on key \"${String(key)}\" failed: target is readonly.`,\r\n        target\r\n      )\r\n    }\r\n    return true\r\n  },\r\n  deleteProperty(target, key) {\r\n    if (__DEV__) {\r\n      warn(\r\n        `Delete operation on key \"${String(key)}\" failed: target is readonly.`,\r\n        target\r\n      )\r\n    }\r\n    return true\r\n  }\r\n}\r\n\r\nexport const shallowReactiveHandlers = /*#__PURE__*/ extend(\r\n  {},\r\n  mutableHandlers,\r\n  {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n  }\r\n)\r\n\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nexport const shallowReadonlyHandlers = /*#__PURE__*/ extend(\r\n  {},\r\n  readonlyHandlers,\r\n  {\r\n    get: shallowReadonlyGet\r\n  }\r\n)\r\n","import { toRaw, ReactiveFlags, toReactive, toReadonly } from './reactive'\r\nimport { track, trigger, ITERATE_KEY, MAP_KEY_ITERATE_KEY } from './effect'\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport { capitalize, hasOwn, hasChanged, toRawType, isMap } from '@vue/shared'\r\n\r\nexport type CollectionTypes = IterableCollections | WeakCollections\r\n\r\ntype IterableCollections = Map<any, any> | Set<any>\r\ntype WeakCollections = WeakMap<any, any> | WeakSet<any>\r\ntype MapTypes = Map<any, any> | WeakMap<any, any>\r\ntype SetTypes = Set<any> | WeakSet<any>\r\n\r\nconst toShallow = <T extends unknown>(value: T): T => value\r\n\r\nconst getProto = <T extends CollectionTypes>(v: T): any =>\r\n  Reflect.getPrototypeOf(v)\r\n\r\nfunction get(\r\n  target: MapTypes,\r\n  key: unknown,\r\n  isReadonly = false,\r\n  isShallow = false\r\n) {\r\n  // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n  // of the value\r\n  target = (target as any)[ReactiveFlags.RAW]\r\n  const rawTarget = toRaw(target)\r\n  const rawKey = toRaw(key)\r\n  if (!isReadonly) {\r\n    if (key !== rawKey) {\r\n      track(rawTarget, TrackOpTypes.GET, key)\r\n    }\r\n    track(rawTarget, TrackOpTypes.GET, rawKey)\r\n  }\r\n  const { has } = getProto(rawTarget)\r\n  const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\r\n  if (has.call(rawTarget, key)) {\r\n    return wrap(target.get(key))\r\n  } else if (has.call(rawTarget, rawKey)) {\r\n    return wrap(target.get(rawKey))\r\n  } else if (target !== rawTarget) {\r\n    // #3602 readonly(reactive(Map))\r\n    // ensure that the nested reactive `Map` can do tracking for itself\r\n    target.get(key)\r\n  }\r\n}\r\n\r\nfunction has(this: CollectionTypes, key: unknown, isReadonly = false): boolean {\r\n  const target = (this as any)[ReactiveFlags.RAW]\r\n  const rawTarget = toRaw(target)\r\n  const rawKey = toRaw(key)\r\n  if (!isReadonly) {\r\n    if (key !== rawKey) {\r\n      track(rawTarget, TrackOpTypes.HAS, key)\r\n    }\r\n    track(rawTarget, TrackOpTypes.HAS, rawKey)\r\n  }\r\n  return key === rawKey\r\n    ? target.has(key)\r\n    : target.has(key) || target.has(rawKey)\r\n}\r\n\r\nfunction size(target: IterableCollections, isReadonly = false) {\r\n  target = (target as any)[ReactiveFlags.RAW]\r\n  !isReadonly && track(toRaw(target), TrackOpTypes.ITERATE, ITERATE_KEY)\r\n  return Reflect.get(target, 'size', target)\r\n}\r\n\r\nfunction add(this: SetTypes, value: unknown) {\r\n  value = toRaw(value)\r\n  const target = toRaw(this)\r\n  const proto = getProto(target)\r\n  const hadKey = proto.has.call(target, value)\r\n  if (!hadKey) {\r\n    target.add(value)\r\n    trigger(target, TriggerOpTypes.ADD, value, value)\r\n  }\r\n  return this\r\n}\r\n\r\nfunction set(this: MapTypes, key: unknown, value: unknown) {\r\n  value = toRaw(value)\r\n  const target = toRaw(this)\r\n  const { has, get } = getProto(target)\r\n\r\n  let hadKey = has.call(target, key)\r\n  if (!hadKey) {\r\n    key = toRaw(key)\r\n    hadKey = has.call(target, key)\r\n  } else if (__DEV__) {\r\n    checkIdentityKeys(target, has, key)\r\n  }\r\n\r\n  const oldValue = get.call(target, key)\r\n  target.set(key, value)\r\n  if (!hadKey) {\r\n    trigger(target, TriggerOpTypes.ADD, key, value)\r\n  } else if (hasChanged(value, oldValue)) {\r\n    trigger(target, TriggerOpTypes.SET, key, value, oldValue)\r\n  }\r\n  return this\r\n}\r\n\r\nfunction deleteEntry(this: CollectionTypes, key: unknown) {\r\n  const target = toRaw(this)\r\n  const { has, get } = getProto(target)\r\n  let hadKey = has.call(target, key)\r\n  if (!hadKey) {\r\n    key = toRaw(key)\r\n    hadKey = has.call(target, key)\r\n  } else if (__DEV__) {\r\n    checkIdentityKeys(target, has, key)\r\n  }\r\n\r\n  const oldValue = get ? get.call(target, key) : undefined\r\n  // forward the operation before queueing reactions\r\n  const result = target.delete(key)\r\n  if (hadKey) {\r\n    trigger(target, TriggerOpTypes.DELETE, key, undefined, oldValue)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction clear(this: IterableCollections) {\r\n  const target = toRaw(this)\r\n  const hadItems = target.size !== 0\r\n  const oldTarget = __DEV__\r\n    ? isMap(target)\r\n      ? new Map(target)\r\n      : new Set(target)\r\n    : undefined\r\n  // forward the operation before queueing reactions\r\n  const result = target.clear()\r\n  if (hadItems) {\r\n    trigger(target, TriggerOpTypes.CLEAR, undefined, undefined, oldTarget)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction createForEach(isReadonly: boolean, isShallow: boolean) {\r\n  return function forEach(\r\n    this: IterableCollections,\r\n    callback: Function,\r\n    thisArg?: unknown\r\n  ) {\r\n    const observed = this as any\r\n    const target = observed[ReactiveFlags.RAW]\r\n    const rawTarget = toRaw(target)\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\r\n    !isReadonly && track(rawTarget, TrackOpTypes.ITERATE, ITERATE_KEY)\r\n    return target.forEach((value: unknown, key: unknown) => {\r\n      // important: make sure the callback is\r\n      // 1. invoked with the reactive map as `this` and 3rd arg\r\n      // 2. the value received should be a corresponding reactive/readonly.\r\n      return callback.call(thisArg, wrap(value), wrap(key), observed)\r\n    })\r\n  }\r\n}\r\n\r\ninterface Iterable {\r\n  [Symbol.iterator](): Iterator\r\n}\r\n\r\ninterface Iterator {\r\n  next(value?: any): IterationResult\r\n}\r\n\r\ninterface IterationResult {\r\n  value: any\r\n  done: boolean\r\n}\r\n\r\nfunction createIterableMethod(\r\n  method: string | symbol,\r\n  isReadonly: boolean,\r\n  isShallow: boolean\r\n) {\r\n  return function (\r\n    this: IterableCollections,\r\n    ...args: unknown[]\r\n  ): Iterable & Iterator {\r\n    const target = (this as any)[ReactiveFlags.RAW]\r\n    const rawTarget = toRaw(target)\r\n    const targetIsMap = isMap(rawTarget)\r\n    const isPair =\r\n      method === 'entries' || (method === Symbol.iterator && targetIsMap)\r\n    const isKeyOnly = method === 'keys' && targetIsMap\r\n    const innerIterator = target[method](...args)\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\r\n    !isReadonly &&\r\n      track(\r\n        rawTarget,\r\n        TrackOpTypes.ITERATE,\r\n        isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY\r\n      )\r\n    // return a wrapped iterator which returns observed versions of the\r\n    // values emitted from the real iterator\r\n    return {\r\n      // iterator protocol\r\n      next() {\r\n        const { value, done } = innerIterator.next()\r\n        return done\r\n          ? { value, done }\r\n          : {\r\n              value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n              done\r\n            }\r\n      },\r\n      // iterable protocol\r\n      [Symbol.iterator]() {\r\n        return this\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction createReadonlyMethod(type: TriggerOpTypes): Function {\r\n  return function (this: CollectionTypes, ...args: unknown[]) {\r\n    if (__DEV__) {\r\n      const key = args[0] ? `on key \"${args[0]}\" ` : ``\r\n      console.warn(\r\n        `${capitalize(type)} operation ${key}failed: target is readonly.`,\r\n        toRaw(this)\r\n      )\r\n    }\r\n    return type === TriggerOpTypes.DELETE ? false : this\r\n  }\r\n}\r\n\r\nfunction createInstrumentations() {\r\n  const mutableInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections)\r\n    },\r\n    has,\r\n    add,\r\n    set,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n  }\r\n\r\n  const shallowInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key, false, true)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections)\r\n    },\r\n    has,\r\n    add,\r\n    set,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n  }\r\n\r\n  const readonlyInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key, true)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections, true)\r\n    },\r\n    has(this: MapTypes, key: unknown) {\r\n      return has.call(this, key, true)\r\n    },\r\n    add: createReadonlyMethod(TriggerOpTypes.ADD),\r\n    set: createReadonlyMethod(TriggerOpTypes.SET),\r\n    delete: createReadonlyMethod(TriggerOpTypes.DELETE),\r\n    clear: createReadonlyMethod(TriggerOpTypes.CLEAR),\r\n    forEach: createForEach(true, false)\r\n  }\r\n\r\n  const shallowReadonlyInstrumentations: Record<string, Function> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key, true, true)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections, true)\r\n    },\r\n    has(this: MapTypes, key: unknown) {\r\n      return has.call(this, key, true)\r\n    },\r\n    add: createReadonlyMethod(TriggerOpTypes.ADD),\r\n    set: createReadonlyMethod(TriggerOpTypes.SET),\r\n    delete: createReadonlyMethod(TriggerOpTypes.DELETE),\r\n    clear: createReadonlyMethod(TriggerOpTypes.CLEAR),\r\n    forEach: createForEach(true, true)\r\n  }\r\n\r\n  const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator]\r\n  iteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      false,\r\n      false\r\n    )\r\n    readonlyInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      true,\r\n      false\r\n    )\r\n    shallowInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      false,\r\n      true\r\n    )\r\n    shallowReadonlyInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      true,\r\n      true\r\n    )\r\n  })\r\n\r\n  return [\r\n    mutableInstrumentations,\r\n    readonlyInstrumentations,\r\n    shallowInstrumentations,\r\n    shallowReadonlyInstrumentations\r\n  ]\r\n}\r\n\r\nconst [\r\n  mutableInstrumentations,\r\n  readonlyInstrumentations,\r\n  shallowInstrumentations,\r\n  shallowReadonlyInstrumentations\r\n] = /* #__PURE__*/ createInstrumentations()\r\n\r\nfunction createInstrumentationGetter(isReadonly: boolean, shallow: boolean) {\r\n  const instrumentations = shallow\r\n    ? isReadonly\r\n      ? shallowReadonlyInstrumentations\r\n      : shallowInstrumentations\r\n    : isReadonly\r\n    ? readonlyInstrumentations\r\n    : mutableInstrumentations\r\n\r\n  return (\r\n    target: CollectionTypes,\r\n    key: string | symbol,\r\n    receiver: CollectionTypes\r\n  ) => {\r\n    if (key === ReactiveFlags.IS_REACTIVE) {\r\n      return !isReadonly\r\n    } else if (key === ReactiveFlags.IS_READONLY) {\r\n      return isReadonly\r\n    } else if (key === ReactiveFlags.RAW) {\r\n      return target\r\n    }\r\n\r\n    return Reflect.get(\r\n      hasOwn(instrumentations, key) && key in target\r\n        ? instrumentations\r\n        : target,\r\n      key,\r\n      receiver\r\n    )\r\n  }\r\n}\r\n\r\nexport const mutableCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: /*#__PURE__*/ createInstrumentationGetter(false, false)\r\n}\r\n\r\nexport const shallowCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: /*#__PURE__*/ createInstrumentationGetter(false, true)\r\n}\r\n\r\nexport const readonlyCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: /*#__PURE__*/ createInstrumentationGetter(true, false)\r\n}\r\n\r\nexport const shallowReadonlyCollectionHandlers: ProxyHandler<CollectionTypes> =\r\n  {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, true)\r\n  }\r\n\r\nfunction checkIdentityKeys(\r\n  target: CollectionTypes,\r\n  has: (key: unknown) => boolean,\r\n  key: unknown\r\n) {\r\n  const rawKey = toRaw(key)\r\n  if (rawKey !== key && has.call(target, rawKey)) {\r\n    const type = toRawType(target)\r\n    console.warn(\r\n      `Reactive ${type} contains both the raw and reactive ` +\r\n        `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n        `which can lead to inconsistencies. ` +\r\n        `Avoid differentiating between the raw and reactive versions ` +\r\n        `of an object and only use the reactive version if possible.`\r\n    )\r\n  }\r\n}\r\n","import { isObject, toRawType, def } from '@vue/shared'\r\nimport {\r\n  mutableHandlers,\r\n  readonlyHandlers,\r\n  shallowReactiveHandlers,\r\n  shallowReadonlyHandlers\r\n} from './baseHandlers'\r\nimport {\r\n  mutableCollectionHandlers,\r\n  readonlyCollectionHandlers,\r\n  shallowCollectionHandlers,\r\n  shallowReadonlyCollectionHandlers\r\n} from './collectionHandlers'\r\nimport type { UnwrapRefSimple, Ref, RawSymbol } from './ref'\r\n\r\nexport const enum ReactiveFlags {\r\n  SKIP = '__v_skip',\r\n  IS_REACTIVE = '__v_isReactive',\r\n  IS_READONLY = '__v_isReadonly',\r\n  IS_SHALLOW = '__v_isShallow',\r\n  RAW = '__v_raw'\r\n}\r\n\r\nexport interface Target {\r\n  [ReactiveFlags.SKIP]?: boolean\r\n  [ReactiveFlags.IS_REACTIVE]?: boolean\r\n  [ReactiveFlags.IS_READONLY]?: boolean\r\n  [ReactiveFlags.IS_SHALLOW]?: boolean\r\n  [ReactiveFlags.RAW]?: any\r\n}\r\n\r\nexport const reactiveMap = new WeakMap<Target, any>()\r\nexport const shallowReactiveMap = new WeakMap<Target, any>()\r\nexport const readonlyMap = new WeakMap<Target, any>()\r\nexport const shallowReadonlyMap = new WeakMap<Target, any>()\r\n\r\nconst enum TargetType {\r\n  INVALID = 0,\r\n  COMMON = 1,\r\n  COLLECTION = 2\r\n}\r\n\r\nfunction targetTypeMap(rawType: string) {\r\n  switch (rawType) {\r\n    case 'Object':\r\n    case 'Array':\r\n      return TargetType.COMMON\r\n    case 'Map':\r\n    case 'Set':\r\n    case 'WeakMap':\r\n    case 'WeakSet':\r\n      return TargetType.COLLECTION\r\n    default:\r\n      return TargetType.INVALID\r\n  }\r\n}\r\n\r\nfunction getTargetType(value: Target) {\r\n  return value[ReactiveFlags.SKIP] || !Object.isExtensible(value)\r\n    ? TargetType.INVALID\r\n    : targetTypeMap(toRawType(value))\r\n}\r\n\r\n// only unwrap nested ref\r\nexport type UnwrapNestedRefs<T> = T extends Ref ? T : UnwrapRefSimple<T>\r\n\r\n/**\r\n * Creates a reactive copy of the original object.\r\n *\r\n * The reactive conversion is \"deep\"—it affects all nested properties. In the\r\n * ES2015 Proxy based implementation, the returned proxy is **not** equal to the\r\n * original object. It is recommended to work exclusively with the reactive\r\n * proxy and avoid relying on the original object.\r\n *\r\n * A reactive object also automatically unwraps refs contained in it, so you\r\n * don't need to use `.value` when accessing and mutating their value:\r\n *\r\n * ```js\r\n * const count = ref(0)\r\n * const obj = reactive({\r\n *   count\r\n * })\r\n *\r\n * obj.count++\r\n * obj.count // -> 1\r\n * count.value // -> 1\r\n * ```\r\n */\r\nexport function reactive<T extends object>(target: T): UnwrapNestedRefs<T>\r\nexport function reactive(target: object) {\r\n  // if trying to observe a readonly proxy, return the readonly version.\r\n  if (isReadonly(target)) {\r\n    return target\r\n  }\r\n  return createReactiveObject(\r\n    target,\r\n    false,\r\n    mutableHandlers,\r\n    mutableCollectionHandlers,\r\n    reactiveMap\r\n  )\r\n}\r\n\r\nexport declare const ShallowReactiveMarker: unique symbol\r\n\r\nexport type ShallowReactive<T> = T & { [ShallowReactiveMarker]?: true }\r\n\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nexport function shallowReactive<T extends object>(\r\n  target: T\r\n): ShallowReactive<T> {\r\n  return createReactiveObject(\r\n    target,\r\n    false,\r\n    shallowReactiveHandlers,\r\n    shallowCollectionHandlers,\r\n    shallowReactiveMap\r\n  )\r\n}\r\n\r\ntype Primitive = string | number | boolean | bigint | symbol | undefined | null\r\ntype Builtin = Primitive | Function | Date | Error | RegExp\r\nexport type DeepReadonly<T> = T extends Builtin\r\n  ? T\r\n  : T extends Map<infer K, infer V>\r\n  ? ReadonlyMap<DeepReadonly<K>, DeepReadonly<V>>\r\n  : T extends ReadonlyMap<infer K, infer V>\r\n  ? ReadonlyMap<DeepReadonly<K>, DeepReadonly<V>>\r\n  : T extends WeakMap<infer K, infer V>\r\n  ? WeakMap<DeepReadonly<K>, DeepReadonly<V>>\r\n  : T extends Set<infer U>\r\n  ? ReadonlySet<DeepReadonly<U>>\r\n  : T extends ReadonlySet<infer U>\r\n  ? ReadonlySet<DeepReadonly<U>>\r\n  : T extends WeakSet<infer U>\r\n  ? WeakSet<DeepReadonly<U>>\r\n  : T extends Promise<infer U>\r\n  ? Promise<DeepReadonly<U>>\r\n  : T extends Ref<infer U>\r\n  ? Readonly<Ref<DeepReadonly<U>>>\r\n  : T extends {}\r\n  ? { readonly [K in keyof T]: DeepReadonly<T[K]> }\r\n  : Readonly<T>\r\n\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nexport function readonly<T extends object>(\r\n  target: T\r\n): DeepReadonly<UnwrapNestedRefs<T>> {\r\n  return createReactiveObject(\r\n    target,\r\n    true,\r\n    readonlyHandlers,\r\n    readonlyCollectionHandlers,\r\n    readonlyMap\r\n  )\r\n}\r\n\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nexport function shallowReadonly<T extends object>(target: T): Readonly<T> {\r\n  return createReactiveObject(\r\n    target,\r\n    true,\r\n    shallowReadonlyHandlers,\r\n    shallowReadonlyCollectionHandlers,\r\n    shallowReadonlyMap\r\n  )\r\n}\r\n\r\nfunction createReactiveObject(\r\n  target: Target,\r\n  isReadonly: boolean,\r\n  baseHandlers: ProxyHandler<any>,\r\n  collectionHandlers: ProxyHandler<any>,\r\n  proxyMap: WeakMap<Target, any>\r\n) {\r\n  if (!isObject(target)) {\r\n    if (__DEV__) {\r\n      console.warn(`value cannot be made reactive: ${String(target)}`)\r\n    }\r\n    return target\r\n  }\r\n  // target is already a Proxy, return it.\r\n  // exception: calling readonly() on a reactive object\r\n  if (\r\n    target[ReactiveFlags.RAW] &&\r\n    !(isReadonly && target[ReactiveFlags.IS_REACTIVE])\r\n  ) {\r\n    return target\r\n  }\r\n  // target already has corresponding Proxy\r\n  const existingProxy = proxyMap.get(target)\r\n  if (existingProxy) {\r\n    return existingProxy\r\n  }\r\n  // only specific value types can be observed.\r\n  const targetType = getTargetType(target)\r\n  if (targetType === TargetType.INVALID) {\r\n    return target\r\n  }\r\n  const proxy = new Proxy(\r\n    target,\r\n    targetType === TargetType.COLLECTION ? collectionHandlers : baseHandlers\r\n  )\r\n  proxyMap.set(target, proxy)\r\n  return proxy\r\n}\r\n\r\nexport function isReactive(value: unknown): boolean {\r\n  if (isReadonly(value)) {\r\n    return isReactive((value as Target)[ReactiveFlags.RAW])\r\n  }\r\n  return !!(value && (value as Target)[ReactiveFlags.IS_REACTIVE])\r\n}\r\n\r\nexport function isReadonly(value: unknown): boolean {\r\n  return !!(value && (value as Target)[ReactiveFlags.IS_READONLY])\r\n}\r\n\r\nexport function isShallow(value: unknown): boolean {\r\n  return !!(value && (value as Target)[ReactiveFlags.IS_SHALLOW])\r\n}\r\n\r\nexport function isProxy(value: unknown): boolean {\r\n  return isReactive(value) || isReadonly(value)\r\n}\r\n\r\nexport function toRaw<T>(observed: T): T {\r\n  const raw = observed && (observed as Target)[ReactiveFlags.RAW]\r\n  return raw ? toRaw(raw) : observed\r\n}\r\n\r\nexport function markRaw<T extends object>(\r\n  value: T\r\n): T & { [RawSymbol]?: true } {\r\n  def(value, ReactiveFlags.SKIP, true)\r\n  return value\r\n}\r\n\r\nexport const toReactive = <T extends unknown>(value: T): T =>\r\n  isObject(value) ? reactive(value) : value\r\n\r\nexport const toReadonly = <T extends unknown>(value: T): T =>\r\n  isObject(value) ? readonly(value as Record<any, any>) : value\r\n","import {\r\n  activeEffect,\r\n  shouldTrack,\r\n  trackEffects,\r\n  triggerEffects\r\n} from './effect'\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport { isArray, hasChanged, IfAny } from '@vue/shared'\r\nimport {\r\n  isProxy,\r\n  toRaw,\r\n  isReactive,\r\n  toReactive,\r\n  isReadonly,\r\n  isShallow\r\n} from './reactive'\r\nimport type { ShallowReactiveMarker } from './reactive'\r\nimport { CollectionTypes } from './collectionHandlers'\r\nimport { createDep, Dep } from './dep'\r\n\r\ndeclare const RefSymbol: unique symbol\r\nexport declare const RawSymbol: unique symbol\r\n\r\nexport interface Ref<T = any> {\r\n  value: T\r\n  /**\r\n   * Type differentiator only.\r\n   * We need this to be in public d.ts but don't want it to show up in IDE\r\n   * autocomplete, so we use a private Symbol instead.\r\n   */\r\n  [RefSymbol]: true\r\n}\r\n\r\ntype RefBase<T> = {\r\n  dep?: Dep\r\n  value: T\r\n}\r\n\r\nexport function trackRefValue(ref: RefBase<any>) {\r\n  if (shouldTrack && activeEffect) {\r\n    ref = toRaw(ref)\r\n    if (__DEV__) {\r\n      trackEffects(ref.dep || (ref.dep = createDep()), {\r\n        target: ref,\r\n        type: TrackOpTypes.GET,\r\n        key: 'value'\r\n      })\r\n    } else {\r\n      trackEffects(ref.dep || (ref.dep = createDep()))\r\n    }\r\n  }\r\n}\r\n\r\nexport function triggerRefValue(ref: RefBase<any>, newVal?: any) {\r\n  ref = toRaw(ref)\r\n  if (ref.dep) {\r\n    if (__DEV__) {\r\n      triggerEffects(ref.dep, {\r\n        target: ref,\r\n        type: TriggerOpTypes.SET,\r\n        key: 'value',\r\n        newValue: newVal\r\n      })\r\n    } else {\r\n      triggerEffects(ref.dep)\r\n    }\r\n  }\r\n}\r\n\r\nexport function isRef<T>(r: Ref<T> | unknown): r is Ref<T>\r\nexport function isRef(r: any): r is Ref {\r\n  return !!(r && r.__v_isRef === true)\r\n}\r\n\r\nexport function ref<T extends object>(\r\n  value: T\r\n): [T] extends [Ref] ? T : Ref<UnwrapRef<T>>\r\nexport function ref<T>(value: T): Ref<UnwrapRef<T>>\r\nexport function ref<T = any>(): Ref<T | undefined>\r\nexport function ref(value?: unknown) {\r\n  return createRef(value, false)\r\n}\r\n\r\ndeclare const ShallowRefMarker: unique symbol\r\n\r\nexport type ShallowRef<T = any> = Ref<T> & { [ShallowRefMarker]?: true }\r\n\r\nexport function shallowRef<T extends object>(\r\n  value: T\r\n): T extends Ref ? T : ShallowRef<T>\r\nexport function shallowRef<T>(value: T): ShallowRef<T>\r\nexport function shallowRef<T = any>(): ShallowRef<T | undefined>\r\nexport function shallowRef(value?: unknown) {\r\n  return createRef(value, true)\r\n}\r\n\r\nfunction createRef(rawValue: unknown, shallow: boolean) {\r\n  if (isRef(rawValue)) {\r\n    return rawValue\r\n  }\r\n  return new RefImpl(rawValue, shallow)\r\n}\r\n\r\nclass RefImpl<T> {\r\n  private _value: T\r\n  private _rawValue: T\r\n\r\n  public dep?: Dep = undefined\r\n  public readonly __v_isRef = true\r\n\r\n  constructor(value: T, public readonly __v_isShallow: boolean) {\r\n    this._rawValue = __v_isShallow ? value : toRaw(value)\r\n    this._value = __v_isShallow ? value : toReactive(value)\r\n  }\r\n\r\n  get value() {\r\n    trackRefValue(this)\r\n    return this._value\r\n  }\r\n\r\n  set value(newVal) {\r\n    const useDirectValue =\r\n      this.__v_isShallow || isShallow(newVal) || isReadonly(newVal)\r\n    newVal = useDirectValue ? newVal : toRaw(newVal)\r\n    if (hasChanged(newVal, this._rawValue)) {\r\n      this._rawValue = newVal\r\n      this._value = useDirectValue ? newVal : toReactive(newVal)\r\n      triggerRefValue(this, newVal)\r\n    }\r\n  }\r\n}\r\n\r\nexport function triggerRef(ref: Ref) {\r\n  triggerRefValue(ref, __DEV__ ? ref.value : void 0)\r\n}\r\n\r\nexport function unref<T>(ref: T | Ref<T>): T {\r\n  return isRef(ref) ? (ref.value as any) : ref\r\n}\r\n\r\nconst shallowUnwrapHandlers: ProxyHandler<any> = {\r\n  get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n  set: (target, key, value, receiver) => {\r\n    const oldValue = target[key]\r\n    if (isRef(oldValue) && !isRef(value)) {\r\n      oldValue.value = value\r\n      return true\r\n    } else {\r\n      return Reflect.set(target, key, value, receiver)\r\n    }\r\n  }\r\n}\r\n\r\nexport function proxyRefs<T extends object>(\r\n  objectWithRefs: T\r\n): ShallowUnwrapRef<T> {\r\n  return isReactive(objectWithRefs)\r\n    ? objectWithRefs\r\n    : new Proxy(objectWithRefs, shallowUnwrapHandlers)\r\n}\r\n\r\nexport type CustomRefFactory<T> = (\r\n  track: () => void,\r\n  trigger: () => void\r\n) => {\r\n  get: () => T\r\n  set: (value: T) => void\r\n}\r\n\r\nclass CustomRefImpl<T> {\r\n  public dep?: Dep = undefined\r\n\r\n  private readonly _get: ReturnType<CustomRefFactory<T>>['get']\r\n  private readonly _set: ReturnType<CustomRefFactory<T>>['set']\r\n\r\n  public readonly __v_isRef = true\r\n\r\n  constructor(factory: CustomRefFactory<T>) {\r\n    const { get, set } = factory(\r\n      () => trackRefValue(this),\r\n      () => triggerRefValue(this)\r\n    )\r\n    this._get = get\r\n    this._set = set\r\n  }\r\n\r\n  get value() {\r\n    return this._get()\r\n  }\r\n\r\n  set value(newVal) {\r\n    this._set(newVal)\r\n  }\r\n}\r\n\r\nexport function customRef<T>(factory: CustomRefFactory<T>): Ref<T> {\r\n  return new CustomRefImpl(factory) as any\r\n}\r\n\r\nexport type ToRefs<T = any> = {\r\n  [K in keyof T]: ToRef<T[K]>\r\n}\r\nexport function toRefs<T extends object>(object: T): ToRefs<T> {\r\n  if (__DEV__ && !isProxy(object)) {\r\n    console.warn(`toRefs() expects a reactive object but received a plain one.`)\r\n  }\r\n  const ret: any = isArray(object) ? new Array(object.length) : {}\r\n  for (const key in object) {\r\n    ret[key] = toRef(object, key)\r\n  }\r\n  return ret\r\n}\r\n\r\nclass ObjectRefImpl<T extends object, K extends keyof T> {\r\n  public readonly __v_isRef = true\r\n\r\n  constructor(\r\n    private readonly _object: T,\r\n    private readonly _key: K,\r\n    private readonly _defaultValue?: T[K]\r\n  ) {}\r\n\r\n  get value() {\r\n    const val = this._object[this._key]\r\n    return val === undefined ? (this._defaultValue as T[K]) : val\r\n  }\r\n\r\n  set value(newVal) {\r\n    this._object[this._key] = newVal\r\n  }\r\n}\r\n\r\nexport type ToRef<T> = IfAny<T, Ref<T>, [T] extends [Ref] ? T : Ref<T>>\r\n\r\nexport function toRef<T extends object, K extends keyof T>(\r\n  object: T,\r\n  key: K\r\n): ToRef<T[K]>\r\n\r\nexport function toRef<T extends object, K extends keyof T>(\r\n  object: T,\r\n  key: K,\r\n  defaultValue: T[K]\r\n): ToRef<Exclude<T[K], undefined>>\r\n\r\nexport function toRef<T extends object, K extends keyof T>(\r\n  object: T,\r\n  key: K,\r\n  defaultValue?: T[K]\r\n): ToRef<T[K]> {\r\n  const val = object[key]\r\n  return isRef(val)\r\n    ? val\r\n    : (new ObjectRefImpl(object, key, defaultValue) as any)\r\n}\r\n\r\n// corner case when use narrows type\r\n// Ex. type RelativePath = string & { __brand: unknown }\r\n// RelativePath extends object -> true\r\ntype BaseTypes = string | number | boolean\r\n\r\n/**\r\n * This is a special exported interface for other packages to declare\r\n * additional types that should bail out for ref unwrapping. For example\r\n * \\@vue/runtime-dom can declare it like so in its d.ts:\r\n *\r\n * ``` ts\r\n * declare module '@vue/reactivity' {\r\n *   export interface RefUnwrapBailTypes {\r\n *     runtimeDOMBailTypes: Node | Window\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * Note that api-extractor somehow refuses to include `declare module`\r\n * augmentations in its generated d.ts, so we have to manually append them\r\n * to the final generated d.ts in our build process.\r\n */\r\nexport interface RefUnwrapBailTypes {}\r\n\r\nexport type ShallowUnwrapRef<T> = {\r\n  [K in keyof T]: T[K] extends Ref<infer V>\r\n    ? V\r\n    : // if `V` is `unknown` that means it does not extend `Ref` and is undefined\r\n    T[K] extends Ref<infer V> | undefined\r\n    ? unknown extends V\r\n      ? undefined\r\n      : V | undefined\r\n    : T[K]\r\n}\r\n\r\nexport type UnwrapRef<T> = T extends ShallowRef<infer V>\r\n  ? V\r\n  : T extends Ref<infer V>\r\n  ? UnwrapRefSimple<V>\r\n  : UnwrapRefSimple<T>\r\n\r\nexport type UnwrapRefSimple<T> = T extends\r\n  | Function\r\n  | CollectionTypes\r\n  | BaseTypes\r\n  | Ref\r\n  | RefUnwrapBailTypes[keyof RefUnwrapBailTypes]\r\n  | { [RawSymbol]?: true }\r\n  ? T\r\n  : T extends Array<any>\r\n  ? { [K in keyof T]: UnwrapRefSimple<T[K]> }\r\n  : T extends object & { [ShallowReactiveMarker]?: never }\r\n  ? {\r\n      [P in keyof T]: P extends symbol ? T[P] : UnwrapRef<T[P]>\r\n    }\r\n  : T\r\n","import { DebuggerOptions, ReactiveEffect } from './effect'\r\nimport { Ref, trackRefValue, triggerRefValue } from './ref'\r\nimport { isFunction, NOOP } from '@vue/shared'\r\nimport { ReactiveFlags, toRaw } from './reactive'\r\nimport { Dep } from './dep'\r\n\r\ndeclare const ComputedRefSymbol: unique symbol\r\n\r\nexport interface ComputedRef<T = any> extends WritableComputedRef<T> {\r\n  readonly value: T\r\n  [ComputedRefSymbol]: true\r\n}\r\n\r\nexport interface WritableComputedRef<T> extends Ref<T> {\r\n  readonly effect: ReactiveEffect<T>\r\n}\r\n\r\nexport type ComputedGetter<T> = (...args: any[]) => T\r\nexport type ComputedSetter<T> = (v: T) => void\r\n\r\nexport interface WritableComputedOptions<T> {\r\n  get: ComputedGetter<T>\r\n  set: ComputedSetter<T>\r\n}\r\n\r\nexport class ComputedRefImpl<T> {\r\n  public dep?: Dep = undefined\r\n\r\n  private _value!: T\r\n  public readonly effect: ReactiveEffect<T>\r\n\r\n  public readonly __v_isRef = true\r\n  public readonly [ReactiveFlags.IS_READONLY]: boolean = false\r\n\r\n  public _dirty = true\r\n  public _cacheable: boolean\r\n\r\n  constructor(\r\n    getter: ComputedGetter<T>,\r\n    private readonly _setter: ComputedSetter<T>,\r\n    isReadonly: boolean,\r\n    isSSR: boolean\r\n  ) {\r\n    this.effect = new ReactiveEffect(getter, () => {\r\n      if (!this._dirty) {\r\n        this._dirty = true\r\n        triggerRefValue(this)\r\n      }\r\n    })\r\n    this.effect.computed = this\r\n    this.effect.active = this._cacheable = !isSSR\r\n    this[ReactiveFlags.IS_READONLY] = isReadonly\r\n  }\r\n\r\n  get value() {\r\n    // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n    const self = toRaw(this)\r\n    trackRefValue(self)\r\n    if (self._dirty || !self._cacheable) {\r\n      self._dirty = false\r\n      self._value = self.effect.run()!\r\n    }\r\n    return self._value\r\n  }\r\n\r\n  set value(newValue: T) {\r\n    this._setter(newValue)\r\n  }\r\n}\r\n\r\nexport function computed<T>(\r\n  getter: ComputedGetter<T>,\r\n  debugOptions?: DebuggerOptions\r\n): ComputedRef<T>\r\nexport function computed<T>(\r\n  options: WritableComputedOptions<T>,\r\n  debugOptions?: DebuggerOptions\r\n): WritableComputedRef<T>\r\nexport function computed<T>(\r\n  getterOrOptions: ComputedGetter<T> | WritableComputedOptions<T>,\r\n  debugOptions?: DebuggerOptions,\r\n  isSSR = false\r\n) {\r\n  let getter: ComputedGetter<T>\r\n  let setter: ComputedSetter<T>\r\n\r\n  const onlyGetter = isFunction(getterOrOptions)\r\n  if (onlyGetter) {\r\n    getter = getterOrOptions\r\n    setter = __DEV__\r\n      ? () => {\r\n          console.warn('Write operation failed: computed value is readonly')\r\n        }\r\n      : NOOP\r\n  } else {\r\n    getter = getterOrOptions.get\r\n    setter = getterOrOptions.set\r\n  }\r\n\r\n  const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR)\r\n\r\n  if (__DEV__ && debugOptions && !isSSR) {\r\n    cRef.effect.onTrack = debugOptions.onTrack\r\n    cRef.effect.onTrigger = debugOptions.onTrigger\r\n  }\r\n\r\n  return cRef as any\r\n}\r\n","import { VNode } from './vnode'\r\nimport {\r\n  Data,\r\n  ComponentInternalInstance,\r\n  ConcreteComponent,\r\n  formatComponentName\r\n} from './component'\r\nimport { isString, isFunction } from '@vue/shared'\r\nimport { toRaw, isRef, pauseTracking, resetTracking } from '@vue/reactivity'\r\nimport { callWithErrorHandling, ErrorCodes } from './errorHandling'\r\n\r\ntype ComponentVNode = VNode & {\r\n  type: ConcreteComponent\r\n}\r\n\r\nconst stack: VNode[] = []\r\n\r\ntype TraceEntry = {\r\n  vnode: ComponentVNode\r\n  recurseCount: number\r\n}\r\n\r\ntype ComponentTraceStack = TraceEntry[]\r\n\r\nexport function pushWarningContext(vnode: VNode) {\r\n  stack.push(vnode)\r\n}\r\n\r\nexport function popWarningContext() {\r\n  stack.pop()\r\n}\r\n\r\nexport function warn(msg: string, ...args: any[]) {\r\n  // avoid props formatting or warn handler tracking deps that might be mutated\r\n  // during patch, leading to infinite recursion.\r\n  pauseTracking()\r\n\r\n  const instance = stack.length ? stack[stack.length - 1].component : null\r\n  const appWarnHandler = instance && instance.appContext.config.warnHandler\r\n  const trace = getComponentTrace()\r\n\r\n  if (appWarnHandler) {\r\n    callWithErrorHandling(\r\n      appWarnHandler,\r\n      instance,\r\n      ErrorCodes.APP_WARN_HANDLER,\r\n      [\r\n        msg + args.join(''),\r\n        instance && instance.proxy,\r\n        trace\r\n          .map(\r\n            ({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`\r\n          )\r\n          .join('\\n'),\r\n        trace\r\n      ]\r\n    )\r\n  } else {\r\n    const warnArgs = [`[Vue warn]: ${msg}`, ...args]\r\n    /* istanbul ignore if */\r\n    if (\r\n      trace.length &&\r\n      // avoid spamming console during tests\r\n      !__TEST__\r\n    ) {\r\n      warnArgs.push(`\\n`, ...formatTrace(trace))\r\n    }\r\n    console.warn(...warnArgs)\r\n  }\r\n\r\n  resetTracking()\r\n}\r\n\r\nexport function getComponentTrace(): ComponentTraceStack {\r\n  let currentVNode: VNode | null = stack[stack.length - 1]\r\n  if (!currentVNode) {\r\n    return []\r\n  }\r\n\r\n  // we can't just use the stack because it will be incomplete during updates\r\n  // that did not start from the root. Re-construct the parent chain using\r\n  // instance parent pointers.\r\n  const normalizedStack: ComponentTraceStack = []\r\n\r\n  while (currentVNode) {\r\n    const last = normalizedStack[0]\r\n    if (last && last.vnode === currentVNode) {\r\n      last.recurseCount++\r\n    } else {\r\n      normalizedStack.push({\r\n        vnode: currentVNode as ComponentVNode,\r\n        recurseCount: 0\r\n      })\r\n    }\r\n    const parentInstance: ComponentInternalInstance | null =\r\n      currentVNode.component && currentVNode.component.parent\r\n    currentVNode = parentInstance && parentInstance.vnode\r\n  }\r\n\r\n  return normalizedStack\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace: ComponentTraceStack): any[] {\r\n  const logs: any[] = []\r\n  trace.forEach((entry, i) => {\r\n    logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry))\r\n  })\r\n  return logs\r\n}\r\n\r\nfunction formatTraceEntry({ vnode, recurseCount }: TraceEntry): any[] {\r\n  const postfix =\r\n    recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``\r\n  const isRoot = vnode.component ? vnode.component.parent == null : false\r\n  const open = ` at <${formatComponentName(\r\n    vnode.component,\r\n    vnode.type,\r\n    isRoot\r\n  )}`\r\n  const close = `>` + postfix\r\n  return vnode.props\r\n    ? [open, ...formatProps(vnode.props), close]\r\n    : [open + close]\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction formatProps(props: Data): any[] {\r\n  const res: any[] = []\r\n  const keys = Object.keys(props)\r\n  keys.slice(0, 3).forEach(key => {\r\n    res.push(...formatProp(key, props[key]))\r\n  })\r\n  if (keys.length > 3) {\r\n    res.push(` ...`)\r\n  }\r\n  return res\r\n}\r\n\r\nfunction formatProp(key: string, value: unknown): any[]\r\nfunction formatProp(key: string, value: unknown, raw: true): any\r\n/* istanbul ignore next */\r\nfunction formatProp(key: string, value: unknown, raw?: boolean): any {\r\n  if (isString(value)) {\r\n    value = JSON.stringify(value)\r\n    return raw ? value : [`${key}=${value}`]\r\n  } else if (\r\n    typeof value === 'number' ||\r\n    typeof value === 'boolean' ||\r\n    value == null\r\n  ) {\r\n    return raw ? value : [`${key}=${value}`]\r\n  } else if (isRef(value)) {\r\n    value = formatProp(key, toRaw(value.value), true)\r\n    return raw ? value : [`${key}=Ref<`, value, `>`]\r\n  } else if (isFunction(value)) {\r\n    return [`${key}=fn${value.name ? `<${value.name}>` : ``}`]\r\n  } else {\r\n    value = toRaw(value)\r\n    return raw ? value : [`${key}=`, value]\r\n  }\r\n}\r\n","import { VNode } from './vnode'\r\nimport { ComponentInternalInstance, LifecycleHooks } from './component'\r\nimport { warn, pushWarningContext, popWarningContext } from './warning'\r\nimport { isPromise, isFunction } from '@vue/shared'\r\n\r\n// contexts where user provided function may be executed, in addition to\r\n// lifecycle hooks.\r\nexport const enum ErrorCodes {\r\n  SETUP_FUNCTION,\r\n  RENDER_FUNCTION,\r\n  WATCH_GETTER,\r\n  WATCH_CALLBACK,\r\n  WATCH_CLEANUP,\r\n  NATIVE_EVENT_HANDLER,\r\n  COMPONENT_EVENT_HANDLER,\r\n  VNODE_HOOK,\r\n  DIRECTIVE_HOOK,\r\n  TRANSITION_HOOK,\r\n  APP_ERROR_HANDLER,\r\n  APP_WARN_HANDLER,\r\n  FUNCTION_REF,\r\n  ASYNC_COMPONENT_LOADER,\r\n  SCHEDULER\r\n}\r\n\r\nexport const ErrorTypeStrings: Record<number | string, string> = {\r\n  [LifecycleHooks.SERVER_PREFETCH]: 'serverPrefetch hook',\r\n  [LifecycleHooks.BEFORE_CREATE]: 'beforeCreate hook',\r\n  [LifecycleHooks.CREATED]: 'created hook',\r\n  [LifecycleHooks.BEFORE_MOUNT]: 'beforeMount hook',\r\n  [LifecycleHooks.MOUNTED]: 'mounted hook',\r\n  [LifecycleHooks.BEFORE_UPDATE]: 'beforeUpdate hook',\r\n  [LifecycleHooks.UPDATED]: 'updated',\r\n  [LifecycleHooks.BEFORE_UNMOUNT]: 'beforeUnmount hook',\r\n  [LifecycleHooks.UNMOUNTED]: 'unmounted hook',\r\n  [LifecycleHooks.ACTIVATED]: 'activated hook',\r\n  [LifecycleHooks.DEACTIVATED]: 'deactivated hook',\r\n  [LifecycleHooks.ERROR_CAPTURED]: 'errorCaptured hook',\r\n  [LifecycleHooks.RENDER_TRACKED]: 'renderTracked hook',\r\n  [LifecycleHooks.RENDER_TRIGGERED]: 'renderTriggered hook',\r\n  [ErrorCodes.SETUP_FUNCTION]: 'setup function',\r\n  [ErrorCodes.RENDER_FUNCTION]: 'render function',\r\n  [ErrorCodes.WATCH_GETTER]: 'watcher getter',\r\n  [ErrorCodes.WATCH_CALLBACK]: 'watcher callback',\r\n  [ErrorCodes.WATCH_CLEANUP]: 'watcher cleanup function',\r\n  [ErrorCodes.NATIVE_EVENT_HANDLER]: 'native event handler',\r\n  [ErrorCodes.COMPONENT_EVENT_HANDLER]: 'component event handler',\r\n  [ErrorCodes.VNODE_HOOK]: 'vnode hook',\r\n  [ErrorCodes.DIRECTIVE_HOOK]: 'directive hook',\r\n  [ErrorCodes.TRANSITION_HOOK]: 'transition hook',\r\n  [ErrorCodes.APP_ERROR_HANDLER]: 'app errorHandler',\r\n  [ErrorCodes.APP_WARN_HANDLER]: 'app warnHandler',\r\n  [ErrorCodes.FUNCTION_REF]: 'ref function',\r\n  [ErrorCodes.ASYNC_COMPONENT_LOADER]: 'async component loader',\r\n  [ErrorCodes.SCHEDULER]:\r\n    'scheduler flush. This is likely a Vue internals bug. ' +\r\n    'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core'\r\n}\r\n\r\nexport type ErrorTypes = LifecycleHooks | ErrorCodes\r\n\r\nexport function callWithErrorHandling(\r\n  fn: Function,\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes,\r\n  args?: unknown[]\r\n) {\r\n  let res\r\n  try {\r\n    res = args ? fn(...args) : fn()\r\n  } catch (err) {\r\n    handleError(err, instance, type)\r\n  }\r\n  return res\r\n}\r\n\r\nexport function callWithAsyncErrorHandling(\r\n  fn: Function | Function[],\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes,\r\n  args?: unknown[]\r\n): any[] {\r\n  if (isFunction(fn)) {\r\n    const res = callWithErrorHandling(fn, instance, type, args)\r\n    if (res && isPromise(res)) {\r\n      res.catch(err => {\r\n        handleError(err, instance, type)\r\n      })\r\n    }\r\n    return res\r\n  }\r\n\r\n  const values = []\r\n  for (let i = 0; i < fn.length; i++) {\r\n    values.push(callWithAsyncErrorHandling(fn[i], instance, type, args))\r\n  }\r\n  return values\r\n}\r\n\r\nexport function handleError(\r\n  err: unknown,\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes,\r\n  throwInDev = true\r\n) {\r\n  const contextVNode = instance ? instance.vnode : null\r\n  if (instance) {\r\n    let cur = instance.parent\r\n    // the exposed instance is the render proxy to keep it consistent with 2.x\r\n    const exposedInstance = instance.proxy\r\n    // in production the hook receives only the error code\r\n    const errorInfo = __DEV__ ? ErrorTypeStrings[type] : type\r\n    while (cur) {\r\n      const errorCapturedHooks = cur.ec\r\n      if (errorCapturedHooks) {\r\n        for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n          if (\r\n            errorCapturedHooks[i](err, exposedInstance, errorInfo) === false\r\n          ) {\r\n            return\r\n          }\r\n        }\r\n      }\r\n      cur = cur.parent\r\n    }\r\n    // app-level handling\r\n    const appErrorHandler = instance.appContext.config.errorHandler\r\n    if (appErrorHandler) {\r\n      callWithErrorHandling(\r\n        appErrorHandler,\r\n        null,\r\n        ErrorCodes.APP_ERROR_HANDLER,\r\n        [err, exposedInstance, errorInfo]\r\n      )\r\n      return\r\n    }\r\n  }\r\n  logError(err, type, contextVNode, throwInDev)\r\n}\r\n\r\nfunction logError(\r\n  err: unknown,\r\n  type: ErrorTypes,\r\n  contextVNode: VNode | null,\r\n  throwInDev = true\r\n) {\r\n  if (__DEV__) {\r\n    const info = ErrorTypeStrings[type]\r\n    if (contextVNode) {\r\n      pushWarningContext(contextVNode)\r\n    }\r\n    warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`)\r\n    if (contextVNode) {\r\n      popWarningContext()\r\n    }\r\n    // crash in dev by default so it's more noticeable\r\n    if (throwInDev) {\r\n      throw err\r\n    } else if (!__TEST__) {\r\n      console.error(err)\r\n    }\r\n  } else {\r\n    // recover in prod to reduce the impact on end-user\r\n    console.error(err)\r\n  }\r\n}\r\n","import { ErrorCodes, callWithErrorHandling } from './errorHandling'\r\nimport { isArray, NOOP } from '@vue/shared'\r\nimport { ComponentInternalInstance, getComponentName } from './component'\r\nimport { warn } from './warning'\r\n\r\nexport interface SchedulerJob extends Function {\r\n  id?: number\r\n  active?: boolean\r\n  computed?: boolean\r\n  /**\r\n   * Indicates whether the effect is allowed to recursively trigger itself\r\n   * when managed by the scheduler.\r\n   *\r\n   * By default, a job cannot trigger itself because some built-in method calls,\r\n   * e.g. Array.prototype.push actually performs reads as well (#1740) which\r\n   * can lead to confusing infinite loops.\r\n   * The allowed cases are component update functions and watch callbacks.\r\n   * Component update functions may update child component props, which in turn\r\n   * trigger flush: \"pre\" watch callbacks that mutates state that the parent\r\n   * relies on (#1801). Watch callbacks doesn't track its dependencies so if it\r\n   * triggers itself again, it's likely intentional and it is the user's\r\n   * responsibility to perform recursive state mutation that eventually\r\n   * stabilizes (#1727).\r\n   */\r\n  allowRecurse?: boolean\r\n  /**\r\n   * Attached by renderer.ts when setting up a component's render effect\r\n   * Used to obtain component information when reporting max recursive updates.\r\n   * dev only.\r\n   */\r\n  ownerInstance?: ComponentInternalInstance\r\n}\r\n\r\nexport type SchedulerJobs = SchedulerJob | SchedulerJob[]\r\n\r\nlet isFlushing = false\r\nlet isFlushPending = false\r\n\r\nconst queue: SchedulerJob[] = []\r\nlet flushIndex = 0\r\n\r\nconst pendingPreFlushCbs: SchedulerJob[] = []\r\nlet activePreFlushCbs: SchedulerJob[] | null = null\r\nlet preFlushIndex = 0\r\n\r\nconst pendingPostFlushCbs: SchedulerJob[] = []\r\nlet activePostFlushCbs: SchedulerJob[] | null = null\r\nlet postFlushIndex = 0\r\n\r\nconst resolvedPromise = /*#__PURE__*/ Promise.resolve() as Promise<any>\r\nlet currentFlushPromise: Promise<void> | null = null\r\n\r\nlet currentPreFlushParentJob: SchedulerJob | null = null\r\n\r\nconst RECURSION_LIMIT = 100\r\ntype CountMap = Map<SchedulerJob, number>\r\n\r\nexport function nextTick<T = void>(\r\n  this: T,\r\n  fn?: (this: T) => void\r\n): Promise<void> {\r\n  const p = currentFlushPromise || resolvedPromise\r\n  return fn ? p.then(this ? fn.bind(this) : fn) : p\r\n}\r\n\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(id: number) {\r\n  // the start index should be `flushIndex + 1`\r\n  let start = flushIndex + 1\r\n  let end = queue.length\r\n\r\n  while (start < end) {\r\n    const middle = (start + end) >>> 1\r\n    const middleJobId = getId(queue[middle])\r\n    middleJobId < id ? (start = middle + 1) : (end = middle)\r\n  }\r\n\r\n  return start\r\n}\r\n\r\nexport function queueJob(job: SchedulerJob) {\r\n  // the dedupe search uses the startIndex argument of Array.includes()\r\n  // by default the search index includes the current job that is being run\r\n  // so it cannot recursively trigger itself again.\r\n  // if the job is a watch() callback, the search will start with a +1 index to\r\n  // allow it recursively trigger itself - it is the user's responsibility to\r\n  // ensure it doesn't end up in an infinite loop.\r\n  if (\r\n    (!queue.length ||\r\n      !queue.includes(\r\n        job,\r\n        isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex\r\n      )) &&\r\n    job !== currentPreFlushParentJob\r\n  ) {\r\n    if (job.id == null) {\r\n      queue.push(job)\r\n    } else {\r\n      queue.splice(findInsertionIndex(job.id), 0, job)\r\n    }\r\n    queueFlush()\r\n  }\r\n}\r\n\r\nfunction queueFlush() {\r\n  if (!isFlushing && !isFlushPending) {\r\n    isFlushPending = true\r\n    currentFlushPromise = resolvedPromise.then(flushJobs)\r\n  }\r\n}\r\n\r\nexport function invalidateJob(job: SchedulerJob) {\r\n  const i = queue.indexOf(job)\r\n  if (i > flushIndex) {\r\n    queue.splice(i, 1)\r\n  }\r\n}\r\n\r\nfunction queueCb(\r\n  cb: SchedulerJobs,\r\n  activeQueue: SchedulerJob[] | null,\r\n  pendingQueue: SchedulerJob[],\r\n  index: number\r\n) {\r\n  if (!isArray(cb)) {\r\n    if (\r\n      !activeQueue ||\r\n      !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)\r\n    ) {\r\n      pendingQueue.push(cb)\r\n    }\r\n  } else {\r\n    // if cb is an array, it is a component lifecycle hook which can only be\r\n    // triggered by a job, which is already deduped in the main queue, so\r\n    // we can skip duplicate check here to improve perf\r\n    pendingQueue.push(...cb)\r\n  }\r\n  queueFlush()\r\n}\r\n\r\nexport function queuePreFlushCb(cb: SchedulerJob) {\r\n  queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex)\r\n}\r\n\r\nexport function queuePostFlushCb(cb: SchedulerJobs) {\r\n  queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex)\r\n}\r\n\r\nexport function flushPreFlushCbs(\r\n  seen?: CountMap,\r\n  parentJob: SchedulerJob | null = null\r\n) {\r\n  if (pendingPreFlushCbs.length) {\r\n    currentPreFlushParentJob = parentJob\r\n    activePreFlushCbs = [...new Set(pendingPreFlushCbs)]\r\n    pendingPreFlushCbs.length = 0\r\n    if (__DEV__) {\r\n      seen = seen || new Map()\r\n    }\r\n    for (\r\n      preFlushIndex = 0;\r\n      preFlushIndex < activePreFlushCbs.length;\r\n      preFlushIndex++\r\n    ) {\r\n      if (\r\n        __DEV__ &&\r\n        checkRecursiveUpdates(seen!, activePreFlushCbs[preFlushIndex])\r\n      ) {\r\n        continue\r\n      }\r\n      activePreFlushCbs[preFlushIndex]()\r\n    }\r\n    activePreFlushCbs = null\r\n    preFlushIndex = 0\r\n    currentPreFlushParentJob = null\r\n    // recursively flush until it drains\r\n    flushPreFlushCbs(seen, parentJob)\r\n  }\r\n}\r\n\r\nexport function flushPostFlushCbs(seen?: CountMap) {\r\n  // flush any pre cbs queued during the flush (e.g. pre watchers)\r\n  flushPreFlushCbs()\r\n  if (pendingPostFlushCbs.length) {\r\n    const deduped = [...new Set(pendingPostFlushCbs)]\r\n    pendingPostFlushCbs.length = 0\r\n\r\n    // #1947 already has active queue, nested flushPostFlushCbs call\r\n    if (activePostFlushCbs) {\r\n      activePostFlushCbs.push(...deduped)\r\n      return\r\n    }\r\n\r\n    activePostFlushCbs = deduped\r\n    if (__DEV__) {\r\n      seen = seen || new Map()\r\n    }\r\n\r\n    activePostFlushCbs.sort((a, b) => getId(a) - getId(b))\r\n\r\n    for (\r\n      postFlushIndex = 0;\r\n      postFlushIndex < activePostFlushCbs.length;\r\n      postFlushIndex++\r\n    ) {\r\n      if (\r\n        __DEV__ &&\r\n        checkRecursiveUpdates(seen!, activePostFlushCbs[postFlushIndex])\r\n      ) {\r\n        continue\r\n      }\r\n      activePostFlushCbs[postFlushIndex]()\r\n    }\r\n    activePostFlushCbs = null\r\n    postFlushIndex = 0\r\n  }\r\n}\r\n\r\nconst getId = (job: SchedulerJob): number =>\r\n  job.id == null ? Infinity : job.id\r\n\r\nfunction flushJobs(seen?: CountMap) {\r\n  isFlushPending = false\r\n  isFlushing = true\r\n  if (__DEV__) {\r\n    seen = seen || new Map()\r\n  }\r\n\r\n  flushPreFlushCbs(seen)\r\n\r\n  // Sort queue before flush.\r\n  // This ensures that:\r\n  // 1. Components are updated from parent to child. (because parent is always\r\n  //    created before the child so its render effect will have smaller\r\n  //    priority number)\r\n  // 2. If a component is unmounted during a parent component's update,\r\n  //    its update can be skipped.\r\n  queue.sort((a, b) => getId(a) - getId(b))\r\n\r\n  // conditional usage of checkRecursiveUpdate must be determined out of\r\n  // try ... catch block since Rollup by default de-optimizes treeshaking\r\n  // inside try-catch. This can leave all warning code unshaked. Although\r\n  // they would get eventually shaken by a minifier like terser, some minifiers\r\n  // would fail to do that (e.g. https://github.com/evanw/esbuild/issues/1610)\r\n  const check = __DEV__\r\n    ? (job: SchedulerJob) => checkRecursiveUpdates(seen!, job)\r\n    : NOOP\r\n\r\n  try {\r\n    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n      const job = queue[flushIndex]\r\n      if (job && job.active !== false) {\r\n        if (__DEV__ && check(job)) {\r\n          continue\r\n        }\r\n        // console.log(`running:`, job.id)\r\n        callWithErrorHandling(job, null, ErrorCodes.SCHEDULER)\r\n      }\r\n    }\r\n  } finally {\r\n    flushIndex = 0\r\n    queue.length = 0\r\n\r\n    flushPostFlushCbs(seen)\r\n\r\n    isFlushing = false\r\n    currentFlushPromise = null\r\n    // some postFlushCb queued jobs!\r\n    // keep flushing until it drains.\r\n    if (\r\n      queue.length ||\r\n      pendingPreFlushCbs.length ||\r\n      pendingPostFlushCbs.length\r\n    ) {\r\n      flushJobs(seen)\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkRecursiveUpdates(seen: CountMap, fn: SchedulerJob) {\r\n  if (!seen.has(fn)) {\r\n    seen.set(fn, 1)\r\n  } else {\r\n    const count = seen.get(fn)!\r\n    if (count > RECURSION_LIMIT) {\r\n      const instance = fn.ownerInstance\r\n      const componentName = instance && getComponentName(instance.type)\r\n      warn(\r\n        `Maximum recursive updates exceeded${\r\n          componentName ? ` in component <${componentName}>` : ``\r\n        }. ` +\r\n          `This means you have a reactive effect that is mutating its own ` +\r\n          `dependencies and thus recursively triggering itself. Possible sources ` +\r\n          `include component template, render function, updated hook or ` +\r\n          `watcher source function.`\r\n      )\r\n      return true\r\n    } else {\r\n      seen.set(fn, count + 1)\r\n    }\r\n  }\r\n}\r\n","/* eslint-disable no-restricted-globals */\r\nimport { App } from './apiCreateApp'\r\nimport { Fragment, Text, Comment, Static } from './vnode'\r\nimport { ComponentInternalInstance } from './component'\r\n\r\ninterface AppRecord {\r\n  id: number\r\n  app: App\r\n  version: string\r\n  types: Record<string, string | Symbol>\r\n}\r\n\r\nconst enum DevtoolsHooks {\r\n  APP_INIT = 'app:init',\r\n  APP_UNMOUNT = 'app:unmount',\r\n  COMPONENT_UPDATED = 'component:updated',\r\n  COMPONENT_ADDED = 'component:added',\r\n  COMPONENT_REMOVED = 'component:removed',\r\n  COMPONENT_EMIT = 'component:emit',\r\n  PERFORMANCE_START = 'perf:start',\r\n  PERFORMANCE_END = 'perf:end'\r\n}\r\n\r\ninterface DevtoolsHook {\r\n  enabled?: boolean\r\n  emit: (event: string, ...payload: any[]) => void\r\n  on: (event: string, handler: Function) => void\r\n  once: (event: string, handler: Function) => void\r\n  off: (event: string, handler: Function) => void\r\n  appRecords: AppRecord[]\r\n}\r\n\r\nexport let devtools: DevtoolsHook\r\n\r\nlet buffer: { event: string; args: any[] }[] = []\r\n\r\nlet devtoolsNotInstalled = false\r\n\r\nfunction emit(event: string, ...args: any[]) {\r\n  if (devtools) {\r\n    devtools.emit(event, ...args)\r\n  } else if (!devtoolsNotInstalled) {\r\n    buffer.push({ event, args })\r\n  }\r\n}\r\n\r\nexport function setDevtoolsHook(hook: DevtoolsHook, target: any) {\r\n  devtools = hook\r\n  if (devtools) {\r\n    devtools.enabled = true\r\n    buffer.forEach(({ event, args }) => devtools.emit(event, ...args))\r\n    buffer = []\r\n  } else if (\r\n    // handle late devtools injection - only do this if we are in an actual\r\n    // browser environment to avoid the timer handle stalling test runner exit\r\n    // (#4815)\r\n    typeof window !== 'undefined' &&\r\n    // some envs mock window but not fully\r\n    window.HTMLElement &&\r\n    // also exclude jsdom\r\n    !window.navigator?.userAgent?.includes('jsdom')\r\n  ) {\r\n    const replay = (target.__VUE_DEVTOOLS_HOOK_REPLAY__ =\r\n      target.__VUE_DEVTOOLS_HOOK_REPLAY__ || [])\r\n    replay.push((newHook: DevtoolsHook) => {\r\n      setDevtoolsHook(newHook, target)\r\n    })\r\n    // clear buffer after 3s - the user probably doesn't have devtools installed\r\n    // at all, and keeping the buffer will cause memory leaks (#4738)\r\n    setTimeout(() => {\r\n      if (!devtools) {\r\n        target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null\r\n        devtoolsNotInstalled = true\r\n        buffer = []\r\n      }\r\n    }, 3000)\r\n  } else {\r\n    // non-browser env, assume not installed\r\n    devtoolsNotInstalled = true\r\n    buffer = []\r\n  }\r\n}\r\n\r\nexport function devtoolsInitApp(app: App, version: string) {\r\n  emit(DevtoolsHooks.APP_INIT, app, version, {\r\n    Fragment,\r\n    Text,\r\n    Comment,\r\n    Static\r\n  })\r\n}\r\n\r\nexport function devtoolsUnmountApp(app: App) {\r\n  emit(DevtoolsHooks.APP_UNMOUNT, app)\r\n}\r\n\r\nexport const devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\r\n  DevtoolsHooks.COMPONENT_ADDED\r\n)\r\n\r\nexport const devtoolsComponentUpdated =\r\n  /*#__PURE__*/ createDevtoolsComponentHook(DevtoolsHooks.COMPONENT_UPDATED)\r\n\r\nexport const devtoolsComponentRemoved =\r\n  /*#__PURE__*/ createDevtoolsComponentHook(DevtoolsHooks.COMPONENT_REMOVED)\r\n\r\nfunction createDevtoolsComponentHook(hook: DevtoolsHooks) {\r\n  return (component: ComponentInternalInstance) => {\r\n    emit(\r\n      hook,\r\n      component.appContext.app,\r\n      component.uid,\r\n      component.parent ? component.parent.uid : undefined,\r\n      component\r\n    )\r\n  }\r\n}\r\n\r\nexport const devtoolsPerfStart = /*#__PURE__*/ createDevtoolsPerformanceHook(\r\n  DevtoolsHooks.PERFORMANCE_START\r\n)\r\n\r\nexport const devtoolsPerfEnd = /*#__PURE__*/ createDevtoolsPerformanceHook(\r\n  DevtoolsHooks.PERFORMANCE_END\r\n)\r\n\r\nfunction createDevtoolsPerformanceHook(hook: DevtoolsHooks) {\r\n  return (component: ComponentInternalInstance, type: string, time: number) => {\r\n    emit(hook, component.appContext.app, component.uid, component, type, time)\r\n  }\r\n}\r\n\r\nexport function devtoolsComponentEmit(\r\n  component: ComponentInternalInstance,\r\n  event: string,\r\n  params: any[]\r\n) {\r\n  emit(\r\n    DevtoolsHooks.COMPONENT_EMIT,\r\n    component.appContext.app,\r\n    component,\r\n    event,\r\n    params\r\n  )\r\n}\r\n","import {\r\n  camelize,\r\n  EMPTY_OBJ,\r\n  toHandlerKey,\r\n  extend,\r\n  hasOwn,\r\n  hyphenate,\r\n  isArray,\r\n  isFunction,\r\n  isOn,\r\n  toNumber,\r\n  UnionToIntersection\r\n} from '@vue/shared'\r\nimport {\r\n  ComponentInternalInstance,\r\n  ComponentOptions,\r\n  ConcreteComponent,\r\n  formatComponentName\r\n} from './component'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from './errorHandling'\r\nimport { warn } from './warning'\r\nimport { devtoolsComponentEmit } from './devtools'\r\nimport { AppContext } from './apiCreateApp'\r\nimport { emit as compatInstanceEmit } from './compat/instanceEventEmitter'\r\nimport {\r\n  compatModelEventPrefix,\r\n  compatModelEmit\r\n} from './compat/componentVModel'\r\n\r\nexport type ObjectEmitsOptions = Record<\r\n  string,\r\n  ((...args: any[]) => any) | null\r\n>\r\n\r\nexport type EmitsOptions = ObjectEmitsOptions | string[]\r\n\r\nexport type EmitsToProps<T extends EmitsOptions> = T extends string[]\r\n  ? {\r\n      [K in string & `on${Capitalize<T[number]>}`]?: (...args: any[]) => any\r\n    }\r\n  : T extends ObjectEmitsOptions\r\n  ? {\r\n      [K in string &\r\n        `on${Capitalize<string & keyof T>}`]?: K extends `on${infer C}`\r\n        ? T[Uncapitalize<C>] extends null\r\n          ? (...args: any[]) => any\r\n          : (\r\n              ...args: T[Uncapitalize<C>] extends (...args: infer P) => any\r\n                ? P\r\n                : never\r\n            ) => any\r\n        : never\r\n    }\r\n  : {}\r\n\r\nexport type EmitFn<\r\n  Options = ObjectEmitsOptions,\r\n  Event extends keyof Options = keyof Options\r\n> = Options extends Array<infer V>\r\n  ? (event: V, ...args: any[]) => void\r\n  : {} extends Options // if the emit is empty object (usually the default value for emit) should be converted to function\r\n  ? (event: string, ...args: any[]) => void\r\n  : UnionToIntersection<\r\n      {\r\n        [key in Event]: Options[key] extends (...args: infer Args) => any\r\n          ? (event: key, ...args: Args) => void\r\n          : (event: key, ...args: any[]) => void\r\n      }[Event]\r\n    >\r\n\r\nexport function emit(\r\n  instance: ComponentInternalInstance,\r\n  event: string,\r\n  ...rawArgs: any[]\r\n) {\r\n  if (instance.isUnmounted) return\r\n  const props = instance.vnode.props || EMPTY_OBJ\r\n\r\n  if (__DEV__) {\r\n    const {\r\n      emitsOptions,\r\n      propsOptions: [propsOptions]\r\n    } = instance\r\n    if (emitsOptions) {\r\n      if (\r\n        !(event in emitsOptions) &&\r\n        !(\r\n          __COMPAT__ &&\r\n          (event.startsWith('hook:') ||\r\n            event.startsWith(compatModelEventPrefix))\r\n        )\r\n      ) {\r\n        if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n          warn(\r\n            `Component emitted event \"${event}\" but it is neither declared in ` +\r\n              `the emits option nor as an \"${toHandlerKey(event)}\" prop.`\r\n          )\r\n        }\r\n      } else {\r\n        const validator = emitsOptions[event]\r\n        if (isFunction(validator)) {\r\n          const isValid = validator(...rawArgs)\r\n          if (!isValid) {\r\n            warn(\r\n              `Invalid event arguments: event validation failed for event \"${event}\".`\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let args = rawArgs\r\n  const isModelListener = event.startsWith('update:')\r\n\r\n  // for v-model update:xxx events, apply modifiers on args\r\n  const modelArg = isModelListener && event.slice(7)\r\n  if (modelArg && modelArg in props) {\r\n    const modifiersKey = `${\r\n      modelArg === 'modelValue' ? 'model' : modelArg\r\n    }Modifiers`\r\n    const { number, trim } = props[modifiersKey] || EMPTY_OBJ\r\n    if (trim) {\r\n      args = rawArgs.map(a => a.trim())\r\n    }\r\n    if (number) {\r\n      args = rawArgs.map(toNumber)\r\n    }\r\n  }\r\n\r\n  if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n    devtoolsComponentEmit(instance, event, args)\r\n  }\r\n\r\n  if (__DEV__) {\r\n    const lowerCaseEvent = event.toLowerCase()\r\n    if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n      warn(\r\n        `Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n          `${formatComponentName(\r\n            instance,\r\n            instance.type\r\n          )} but the handler is registered for \"${event}\". ` +\r\n          `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n          `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n          `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`\r\n      )\r\n    }\r\n  }\r\n\r\n  let handlerName\r\n  let handler =\r\n    props[(handlerName = toHandlerKey(event))] ||\r\n    // also try camelCase event handler (#2249)\r\n    props[(handlerName = toHandlerKey(camelize(event)))]\r\n  // for v-model update:xxx events, also trigger kebab-case equivalent\r\n  // for props passed via kebab-case\r\n  if (!handler && isModelListener) {\r\n    handler = props[(handlerName = toHandlerKey(hyphenate(event)))]\r\n  }\r\n\r\n  if (handler) {\r\n    callWithAsyncErrorHandling(\r\n      handler,\r\n      instance,\r\n      ErrorCodes.COMPONENT_EVENT_HANDLER,\r\n      args\r\n    )\r\n  }\r\n\r\n  const onceHandler = props[handlerName + `Once`]\r\n  if (onceHandler) {\r\n    if (!instance.emitted) {\r\n      instance.emitted = {} as Record<any, boolean>\r\n    } else if (instance.emitted[handlerName]) {\r\n      return\r\n    }\r\n    instance.emitted[handlerName] = true\r\n    callWithAsyncErrorHandling(\r\n      onceHandler,\r\n      instance,\r\n      ErrorCodes.COMPONENT_EVENT_HANDLER,\r\n      args\r\n    )\r\n  }\r\n\r\n  if (__COMPAT__) {\r\n    compatModelEmit(instance, event, args)\r\n    return compatInstanceEmit(instance, event, args)\r\n  }\r\n}\r\n\r\nexport function normalizeEmitsOptions(\r\n  comp: ConcreteComponent,\r\n  appContext: AppContext,\r\n  asMixin = false\r\n): ObjectEmitsOptions | null {\r\n  const cache = appContext.emitsCache\r\n  const cached = cache.get(comp)\r\n  if (cached !== undefined) {\r\n    return cached\r\n  }\r\n\r\n  const raw = comp.emits\r\n  let normalized: ObjectEmitsOptions = {}\r\n\r\n  // apply mixin/extends props\r\n  let hasExtends = false\r\n  if (__FEATURE_OPTIONS_API__ && !isFunction(comp)) {\r\n    const extendEmits = (raw: ComponentOptions) => {\r\n      const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true)\r\n      if (normalizedFromExtend) {\r\n        hasExtends = true\r\n        extend(normalized, normalizedFromExtend)\r\n      }\r\n    }\r\n    if (!asMixin && appContext.mixins.length) {\r\n      appContext.mixins.forEach(extendEmits)\r\n    }\r\n    if (comp.extends) {\r\n      extendEmits(comp.extends)\r\n    }\r\n    if (comp.mixins) {\r\n      comp.mixins.forEach(extendEmits)\r\n    }\r\n  }\r\n\r\n  if (!raw && !hasExtends) {\r\n    cache.set(comp, null)\r\n    return null\r\n  }\r\n\r\n  if (isArray(raw)) {\r\n    raw.forEach(key => (normalized[key] = null))\r\n  } else {\r\n    extend(normalized, raw)\r\n  }\r\n\r\n  cache.set(comp, normalized)\r\n  return normalized\r\n}\r\n\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nexport function isEmitListener(\r\n  options: ObjectEmitsOptions | null,\r\n  key: string\r\n): boolean {\r\n  if (!options || !isOn(key)) {\r\n    return false\r\n  }\r\n\r\n  if (__COMPAT__ && key.startsWith(compatModelEventPrefix)) {\r\n    return true\r\n  }\r\n\r\n  key = key.slice(2).replace(/Once$/, '')\r\n  return (\r\n    hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n    hasOwn(options, hyphenate(key)) ||\r\n    hasOwn(options, key)\r\n  )\r\n}\r\n","import { ComponentInternalInstance } from './component'\r\nimport { devtoolsComponentUpdated } from './devtools'\r\nimport { setBlockTracking } from './vnode'\r\n\r\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nexport let currentRenderingInstance: ComponentInternalInstance | null = null\r\nexport let currentScopeId: string | null = null\r\n\r\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\r\nexport function setCurrentRenderingInstance(\r\n  instance: ComponentInternalInstance | null\r\n): ComponentInternalInstance | null {\r\n  const prev = currentRenderingInstance\r\n  currentRenderingInstance = instance\r\n  currentScopeId = (instance && instance.type.__scopeId) || null\r\n  // v2 pre-compiled components uses _scopeId instead of __scopeId\r\n  if (__COMPAT__ && !currentScopeId) {\r\n    currentScopeId = (instance && (instance.type as any)._scopeId) || null\r\n  }\r\n  return prev\r\n}\r\n\r\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\r\nexport function pushScopeId(id: string | null) {\r\n  currentScopeId = id\r\n}\r\n\r\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\r\nexport function popScopeId() {\r\n  currentScopeId = null\r\n}\r\n\r\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\r\nexport const withScopeId = (_id: string) => withCtx\r\n\r\nexport type ContextualRenderFn = {\r\n  (...args: any[]): any\r\n  _n: boolean /* already normalized */\r\n  _c: boolean /* compiled */\r\n  _d: boolean /* disableTracking */\r\n  _ns: boolean /* nonScoped */\r\n}\r\n\r\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\r\nexport function withCtx(\r\n  fn: Function,\r\n  ctx: ComponentInternalInstance | null = currentRenderingInstance,\r\n  isNonScopedSlot?: boolean // __COMPAT__ only\r\n) {\r\n  if (!ctx) return fn\r\n\r\n  // already normalized\r\n  if ((fn as ContextualRenderFn)._n) {\r\n    return fn\r\n  }\r\n\r\n  const renderFnWithContext: ContextualRenderFn = (...args: any[]) => {\r\n    // If a user calls a compiled slot inside a template expression (#1745), it\r\n    // can mess up block tracking, so by default we disable block tracking and\r\n    // force bail out when invoking a compiled slot (indicated by the ._d flag).\r\n    // This isn't necessary if rendering a compiled `<slot>`, so we flip the\r\n    // ._d flag off when invoking the wrapped fn inside `renderSlot`.\r\n    if (renderFnWithContext._d) {\r\n      setBlockTracking(-1)\r\n    }\r\n    const prevInstance = setCurrentRenderingInstance(ctx)\r\n    const res = fn(...args)\r\n    setCurrentRenderingInstance(prevInstance)\r\n    if (renderFnWithContext._d) {\r\n      setBlockTracking(1)\r\n    }\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      devtoolsComponentUpdated(ctx)\r\n    }\r\n\r\n    return res\r\n  }\r\n\r\n  // mark normalized to avoid duplicated wrapping\r\n  renderFnWithContext._n = true\r\n  // mark this as compiled by default\r\n  // this is used in vnode.ts -> normalizeChildren() to set the slot\r\n  // rendering flag.\r\n  renderFnWithContext._c = true\r\n  // disable block tracking by default\r\n  renderFnWithContext._d = true\r\n  // compat build only flag to distinguish scoped slots from non-scoped ones\r\n  if (__COMPAT__ && isNonScopedSlot) {\r\n    renderFnWithContext._ns = true\r\n  }\r\n  return renderFnWithContext\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  FunctionalComponent,\r\n  Data,\r\n  getComponentName\r\n} from './component'\r\nimport {\r\n  VNode,\r\n  normalizeVNode,\r\n  createVNode,\r\n  Comment,\r\n  cloneVNode,\r\n  VNodeArrayChildren,\r\n  isVNode,\r\n  blockStack\r\n} from './vnode'\r\nimport { handleError, ErrorCodes } from './errorHandling'\r\nimport { PatchFlags, ShapeFlags, isOn, isModelListener } from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { isHmrUpdating } from './hmr'\r\nimport { NormalizedProps } from './componentProps'\r\nimport { isEmitListener } from './componentEmits'\r\nimport { setCurrentRenderingInstance } from './componentRenderContext'\r\nimport {\r\n  DeprecationTypes,\r\n  isCompatEnabled,\r\n  warnDeprecation\r\n} from './compat/compatConfig'\r\n\r\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs: boolean = false\r\n\r\nexport function markAttrsAccessed() {\r\n  accessedAttrs = true\r\n}\r\n\r\ntype SetRootFn = ((root: VNode) => void) | undefined\r\n\r\nexport function renderComponentRoot(\r\n  instance: ComponentInternalInstance\r\n): VNode {\r\n  const {\r\n    type: Component,\r\n    vnode,\r\n    proxy,\r\n    withProxy,\r\n    props,\r\n    propsOptions: [propsOptions],\r\n    slots,\r\n    attrs,\r\n    emit,\r\n    render,\r\n    renderCache,\r\n    data,\r\n    setupState,\r\n    ctx,\r\n    inheritAttrs\r\n  } = instance\r\n\r\n  let result\r\n  let fallthroughAttrs\r\n  const prev = setCurrentRenderingInstance(instance)\r\n  if (__DEV__) {\r\n    accessedAttrs = false\r\n  }\r\n\r\n  try {\r\n    if (vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\r\n      // withProxy is a proxy with a different `has` trap only for\r\n      // runtime-compiled render functions using `with` block.\r\n      const proxyToUse = withProxy || proxy\r\n      result = normalizeVNode(\r\n        render!.call(\r\n          proxyToUse,\r\n          proxyToUse!,\r\n          renderCache,\r\n          props,\r\n          setupState,\r\n          data,\r\n          ctx\r\n        )\r\n      )\r\n      fallthroughAttrs = attrs\r\n    } else {\r\n      // functional\r\n      const render = Component as FunctionalComponent\r\n      // in dev, mark attrs accessed if optional props (attrs === props)\r\n      if (__DEV__ && attrs === props) {\r\n        markAttrsAccessed()\r\n      }\r\n      result = normalizeVNode(\r\n        render.length > 1\r\n          ? render(\r\n              props,\r\n              __DEV__\r\n                ? {\r\n                    get attrs() {\r\n                      markAttrsAccessed()\r\n                      return attrs\r\n                    },\r\n                    slots,\r\n                    emit\r\n                  }\r\n                : { attrs, slots, emit }\r\n            )\r\n          : render(props, null as any /* we know it doesn't need it */)\r\n      )\r\n      fallthroughAttrs = Component.props\r\n        ? attrs\r\n        : getFunctionalFallthrough(attrs)\r\n    }\r\n  } catch (err) {\r\n    blockStack.length = 0\r\n    handleError(err, instance, ErrorCodes.RENDER_FUNCTION)\r\n    result = createVNode(Comment)\r\n  }\r\n\r\n  // attr merging\r\n  // in dev mode, comments are preserved, and it's possible for a template\r\n  // to have comments along side the root element which makes it a fragment\r\n  let root = result\r\n  let setRoot: SetRootFn = undefined\r\n  if (\r\n    __DEV__ &&\r\n    result.patchFlag > 0 &&\r\n    result.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT\r\n  ) {\r\n    ;[root, setRoot] = getChildRoot(result)\r\n  }\r\n\r\n  if (fallthroughAttrs && inheritAttrs !== false) {\r\n    const keys = Object.keys(fallthroughAttrs)\r\n    const { shapeFlag } = root\r\n    if (keys.length) {\r\n      if (shapeFlag & (ShapeFlags.ELEMENT | ShapeFlags.COMPONENT)) {\r\n        if (propsOptions && keys.some(isModelListener)) {\r\n          // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n          // prop, it indicates this component expects to handle v-model and\r\n          // it should not fallthrough.\r\n          // related: #1543, #1643, #1989\r\n          fallthroughAttrs = filterModelListeners(\r\n            fallthroughAttrs,\r\n            propsOptions\r\n          )\r\n        }\r\n        root = cloneVNode(root, fallthroughAttrs)\r\n      } else if (__DEV__ && !accessedAttrs && root.type !== Comment) {\r\n        const allAttrs = Object.keys(attrs)\r\n        const eventAttrs: string[] = []\r\n        const extraAttrs: string[] = []\r\n        for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n          const key = allAttrs[i]\r\n          if (isOn(key)) {\r\n            // ignore v-model handlers when they fail to fallthrough\r\n            if (!isModelListener(key)) {\r\n              // remove `on`, lowercase first letter to reflect event casing\r\n              // accurately\r\n              eventAttrs.push(key[2].toLowerCase() + key.slice(3))\r\n            }\r\n          } else {\r\n            extraAttrs.push(key)\r\n          }\r\n        }\r\n        if (extraAttrs.length) {\r\n          warn(\r\n            `Extraneous non-props attributes (` +\r\n              `${extraAttrs.join(', ')}) ` +\r\n              `were passed to component but could not be automatically inherited ` +\r\n              `because component renders fragment or text root nodes.`\r\n          )\r\n        }\r\n        if (eventAttrs.length) {\r\n          warn(\r\n            `Extraneous non-emits event listeners (` +\r\n              `${eventAttrs.join(', ')}) ` +\r\n              `were passed to component but could not be automatically inherited ` +\r\n              `because component renders fragment or text root nodes. ` +\r\n              `If the listener is intended to be a component custom event listener only, ` +\r\n              `declare it using the \"emits\" option.`\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (\r\n    __COMPAT__ &&\r\n    isCompatEnabled(DeprecationTypes.INSTANCE_ATTRS_CLASS_STYLE, instance) &&\r\n    vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT &&\r\n    root.shapeFlag & (ShapeFlags.ELEMENT | ShapeFlags.COMPONENT)\r\n  ) {\r\n    const { class: cls, style } = vnode.props || {}\r\n    if (cls || style) {\r\n      if (__DEV__ && inheritAttrs === false) {\r\n        warnDeprecation(\r\n          DeprecationTypes.INSTANCE_ATTRS_CLASS_STYLE,\r\n          instance,\r\n          getComponentName(instance.type)\r\n        )\r\n      }\r\n      root = cloneVNode(root, {\r\n        class: cls,\r\n        style: style\r\n      })\r\n    }\r\n  }\r\n\r\n  // inherit directives\r\n  if (vnode.dirs) {\r\n    if (__DEV__ && !isElementRoot(root)) {\r\n      warn(\r\n        `Runtime directive used on component with non-element root node. ` +\r\n          `The directives will not function as intended.`\r\n      )\r\n    }\r\n    // clone before mutating since the root may be a hoisted vnode\r\n    root = cloneVNode(root)\r\n    root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs\r\n  }\r\n  // inherit transition data\r\n  if (vnode.transition) {\r\n    if (__DEV__ && !isElementRoot(root)) {\r\n      warn(\r\n        `Component inside <Transition> renders non-element root node ` +\r\n          `that cannot be animated.`\r\n      )\r\n    }\r\n    root.transition = vnode.transition\r\n  }\r\n\r\n  if (__DEV__ && setRoot) {\r\n    setRoot(root)\r\n  } else {\r\n    result = root\r\n  }\r\n\r\n  setCurrentRenderingInstance(prev)\r\n  return result\r\n}\r\n\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode: VNode): [VNode, SetRootFn] => {\r\n  const rawChildren = vnode.children as VNodeArrayChildren\r\n  const dynamicChildren = vnode.dynamicChildren\r\n  const childRoot = filterSingleRoot(rawChildren)\r\n  if (!childRoot) {\r\n    return [vnode, undefined]\r\n  }\r\n  const index = rawChildren.indexOf(childRoot)\r\n  const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1\r\n  const setRoot: SetRootFn = (updatedRoot: VNode) => {\r\n    rawChildren[index] = updatedRoot\r\n    if (dynamicChildren) {\r\n      if (dynamicIndex > -1) {\r\n        dynamicChildren[dynamicIndex] = updatedRoot\r\n      } else if (updatedRoot.patchFlag > 0) {\r\n        vnode.dynamicChildren = [...dynamicChildren, updatedRoot]\r\n      }\r\n    }\r\n  }\r\n  return [normalizeVNode(childRoot), setRoot]\r\n}\r\n\r\nexport function filterSingleRoot(\r\n  children: VNodeArrayChildren\r\n): VNode | undefined {\r\n  let singleRoot\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    if (isVNode(child)) {\r\n      // ignore user comment\r\n      if (child.type !== Comment || child.children === 'v-if') {\r\n        if (singleRoot) {\r\n          // has more than 1 non-comment child, return now\r\n          return\r\n        } else {\r\n          singleRoot = child\r\n        }\r\n      }\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n  return singleRoot\r\n}\r\n\r\nconst getFunctionalFallthrough = (attrs: Data): Data | undefined => {\r\n  let res: Data | undefined\r\n  for (const key in attrs) {\r\n    if (key === 'class' || key === 'style' || isOn(key)) {\r\n      ;(res || (res = {}))[key] = attrs[key]\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nconst filterModelListeners = (attrs: Data, props: NormalizedProps): Data => {\r\n  const res: Data = {}\r\n  for (const key in attrs) {\r\n    if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n      res[key] = attrs[key]\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nconst isElementRoot = (vnode: VNode) => {\r\n  return (\r\n    vnode.shapeFlag & (ShapeFlags.COMPONENT | ShapeFlags.ELEMENT) ||\r\n    vnode.type === Comment // potential v-if branch switch\r\n  )\r\n}\r\n\r\nexport function shouldUpdateComponent(\r\n  prevVNode: VNode,\r\n  nextVNode: VNode,\r\n  optimized?: boolean\r\n): boolean {\r\n  const { props: prevProps, children: prevChildren, component } = prevVNode\r\n  const { props: nextProps, children: nextChildren, patchFlag } = nextVNode\r\n  const emits = component!.emitsOptions\r\n\r\n  // Parent component's render function was hot-updated. Since this may have\r\n  // caused the child component's slots content to have changed, we need to\r\n  // force the child to update as well.\r\n  if (__DEV__ && (prevChildren || nextChildren) && isHmrUpdating) {\r\n    return true\r\n  }\r\n\r\n  // force child update for runtime directive or transition on component vnode.\r\n  if (nextVNode.dirs || nextVNode.transition) {\r\n    return true\r\n  }\r\n\r\n  if (optimized && patchFlag >= 0) {\r\n    if (patchFlag & PatchFlags.DYNAMIC_SLOTS) {\r\n      // slot content that references values that might have changed,\r\n      // e.g. in a v-for\r\n      return true\r\n    }\r\n    if (patchFlag & PatchFlags.FULL_PROPS) {\r\n      if (!prevProps) {\r\n        return !!nextProps\r\n      }\r\n      // presence of this flag indicates props are always non-null\r\n      return hasPropsChanged(prevProps, nextProps!, emits)\r\n    } else if (patchFlag & PatchFlags.PROPS) {\r\n      const dynamicProps = nextVNode.dynamicProps!\r\n      for (let i = 0; i < dynamicProps.length; i++) {\r\n        const key = dynamicProps[i]\r\n        if (\r\n          nextProps![key] !== prevProps![key] &&\r\n          !isEmitListener(emits, key)\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // this path is only taken by manually written render functions\r\n    // so presence of any children leads to a forced update\r\n    if (prevChildren || nextChildren) {\r\n      if (!nextChildren || !(nextChildren as any).$stable) {\r\n        return true\r\n      }\r\n    }\r\n    if (prevProps === nextProps) {\r\n      return false\r\n    }\r\n    if (!prevProps) {\r\n      return !!nextProps\r\n    }\r\n    if (!nextProps) {\r\n      return true\r\n    }\r\n    return hasPropsChanged(prevProps, nextProps, emits)\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nfunction hasPropsChanged(\r\n  prevProps: Data,\r\n  nextProps: Data,\r\n  emitsOptions: ComponentInternalInstance['emitsOptions']\r\n): boolean {\r\n  const nextKeys = Object.keys(nextProps)\r\n  if (nextKeys.length !== Object.keys(prevProps).length) {\r\n    return true\r\n  }\r\n  for (let i = 0; i < nextKeys.length; i++) {\r\n    const key = nextKeys[i]\r\n    if (\r\n      nextProps[key] !== prevProps[key] &&\r\n      !isEmitListener(emitsOptions, key)\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport function updateHOCHostEl(\r\n  { vnode, parent }: ComponentInternalInstance,\r\n  el: typeof vnode.el // HostNode\r\n) {\r\n  while (parent && parent.subTree === vnode) {\r\n    ;(vnode = parent.vnode).el = el\r\n    parent = parent.parent\r\n  }\r\n}\r\n","import {\r\n  VNode,\r\n  normalizeVNode,\r\n  VNodeProps,\r\n  isSameVNodeType,\r\n  openBlock,\r\n  closeBlock,\r\n  currentBlock,\r\n  Comment,\r\n  createVNode,\r\n  isBlockTreeEnabled\r\n} from '../vnode'\r\nimport { isFunction, isArray, ShapeFlags, toNumber } from '@vue/shared'\r\nimport { ComponentInternalInstance, handleSetupResult } from '../component'\r\nimport { Slots } from '../componentSlots'\r\nimport {\r\n  RendererInternals,\r\n  MoveType,\r\n  SetupRenderEffectFn,\r\n  RendererNode,\r\n  RendererElement\r\n} from '../renderer'\r\nimport { queuePostFlushCb } from '../scheduler'\r\nimport { filterSingleRoot, updateHOCHostEl } from '../componentRenderUtils'\r\nimport { pushWarningContext, popWarningContext, warn } from '../warning'\r\nimport { handleError, ErrorCodes } from '../errorHandling'\r\n\r\nexport interface SuspenseProps {\r\n  onResolve?: () => void\r\n  onPending?: () => void\r\n  onFallback?: () => void\r\n  timeout?: string | number\r\n}\r\n\r\nexport const isSuspense = (type: any): boolean => type.__isSuspense\r\n\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nexport const SuspenseImpl = {\r\n  name: 'Suspense',\r\n  // In order to make Suspense tree-shakable, we need to avoid importing it\r\n  // directly in the renderer. The renderer checks for the __isSuspense flag\r\n  // on a vnode's type and calls the `process` method, passing in renderer\r\n  // internals.\r\n  __isSuspense: true,\r\n  process(\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n    // platform-specific impl passed from renderer\r\n    rendererInternals: RendererInternals\r\n  ) {\r\n    if (n1 == null) {\r\n      mountSuspense(\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized,\r\n        rendererInternals\r\n      )\r\n    } else {\r\n      patchSuspense(\r\n        n1,\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized,\r\n        rendererInternals\r\n      )\r\n    }\r\n  },\r\n  hydrate: hydrateSuspense,\r\n  create: createSuspenseBoundary,\r\n  normalize: normalizeSuspenseChildren\r\n}\r\n\r\n// Force-casted public typing for h and TSX props inference\r\nexport const Suspense = (__FEATURE_SUSPENSE__ ? SuspenseImpl : null) as any as {\r\n  __isSuspense: true\r\n  new (): { $props: VNodeProps & SuspenseProps }\r\n}\r\n\r\nfunction triggerEvent(\r\n  vnode: VNode,\r\n  name: 'onResolve' | 'onPending' | 'onFallback'\r\n) {\r\n  const eventListener = vnode.props && vnode.props[name]\r\n  if (isFunction(eventListener)) {\r\n    eventListener()\r\n  }\r\n}\r\n\r\nfunction mountSuspense(\r\n  vnode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals\r\n) {\r\n  const {\r\n    p: patch,\r\n    o: { createElement }\r\n  } = rendererInternals\r\n  const hiddenContainer = createElement('div')\r\n  const suspense = (vnode.suspense = createSuspenseBoundary(\r\n    vnode,\r\n    parentSuspense,\r\n    parentComponent,\r\n    container,\r\n    hiddenContainer,\r\n    anchor,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized,\r\n    rendererInternals\r\n  ))\r\n\r\n  // start mounting the content subtree in an off-dom container\r\n  patch(\r\n    null,\r\n    (suspense.pendingBranch = vnode.ssContent!),\r\n    hiddenContainer,\r\n    null,\r\n    parentComponent,\r\n    suspense,\r\n    isSVG,\r\n    slotScopeIds\r\n  )\r\n  // now check if we have encountered any async deps\r\n  if (suspense.deps > 0) {\r\n    // has async\r\n    // invoke @fallback event\r\n    triggerEvent(vnode, 'onPending')\r\n    triggerEvent(vnode, 'onFallback')\r\n\r\n    // mount the fallback tree\r\n    patch(\r\n      null,\r\n      vnode.ssFallback!,\r\n      container,\r\n      anchor,\r\n      parentComponent,\r\n      null, // fallback tree will not have suspense context\r\n      isSVG,\r\n      slotScopeIds\r\n    )\r\n    setActiveBranch(suspense, vnode.ssFallback!)\r\n  } else {\r\n    // Suspense has no async deps. Just resolve.\r\n    suspense.resolve()\r\n  }\r\n}\r\n\r\nfunction patchSuspense(\r\n  n1: VNode,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  { p: patch, um: unmount, o: { createElement } }: RendererInternals\r\n) {\r\n  const suspense = (n2.suspense = n1.suspense)!\r\n  suspense.vnode = n2\r\n  n2.el = n1.el\r\n  const newBranch = n2.ssContent!\r\n  const newFallback = n2.ssFallback!\r\n\r\n  const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense\r\n  if (pendingBranch) {\r\n    suspense.pendingBranch = newBranch\r\n    if (isSameVNodeType(newBranch, pendingBranch)) {\r\n      // same root type but content may have changed.\r\n      patch(\r\n        pendingBranch,\r\n        newBranch,\r\n        suspense.hiddenContainer,\r\n        null,\r\n        parentComponent,\r\n        suspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n      if (suspense.deps <= 0) {\r\n        suspense.resolve()\r\n      } else if (isInFallback) {\r\n        patch(\r\n          activeBranch,\r\n          newFallback,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          null, // fallback tree will not have suspense context\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        setActiveBranch(suspense, newFallback)\r\n      }\r\n    } else {\r\n      // toggled before pending tree is resolved\r\n      suspense.pendingId++\r\n      if (isHydrating) {\r\n        // if toggled before hydration is finished, the current DOM tree is\r\n        // no longer valid. set it as the active branch so it will be unmounted\r\n        // when resolved\r\n        suspense.isHydrating = false\r\n        suspense.activeBranch = pendingBranch\r\n      } else {\r\n        unmount(pendingBranch, parentComponent, suspense)\r\n      }\r\n      // increment pending ID. this is used to invalidate async callbacks\r\n      // reset suspense state\r\n      suspense.deps = 0\r\n      // discard effects from pending branch\r\n      suspense.effects.length = 0\r\n      // discard previous container\r\n      suspense.hiddenContainer = createElement('div')\r\n\r\n      if (isInFallback) {\r\n        // already in fallback state\r\n        patch(\r\n          null,\r\n          newBranch,\r\n          suspense.hiddenContainer,\r\n          null,\r\n          parentComponent,\r\n          suspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        if (suspense.deps <= 0) {\r\n          suspense.resolve()\r\n        } else {\r\n          patch(\r\n            activeBranch,\r\n            newFallback,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            null, // fallback tree will not have suspense context\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n          setActiveBranch(suspense, newFallback)\r\n        }\r\n      } else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n        // toggled \"back\" to current active branch\r\n        patch(\r\n          activeBranch,\r\n          newBranch,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          suspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        // force resolve\r\n        suspense.resolve(true)\r\n      } else {\r\n        // switched to a 3rd branch\r\n        patch(\r\n          null,\r\n          newBranch,\r\n          suspense.hiddenContainer,\r\n          null,\r\n          parentComponent,\r\n          suspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        if (suspense.deps <= 0) {\r\n          suspense.resolve()\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n      // root did not change, just normal patch\r\n      patch(\r\n        activeBranch,\r\n        newBranch,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        suspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n      setActiveBranch(suspense, newBranch)\r\n    } else {\r\n      // root node toggled\r\n      // invoke @pending event\r\n      triggerEvent(n2, 'onPending')\r\n      // mount pending branch in off-dom container\r\n      suspense.pendingBranch = newBranch\r\n      suspense.pendingId++\r\n      patch(\r\n        null,\r\n        newBranch,\r\n        suspense.hiddenContainer,\r\n        null,\r\n        parentComponent,\r\n        suspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n      if (suspense.deps <= 0) {\r\n        // incoming branch has no async deps, resolve now.\r\n        suspense.resolve()\r\n      } else {\r\n        const { timeout, pendingId } = suspense\r\n        if (timeout > 0) {\r\n          setTimeout(() => {\r\n            if (suspense.pendingId === pendingId) {\r\n              suspense.fallback(newFallback)\r\n            }\r\n          }, timeout)\r\n        } else if (timeout === 0) {\r\n          suspense.fallback(newFallback)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport interface SuspenseBoundary {\r\n  vnode: VNode<RendererNode, RendererElement, SuspenseProps>\r\n  parent: SuspenseBoundary | null\r\n  parentComponent: ComponentInternalInstance | null\r\n  isSVG: boolean\r\n  container: RendererElement\r\n  hiddenContainer: RendererElement\r\n  anchor: RendererNode | null\r\n  activeBranch: VNode | null\r\n  pendingBranch: VNode | null\r\n  deps: number\r\n  pendingId: number\r\n  timeout: number\r\n  isInFallback: boolean\r\n  isHydrating: boolean\r\n  isUnmounted: boolean\r\n  effects: Function[]\r\n  resolve(force?: boolean): void\r\n  fallback(fallbackVNode: VNode): void\r\n  move(\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    type: MoveType\r\n  ): void\r\n  next(): RendererNode | null\r\n  registerDep(\r\n    instance: ComponentInternalInstance,\r\n    setupRenderEffect: SetupRenderEffectFn\r\n  ): void\r\n  unmount(parentSuspense: SuspenseBoundary | null, doRemove?: boolean): void\r\n}\r\n\r\nlet hasWarned = false\r\n\r\nfunction createSuspenseBoundary(\r\n  vnode: VNode,\r\n  parent: SuspenseBoundary | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  container: RendererElement,\r\n  hiddenContainer: RendererElement,\r\n  anchor: RendererNode | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals,\r\n  isHydrating = false\r\n): SuspenseBoundary {\r\n  /* istanbul ignore if */\r\n  if (__DEV__ && !__TEST__ && !hasWarned) {\r\n    hasWarned = true\r\n    // @ts-ignore `console.info` cannot be null error\r\n    console[console.info ? 'info' : 'log'](\r\n      `<Suspense> is an experimental feature and its API will likely change.`\r\n    )\r\n  }\r\n\r\n  const {\r\n    p: patch,\r\n    m: move,\r\n    um: unmount,\r\n    n: next,\r\n    o: { parentNode, remove }\r\n  } = rendererInternals\r\n\r\n  const timeout = toNumber(vnode.props && vnode.props.timeout)\r\n  const suspense: SuspenseBoundary = {\r\n    vnode,\r\n    parent,\r\n    parentComponent,\r\n    isSVG,\r\n    container,\r\n    hiddenContainer,\r\n    anchor,\r\n    deps: 0,\r\n    pendingId: 0,\r\n    timeout: typeof timeout === 'number' ? timeout : -1,\r\n    activeBranch: null,\r\n    pendingBranch: null,\r\n    isInFallback: true,\r\n    isHydrating,\r\n    isUnmounted: false,\r\n    effects: [],\r\n\r\n    resolve(resume = false) {\r\n      if (__DEV__) {\r\n        if (!resume && !suspense.pendingBranch) {\r\n          throw new Error(\r\n            `suspense.resolve() is called without a pending branch.`\r\n          )\r\n        }\r\n        if (suspense.isUnmounted) {\r\n          throw new Error(\r\n            `suspense.resolve() is called on an already unmounted suspense boundary.`\r\n          )\r\n        }\r\n      }\r\n      const {\r\n        vnode,\r\n        activeBranch,\r\n        pendingBranch,\r\n        pendingId,\r\n        effects,\r\n        parentComponent,\r\n        container\r\n      } = suspense\r\n\r\n      if (suspense.isHydrating) {\r\n        suspense.isHydrating = false\r\n      } else if (!resume) {\r\n        const delayEnter =\r\n          activeBranch &&\r\n          pendingBranch!.transition &&\r\n          pendingBranch!.transition.mode === 'out-in'\r\n        if (delayEnter) {\r\n          activeBranch!.transition!.afterLeave = () => {\r\n            if (pendingId === suspense.pendingId) {\r\n              move(pendingBranch!, container, anchor, MoveType.ENTER)\r\n            }\r\n          }\r\n        }\r\n        // this is initial anchor on mount\r\n        let { anchor } = suspense\r\n        // unmount current active tree\r\n        if (activeBranch) {\r\n          // if the fallback tree was mounted, it may have been moved\r\n          // as part of a parent suspense. get the latest anchor for insertion\r\n          anchor = next(activeBranch)\r\n          unmount(activeBranch, parentComponent, suspense, true)\r\n        }\r\n        if (!delayEnter) {\r\n          // move content from off-dom container to actual container\r\n          move(pendingBranch!, container, anchor, MoveType.ENTER)\r\n        }\r\n      }\r\n\r\n      setActiveBranch(suspense, pendingBranch!)\r\n      suspense.pendingBranch = null\r\n      suspense.isInFallback = false\r\n\r\n      // flush buffered effects\r\n      // check if there is a pending parent suspense\r\n      let parent = suspense.parent\r\n      let hasUnresolvedAncestor = false\r\n      while (parent) {\r\n        if (parent.pendingBranch) {\r\n          // found a pending parent suspense, merge buffered post jobs\r\n          // into that parent\r\n          parent.effects.push(...effects)\r\n          hasUnresolvedAncestor = true\r\n          break\r\n        }\r\n        parent = parent.parent\r\n      }\r\n      // no pending parent suspense, flush all jobs\r\n      if (!hasUnresolvedAncestor) {\r\n        queuePostFlushCb(effects)\r\n      }\r\n      suspense.effects = []\r\n\r\n      // invoke @resolve event\r\n      triggerEvent(vnode, 'onResolve')\r\n    },\r\n\r\n    fallback(fallbackVNode) {\r\n      if (!suspense.pendingBranch) {\r\n        return\r\n      }\r\n\r\n      const { vnode, activeBranch, parentComponent, container, isSVG } =\r\n        suspense\r\n\r\n      // invoke @fallback event\r\n      triggerEvent(vnode, 'onFallback')\r\n\r\n      const anchor = next(activeBranch!)\r\n      const mountFallback = () => {\r\n        if (!suspense.isInFallback) {\r\n          return\r\n        }\r\n        // mount the fallback tree\r\n        patch(\r\n          null,\r\n          fallbackVNode,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          null, // fallback tree will not have suspense context\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        setActiveBranch(suspense, fallbackVNode)\r\n      }\r\n\r\n      const delayEnter =\r\n        fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in'\r\n      if (delayEnter) {\r\n        activeBranch!.transition!.afterLeave = mountFallback\r\n      }\r\n      suspense.isInFallback = true\r\n\r\n      // unmount current active branch\r\n      unmount(\r\n        activeBranch!,\r\n        parentComponent,\r\n        null, // no suspense so unmount hooks fire now\r\n        true // shouldRemove\r\n      )\r\n\r\n      if (!delayEnter) {\r\n        mountFallback()\r\n      }\r\n    },\r\n\r\n    move(container, anchor, type) {\r\n      suspense.activeBranch &&\r\n        move(suspense.activeBranch, container, anchor, type)\r\n      suspense.container = container\r\n    },\r\n\r\n    next() {\r\n      return suspense.activeBranch && next(suspense.activeBranch)\r\n    },\r\n\r\n    registerDep(instance, setupRenderEffect) {\r\n      const isInPendingSuspense = !!suspense.pendingBranch\r\n      if (isInPendingSuspense) {\r\n        suspense.deps++\r\n      }\r\n      const hydratedEl = instance.vnode.el\r\n      instance\r\n        .asyncDep!.catch(err => {\r\n          handleError(err, instance, ErrorCodes.SETUP_FUNCTION)\r\n        })\r\n        .then(asyncSetupResult => {\r\n          // retry when the setup() promise resolves.\r\n          // component may have been unmounted before resolve.\r\n          if (\r\n            instance.isUnmounted ||\r\n            suspense.isUnmounted ||\r\n            suspense.pendingId !== instance.suspenseId\r\n          ) {\r\n            return\r\n          }\r\n          // retry from this component\r\n          instance.asyncResolved = true\r\n          const { vnode } = instance\r\n          if (__DEV__) {\r\n            pushWarningContext(vnode)\r\n          }\r\n          handleSetupResult(instance, asyncSetupResult, false)\r\n          if (hydratedEl) {\r\n            // vnode may have been replaced if an update happened before the\r\n            // async dep is resolved.\r\n            vnode.el = hydratedEl\r\n          }\r\n          const placeholder = !hydratedEl && instance.subTree.el\r\n          setupRenderEffect(\r\n            instance,\r\n            vnode,\r\n            // component may have been moved before resolve.\r\n            // if this is not a hydration, instance.subTree will be the comment\r\n            // placeholder.\r\n            parentNode(hydratedEl || instance.subTree.el!)!,\r\n            // anchor will not be used if this is hydration, so only need to\r\n            // consider the comment placeholder case.\r\n            hydratedEl ? null : next(instance.subTree),\r\n            suspense,\r\n            isSVG,\r\n            optimized\r\n          )\r\n          if (placeholder) {\r\n            remove(placeholder)\r\n          }\r\n          updateHOCHostEl(instance, vnode.el)\r\n          if (__DEV__) {\r\n            popWarningContext()\r\n          }\r\n          // only decrease deps count if suspense is not already resolved\r\n          if (isInPendingSuspense && --suspense.deps === 0) {\r\n            suspense.resolve()\r\n          }\r\n        })\r\n    },\r\n\r\n    unmount(parentSuspense, doRemove) {\r\n      suspense.isUnmounted = true\r\n      if (suspense.activeBranch) {\r\n        unmount(\r\n          suspense.activeBranch,\r\n          parentComponent,\r\n          parentSuspense,\r\n          doRemove\r\n        )\r\n      }\r\n      if (suspense.pendingBranch) {\r\n        unmount(\r\n          suspense.pendingBranch,\r\n          parentComponent,\r\n          parentSuspense,\r\n          doRemove\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  return suspense\r\n}\r\n\r\nfunction hydrateSuspense(\r\n  node: Node,\r\n  vnode: VNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals,\r\n  hydrateNode: (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => Node | null\r\n): Node | null {\r\n  /* eslint-disable no-restricted-globals */\r\n  const suspense = (vnode.suspense = createSuspenseBoundary(\r\n    vnode,\r\n    parentSuspense,\r\n    parentComponent,\r\n    node.parentNode!,\r\n    document.createElement('div'),\r\n    null,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized,\r\n    rendererInternals,\r\n    true /* hydrating */\r\n  ))\r\n  // there are two possible scenarios for server-rendered suspense:\r\n  // - success: ssr content should be fully resolved\r\n  // - failure: ssr content should be the fallback branch.\r\n  // however, on the client we don't really know if it has failed or not\r\n  // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n  // need to construct a suspense boundary first\r\n  const result = hydrateNode(\r\n    node,\r\n    (suspense.pendingBranch = vnode.ssContent!),\r\n    parentComponent,\r\n    suspense,\r\n    slotScopeIds,\r\n    optimized\r\n  )\r\n  if (suspense.deps === 0) {\r\n    suspense.resolve()\r\n  }\r\n  return result\r\n  /* eslint-enable no-restricted-globals */\r\n}\r\n\r\nfunction normalizeSuspenseChildren(vnode: VNode) {\r\n  const { shapeFlag, children } = vnode\r\n  const isSlotChildren = shapeFlag & ShapeFlags.SLOTS_CHILDREN\r\n  vnode.ssContent = normalizeSuspenseSlot(\r\n    isSlotChildren ? (children as Slots).default : children\r\n  )\r\n  vnode.ssFallback = isSlotChildren\r\n    ? normalizeSuspenseSlot((children as Slots).fallback)\r\n    : createVNode(Comment)\r\n}\r\n\r\nfunction normalizeSuspenseSlot(s: any) {\r\n  let block: VNode[] | null | undefined\r\n  if (isFunction(s)) {\r\n    const trackBlock = isBlockTreeEnabled && s._c\r\n    if (trackBlock) {\r\n      // disableTracking: false\r\n      // allow block tracking for compiled slots\r\n      // (see ./componentRenderContext.ts)\r\n      s._d = false\r\n      openBlock()\r\n    }\r\n    s = s()\r\n    if (trackBlock) {\r\n      s._d = true\r\n      block = currentBlock\r\n      closeBlock()\r\n    }\r\n  }\r\n  if (isArray(s)) {\r\n    const singleChild = filterSingleRoot(s)\r\n    if (__DEV__ && !singleChild) {\r\n      warn(`<Suspense> slots expect a single root node.`)\r\n    }\r\n    s = singleChild\r\n  }\r\n  s = normalizeVNode(s)\r\n  if (block && !s.dynamicChildren) {\r\n    s.dynamicChildren = block.filter(c => c !== s)\r\n  }\r\n  return s\r\n}\r\n\r\nexport function queueEffectWithSuspense(\r\n  fn: Function | Function[],\r\n  suspense: SuspenseBoundary | null\r\n): void {\r\n  if (suspense && suspense.pendingBranch) {\r\n    if (isArray(fn)) {\r\n      suspense.effects.push(...fn)\r\n    } else {\r\n      suspense.effects.push(fn)\r\n    }\r\n  } else {\r\n    queuePostFlushCb(fn)\r\n  }\r\n}\r\n\r\nfunction setActiveBranch(suspense: SuspenseBoundary, branch: VNode) {\r\n  suspense.activeBranch = branch\r\n  const { vnode, parentComponent } = suspense\r\n  const el = (vnode.el = branch.el)\r\n  // in case suspense is the root node of a component,\r\n  // recursively update the HOC el\r\n  if (parentComponent && parentComponent.subTree === vnode) {\r\n    parentComponent.vnode.el = el\r\n    updateHOCHostEl(parentComponent, el)\r\n  }\r\n}\r\n","import { isFunction } from '@vue/shared'\r\nimport { currentInstance } from './component'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { warn } from './warning'\r\n\r\nexport interface InjectionKey<T> extends Symbol {}\r\n\r\nexport function provide<T>(key: InjectionKey<T> | string | number, value: T) {\r\n  if (!currentInstance) {\r\n    if (__DEV__) {\r\n      warn(`provide() can only be used inside setup().`)\r\n    }\r\n  } else {\r\n    let provides = currentInstance.provides\r\n    // by default an instance inherits its parent's provides object\r\n    // but when it needs to provide values of its own, it creates its\r\n    // own provides object using parent provides object as prototype.\r\n    // this way in `inject` we can simply look up injections from direct\r\n    // parent and let the prototype chain do the work.\r\n    const parentProvides =\r\n      currentInstance.parent && currentInstance.parent.provides\r\n    if (parentProvides === provides) {\r\n      provides = currentInstance.provides = Object.create(parentProvides)\r\n    }\r\n    // TS doesn't allow symbol as index type\r\n    provides[key as string] = value\r\n  }\r\n}\r\n\r\nexport function inject<T>(key: InjectionKey<T> | string): T | undefined\r\nexport function inject<T>(\r\n  key: InjectionKey<T> | string,\r\n  defaultValue: T,\r\n  treatDefaultAsFactory?: false\r\n): T\r\nexport function inject<T>(\r\n  key: InjectionKey<T> | string,\r\n  defaultValue: T | (() => T),\r\n  treatDefaultAsFactory: true\r\n): T\r\nexport function inject(\r\n  key: InjectionKey<any> | string,\r\n  defaultValue?: unknown,\r\n  treatDefaultAsFactory = false\r\n) {\r\n  // fallback to `currentRenderingInstance` so that this can be called in\r\n  // a functional component\r\n  const instance = currentInstance || currentRenderingInstance\r\n  if (instance) {\r\n    // #2400\r\n    // to support `app.use` plugins,\r\n    // fallback to appContext's `provides` if the instance is at root\r\n    const provides =\r\n      instance.parent == null\r\n        ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n        : instance.parent.provides\r\n\r\n    if (provides && (key as string | symbol) in provides) {\r\n      // TS doesn't allow symbol as index type\r\n      return provides[key as string]\r\n    } else if (arguments.length > 1) {\r\n      return treatDefaultAsFactory && isFunction(defaultValue)\r\n        ? defaultValue.call(instance.proxy)\r\n        : defaultValue\r\n    } else if (__DEV__) {\r\n      warn(`injection \"${String(key)}\" not found.`)\r\n    }\r\n  } else if (__DEV__) {\r\n    warn(`inject() can only be used inside setup() or functional components.`)\r\n  }\r\n}\r\n","import {\r\n  isRef,\r\n  isShallow,\r\n  Ref,\r\n  ComputedRef,\r\n  ReactiveEffect,\r\n  isReactive,\r\n  ReactiveFlags,\r\n  EffectScheduler,\r\n  DebuggerOptions\r\n} from '@vue/reactivity'\r\nimport { SchedulerJob, queuePreFlushCb } from './scheduler'\r\nimport {\r\n  EMPTY_OBJ,\r\n  isObject,\r\n  isArray,\r\n  isFunction,\r\n  isString,\r\n  hasChanged,\r\n  NOOP,\r\n  remove,\r\n  isMap,\r\n  isSet,\r\n  isPlainObject\r\n} from '@vue/shared'\r\nimport {\r\n  currentInstance,\r\n  ComponentInternalInstance,\r\n  isInSSRComponentSetup,\r\n  setCurrentInstance,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport {\r\n  ErrorCodes,\r\n  callWithErrorHandling,\r\n  callWithAsyncErrorHandling\r\n} from './errorHandling'\r\nimport { queuePostRenderEffect } from './renderer'\r\nimport { warn } from './warning'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport { checkCompatEnabled, isCompatEnabled } from './compat/compatConfig'\r\nimport { ObjectWatchOptionItem } from './componentOptions'\r\n\r\nexport type WatchEffect = (onCleanup: OnCleanup) => void\r\n\r\nexport type WatchSource<T = any> = Ref<T> | ComputedRef<T> | (() => T)\r\n\r\nexport type WatchCallback<V = any, OV = any> = (\r\n  value: V,\r\n  oldValue: OV,\r\n  onCleanup: OnCleanup\r\n) => any\r\n\r\ntype MapSources<T, Immediate> = {\r\n  [K in keyof T]: T[K] extends WatchSource<infer V>\r\n    ? Immediate extends true\r\n      ? V | undefined\r\n      : V\r\n    : T[K] extends object\r\n    ? Immediate extends true\r\n      ? T[K] | undefined\r\n      : T[K]\r\n    : never\r\n}\r\n\r\ntype OnCleanup = (cleanupFn: () => void) => void\r\n\r\nexport interface WatchOptionsBase extends DebuggerOptions {\r\n  flush?: 'pre' | 'post' | 'sync'\r\n}\r\n\r\nexport interface WatchOptions<Immediate = boolean> extends WatchOptionsBase {\r\n  immediate?: Immediate\r\n  deep?: boolean\r\n}\r\n\r\nexport type WatchStopHandle = () => void\r\n\r\n// Simple effect.\r\nexport function watchEffect(\r\n  effect: WatchEffect,\r\n  options?: WatchOptionsBase\r\n): WatchStopHandle {\r\n  return doWatch(effect, null, options)\r\n}\r\n\r\nexport function watchPostEffect(\r\n  effect: WatchEffect,\r\n  options?: DebuggerOptions\r\n) {\r\n  return doWatch(\r\n    effect,\r\n    null,\r\n    (__DEV__\r\n      ? { ...options, flush: 'post' }\r\n      : { flush: 'post' }) as WatchOptionsBase\r\n  )\r\n}\r\n\r\nexport function watchSyncEffect(\r\n  effect: WatchEffect,\r\n  options?: DebuggerOptions\r\n) {\r\n  return doWatch(\r\n    effect,\r\n    null,\r\n    (__DEV__\r\n      ? { ...options, flush: 'sync' }\r\n      : { flush: 'sync' }) as WatchOptionsBase\r\n  )\r\n}\r\n\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {}\r\n\r\ntype MultiWatchSources = (WatchSource<unknown> | object)[]\r\n\r\n// overload: array of multiple sources + cb\r\nexport function watch<\r\n  T extends MultiWatchSources,\r\n  Immediate extends Readonly<boolean> = false\r\n>(\r\n  sources: [...T],\r\n  cb: WatchCallback<MapSources<T, false>, MapSources<T, Immediate>>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// overload: multiple sources w/ `as const`\r\n// watch([foo, bar] as const, () => {})\r\n// somehow [...T] breaks when the type is readonly\r\nexport function watch<\r\n  T extends Readonly<MultiWatchSources>,\r\n  Immediate extends Readonly<boolean> = false\r\n>(\r\n  source: T,\r\n  cb: WatchCallback<MapSources<T, false>, MapSources<T, Immediate>>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// overload: single source + cb\r\nexport function watch<T, Immediate extends Readonly<boolean> = false>(\r\n  source: WatchSource<T>,\r\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// overload: watching reactive object w/ cb\r\nexport function watch<\r\n  T extends object,\r\n  Immediate extends Readonly<boolean> = false\r\n>(\r\n  source: T,\r\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle\r\n\r\n// implementation\r\nexport function watch<T = any, Immediate extends Readonly<boolean> = false>(\r\n  source: T | WatchSource<T>,\r\n  cb: any,\r\n  options?: WatchOptions<Immediate>\r\n): WatchStopHandle {\r\n  if (__DEV__ && !isFunction(cb)) {\r\n    warn(\r\n      `\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n        `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n        `supports \\`watch(source, cb, options?) signature.`\r\n    )\r\n  }\r\n  return doWatch(source as any, cb, options)\r\n}\r\n\r\nfunction doWatch(\r\n  source: WatchSource | WatchSource[] | WatchEffect | object,\r\n  cb: WatchCallback | null,\r\n  { immediate, deep, flush, onTrack, onTrigger }: WatchOptions = EMPTY_OBJ\r\n): WatchStopHandle {\r\n  if (__DEV__ && !cb) {\r\n    if (immediate !== undefined) {\r\n      warn(\r\n        `watch() \"immediate\" option is only respected when using the ` +\r\n          `watch(source, callback, options?) signature.`\r\n      )\r\n    }\r\n    if (deep !== undefined) {\r\n      warn(\r\n        `watch() \"deep\" option is only respected when using the ` +\r\n          `watch(source, callback, options?) signature.`\r\n      )\r\n    }\r\n  }\r\n\r\n  const warnInvalidSource = (s: unknown) => {\r\n    warn(\r\n      `Invalid watch source: `,\r\n      s,\r\n      `A watch source can only be a getter/effect function, a ref, ` +\r\n        `a reactive object, or an array of these types.`\r\n    )\r\n  }\r\n\r\n  const instance = currentInstance\r\n  let getter: () => any\r\n  let forceTrigger = false\r\n  let isMultiSource = false\r\n\r\n  if (isRef(source)) {\r\n    getter = () => source.value\r\n    forceTrigger = isShallow(source)\r\n  } else if (isReactive(source)) {\r\n    getter = () => source\r\n    deep = true\r\n  } else if (isArray(source)) {\r\n    isMultiSource = true\r\n    forceTrigger = source.some(s => isReactive(s) || isShallow(s))\r\n    getter = () =>\r\n      source.map(s => {\r\n        if (isRef(s)) {\r\n          return s.value\r\n        } else if (isReactive(s)) {\r\n          return traverse(s)\r\n        } else if (isFunction(s)) {\r\n          return callWithErrorHandling(s, instance, ErrorCodes.WATCH_GETTER)\r\n        } else {\r\n          __DEV__ && warnInvalidSource(s)\r\n        }\r\n      })\r\n  } else if (isFunction(source)) {\r\n    if (cb) {\r\n      // getter with cb\r\n      getter = () =>\r\n        callWithErrorHandling(source, instance, ErrorCodes.WATCH_GETTER)\r\n    } else {\r\n      // no cb -> simple effect\r\n      getter = () => {\r\n        if (instance && instance.isUnmounted) {\r\n          return\r\n        }\r\n        if (cleanup) {\r\n          cleanup()\r\n        }\r\n        return callWithAsyncErrorHandling(\r\n          source,\r\n          instance,\r\n          ErrorCodes.WATCH_CALLBACK,\r\n          [onCleanup]\r\n        )\r\n      }\r\n    }\r\n  } else {\r\n    getter = NOOP\r\n    __DEV__ && warnInvalidSource(source)\r\n  }\r\n\r\n  // 2.x array mutation watch compat\r\n  if (__COMPAT__ && cb && !deep) {\r\n    const baseGetter = getter\r\n    getter = () => {\r\n      const val = baseGetter()\r\n      if (\r\n        isArray(val) &&\r\n        checkCompatEnabled(DeprecationTypes.WATCH_ARRAY, instance)\r\n      ) {\r\n        traverse(val)\r\n      }\r\n      return val\r\n    }\r\n  }\r\n\r\n  if (cb && deep) {\r\n    const baseGetter = getter\r\n    getter = () => traverse(baseGetter())\r\n  }\r\n\r\n  let cleanup: () => void\r\n  let onCleanup: OnCleanup = (fn: () => void) => {\r\n    cleanup = effect.onStop = () => {\r\n      callWithErrorHandling(fn, instance, ErrorCodes.WATCH_CLEANUP)\r\n    }\r\n  }\r\n\r\n  // in SSR there is no need to setup an actual effect, and it should be noop\r\n  // unless it's eager\r\n  if (__SSR__ && isInSSRComponentSetup) {\r\n    // we will also not call the invalidate callback (+ runner is not set up)\r\n    onCleanup = NOOP\r\n    if (!cb) {\r\n      getter()\r\n    } else if (immediate) {\r\n      callWithAsyncErrorHandling(cb, instance, ErrorCodes.WATCH_CALLBACK, [\r\n        getter(),\r\n        isMultiSource ? [] : undefined,\r\n        onCleanup\r\n      ])\r\n    }\r\n    return NOOP\r\n  }\r\n\r\n  let oldValue = isMultiSource ? [] : INITIAL_WATCHER_VALUE\r\n  const job: SchedulerJob = () => {\r\n    if (!effect.active) {\r\n      return\r\n    }\r\n    if (cb) {\r\n      // watch(source, cb)\r\n      const newValue = effect.run()\r\n      if (\r\n        deep ||\r\n        forceTrigger ||\r\n        (isMultiSource\r\n          ? (newValue as any[]).some((v, i) =>\r\n              hasChanged(v, (oldValue as any[])[i])\r\n            )\r\n          : hasChanged(newValue, oldValue)) ||\r\n        (__COMPAT__ &&\r\n          isArray(newValue) &&\r\n          isCompatEnabled(DeprecationTypes.WATCH_ARRAY, instance))\r\n      ) {\r\n        // cleanup before running cb again\r\n        if (cleanup) {\r\n          cleanup()\r\n        }\r\n        callWithAsyncErrorHandling(cb, instance, ErrorCodes.WATCH_CALLBACK, [\r\n          newValue,\r\n          // pass undefined as the old value when it's changed for the first time\r\n          oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n          onCleanup\r\n        ])\r\n        oldValue = newValue\r\n      }\r\n    } else {\r\n      // watchEffect\r\n      effect.run()\r\n    }\r\n  }\r\n\r\n  // important: mark the job as a watcher callback so that scheduler knows\r\n  // it is allowed to self-trigger (#1727)\r\n  job.allowRecurse = !!cb\r\n\r\n  let scheduler: EffectScheduler\r\n  if (flush === 'sync') {\r\n    scheduler = job as any // the scheduler function gets called directly\r\n  } else if (flush === 'post') {\r\n    scheduler = () => queuePostRenderEffect(job, instance && instance.suspense)\r\n  } else {\r\n    // default: 'pre'\r\n    scheduler = () => queuePreFlushCb(job)\r\n  }\r\n\r\n  const effect = new ReactiveEffect(getter, scheduler)\r\n\r\n  if (__DEV__) {\r\n    effect.onTrack = onTrack\r\n    effect.onTrigger = onTrigger\r\n  }\r\n\r\n  // initial run\r\n  if (cb) {\r\n    if (immediate) {\r\n      job()\r\n    } else {\r\n      oldValue = effect.run()\r\n    }\r\n  } else if (flush === 'post') {\r\n    queuePostRenderEffect(\r\n      effect.run.bind(effect),\r\n      instance && instance.suspense\r\n    )\r\n  } else {\r\n    effect.run()\r\n  }\r\n\r\n  return () => {\r\n    effect.stop()\r\n    if (instance && instance.scope) {\r\n      remove(instance.scope.effects!, effect)\r\n    }\r\n  }\r\n}\r\n\r\n// this.$watch\r\nexport function instanceWatch(\r\n  this: ComponentInternalInstance,\r\n  source: string | Function,\r\n  value: WatchCallback | ObjectWatchOptionItem,\r\n  options?: WatchOptions\r\n): WatchStopHandle {\r\n  const publicThis = this.proxy as any\r\n  const getter = isString(source)\r\n    ? source.includes('.')\r\n      ? createPathGetter(publicThis, source)\r\n      : () => publicThis[source]\r\n    : source.bind(publicThis, publicThis)\r\n  let cb\r\n  if (isFunction(value)) {\r\n    cb = value\r\n  } else {\r\n    cb = value.handler as Function\r\n    options = value\r\n  }\r\n  const cur = currentInstance\r\n  setCurrentInstance(this)\r\n  const res = doWatch(getter, cb.bind(publicThis), options)\r\n  if (cur) {\r\n    setCurrentInstance(cur)\r\n  } else {\r\n    unsetCurrentInstance()\r\n  }\r\n  return res\r\n}\r\n\r\nexport function createPathGetter(ctx: any, path: string) {\r\n  const segments = path.split('.')\r\n  return () => {\r\n    let cur = ctx\r\n    for (let i = 0; i < segments.length && cur; i++) {\r\n      cur = cur[segments[i]]\r\n    }\r\n    return cur\r\n  }\r\n}\r\n\r\nexport function traverse(value: unknown, seen?: Set<unknown>) {\r\n  if (!isObject(value) || (value as any)[ReactiveFlags.SKIP]) {\r\n    return value\r\n  }\r\n  seen = seen || new Set()\r\n  if (seen.has(value)) {\r\n    return value\r\n  }\r\n  seen.add(value)\r\n  if (isRef(value)) {\r\n    traverse(value.value, seen)\r\n  } else if (isArray(value)) {\r\n    for (let i = 0; i < value.length; i++) {\r\n      traverse(value[i], seen)\r\n    }\r\n  } else if (isSet(value) || isMap(value)) {\r\n    value.forEach((v: any) => {\r\n      traverse(v, seen)\r\n    })\r\n  } else if (isPlainObject(value)) {\r\n    for (const key in value) {\r\n      traverse((value as any)[key], seen)\r\n    }\r\n  }\r\n  return value\r\n}\r\n","import {\r\n  getCurrentInstance,\r\n  SetupContext,\r\n  ComponentInternalInstance,\r\n  ComponentOptions\r\n} from '../component'\r\nimport {\r\n  cloneVNode,\r\n  Comment,\r\n  isSameVNodeType,\r\n  VNode,\r\n  VNodeArrayChildren,\r\n  Fragment\r\n} from '../vnode'\r\nimport { warn } from '../warning'\r\nimport { isKeepAlive } from './KeepAlive'\r\nimport { toRaw } from '@vue/reactivity'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from '../errorHandling'\r\nimport { ShapeFlags, PatchFlags, isArray } from '@vue/shared'\r\nimport { onBeforeUnmount, onMounted } from '../apiLifecycle'\r\nimport { RendererElement } from '../renderer'\r\n\r\ntype Hook<T = () => void> = T | T[]\r\n\r\nexport interface BaseTransitionProps<HostElement = RendererElement> {\r\n  mode?: 'in-out' | 'out-in' | 'default'\r\n  appear?: boolean\r\n\r\n  // If true, indicates this is a transition that doesn't actually insert/remove\r\n  // the element, but toggles the show / hidden status instead.\r\n  // The transition hooks are injected, but will be skipped by the renderer.\r\n  // Instead, a custom directive can control the transition by calling the\r\n  // injected hooks (e.g. v-show).\r\n  persisted?: boolean\r\n\r\n  // Hooks. Using camel case for easier usage in render functions & JSX.\r\n  // In templates these can be written as @before-enter=\"xxx\" as prop names\r\n  // are camelized.\r\n  onBeforeEnter?: Hook<(el: HostElement) => void>\r\n  onEnter?: Hook<(el: HostElement, done: () => void) => void>\r\n  onAfterEnter?: Hook<(el: HostElement) => void>\r\n  onEnterCancelled?: Hook<(el: HostElement) => void>\r\n  // leave\r\n  onBeforeLeave?: Hook<(el: HostElement) => void>\r\n  onLeave?: Hook<(el: HostElement, done: () => void) => void>\r\n  onAfterLeave?: Hook<(el: HostElement) => void>\r\n  onLeaveCancelled?: Hook<(el: HostElement) => void> // only fired in persisted mode\r\n  // appear\r\n  onBeforeAppear?: Hook<(el: HostElement) => void>\r\n  onAppear?: Hook<(el: HostElement, done: () => void) => void>\r\n  onAfterAppear?: Hook<(el: HostElement) => void>\r\n  onAppearCancelled?: Hook<(el: HostElement) => void>\r\n}\r\n\r\nexport interface TransitionHooks<\r\n  HostElement extends RendererElement = RendererElement\r\n> {\r\n  mode: BaseTransitionProps['mode']\r\n  persisted: boolean\r\n  beforeEnter(el: HostElement): void\r\n  enter(el: HostElement): void\r\n  leave(el: HostElement, remove: () => void): void\r\n  clone(vnode: VNode): TransitionHooks<HostElement>\r\n  // optional\r\n  afterLeave?(): void\r\n  delayLeave?(\r\n    el: HostElement,\r\n    earlyRemove: () => void,\r\n    delayedLeave: () => void\r\n  ): void\r\n  delayedLeave?(): void\r\n}\r\n\r\nexport type TransitionHookCaller = <T extends any[] = [el: any]>(\r\n  hook: Hook<(...args: T) => void> | undefined,\r\n  args?: T\r\n) => void\r\n\r\nexport type PendingCallback = (cancelled?: boolean) => void\r\n\r\nexport interface TransitionState {\r\n  isMounted: boolean\r\n  isLeaving: boolean\r\n  isUnmounting: boolean\r\n  // Track pending leave callbacks for children of the same key.\r\n  // This is used to force remove leaving a child when a new copy is entering.\r\n  leavingVNodes: Map<any, Record<string, VNode>>\r\n}\r\n\r\nexport interface TransitionElement {\r\n  // in persisted mode (e.g. v-show), the same element is toggled, so the\r\n  // pending enter/leave callbacks may need to be cancelled if the state is toggled\r\n  // before it finishes.\r\n  _enterCb?: PendingCallback\r\n  _leaveCb?: PendingCallback\r\n}\r\n\r\nexport function useTransitionState(): TransitionState {\r\n  const state: TransitionState = {\r\n    isMounted: false,\r\n    isLeaving: false,\r\n    isUnmounting: false,\r\n    leavingVNodes: new Map()\r\n  }\r\n  onMounted(() => {\r\n    state.isMounted = true\r\n  })\r\n  onBeforeUnmount(() => {\r\n    state.isUnmounting = true\r\n  })\r\n  return state\r\n}\r\n\r\nconst TransitionHookValidator = [Function, Array]\r\n\r\nconst BaseTransitionImpl: ComponentOptions = {\r\n  name: `BaseTransition`,\r\n\r\n  props: {\r\n    mode: String,\r\n    appear: Boolean,\r\n    persisted: Boolean,\r\n    // enter\r\n    onBeforeEnter: TransitionHookValidator,\r\n    onEnter: TransitionHookValidator,\r\n    onAfterEnter: TransitionHookValidator,\r\n    onEnterCancelled: TransitionHookValidator,\r\n    // leave\r\n    onBeforeLeave: TransitionHookValidator,\r\n    onLeave: TransitionHookValidator,\r\n    onAfterLeave: TransitionHookValidator,\r\n    onLeaveCancelled: TransitionHookValidator,\r\n    // appear\r\n    onBeforeAppear: TransitionHookValidator,\r\n    onAppear: TransitionHookValidator,\r\n    onAfterAppear: TransitionHookValidator,\r\n    onAppearCancelled: TransitionHookValidator\r\n  },\r\n\r\n  setup(props: BaseTransitionProps, { slots }: SetupContext) {\r\n    const instance = getCurrentInstance()!\r\n    const state = useTransitionState()\r\n\r\n    let prevTransitionKey: any\r\n\r\n    return () => {\r\n      const children =\r\n        slots.default && getTransitionRawChildren(slots.default(), true)\r\n      if (!children || !children.length) {\r\n        return\r\n      }\r\n\r\n      let child: VNode = children[0]\r\n      if (children.length > 1) {\r\n        let hasFound = false\r\n        // locate first non-comment child\r\n        for (const c of children) {\r\n          if (c.type !== Comment) {\r\n            if (__DEV__ && hasFound) {\r\n              // warn more than one non-comment child\r\n              warn(\r\n                '<transition> can only be used on a single element or component. ' +\r\n                  'Use <transition-group> for lists.'\r\n              )\r\n              break\r\n            }\r\n            child = c\r\n            hasFound = true\r\n            if (!__DEV__) break\r\n          }\r\n        }\r\n      }\r\n\r\n      // there's no need to track reactivity for these props so use the raw\r\n      // props for a bit better perf\r\n      const rawProps = toRaw(props)\r\n      const { mode } = rawProps\r\n      // check mode\r\n      if (\r\n        __DEV__ &&\r\n        mode &&\r\n        mode !== 'in-out' &&\r\n        mode !== 'out-in' &&\r\n        mode !== 'default'\r\n      ) {\r\n        warn(`invalid <transition> mode: ${mode}`)\r\n      }\r\n\r\n      if (state.isLeaving) {\r\n        return emptyPlaceholder(child)\r\n      }\r\n\r\n      // in the case of <transition><keep-alive/></transition>, we need to\r\n      // compare the type of the kept-alive children.\r\n      const innerChild = getKeepAliveChild(child)\r\n      if (!innerChild) {\r\n        return emptyPlaceholder(child)\r\n      }\r\n\r\n      const enterHooks = resolveTransitionHooks(\r\n        innerChild,\r\n        rawProps,\r\n        state,\r\n        instance\r\n      )\r\n      setTransitionHooks(innerChild, enterHooks)\r\n\r\n      const oldChild = instance.subTree\r\n      const oldInnerChild = oldChild && getKeepAliveChild(oldChild)\r\n\r\n      let transitionKeyChanged = false\r\n      const { getTransitionKey } = innerChild.type as any\r\n      if (getTransitionKey) {\r\n        const key = getTransitionKey()\r\n        if (prevTransitionKey === undefined) {\r\n          prevTransitionKey = key\r\n        } else if (key !== prevTransitionKey) {\r\n          prevTransitionKey = key\r\n          transitionKeyChanged = true\r\n        }\r\n      }\r\n\r\n      // handle mode\r\n      if (\r\n        oldInnerChild &&\r\n        oldInnerChild.type !== Comment &&\r\n        (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)\r\n      ) {\r\n        const leavingHooks = resolveTransitionHooks(\r\n          oldInnerChild,\r\n          rawProps,\r\n          state,\r\n          instance\r\n        )\r\n        // update old tree's hooks in case of dynamic transition\r\n        setTransitionHooks(oldInnerChild, leavingHooks)\r\n        // switching between different views\r\n        if (mode === 'out-in') {\r\n          state.isLeaving = true\r\n          // return placeholder node and queue update when leave finishes\r\n          leavingHooks.afterLeave = () => {\r\n            state.isLeaving = false\r\n            instance.update()\r\n          }\r\n          return emptyPlaceholder(child)\r\n        } else if (mode === 'in-out' && innerChild.type !== Comment) {\r\n          leavingHooks.delayLeave = (\r\n            el: TransitionElement,\r\n            earlyRemove,\r\n            delayedLeave\r\n          ) => {\r\n            const leavingVNodesCache = getLeavingNodesForType(\r\n              state,\r\n              oldInnerChild\r\n            )\r\n            leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild\r\n            // early removal callback\r\n            el._leaveCb = () => {\r\n              earlyRemove()\r\n              el._leaveCb = undefined\r\n              delete enterHooks.delayedLeave\r\n            }\r\n            enterHooks.delayedLeave = delayedLeave\r\n          }\r\n        }\r\n      }\r\n\r\n      return child\r\n    }\r\n  }\r\n}\r\n\r\nif (__COMPAT__) {\r\n  BaseTransitionImpl.__isBuiltIn = true\r\n}\r\n\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nexport const BaseTransition = BaseTransitionImpl as any as {\r\n  new (): {\r\n    $props: BaseTransitionProps<any>\r\n  }\r\n}\r\n\r\nfunction getLeavingNodesForType(\r\n  state: TransitionState,\r\n  vnode: VNode\r\n): Record<string, VNode> {\r\n  const { leavingVNodes } = state\r\n  let leavingVNodesCache = leavingVNodes.get(vnode.type)!\r\n  if (!leavingVNodesCache) {\r\n    leavingVNodesCache = Object.create(null)\r\n    leavingVNodes.set(vnode.type, leavingVNodesCache)\r\n  }\r\n  return leavingVNodesCache\r\n}\r\n\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nexport function resolveTransitionHooks(\r\n  vnode: VNode,\r\n  props: BaseTransitionProps<any>,\r\n  state: TransitionState,\r\n  instance: ComponentInternalInstance\r\n): TransitionHooks {\r\n  const {\r\n    appear,\r\n    mode,\r\n    persisted = false,\r\n    onBeforeEnter,\r\n    onEnter,\r\n    onAfterEnter,\r\n    onEnterCancelled,\r\n    onBeforeLeave,\r\n    onLeave,\r\n    onAfterLeave,\r\n    onLeaveCancelled,\r\n    onBeforeAppear,\r\n    onAppear,\r\n    onAfterAppear,\r\n    onAppearCancelled\r\n  } = props\r\n  const key = String(vnode.key)\r\n  const leavingVNodesCache = getLeavingNodesForType(state, vnode)\r\n\r\n  const callHook: TransitionHookCaller = (hook, args) => {\r\n    hook &&\r\n      callWithAsyncErrorHandling(\r\n        hook,\r\n        instance,\r\n        ErrorCodes.TRANSITION_HOOK,\r\n        args\r\n      )\r\n  }\r\n\r\n  const callAsyncHook = (\r\n    hook: Hook<(el: any, done: () => void) => void>,\r\n    args: [TransitionElement, () => void]\r\n  ) => {\r\n    const done = args[1]\r\n    callHook(hook, args)\r\n    if (isArray(hook)) {\r\n      if (hook.every(hook => hook.length <= 1)) done()\r\n    } else if (hook.length <= 1) {\r\n      done()\r\n    }\r\n  }\r\n\r\n  const hooks: TransitionHooks<TransitionElement> = {\r\n    mode,\r\n    persisted,\r\n    beforeEnter(el) {\r\n      let hook = onBeforeEnter\r\n      if (!state.isMounted) {\r\n        if (appear) {\r\n          hook = onBeforeAppear || onBeforeEnter\r\n        } else {\r\n          return\r\n        }\r\n      }\r\n      // for same element (v-show)\r\n      if (el._leaveCb) {\r\n        el._leaveCb(true /* cancelled */)\r\n      }\r\n      // for toggled element with same key (v-if)\r\n      const leavingVNode = leavingVNodesCache[key]\r\n      if (\r\n        leavingVNode &&\r\n        isSameVNodeType(vnode, leavingVNode) &&\r\n        leavingVNode.el!._leaveCb\r\n      ) {\r\n        // force early removal (not cancelled)\r\n        leavingVNode.el!._leaveCb()\r\n      }\r\n      callHook(hook, [el])\r\n    },\r\n\r\n    enter(el) {\r\n      let hook = onEnter\r\n      let afterHook = onAfterEnter\r\n      let cancelHook = onEnterCancelled\r\n      if (!state.isMounted) {\r\n        if (appear) {\r\n          hook = onAppear || onEnter\r\n          afterHook = onAfterAppear || onAfterEnter\r\n          cancelHook = onAppearCancelled || onEnterCancelled\r\n        } else {\r\n          return\r\n        }\r\n      }\r\n      let called = false\r\n      const done = (el._enterCb = (cancelled?) => {\r\n        if (called) return\r\n        called = true\r\n        if (cancelled) {\r\n          callHook(cancelHook, [el])\r\n        } else {\r\n          callHook(afterHook, [el])\r\n        }\r\n        if (hooks.delayedLeave) {\r\n          hooks.delayedLeave()\r\n        }\r\n        el._enterCb = undefined\r\n      })\r\n      if (hook) {\r\n        callAsyncHook(hook, [el, done])\r\n      } else {\r\n        done()\r\n      }\r\n    },\r\n\r\n    leave(el, remove) {\r\n      const key = String(vnode.key)\r\n      if (el._enterCb) {\r\n        el._enterCb(true /* cancelled */)\r\n      }\r\n      if (state.isUnmounting) {\r\n        return remove()\r\n      }\r\n      callHook(onBeforeLeave, [el])\r\n      let called = false\r\n      const done = (el._leaveCb = (cancelled?) => {\r\n        if (called) return\r\n        called = true\r\n        remove()\r\n        if (cancelled) {\r\n          callHook(onLeaveCancelled, [el])\r\n        } else {\r\n          callHook(onAfterLeave, [el])\r\n        }\r\n        el._leaveCb = undefined\r\n        if (leavingVNodesCache[key] === vnode) {\r\n          delete leavingVNodesCache[key]\r\n        }\r\n      })\r\n      leavingVNodesCache[key] = vnode\r\n      if (onLeave) {\r\n        callAsyncHook(onLeave, [el, done])\r\n      } else {\r\n        done()\r\n      }\r\n    },\r\n\r\n    clone(vnode) {\r\n      return resolveTransitionHooks(vnode, props, state, instance)\r\n    }\r\n  }\r\n\r\n  return hooks\r\n}\r\n\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode: VNode): VNode | undefined {\r\n  if (isKeepAlive(vnode)) {\r\n    vnode = cloneVNode(vnode)\r\n    vnode.children = null\r\n    return vnode\r\n  }\r\n}\r\n\r\nfunction getKeepAliveChild(vnode: VNode): VNode | undefined {\r\n  return isKeepAlive(vnode)\r\n    ? vnode.children\r\n      ? ((vnode.children as VNodeArrayChildren)[0] as VNode)\r\n      : undefined\r\n    : vnode\r\n}\r\n\r\nexport function setTransitionHooks(vnode: VNode, hooks: TransitionHooks) {\r\n  if (vnode.shapeFlag & ShapeFlags.COMPONENT && vnode.component) {\r\n    setTransitionHooks(vnode.component.subTree, hooks)\r\n  } else if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n    vnode.ssContent!.transition = hooks.clone(vnode.ssContent!)\r\n    vnode.ssFallback!.transition = hooks.clone(vnode.ssFallback!)\r\n  } else {\r\n    vnode.transition = hooks\r\n  }\r\n}\r\n\r\nexport function getTransitionRawChildren(\r\n  children: VNode[],\r\n  keepComment: boolean = false,\r\n  parentKey?: VNode['key']\r\n): VNode[] {\r\n  let ret: VNode[] = []\r\n  let keyedFragmentCount = 0\r\n  for (let i = 0; i < children.length; i++) {\r\n    let child = children[i]\r\n    // #5360 inherit parent key in case of <template v-for>\r\n    const key =\r\n      parentKey == null\r\n        ? child.key\r\n        : String(parentKey) + String(child.key != null ? child.key : i)\r\n    // handle fragment children case, e.g. v-for\r\n    if (child.type === Fragment) {\r\n      if (child.patchFlag & PatchFlags.KEYED_FRAGMENT) keyedFragmentCount++\r\n      ret = ret.concat(\r\n        getTransitionRawChildren(child.children as VNode[], keepComment, key)\r\n      )\r\n    }\r\n    // comment placeholders should be skipped, e.g. v-if\r\n    else if (keepComment || child.type !== Comment) {\r\n      ret.push(key != null ? cloneVNode(child, { key }) : child)\r\n    }\r\n  }\r\n  // #1126 if a transition children list contains multiple sub fragments, these\r\n  // fragments will be merged into a flat children array. Since each v-for\r\n  // fragment may contain different static bindings inside, we need to de-op\r\n  // these children to force full diffs to ensure correct behavior.\r\n  if (keyedFragmentCount > 1) {\r\n    for (let i = 0; i < ret.length; i++) {\r\n      ret[i].patchFlag = PatchFlags.BAIL\r\n    }\r\n  }\r\n  return ret\r\n}\r\n","import {\r\n  ComputedOptions,\r\n  MethodOptions,\r\n  ComponentOptionsWithoutProps,\r\n  ComponentOptionsWithArrayProps,\r\n  ComponentOptionsWithObjectProps,\r\n  ComponentOptionsMixin,\r\n  RenderFunction,\r\n  ComponentOptionsBase\r\n} from './componentOptions'\r\nimport {\r\n  SetupContext,\r\n  AllowedComponentProps,\r\n  ComponentCustomProps\r\n} from './component'\r\nimport {\r\n  ExtractPropTypes,\r\n  ComponentPropsOptions,\r\n  ExtractDefaultPropTypes\r\n} from './componentProps'\r\nimport { EmitsOptions, EmitsToProps } from './componentEmits'\r\nimport { isFunction } from '@vue/shared'\r\nimport { VNodeProps } from './vnode'\r\nimport {\r\n  CreateComponentPublicInstance,\r\n  ComponentPublicInstanceConstructor\r\n} from './componentPublicInstance'\r\n\r\nexport type PublicProps = VNodeProps &\r\n  AllowedComponentProps &\r\n  ComponentCustomProps\r\n\r\nexport type DefineComponent<\r\n  PropsOrPropOptions = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions,\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  EE extends string = string,\r\n  PP = PublicProps,\r\n  Props = Readonly<\r\n    PropsOrPropOptions extends ComponentPropsOptions\r\n      ? ExtractPropTypes<PropsOrPropOptions>\r\n      : PropsOrPropOptions\r\n  > &\r\n    ({} extends E ? {} : EmitsToProps<E>),\r\n  Defaults = ExtractDefaultPropTypes<PropsOrPropOptions>\r\n> = ComponentPublicInstanceConstructor<\r\n  CreateComponentPublicInstance<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    PP & Props,\r\n    Defaults,\r\n    true\r\n  > &\r\n    Props\r\n> &\r\n  ComponentOptionsBase<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE,\r\n    Defaults\r\n  > &\r\n  PP\r\n\r\n// defineComponent is a utility that is primarily used for type inference\r\n// when declaring components. Type inference is provided in the component\r\n// options (provided as the argument). The returned value has artificial types\r\n// for TSX / manual render function / IDE support.\r\n\r\n// overload 1: direct setup function\r\n// (uses user defined props interface)\r\nexport function defineComponent<Props, RawBindings = object>(\r\n  setup: (\r\n    props: Readonly<Props>,\r\n    ctx: SetupContext\r\n  ) => RawBindings | RenderFunction\r\n): DefineComponent<Props, RawBindings>\r\n\r\n// overload 2: object format with no props\r\n// (uses user defined props interface)\r\n// return type is for Vetur and TSX support\r\nexport function defineComponent<\r\n  Props = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithoutProps<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n): DefineComponent<Props, RawBindings, D, C, M, Mixin, Extends, E, EE>\r\n\r\n// overload 3: object format with array props declaration\r\n// props inferred as { [key in PropNames]?: any }\r\n// return type is for Vetur and TSX support\r\nexport function defineComponent<\r\n  PropNames extends string,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithArrayProps<\r\n    PropNames,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n): DefineComponent<\r\n  Readonly<{ [key in PropNames]?: any }>,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE\r\n>\r\n\r\n// overload 4: object format with object props declaration\r\n// see `ExtractPropTypes` in ./componentProps.ts\r\nexport function defineComponent<\r\n  // the Readonly constraint allows TS to treat the type of { required: true }\r\n  // as constant instead of boolean.\r\n  PropsOptions extends Readonly<ComponentPropsOptions>,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithObjectProps<\r\n    PropsOptions,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  >\r\n): DefineComponent<PropsOptions, RawBindings, D, C, M, Mixin, Extends, E, EE>\r\n\r\n// implementation, close to no-op\r\nexport function defineComponent(options: unknown) {\r\n  return isFunction(options) ? { setup: options, name: options.name } : options\r\n}\r\n","import {\r\n  Component,\r\n  ConcreteComponent,\r\n  currentInstance,\r\n  ComponentInternalInstance,\r\n  isInSSRComponentSetup,\r\n  ComponentOptions\r\n} from './component'\r\nimport { isFunction, isObject } from '@vue/shared'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { createVNode, VNode } from './vnode'\r\nimport { defineComponent } from './apiDefineComponent'\r\nimport { warn } from './warning'\r\nimport { ref } from '@vue/reactivity'\r\nimport { handleError, ErrorCodes } from './errorHandling'\r\nimport { isKeepAlive } from './components/KeepAlive'\r\nimport { queueJob } from './scheduler'\r\n\r\nexport type AsyncComponentResolveResult<T = Component> = T | { default: T } // es modules\r\n\r\nexport type AsyncComponentLoader<T = any> = () => Promise<\r\n  AsyncComponentResolveResult<T>\r\n>\r\n\r\nexport interface AsyncComponentOptions<T = any> {\r\n  loader: AsyncComponentLoader<T>\r\n  loadingComponent?: Component\r\n  errorComponent?: Component\r\n  delay?: number\r\n  timeout?: number\r\n  suspensible?: boolean\r\n  onError?: (\r\n    error: Error,\r\n    retry: () => void,\r\n    fail: () => void,\r\n    attempts: number\r\n  ) => any\r\n}\r\n\r\nexport const isAsyncWrapper = (i: ComponentInternalInstance | VNode): boolean =>\r\n  !!(i.type as ComponentOptions).__asyncLoader\r\n\r\nexport function defineAsyncComponent<\r\n  T extends Component = { new (): ComponentPublicInstance }\r\n>(source: AsyncComponentLoader<T> | AsyncComponentOptions<T>): T {\r\n  if (isFunction(source)) {\r\n    source = { loader: source }\r\n  }\r\n\r\n  const {\r\n    loader,\r\n    loadingComponent,\r\n    errorComponent,\r\n    delay = 200,\r\n    timeout, // undefined = never times out\r\n    suspensible = true,\r\n    onError: userOnError\r\n  } = source\r\n\r\n  let pendingRequest: Promise<ConcreteComponent> | null = null\r\n  let resolvedComp: ConcreteComponent | undefined\r\n\r\n  let retries = 0\r\n  const retry = () => {\r\n    retries++\r\n    pendingRequest = null\r\n    return load()\r\n  }\r\n\r\n  const load = (): Promise<ConcreteComponent> => {\r\n    let thisRequest: Promise<ConcreteComponent>\r\n    return (\r\n      pendingRequest ||\r\n      (thisRequest = pendingRequest =\r\n        loader()\r\n          .catch(err => {\r\n            err = err instanceof Error ? err : new Error(String(err))\r\n            if (userOnError) {\r\n              return new Promise((resolve, reject) => {\r\n                const userRetry = () => resolve(retry())\r\n                const userFail = () => reject(err)\r\n                userOnError(err, userRetry, userFail, retries + 1)\r\n              })\r\n            } else {\r\n              throw err\r\n            }\r\n          })\r\n          .then((comp: any) => {\r\n            if (thisRequest !== pendingRequest && pendingRequest) {\r\n              return pendingRequest\r\n            }\r\n            if (__DEV__ && !comp) {\r\n              warn(\r\n                `Async component loader resolved to undefined. ` +\r\n                  `If you are using retry(), make sure to return its return value.`\r\n              )\r\n            }\r\n            // interop module default\r\n            if (\r\n              comp &&\r\n              (comp.__esModule || comp[Symbol.toStringTag] === 'Module')\r\n            ) {\r\n              comp = comp.default\r\n            }\r\n            if (__DEV__ && comp && !isObject(comp) && !isFunction(comp)) {\r\n              throw new Error(`Invalid async component load result: ${comp}`)\r\n            }\r\n            resolvedComp = comp\r\n            return comp\r\n          }))\r\n    )\r\n  }\r\n\r\n  return defineComponent({\r\n    name: 'AsyncComponentWrapper',\r\n\r\n    __asyncLoader: load,\r\n\r\n    get __asyncResolved() {\r\n      return resolvedComp\r\n    },\r\n\r\n    setup() {\r\n      const instance = currentInstance!\r\n\r\n      // already resolved\r\n      if (resolvedComp) {\r\n        return () => createInnerComp(resolvedComp!, instance)\r\n      }\r\n\r\n      const onError = (err: Error) => {\r\n        pendingRequest = null\r\n        handleError(\r\n          err,\r\n          instance,\r\n          ErrorCodes.ASYNC_COMPONENT_LOADER,\r\n          !errorComponent /* do not throw in dev if user provided error component */\r\n        )\r\n      }\r\n\r\n      // suspense-controlled or SSR.\r\n      if (\r\n        (__FEATURE_SUSPENSE__ && suspensible && instance.suspense) ||\r\n        (__SSR__ && isInSSRComponentSetup)\r\n      ) {\r\n        return load()\r\n          .then(comp => {\r\n            return () => createInnerComp(comp, instance)\r\n          })\r\n          .catch(err => {\r\n            onError(err)\r\n            return () =>\r\n              errorComponent\r\n                ? createVNode(errorComponent as ConcreteComponent, {\r\n                    error: err\r\n                  })\r\n                : null\r\n          })\r\n      }\r\n\r\n      const loaded = ref(false)\r\n      const error = ref()\r\n      const delayed = ref(!!delay)\r\n\r\n      if (delay) {\r\n        setTimeout(() => {\r\n          delayed.value = false\r\n        }, delay)\r\n      }\r\n\r\n      if (timeout != null) {\r\n        setTimeout(() => {\r\n          if (!loaded.value && !error.value) {\r\n            const err = new Error(\r\n              `Async component timed out after ${timeout}ms.`\r\n            )\r\n            onError(err)\r\n            error.value = err\r\n          }\r\n        }, timeout)\r\n      }\r\n\r\n      load()\r\n        .then(() => {\r\n          loaded.value = true\r\n          if (instance.parent && isKeepAlive(instance.parent.vnode)) {\r\n            // parent is keep-alive, force update so the loaded component's\r\n            // name is taken into account\r\n            queueJob(instance.parent.update)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          onError(err)\r\n          error.value = err\r\n        })\r\n\r\n      return () => {\r\n        if (loaded.value && resolvedComp) {\r\n          return createInnerComp(resolvedComp, instance)\r\n        } else if (error.value && errorComponent) {\r\n          return createVNode(errorComponent as ConcreteComponent, {\r\n            error: error.value\r\n          })\r\n        } else if (loadingComponent && !delayed.value) {\r\n          return createVNode(loadingComponent as ConcreteComponent)\r\n        }\r\n      }\r\n    }\r\n  }) as T\r\n}\r\n\r\nfunction createInnerComp(\r\n  comp: ConcreteComponent,\r\n  {\r\n    vnode: { ref, props, children, shapeFlag },\r\n    parent\r\n  }: ComponentInternalInstance\r\n) {\r\n  const vnode = createVNode(comp, props, children)\r\n  // ensure inner component inherits the async wrapper's ref owner\r\n  vnode.ref = ref\r\n  return vnode\r\n}\r\n","import {\r\n  ConcreteComponent,\r\n  getCurrentInstance,\r\n  SetupContext,\r\n  ComponentInternalInstance,\r\n  LifecycleHooks,\r\n  currentInstance,\r\n  getComponentName,\r\n  ComponentOptions\r\n} from '../component'\r\nimport {\r\n  VNode,\r\n  cloneVNode,\r\n  isVNode,\r\n  VNodeProps,\r\n  invokeVNodeHook\r\n} from '../vnode'\r\nimport { warn } from '../warning'\r\nimport {\r\n  onBeforeUnmount,\r\n  injectHook,\r\n  onUnmounted,\r\n  onMounted,\r\n  onUpdated\r\n} from '../apiLifecycle'\r\nimport {\r\n  isString,\r\n  isArray,\r\n  ShapeFlags,\r\n  remove,\r\n  invokeArrayFns\r\n} from '@vue/shared'\r\nimport { watch } from '../apiWatch'\r\nimport {\r\n  RendererInternals,\r\n  queuePostRenderEffect,\r\n  MoveType,\r\n  RendererElement,\r\n  RendererNode\r\n} from '../renderer'\r\nimport { setTransitionHooks } from './BaseTransition'\r\nimport { ComponentRenderContext } from '../componentPublicInstance'\r\nimport { devtoolsComponentAdded } from '../devtools'\r\nimport { isAsyncWrapper } from '../apiAsyncComponent'\r\nimport { isSuspense } from './Suspense'\r\n\r\ntype MatchPattern = string | RegExp | (string | RegExp)[]\r\n\r\nexport interface KeepAliveProps {\r\n  include?: MatchPattern\r\n  exclude?: MatchPattern\r\n  max?: number | string\r\n}\r\n\r\ntype CacheKey = string | number | symbol | ConcreteComponent\r\ntype Cache = Map<CacheKey, VNode>\r\ntype Keys = Set<CacheKey>\r\n\r\nexport interface KeepAliveContext extends ComponentRenderContext {\r\n  renderer: RendererInternals\r\n  activate: (\r\n    vnode: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    isSVG: boolean,\r\n    optimized: boolean\r\n  ) => void\r\n  deactivate: (vnode: VNode) => void\r\n}\r\n\r\nexport const isKeepAlive = (vnode: VNode): boolean =>\r\n  (vnode.type as any).__isKeepAlive\r\n\r\nconst KeepAliveImpl: ComponentOptions = {\r\n  name: `KeepAlive`,\r\n\r\n  // Marker for special handling inside the renderer. We are not using a ===\r\n  // check directly on KeepAlive in the renderer, because importing it directly\r\n  // would prevent it from being tree-shaken.\r\n  __isKeepAlive: true,\r\n\r\n  props: {\r\n    include: [String, RegExp, Array],\r\n    exclude: [String, RegExp, Array],\r\n    max: [String, Number]\r\n  },\r\n\r\n  setup(props: KeepAliveProps, { slots }: SetupContext) {\r\n    const instance = getCurrentInstance()!\r\n    // KeepAlive communicates with the instantiated renderer via the\r\n    // ctx where the renderer passes in its internals,\r\n    // and the KeepAlive instance exposes activate/deactivate implementations.\r\n    // The whole point of this is to avoid importing KeepAlive directly in the\r\n    // renderer to facilitate tree-shaking.\r\n    const sharedContext = instance.ctx as KeepAliveContext\r\n\r\n    // if the internal renderer is not registered, it indicates that this is server-side rendering,\r\n    // for KeepAlive, we just need to render its children\r\n    if (__SSR__ && !sharedContext.renderer) {\r\n      return () => {\r\n        const children = slots.default && slots.default()\r\n        return children && children.length === 1 ? children[0] : children\r\n      }\r\n    }\r\n\r\n    const cache: Cache = new Map()\r\n    const keys: Keys = new Set()\r\n    let current: VNode | null = null\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      ;(instance as any).__v_cache = cache\r\n    }\r\n\r\n    const parentSuspense = instance.suspense\r\n\r\n    const {\r\n      renderer: {\r\n        p: patch,\r\n        m: move,\r\n        um: _unmount,\r\n        o: { createElement }\r\n      }\r\n    } = sharedContext\r\n    const storageContainer = createElement('div')\r\n\r\n    sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n      const instance = vnode.component!\r\n      move(vnode, container, anchor, MoveType.ENTER, parentSuspense)\r\n      // in case props have changed\r\n      patch(\r\n        instance.vnode,\r\n        vnode,\r\n        container,\r\n        anchor,\r\n        instance,\r\n        parentSuspense,\r\n        isSVG,\r\n        vnode.slotScopeIds,\r\n        optimized\r\n      )\r\n      queuePostRenderEffect(() => {\r\n        instance.isDeactivated = false\r\n        if (instance.a) {\r\n          invokeArrayFns(instance.a)\r\n        }\r\n        const vnodeHook = vnode.props && vnode.props.onVnodeMounted\r\n        if (vnodeHook) {\r\n          invokeVNodeHook(vnodeHook, instance.parent, vnode)\r\n        }\r\n      }, parentSuspense)\r\n\r\n      if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n        // Update components tree\r\n        devtoolsComponentAdded(instance)\r\n      }\r\n    }\r\n\r\n    sharedContext.deactivate = (vnode: VNode) => {\r\n      const instance = vnode.component!\r\n      move(vnode, storageContainer, null, MoveType.LEAVE, parentSuspense)\r\n      queuePostRenderEffect(() => {\r\n        if (instance.da) {\r\n          invokeArrayFns(instance.da)\r\n        }\r\n        const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted\r\n        if (vnodeHook) {\r\n          invokeVNodeHook(vnodeHook, instance.parent, vnode)\r\n        }\r\n        instance.isDeactivated = true\r\n      }, parentSuspense)\r\n\r\n      if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n        // Update components tree\r\n        devtoolsComponentAdded(instance)\r\n      }\r\n    }\r\n\r\n    function unmount(vnode: VNode) {\r\n      // reset the shapeFlag so it can be properly unmounted\r\n      resetShapeFlag(vnode)\r\n      _unmount(vnode, instance, parentSuspense, true)\r\n    }\r\n\r\n    function pruneCache(filter?: (name: string) => boolean) {\r\n      cache.forEach((vnode, key) => {\r\n        const name = getComponentName(vnode.type as ConcreteComponent)\r\n        if (name && (!filter || !filter(name))) {\r\n          pruneCacheEntry(key)\r\n        }\r\n      })\r\n    }\r\n\r\n    function pruneCacheEntry(key: CacheKey) {\r\n      const cached = cache.get(key) as VNode\r\n      if (!current || cached.type !== current.type) {\r\n        unmount(cached)\r\n      } else if (current) {\r\n        // current active instance should no longer be kept-alive.\r\n        // we can't unmount it now but it might be later, so reset its flag now.\r\n        resetShapeFlag(current)\r\n      }\r\n      cache.delete(key)\r\n      keys.delete(key)\r\n    }\r\n\r\n    // prune cache on include/exclude prop change\r\n    watch(\r\n      () => [props.include, props.exclude],\r\n      ([include, exclude]) => {\r\n        include && pruneCache(name => matches(include, name))\r\n        exclude && pruneCache(name => !matches(exclude, name))\r\n      },\r\n      // prune post-render after `current` has been updated\r\n      { flush: 'post', deep: true }\r\n    )\r\n\r\n    // cache sub tree after render\r\n    let pendingCacheKey: CacheKey | null = null\r\n    const cacheSubtree = () => {\r\n      // fix #1621, the pendingCacheKey could be 0\r\n      if (pendingCacheKey != null) {\r\n        cache.set(pendingCacheKey, getInnerChild(instance.subTree))\r\n      }\r\n    }\r\n    onMounted(cacheSubtree)\r\n    onUpdated(cacheSubtree)\r\n\r\n    onBeforeUnmount(() => {\r\n      cache.forEach(cached => {\r\n        const { subTree, suspense } = instance\r\n        const vnode = getInnerChild(subTree)\r\n        if (cached.type === vnode.type) {\r\n          // current instance will be unmounted as part of keep-alive's unmount\r\n          resetShapeFlag(vnode)\r\n          // but invoke its deactivated hook here\r\n          const da = vnode.component!.da\r\n          da && queuePostRenderEffect(da, suspense)\r\n          return\r\n        }\r\n        unmount(cached)\r\n      })\r\n    })\r\n\r\n    return () => {\r\n      pendingCacheKey = null\r\n\r\n      if (!slots.default) {\r\n        return null\r\n      }\r\n\r\n      const children = slots.default()\r\n      const rawVNode = children[0]\r\n      if (children.length > 1) {\r\n        if (__DEV__) {\r\n          warn(`KeepAlive should contain exactly one component child.`)\r\n        }\r\n        current = null\r\n        return children\r\n      } else if (\r\n        !isVNode(rawVNode) ||\r\n        (!(rawVNode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) &&\r\n          !(rawVNode.shapeFlag & ShapeFlags.SUSPENSE))\r\n      ) {\r\n        current = null\r\n        return rawVNode\r\n      }\r\n\r\n      let vnode = getInnerChild(rawVNode)\r\n      const comp = vnode.type as ConcreteComponent\r\n\r\n      // for async components, name check should be based in its loaded\r\n      // inner component if available\r\n      const name = getComponentName(\r\n        isAsyncWrapper(vnode)\r\n          ? (vnode.type as ComponentOptions).__asyncResolved || {}\r\n          : comp\r\n      )\r\n\r\n      const { include, exclude, max } = props\r\n\r\n      if (\r\n        (include && (!name || !matches(include, name))) ||\r\n        (exclude && name && matches(exclude, name))\r\n      ) {\r\n        current = vnode\r\n        return rawVNode\r\n      }\r\n\r\n      const key = vnode.key == null ? comp : vnode.key\r\n      const cachedVNode = cache.get(key)\r\n\r\n      // clone vnode if it's reused because we are going to mutate it\r\n      if (vnode.el) {\r\n        vnode = cloneVNode(vnode)\r\n        if (rawVNode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n          rawVNode.ssContent = vnode\r\n        }\r\n      }\r\n      // #1513 it's possible for the returned vnode to be cloned due to attr\r\n      // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n      // that is mounted. Instead of caching it directly, we store the pending\r\n      // key and cache `instance.subTree` (the normalized vnode) in\r\n      // beforeMount/beforeUpdate hooks.\r\n      pendingCacheKey = key\r\n\r\n      if (cachedVNode) {\r\n        // copy over mounted state\r\n        vnode.el = cachedVNode.el\r\n        vnode.component = cachedVNode.component\r\n        if (vnode.transition) {\r\n          // recursively update transition hooks on subTree\r\n          setTransitionHooks(vnode, vnode.transition!)\r\n        }\r\n        // avoid vnode being mounted as fresh\r\n        vnode.shapeFlag |= ShapeFlags.COMPONENT_KEPT_ALIVE\r\n        // make this key the freshest\r\n        keys.delete(key)\r\n        keys.add(key)\r\n      } else {\r\n        keys.add(key)\r\n        // prune oldest entry\r\n        if (max && keys.size > parseInt(max as string, 10)) {\r\n          pruneCacheEntry(keys.values().next().value)\r\n        }\r\n      }\r\n      // avoid vnode being unmounted\r\n      vnode.shapeFlag |= ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\r\n\r\n      current = vnode\r\n      return isSuspense(rawVNode.type) ? rawVNode : vnode\r\n    }\r\n  }\r\n}\r\n\r\nif (__COMPAT__) {\r\n  KeepAliveImpl.__isBuildIn = true\r\n}\r\n\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nexport const KeepAlive = KeepAliveImpl as any as {\r\n  __isKeepAlive: true\r\n  new (): {\r\n    $props: VNodeProps & KeepAliveProps\r\n  }\r\n}\r\n\r\nfunction matches(pattern: MatchPattern, name: string): boolean {\r\n  if (isArray(pattern)) {\r\n    return pattern.some((p: string | RegExp) => matches(p, name))\r\n  } else if (isString(pattern)) {\r\n    return pattern.split(',').includes(name)\r\n  } else if (pattern.test) {\r\n    return pattern.test(name)\r\n  }\r\n  /* istanbul ignore next */\r\n  return false\r\n}\r\n\r\nexport function onActivated(\r\n  hook: Function,\r\n  target?: ComponentInternalInstance | null\r\n) {\r\n  registerKeepAliveHook(hook, LifecycleHooks.ACTIVATED, target)\r\n}\r\n\r\nexport function onDeactivated(\r\n  hook: Function,\r\n  target?: ComponentInternalInstance | null\r\n) {\r\n  registerKeepAliveHook(hook, LifecycleHooks.DEACTIVATED, target)\r\n}\r\n\r\nfunction registerKeepAliveHook(\r\n  hook: Function & { __wdc?: Function },\r\n  type: LifecycleHooks,\r\n  target: ComponentInternalInstance | null = currentInstance\r\n) {\r\n  // cache the deactivate branch check wrapper for injected hooks so the same\r\n  // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n  // deactivation check\".\r\n  const wrappedHook =\r\n    hook.__wdc ||\r\n    (hook.__wdc = () => {\r\n      // only fire the hook if the target instance is NOT in a deactivated branch.\r\n      let current: ComponentInternalInstance | null = target\r\n      while (current) {\r\n        if (current.isDeactivated) {\r\n          return\r\n        }\r\n        current = current.parent\r\n      }\r\n      return hook()\r\n    })\r\n  injectHook(type, wrappedHook, target)\r\n  // In addition to registering it on the target instance, we walk up the parent\r\n  // chain and register it on all ancestor instances that are keep-alive roots.\r\n  // This avoids the need to walk the entire component tree when invoking these\r\n  // hooks, and more importantly, avoids the need to track child components in\r\n  // arrays.\r\n  if (target) {\r\n    let current = target.parent\r\n    while (current && current.parent) {\r\n      if (isKeepAlive(current.parent.vnode)) {\r\n        injectToKeepAliveRoot(wrappedHook, type, target, current)\r\n      }\r\n      current = current.parent\r\n    }\r\n  }\r\n}\r\n\r\nfunction injectToKeepAliveRoot(\r\n  hook: Function & { __weh?: Function },\r\n  type: LifecycleHooks,\r\n  target: ComponentInternalInstance,\r\n  keepAliveRoot: ComponentInternalInstance\r\n) {\r\n  // injectHook wraps the original for error handling, so make sure to remove\r\n  // the wrapped version.\r\n  const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */)\r\n  onUnmounted(() => {\r\n    remove(keepAliveRoot[type]!, injected)\r\n  }, target)\r\n}\r\n\r\nfunction resetShapeFlag(vnode: VNode) {\r\n  let shapeFlag = vnode.shapeFlag\r\n  if (shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE) {\r\n    shapeFlag -= ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\r\n  }\r\n  if (shapeFlag & ShapeFlags.COMPONENT_KEPT_ALIVE) {\r\n    shapeFlag -= ShapeFlags.COMPONENT_KEPT_ALIVE\r\n  }\r\n  vnode.shapeFlag = shapeFlag\r\n}\r\n\r\nfunction getInnerChild(vnode: VNode) {\r\n  return vnode.shapeFlag & ShapeFlags.SUSPENSE ? vnode.ssContent! : vnode\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  currentInstance,\r\n  isInSSRComponentSetup,\r\n  LifecycleHooks,\r\n  setCurrentInstance,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { callWithAsyncErrorHandling, ErrorTypeStrings } from './errorHandling'\r\nimport { warn } from './warning'\r\nimport { toHandlerKey } from '@vue/shared'\r\nimport { DebuggerEvent, pauseTracking, resetTracking } from '@vue/reactivity'\r\n\r\nexport { onActivated, onDeactivated } from './components/KeepAlive'\r\n\r\nexport function injectHook(\r\n  type: LifecycleHooks,\r\n  hook: Function & { __weh?: Function },\r\n  target: ComponentInternalInstance | null = currentInstance,\r\n  prepend: boolean = false\r\n): Function | undefined {\r\n  if (target) {\r\n    const hooks = target[type] || (target[type] = [])\r\n    // cache the error handling wrapper for injected hooks so the same hook\r\n    // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n    // handling\".\r\n    const wrappedHook =\r\n      hook.__weh ||\r\n      (hook.__weh = (...args: unknown[]) => {\r\n        if (target.isUnmounted) {\r\n          return\r\n        }\r\n        // disable tracking inside all lifecycle hooks\r\n        // since they can potentially be called inside effects.\r\n        pauseTracking()\r\n        // Set currentInstance during hook invocation.\r\n        // This assumes the hook does not synchronously trigger other hooks, which\r\n        // can only be false when the user does something really funky.\r\n        setCurrentInstance(target)\r\n        const res = callWithAsyncErrorHandling(hook, target, type, args)\r\n        unsetCurrentInstance()\r\n        resetTracking()\r\n        return res\r\n      })\r\n    if (prepend) {\r\n      hooks.unshift(wrappedHook)\r\n    } else {\r\n      hooks.push(wrappedHook)\r\n    }\r\n    return wrappedHook\r\n  } else if (__DEV__) {\r\n    const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''))\r\n    warn(\r\n      `${apiName} is called when there is no active component instance to be ` +\r\n        `associated with. ` +\r\n        `Lifecycle injection APIs can only be used during execution of setup().` +\r\n        (__FEATURE_SUSPENSE__\r\n          ? ` If you are using async setup(), make sure to register lifecycle ` +\r\n            `hooks before the first await statement.`\r\n          : ``)\r\n    )\r\n  }\r\n}\r\n\r\nexport const createHook =\r\n  <T extends Function = () => any>(lifecycle: LifecycleHooks) =>\r\n  (hook: T, target: ComponentInternalInstance | null = currentInstance) =>\r\n    // post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\r\n    (!isInSSRComponentSetup || lifecycle === LifecycleHooks.SERVER_PREFETCH) &&\r\n    injectHook(lifecycle, hook, target)\r\n\r\nexport const onBeforeMount = createHook(LifecycleHooks.BEFORE_MOUNT)\r\nexport const onMounted = createHook(LifecycleHooks.MOUNTED)\r\nexport const onBeforeUpdate = createHook(LifecycleHooks.BEFORE_UPDATE)\r\nexport const onUpdated = createHook(LifecycleHooks.UPDATED)\r\nexport const onBeforeUnmount = createHook(LifecycleHooks.BEFORE_UNMOUNT)\r\nexport const onUnmounted = createHook(LifecycleHooks.UNMOUNTED)\r\nexport const onServerPrefetch = createHook(LifecycleHooks.SERVER_PREFETCH)\r\n\r\nexport type DebuggerHook = (e: DebuggerEvent) => void\r\nexport const onRenderTriggered = createHook<DebuggerHook>(\r\n  LifecycleHooks.RENDER_TRIGGERED\r\n)\r\nexport const onRenderTracked = createHook<DebuggerHook>(\r\n  LifecycleHooks.RENDER_TRACKED\r\n)\r\n\r\nexport type ErrorCapturedHook<TError = unknown> = (\r\n  err: TError,\r\n  instance: ComponentPublicInstance | null,\r\n  info: string\r\n) => boolean | void\r\n\r\nexport function onErrorCaptured<TError = Error>(\r\n  hook: ErrorCapturedHook<TError>,\r\n  target: ComponentInternalInstance | null = currentInstance\r\n) {\r\n  injectHook(LifecycleHooks.ERROR_CAPTURED, hook, target)\r\n}\r\n","/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\r\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\r\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\n\r\nimport { VNode } from './vnode'\r\nimport { isFunction, EMPTY_OBJ, isBuiltInDirective } from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { ComponentInternalInstance, Data, getExposeProxy } from './component'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from './errorHandling'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { mapCompatDirectiveHook } from './compat/customDirective'\r\nimport { pauseTracking, resetTracking } from '@vue/reactivity'\r\nimport { traverse } from './apiWatch'\r\n\r\nexport interface DirectiveBinding<V = any> {\r\n  instance: ComponentPublicInstance | null\r\n  value: V\r\n  oldValue: V | null\r\n  arg?: string\r\n  modifiers: DirectiveModifiers\r\n  dir: ObjectDirective<any, V>\r\n}\r\n\r\nexport type DirectiveHook<T = any, Prev = VNode<any, T> | null, V = any> = (\r\n  el: T,\r\n  binding: DirectiveBinding<V>,\r\n  vnode: VNode<any, T>,\r\n  prevVNode: Prev\r\n) => void\r\n\r\nexport type SSRDirectiveHook = (\r\n  binding: DirectiveBinding,\r\n  vnode: VNode\r\n) => Data | undefined\r\n\r\nexport interface ObjectDirective<T = any, V = any> {\r\n  created?: DirectiveHook<T, null, V>\r\n  beforeMount?: DirectiveHook<T, null, V>\r\n  mounted?: DirectiveHook<T, null, V>\r\n  beforeUpdate?: DirectiveHook<T, VNode<any, T>, V>\r\n  updated?: DirectiveHook<T, VNode<any, T>, V>\r\n  beforeUnmount?: DirectiveHook<T, null, V>\r\n  unmounted?: DirectiveHook<T, null, V>\r\n  getSSRProps?: SSRDirectiveHook\r\n  deep?: boolean\r\n}\r\n\r\nexport type FunctionDirective<T = any, V = any> = DirectiveHook<T, any, V>\r\n\r\nexport type Directive<T = any, V = any> =\r\n  | ObjectDirective<T, V>\r\n  | FunctionDirective<T, V>\r\n\r\nexport type DirectiveModifiers = Record<string, boolean>\r\n\r\nexport function validateDirectiveName(name: string) {\r\n  if (isBuiltInDirective(name)) {\r\n    warn('Do not use built-in directive ids as custom directive id: ' + name)\r\n  }\r\n}\r\n\r\n// Directive, value, argument, modifiers\r\nexport type DirectiveArguments = Array<\r\n  | [Directive]\r\n  | [Directive, any]\r\n  | [Directive, any, string]\r\n  | [Directive, any, string, DirectiveModifiers]\r\n>\r\n\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nexport function withDirectives<T extends VNode>(\r\n  vnode: T,\r\n  directives: DirectiveArguments\r\n): T {\r\n  const internalInstance = currentRenderingInstance\r\n  if (internalInstance === null) {\r\n    __DEV__ && warn(`withDirectives can only be used inside render functions.`)\r\n    return vnode\r\n  }\r\n  const instance =\r\n    (getExposeProxy(internalInstance) as ComponentPublicInstance) ||\r\n    internalInstance.proxy\r\n  const bindings: DirectiveBinding[] = vnode.dirs || (vnode.dirs = [])\r\n  for (let i = 0; i < directives.length; i++) {\r\n    let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i]\r\n    if (isFunction(dir)) {\r\n      dir = {\r\n        mounted: dir,\r\n        updated: dir\r\n      } as ObjectDirective\r\n    }\r\n    if (dir.deep) {\r\n      traverse(value)\r\n    }\r\n    bindings.push({\r\n      dir,\r\n      instance,\r\n      value,\r\n      oldValue: void 0,\r\n      arg,\r\n      modifiers\r\n    })\r\n  }\r\n  return vnode\r\n}\r\n\r\nexport function invokeDirectiveHook(\r\n  vnode: VNode,\r\n  prevVNode: VNode | null,\r\n  instance: ComponentInternalInstance | null,\r\n  name: keyof ObjectDirective\r\n) {\r\n  const bindings = vnode.dirs!\r\n  const oldBindings = prevVNode && prevVNode.dirs!\r\n  for (let i = 0; i < bindings.length; i++) {\r\n    const binding = bindings[i]\r\n    if (oldBindings) {\r\n      binding.oldValue = oldBindings[i].value\r\n    }\r\n    let hook = binding.dir[name] as DirectiveHook | DirectiveHook[] | undefined\r\n    if (__COMPAT__ && !hook) {\r\n      hook = mapCompatDirectiveHook(name, binding.dir, instance)\r\n    }\r\n    if (hook) {\r\n      // disable tracking inside all lifecycle hooks\r\n      // since they can potentially be called inside effects.\r\n      pauseTracking()\r\n      callWithAsyncErrorHandling(hook, instance, ErrorCodes.DIRECTIVE_HOOK, [\r\n        vnode.el,\r\n        binding,\r\n        vnode,\r\n        prevVNode\r\n      ])\r\n      resetTracking()\r\n    }\r\n  }\r\n}\r\n","import {\r\n  currentInstance,\r\n  ConcreteComponent,\r\n  ComponentOptions,\r\n  getComponentName\r\n} from '../component'\r\nimport { currentRenderingInstance } from '../componentRenderContext'\r\nimport { Directive } from '../directives'\r\nimport { camelize, capitalize, isString } from '@vue/shared'\r\nimport { warn } from '../warning'\r\nimport { VNodeTypes } from '../vnode'\r\n\r\nexport const COMPONENTS = 'components'\r\nexport const DIRECTIVES = 'directives'\r\nexport const FILTERS = 'filters'\r\n\r\nexport type AssetTypes = typeof COMPONENTS | typeof DIRECTIVES | typeof FILTERS\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveComponent(\r\n  name: string,\r\n  maybeSelfReference?: boolean\r\n): ConcreteComponent | string {\r\n  return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name\r\n}\r\n\r\nexport const NULL_DYNAMIC_COMPONENT = Symbol()\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveDynamicComponent(component: unknown): VNodeTypes {\r\n  if (isString(component)) {\r\n    return resolveAsset(COMPONENTS, component, false) || component\r\n  } else {\r\n    // invalid types will fallthrough to createVNode and raise warning\r\n    return (component || NULL_DYNAMIC_COMPONENT) as any\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveDirective(name: string): Directive | undefined {\r\n  return resolveAsset(DIRECTIVES, name)\r\n}\r\n\r\n/**\r\n * v2 compat only\r\n * @internal\r\n */\r\nexport function resolveFilter(name: string): Function | undefined {\r\n  return resolveAsset(FILTERS, name)\r\n}\r\n\r\n/**\r\n * @private\r\n * overload 1: components\r\n */\r\nfunction resolveAsset(\r\n  type: typeof COMPONENTS,\r\n  name: string,\r\n  warnMissing?: boolean,\r\n  maybeSelfReference?: boolean\r\n): ConcreteComponent | undefined\r\n// overload 2: directives\r\nfunction resolveAsset(\r\n  type: typeof DIRECTIVES,\r\n  name: string\r\n): Directive | undefined\r\n// implementation\r\n// overload 3: filters (compat only)\r\nfunction resolveAsset(type: typeof FILTERS, name: string): Function | undefined\r\n// implementation\r\nfunction resolveAsset(\r\n  type: AssetTypes,\r\n  name: string,\r\n  warnMissing = true,\r\n  maybeSelfReference = false\r\n) {\r\n  const instance = currentRenderingInstance || currentInstance\r\n  if (instance) {\r\n    const Component = instance.type\r\n\r\n    // explicit self name has highest priority\r\n    if (type === COMPONENTS) {\r\n      const selfName = getComponentName(\r\n        Component,\r\n        false /* do not include inferred name to avoid breaking existing code */\r\n      )\r\n      if (\r\n        selfName &&\r\n        (selfName === name ||\r\n          selfName === camelize(name) ||\r\n          selfName === capitalize(camelize(name)))\r\n      ) {\r\n        return Component\r\n      }\r\n    }\r\n\r\n    const res =\r\n      // local registration\r\n      // check instance[type] first which is resolved for options API\r\n      resolve(instance[type] || (Component as ComponentOptions)[type], name) ||\r\n      // global registration\r\n      resolve(instance.appContext[type], name)\r\n\r\n    if (!res && maybeSelfReference) {\r\n      // fallback to implicit self-reference\r\n      return Component\r\n    }\r\n\r\n    if (__DEV__ && warnMissing && !res) {\r\n      const extra =\r\n        type === COMPONENTS\r\n          ? `\\nIf this is a native custom element, make sure to exclude it from ` +\r\n            `component resolution via compilerOptions.isCustomElement.`\r\n          : ``\r\n      warn(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`)\r\n    }\r\n\r\n    return res\r\n  } else if (__DEV__) {\r\n    warn(\r\n      `resolve${capitalize(type.slice(0, -1))} ` +\r\n        `can only be used in render() or setup().`\r\n    )\r\n  }\r\n}\r\n\r\nfunction resolve(registry: Record<string, any> | undefined, name: string) {\r\n  return (\r\n    registry &&\r\n    (registry[name] ||\r\n      registry[camelize(name)] ||\r\n      registry[capitalize(camelize(name))])\r\n  )\r\n}\r\n","import { VNode, VNodeChild } from '../vnode'\r\nimport { isArray, isString, isObject } from '@vue/shared'\r\nimport { warn } from '../warning'\r\n\r\n/**\r\n * v-for string\r\n * @private\r\n */\r\nexport function renderList(\r\n  source: string,\r\n  renderItem: (value: string, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for number\r\n */\r\nexport function renderList(\r\n  source: number,\r\n  renderItem: (value: number, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for array\r\n */\r\nexport function renderList<T>(\r\n  source: T[],\r\n  renderItem: (value: T, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for iterable\r\n */\r\nexport function renderList<T>(\r\n  source: Iterable<T>,\r\n  renderItem: (value: T, index: number) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for object\r\n */\r\nexport function renderList<T>(\r\n  source: T,\r\n  renderItem: <K extends keyof T>(\r\n    value: T[K],\r\n    key: K,\r\n    index: number\r\n  ) => VNodeChild\r\n): VNodeChild[]\r\n\r\n/**\r\n * Actual implementation\r\n */\r\nexport function renderList(\r\n  source: any,\r\n  renderItem: (...args: any[]) => VNodeChild,\r\n  cache?: any[],\r\n  index?: number\r\n): VNodeChild[] {\r\n  let ret: VNodeChild[]\r\n  const cached = (cache && cache[index!]) as VNode[] | undefined\r\n\r\n  if (isArray(source) || isString(source)) {\r\n    ret = new Array(source.length)\r\n    for (let i = 0, l = source.length; i < l; i++) {\r\n      ret[i] = renderItem(source[i], i, undefined, cached && cached[i])\r\n    }\r\n  } else if (typeof source === 'number') {\r\n    if (__DEV__ && !Number.isInteger(source)) {\r\n      warn(`The v-for range expect an integer value but got ${source}.`)\r\n    }\r\n    ret = new Array(source)\r\n    for (let i = 0; i < source; i++) {\r\n      ret[i] = renderItem(i + 1, i, undefined, cached && cached[i])\r\n    }\r\n  } else if (isObject(source)) {\r\n    if (source[Symbol.iterator as any]) {\r\n      ret = Array.from(source as Iterable<any>, (item, i) =>\r\n        renderItem(item, i, undefined, cached && cached[i])\r\n      )\r\n    } else {\r\n      const keys = Object.keys(source)\r\n      ret = new Array(keys.length)\r\n      for (let i = 0, l = keys.length; i < l; i++) {\r\n        const key = keys[i]\r\n        ret[i] = renderItem(source[key], key, i, cached && cached[i])\r\n      }\r\n    }\r\n  } else {\r\n    ret = []\r\n  }\r\n\r\n  if (cache) {\r\n    cache[index!] = ret\r\n  }\r\n  return ret\r\n}\r\n","import { Slot } from '../componentSlots'\r\nimport { isArray } from '@vue/shared'\r\n\r\ninterface CompiledSlotDescriptor {\r\n  name: string\r\n  fn: Slot\r\n}\r\n\r\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nexport function createSlots(\r\n  slots: Record<string, Slot>,\r\n  dynamicSlots: (\r\n    | CompiledSlotDescriptor\r\n    | CompiledSlotDescriptor[]\r\n    | undefined\r\n  )[]\r\n): Record<string, Slot> {\r\n  for (let i = 0; i < dynamicSlots.length; i++) {\r\n    const slot = dynamicSlots[i]\r\n    // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n    if (isArray(slot)) {\r\n      for (let j = 0; j < slot.length; j++) {\r\n        slots[slot[j].name] = slot[j].fn\r\n      }\r\n    } else if (slot) {\r\n      // conditional single slot generated by <template v-if=\"...\" #foo>\r\n      slots[slot.name] = slot.fn\r\n    }\r\n  }\r\n  return slots\r\n}\r\n","import { Data } from '../component'\r\nimport { Slots, RawSlots } from '../componentSlots'\r\nimport {\r\n  ContextualRenderFn,\r\n  currentRenderingInstance\r\n} from '../componentRenderContext'\r\nimport {\r\n  Comment,\r\n  isVNode,\r\n  VNodeArrayChildren,\r\n  openBlock,\r\n  createBlock,\r\n  Fragment,\r\n  VNode\r\n} from '../vnode'\r\nimport { PatchFlags, SlotFlags } from '@vue/shared'\r\nimport { warn } from '../warning'\r\nimport { createVNode } from '@vue/runtime-core'\r\nimport { isAsyncWrapper } from '../apiAsyncComponent'\r\n\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nexport function renderSlot(\r\n  slots: Slots,\r\n  name: string,\r\n  props: Data = {},\r\n  // this is not a user-facing function, so the fallback is always generated by\r\n  // the compiler and guaranteed to be a function returning an array\r\n  fallback?: () => VNodeArrayChildren,\r\n  noSlotted?: boolean\r\n): VNode {\r\n  if (\r\n    currentRenderingInstance!.isCE ||\r\n    (currentRenderingInstance!.parent &&\r\n      isAsyncWrapper(currentRenderingInstance!.parent) &&\r\n      currentRenderingInstance!.parent.isCE)\r\n  ) {\r\n    return createVNode(\r\n      'slot',\r\n      name === 'default' ? null : { name },\r\n      fallback && fallback()\r\n    )\r\n  }\r\n\r\n  let slot = slots[name]\r\n\r\n  if (__DEV__ && slot && slot.length > 1) {\r\n    warn(\r\n      `SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n        `function. You need to mark this component with $dynamic-slots in the ` +\r\n        `parent template.`\r\n    )\r\n    slot = () => []\r\n  }\r\n\r\n  // a compiled slot disables block tracking by default to avoid manual\r\n  // invocation interfering with template-based block tracking, but in\r\n  // `renderSlot` we can be sure that it's template-based so we can force\r\n  // enable it.\r\n  if (slot && (slot as ContextualRenderFn)._c) {\r\n    ;(slot as ContextualRenderFn)._d = false\r\n  }\r\n  openBlock()\r\n  const validSlotContent = slot && ensureValidVNode(slot(props))\r\n  const rendered = createBlock(\r\n    Fragment,\r\n    { key: props.key || `_${name}` },\r\n    validSlotContent || (fallback ? fallback() : []),\r\n    validSlotContent && (slots as RawSlots)._ === SlotFlags.STABLE\r\n      ? PatchFlags.STABLE_FRAGMENT\r\n      : PatchFlags.BAIL\r\n  )\r\n  if (!noSlotted && rendered.scopeId) {\r\n    rendered.slotScopeIds = [rendered.scopeId + '-s']\r\n  }\r\n  if (slot && (slot as ContextualRenderFn)._c) {\r\n    ;(slot as ContextualRenderFn)._d = true\r\n  }\r\n  return rendered\r\n}\r\n\r\nfunction ensureValidVNode(vnodes: VNodeArrayChildren) {\r\n  return vnodes.some(child => {\r\n    if (!isVNode(child)) return true\r\n    if (child.type === Comment) return false\r\n    if (\r\n      child.type === Fragment &&\r\n      !ensureValidVNode(child.children as VNodeArrayChildren)\r\n    )\r\n      return false\r\n    return true\r\n  })\r\n    ? vnodes\r\n    : null\r\n}\r\n","import { toHandlerKey, isObject } from '@vue/shared'\r\nimport { warn } from '../warning'\r\n\r\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nexport function toHandlers(obj: Record<string, any>): Record<string, any> {\r\n  const ret: Record<string, any> = {}\r\n  if (__DEV__ && !isObject(obj)) {\r\n    warn(`v-on with no argument expects an object value.`)\r\n    return ret\r\n  }\r\n  for (const key in obj) {\r\n    ret[toHandlerKey(key)] = obj[key]\r\n  }\r\n  return ret\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  Data,\r\n  getExposeProxy,\r\n  isStatefulComponent\r\n} from './component'\r\nimport { nextTick, queueJob } from './scheduler'\r\nimport { instanceWatch, WatchOptions, WatchStopHandle } from './apiWatch'\r\nimport {\r\n  EMPTY_OBJ,\r\n  hasOwn,\r\n  isGloballyWhitelisted,\r\n  NOOP,\r\n  extend,\r\n  isString,\r\n  isFunction,\r\n  UnionToIntersection\r\n} from '@vue/shared'\r\nimport {\r\n  toRaw,\r\n  shallowReadonly,\r\n  track,\r\n  TrackOpTypes,\r\n  ShallowUnwrapRef,\r\n  UnwrapNestedRefs\r\n} from '@vue/reactivity'\r\nimport {\r\n  ExtractComputedReturns,\r\n  ComponentOptionsBase,\r\n  ComputedOptions,\r\n  MethodOptions,\r\n  ComponentOptionsMixin,\r\n  OptionTypesType,\r\n  OptionTypesKeys,\r\n  resolveMergedOptions,\r\n  shouldCacheAccess,\r\n  MergedComponentOptionsOverride\r\n} from './componentOptions'\r\nimport { EmitsOptions, EmitFn } from './componentEmits'\r\nimport { Slots } from './componentSlots'\r\nimport { markAttrsAccessed } from './componentRenderUtils'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { warn } from './warning'\r\nimport { installCompatInstanceProperties } from './compat/instance'\r\n\r\n/**\r\n * Custom properties added to component instances in any way and can be accessed through `this`\r\n *\r\n * @example\r\n * Here is an example of adding a property `$router` to every component instance:\r\n * ```ts\r\n * import { createApp } from 'vue'\r\n * import { Router, createRouter } from 'vue-router'\r\n *\r\n * declare module '@vue/runtime-core' {\r\n *   interface ComponentCustomProperties {\r\n *     $router: Router\r\n *   }\r\n * }\r\n *\r\n * // effectively adding the router to every component instance\r\n * const app = createApp({})\r\n * const router = createRouter()\r\n * app.config.globalProperties.$router = router\r\n *\r\n * const vm = app.mount('#app')\r\n * // we can access the router from the instance\r\n * vm.$router.push('/')\r\n * ```\r\n */\r\nexport interface ComponentCustomProperties {}\r\n\r\ntype IsDefaultMixinComponent<T> = T extends ComponentOptionsMixin\r\n  ? ComponentOptionsMixin extends T\r\n    ? true\r\n    : false\r\n  : false\r\n\r\ntype MixinToOptionTypes<T> = T extends ComponentOptionsBase<\r\n  infer P,\r\n  infer B,\r\n  infer D,\r\n  infer C,\r\n  infer M,\r\n  infer Mixin,\r\n  infer Extends,\r\n  any,\r\n  any,\r\n  infer Defaults\r\n>\r\n  ? OptionTypesType<P & {}, B & {}, D & {}, C & {}, M & {}, Defaults & {}> &\r\n      IntersectionMixin<Mixin> &\r\n      IntersectionMixin<Extends>\r\n  : never\r\n\r\n// ExtractMixin(map type) is used to resolve circularly references\r\ntype ExtractMixin<T> = {\r\n  Mixin: MixinToOptionTypes<T>\r\n}[T extends ComponentOptionsMixin ? 'Mixin' : never]\r\n\r\ntype IntersectionMixin<T> = IsDefaultMixinComponent<T> extends true\r\n  ? OptionTypesType<{}, {}, {}, {}, {}>\r\n  : UnionToIntersection<ExtractMixin<T>>\r\n\r\ntype UnwrapMixinsType<\r\n  T,\r\n  Type extends OptionTypesKeys\r\n> = T extends OptionTypesType ? T[Type] : never\r\n\r\ntype EnsureNonVoid<T> = T extends void ? {} : T\r\n\r\nexport type ComponentPublicInstanceConstructor<\r\n  T extends ComponentPublicInstance<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M\r\n  > = ComponentPublicInstance<any>,\r\n  Props = any,\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions\r\n> = {\r\n  __isFragment?: never\r\n  __isTeleport?: never\r\n  __isSuspense?: never\r\n  new (...args: any[]): T\r\n}\r\n\r\nexport type CreateComponentPublicInstance<\r\n  P = {},\r\n  B = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  PublicProps = P,\r\n  Defaults = {},\r\n  MakeDefaultsOptional extends boolean = false,\r\n  PublicMixin = IntersectionMixin<Mixin> & IntersectionMixin<Extends>,\r\n  PublicP = UnwrapMixinsType<PublicMixin, 'P'> & EnsureNonVoid<P>,\r\n  PublicB = UnwrapMixinsType<PublicMixin, 'B'> & EnsureNonVoid<B>,\r\n  PublicD = UnwrapMixinsType<PublicMixin, 'D'> & EnsureNonVoid<D>,\r\n  PublicC extends ComputedOptions = UnwrapMixinsType<PublicMixin, 'C'> &\r\n    EnsureNonVoid<C>,\r\n  PublicM extends MethodOptions = UnwrapMixinsType<PublicMixin, 'M'> &\r\n    EnsureNonVoid<M>,\r\n  PublicDefaults = UnwrapMixinsType<PublicMixin, 'Defaults'> &\r\n    EnsureNonVoid<Defaults>\r\n> = ComponentPublicInstance<\r\n  PublicP,\r\n  PublicB,\r\n  PublicD,\r\n  PublicC,\r\n  PublicM,\r\n  E,\r\n  PublicProps,\r\n  PublicDefaults,\r\n  MakeDefaultsOptional,\r\n  ComponentOptionsBase<P, B, D, C, M, Mixin, Extends, E, string, Defaults>\r\n>\r\n\r\n// public properties exposed on the proxy, which is used as the render context\r\n// in templates (as `this` in the render option)\r\nexport type ComponentPublicInstance<\r\n  P = {}, // props type extracted from props option\r\n  B = {}, // raw bindings returned from setup()\r\n  D = {}, // return from data()\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  E extends EmitsOptions = {},\r\n  PublicProps = P,\r\n  Defaults = {},\r\n  MakeDefaultsOptional extends boolean = false,\r\n  Options = ComponentOptionsBase<any, any, any, any, any, any, any, any, any>\r\n> = {\r\n  $: ComponentInternalInstance\r\n  $data: D\r\n  $props: MakeDefaultsOptional extends true\r\n    ? Partial<Defaults> & Omit<P & PublicProps, keyof Defaults>\r\n    : P & PublicProps\r\n  $attrs: Data\r\n  $refs: Data\r\n  $slots: Slots\r\n  $root: ComponentPublicInstance | null\r\n  $parent: ComponentPublicInstance | null\r\n  $emit: EmitFn<E>\r\n  $el: any\r\n  $options: Options & MergedComponentOptionsOverride\r\n  $forceUpdate: () => void\r\n  $nextTick: typeof nextTick\r\n  $watch(\r\n    source: string | Function,\r\n    cb: Function,\r\n    options?: WatchOptions\r\n  ): WatchStopHandle\r\n} & P &\r\n  ShallowUnwrapRef<B> &\r\n  UnwrapNestedRefs<D> &\r\n  ExtractComputedReturns<C> &\r\n  M &\r\n  ComponentCustomProperties\r\n\r\nexport type PublicPropertiesMap = Record<\r\n  string,\r\n  (i: ComponentInternalInstance) => any\r\n>\r\n\r\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (\r\n  i: ComponentInternalInstance | null\r\n): ComponentPublicInstance | ComponentInternalInstance['exposed'] | null => {\r\n  if (!i) return null\r\n  if (isStatefulComponent(i)) return getExposeProxy(i) || i.proxy\r\n  return getPublicInstance(i.parent)\r\n}\r\n\r\nexport const publicPropertiesMap: PublicPropertiesMap =\r\n  // Move PURE marker to new line to workaround compiler discarding it\r\n  // due to type annotation\r\n  /*#__PURE__*/ extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => (__DEV__ ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => (__DEV__ ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => (__DEV__ ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => (__DEV__ ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (__FEATURE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => i.f || (i.f = () => queueJob(i.update)),\r\n    $nextTick: i => i.n || (i.n = nextTick.bind(i.proxy!)),\r\n    $watch: i => (__FEATURE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n  } as PublicPropertiesMap)\r\n\r\nif (__COMPAT__) {\r\n  installCompatInstanceProperties(publicPropertiesMap)\r\n}\r\n\r\nconst enum AccessTypes {\r\n  OTHER,\r\n  SETUP,\r\n  DATA,\r\n  PROPS,\r\n  CONTEXT\r\n}\r\n\r\nexport interface ComponentRenderContext {\r\n  [key: string]: any\r\n  _: ComponentInternalInstance\r\n}\r\n\r\nexport const isReservedPrefix = (key: string) => key === '_' || key === '$'\r\n\r\nexport const PublicInstanceProxyHandlers: ProxyHandler<any> = {\r\n  get({ _: instance }: ComponentRenderContext, key: string) {\r\n    const { ctx, setupState, data, props, accessCache, type, appContext } =\r\n      instance\r\n\r\n    // for internal formatters to know that this is a Vue instance\r\n    if (__DEV__ && key === '__isVue') {\r\n      return true\r\n    }\r\n\r\n    // prioritize <script setup> bindings during dev.\r\n    // this allows even properties that start with _ or $ to be used - so that\r\n    // it aligns with the production behavior where the render fn is inlined and\r\n    // indeed has access to all declared variables.\r\n    if (\r\n      __DEV__ &&\r\n      setupState !== EMPTY_OBJ &&\r\n      setupState.__isScriptSetup &&\r\n      hasOwn(setupState, key)\r\n    ) {\r\n      return setupState[key]\r\n    }\r\n\r\n    // data / props / ctx\r\n    // This getter gets called for every property access on the render context\r\n    // during render and is a major hotspot. The most expensive part of this\r\n    // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n    // access on a plain object, so we use an accessCache object (with null\r\n    // prototype) to memoize what access type a key corresponds to.\r\n    let normalizedProps\r\n    if (key[0] !== '$') {\r\n      const n = accessCache![key]\r\n      if (n !== undefined) {\r\n        switch (n) {\r\n          case AccessTypes.SETUP:\r\n            return setupState[key]\r\n          case AccessTypes.DATA:\r\n            return data[key]\r\n          case AccessTypes.CONTEXT:\r\n            return ctx[key]\r\n          case AccessTypes.PROPS:\r\n            return props![key]\r\n          // default: just fallthrough\r\n        }\r\n      } else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n        accessCache![key] = AccessTypes.SETUP\r\n        return setupState[key]\r\n      } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n        accessCache![key] = AccessTypes.DATA\r\n        return data[key]\r\n      } else if (\r\n        // only cache other properties when instance has declared (thus stable)\r\n        // props\r\n        (normalizedProps = instance.propsOptions[0]) &&\r\n        hasOwn(normalizedProps, key)\r\n      ) {\r\n        accessCache![key] = AccessTypes.PROPS\r\n        return props![key]\r\n      } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n        accessCache![key] = AccessTypes.CONTEXT\r\n        return ctx[key]\r\n      } else if (!__FEATURE_OPTIONS_API__ || shouldCacheAccess) {\r\n        accessCache![key] = AccessTypes.OTHER\r\n      }\r\n    }\r\n\r\n    const publicGetter = publicPropertiesMap[key]\r\n    let cssModule, globalProperties\r\n    // public $xxx properties\r\n    if (publicGetter) {\r\n      if (key === '$attrs') {\r\n        track(instance, TrackOpTypes.GET, key)\r\n        __DEV__ && markAttrsAccessed()\r\n      }\r\n      return publicGetter(instance)\r\n    } else if (\r\n      // css module (injected by vue-loader)\r\n      (cssModule = type.__cssModules) &&\r\n      (cssModule = cssModule[key])\r\n    ) {\r\n      return cssModule\r\n    } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n      // user may set custom properties to `this` that start with `$`\r\n      accessCache![key] = AccessTypes.CONTEXT\r\n      return ctx[key]\r\n    } else if (\r\n      // global properties\r\n      ((globalProperties = appContext.config.globalProperties),\r\n      hasOwn(globalProperties, key))\r\n    ) {\r\n      if (__COMPAT__) {\r\n        const desc = Object.getOwnPropertyDescriptor(globalProperties, key)!\r\n        if (desc.get) {\r\n          return desc.get.call(instance.proxy)\r\n        } else {\r\n          const val = globalProperties[key]\r\n          return isFunction(val)\r\n            ? Object.assign(val.bind(instance.proxy), val)\r\n            : val\r\n        }\r\n      } else {\r\n        return globalProperties[key]\r\n      }\r\n    } else if (\r\n      __DEV__ &&\r\n      currentRenderingInstance &&\r\n      (!isString(key) ||\r\n        // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n        // to infinite warning loop\r\n        key.indexOf('__v') !== 0)\r\n    ) {\r\n      if (data !== EMPTY_OBJ && isReservedPrefix(key[0]) && hasOwn(data, key)) {\r\n        warn(\r\n          `Property ${JSON.stringify(\r\n            key\r\n          )} must be accessed via $data because it starts with a reserved ` +\r\n            `character (\"$\" or \"_\") and is not proxied on the render context.`\r\n        )\r\n      } else if (instance === currentRenderingInstance) {\r\n        warn(\r\n          `Property ${JSON.stringify(key)} was accessed during render ` +\r\n            `but is not defined on instance.`\r\n        )\r\n      }\r\n    }\r\n  },\r\n\r\n  set(\r\n    { _: instance }: ComponentRenderContext,\r\n    key: string,\r\n    value: any\r\n  ): boolean {\r\n    const { data, setupState, ctx } = instance\r\n    if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n      setupState[key] = value\r\n      return true\r\n    } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n      data[key] = value\r\n      return true\r\n    } else if (hasOwn(instance.props, key)) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Attempting to mutate prop \"${key}\". Props are readonly.`,\r\n          instance\r\n        )\r\n      return false\r\n    }\r\n    if (key[0] === '$' && key.slice(1) in instance) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Attempting to mutate public property \"${key}\". ` +\r\n            `Properties starting with $ are reserved and readonly.`,\r\n          instance\r\n        )\r\n      return false\r\n    } else {\r\n      if (__DEV__ && key in instance.appContext.config.globalProperties) {\r\n        Object.defineProperty(ctx, key, {\r\n          enumerable: true,\r\n          configurable: true,\r\n          value\r\n        })\r\n      } else {\r\n        ctx[key] = value\r\n      }\r\n    }\r\n    return true\r\n  },\r\n\r\n  has(\r\n    {\r\n      _: { data, setupState, accessCache, ctx, appContext, propsOptions }\r\n    }: ComponentRenderContext,\r\n    key: string\r\n  ) {\r\n    let normalizedProps\r\n    return (\r\n      !!accessCache![key] ||\r\n      (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n      (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n      ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n      hasOwn(ctx, key) ||\r\n      hasOwn(publicPropertiesMap, key) ||\r\n      hasOwn(appContext.config.globalProperties, key)\r\n    )\r\n  },\r\n\r\n  defineProperty(\r\n    target: ComponentRenderContext,\r\n    key: string,\r\n    descriptor: PropertyDescriptor\r\n  ) {\r\n    if (descriptor.get != null) {\r\n      // invalidate key cache of a getter based property #5417\r\n      target._.accessCache![key] = 0\r\n    } else if (hasOwn(descriptor, 'value')) {\r\n      this.set!(target, key, descriptor.value, null)\r\n    }\r\n    return Reflect.defineProperty(target, key, descriptor)\r\n  }\r\n}\r\n\r\nif (__DEV__ && !__TEST__) {\r\n  PublicInstanceProxyHandlers.ownKeys = (target: ComponentRenderContext) => {\r\n    warn(\r\n      `Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n        `The keys will be empty in production mode to avoid performance overhead.`\r\n    )\r\n    return Reflect.ownKeys(target)\r\n  }\r\n}\r\n\r\nexport const RuntimeCompiledPublicInstanceProxyHandlers = /*#__PURE__*/ extend(\r\n  {},\r\n  PublicInstanceProxyHandlers,\r\n  {\r\n    get(target: ComponentRenderContext, key: string) {\r\n      // fast path for unscopables when using `with` block\r\n      if ((key as any) === Symbol.unscopables) {\r\n        return\r\n      }\r\n      return PublicInstanceProxyHandlers.get!(target, key, target)\r\n    },\r\n    has(_: ComponentRenderContext, key: string) {\r\n      const has = key[0] !== '_' && !isGloballyWhitelisted(key)\r\n      if (__DEV__ && !has && PublicInstanceProxyHandlers.has!(_, key)) {\r\n        warn(\r\n          `Property ${JSON.stringify(\r\n            key\r\n          )} should not start with _ which is a reserved prefix for Vue internals.`\r\n        )\r\n      }\r\n      return has\r\n    }\r\n  }\r\n)\r\n\r\n// dev only\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nexport function createDevRenderContext(instance: ComponentInternalInstance) {\r\n  const target: Record<string, any> = {}\r\n\r\n  // expose internal instance for proxy handlers\r\n  Object.defineProperty(target, `_`, {\r\n    configurable: true,\r\n    enumerable: false,\r\n    get: () => instance\r\n  })\r\n\r\n  // expose public properties\r\n  Object.keys(publicPropertiesMap).forEach(key => {\r\n    Object.defineProperty(target, key, {\r\n      configurable: true,\r\n      enumerable: false,\r\n      get: () => publicPropertiesMap[key](instance),\r\n      // intercepted by the proxy so no need for implementation,\r\n      // but needed to prevent set errors\r\n      set: NOOP\r\n    })\r\n  })\r\n\r\n  return target as ComponentRenderContext\r\n}\r\n\r\n// dev only\r\nexport function exposePropsOnRenderContext(\r\n  instance: ComponentInternalInstance\r\n) {\r\n  const {\r\n    ctx,\r\n    propsOptions: [propsOptions]\r\n  } = instance\r\n  if (propsOptions) {\r\n    Object.keys(propsOptions).forEach(key => {\r\n      Object.defineProperty(ctx, key, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get: () => instance.props[key],\r\n        set: NOOP\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// dev only\r\nexport function exposeSetupStateOnRenderContext(\r\n  instance: ComponentInternalInstance\r\n) {\r\n  const { ctx, setupState } = instance\r\n  Object.keys(toRaw(setupState)).forEach(key => {\r\n    if (!setupState.__isScriptSetup) {\r\n      if (isReservedPrefix(key[0])) {\r\n        warn(\r\n          `setup() return property ${JSON.stringify(\r\n            key\r\n          )} should not start with \"$\" or \"_\" ` +\r\n            `which are reserved prefixes for Vue internals.`\r\n        )\r\n        return\r\n      }\r\n      Object.defineProperty(ctx, key, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get: () => setupState[key],\r\n        set: NOOP\r\n      })\r\n    }\r\n  })\r\n}\r\n","import {\r\n  ComponentInternalInstance,\r\n  Data,\r\n  SetupContext,\r\n  ComponentInternalOptions,\r\n  Component,\r\n  ConcreteComponent,\r\n  InternalRenderFunction,\r\n  LifecycleHooks\r\n} from './component'\r\nimport {\r\n  isFunction,\r\n  extend,\r\n  isString,\r\n  isObject,\r\n  isArray,\r\n  NOOP,\r\n  isPromise,\r\n  LooseRequired,\r\n  UnionToIntersection\r\n} from '@vue/shared'\r\nimport { isRef, Ref } from '@vue/reactivity'\r\nimport { computed } from './apiComputed'\r\nimport {\r\n  watch,\r\n  WatchOptions,\r\n  WatchCallback,\r\n  createPathGetter\r\n} from './apiWatch'\r\nimport { provide, inject } from './apiInject'\r\nimport {\r\n  onBeforeMount,\r\n  onMounted,\r\n  onBeforeUpdate,\r\n  onUpdated,\r\n  onErrorCaptured,\r\n  onRenderTracked,\r\n  onBeforeUnmount,\r\n  onUnmounted,\r\n  onActivated,\r\n  onDeactivated,\r\n  onRenderTriggered,\r\n  DebuggerHook,\r\n  ErrorCapturedHook,\r\n  onServerPrefetch\r\n} from './apiLifecycle'\r\nimport {\r\n  reactive,\r\n  ComputedGetter,\r\n  WritableComputedOptions\r\n} from '@vue/reactivity'\r\nimport {\r\n  ComponentObjectPropsOptions,\r\n  ExtractPropTypes,\r\n  ExtractDefaultPropTypes\r\n} from './componentProps'\r\nimport { EmitsOptions, EmitsToProps } from './componentEmits'\r\nimport { Directive } from './directives'\r\nimport {\r\n  CreateComponentPublicInstance,\r\n  ComponentPublicInstance,\r\n  isReservedPrefix\r\n} from './componentPublicInstance'\r\nimport { warn } from './warning'\r\nimport { VNodeChild } from './vnode'\r\nimport { callWithAsyncErrorHandling } from './errorHandling'\r\nimport { deepMergeData } from './compat/data'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport {\r\n  CompatConfig,\r\n  isCompatEnabled,\r\n  softAssertCompatEnabled\r\n} from './compat/compatConfig'\r\nimport { OptionMergeFunction } from './apiCreateApp'\r\n\r\n/**\r\n * Interface for declaring custom options.\r\n *\r\n * @example\r\n * ```ts\r\n * declare module '@vue/runtime-core' {\r\n *   interface ComponentCustomOptions {\r\n *     beforeRouteUpdate?(\r\n *       to: Route,\r\n *       from: Route,\r\n *       next: () => void\r\n *     ): void\r\n *   }\r\n * }\r\n * ```\r\n */\r\nexport interface ComponentCustomOptions {}\r\n\r\nexport type RenderFunction = () => VNodeChild\r\n\r\ntype ExtractOptionProp<T> = T extends ComponentOptionsBase<\r\n  infer P, // Props\r\n  any, // RawBindings\r\n  any, // D\r\n  any, // C\r\n  any, // M\r\n  any, // Mixin\r\n  any, // Extends\r\n  any // EmitsOptions\r\n>\r\n  ? unknown extends P\r\n    ? {}\r\n    : P\r\n  : {}\r\n\r\nexport interface ComponentOptionsBase<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions,\r\n  M extends MethodOptions,\r\n  Mixin extends ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin,\r\n  E extends EmitsOptions,\r\n  EE extends string = string,\r\n  Defaults = {}\r\n> extends LegacyOptions<Props, D, C, M, Mixin, Extends>,\r\n    ComponentInternalOptions,\r\n    ComponentCustomOptions {\r\n  setup?: (\r\n    this: void,\r\n    props: Readonly<\r\n      LooseRequired<\r\n        Props &\r\n          UnionToIntersection<ExtractOptionProp<Mixin>> &\r\n          UnionToIntersection<ExtractOptionProp<Extends>>\r\n      >\r\n    >,\r\n    ctx: SetupContext<E>\r\n  ) => Promise<RawBindings> | RawBindings | RenderFunction | void\r\n  name?: string\r\n  template?: string | object // can be a direct DOM node\r\n  // Note: we are intentionally using the signature-less `Function` type here\r\n  // since any type with signature will cause the whole inference to fail when\r\n  // the return expression contains reference to `this`.\r\n  // Luckily `render()` doesn't need any arguments nor does it care about return\r\n  // type.\r\n  render?: Function\r\n  components?: Record<string, Component>\r\n  directives?: Record<string, Directive>\r\n  inheritAttrs?: boolean\r\n  emits?: (E | EE[]) & ThisType<void>\r\n  // TODO infer public instance type based on exposed keys\r\n  expose?: string[]\r\n  serverPrefetch?(): Promise<any>\r\n\r\n  // Runtime compiler only -----------------------------------------------------\r\n  compilerOptions?: RuntimeCompilerOptions\r\n\r\n  // Internal ------------------------------------------------------------------\r\n\r\n  /**\r\n   * SSR only. This is produced by compiler-ssr and attached in compiler-sfc\r\n   * not user facing, so the typing is lax and for test only.\r\n   * @internal\r\n   */\r\n  ssrRender?: (\r\n    ctx: any,\r\n    push: (item: any) => void,\r\n    parentInstance: ComponentInternalInstance,\r\n    attrs: Data | undefined,\r\n    // for compiler-optimized bindings\r\n    $props: ComponentInternalInstance['props'],\r\n    $setup: ComponentInternalInstance['setupState'],\r\n    $data: ComponentInternalInstance['data'],\r\n    $options: ComponentInternalInstance['ctx']\r\n  ) => void\r\n\r\n  /**\r\n   * Only generated by compiler-sfc to mark a ssr render function inlined and\r\n   * returned from setup()\r\n   * @internal\r\n   */\r\n  __ssrInlineRender?: boolean\r\n\r\n  /**\r\n   * marker for AsyncComponentWrapper\r\n   * @internal\r\n   */\r\n  __asyncLoader?: () => Promise<ConcreteComponent>\r\n  /**\r\n   * the inner component resolved by the AsyncComponentWrapper\r\n   * @internal\r\n   */\r\n  __asyncResolved?: ConcreteComponent\r\n\r\n  // Type differentiators ------------------------------------------------------\r\n\r\n  // Note these are internal but need to be exposed in d.ts for type inference\r\n  // to work!\r\n\r\n  // type-only differentiator to separate OptionWithoutProps from a constructor\r\n  // type returned by defineComponent() or FunctionalComponent\r\n  call?: (this: unknown, ...args: unknown[]) => never\r\n  // type-only differentiators for built-in Vnode types\r\n  __isFragment?: never\r\n  __isTeleport?: never\r\n  __isSuspense?: never\r\n\r\n  __defaults?: Defaults\r\n}\r\n\r\n/**\r\n * Subset of compiler options that makes sense for the runtime.\r\n */\r\nexport interface RuntimeCompilerOptions {\r\n  isCustomElement?: (tag: string) => boolean\r\n  whitespace?: 'preserve' | 'condense'\r\n  comments?: boolean\r\n  delimiters?: [string, string]\r\n}\r\n\r\nexport type ComponentOptionsWithoutProps<\r\n  Props = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  PE = Props & EmitsToProps<E>\r\n> = ComponentOptionsBase<\r\n  PE,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  {}\r\n> & {\r\n  props?: undefined\r\n} & ThisType<\r\n    CreateComponentPublicInstance<PE, RawBindings, D, C, M, Mixin, Extends, E>\r\n  >\r\n\r\nexport type ComponentOptionsWithArrayProps<\r\n  PropNames extends string = string,\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  Props = Readonly<{ [key in PropNames]?: any }> & EmitsToProps<E>\r\n> = ComponentOptionsBase<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  {}\r\n> & {\r\n  props: PropNames[]\r\n} & ThisType<\r\n    CreateComponentPublicInstance<\r\n      Props,\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E\r\n    >\r\n  >\r\n\r\nexport type ComponentOptionsWithObjectProps<\r\n  PropsOptions = ComponentObjectPropsOptions,\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  Props = Readonly<ExtractPropTypes<PropsOptions>> & EmitsToProps<E>,\r\n  Defaults = ExtractDefaultPropTypes<PropsOptions>\r\n> = ComponentOptionsBase<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  Defaults\r\n> & {\r\n  props: PropsOptions & ThisType<void>\r\n} & ThisType<\r\n    CreateComponentPublicInstance<\r\n      Props,\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E,\r\n      Props,\r\n      Defaults,\r\n      false\r\n    >\r\n  >\r\n\r\nexport type ComponentOptions<\r\n  Props = {},\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = any,\r\n  M extends MethodOptions = any,\r\n  Mixin extends ComponentOptionsMixin = any,\r\n  Extends extends ComponentOptionsMixin = any,\r\n  E extends EmitsOptions = any\r\n> = ComponentOptionsBase<Props, RawBindings, D, C, M, Mixin, Extends, E> &\r\n  ThisType<\r\n    CreateComponentPublicInstance<\r\n      {},\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E,\r\n      Readonly<Props>\r\n    >\r\n  >\r\n\r\nexport type ComponentOptionsMixin = ComponentOptionsBase<\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any\r\n>\r\n\r\nexport type ComputedOptions = Record<\r\n  string,\r\n  ComputedGetter<any> | WritableComputedOptions<any>\r\n>\r\n\r\nexport interface MethodOptions {\r\n  [key: string]: Function\r\n}\r\n\r\nexport type ExtractComputedReturns<T extends any> = {\r\n  [key in keyof T]: T[key] extends { get: (...args: any[]) => infer TReturn }\r\n    ? TReturn\r\n    : T[key] extends (...args: any[]) => infer TReturn\r\n    ? TReturn\r\n    : never\r\n}\r\n\r\nexport type ObjectWatchOptionItem = {\r\n  handler: WatchCallback | string\r\n} & WatchOptions\r\n\r\ntype WatchOptionItem = string | WatchCallback | ObjectWatchOptionItem\r\n\r\ntype ComponentWatchOptionItem = WatchOptionItem | WatchOptionItem[]\r\n\r\ntype ComponentWatchOptions = Record<string, ComponentWatchOptionItem>\r\n\r\nexport type ComponentProvideOptions = ObjectProvideOptions | Function\r\n\r\ntype ObjectProvideOptions = Record<string | symbol, unknown>\r\n\r\ntype ComponentInjectOptions = string[] | ObjectInjectOptions\r\n\r\ntype ObjectInjectOptions = Record<\r\n  string | symbol,\r\n  string | symbol | { from?: string | symbol; default?: unknown }\r\n>\r\n\r\ninterface LegacyOptions<\r\n  Props,\r\n  D,\r\n  C extends ComputedOptions,\r\n  M extends MethodOptions,\r\n  Mixin extends ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin\r\n> {\r\n  compatConfig?: CompatConfig\r\n\r\n  // allow any custom options\r\n  [key: string]: any\r\n\r\n  // state\r\n  // Limitation: we cannot expose RawBindings on the `this` context for data\r\n  // since that leads to some sort of circular inference and breaks ThisType\r\n  // for the entire component.\r\n  data?: (\r\n    this: CreateComponentPublicInstance<\r\n      Props,\r\n      {},\r\n      {},\r\n      {},\r\n      MethodOptions,\r\n      Mixin,\r\n      Extends\r\n    >,\r\n    vm: CreateComponentPublicInstance<\r\n      Props,\r\n      {},\r\n      {},\r\n      {},\r\n      MethodOptions,\r\n      Mixin,\r\n      Extends\r\n    >\r\n  ) => D\r\n  computed?: C\r\n  methods?: M\r\n  watch?: ComponentWatchOptions\r\n  provide?: ComponentProvideOptions\r\n  inject?: ComponentInjectOptions\r\n\r\n  // assets\r\n  filters?: Record<string, Function>\r\n\r\n  // composition\r\n  mixins?: Mixin[]\r\n  extends?: Extends\r\n\r\n  // lifecycle\r\n  beforeCreate?(): void\r\n  created?(): void\r\n  beforeMount?(): void\r\n  mounted?(): void\r\n  beforeUpdate?(): void\r\n  updated?(): void\r\n  activated?(): void\r\n  deactivated?(): void\r\n  /** @deprecated use `beforeUnmount` instead */\r\n  beforeDestroy?(): void\r\n  beforeUnmount?(): void\r\n  /** @deprecated use `unmounted` instead */\r\n  destroyed?(): void\r\n  unmounted?(): void\r\n  renderTracked?: DebuggerHook\r\n  renderTriggered?: DebuggerHook\r\n  errorCaptured?: ErrorCapturedHook\r\n\r\n  /**\r\n   * runtime compile only\r\n   * @deprecated use `compilerOptions.delimiters` instead.\r\n   */\r\n  delimiters?: [string, string]\r\n\r\n  /**\r\n   * #3468\r\n   *\r\n   * type-only, used to assist Mixin's type inference,\r\n   * typescript will try to simplify the inferred `Mixin` type,\r\n   * with the `__differentiator`, typescript won't be able to combine different mixins,\r\n   * because the `__differentiator` will be different\r\n   */\r\n  __differentiator?: keyof D | keyof C | keyof M\r\n}\r\n\r\ntype MergedHook<T = () => void> = T | T[]\r\n\r\nexport type MergedComponentOptions = ComponentOptions &\r\n  MergedComponentOptionsOverride\r\n\r\nexport type MergedComponentOptionsOverride = {\r\n  beforeCreate?: MergedHook\r\n  created?: MergedHook\r\n  beforeMount?: MergedHook\r\n  mounted?: MergedHook\r\n  beforeUpdate?: MergedHook\r\n  updated?: MergedHook\r\n  activated?: MergedHook\r\n  deactivated?: MergedHook\r\n  /** @deprecated use `beforeUnmount` instead */\r\n  beforeDestroy?: MergedHook\r\n  beforeUnmount?: MergedHook\r\n  /** @deprecated use `unmounted` instead */\r\n  destroyed?: MergedHook\r\n  unmounted?: MergedHook\r\n  renderTracked?: MergedHook<DebuggerHook>\r\n  renderTriggered?: MergedHook<DebuggerHook>\r\n  errorCaptured?: MergedHook<ErrorCapturedHook>\r\n}\r\n\r\nexport type OptionTypesKeys = 'P' | 'B' | 'D' | 'C' | 'M' | 'Defaults'\r\n\r\nexport type OptionTypesType<\r\n  P = {},\r\n  B = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Defaults = {}\r\n> = {\r\n  P: P\r\n  B: B\r\n  D: D\r\n  C: C\r\n  M: M\r\n  Defaults: Defaults\r\n}\r\n\r\nconst enum OptionTypes {\r\n  PROPS = 'Props',\r\n  DATA = 'Data',\r\n  COMPUTED = 'Computed',\r\n  METHODS = 'Methods',\r\n  INJECT = 'Inject'\r\n}\r\n\r\nfunction createDuplicateChecker() {\r\n  const cache = Object.create(null)\r\n  return (type: OptionTypes, key: string) => {\r\n    if (cache[key]) {\r\n      warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`)\r\n    } else {\r\n      cache[key] = type\r\n    }\r\n  }\r\n}\r\n\r\nexport let shouldCacheAccess = true\r\n\r\nexport function applyOptions(instance: ComponentInternalInstance) {\r\n  const options = resolveMergedOptions(instance)\r\n  const publicThis = instance.proxy! as any\r\n  const ctx = instance.ctx\r\n\r\n  // do not cache property access on public proxy during state initialization\r\n  shouldCacheAccess = false\r\n\r\n  // call beforeCreate first before accessing other options since\r\n  // the hook may mutate resolved options (#2791)\r\n  if (options.beforeCreate) {\r\n    callHook(options.beforeCreate, instance, LifecycleHooks.BEFORE_CREATE)\r\n  }\r\n\r\n  const {\r\n    // state\r\n    data: dataOptions,\r\n    computed: computedOptions,\r\n    methods,\r\n    watch: watchOptions,\r\n    provide: provideOptions,\r\n    inject: injectOptions,\r\n    // lifecycle\r\n    created,\r\n    beforeMount,\r\n    mounted,\r\n    beforeUpdate,\r\n    updated,\r\n    activated,\r\n    deactivated,\r\n    beforeDestroy,\r\n    beforeUnmount,\r\n    destroyed,\r\n    unmounted,\r\n    render,\r\n    renderTracked,\r\n    renderTriggered,\r\n    errorCaptured,\r\n    serverPrefetch,\r\n    // public API\r\n    expose,\r\n    inheritAttrs,\r\n    // assets\r\n    components,\r\n    directives,\r\n    filters\r\n  } = options\r\n\r\n  const checkDuplicateProperties = __DEV__ ? createDuplicateChecker() : null\r\n\r\n  if (__DEV__) {\r\n    const [propsOptions] = instance.propsOptions\r\n    if (propsOptions) {\r\n      for (const key in propsOptions) {\r\n        checkDuplicateProperties!(OptionTypes.PROPS, key)\r\n      }\r\n    }\r\n  }\r\n\r\n  // options initialization order (to be consistent with Vue 2):\r\n  // - props (already done outside of this function)\r\n  // - inject\r\n  // - methods\r\n  // - data (deferred since it relies on `this` access)\r\n  // - computed\r\n  // - watch (deferred since it relies on `this` access)\r\n\r\n  if (injectOptions) {\r\n    resolveInjections(\r\n      injectOptions,\r\n      ctx,\r\n      checkDuplicateProperties,\r\n      instance.appContext.config.unwrapInjectedRef\r\n    )\r\n  }\r\n\r\n  if (methods) {\r\n    for (const key in methods) {\r\n      const methodHandler = (methods as MethodOptions)[key]\r\n      if (isFunction(methodHandler)) {\r\n        // In dev mode, we use the `createRenderContext` function to define\r\n        // methods to the proxy target, and those are read-only but\r\n        // reconfigurable, so it needs to be redefined here\r\n        if (__DEV__) {\r\n          Object.defineProperty(ctx, key, {\r\n            value: methodHandler.bind(publicThis),\r\n            configurable: true,\r\n            enumerable: true,\r\n            writable: true\r\n          })\r\n        } else {\r\n          ctx[key] = methodHandler.bind(publicThis)\r\n        }\r\n        if (__DEV__) {\r\n          checkDuplicateProperties!(OptionTypes.METHODS, key)\r\n        }\r\n      } else if (__DEV__) {\r\n        warn(\r\n          `Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n            `Did you reference the function correctly?`\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  if (dataOptions) {\r\n    if (__DEV__ && !isFunction(dataOptions)) {\r\n      warn(\r\n        `The data option must be a function. ` +\r\n          `Plain object usage is no longer supported.`\r\n      )\r\n    }\r\n    const data = dataOptions.call(publicThis, publicThis)\r\n    if (__DEV__ && isPromise(data)) {\r\n      warn(\r\n        `data() returned a Promise - note data() cannot be async; If you ` +\r\n          `intend to perform data fetching before component renders, use ` +\r\n          `async setup() + <Suspense>.`\r\n      )\r\n    }\r\n    if (!isObject(data)) {\r\n      __DEV__ && warn(`data() should return an object.`)\r\n    } else {\r\n      instance.data = reactive(data)\r\n      if (__DEV__) {\r\n        for (const key in data) {\r\n          checkDuplicateProperties!(OptionTypes.DATA, key)\r\n          // expose data on ctx during dev\r\n          if (!isReservedPrefix(key[0])) {\r\n            Object.defineProperty(ctx, key, {\r\n              configurable: true,\r\n              enumerable: true,\r\n              get: () => data[key],\r\n              set: NOOP\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // state initialization complete at this point - start caching access\r\n  shouldCacheAccess = true\r\n\r\n  if (computedOptions) {\r\n    for (const key in computedOptions) {\r\n      const opt = (computedOptions as ComputedOptions)[key]\r\n      const get = isFunction(opt)\r\n        ? opt.bind(publicThis, publicThis)\r\n        : isFunction(opt.get)\r\n        ? opt.get.bind(publicThis, publicThis)\r\n        : NOOP\r\n      if (__DEV__ && get === NOOP) {\r\n        warn(`Computed property \"${key}\" has no getter.`)\r\n      }\r\n      const set =\r\n        !isFunction(opt) && isFunction(opt.set)\r\n          ? opt.set.bind(publicThis)\r\n          : __DEV__\r\n          ? () => {\r\n              warn(\r\n                `Write operation failed: computed property \"${key}\" is readonly.`\r\n              )\r\n            }\r\n          : NOOP\r\n      const c = computed({\r\n        get,\r\n        set\r\n      })\r\n      Object.defineProperty(ctx, key, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get: () => c.value,\r\n        set: v => (c.value = v)\r\n      })\r\n      if (__DEV__) {\r\n        checkDuplicateProperties!(OptionTypes.COMPUTED, key)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (watchOptions) {\r\n    for (const key in watchOptions) {\r\n      createWatcher(watchOptions[key], ctx, publicThis, key)\r\n    }\r\n  }\r\n\r\n  if (provideOptions) {\r\n    const provides = isFunction(provideOptions)\r\n      ? provideOptions.call(publicThis)\r\n      : provideOptions\r\n    Reflect.ownKeys(provides).forEach(key => {\r\n      provide(key, provides[key])\r\n    })\r\n  }\r\n\r\n  if (created) {\r\n    callHook(created, instance, LifecycleHooks.CREATED)\r\n  }\r\n\r\n  function registerLifecycleHook(\r\n    register: Function,\r\n    hook?: Function | Function[]\r\n  ) {\r\n    if (isArray(hook)) {\r\n      hook.forEach(_hook => register(_hook.bind(publicThis)))\r\n    } else if (hook) {\r\n      register((hook as Function).bind(publicThis))\r\n    }\r\n  }\r\n\r\n  registerLifecycleHook(onBeforeMount, beforeMount)\r\n  registerLifecycleHook(onMounted, mounted)\r\n  registerLifecycleHook(onBeforeUpdate, beforeUpdate)\r\n  registerLifecycleHook(onUpdated, updated)\r\n  registerLifecycleHook(onActivated, activated)\r\n  registerLifecycleHook(onDeactivated, deactivated)\r\n  registerLifecycleHook(onErrorCaptured, errorCaptured)\r\n  registerLifecycleHook(onRenderTracked, renderTracked)\r\n  registerLifecycleHook(onRenderTriggered, renderTriggered)\r\n  registerLifecycleHook(onBeforeUnmount, beforeUnmount)\r\n  registerLifecycleHook(onUnmounted, unmounted)\r\n  registerLifecycleHook(onServerPrefetch, serverPrefetch)\r\n\r\n  if (__COMPAT__) {\r\n    if (\r\n      beforeDestroy &&\r\n      softAssertCompatEnabled(DeprecationTypes.OPTIONS_BEFORE_DESTROY, instance)\r\n    ) {\r\n      registerLifecycleHook(onBeforeUnmount, beforeDestroy)\r\n    }\r\n    if (\r\n      destroyed &&\r\n      softAssertCompatEnabled(DeprecationTypes.OPTIONS_DESTROYED, instance)\r\n    ) {\r\n      registerLifecycleHook(onUnmounted, destroyed)\r\n    }\r\n  }\r\n\r\n  if (isArray(expose)) {\r\n    if (expose.length) {\r\n      const exposed = instance.exposed || (instance.exposed = {})\r\n      expose.forEach(key => {\r\n        Object.defineProperty(exposed, key, {\r\n          get: () => publicThis[key],\r\n          set: val => (publicThis[key] = val)\r\n        })\r\n      })\r\n    } else if (!instance.exposed) {\r\n      instance.exposed = {}\r\n    }\r\n  }\r\n\r\n  // options that are handled when creating the instance but also need to be\r\n  // applied from mixins\r\n  if (render && instance.render === NOOP) {\r\n    instance.render = render as InternalRenderFunction\r\n  }\r\n  if (inheritAttrs != null) {\r\n    instance.inheritAttrs = inheritAttrs\r\n  }\r\n\r\n  // asset options.\r\n  if (components) instance.components = components as any\r\n  if (directives) instance.directives = directives\r\n  if (\r\n    __COMPAT__ &&\r\n    filters &&\r\n    isCompatEnabled(DeprecationTypes.FILTERS, instance)\r\n  ) {\r\n    instance.filters = filters\r\n  }\r\n}\r\n\r\nexport function resolveInjections(\r\n  injectOptions: ComponentInjectOptions,\r\n  ctx: any,\r\n  checkDuplicateProperties = NOOP as any,\r\n  unwrapRef = false\r\n) {\r\n  if (isArray(injectOptions)) {\r\n    injectOptions = normalizeInject(injectOptions)!\r\n  }\r\n  for (const key in injectOptions) {\r\n    const opt = (injectOptions as ObjectInjectOptions)[key]\r\n    let injected: unknown\r\n    if (isObject(opt)) {\r\n      if ('default' in opt) {\r\n        injected = inject(\r\n          opt.from || key,\r\n          opt.default,\r\n          true /* treat default function as factory */\r\n        )\r\n      } else {\r\n        injected = inject(opt.from || key)\r\n      }\r\n    } else {\r\n      injected = inject(opt)\r\n    }\r\n    if (isRef(injected)) {\r\n      // TODO remove the check in 3.3\r\n      if (unwrapRef) {\r\n        Object.defineProperty(ctx, key, {\r\n          enumerable: true,\r\n          configurable: true,\r\n          get: () => (injected as Ref).value,\r\n          set: v => ((injected as Ref).value = v)\r\n        })\r\n      } else {\r\n        if (__DEV__) {\r\n          warn(\r\n            `injected property \"${key}\" is a ref and will be auto-unwrapped ` +\r\n              `and no longer needs \\`.value\\` in the next minor release. ` +\r\n              `To opt-in to the new behavior now, ` +\r\n              `set \\`app.config.unwrapInjectedRef = true\\` (this config is ` +\r\n              `temporary and will not be needed in the future.)`\r\n          )\r\n        }\r\n        ctx[key] = injected\r\n      }\r\n    } else {\r\n      ctx[key] = injected\r\n    }\r\n    if (__DEV__) {\r\n      checkDuplicateProperties!(OptionTypes.INJECT, key)\r\n    }\r\n  }\r\n}\r\n\r\nfunction callHook(\r\n  hook: Function,\r\n  instance: ComponentInternalInstance,\r\n  type: LifecycleHooks\r\n) {\r\n  callWithAsyncErrorHandling(\r\n    isArray(hook)\r\n      ? hook.map(h => h.bind(instance.proxy!))\r\n      : hook.bind(instance.proxy!),\r\n    instance,\r\n    type\r\n  )\r\n}\r\n\r\nexport function createWatcher(\r\n  raw: ComponentWatchOptionItem,\r\n  ctx: Data,\r\n  publicThis: ComponentPublicInstance,\r\n  key: string\r\n) {\r\n  const getter = key.includes('.')\r\n    ? createPathGetter(publicThis, key)\r\n    : () => (publicThis as any)[key]\r\n  if (isString(raw)) {\r\n    const handler = ctx[raw]\r\n    if (isFunction(handler)) {\r\n      watch(getter, handler as WatchCallback)\r\n    } else if (__DEV__) {\r\n      warn(`Invalid watch handler specified by key \"${raw}\"`, handler)\r\n    }\r\n  } else if (isFunction(raw)) {\r\n    watch(getter, raw.bind(publicThis))\r\n  } else if (isObject(raw)) {\r\n    if (isArray(raw)) {\r\n      raw.forEach(r => createWatcher(r, ctx, publicThis, key))\r\n    } else {\r\n      const handler = isFunction(raw.handler)\r\n        ? raw.handler.bind(publicThis)\r\n        : (ctx[raw.handler] as WatchCallback)\r\n      if (isFunction(handler)) {\r\n        watch(getter, handler, raw)\r\n      } else if (__DEV__) {\r\n        warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler)\r\n      }\r\n    }\r\n  } else if (__DEV__) {\r\n    warn(`Invalid watch option: \"${key}\"`, raw)\r\n  }\r\n}\r\n\r\n/**\r\n * Resolve merged options and cache it on the component.\r\n * This is done only once per-component since the merging does not involve\r\n * instances.\r\n */\r\nexport function resolveMergedOptions(\r\n  instance: ComponentInternalInstance\r\n): MergedComponentOptions {\r\n  const base = instance.type as ComponentOptions\r\n  const { mixins, extends: extendsOptions } = base\r\n  const {\r\n    mixins: globalMixins,\r\n    optionsCache: cache,\r\n    config: { optionMergeStrategies }\r\n  } = instance.appContext\r\n  const cached = cache.get(base)\r\n\r\n  let resolved: MergedComponentOptions\r\n\r\n  if (cached) {\r\n    resolved = cached\r\n  } else if (!globalMixins.length && !mixins && !extendsOptions) {\r\n    if (\r\n      __COMPAT__ &&\r\n      isCompatEnabled(DeprecationTypes.PRIVATE_APIS, instance)\r\n    ) {\r\n      resolved = extend({}, base) as MergedComponentOptions\r\n      resolved.parent = instance.parent && instance.parent.proxy\r\n      resolved.propsData = instance.vnode.props\r\n    } else {\r\n      resolved = base as MergedComponentOptions\r\n    }\r\n  } else {\r\n    resolved = {}\r\n    if (globalMixins.length) {\r\n      globalMixins.forEach(m =>\r\n        mergeOptions(resolved, m, optionMergeStrategies, true)\r\n      )\r\n    }\r\n    mergeOptions(resolved, base, optionMergeStrategies)\r\n  }\r\n\r\n  cache.set(base, resolved)\r\n  return resolved\r\n}\r\n\r\nexport function mergeOptions(\r\n  to: any,\r\n  from: any,\r\n  strats: Record<string, OptionMergeFunction>,\r\n  asMixin = false\r\n) {\r\n  if (__COMPAT__ && isFunction(from)) {\r\n    from = from.options\r\n  }\r\n\r\n  const { mixins, extends: extendsOptions } = from\r\n\r\n  if (extendsOptions) {\r\n    mergeOptions(to, extendsOptions, strats, true)\r\n  }\r\n  if (mixins) {\r\n    mixins.forEach((m: ComponentOptionsMixin) =>\r\n      mergeOptions(to, m, strats, true)\r\n    )\r\n  }\r\n\r\n  for (const key in from) {\r\n    if (asMixin && key === 'expose') {\r\n      __DEV__ &&\r\n        warn(\r\n          `\"expose\" option is ignored when declared in mixins or extends. ` +\r\n            `It should only be declared in the base component itself.`\r\n        )\r\n    } else {\r\n      const strat = internalOptionMergeStrats[key] || (strats && strats[key])\r\n      to[key] = strat ? strat(to[key], from[key]) : from[key]\r\n    }\r\n  }\r\n  return to\r\n}\r\n\r\nexport const internalOptionMergeStrats: Record<string, Function> = {\r\n  data: mergeDataFn,\r\n  props: mergeObjectOptions, // TODO\r\n  emits: mergeObjectOptions, // TODO\r\n  // objects\r\n  methods: mergeObjectOptions,\r\n  computed: mergeObjectOptions,\r\n  // lifecycle\r\n  beforeCreate: mergeAsArray,\r\n  created: mergeAsArray,\r\n  beforeMount: mergeAsArray,\r\n  mounted: mergeAsArray,\r\n  beforeUpdate: mergeAsArray,\r\n  updated: mergeAsArray,\r\n  beforeDestroy: mergeAsArray,\r\n  beforeUnmount: mergeAsArray,\r\n  destroyed: mergeAsArray,\r\n  unmounted: mergeAsArray,\r\n  activated: mergeAsArray,\r\n  deactivated: mergeAsArray,\r\n  errorCaptured: mergeAsArray,\r\n  serverPrefetch: mergeAsArray,\r\n  // assets\r\n  components: mergeObjectOptions,\r\n  directives: mergeObjectOptions,\r\n  // watch\r\n  watch: mergeWatchOptions,\r\n  // provide / inject\r\n  provide: mergeDataFn,\r\n  inject: mergeInject\r\n}\r\n\r\nif (__COMPAT__) {\r\n  internalOptionMergeStrats.filters = mergeObjectOptions\r\n}\r\n\r\nfunction mergeDataFn(to: any, from: any) {\r\n  if (!from) {\r\n    return to\r\n  }\r\n  if (!to) {\r\n    return from\r\n  }\r\n  return function mergedDataFn(this: ComponentPublicInstance) {\r\n    return (\r\n      __COMPAT__ && isCompatEnabled(DeprecationTypes.OPTIONS_DATA_MERGE, null)\r\n        ? deepMergeData\r\n        : extend\r\n    )(\r\n      isFunction(to) ? to.call(this, this) : to,\r\n      isFunction(from) ? from.call(this, this) : from\r\n    )\r\n  }\r\n}\r\n\r\nfunction mergeInject(\r\n  to: ComponentInjectOptions | undefined,\r\n  from: ComponentInjectOptions\r\n) {\r\n  return mergeObjectOptions(normalizeInject(to), normalizeInject(from))\r\n}\r\n\r\nfunction normalizeInject(\r\n  raw: ComponentInjectOptions | undefined\r\n): ObjectInjectOptions | undefined {\r\n  if (isArray(raw)) {\r\n    const res: ObjectInjectOptions = {}\r\n    for (let i = 0; i < raw.length; i++) {\r\n      res[raw[i]] = raw[i]\r\n    }\r\n    return res\r\n  }\r\n  return raw\r\n}\r\n\r\nfunction mergeAsArray<T = Function>(to: T[] | T | undefined, from: T | T[]) {\r\n  return to ? [...new Set([].concat(to as any, from as any))] : from\r\n}\r\n\r\nfunction mergeObjectOptions(to: Object | undefined, from: Object | undefined) {\r\n  return to ? extend(extend(Object.create(null), to), from) : from\r\n}\r\n\r\nfunction mergeWatchOptions(\r\n  to: ComponentWatchOptions | undefined,\r\n  from: ComponentWatchOptions | undefined\r\n) {\r\n  if (!to) return from\r\n  if (!from) return to\r\n  const merged = extend(Object.create(null), to)\r\n  for (const key in from) {\r\n    merged[key] = mergeAsArray(to[key], from[key])\r\n  }\r\n  return merged\r\n}\r\n","import {\r\n  toRaw,\r\n  shallowReactive,\r\n  trigger,\r\n  TriggerOpTypes\r\n} from '@vue/reactivity'\r\nimport {\r\n  EMPTY_OBJ,\r\n  camelize,\r\n  hyphenate,\r\n  capitalize,\r\n  isString,\r\n  isFunction,\r\n  isArray,\r\n  isObject,\r\n  hasOwn,\r\n  toRawType,\r\n  PatchFlags,\r\n  makeMap,\r\n  isReservedProp,\r\n  EMPTY_ARR,\r\n  def,\r\n  extend,\r\n  isOn,\r\n  IfAny\r\n} from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport {\r\n  Data,\r\n  ComponentInternalInstance,\r\n  ComponentOptions,\r\n  ConcreteComponent,\r\n  setCurrentInstance,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport { isEmitListener } from './componentEmits'\r\nimport { InternalObjectKey } from './vnode'\r\nimport { AppContext } from './apiCreateApp'\r\nimport { createPropsDefaultThis } from './compat/props'\r\nimport { isCompatEnabled, softAssertCompatEnabled } from './compat/compatConfig'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport { shouldSkipAttr } from './compat/attrsFallthrough'\r\n\r\nexport type ComponentPropsOptions<P = Data> =\r\n  | ComponentObjectPropsOptions<P>\r\n  | string[]\r\n\r\nexport type ComponentObjectPropsOptions<P = Data> = {\r\n  [K in keyof P]: Prop<P[K]> | null\r\n}\r\n\r\nexport type Prop<T, D = T> = PropOptions<T, D> | PropType<T>\r\n\r\ntype DefaultFactory<T> = (props: Data) => T | null | undefined\r\n\r\nexport interface PropOptions<T = any, D = T> {\r\n  type?: PropType<T> | true | null\r\n  required?: boolean\r\n  default?: D | DefaultFactory<D> | null | undefined | object\r\n  validator?(value: unknown): boolean\r\n}\r\n\r\nexport type PropType<T> = PropConstructor<T> | PropConstructor<T>[]\r\n\r\ntype PropConstructor<T = any> =\r\n  | { new (...args: any[]): T & {} }\r\n  | { (): T }\r\n  | PropMethod<T>\r\n\r\ntype PropMethod<T, TConstructor = any> = [T] extends [\r\n  ((...args: any) => any) | undefined\r\n] // if is function with args, allowing non-required functions\r\n  ? { new (): TConstructor; (): T; readonly prototype: TConstructor } // Create Function like constructor\r\n  : never\r\n\r\ntype RequiredKeys<T> = {\r\n  [K in keyof T]: T[K] extends\r\n    | { required: true }\r\n    | { default: any }\r\n    // don't mark Boolean props as undefined\r\n    | BooleanConstructor\r\n    | { type: BooleanConstructor }\r\n    ? T[K] extends { default: undefined | (() => undefined) }\r\n      ? never\r\n      : K\r\n    : never\r\n}[keyof T]\r\n\r\ntype OptionalKeys<T> = Exclude<keyof T, RequiredKeys<T>>\r\n\r\ntype DefaultKeys<T> = {\r\n  [K in keyof T]: T[K] extends\r\n    | { default: any }\r\n    // Boolean implicitly defaults to false\r\n    | BooleanConstructor\r\n    | { type: BooleanConstructor }\r\n    ? T[K] extends { type: BooleanConstructor; required: true } // not default if Boolean is marked as required\r\n      ? never\r\n      : K\r\n    : never\r\n}[keyof T]\r\n\r\ntype InferPropType<T> = [T] extends [null]\r\n  ? any // null & true would fail to infer\r\n  : [T] extends [{ type: null | true }]\r\n  ? any // As TS issue https://github.com/Microsoft/TypeScript/issues/14829 // somehow `ObjectConstructor` when inferred from { (): T } becomes `any` // `BooleanConstructor` when inferred from PropConstructor(with PropMethod) becomes `Boolean`\r\n  : [T] extends [ObjectConstructor | { type: ObjectConstructor }]\r\n  ? Record<string, any>\r\n  : [T] extends [BooleanConstructor | { type: BooleanConstructor }]\r\n  ? boolean\r\n  : [T] extends [DateConstructor | { type: DateConstructor }]\r\n  ? Date\r\n  : [T] extends [(infer U)[] | { type: (infer U)[] }]\r\n  ? U extends DateConstructor\r\n    ? Date | InferPropType<U>\r\n    : InferPropType<U>\r\n  : [T] extends [Prop<infer V, infer D>]\r\n  ? unknown extends V\r\n    ? IfAny<V, V, D>\r\n    : V\r\n  : T\r\n\r\nexport type ExtractPropTypes<O> = {\r\n  // use `keyof Pick<O, RequiredKeys<O>>` instead of `RequiredKeys<O>` to support IDE features\r\n  [K in keyof Pick<O, RequiredKeys<O>>]: InferPropType<O[K]>\r\n} & {\r\n  // use `keyof Pick<O, OptionalKeys<O>>` instead of `OptionalKeys<O>` to support IDE features\r\n  [K in keyof Pick<O, OptionalKeys<O>>]?: InferPropType<O[K]>\r\n}\r\n\r\nconst enum BooleanFlags {\r\n  shouldCast,\r\n  shouldCastTrue\r\n}\r\n\r\n// extract props which defined with default from prop options\r\nexport type ExtractDefaultPropTypes<O> = O extends object\r\n  ? // use `keyof Pick<O, DefaultKeys<O>>` instead of `DefaultKeys<O>` to support IDE features\r\n    { [K in keyof Pick<O, DefaultKeys<O>>]: InferPropType<O[K]> }\r\n  : {}\r\n\r\ntype NormalizedProp =\r\n  | null\r\n  | (PropOptions & {\r\n      [BooleanFlags.shouldCast]?: boolean\r\n      [BooleanFlags.shouldCastTrue]?: boolean\r\n    })\r\n\r\n// normalized value is a tuple of the actual normalized options\r\n// and an array of prop keys that need value casting (booleans and defaults)\r\nexport type NormalizedProps = Record<string, NormalizedProp>\r\nexport type NormalizedPropsOptions = [NormalizedProps, string[]] | []\r\n\r\nexport function initProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  isStateful: number, // result of bitwise flag comparison\r\n  isSSR = false\r\n) {\r\n  const props: Data = {}\r\n  const attrs: Data = {}\r\n  def(attrs, InternalObjectKey, 1)\r\n\r\n  instance.propsDefaults = Object.create(null)\r\n\r\n  setFullProps(instance, rawProps, props, attrs)\r\n\r\n  // ensure all declared prop keys are present\r\n  for (const key in instance.propsOptions[0]) {\r\n    if (!(key in props)) {\r\n      props[key] = undefined\r\n    }\r\n  }\r\n\r\n  // validation\r\n  if (__DEV__) {\r\n    validateProps(rawProps || {}, props, instance)\r\n  }\r\n\r\n  if (isStateful) {\r\n    // stateful\r\n    instance.props = isSSR ? props : shallowReactive(props)\r\n  } else {\r\n    if (!instance.type.props) {\r\n      // functional w/ optional props, props === attrs\r\n      instance.props = attrs\r\n    } else {\r\n      // functional w/ declared props\r\n      instance.props = props\r\n    }\r\n  }\r\n  instance.attrs = attrs\r\n}\r\n\r\nexport function updateProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  rawPrevProps: Data | null,\r\n  optimized: boolean\r\n) {\r\n  const {\r\n    props,\r\n    attrs,\r\n    vnode: { patchFlag }\r\n  } = instance\r\n  const rawCurrentProps = toRaw(props)\r\n  const [options] = instance.propsOptions\r\n  let hasAttrsChanged = false\r\n\r\n  if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !(\r\n      __DEV__ &&\r\n      (instance.type.__hmrId ||\r\n        (instance.parent && instance.parent.type.__hmrId))\r\n    ) &&\r\n    (optimized || patchFlag > 0) &&\r\n    !(patchFlag & PatchFlags.FULL_PROPS)\r\n  ) {\r\n    if (patchFlag & PatchFlags.PROPS) {\r\n      // Compiler-generated props & no keys change, just set the updated\r\n      // the props.\r\n      const propsToUpdate = instance.vnode.dynamicProps!\r\n      for (let i = 0; i < propsToUpdate.length; i++) {\r\n        let key = propsToUpdate[i]\r\n        // skip if the prop key is a declared emit event listener\r\n        if (isEmitListener(instance.emitsOptions, key)) {\r\n          continue\r\n        }\r\n        // PROPS flag guarantees rawProps to be non-null\r\n        const value = rawProps![key]\r\n        if (options) {\r\n          // attr / props separation was done on init and will be consistent\r\n          // in this code path, so just check if attrs have it.\r\n          if (hasOwn(attrs, key)) {\r\n            if (value !== attrs[key]) {\r\n              attrs[key] = value\r\n              hasAttrsChanged = true\r\n            }\r\n          } else {\r\n            const camelizedKey = camelize(key)\r\n            props[camelizedKey] = resolvePropValue(\r\n              options,\r\n              rawCurrentProps,\r\n              camelizedKey,\r\n              value,\r\n              instance,\r\n              false /* isAbsent */\r\n            )\r\n          }\r\n        } else {\r\n          if (__COMPAT__) {\r\n            if (isOn(key) && key.endsWith('Native')) {\r\n              key = key.slice(0, -6) // remove Native postfix\r\n            } else if (shouldSkipAttr(key, instance)) {\r\n              continue\r\n            }\r\n          }\r\n          if (value !== attrs[key]) {\r\n            attrs[key] = value\r\n            hasAttrsChanged = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // full props update.\r\n    if (setFullProps(instance, rawProps, props, attrs)) {\r\n      hasAttrsChanged = true\r\n    }\r\n    // in case of dynamic props, check if we need to delete keys from\r\n    // the props object\r\n    let kebabKey: string\r\n    for (const key in rawCurrentProps) {\r\n      if (\r\n        !rawProps ||\r\n        // for camelCase\r\n        (!hasOwn(rawProps, key) &&\r\n          // it's possible the original props was passed in as kebab-case\r\n          // and converted to camelCase (#955)\r\n          ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))\r\n      ) {\r\n        if (options) {\r\n          if (\r\n            rawPrevProps &&\r\n            // for camelCase\r\n            (rawPrevProps[key] !== undefined ||\r\n              // for kebab-case\r\n              rawPrevProps[kebabKey!] !== undefined)\r\n          ) {\r\n            props[key] = resolvePropValue(\r\n              options,\r\n              rawCurrentProps,\r\n              key,\r\n              undefined,\r\n              instance,\r\n              true /* isAbsent */\r\n            )\r\n          }\r\n        } else {\r\n          delete props[key]\r\n        }\r\n      }\r\n    }\r\n    // in the case of functional component w/o props declaration, props and\r\n    // attrs point to the same object so it should already have been updated.\r\n    if (attrs !== rawCurrentProps) {\r\n      for (const key in attrs) {\r\n        if (\r\n          !rawProps ||\r\n          (!hasOwn(rawProps, key) &&\r\n            (!__COMPAT__ || !hasOwn(rawProps, key + 'Native')))\r\n        ) {\r\n          delete attrs[key]\r\n          hasAttrsChanged = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // trigger updates for $attrs in case it's used in component slots\r\n  if (hasAttrsChanged) {\r\n    trigger(instance, TriggerOpTypes.SET, '$attrs')\r\n  }\r\n\r\n  if (__DEV__) {\r\n    validateProps(rawProps || {}, props, instance)\r\n  }\r\n}\r\n\r\nfunction setFullProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  props: Data,\r\n  attrs: Data\r\n) {\r\n  const [options, needCastKeys] = instance.propsOptions\r\n  let hasAttrsChanged = false\r\n  let rawCastValues: Data | undefined\r\n  if (rawProps) {\r\n    for (let key in rawProps) {\r\n      // key, ref are reserved and never passed down\r\n      if (isReservedProp(key)) {\r\n        continue\r\n      }\r\n\r\n      if (__COMPAT__) {\r\n        if (key.startsWith('onHook:')) {\r\n          softAssertCompatEnabled(\r\n            DeprecationTypes.INSTANCE_EVENT_HOOKS,\r\n            instance,\r\n            key.slice(2).toLowerCase()\r\n          )\r\n        }\r\n        if (key === 'inline-template') {\r\n          continue\r\n        }\r\n      }\r\n\r\n      const value = rawProps[key]\r\n      // prop option names are camelized during normalization, so to support\r\n      // kebab -> camel conversion here we need to camelize the key.\r\n      let camelKey\r\n      if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n        if (!needCastKeys || !needCastKeys.includes(camelKey)) {\r\n          props[camelKey] = value\r\n        } else {\r\n          ;(rawCastValues || (rawCastValues = {}))[camelKey] = value\r\n        }\r\n      } else if (!isEmitListener(instance.emitsOptions, key)) {\r\n        // Any non-declared (either as a prop or an emitted event) props are put\r\n        // into a separate `attrs` object for spreading. Make sure to preserve\r\n        // original key casing\r\n        if (__COMPAT__) {\r\n          if (isOn(key) && key.endsWith('Native')) {\r\n            key = key.slice(0, -6) // remove Native postfix\r\n          } else if (shouldSkipAttr(key, instance)) {\r\n            continue\r\n          }\r\n        }\r\n        if (!(key in attrs) || value !== attrs[key]) {\r\n          attrs[key] = value\r\n          hasAttrsChanged = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (needCastKeys) {\r\n    const rawCurrentProps = toRaw(props)\r\n    const castValues = rawCastValues || EMPTY_OBJ\r\n    for (let i = 0; i < needCastKeys.length; i++) {\r\n      const key = needCastKeys[i]\r\n      props[key] = resolvePropValue(\r\n        options!,\r\n        rawCurrentProps,\r\n        key,\r\n        castValues[key],\r\n        instance,\r\n        !hasOwn(castValues, key)\r\n      )\r\n    }\r\n  }\r\n\r\n  return hasAttrsChanged\r\n}\r\n\r\nfunction resolvePropValue(\r\n  options: NormalizedProps,\r\n  props: Data,\r\n  key: string,\r\n  value: unknown,\r\n  instance: ComponentInternalInstance,\r\n  isAbsent: boolean\r\n) {\r\n  const opt = options[key]\r\n  if (opt != null) {\r\n    const hasDefault = hasOwn(opt, 'default')\r\n    // default values\r\n    if (hasDefault && value === undefined) {\r\n      const defaultValue = opt.default\r\n      if (opt.type !== Function && isFunction(defaultValue)) {\r\n        const { propsDefaults } = instance\r\n        if (key in propsDefaults) {\r\n          value = propsDefaults[key]\r\n        } else {\r\n          setCurrentInstance(instance)\r\n          value = propsDefaults[key] = defaultValue.call(\r\n            __COMPAT__ &&\r\n              isCompatEnabled(DeprecationTypes.PROPS_DEFAULT_THIS, instance)\r\n              ? createPropsDefaultThis(instance, props, key)\r\n              : null,\r\n            props\r\n          )\r\n          unsetCurrentInstance()\r\n        }\r\n      } else {\r\n        value = defaultValue\r\n      }\r\n    }\r\n    // boolean casting\r\n    if (opt[BooleanFlags.shouldCast]) {\r\n      if (isAbsent && !hasDefault) {\r\n        value = false\r\n      } else if (\r\n        opt[BooleanFlags.shouldCastTrue] &&\r\n        (value === '' || value === hyphenate(key))\r\n      ) {\r\n        value = true\r\n      }\r\n    }\r\n  }\r\n  return value\r\n}\r\n\r\nexport function normalizePropsOptions(\r\n  comp: ConcreteComponent,\r\n  appContext: AppContext,\r\n  asMixin = false\r\n): NormalizedPropsOptions {\r\n  const cache = appContext.propsCache\r\n  const cached = cache.get(comp)\r\n  if (cached) {\r\n    return cached\r\n  }\r\n\r\n  const raw = comp.props\r\n  const normalized: NormalizedPropsOptions[0] = {}\r\n  const needCastKeys: NormalizedPropsOptions[1] = []\r\n\r\n  // apply mixin/extends props\r\n  let hasExtends = false\r\n  if (__FEATURE_OPTIONS_API__ && !isFunction(comp)) {\r\n    const extendProps = (raw: ComponentOptions) => {\r\n      if (__COMPAT__ && isFunction(raw)) {\r\n        raw = raw.options\r\n      }\r\n      hasExtends = true\r\n      const [props, keys] = normalizePropsOptions(raw, appContext, true)\r\n      extend(normalized, props)\r\n      if (keys) needCastKeys.push(...keys)\r\n    }\r\n    if (!asMixin && appContext.mixins.length) {\r\n      appContext.mixins.forEach(extendProps)\r\n    }\r\n    if (comp.extends) {\r\n      extendProps(comp.extends)\r\n    }\r\n    if (comp.mixins) {\r\n      comp.mixins.forEach(extendProps)\r\n    }\r\n  }\r\n\r\n  if (!raw && !hasExtends) {\r\n    cache.set(comp, EMPTY_ARR as any)\r\n    return EMPTY_ARR as any\r\n  }\r\n\r\n  if (isArray(raw)) {\r\n    for (let i = 0; i < raw.length; i++) {\r\n      if (__DEV__ && !isString(raw[i])) {\r\n        warn(`props must be strings when using array syntax.`, raw[i])\r\n      }\r\n      const normalizedKey = camelize(raw[i])\r\n      if (validatePropName(normalizedKey)) {\r\n        normalized[normalizedKey] = EMPTY_OBJ\r\n      }\r\n    }\r\n  } else if (raw) {\r\n    if (__DEV__ && !isObject(raw)) {\r\n      warn(`invalid props options`, raw)\r\n    }\r\n    for (const key in raw) {\r\n      const normalizedKey = camelize(key)\r\n      if (validatePropName(normalizedKey)) {\r\n        const opt = raw[key]\r\n        const prop: NormalizedProp = (normalized[normalizedKey] =\r\n          isArray(opt) || isFunction(opt) ? { type: opt } : opt)\r\n        if (prop) {\r\n          const booleanIndex = getTypeIndex(Boolean, prop.type)\r\n          const stringIndex = getTypeIndex(String, prop.type)\r\n          prop[BooleanFlags.shouldCast] = booleanIndex > -1\r\n          prop[BooleanFlags.shouldCastTrue] =\r\n            stringIndex < 0 || booleanIndex < stringIndex\r\n          // if the prop needs boolean casting or default value\r\n          if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n            needCastKeys.push(normalizedKey)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const res: NormalizedPropsOptions = [normalized, needCastKeys]\r\n  cache.set(comp, res)\r\n  return res\r\n}\r\n\r\nfunction validatePropName(key: string) {\r\n  if (key[0] !== '$') {\r\n    return true\r\n  } else if (__DEV__) {\r\n    warn(`Invalid prop name: \"${key}\" is a reserved property.`)\r\n  }\r\n  return false\r\n}\r\n\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor: Prop<any>): string {\r\n  const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/)\r\n  return match ? match[1] : ctor === null ? 'null' : ''\r\n}\r\n\r\nfunction isSameType(a: Prop<any>, b: Prop<any>): boolean {\r\n  return getType(a) === getType(b)\r\n}\r\n\r\nfunction getTypeIndex(\r\n  type: Prop<any>,\r\n  expectedTypes: PropType<any> | void | null | true\r\n): number {\r\n  if (isArray(expectedTypes)) {\r\n    return expectedTypes.findIndex(t => isSameType(t, type))\r\n  } else if (isFunction(expectedTypes)) {\r\n    return isSameType(expectedTypes, type) ? 0 : -1\r\n  }\r\n  return -1\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(\r\n  rawProps: Data,\r\n  props: Data,\r\n  instance: ComponentInternalInstance\r\n) {\r\n  const resolvedValues = toRaw(props)\r\n  const options = instance.propsOptions[0]\r\n  for (const key in options) {\r\n    let opt = options[key]\r\n    if (opt == null) continue\r\n    validateProp(\r\n      key,\r\n      resolvedValues[key],\r\n      opt,\r\n      !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key))\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(\r\n  name: string,\r\n  value: unknown,\r\n  prop: PropOptions,\r\n  isAbsent: boolean\r\n) {\r\n  const { type, required, validator } = prop\r\n  // required!\r\n  if (required && isAbsent) {\r\n    warn('Missing required prop: \"' + name + '\"')\r\n    return\r\n  }\r\n  // missing but optional\r\n  if (value == null && !prop.required) {\r\n    return\r\n  }\r\n  // type check\r\n  if (type != null && type !== true) {\r\n    let isValid = false\r\n    const types = isArray(type) ? type : [type]\r\n    const expectedTypes = []\r\n    // value is valid as long as one of the specified types match\r\n    for (let i = 0; i < types.length && !isValid; i++) {\r\n      const { valid, expectedType } = assertType(value, types[i])\r\n      expectedTypes.push(expectedType || '')\r\n      isValid = valid\r\n    }\r\n    if (!isValid) {\r\n      warn(getInvalidTypeMessage(name, value, expectedTypes))\r\n      return\r\n    }\r\n  }\r\n  // custom validator\r\n  if (validator && !validator(value)) {\r\n    warn('Invalid prop: custom validator check failed for prop \"' + name + '\".')\r\n  }\r\n}\r\n\r\nconst isSimpleType = /*#__PURE__*/ makeMap(\r\n  'String,Number,Boolean,Function,Symbol,BigInt'\r\n)\r\n\r\ntype AssertionResult = {\r\n  valid: boolean\r\n  expectedType: string\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value: unknown, type: PropConstructor): AssertionResult {\r\n  let valid\r\n  const expectedType = getType(type)\r\n  if (isSimpleType(expectedType)) {\r\n    const t = typeof value\r\n    valid = t === expectedType.toLowerCase()\r\n    // for primitive wrapper objects\r\n    if (!valid && t === 'object') {\r\n      valid = value instanceof type\r\n    }\r\n  } else if (expectedType === 'Object') {\r\n    valid = isObject(value)\r\n  } else if (expectedType === 'Array') {\r\n    valid = isArray(value)\r\n  } else if (expectedType === 'null') {\r\n    valid = value === null\r\n  } else {\r\n    valid = value instanceof type\r\n  }\r\n  return {\r\n    valid,\r\n    expectedType\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(\r\n  name: string,\r\n  value: unknown,\r\n  expectedTypes: string[]\r\n): string {\r\n  let message =\r\n    `Invalid prop: type check failed for prop \"${name}\".` +\r\n    ` Expected ${expectedTypes.map(capitalize).join(' | ')}`\r\n  const expectedType = expectedTypes[0]\r\n  const receivedType = toRawType(value)\r\n  const expectedValue = styleValue(value, expectedType)\r\n  const receivedValue = styleValue(value, receivedType)\r\n  // check if we need to specify expected value\r\n  if (\r\n    expectedTypes.length === 1 &&\r\n    isExplicable(expectedType) &&\r\n    !isBoolean(expectedType, receivedType)\r\n  ) {\r\n    message += ` with value ${expectedValue}`\r\n  }\r\n  message += `, got ${receivedType} `\r\n  // check if we need to specify received value\r\n  if (isExplicable(receivedType)) {\r\n    message += `with value ${receivedValue}.`\r\n  }\r\n  return message\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value: unknown, type: string): string {\r\n  if (type === 'String') {\r\n    return `\"${value}\"`\r\n  } else if (type === 'Number') {\r\n    return `${Number(value)}`\r\n  } else {\r\n    return `${value}`\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type: string): boolean {\r\n  const explicitTypes = ['string', 'number', 'boolean']\r\n  return explicitTypes.some(elem => type.toLowerCase() === elem)\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args: string[]): boolean {\r\n  return args.some(elem => elem.toLowerCase() === 'boolean')\r\n}\r\n","import { ComponentInternalInstance, currentInstance } from './component'\r\nimport {\r\n  VNode,\r\n  VNodeNormalizedChildren,\r\n  normalizeVNode,\r\n  VNodeChild,\r\n  InternalObjectKey\r\n} from './vnode'\r\nimport {\r\n  isArray,\r\n  isFunction,\r\n  EMPTY_OBJ,\r\n  ShapeFlags,\r\n  extend,\r\n  def,\r\n  SlotFlags\r\n} from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { isKeepAlive } from './components/KeepAlive'\r\nimport { ContextualRenderFn, withCtx } from './componentRenderContext'\r\nimport { isHmrUpdating } from './hmr'\r\nimport { DeprecationTypes, isCompatEnabled } from './compat/compatConfig'\r\nimport { toRaw } from '@vue/reactivity'\r\n\r\nexport type Slot = (...args: any[]) => VNode[]\r\n\r\nexport type InternalSlots = {\r\n  [name: string]: Slot | undefined\r\n}\r\n\r\nexport type Slots = Readonly<InternalSlots>\r\n\r\nexport type RawSlots = {\r\n  [name: string]: unknown\r\n  // manual render fn hint to skip forced children updates\r\n  $stable?: boolean\r\n  /**\r\n   * for tracking slot owner instance. This is attached during\r\n   * normalizeChildren when the component vnode is created.\r\n   * @internal\r\n   */\r\n  _ctx?: ComponentInternalInstance | null\r\n  /**\r\n   * indicates compiler generated slots\r\n   * we use a reserved property instead of a vnode patchFlag because the slots\r\n   * object may be directly passed down to a child component in a manual\r\n   * render function, and the optimization hint need to be on the slot object\r\n   * itself to be preserved.\r\n   * @internal\r\n   */\r\n  _?: SlotFlags\r\n}\r\n\r\nconst isInternalKey = (key: string) => key[0] === '_' || key === '$stable'\r\n\r\nconst normalizeSlotValue = (value: unknown): VNode[] =>\r\n  isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value as VNodeChild)]\r\n\r\nconst normalizeSlot = (\r\n  key: string,\r\n  rawSlot: Function,\r\n  ctx: ComponentInternalInstance | null | undefined\r\n): Slot => {\r\n  if ((rawSlot as any)._n) {\r\n    // already normalized - #5353\r\n    return rawSlot as Slot\r\n  }\r\n  const normalized = withCtx((...args: any[]) => {\r\n    if (__DEV__ && currentInstance) {\r\n      warn(\r\n        `Slot \"${key}\" invoked outside of the render function: ` +\r\n          `this will not track dependencies used in the slot. ` +\r\n          `Invoke the slot function inside the render function instead.`\r\n      )\r\n    }\r\n    return normalizeSlotValue(rawSlot(...args))\r\n  }, ctx) as Slot\r\n  // NOT a compiled slot\r\n  ;(normalized as ContextualRenderFn)._c = false\r\n  return normalized\r\n}\r\n\r\nconst normalizeObjectSlots = (\r\n  rawSlots: RawSlots,\r\n  slots: InternalSlots,\r\n  instance: ComponentInternalInstance\r\n) => {\r\n  const ctx = rawSlots._ctx\r\n  for (const key in rawSlots) {\r\n    if (isInternalKey(key)) continue\r\n    const value = rawSlots[key]\r\n    if (isFunction(value)) {\r\n      slots[key] = normalizeSlot(key, value, ctx)\r\n    } else if (value != null) {\r\n      if (\r\n        __DEV__ &&\r\n        !(\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.RENDER_FUNCTION, instance)\r\n        )\r\n      ) {\r\n        warn(\r\n          `Non-function value encountered for slot \"${key}\". ` +\r\n            `Prefer function slots for better performance.`\r\n        )\r\n      }\r\n      const normalized = normalizeSlotValue(value)\r\n      slots[key] = () => normalized\r\n    }\r\n  }\r\n}\r\n\r\nconst normalizeVNodeSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren\r\n) => {\r\n  if (\r\n    __DEV__ &&\r\n    !isKeepAlive(instance.vnode) &&\r\n    !(__COMPAT__ && isCompatEnabled(DeprecationTypes.RENDER_FUNCTION, instance))\r\n  ) {\r\n    warn(\r\n      `Non-function value encountered for default slot. ` +\r\n        `Prefer function slots for better performance.`\r\n    )\r\n  }\r\n  const normalized = normalizeSlotValue(children)\r\n  instance.slots.default = () => normalized\r\n}\r\n\r\nexport const initSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren\r\n) => {\r\n  if (instance.vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\r\n    const type = (children as RawSlots)._\r\n    if (type) {\r\n      // users can get the shallow readonly version of the slots object through `this.$slots`,\r\n      // we should avoid the proxy object polluting the slots of the internal instance\r\n      instance.slots = toRaw(children as InternalSlots)\r\n      // make compiler marker non-enumerable\r\n      def(children as InternalSlots, '_', type)\r\n    } else {\r\n      normalizeObjectSlots(\r\n        children as RawSlots,\r\n        (instance.slots = {}),\r\n        instance\r\n      )\r\n    }\r\n  } else {\r\n    instance.slots = {}\r\n    if (children) {\r\n      normalizeVNodeSlots(instance, children)\r\n    }\r\n  }\r\n  def(instance.slots, InternalObjectKey, 1)\r\n}\r\n\r\nexport const updateSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren,\r\n  optimized: boolean\r\n) => {\r\n  const { vnode, slots } = instance\r\n  let needDeletionCheck = true\r\n  let deletionComparisonTarget = EMPTY_OBJ\r\n  if (vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\r\n    const type = (children as RawSlots)._\r\n    if (type) {\r\n      // compiled slots.\r\n      if (__DEV__ && isHmrUpdating) {\r\n        // Parent was HMR updated so slot content may have changed.\r\n        // force update slots and mark instance for hmr as well\r\n        extend(slots, children as Slots)\r\n      } else if (optimized && type === SlotFlags.STABLE) {\r\n        // compiled AND stable.\r\n        // no need to update, and skip stale slots removal.\r\n        needDeletionCheck = false\r\n      } else {\r\n        // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n        // normalization.\r\n        extend(slots, children as Slots)\r\n        // #2893\r\n        // when rendering the optimized slots by manually written render function,\r\n        // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\r\n        // i.e. let the `renderSlot` create the bailed Fragment\r\n        if (!optimized && type === SlotFlags.STABLE) {\r\n          delete slots._\r\n        }\r\n      }\r\n    } else {\r\n      needDeletionCheck = !(children as RawSlots).$stable\r\n      normalizeObjectSlots(children as RawSlots, slots, instance)\r\n    }\r\n    deletionComparisonTarget = children as RawSlots\r\n  } else if (children) {\r\n    // non slot object children (direct value) passed to a component\r\n    normalizeVNodeSlots(instance, children)\r\n    deletionComparisonTarget = { default: 1 }\r\n  }\r\n\r\n  // delete stale slots\r\n  if (needDeletionCheck) {\r\n    for (const key in slots) {\r\n      if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n        delete slots[key]\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ConcreteComponent,\r\n  Data,\r\n  validateComponentName,\r\n  Component,\r\n  ComponentInternalInstance,\r\n  getExposeProxy\r\n} from './component'\r\nimport {\r\n  ComponentOptions,\r\n  MergedComponentOptions,\r\n  RuntimeCompilerOptions\r\n} from './componentOptions'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { Directive, validateDirectiveName } from './directives'\r\nimport { RootRenderFunction } from './renderer'\r\nimport { InjectionKey } from './apiInject'\r\nimport { warn } from './warning'\r\nimport { createVNode, cloneVNode, VNode } from './vnode'\r\nimport { RootHydrateFunction } from './hydration'\r\nimport { devtoolsInitApp, devtoolsUnmountApp } from './devtools'\r\nimport { isFunction, NO, isObject } from '@vue/shared'\r\nimport { version } from '.'\r\nimport { installAppCompatProperties } from './compat/global'\r\nimport { NormalizedPropsOptions } from './componentProps'\r\nimport { ObjectEmitsOptions } from './componentEmits'\r\n\r\nexport interface App<HostElement = any> {\r\n  version: string\r\n  config: AppConfig\r\n  use(plugin: Plugin, ...options: any[]): this\r\n  mixin(mixin: ComponentOptions): this\r\n  component(name: string): Component | undefined\r\n  component(name: string, component: Component): this\r\n  directive(name: string): Directive | undefined\r\n  directive(name: string, directive: Directive): this\r\n  mount(\r\n    rootContainer: HostElement | string,\r\n    isHydrate?: boolean,\r\n    isSVG?: boolean\r\n  ): ComponentPublicInstance\r\n  unmount(): void\r\n  provide<T>(key: InjectionKey<T> | string, value: T): this\r\n\r\n  // internal, but we need to expose these for the server-renderer and devtools\r\n  _uid: number\r\n  _component: ConcreteComponent\r\n  _props: Data | null\r\n  _container: HostElement | null\r\n  _context: AppContext\r\n  _instance: ComponentInternalInstance | null\r\n\r\n  /**\r\n   * v2 compat only\r\n   */\r\n  filter?(name: string): Function | undefined\r\n  filter?(name: string, filter: Function): this\r\n\r\n  /**\r\n   * @internal v3 compat only\r\n   */\r\n  _createRoot?(options: ComponentOptions): ComponentPublicInstance\r\n}\r\n\r\nexport type OptionMergeFunction = (to: unknown, from: unknown) => any\r\n\r\nexport interface AppConfig {\r\n  // @private\r\n  readonly isNativeTag?: (tag: string) => boolean\r\n\r\n  performance: boolean\r\n  optionMergeStrategies: Record<string, OptionMergeFunction>\r\n  globalProperties: Record<string, any>\r\n  errorHandler?: (\r\n    err: unknown,\r\n    instance: ComponentPublicInstance | null,\r\n    info: string\r\n  ) => void\r\n  warnHandler?: (\r\n    msg: string,\r\n    instance: ComponentPublicInstance | null,\r\n    trace: string\r\n  ) => void\r\n\r\n  /**\r\n   * Options to pass to `@vue/compiler-dom`.\r\n   * Only supported in runtime compiler build.\r\n   */\r\n  compilerOptions: RuntimeCompilerOptions\r\n\r\n  /**\r\n   * @deprecated use config.compilerOptions.isCustomElement\r\n   */\r\n  isCustomElement?: (tag: string) => boolean\r\n\r\n  /**\r\n   * Temporary config for opt-in to unwrap injected refs.\r\n   * TODO deprecate in 3.3\r\n   */\r\n  unwrapInjectedRef?: boolean\r\n}\r\n\r\nexport interface AppContext {\r\n  app: App // for devtools\r\n  config: AppConfig\r\n  mixins: ComponentOptions[]\r\n  components: Record<string, Component>\r\n  directives: Record<string, Directive>\r\n  provides: Record<string | symbol, any>\r\n\r\n  /**\r\n   * Cache for merged/normalized component options\r\n   * Each app instance has its own cache because app-level global mixins and\r\n   * optionMergeStrategies can affect merge behavior.\r\n   * @internal\r\n   */\r\n  optionsCache: WeakMap<ComponentOptions, MergedComponentOptions>\r\n  /**\r\n   * Cache for normalized props options\r\n   * @internal\r\n   */\r\n  propsCache: WeakMap<ConcreteComponent, NormalizedPropsOptions>\r\n  /**\r\n   * Cache for normalized emits options\r\n   * @internal\r\n   */\r\n  emitsCache: WeakMap<ConcreteComponent, ObjectEmitsOptions | null>\r\n  /**\r\n   * HMR only\r\n   * @internal\r\n   */\r\n  reload?: () => void\r\n  /**\r\n   * v2 compat only\r\n   * @internal\r\n   */\r\n  filters?: Record<string, Function>\r\n}\r\n\r\ntype PluginInstallFunction = (app: App, ...options: any[]) => any\r\n\r\nexport type Plugin =\r\n  | (PluginInstallFunction & { install?: PluginInstallFunction })\r\n  | {\r\n      install: PluginInstallFunction\r\n    }\r\n\r\nexport function createAppContext(): AppContext {\r\n  return {\r\n    app: null as any,\r\n    config: {\r\n      isNativeTag: NO,\r\n      performance: false,\r\n      globalProperties: {},\r\n      optionMergeStrategies: {},\r\n      errorHandler: undefined,\r\n      warnHandler: undefined,\r\n      compilerOptions: {}\r\n    },\r\n    mixins: [],\r\n    components: {},\r\n    directives: {},\r\n    provides: Object.create(null),\r\n    optionsCache: new WeakMap(),\r\n    propsCache: new WeakMap(),\r\n    emitsCache: new WeakMap()\r\n  }\r\n}\r\n\r\nexport type CreateAppFunction<HostElement> = (\r\n  rootComponent: Component,\r\n  rootProps?: Data | null\r\n) => App<HostElement>\r\n\r\nlet uid = 0\r\n\r\nexport function createAppAPI<HostElement>(\r\n  render: RootRenderFunction,\r\n  hydrate?: RootHydrateFunction\r\n): CreateAppFunction<HostElement> {\r\n  return function createApp(rootComponent, rootProps = null) {\r\n    if (!isFunction(rootComponent)) {\r\n      rootComponent = { ...rootComponent }\r\n    }\r\n\r\n    if (rootProps != null && !isObject(rootProps)) {\r\n      __DEV__ && warn(`root props passed to app.mount() must be an object.`)\r\n      rootProps = null\r\n    }\r\n\r\n    const context = createAppContext()\r\n    const installedPlugins = new Set()\r\n\r\n    let isMounted = false\r\n\r\n    const app: App = (context.app = {\r\n      _uid: uid++,\r\n      _component: rootComponent as ConcreteComponent,\r\n      _props: rootProps,\r\n      _container: null,\r\n      _context: context,\r\n      _instance: null,\r\n\r\n      version,\r\n\r\n      get config() {\r\n        return context.config\r\n      },\r\n\r\n      set config(v) {\r\n        if (__DEV__) {\r\n          warn(\r\n            `app.config cannot be replaced. Modify individual options instead.`\r\n          )\r\n        }\r\n      },\r\n\r\n      use(plugin: Plugin, ...options: any[]) {\r\n        if (installedPlugins.has(plugin)) {\r\n          __DEV__ && warn(`Plugin has already been applied to target app.`)\r\n        } else if (plugin && isFunction(plugin.install)) {\r\n          installedPlugins.add(plugin)\r\n          plugin.install(app, ...options)\r\n        } else if (isFunction(plugin)) {\r\n          installedPlugins.add(plugin)\r\n          plugin(app, ...options)\r\n        } else if (__DEV__) {\r\n          warn(\r\n            `A plugin must either be a function or an object with an \"install\" ` +\r\n              `function.`\r\n          )\r\n        }\r\n        return app\r\n      },\r\n\r\n      mixin(mixin: ComponentOptions) {\r\n        if (__FEATURE_OPTIONS_API__) {\r\n          if (!context.mixins.includes(mixin)) {\r\n            context.mixins.push(mixin)\r\n          } else if (__DEV__) {\r\n            warn(\r\n              'Mixin has already been applied to target app' +\r\n                (mixin.name ? `: ${mixin.name}` : '')\r\n            )\r\n          }\r\n        } else if (__DEV__) {\r\n          warn('Mixins are only available in builds supporting Options API')\r\n        }\r\n        return app\r\n      },\r\n\r\n      component(name: string, component?: Component): any {\r\n        if (__DEV__) {\r\n          validateComponentName(name, context.config)\r\n        }\r\n        if (!component) {\r\n          return context.components[name]\r\n        }\r\n        if (__DEV__ && context.components[name]) {\r\n          warn(`Component \"${name}\" has already been registered in target app.`)\r\n        }\r\n        context.components[name] = component\r\n        return app\r\n      },\r\n\r\n      directive(name: string, directive?: Directive) {\r\n        if (__DEV__) {\r\n          validateDirectiveName(name)\r\n        }\r\n\r\n        if (!directive) {\r\n          return context.directives[name] as any\r\n        }\r\n        if (__DEV__ && context.directives[name]) {\r\n          warn(`Directive \"${name}\" has already been registered in target app.`)\r\n        }\r\n        context.directives[name] = directive\r\n        return app\r\n      },\r\n\r\n      mount(\r\n        rootContainer: HostElement,\r\n        isHydrate?: boolean,\r\n        isSVG?: boolean\r\n      ): any {\r\n        if (!isMounted) {\r\n          // #5571\r\n          if (__DEV__ && (rootContainer as any).__vue_app__) {\r\n            warn(\r\n              `There is already an app instance mounted on the host container.\\n` +\r\n                ` If you want to mount another app on the same host container,` +\r\n                ` you need to unmount the previous app by calling \\`app.unmount()\\` first.`\r\n            )\r\n          }\r\n          const vnode = createVNode(\r\n            rootComponent as ConcreteComponent,\r\n            rootProps\r\n          )\r\n          // store app context on the root VNode.\r\n          // this will be set on the root instance on initial mount.\r\n          vnode.appContext = context\r\n\r\n          // HMR root reload\r\n          if (__DEV__) {\r\n            context.reload = () => {\r\n              render(cloneVNode(vnode), rootContainer, isSVG)\r\n            }\r\n          }\r\n\r\n          if (isHydrate && hydrate) {\r\n            hydrate(vnode as VNode<Node, Element>, rootContainer as any)\r\n          } else {\r\n            render(vnode, rootContainer, isSVG)\r\n          }\r\n          isMounted = true\r\n          app._container = rootContainer\r\n          // for devtools and telemetry\r\n          ;(rootContainer as any).__vue_app__ = app\r\n\r\n          if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n            app._instance = vnode.component\r\n            devtoolsInitApp(app, version)\r\n          }\r\n\r\n          return getExposeProxy(vnode.component!) || vnode.component!.proxy\r\n        } else if (__DEV__) {\r\n          warn(\r\n            `App has already been mounted.\\n` +\r\n              `If you want to remount the same app, move your app creation logic ` +\r\n              `into a factory function and create fresh app instances for each ` +\r\n              `mount - e.g. \\`const createMyApp = () => createApp(App)\\``\r\n          )\r\n        }\r\n      },\r\n\r\n      unmount() {\r\n        if (isMounted) {\r\n          render(null, app._container)\r\n          if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n            app._instance = null\r\n            devtoolsUnmountApp(app)\r\n          }\r\n          delete app._container.__vue_app__\r\n        } else if (__DEV__) {\r\n          warn(`Cannot unmount an app that is not mounted.`)\r\n        }\r\n      },\r\n\r\n      provide(key, value) {\r\n        if (__DEV__ && (key as string | symbol) in context.provides) {\r\n          warn(\r\n            `App already provides property with key \"${String(key)}\". ` +\r\n              `It will be overwritten with the new value.`\r\n          )\r\n        }\r\n\r\n        context.provides[key as string | symbol] = value\r\n\r\n        return app\r\n      }\r\n    })\r\n\r\n    if (__COMPAT__) {\r\n      installAppCompatProperties(app, context, render)\r\n    }\r\n\r\n    return app\r\n  }\r\n}\r\n","import { SuspenseBoundary } from './components/Suspense'\r\nimport { VNode, VNodeNormalizedRef, VNodeNormalizedRefAtom } from './vnode'\r\nimport {\r\n  EMPTY_OBJ,\r\n  hasOwn,\r\n  isArray,\r\n  isFunction,\r\n  isString,\r\n  remove,\r\n  ShapeFlags\r\n} from '@vue/shared'\r\nimport { isAsyncWrapper } from './apiAsyncComponent'\r\nimport { getExposeProxy } from './component'\r\nimport { warn } from './warning'\r\nimport { isRef } from '@vue/reactivity'\r\nimport { callWithErrorHandling, ErrorCodes } from './errorHandling'\r\nimport { SchedulerJob } from './scheduler'\r\nimport { queuePostRenderEffect } from './renderer'\r\n\r\n/**\r\n * Function for handling a template ref\r\n */\r\nexport function setRef(\r\n  rawRef: VNodeNormalizedRef,\r\n  oldRawRef: VNodeNormalizedRef | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  vnode: VNode,\r\n  isUnmount = false\r\n) {\r\n  if (isArray(rawRef)) {\r\n    rawRef.forEach((r, i) =>\r\n      setRef(\r\n        r,\r\n        oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef),\r\n        parentSuspense,\r\n        vnode,\r\n        isUnmount\r\n      )\r\n    )\r\n    return\r\n  }\r\n\r\n  if (isAsyncWrapper(vnode) && !isUnmount) {\r\n    // when mounting async components, nothing needs to be done,\r\n    // because the template ref is forwarded to inner component\r\n    return\r\n  }\r\n\r\n  const refValue =\r\n    vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT\r\n      ? getExposeProxy(vnode.component!) || vnode.component!.proxy\r\n      : vnode.el\r\n  const value = isUnmount ? null : refValue\r\n\r\n  const { i: owner, r: ref } = rawRef\r\n  if (__DEV__ && !owner) {\r\n    warn(\r\n      `Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n        `A vnode with ref must be created inside the render function.`\r\n    )\r\n    return\r\n  }\r\n  const oldRef = oldRawRef && (oldRawRef as VNodeNormalizedRefAtom).r\r\n  const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs\r\n  const setupState = owner.setupState\r\n\r\n  // dynamic ref changed. unset old ref\r\n  if (oldRef != null && oldRef !== ref) {\r\n    if (isString(oldRef)) {\r\n      refs[oldRef] = null\r\n      if (hasOwn(setupState, oldRef)) {\r\n        setupState[oldRef] = null\r\n      }\r\n    } else if (isRef(oldRef)) {\r\n      oldRef.value = null\r\n    }\r\n  }\r\n\r\n  if (isFunction(ref)) {\r\n    callWithErrorHandling(ref, owner, ErrorCodes.FUNCTION_REF, [value, refs])\r\n  } else {\r\n    const _isString = isString(ref)\r\n    const _isRef = isRef(ref)\r\n    if (_isString || _isRef) {\r\n      const doSet = () => {\r\n        if (rawRef.f) {\r\n          const existing = _isString ? refs[ref] : ref.value\r\n          if (isUnmount) {\r\n            isArray(existing) && remove(existing, refValue)\r\n          } else {\r\n            if (!isArray(existing)) {\r\n              if (_isString) {\r\n                refs[ref] = [refValue]\r\n                if (hasOwn(setupState, ref)) {\r\n                  setupState[ref] = refs[ref]\r\n                }\r\n              } else {\r\n                ref.value = [refValue]\r\n                if (rawRef.k) refs[rawRef.k] = ref.value\r\n              }\r\n            } else if (!existing.includes(refValue)) {\r\n              existing.push(refValue)\r\n            }\r\n          }\r\n        } else if (_isString) {\r\n          refs[ref] = value\r\n          if (hasOwn(setupState, ref)) {\r\n            setupState[ref] = value\r\n          }\r\n        } else if (_isRef) {\r\n          ref.value = value\r\n          if (rawRef.k) refs[rawRef.k] = value\r\n        } else if (__DEV__) {\r\n          warn('Invalid template ref type:', ref, `(${typeof ref})`)\r\n        }\r\n      }\r\n      if (value) {\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        ;(doSet as SchedulerJob).id = -1\r\n        queuePostRenderEffect(doSet, parentSuspense)\r\n      } else {\r\n        doSet()\r\n      }\r\n    } else if (__DEV__) {\r\n      warn('Invalid template ref type:', ref, `(${typeof ref})`)\r\n    }\r\n  }\r\n}\r\n","import {\r\n  VNode,\r\n  normalizeVNode,\r\n  Text,\r\n  Comment,\r\n  Static,\r\n  Fragment,\r\n  VNodeHook,\r\n  createVNode,\r\n  createTextVNode,\r\n  invokeVNodeHook\r\n} from './vnode'\r\nimport { flushPostFlushCbs } from './scheduler'\r\nimport { ComponentInternalInstance } from './component'\r\nimport { invokeDirectiveHook } from './directives'\r\nimport { warn } from './warning'\r\nimport { PatchFlags, ShapeFlags, isReservedProp, isOn } from '@vue/shared'\r\nimport { RendererInternals } from './renderer'\r\nimport { setRef } from './rendererTemplateRef'\r\nimport {\r\n  SuspenseImpl,\r\n  SuspenseBoundary,\r\n  queueEffectWithSuspense\r\n} from './components/Suspense'\r\nimport { TeleportImpl, TeleportVNode } from './components/Teleport'\r\nimport { isAsyncWrapper } from './apiAsyncComponent'\r\n\r\nexport type RootHydrateFunction = (\r\n  vnode: VNode<Node, Element>,\r\n  container: (Element | ShadowRoot) & { _vnode?: VNode }\r\n) => void\r\n\r\nconst enum DOMNodeTypes {\r\n  ELEMENT = 1,\r\n  TEXT = 3,\r\n  COMMENT = 8\r\n}\r\n\r\nlet hasMismatch = false\r\n\r\nconst isSVGContainer = (container: Element) =>\r\n  /svg/.test(container.namespaceURI!) && container.tagName !== 'foreignObject'\r\n\r\nconst isComment = (node: Node): node is Comment =>\r\n  node.nodeType === DOMNodeTypes.COMMENT\r\n\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nexport function createHydrationFunctions(\r\n  rendererInternals: RendererInternals<Node, Element>\r\n) {\r\n  const {\r\n    mt: mountComponent,\r\n    p: patch,\r\n    o: {\r\n      patchProp,\r\n      createText,\r\n      nextSibling,\r\n      parentNode,\r\n      remove,\r\n      insert,\r\n      createComment\r\n    }\r\n  } = rendererInternals\r\n\r\n  const hydrate: RootHydrateFunction = (vnode, container) => {\r\n    if (!container.hasChildNodes()) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Attempting to hydrate existing markup but container is empty. ` +\r\n            `Performing full mount instead.`\r\n        )\r\n      patch(null, vnode, container)\r\n      flushPostFlushCbs()\r\n      container._vnode = vnode\r\n      return\r\n    }\r\n    hasMismatch = false\r\n    hydrateNode(container.firstChild!, vnode, null, null, null)\r\n    flushPostFlushCbs()\r\n    container._vnode = vnode\r\n    if (hasMismatch && !__TEST__) {\r\n      // this error should show up in production\r\n      console.error(`Hydration completed but contains mismatches.`)\r\n    }\r\n  }\r\n\r\n  const hydrateNode = (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized = false\r\n  ): Node | null => {\r\n    const isFragmentStart = isComment(node) && node.data === '['\r\n    const onMismatch = () =>\r\n      handleMismatch(\r\n        node,\r\n        vnode,\r\n        parentComponent,\r\n        parentSuspense,\r\n        slotScopeIds,\r\n        isFragmentStart\r\n      )\r\n\r\n    const { type, ref, shapeFlag, patchFlag } = vnode\r\n    const domType = node.nodeType\r\n    vnode.el = node\r\n\r\n    if (patchFlag === PatchFlags.BAIL) {\r\n      optimized = false\r\n      vnode.dynamicChildren = null\r\n    }\r\n\r\n    let nextNode: Node | null = null\r\n    switch (type) {\r\n      case Text:\r\n        if (domType !== DOMNodeTypes.TEXT) {\r\n          // #5728 empty text node inside a slot can cause hydration failure\r\n          // because the server rendered HTML won't contain a text node\r\n          if (vnode.children === '') {\r\n            insert((vnode.el = createText('')), parentNode(node)!, node)\r\n            nextNode = node\r\n          } else {\r\n            nextNode = onMismatch()\r\n          }\r\n        } else {\r\n          if ((node as Text).data !== vnode.children) {\r\n            hasMismatch = true\r\n            __DEV__ &&\r\n              warn(\r\n                `Hydration text mismatch:` +\r\n                  `\\n- Client: ${JSON.stringify((node as Text).data)}` +\r\n                  `\\n- Server: ${JSON.stringify(vnode.children)}`\r\n              )\r\n            ;(node as Text).data = vnode.children as string\r\n          }\r\n          nextNode = nextSibling(node)\r\n        }\r\n        break\r\n      case Comment:\r\n        if (domType !== DOMNodeTypes.COMMENT || isFragmentStart) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          nextNode = nextSibling(node)\r\n        }\r\n        break\r\n      case Static:\r\n        if (domType !== DOMNodeTypes.ELEMENT && domType !== DOMNodeTypes.TEXT) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          // determine anchor, adopt content\r\n          nextNode = node\r\n          // if the static vnode has its content stripped during build,\r\n          // adopt it from the server-rendered HTML.\r\n          const needToAdoptContent = !(vnode.children as string).length\r\n          for (let i = 0; i < vnode.staticCount!; i++) {\r\n            if (needToAdoptContent)\r\n              vnode.children +=\r\n                nextNode.nodeType === DOMNodeTypes.ELEMENT\r\n                  ? (nextNode as Element).outerHTML\r\n                  : (nextNode as Text).data\r\n            if (i === vnode.staticCount! - 1) {\r\n              vnode.anchor = nextNode\r\n            }\r\n            nextNode = nextSibling(nextNode)!\r\n          }\r\n          return nextNode\r\n        }\r\n        break\r\n      case Fragment:\r\n        if (!isFragmentStart) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          nextNode = hydrateFragment(\r\n            node as Comment,\r\n            vnode,\r\n            parentComponent,\r\n            parentSuspense,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        }\r\n        break\r\n      default:\r\n        if (shapeFlag & ShapeFlags.ELEMENT) {\r\n          if (\r\n            domType !== DOMNodeTypes.ELEMENT ||\r\n            (vnode.type as string).toLowerCase() !==\r\n              (node as Element).tagName.toLowerCase()\r\n          ) {\r\n            nextNode = onMismatch()\r\n          } else {\r\n            nextNode = hydrateElement(\r\n              node as Element,\r\n              vnode,\r\n              parentComponent,\r\n              parentSuspense,\r\n              slotScopeIds,\r\n              optimized\r\n            )\r\n          }\r\n        } else if (shapeFlag & ShapeFlags.COMPONENT) {\r\n          // when setting up the render effect, if the initial vnode already\r\n          // has .el set, the component will perform hydration instead of mount\r\n          // on its sub-tree.\r\n          vnode.slotScopeIds = slotScopeIds\r\n          const container = parentNode(node)!\r\n          mountComponent(\r\n            vnode,\r\n            container,\r\n            null,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVGContainer(container),\r\n            optimized\r\n          )\r\n\r\n          // component may be async, so in the case of fragments we cannot rely\r\n          // on component's rendered output to determine the end of the fragment\r\n          // instead, we do a lookahead to find the end anchor node.\r\n          nextNode = isFragmentStart\r\n            ? locateClosingAsyncAnchor(node)\r\n            : nextSibling(node)\r\n\r\n          // #4293 teleport as component root\r\n          if (\r\n            nextNode &&\r\n            isComment(nextNode) &&\r\n            nextNode.data === 'teleport end'\r\n          ) {\r\n            nextNode = nextSibling(nextNode)\r\n          }\r\n\r\n          // #3787\r\n          // if component is async, it may get moved / unmounted before its\r\n          // inner component is loaded, so we need to give it a placeholder\r\n          // vnode that matches its adopted DOM.\r\n          if (isAsyncWrapper(vnode)) {\r\n            let subTree\r\n            if (isFragmentStart) {\r\n              subTree = createVNode(Fragment)\r\n              subTree.anchor = nextNode\r\n                ? nextNode.previousSibling\r\n                : container.lastChild\r\n            } else {\r\n              subTree =\r\n                node.nodeType === 3 ? createTextVNode('') : createVNode('div')\r\n            }\r\n            subTree.el = node\r\n            vnode.component!.subTree = subTree\r\n          }\r\n        } else if (shapeFlag & ShapeFlags.TELEPORT) {\r\n          if (domType !== DOMNodeTypes.COMMENT) {\r\n            nextNode = onMismatch()\r\n          } else {\r\n            nextNode = (vnode.type as typeof TeleportImpl).hydrate(\r\n              node,\r\n              vnode as TeleportVNode,\r\n              parentComponent,\r\n              parentSuspense,\r\n              slotScopeIds,\r\n              optimized,\r\n              rendererInternals,\r\n              hydrateChildren\r\n            )\r\n          }\r\n        } else if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n          nextNode = (vnode.type as typeof SuspenseImpl).hydrate(\r\n            node,\r\n            vnode,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVGContainer(parentNode(node)!),\r\n            slotScopeIds,\r\n            optimized,\r\n            rendererInternals,\r\n            hydrateNode\r\n          )\r\n        } else if (__DEV__) {\r\n          warn('Invalid HostVNode type:', type, `(${typeof type})`)\r\n        }\r\n    }\r\n\r\n    if (ref != null) {\r\n      setRef(ref, null, parentSuspense, vnode)\r\n    }\r\n\r\n    return nextNode\r\n  }\r\n\r\n  const hydrateElement = (\r\n    el: Element,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    optimized = optimized || !!vnode.dynamicChildren\r\n    const { type, props, patchFlag, shapeFlag, dirs } = vnode\r\n    // #4006 for form elements with non-string v-model value bindings\r\n    // e.g. <option :value=\"obj\">, <input type=\"checkbox\" :true-value=\"1\">\r\n    const forcePatchValue = (type === 'input' && dirs) || type === 'option'\r\n    // skip props & children if this is hoisted static nodes\r\n    // #5405 in dev, always hydrate children for HMR\r\n    if (__DEV__ || forcePatchValue || patchFlag !== PatchFlags.HOISTED) {\r\n      if (dirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'created')\r\n      }\r\n      // props\r\n      if (props) {\r\n        if (\r\n          forcePatchValue ||\r\n          !optimized ||\r\n          patchFlag & (PatchFlags.FULL_PROPS | PatchFlags.HYDRATE_EVENTS)\r\n        ) {\r\n          for (const key in props) {\r\n            if (\r\n              (forcePatchValue && key.endsWith('value')) ||\r\n              (isOn(key) && !isReservedProp(key))\r\n            ) {\r\n              patchProp(\r\n                el,\r\n                key,\r\n                null,\r\n                props[key],\r\n                false,\r\n                undefined,\r\n                parentComponent\r\n              )\r\n            }\r\n          }\r\n        } else if (props.onClick) {\r\n          // Fast path for click listeners (which is most often) to avoid\r\n          // iterating through props.\r\n          patchProp(\r\n            el,\r\n            'onClick',\r\n            null,\r\n            props.onClick,\r\n            false,\r\n            undefined,\r\n            parentComponent\r\n          )\r\n        }\r\n      }\r\n      // vnode / directive hooks\r\n      let vnodeHooks: VNodeHook | null | undefined\r\n      if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n        invokeVNodeHook(vnodeHooks, parentComponent, vnode)\r\n      }\r\n      if (dirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount')\r\n      }\r\n      if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n        queueEffectWithSuspense(() => {\r\n          vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode)\r\n          dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted')\r\n        }, parentSuspense)\r\n      }\r\n      // children\r\n      if (\r\n        shapeFlag & ShapeFlags.ARRAY_CHILDREN &&\r\n        // skip if element has innerHTML / textContent\r\n        !(props && (props.innerHTML || props.textContent))\r\n      ) {\r\n        let next = hydrateChildren(\r\n          el.firstChild,\r\n          vnode,\r\n          el,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        let hasWarned = false\r\n        while (next) {\r\n          hasMismatch = true\r\n          if (__DEV__ && !hasWarned) {\r\n            warn(\r\n              `Hydration children mismatch in <${vnode.type as string}>: ` +\r\n                `server rendered element contains more child nodes than client vdom.`\r\n            )\r\n            hasWarned = true\r\n          }\r\n          // The SSRed DOM contains more nodes than it should. Remove them.\r\n          const cur = next\r\n          next = next.nextSibling\r\n          remove(cur)\r\n        }\r\n      } else if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n        if (el.textContent !== vnode.children) {\r\n          hasMismatch = true\r\n          __DEV__ &&\r\n            warn(\r\n              `Hydration text content mismatch in <${\r\n                vnode.type as string\r\n              }>:\\n` +\r\n                `- Client: ${el.textContent}\\n` +\r\n                `- Server: ${vnode.children as string}`\r\n            )\r\n          el.textContent = vnode.children as string\r\n        }\r\n      }\r\n    }\r\n    return el.nextSibling\r\n  }\r\n\r\n  const hydrateChildren = (\r\n    node: Node | null,\r\n    parentVNode: VNode,\r\n    container: Element,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ): Node | null => {\r\n    optimized = optimized || !!parentVNode.dynamicChildren\r\n    const children = parentVNode.children as VNode[]\r\n    const l = children.length\r\n    let hasWarned = false\r\n    for (let i = 0; i < l; i++) {\r\n      const vnode = optimized\r\n        ? children[i]\r\n        : (children[i] = normalizeVNode(children[i]))\r\n      if (node) {\r\n        node = hydrateNode(\r\n          node,\r\n          vnode,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      } else if (vnode.type === Text && !vnode.children) {\r\n        continue\r\n      } else {\r\n        hasMismatch = true\r\n        if (__DEV__ && !hasWarned) {\r\n          warn(\r\n            `Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n              `server rendered element contains fewer child nodes than client vdom.`\r\n          )\r\n          hasWarned = true\r\n        }\r\n        // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n        patch(\r\n          null,\r\n          vnode,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVGContainer(container),\r\n          slotScopeIds\r\n        )\r\n      }\r\n    }\r\n    return node\r\n  }\r\n\r\n  const hydrateFragment = (\r\n    node: Comment,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    const { slotScopeIds: fragmentSlotScopeIds } = vnode\r\n    if (fragmentSlotScopeIds) {\r\n      slotScopeIds = slotScopeIds\r\n        ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n        : fragmentSlotScopeIds\r\n    }\r\n\r\n    const container = parentNode(node)!\r\n    const next = hydrateChildren(\r\n      nextSibling(node)!,\r\n      vnode,\r\n      container,\r\n      parentComponent,\r\n      parentSuspense,\r\n      slotScopeIds,\r\n      optimized\r\n    )\r\n    if (next && isComment(next) && next.data === ']') {\r\n      return nextSibling((vnode.anchor = next))\r\n    } else {\r\n      // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n      // back. This should have led to node/children mismatch warnings.\r\n      hasMismatch = true\r\n      // since the anchor is missing, we need to create one and insert it\r\n      insert((vnode.anchor = createComment(`]`)), container, next)\r\n      return next\r\n    }\r\n  }\r\n\r\n  const handleMismatch = (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    isFragment: boolean\r\n  ): Node | null => {\r\n    hasMismatch = true\r\n    __DEV__ &&\r\n      warn(\r\n        `Hydration node mismatch:\\n- Client vnode:`,\r\n        vnode.type,\r\n        `\\n- Server rendered DOM:`,\r\n        node,\r\n        node.nodeType === DOMNodeTypes.TEXT\r\n          ? `(text)`\r\n          : isComment(node) && node.data === '['\r\n          ? `(start of fragment)`\r\n          : ``\r\n      )\r\n    vnode.el = null\r\n\r\n    if (isFragment) {\r\n      // remove excessive fragment nodes\r\n      const end = locateClosingAsyncAnchor(node)\r\n      while (true) {\r\n        const next = nextSibling(node)\r\n        if (next && next !== end) {\r\n          remove(next)\r\n        } else {\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    const next = nextSibling(node)\r\n    const container = parentNode(node)!\r\n    remove(node)\r\n\r\n    patch(\r\n      null,\r\n      vnode,\r\n      container,\r\n      next,\r\n      parentComponent,\r\n      parentSuspense,\r\n      isSVGContainer(container),\r\n      slotScopeIds\r\n    )\r\n    return next\r\n  }\r\n\r\n  const locateClosingAsyncAnchor = (node: Node | null): Node | null => {\r\n    let match = 0\r\n    while (node) {\r\n      node = nextSibling(node)\r\n      if (node && isComment(node)) {\r\n        if (node.data === '[') match++\r\n        if (node.data === ']') {\r\n          if (match === 0) {\r\n            return nextSibling(node)\r\n          } else {\r\n            match--\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return node\r\n  }\r\n\r\n  return [hydrate, hydrateNode] as const\r\n}\r\n","import {\r\n  Text,\r\n  Fragment,\r\n  Comment,\r\n  cloneIfMounted,\r\n  normalizeVNode,\r\n  VNode,\r\n  VNodeArrayChildren,\r\n  createVNode,\r\n  isSameVNodeType,\r\n  Static,\r\n  VNodeHook,\r\n  VNodeProps,\r\n  invokeVNodeHook\r\n} from './vnode'\r\nimport {\r\n  ComponentInternalInstance,\r\n  ComponentOptions,\r\n  createComponentInstance,\r\n  Data,\r\n  setupComponent\r\n} from './component'\r\nimport {\r\n  filterSingleRoot,\r\n  renderComponentRoot,\r\n  shouldUpdateComponent,\r\n  updateHOCHostEl\r\n} from './componentRenderUtils'\r\nimport {\r\n  EMPTY_OBJ,\r\n  EMPTY_ARR,\r\n  isReservedProp,\r\n  PatchFlags,\r\n  ShapeFlags,\r\n  NOOP,\r\n  invokeArrayFns,\r\n  isArray,\r\n  getGlobalThis\r\n} from '@vue/shared'\r\nimport {\r\n  queueJob,\r\n  queuePostFlushCb,\r\n  flushPostFlushCbs,\r\n  invalidateJob,\r\n  flushPreFlushCbs,\r\n  SchedulerJob\r\n} from './scheduler'\r\nimport { pauseTracking, resetTracking, ReactiveEffect } from '@vue/reactivity'\r\nimport { updateProps } from './componentProps'\r\nimport { updateSlots } from './componentSlots'\r\nimport { pushWarningContext, popWarningContext, warn } from './warning'\r\nimport { createAppAPI, CreateAppFunction } from './apiCreateApp'\r\nimport { setRef } from './rendererTemplateRef'\r\nimport {\r\n  SuspenseBoundary,\r\n  queueEffectWithSuspense,\r\n  SuspenseImpl\r\n} from './components/Suspense'\r\nimport { TeleportImpl, TeleportVNode } from './components/Teleport'\r\nimport { isKeepAlive, KeepAliveContext } from './components/KeepAlive'\r\nimport { registerHMR, unregisterHMR, isHmrUpdating } from './hmr'\r\nimport { createHydrationFunctions, RootHydrateFunction } from './hydration'\r\nimport { invokeDirectiveHook } from './directives'\r\nimport { startMeasure, endMeasure } from './profiling'\r\nimport {\r\n  devtoolsComponentAdded,\r\n  devtoolsComponentRemoved,\r\n  devtoolsComponentUpdated,\r\n  setDevtoolsHook\r\n} from './devtools'\r\nimport { initFeatureFlags } from './featureFlags'\r\nimport { isAsyncWrapper } from './apiAsyncComponent'\r\nimport { isCompatEnabled } from './compat/compatConfig'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\n\r\nexport interface Renderer<HostElement = RendererElement> {\r\n  render: RootRenderFunction<HostElement>\r\n  createApp: CreateAppFunction<HostElement>\r\n}\r\n\r\nexport interface HydrationRenderer extends Renderer<Element | ShadowRoot> {\r\n  hydrate: RootHydrateFunction\r\n}\r\n\r\nexport type RootRenderFunction<HostElement = RendererElement> = (\r\n  vnode: VNode | null,\r\n  container: HostElement,\r\n  isSVG?: boolean\r\n) => void\r\n\r\nexport interface RendererOptions<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n> {\r\n  patchProp(\r\n    el: HostElement,\r\n    key: string,\r\n    prevValue: any,\r\n    nextValue: any,\r\n    isSVG?: boolean,\r\n    prevChildren?: VNode<HostNode, HostElement>[],\r\n    parentComponent?: ComponentInternalInstance | null,\r\n    parentSuspense?: SuspenseBoundary | null,\r\n    unmountChildren?: UnmountChildrenFn\r\n  ): void\r\n  insert(el: HostNode, parent: HostElement, anchor?: HostNode | null): void\r\n  remove(el: HostNode): void\r\n  createElement(\r\n    type: string,\r\n    isSVG?: boolean,\r\n    isCustomizedBuiltIn?: string,\r\n    vnodeProps?: (VNodeProps & { [key: string]: any }) | null\r\n  ): HostElement\r\n  createText(text: string): HostNode\r\n  createComment(text: string): HostNode\r\n  setText(node: HostNode, text: string): void\r\n  setElementText(node: HostElement, text: string): void\r\n  parentNode(node: HostNode): HostElement | null\r\n  nextSibling(node: HostNode): HostNode | null\r\n  querySelector?(selector: string): HostElement | null\r\n  setScopeId?(el: HostElement, id: string): void\r\n  cloneNode?(node: HostNode): HostNode\r\n  insertStaticContent?(\r\n    content: string,\r\n    parent: HostElement,\r\n    anchor: HostNode | null,\r\n    isSVG: boolean,\r\n    start?: HostNode | null,\r\n    end?: HostNode | null\r\n  ): [HostNode, HostNode]\r\n}\r\n\r\n// Renderer Node can technically be any object in the context of core renderer\r\n// logic - they are never directly operated on and always passed to the node op\r\n// functions provided via options, so the internal constraint is really just\r\n// a generic object.\r\nexport interface RendererNode {\r\n  [key: string]: any\r\n}\r\n\r\nexport interface RendererElement extends RendererNode {}\r\n\r\n// An object exposing the internals of a renderer, passed to tree-shakeable\r\n// features so that they can be decoupled from this file. Keys are shortened\r\n// to optimize bundle size.\r\nexport interface RendererInternals<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n> {\r\n  p: PatchFn\r\n  um: UnmountFn\r\n  r: RemoveFn\r\n  m: MoveFn\r\n  mt: MountComponentFn\r\n  mc: MountChildrenFn\r\n  pc: PatchChildrenFn\r\n  pbc: PatchBlockChildrenFn\r\n  n: NextFn\r\n  o: RendererOptions<HostNode, HostElement>\r\n}\r\n\r\n// These functions are created inside a closure and therefore their types cannot\r\n// be directly exported. In order to avoid maintaining function signatures in\r\n// two places, we declare them once here and use them inside the closure.\r\ntype PatchFn = (\r\n  n1: VNode | null, // null means this is a mount\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor?: RendererNode | null,\r\n  parentComponent?: ComponentInternalInstance | null,\r\n  parentSuspense?: SuspenseBoundary | null,\r\n  isSVG?: boolean,\r\n  slotScopeIds?: string[] | null,\r\n  optimized?: boolean\r\n) => void\r\n\r\ntype MountChildrenFn = (\r\n  children: VNodeArrayChildren,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  start?: number\r\n) => void\r\n\r\ntype PatchChildrenFn = (\r\n  n1: VNode | null,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean\r\n) => void\r\n\r\ntype PatchBlockChildrenFn = (\r\n  oldChildren: VNode[],\r\n  newChildren: VNode[],\r\n  fallbackContainer: RendererElement,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  slotScopeIds: string[] | null\r\n) => void\r\n\r\ntype MoveFn = (\r\n  vnode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  type: MoveType,\r\n  parentSuspense?: SuspenseBoundary | null\r\n) => void\r\n\r\ntype NextFn = (vnode: VNode) => RendererNode | null\r\n\r\ntype UnmountFn = (\r\n  vnode: VNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  doRemove?: boolean,\r\n  optimized?: boolean\r\n) => void\r\n\r\ntype RemoveFn = (vnode: VNode) => void\r\n\r\ntype UnmountChildrenFn = (\r\n  children: VNode[],\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  doRemove?: boolean,\r\n  optimized?: boolean,\r\n  start?: number\r\n) => void\r\n\r\nexport type MountComponentFn = (\r\n  initialVNode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  optimized: boolean\r\n) => void\r\n\r\ntype ProcessTextOrCommentFn = (\r\n  n1: VNode | null,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null\r\n) => void\r\n\r\nexport type SetupRenderEffectFn = (\r\n  instance: ComponentInternalInstance,\r\n  initialVNode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  isSVG: boolean,\r\n  optimized: boolean\r\n) => void\r\n\r\nexport const enum MoveType {\r\n  ENTER,\r\n  LEAVE,\r\n  REORDER\r\n}\r\n\r\nexport const queuePostRenderEffect = __FEATURE_SUSPENSE__\r\n  ? queueEffectWithSuspense\r\n  : queuePostFlushCb\r\n\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nexport function createRenderer<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n>(options: RendererOptions<HostNode, HostElement>) {\r\n  return baseCreateRenderer<HostNode, HostElement>(options)\r\n}\r\n\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nexport function createHydrationRenderer(\r\n  options: RendererOptions<Node, Element>\r\n) {\r\n  return baseCreateRenderer(options, createHydrationFunctions)\r\n}\r\n\r\n// overload 1: no hydration\r\nfunction baseCreateRenderer<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement\r\n>(options: RendererOptions<HostNode, HostElement>): Renderer<HostElement>\r\n\r\n// overload 2: with hydration\r\nfunction baseCreateRenderer(\r\n  options: RendererOptions<Node, Element>,\r\n  createHydrationFns: typeof createHydrationFunctions\r\n): HydrationRenderer\r\n\r\n// implementation\r\nfunction baseCreateRenderer(\r\n  options: RendererOptions,\r\n  createHydrationFns?: typeof createHydrationFunctions\r\n): any {\r\n  // compile-time feature flags check\r\n  if (__ESM_BUNDLER__ && !__TEST__) {\r\n    initFeatureFlags()\r\n  }\r\n\r\n  const target = getGlobalThis()\r\n  target.__VUE__ = true\r\n  if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n    setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target)\r\n  }\r\n\r\n  const {\r\n    insert: hostInsert,\r\n    remove: hostRemove,\r\n    patchProp: hostPatchProp,\r\n    createElement: hostCreateElement,\r\n    createText: hostCreateText,\r\n    createComment: hostCreateComment,\r\n    setText: hostSetText,\r\n    setElementText: hostSetElementText,\r\n    parentNode: hostParentNode,\r\n    nextSibling: hostNextSibling,\r\n    setScopeId: hostSetScopeId = NOOP,\r\n    cloneNode: hostCloneNode,\r\n    insertStaticContent: hostInsertStaticContent\r\n  } = options\r\n\r\n  // Note: functions inside this closure should use `const xxx = () => {}`\r\n  // style in order to prevent being inlined by minifiers.\r\n  const patch: PatchFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor = null,\r\n    parentComponent = null,\r\n    parentSuspense = null,\r\n    isSVG = false,\r\n    slotScopeIds = null,\r\n    optimized = __DEV__ && isHmrUpdating ? false : !!n2.dynamicChildren\r\n  ) => {\r\n    if (n1 === n2) {\r\n      return\r\n    }\r\n\r\n    // patching & not same type, unmount old tree\r\n    if (n1 && !isSameVNodeType(n1, n2)) {\r\n      anchor = getNextHostNode(n1)\r\n      unmount(n1, parentComponent, parentSuspense, true)\r\n      n1 = null\r\n    }\r\n\r\n    if (n2.patchFlag === PatchFlags.BAIL) {\r\n      optimized = false\r\n      n2.dynamicChildren = null\r\n    }\r\n\r\n    const { type, ref, shapeFlag } = n2\r\n    switch (type) {\r\n      case Text:\r\n        processText(n1, n2, container, anchor)\r\n        break\r\n      case Comment:\r\n        processCommentNode(n1, n2, container, anchor)\r\n        break\r\n      case Static:\r\n        if (n1 == null) {\r\n          mountStaticNode(n2, container, anchor, isSVG)\r\n        } else if (__DEV__) {\r\n          patchStaticNode(n1, n2, container, isSVG)\r\n        }\r\n        break\r\n      case Fragment:\r\n        processFragment(\r\n          n1,\r\n          n2,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        break\r\n      default:\r\n        if (shapeFlag & ShapeFlags.ELEMENT) {\r\n          processElement(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else if (shapeFlag & ShapeFlags.COMPONENT) {\r\n          processComponent(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else if (shapeFlag & ShapeFlags.TELEPORT) {\r\n          ;(type as typeof TeleportImpl).process(\r\n            n1 as TeleportVNode,\r\n            n2 as TeleportVNode,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized,\r\n            internals\r\n          )\r\n        } else if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n          ;(type as typeof SuspenseImpl).process(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized,\r\n            internals\r\n          )\r\n        } else if (__DEV__) {\r\n          warn('Invalid VNode type:', type, `(${typeof type})`)\r\n        }\r\n    }\r\n\r\n    // set ref\r\n    if (ref != null && parentComponent) {\r\n      setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2)\r\n    }\r\n  }\r\n\r\n  const processText: ProcessTextOrCommentFn = (n1, n2, container, anchor) => {\r\n    if (n1 == null) {\r\n      hostInsert(\r\n        (n2.el = hostCreateText(n2.children as string)),\r\n        container,\r\n        anchor\r\n      )\r\n    } else {\r\n      const el = (n2.el = n1.el!)\r\n      if (n2.children !== n1.children) {\r\n        hostSetText(el, n2.children as string)\r\n      }\r\n    }\r\n  }\r\n\r\n  const processCommentNode: ProcessTextOrCommentFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor\r\n  ) => {\r\n    if (n1 == null) {\r\n      hostInsert(\r\n        (n2.el = hostCreateComment((n2.children as string) || '')),\r\n        container,\r\n        anchor\r\n      )\r\n    } else {\r\n      // there's no support for dynamic comments\r\n      n2.el = n1.el\r\n    }\r\n  }\r\n\r\n  const mountStaticNode = (\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    isSVG: boolean\r\n  ) => {\r\n    // static nodes are only present when used with compiler-dom/runtime-dom\r\n    // which guarantees presence of hostInsertStaticContent.\r\n    ;[n2.el, n2.anchor] = hostInsertStaticContent!(\r\n      n2.children as string,\r\n      container,\r\n      anchor,\r\n      isSVG,\r\n      n2.el,\r\n      n2.anchor\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Dev / HMR only\r\n   */\r\n  const patchStaticNode = (\r\n    n1: VNode,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    isSVG: boolean\r\n  ) => {\r\n    // static nodes are only patched during dev for HMR\r\n    if (n2.children !== n1.children) {\r\n      const anchor = hostNextSibling(n1.anchor!)\r\n      // remove existing\r\n      removeStaticNode(n1)\r\n      // insert new\r\n      ;[n2.el, n2.anchor] = hostInsertStaticContent!(\r\n        n2.children as string,\r\n        container,\r\n        anchor,\r\n        isSVG\r\n      )\r\n    } else {\r\n      n2.el = n1.el\r\n      n2.anchor = n1.anchor\r\n    }\r\n  }\r\n\r\n  const moveStaticNode = (\r\n    { el, anchor }: VNode,\r\n    container: RendererElement,\r\n    nextSibling: RendererNode | null\r\n  ) => {\r\n    let next\r\n    while (el && el !== anchor) {\r\n      next = hostNextSibling(el)\r\n      hostInsert(el, container, nextSibling)\r\n      el = next\r\n    }\r\n    hostInsert(anchor!, container, nextSibling)\r\n  }\r\n\r\n  const removeStaticNode = ({ el, anchor }: VNode) => {\r\n    let next\r\n    while (el && el !== anchor) {\r\n      next = hostNextSibling(el)\r\n      hostRemove(el)\r\n      el = next\r\n    }\r\n    hostRemove(anchor!)\r\n  }\r\n\r\n  const processElement = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    isSVG = isSVG || (n2.type as string) === 'svg'\r\n    if (n1 == null) {\r\n      mountElement(\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    } else {\r\n      patchElement(\r\n        n1,\r\n        n2,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    }\r\n  }\r\n\r\n  const mountElement = (\r\n    vnode: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    let el: RendererElement\r\n    let vnodeHook: VNodeHook | undefined | null\r\n    const { type, props, shapeFlag, transition, patchFlag, dirs } = vnode\r\n    if (\r\n      !__DEV__ &&\r\n      vnode.el &&\r\n      hostCloneNode !== undefined &&\r\n      patchFlag === PatchFlags.HOISTED\r\n    ) {\r\n      // If a vnode has non-null el, it means it's being reused.\r\n      // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n      // exactly the same, and we can simply do a clone here.\r\n      // only do this in production since cloned trees cannot be HMR updated.\r\n      el = vnode.el = hostCloneNode(vnode.el)\r\n    } else {\r\n      el = vnode.el = hostCreateElement(\r\n        vnode.type as string,\r\n        isSVG,\r\n        props && props.is,\r\n        props\r\n      )\r\n\r\n      // mount children first, since some props may rely on child content\r\n      // being already rendered, e.g. `<select value>`\r\n      if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n        hostSetElementText(el, vnode.children as string)\r\n      } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        mountChildren(\r\n          vnode.children as VNodeArrayChildren,\r\n          el,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG && type !== 'foreignObject',\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      }\r\n\r\n      if (dirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'created')\r\n      }\r\n      // props\r\n      if (props) {\r\n        for (const key in props) {\r\n          if (key !== 'value' && !isReservedProp(key)) {\r\n            hostPatchProp(\r\n              el,\r\n              key,\r\n              null,\r\n              props[key],\r\n              isSVG,\r\n              vnode.children as VNode[],\r\n              parentComponent,\r\n              parentSuspense,\r\n              unmountChildren\r\n            )\r\n          }\r\n        }\r\n        /**\r\n         * Special case for setting value on DOM elements:\r\n         * - it can be order-sensitive (e.g. should be set *after* min/max, #2325, #4024)\r\n         * - it needs to be forced (#1471)\r\n         * #2353 proposes adding another renderer option to configure this, but\r\n         * the properties affects are so finite it is worth special casing it\r\n         * here to reduce the complexity. (Special casing it also should not\r\n         * affect non-DOM renderers)\r\n         */\r\n        if ('value' in props) {\r\n          hostPatchProp(el, 'value', null, props.value)\r\n        }\r\n        if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n          invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n        }\r\n      }\r\n      // scopeId\r\n      setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent)\r\n    }\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      Object.defineProperty(el, '__vnode', {\r\n        value: vnode,\r\n        enumerable: false\r\n      })\r\n      Object.defineProperty(el, '__vueParentComponent', {\r\n        value: parentComponent,\r\n        enumerable: false\r\n      })\r\n    }\r\n    if (dirs) {\r\n      invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount')\r\n    }\r\n    // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n    // #1689 For inside suspense + suspense resolved case, just call it\r\n    const needCallTransitionHooks =\r\n      (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n      transition &&\r\n      !transition.persisted\r\n    if (needCallTransitionHooks) {\r\n      transition!.beforeEnter(el)\r\n    }\r\n    hostInsert(el, container, anchor)\r\n    if (\r\n      (vnodeHook = props && props.onVnodeMounted) ||\r\n      needCallTransitionHooks ||\r\n      dirs\r\n    ) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n        needCallTransitionHooks && transition!.enter(el)\r\n        dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  const setScopeId = (\r\n    el: RendererElement,\r\n    vnode: VNode,\r\n    scopeId: string | null,\r\n    slotScopeIds: string[] | null,\r\n    parentComponent: ComponentInternalInstance | null\r\n  ) => {\r\n    if (scopeId) {\r\n      hostSetScopeId(el, scopeId)\r\n    }\r\n    if (slotScopeIds) {\r\n      for (let i = 0; i < slotScopeIds.length; i++) {\r\n        hostSetScopeId(el, slotScopeIds[i])\r\n      }\r\n    }\r\n    if (parentComponent) {\r\n      let subTree = parentComponent.subTree\r\n      if (\r\n        __DEV__ &&\r\n        subTree.patchFlag > 0 &&\r\n        subTree.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT\r\n      ) {\r\n        subTree =\r\n          filterSingleRoot(subTree.children as VNodeArrayChildren) || subTree\r\n      }\r\n      if (vnode === subTree) {\r\n        const parentVNode = parentComponent.vnode\r\n        setScopeId(\r\n          el,\r\n          parentVNode,\r\n          parentVNode.scopeId,\r\n          parentVNode.slotScopeIds,\r\n          parentComponent.parent\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const mountChildren: MountChildrenFn = (\r\n    children,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized,\r\n    start = 0\r\n  ) => {\r\n    for (let i = start; i < children.length; i++) {\r\n      const child = (children[i] = optimized\r\n        ? cloneIfMounted(children[i] as VNode)\r\n        : normalizeVNode(children[i]))\r\n      patch(\r\n        null,\r\n        child,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    }\r\n  }\r\n\r\n  const patchElement = (\r\n    n1: VNode,\r\n    n2: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    const el = (n2.el = n1.el!)\r\n    let { patchFlag, dynamicChildren, dirs } = n2\r\n    // #1426 take the old vnode's patch flag into account since user may clone a\r\n    // compiler-generated vnode, which de-opts to FULL_PROPS\r\n    patchFlag |= n1.patchFlag & PatchFlags.FULL_PROPS\r\n    const oldProps = n1.props || EMPTY_OBJ\r\n    const newProps = n2.props || EMPTY_OBJ\r\n    let vnodeHook: VNodeHook | undefined | null\r\n\r\n    // disable recurse in beforeUpdate hooks\r\n    parentComponent && toggleRecurse(parentComponent, false)\r\n    if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n      invokeVNodeHook(vnodeHook, parentComponent, n2, n1)\r\n    }\r\n    if (dirs) {\r\n      invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate')\r\n    }\r\n    parentComponent && toggleRecurse(parentComponent, true)\r\n\r\n    if (__DEV__ && isHmrUpdating) {\r\n      // HMR updated, force full diff\r\n      patchFlag = 0\r\n      optimized = false\r\n      dynamicChildren = null\r\n    }\r\n\r\n    const areChildrenSVG = isSVG && n2.type !== 'foreignObject'\r\n    if (dynamicChildren) {\r\n      patchBlockChildren(\r\n        n1.dynamicChildren!,\r\n        dynamicChildren,\r\n        el,\r\n        parentComponent,\r\n        parentSuspense,\r\n        areChildrenSVG,\r\n        slotScopeIds\r\n      )\r\n      if (__DEV__ && parentComponent && parentComponent.type.__hmrId) {\r\n        traverseStaticChildren(n1, n2)\r\n      }\r\n    } else if (!optimized) {\r\n      // full diff\r\n      patchChildren(\r\n        n1,\r\n        n2,\r\n        el,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        areChildrenSVG,\r\n        slotScopeIds,\r\n        false\r\n      )\r\n    }\r\n\r\n    if (patchFlag > 0) {\r\n      // the presence of a patchFlag means this element's render code was\r\n      // generated by the compiler and can take the fast path.\r\n      // in this path old node and new node are guaranteed to have the same shape\r\n      // (i.e. at the exact same position in the source template)\r\n      if (patchFlag & PatchFlags.FULL_PROPS) {\r\n        // element props contain dynamic keys, full diff needed\r\n        patchProps(\r\n          el,\r\n          n2,\r\n          oldProps,\r\n          newProps,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG\r\n        )\r\n      } else {\r\n        // class\r\n        // this flag is matched when the element has dynamic class bindings.\r\n        if (patchFlag & PatchFlags.CLASS) {\r\n          if (oldProps.class !== newProps.class) {\r\n            hostPatchProp(el, 'class', null, newProps.class, isSVG)\r\n          }\r\n        }\r\n\r\n        // style\r\n        // this flag is matched when the element has dynamic style bindings\r\n        if (patchFlag & PatchFlags.STYLE) {\r\n          hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG)\r\n        }\r\n\r\n        // props\r\n        // This flag is matched when the element has dynamic prop/attr bindings\r\n        // other than class and style. The keys of dynamic prop/attrs are saved for\r\n        // faster iteration.\r\n        // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n        // bail out and go through a full diff because we need to unset the old key\r\n        if (patchFlag & PatchFlags.PROPS) {\r\n          // if the flag is present then dynamicProps must be non-null\r\n          const propsToUpdate = n2.dynamicProps!\r\n          for (let i = 0; i < propsToUpdate.length; i++) {\r\n            const key = propsToUpdate[i]\r\n            const prev = oldProps[key]\r\n            const next = newProps[key]\r\n            // #1471 force patch value\r\n            if (next !== prev || key === 'value') {\r\n              hostPatchProp(\r\n                el,\r\n                key,\r\n                prev,\r\n                next,\r\n                isSVG,\r\n                n1.children as VNode[],\r\n                parentComponent,\r\n                parentSuspense,\r\n                unmountChildren\r\n              )\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // text\r\n      // This flag is matched when the element has only dynamic text children.\r\n      if (patchFlag & PatchFlags.TEXT) {\r\n        if (n1.children !== n2.children) {\r\n          hostSetElementText(el, n2.children as string)\r\n        }\r\n      }\r\n    } else if (!optimized && dynamicChildren == null) {\r\n      // unoptimized, full diff\r\n      patchProps(\r\n        el,\r\n        n2,\r\n        oldProps,\r\n        newProps,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG\r\n      )\r\n    }\r\n\r\n    if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1)\r\n        dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  // The fast path for blocks.\r\n  const patchBlockChildren: PatchBlockChildrenFn = (\r\n    oldChildren,\r\n    newChildren,\r\n    fallbackContainer,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    slotScopeIds\r\n  ) => {\r\n    for (let i = 0; i < newChildren.length; i++) {\r\n      const oldVNode = oldChildren[i]\r\n      const newVNode = newChildren[i]\r\n      // Determine the container (parent element) for the patch.\r\n      const container =\r\n        // oldVNode may be an errored async setup() component inside Suspense\r\n        // which will not have a mounted element\r\n        oldVNode.el &&\r\n        // - In the case of a Fragment, we need to provide the actual parent\r\n        // of the Fragment itself so it can move its children.\r\n        (oldVNode.type === Fragment ||\r\n          // - In the case of different nodes, there is going to be a replacement\r\n          // which also requires the correct parent container\r\n          !isSameVNodeType(oldVNode, newVNode) ||\r\n          // - In the case of a component, it could contain anything.\r\n          oldVNode.shapeFlag & (ShapeFlags.COMPONENT | ShapeFlags.TELEPORT))\r\n          ? hostParentNode(oldVNode.el)!\r\n          : // In other cases, the parent container is not actually used so we\r\n            // just pass the block element here to avoid a DOM parentNode call.\r\n            fallbackContainer\r\n      patch(\r\n        oldVNode,\r\n        newVNode,\r\n        container,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        true\r\n      )\r\n    }\r\n  }\r\n\r\n  const patchProps = (\r\n    el: RendererElement,\r\n    vnode: VNode,\r\n    oldProps: Data,\r\n    newProps: Data,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean\r\n  ) => {\r\n    if (oldProps !== newProps) {\r\n      for (const key in newProps) {\r\n        // empty string is not valid prop\r\n        if (isReservedProp(key)) continue\r\n        const next = newProps[key]\r\n        const prev = oldProps[key]\r\n        // defer patching value\r\n        if (next !== prev && key !== 'value') {\r\n          hostPatchProp(\r\n            el,\r\n            key,\r\n            prev,\r\n            next,\r\n            isSVG,\r\n            vnode.children as VNode[],\r\n            parentComponent,\r\n            parentSuspense,\r\n            unmountChildren\r\n          )\r\n        }\r\n      }\r\n      if (oldProps !== EMPTY_OBJ) {\r\n        for (const key in oldProps) {\r\n          if (!isReservedProp(key) && !(key in newProps)) {\r\n            hostPatchProp(\r\n              el,\r\n              key,\r\n              oldProps[key],\r\n              null,\r\n              isSVG,\r\n              vnode.children as VNode[],\r\n              parentComponent,\r\n              parentSuspense,\r\n              unmountChildren\r\n            )\r\n          }\r\n        }\r\n      }\r\n      if ('value' in newProps) {\r\n        hostPatchProp(el, 'value', oldProps.value, newProps.value)\r\n      }\r\n    }\r\n  }\r\n\r\n  const processFragment = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''))!\r\n    const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''))!\r\n\r\n    let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2\r\n\r\n    if (\r\n      __DEV__ &&\r\n      // #5523 dev root fragment may inherit directives\r\n      (isHmrUpdating || patchFlag & PatchFlags.DEV_ROOT_FRAGMENT)\r\n    ) {\r\n      // HMR updated / Dev root fragment (w/ comments), force full diff\r\n      patchFlag = 0\r\n      optimized = false\r\n      dynamicChildren = null\r\n    }\r\n\r\n    // check if this is a slot fragment with :slotted scope ids\r\n    if (fragmentSlotScopeIds) {\r\n      slotScopeIds = slotScopeIds\r\n        ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n        : fragmentSlotScopeIds\r\n    }\r\n\r\n    if (n1 == null) {\r\n      hostInsert(fragmentStartAnchor, container, anchor)\r\n      hostInsert(fragmentEndAnchor, container, anchor)\r\n      // a fragment can only have array children\r\n      // since they are either generated by the compiler, or implicitly created\r\n      // from arrays.\r\n      mountChildren(\r\n        n2.children as VNodeArrayChildren,\r\n        container,\r\n        fragmentEndAnchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    } else {\r\n      if (\r\n        patchFlag > 0 &&\r\n        patchFlag & PatchFlags.STABLE_FRAGMENT &&\r\n        dynamicChildren &&\r\n        // #2715 the previous fragment could've been a BAILed one as a result\r\n        // of renderSlot() with no valid children\r\n        n1.dynamicChildren\r\n      ) {\r\n        // a stable fragment (template root or <template v-for>) doesn't need to\r\n        // patch children order, but it may contain dynamicChildren.\r\n        patchBlockChildren(\r\n          n1.dynamicChildren,\r\n          dynamicChildren,\r\n          container,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds\r\n        )\r\n        if (__DEV__ && parentComponent && parentComponent.type.__hmrId) {\r\n          traverseStaticChildren(n1, n2)\r\n        } else if (\r\n          // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n          //  get moved around. Make sure all root level vnodes inherit el.\r\n          // #2134 or if it's a component root, it may also get moved around\r\n          // as the component is being moved.\r\n          n2.key != null ||\r\n          (parentComponent && n2 === parentComponent.subTree)\r\n        ) {\r\n          traverseStaticChildren(n1, n2, true /* shallow */)\r\n        }\r\n      } else {\r\n        // keyed / unkeyed, or manual fragments.\r\n        // for keyed & unkeyed, since they are compiler generated from v-for,\r\n        // each child is guaranteed to be a block so the fragment will never\r\n        // have dynamicChildren.\r\n        patchChildren(\r\n          n1,\r\n          n2,\r\n          container,\r\n          fragmentEndAnchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const processComponent = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    n2.slotScopeIds = slotScopeIds\r\n    if (n1 == null) {\r\n      if (n2.shapeFlag & ShapeFlags.COMPONENT_KEPT_ALIVE) {\r\n        ;(parentComponent!.ctx as KeepAliveContext).activate(\r\n          n2,\r\n          container,\r\n          anchor,\r\n          isSVG,\r\n          optimized\r\n        )\r\n      } else {\r\n        mountComponent(\r\n          n2,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          optimized\r\n        )\r\n      }\r\n    } else {\r\n      updateComponent(n1, n2, optimized)\r\n    }\r\n  }\r\n\r\n  const mountComponent: MountComponentFn = (\r\n    initialVNode,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    optimized\r\n  ) => {\r\n    // 2.x compat may pre-create the component instance before actually\r\n    // mounting\r\n    const compatMountInstance =\r\n      __COMPAT__ && initialVNode.isCompatRoot && initialVNode.component\r\n    const instance: ComponentInternalInstance =\r\n      compatMountInstance ||\r\n      (initialVNode.component = createComponentInstance(\r\n        initialVNode,\r\n        parentComponent,\r\n        parentSuspense\r\n      ))\r\n\r\n    if (__DEV__ && instance.type.__hmrId) {\r\n      registerHMR(instance)\r\n    }\r\n\r\n    if (__DEV__) {\r\n      pushWarningContext(initialVNode)\r\n      startMeasure(instance, `mount`)\r\n    }\r\n\r\n    // inject renderer internals for keepAlive\r\n    if (isKeepAlive(initialVNode)) {\r\n      ;(instance.ctx as KeepAliveContext).renderer = internals\r\n    }\r\n\r\n    // resolve props and slots for setup context\r\n    if (!(__COMPAT__ && compatMountInstance)) {\r\n      if (__DEV__) {\r\n        startMeasure(instance, `init`)\r\n      }\r\n      setupComponent(instance)\r\n      if (__DEV__) {\r\n        endMeasure(instance, `init`)\r\n      }\r\n    }\r\n\r\n    // setup() is async. This component relies on async logic to be resolved\r\n    // before proceeding\r\n    if (__FEATURE_SUSPENSE__ && instance.asyncDep) {\r\n      parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect)\r\n\r\n      // Give it a placeholder if this is not hydration\r\n      // TODO handle self-defined fallback\r\n      if (!initialVNode.el) {\r\n        const placeholder = (instance.subTree = createVNode(Comment))\r\n        processCommentNode(null, placeholder, container!, anchor)\r\n      }\r\n      return\r\n    }\r\n\r\n    setupRenderEffect(\r\n      instance,\r\n      initialVNode,\r\n      container,\r\n      anchor,\r\n      parentSuspense,\r\n      isSVG,\r\n      optimized\r\n    )\r\n\r\n    if (__DEV__) {\r\n      popWarningContext()\r\n      endMeasure(instance, `mount`)\r\n    }\r\n  }\r\n\r\n  const updateComponent = (n1: VNode, n2: VNode, optimized: boolean) => {\r\n    const instance = (n2.component = n1.component)!\r\n    if (shouldUpdateComponent(n1, n2, optimized)) {\r\n      if (\r\n        __FEATURE_SUSPENSE__ &&\r\n        instance.asyncDep &&\r\n        !instance.asyncResolved\r\n      ) {\r\n        // async & still pending - just update props and slots\r\n        // since the component's reactive effect for render isn't set-up yet\r\n        if (__DEV__) {\r\n          pushWarningContext(n2)\r\n        }\r\n        updateComponentPreRender(instance, n2, optimized)\r\n        if (__DEV__) {\r\n          popWarningContext()\r\n        }\r\n        return\r\n      } else {\r\n        // normal update\r\n        instance.next = n2\r\n        // in case the child component is also queued, remove it to avoid\r\n        // double updating the same child component in the same flush.\r\n        invalidateJob(instance.update)\r\n        // instance.update is the reactive effect.\r\n        instance.update()\r\n      }\r\n    } else {\r\n      // no update needed. just copy over properties\r\n      n2.el = n1.el\r\n      instance.vnode = n2\r\n    }\r\n  }\r\n\r\n  const setupRenderEffect: SetupRenderEffectFn = (\r\n    instance,\r\n    initialVNode,\r\n    container,\r\n    anchor,\r\n    parentSuspense,\r\n    isSVG,\r\n    optimized\r\n  ) => {\r\n    const componentUpdateFn = () => {\r\n      if (!instance.isMounted) {\r\n        let vnodeHook: VNodeHook | null | undefined\r\n        const { el, props } = initialVNode\r\n        const { bm, m, parent } = instance\r\n        const isAsyncWrapperVNode = isAsyncWrapper(initialVNode)\r\n\r\n        toggleRecurse(instance, false)\r\n        // beforeMount hook\r\n        if (bm) {\r\n          invokeArrayFns(bm)\r\n        }\r\n        // onVnodeBeforeMount\r\n        if (\r\n          !isAsyncWrapperVNode &&\r\n          (vnodeHook = props && props.onVnodeBeforeMount)\r\n        ) {\r\n          invokeVNodeHook(vnodeHook, parent, initialVNode)\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          instance.emit('hook:beforeMount')\r\n        }\r\n        toggleRecurse(instance, true)\r\n\r\n        if (el && hydrateNode) {\r\n          // vnode has adopted host node - perform hydration instead of mount.\r\n          const hydrateSubTree = () => {\r\n            if (__DEV__) {\r\n              startMeasure(instance, `render`)\r\n            }\r\n            instance.subTree = renderComponentRoot(instance)\r\n            if (__DEV__) {\r\n              endMeasure(instance, `render`)\r\n            }\r\n            if (__DEV__) {\r\n              startMeasure(instance, `hydrate`)\r\n            }\r\n            hydrateNode!(\r\n              el as Node,\r\n              instance.subTree,\r\n              instance,\r\n              parentSuspense,\r\n              null\r\n            )\r\n            if (__DEV__) {\r\n              endMeasure(instance, `hydrate`)\r\n            }\r\n          }\r\n\r\n          if (isAsyncWrapperVNode) {\r\n            ;(initialVNode.type as ComponentOptions).__asyncLoader!().then(\r\n              // note: we are moving the render call into an async callback,\r\n              // which means it won't track dependencies - but it's ok because\r\n              // a server-rendered async wrapper is already in resolved state\r\n              // and it will never need to change.\r\n              () => !instance.isUnmounted && hydrateSubTree()\r\n            )\r\n          } else {\r\n            hydrateSubTree()\r\n          }\r\n        } else {\r\n          if (__DEV__) {\r\n            startMeasure(instance, `render`)\r\n          }\r\n          const subTree = (instance.subTree = renderComponentRoot(instance))\r\n          if (__DEV__) {\r\n            endMeasure(instance, `render`)\r\n          }\r\n          if (__DEV__) {\r\n            startMeasure(instance, `patch`)\r\n          }\r\n          patch(\r\n            null,\r\n            subTree,\r\n            container,\r\n            anchor,\r\n            instance,\r\n            parentSuspense,\r\n            isSVG\r\n          )\r\n          if (__DEV__) {\r\n            endMeasure(instance, `patch`)\r\n          }\r\n          initialVNode.el = subTree.el\r\n        }\r\n        // mounted hook\r\n        if (m) {\r\n          queuePostRenderEffect(m, parentSuspense)\r\n        }\r\n        // onVnodeMounted\r\n        if (\r\n          !isAsyncWrapperVNode &&\r\n          (vnodeHook = props && props.onVnodeMounted)\r\n        ) {\r\n          const scopedInitialVNode = initialVNode\r\n          queuePostRenderEffect(\r\n            () => invokeVNodeHook(vnodeHook!, parent, scopedInitialVNode),\r\n            parentSuspense\r\n          )\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          queuePostRenderEffect(\r\n            () => instance.emit('hook:mounted'),\r\n            parentSuspense\r\n          )\r\n        }\r\n\r\n        // activated hook for keep-alive roots.\r\n        // #1742 activated hook must be accessed after first render\r\n        // since the hook may be injected by a child keep-alive\r\n        if (\r\n          initialVNode.shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE ||\r\n          (parent &&\r\n            isAsyncWrapper(parent.vnode) &&\r\n            parent.vnode.shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE)\r\n        ) {\r\n          instance.a && queuePostRenderEffect(instance.a, parentSuspense)\r\n          if (\r\n            __COMPAT__ &&\r\n            isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n          ) {\r\n            queuePostRenderEffect(\r\n              () => instance.emit('hook:activated'),\r\n              parentSuspense\r\n            )\r\n          }\r\n        }\r\n        instance.isMounted = true\r\n\r\n        if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n          devtoolsComponentAdded(instance)\r\n        }\r\n\r\n        // #2458: deference mount-only object parameters to prevent memleaks\r\n        initialVNode = container = anchor = null as any\r\n      } else {\r\n        // updateComponent\r\n        // This is triggered by mutation of component's own state (next: null)\r\n        // OR parent calling processComponent (next: VNode)\r\n        let { next, bu, u, parent, vnode } = instance\r\n        let originNext = next\r\n        let vnodeHook: VNodeHook | null | undefined\r\n        if (__DEV__) {\r\n          pushWarningContext(next || instance.vnode)\r\n        }\r\n\r\n        // Disallow component effect recursion during pre-lifecycle hooks.\r\n        toggleRecurse(instance, false)\r\n        if (next) {\r\n          next.el = vnode.el\r\n          updateComponentPreRender(instance, next, optimized)\r\n        } else {\r\n          next = vnode\r\n        }\r\n\r\n        // beforeUpdate hook\r\n        if (bu) {\r\n          invokeArrayFns(bu)\r\n        }\r\n        // onVnodeBeforeUpdate\r\n        if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n          invokeVNodeHook(vnodeHook, parent, next, vnode)\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          instance.emit('hook:beforeUpdate')\r\n        }\r\n        toggleRecurse(instance, true)\r\n\r\n        // render\r\n        if (__DEV__) {\r\n          startMeasure(instance, `render`)\r\n        }\r\n        const nextTree = renderComponentRoot(instance)\r\n        if (__DEV__) {\r\n          endMeasure(instance, `render`)\r\n        }\r\n        const prevTree = instance.subTree\r\n        instance.subTree = nextTree\r\n\r\n        if (__DEV__) {\r\n          startMeasure(instance, `patch`)\r\n        }\r\n        patch(\r\n          prevTree,\r\n          nextTree,\r\n          // parent may have changed if it's in a teleport\r\n          hostParentNode(prevTree.el!)!,\r\n          // anchor may have changed if it's in a fragment\r\n          getNextHostNode(prevTree),\r\n          instance,\r\n          parentSuspense,\r\n          isSVG\r\n        )\r\n        if (__DEV__) {\r\n          endMeasure(instance, `patch`)\r\n        }\r\n        next.el = nextTree.el\r\n        if (originNext === null) {\r\n          // self-triggered update. In case of HOC, update parent component\r\n          // vnode el. HOC is indicated by parent instance's subTree pointing\r\n          // to child component's vnode\r\n          updateHOCHostEl(instance, nextTree.el)\r\n        }\r\n        // updated hook\r\n        if (u) {\r\n          queuePostRenderEffect(u, parentSuspense)\r\n        }\r\n        // onVnodeUpdated\r\n        if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n          queuePostRenderEffect(\r\n            () => invokeVNodeHook(vnodeHook!, parent, next!, vnode),\r\n            parentSuspense\r\n          )\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          queuePostRenderEffect(\r\n            () => instance.emit('hook:updated'),\r\n            parentSuspense\r\n          )\r\n        }\r\n\r\n        if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n          devtoolsComponentUpdated(instance)\r\n        }\r\n\r\n        if (__DEV__) {\r\n          popWarningContext()\r\n        }\r\n      }\r\n    }\r\n\r\n    // create reactive effect for rendering\r\n    const effect = (instance.effect = new ReactiveEffect(\r\n      componentUpdateFn,\r\n      () => queueJob(update),\r\n      instance.scope // track it in component's effect scope\r\n    ))\r\n\r\n    const update: SchedulerJob = (instance.update = () => effect.run())\r\n    update.id = instance.uid\r\n    // allowRecurse\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    toggleRecurse(instance, true)\r\n\r\n    if (__DEV__) {\r\n      effect.onTrack = instance.rtc\r\n        ? e => invokeArrayFns(instance.rtc!, e)\r\n        : void 0\r\n      effect.onTrigger = instance.rtg\r\n        ? e => invokeArrayFns(instance.rtg!, e)\r\n        : void 0\r\n      update.ownerInstance = instance\r\n    }\r\n\r\n    update()\r\n  }\r\n\r\n  const updateComponentPreRender = (\r\n    instance: ComponentInternalInstance,\r\n    nextVNode: VNode,\r\n    optimized: boolean\r\n  ) => {\r\n    nextVNode.component = instance\r\n    const prevProps = instance.vnode.props\r\n    instance.vnode = nextVNode\r\n    instance.next = null\r\n    updateProps(instance, nextVNode.props, prevProps, optimized)\r\n    updateSlots(instance, nextVNode.children, optimized)\r\n\r\n    pauseTracking()\r\n    // props update may have triggered pre-flush watchers.\r\n    // flush them before the render update.\r\n    flushPreFlushCbs(undefined, instance.update)\r\n    resetTracking()\r\n  }\r\n\r\n  const patchChildren: PatchChildrenFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    isSVG,\r\n    slotScopeIds,\r\n    optimized = false\r\n  ) => {\r\n    const c1 = n1 && n1.children\r\n    const prevShapeFlag = n1 ? n1.shapeFlag : 0\r\n    const c2 = n2.children\r\n\r\n    const { patchFlag, shapeFlag } = n2\r\n    // fast path\r\n    if (patchFlag > 0) {\r\n      if (patchFlag & PatchFlags.KEYED_FRAGMENT) {\r\n        // this could be either fully-keyed or mixed (some keyed some not)\r\n        // presence of patchFlag means children are guaranteed to be arrays\r\n        patchKeyedChildren(\r\n          c1 as VNode[],\r\n          c2 as VNodeArrayChildren,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        return\r\n      } else if (patchFlag & PatchFlags.UNKEYED_FRAGMENT) {\r\n        // unkeyed\r\n        patchUnkeyedChildren(\r\n          c1 as VNode[],\r\n          c2 as VNodeArrayChildren,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        return\r\n      }\r\n    }\r\n\r\n    // children has 3 possibilities: text, array or no children.\r\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n      // text children fast path\r\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        unmountChildren(c1 as VNode[], parentComponent, parentSuspense)\r\n      }\r\n      if (c2 !== c1) {\r\n        hostSetElementText(container, c2 as string)\r\n      }\r\n    } else {\r\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        // prev children was array\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          // two arrays, cannot assume anything, do full diff\r\n          patchKeyedChildren(\r\n            c1 as VNode[],\r\n            c2 as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else {\r\n          // no new children, just unmount old\r\n          unmountChildren(c1 as VNode[], parentComponent, parentSuspense, true)\r\n        }\r\n      } else {\r\n        // prev children was text OR null\r\n        // new children is array OR null\r\n        if (prevShapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n          hostSetElementText(container, '')\r\n        }\r\n        // mount new if array\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          mountChildren(\r\n            c2 as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const patchUnkeyedChildren = (\r\n    c1: VNode[],\r\n    c2: VNodeArrayChildren,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    c1 = c1 || EMPTY_ARR\r\n    c2 = c2 || EMPTY_ARR\r\n    const oldLength = c1.length\r\n    const newLength = c2.length\r\n    const commonLength = Math.min(oldLength, newLength)\r\n    let i\r\n    for (i = 0; i < commonLength; i++) {\r\n      const nextChild = (c2[i] = optimized\r\n        ? cloneIfMounted(c2[i] as VNode)\r\n        : normalizeVNode(c2[i]))\r\n      patch(\r\n        c1[i],\r\n        nextChild,\r\n        container,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized\r\n      )\r\n    }\r\n    if (oldLength > newLength) {\r\n      // remove old\r\n      unmountChildren(\r\n        c1,\r\n        parentComponent,\r\n        parentSuspense,\r\n        true,\r\n        false,\r\n        commonLength\r\n      )\r\n    } else {\r\n      // mount new\r\n      mountChildren(\r\n        c2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        isSVG,\r\n        slotScopeIds,\r\n        optimized,\r\n        commonLength\r\n      )\r\n    }\r\n  }\r\n\r\n  // can be all-keyed or mixed\r\n  const patchKeyedChildren = (\r\n    c1: VNode[],\r\n    c2: VNodeArrayChildren,\r\n    container: RendererElement,\r\n    parentAnchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => {\r\n    let i = 0\r\n    const l2 = c2.length\r\n    let e1 = c1.length - 1 // prev ending index\r\n    let e2 = l2 - 1 // next ending index\r\n\r\n    // 1. sync from start\r\n    // (a b) c\r\n    // (a b) d e\r\n    while (i <= e1 && i <= e2) {\r\n      const n1 = c1[i]\r\n      const n2 = (c2[i] = optimized\r\n        ? cloneIfMounted(c2[i] as VNode)\r\n        : normalizeVNode(c2[i]))\r\n      if (isSameVNodeType(n1, n2)) {\r\n        patch(\r\n          n1,\r\n          n2,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      } else {\r\n        break\r\n      }\r\n      i++\r\n    }\r\n\r\n    // 2. sync from end\r\n    // a (b c)\r\n    // d e (b c)\r\n    while (i <= e1 && i <= e2) {\r\n      const n1 = c1[e1]\r\n      const n2 = (c2[e2] = optimized\r\n        ? cloneIfMounted(c2[e2] as VNode)\r\n        : normalizeVNode(c2[e2]))\r\n      if (isSameVNodeType(n1, n2)) {\r\n        patch(\r\n          n1,\r\n          n2,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      } else {\r\n        break\r\n      }\r\n      e1--\r\n      e2--\r\n    }\r\n\r\n    // 3. common sequence + mount\r\n    // (a b)\r\n    // (a b) c\r\n    // i = 2, e1 = 1, e2 = 2\r\n    // (a b)\r\n    // c (a b)\r\n    // i = 0, e1 = -1, e2 = 0\r\n    if (i > e1) {\r\n      if (i <= e2) {\r\n        const nextPos = e2 + 1\r\n        const anchor = nextPos < l2 ? (c2[nextPos] as VNode).el : parentAnchor\r\n        while (i <= e2) {\r\n          patch(\r\n            null,\r\n            (c2[i] = optimized\r\n              ? cloneIfMounted(c2[i] as VNode)\r\n              : normalizeVNode(c2[i])),\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n          i++\r\n        }\r\n      }\r\n    }\r\n\r\n    // 4. common sequence + unmount\r\n    // (a b) c\r\n    // (a b)\r\n    // i = 2, e1 = 2, e2 = 1\r\n    // a (b c)\r\n    // (b c)\r\n    // i = 0, e1 = 0, e2 = -1\r\n    else if (i > e2) {\r\n      while (i <= e1) {\r\n        unmount(c1[i], parentComponent, parentSuspense, true)\r\n        i++\r\n      }\r\n    }\r\n\r\n    // 5. unknown sequence\r\n    // [i ... e1 + 1]: a b [c d e] f g\r\n    // [i ... e2 + 1]: a b [e d c h] f g\r\n    // i = 2, e1 = 4, e2 = 5\r\n    else {\r\n      const s1 = i // prev starting index\r\n      const s2 = i // next starting index\r\n\r\n      // 5.1 build key:index map for newChildren\r\n      const keyToNewIndexMap: Map<string | number | symbol, number> = new Map()\r\n      for (i = s2; i <= e2; i++) {\r\n        const nextChild = (c2[i] = optimized\r\n          ? cloneIfMounted(c2[i] as VNode)\r\n          : normalizeVNode(c2[i]))\r\n        if (nextChild.key != null) {\r\n          if (__DEV__ && keyToNewIndexMap.has(nextChild.key)) {\r\n            warn(\r\n              `Duplicate keys found during update:`,\r\n              JSON.stringify(nextChild.key),\r\n              `Make sure keys are unique.`\r\n            )\r\n          }\r\n          keyToNewIndexMap.set(nextChild.key, i)\r\n        }\r\n      }\r\n\r\n      // 5.2 loop through old children left to be patched and try to patch\r\n      // matching nodes & remove nodes that are no longer present\r\n      let j\r\n      let patched = 0\r\n      const toBePatched = e2 - s2 + 1\r\n      let moved = false\r\n      // used to track whether any node has moved\r\n      let maxNewIndexSoFar = 0\r\n      // works as Map<newIndex, oldIndex>\r\n      // Note that oldIndex is offset by +1\r\n      // and oldIndex = 0 is a special value indicating the new node has\r\n      // no corresponding old node.\r\n      // used for determining longest stable subsequence\r\n      const newIndexToOldIndexMap = new Array(toBePatched)\r\n      for (i = 0; i < toBePatched; i++) newIndexToOldIndexMap[i] = 0\r\n\r\n      for (i = s1; i <= e1; i++) {\r\n        const prevChild = c1[i]\r\n        if (patched >= toBePatched) {\r\n          // all new children have been patched so this can only be a removal\r\n          unmount(prevChild, parentComponent, parentSuspense, true)\r\n          continue\r\n        }\r\n        let newIndex\r\n        if (prevChild.key != null) {\r\n          newIndex = keyToNewIndexMap.get(prevChild.key)\r\n        } else {\r\n          // key-less node, try to locate a key-less node of the same type\r\n          for (j = s2; j <= e2; j++) {\r\n            if (\r\n              newIndexToOldIndexMap[j - s2] === 0 &&\r\n              isSameVNodeType(prevChild, c2[j] as VNode)\r\n            ) {\r\n              newIndex = j\r\n              break\r\n            }\r\n          }\r\n        }\r\n        if (newIndex === undefined) {\r\n          unmount(prevChild, parentComponent, parentSuspense, true)\r\n        } else {\r\n          newIndexToOldIndexMap[newIndex - s2] = i + 1\r\n          if (newIndex >= maxNewIndexSoFar) {\r\n            maxNewIndexSoFar = newIndex\r\n          } else {\r\n            moved = true\r\n          }\r\n          patch(\r\n            prevChild,\r\n            c2[newIndex] as VNode,\r\n            container,\r\n            null,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n          patched++\r\n        }\r\n      }\r\n\r\n      // 5.3 move and mount\r\n      // generate longest stable subsequence only when nodes have moved\r\n      const increasingNewIndexSequence = moved\r\n        ? getSequence(newIndexToOldIndexMap)\r\n        : EMPTY_ARR\r\n      j = increasingNewIndexSequence.length - 1\r\n      // looping backwards so that we can use last patched node as anchor\r\n      for (i = toBePatched - 1; i >= 0; i--) {\r\n        const nextIndex = s2 + i\r\n        const nextChild = c2[nextIndex] as VNode\r\n        const anchor =\r\n          nextIndex + 1 < l2 ? (c2[nextIndex + 1] as VNode).el : parentAnchor\r\n        if (newIndexToOldIndexMap[i] === 0) {\r\n          // mount new\r\n          patch(\r\n            null,\r\n            nextChild,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        } else if (moved) {\r\n          // move if:\r\n          // There is no stable subsequence (e.g. a reverse)\r\n          // OR current node is not among the stable sequence\r\n          if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n            move(nextChild, container, anchor, MoveType.REORDER)\r\n          } else {\r\n            j--\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const move: MoveFn = (\r\n    vnode,\r\n    container,\r\n    anchor,\r\n    moveType,\r\n    parentSuspense = null\r\n  ) => {\r\n    const { el, type, transition, children, shapeFlag } = vnode\r\n    if (shapeFlag & ShapeFlags.COMPONENT) {\r\n      move(vnode.component!.subTree, container, anchor, moveType)\r\n      return\r\n    }\r\n\r\n    if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n      vnode.suspense!.move(container, anchor, moveType)\r\n      return\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.TELEPORT) {\r\n      ;(type as typeof TeleportImpl).move(vnode, container, anchor, internals)\r\n      return\r\n    }\r\n\r\n    if (type === Fragment) {\r\n      hostInsert(el!, container, anchor)\r\n      for (let i = 0; i < (children as VNode[]).length; i++) {\r\n        move((children as VNode[])[i], container, anchor, moveType)\r\n      }\r\n      hostInsert(vnode.anchor!, container, anchor)\r\n      return\r\n    }\r\n\r\n    if (type === Static) {\r\n      moveStaticNode(vnode, container, anchor)\r\n      return\r\n    }\r\n\r\n    // single nodes\r\n    const needTransition =\r\n      moveType !== MoveType.REORDER &&\r\n      shapeFlag & ShapeFlags.ELEMENT &&\r\n      transition\r\n    if (needTransition) {\r\n      if (moveType === MoveType.ENTER) {\r\n        transition!.beforeEnter(el!)\r\n        hostInsert(el!, container, anchor)\r\n        queuePostRenderEffect(() => transition!.enter(el!), parentSuspense)\r\n      } else {\r\n        const { leave, delayLeave, afterLeave } = transition!\r\n        const remove = () => hostInsert(el!, container, anchor)\r\n        const performLeave = () => {\r\n          leave(el!, () => {\r\n            remove()\r\n            afterLeave && afterLeave()\r\n          })\r\n        }\r\n        if (delayLeave) {\r\n          delayLeave(el!, remove, performLeave)\r\n        } else {\r\n          performLeave()\r\n        }\r\n      }\r\n    } else {\r\n      hostInsert(el!, container, anchor)\r\n    }\r\n  }\r\n\r\n  const unmount: UnmountFn = (\r\n    vnode,\r\n    parentComponent,\r\n    parentSuspense,\r\n    doRemove = false,\r\n    optimized = false\r\n  ) => {\r\n    const {\r\n      type,\r\n      props,\r\n      ref,\r\n      children,\r\n      dynamicChildren,\r\n      shapeFlag,\r\n      patchFlag,\r\n      dirs\r\n    } = vnode\r\n    // unset ref\r\n    if (ref != null) {\r\n      setRef(ref, null, parentSuspense, vnode, true)\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE) {\r\n      ;(parentComponent!.ctx as KeepAliveContext).deactivate(vnode)\r\n      return\r\n    }\r\n\r\n    const shouldInvokeDirs = shapeFlag & ShapeFlags.ELEMENT && dirs\r\n    const shouldInvokeVnodeHook = !isAsyncWrapper(vnode)\r\n\r\n    let vnodeHook: VNodeHook | undefined | null\r\n    if (\r\n      shouldInvokeVnodeHook &&\r\n      (vnodeHook = props && props.onVnodeBeforeUnmount)\r\n    ) {\r\n      invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.COMPONENT) {\r\n      unmountComponent(vnode.component!, parentSuspense, doRemove)\r\n    } else {\r\n      if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n        vnode.suspense!.unmount(parentSuspense, doRemove)\r\n        return\r\n      }\r\n\r\n      if (shouldInvokeDirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount')\r\n      }\r\n\r\n      if (shapeFlag & ShapeFlags.TELEPORT) {\r\n        ;(vnode.type as typeof TeleportImpl).remove(\r\n          vnode,\r\n          parentComponent,\r\n          parentSuspense,\r\n          optimized,\r\n          internals,\r\n          doRemove\r\n        )\r\n      } else if (\r\n        dynamicChildren &&\r\n        // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n        (type !== Fragment ||\r\n          (patchFlag > 0 && patchFlag & PatchFlags.STABLE_FRAGMENT))\r\n      ) {\r\n        // fast path for block nodes: only need to unmount dynamic children.\r\n        unmountChildren(\r\n          dynamicChildren,\r\n          parentComponent,\r\n          parentSuspense,\r\n          false,\r\n          true\r\n        )\r\n      } else if (\r\n        (type === Fragment &&\r\n          patchFlag &\r\n            (PatchFlags.KEYED_FRAGMENT | PatchFlags.UNKEYED_FRAGMENT)) ||\r\n        (!optimized && shapeFlag & ShapeFlags.ARRAY_CHILDREN)\r\n      ) {\r\n        unmountChildren(children as VNode[], parentComponent, parentSuspense)\r\n      }\r\n\r\n      if (doRemove) {\r\n        remove(vnode)\r\n      }\r\n    }\r\n\r\n    if (\r\n      (shouldInvokeVnodeHook &&\r\n        (vnodeHook = props && props.onVnodeUnmounted)) ||\r\n      shouldInvokeDirs\r\n    ) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n        shouldInvokeDirs &&\r\n          invokeDirectiveHook(vnode, null, parentComponent, 'unmounted')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  const remove: RemoveFn = vnode => {\r\n    const { type, el, anchor, transition } = vnode\r\n    if (type === Fragment) {\r\n      if (\r\n        __DEV__ &&\r\n        vnode.patchFlag > 0 &&\r\n        vnode.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT &&\r\n        transition &&\r\n        !transition.persisted\r\n      ) {\r\n        ;(vnode.children as VNode[]).forEach(child => {\r\n          if (child.type === Comment) {\r\n            hostRemove(child.el!)\r\n          } else {\r\n            remove(child)\r\n          }\r\n        })\r\n      } else {\r\n        removeFragment(el!, anchor!)\r\n      }\r\n      return\r\n    }\r\n\r\n    if (type === Static) {\r\n      removeStaticNode(vnode)\r\n      return\r\n    }\r\n\r\n    const performRemove = () => {\r\n      hostRemove(el!)\r\n      if (transition && !transition.persisted && transition.afterLeave) {\r\n        transition.afterLeave()\r\n      }\r\n    }\r\n\r\n    if (\r\n      vnode.shapeFlag & ShapeFlags.ELEMENT &&\r\n      transition &&\r\n      !transition.persisted\r\n    ) {\r\n      const { leave, delayLeave } = transition\r\n      const performLeave = () => leave(el!, performRemove)\r\n      if (delayLeave) {\r\n        delayLeave(vnode.el!, performRemove, performLeave)\r\n      } else {\r\n        performLeave()\r\n      }\r\n    } else {\r\n      performRemove()\r\n    }\r\n  }\r\n\r\n  const removeFragment = (cur: RendererNode, end: RendererNode) => {\r\n    // For fragments, directly remove all contained DOM nodes.\r\n    // (fragment child nodes cannot have transition)\r\n    let next\r\n    while (cur !== end) {\r\n      next = hostNextSibling(cur)!\r\n      hostRemove(cur)\r\n      cur = next\r\n    }\r\n    hostRemove(end)\r\n  }\r\n\r\n  const unmountComponent = (\r\n    instance: ComponentInternalInstance,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    doRemove?: boolean\r\n  ) => {\r\n    if (__DEV__ && instance.type.__hmrId) {\r\n      unregisterHMR(instance)\r\n    }\r\n\r\n    const { bum, scope, update, subTree, um } = instance\r\n\r\n    // beforeUnmount hook\r\n    if (bum) {\r\n      invokeArrayFns(bum)\r\n    }\r\n\r\n    if (\r\n      __COMPAT__ &&\r\n      isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n    ) {\r\n      instance.emit('hook:beforeDestroy')\r\n    }\r\n\r\n    // stop effects in component scope\r\n    scope.stop()\r\n\r\n    // update may be null if a component is unmounted before its async\r\n    // setup has resolved.\r\n    if (update) {\r\n      // so that scheduler will no longer invoke it\r\n      update.active = false\r\n      unmount(subTree, instance, parentSuspense, doRemove)\r\n    }\r\n    // unmounted hook\r\n    if (um) {\r\n      queuePostRenderEffect(um, parentSuspense)\r\n    }\r\n    if (\r\n      __COMPAT__ &&\r\n      isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n    ) {\r\n      queuePostRenderEffect(\r\n        () => instance.emit('hook:destroyed'),\r\n        parentSuspense\r\n      )\r\n    }\r\n    queuePostRenderEffect(() => {\r\n      instance.isUnmounted = true\r\n    }, parentSuspense)\r\n\r\n    // A component with async dep inside a pending suspense is unmounted before\r\n    // its async dep resolves. This should remove the dep from the suspense, and\r\n    // cause the suspense to resolve immediately if that was the last dep.\r\n    if (\r\n      __FEATURE_SUSPENSE__ &&\r\n      parentSuspense &&\r\n      parentSuspense.pendingBranch &&\r\n      !parentSuspense.isUnmounted &&\r\n      instance.asyncDep &&\r\n      !instance.asyncResolved &&\r\n      instance.suspenseId === parentSuspense.pendingId\r\n    ) {\r\n      parentSuspense.deps--\r\n      if (parentSuspense.deps === 0) {\r\n        parentSuspense.resolve()\r\n      }\r\n    }\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      devtoolsComponentRemoved(instance)\r\n    }\r\n  }\r\n\r\n  const unmountChildren: UnmountChildrenFn = (\r\n    children,\r\n    parentComponent,\r\n    parentSuspense,\r\n    doRemove = false,\r\n    optimized = false,\r\n    start = 0\r\n  ) => {\r\n    for (let i = start; i < children.length; i++) {\r\n      unmount(children[i], parentComponent, parentSuspense, doRemove, optimized)\r\n    }\r\n  }\r\n\r\n  const getNextHostNode: NextFn = vnode => {\r\n    if (vnode.shapeFlag & ShapeFlags.COMPONENT) {\r\n      return getNextHostNode(vnode.component!.subTree)\r\n    }\r\n    if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n      return vnode.suspense!.next()\r\n    }\r\n    return hostNextSibling((vnode.anchor || vnode.el)!)\r\n  }\r\n\r\n  const render: RootRenderFunction = (vnode, container, isSVG) => {\r\n    if (vnode == null) {\r\n      if (container._vnode) {\r\n        unmount(container._vnode, null, null, true)\r\n      }\r\n    } else {\r\n      patch(container._vnode || null, vnode, container, null, null, null, isSVG)\r\n    }\r\n    flushPostFlushCbs()\r\n    container._vnode = vnode\r\n  }\r\n\r\n  const internals: RendererInternals = {\r\n    p: patch,\r\n    um: unmount,\r\n    m: move,\r\n    r: remove,\r\n    mt: mountComponent,\r\n    mc: mountChildren,\r\n    pc: patchChildren,\r\n    pbc: patchBlockChildren,\r\n    n: getNextHostNode,\r\n    o: options\r\n  }\r\n\r\n  let hydrate: ReturnType<typeof createHydrationFunctions>[0] | undefined\r\n  let hydrateNode: ReturnType<typeof createHydrationFunctions>[1] | undefined\r\n  if (createHydrationFns) {\r\n    ;[hydrate, hydrateNode] = createHydrationFns(\r\n      internals as RendererInternals<Node, Element>\r\n    )\r\n  }\r\n\r\n  return {\r\n    render,\r\n    hydrate,\r\n    createApp: createAppAPI(render, hydrate)\r\n  }\r\n}\r\n\r\nfunction toggleRecurse(\r\n  { effect, update }: ComponentInternalInstance,\r\n  allowed: boolean\r\n) {\r\n  effect.allowRecurse = update.allowRecurse = allowed\r\n}\r\n\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always be moved. Therefore, in order to ensure correct move\r\n * position, el should be inherited from previous nodes.\r\n */\r\nexport function traverseStaticChildren(n1: VNode, n2: VNode, shallow = false) {\r\n  const ch1 = n1.children\r\n  const ch2 = n2.children\r\n  if (isArray(ch1) && isArray(ch2)) {\r\n    for (let i = 0; i < ch1.length; i++) {\r\n      // this is only called in the optimized path so array children are\r\n      // guaranteed to be vnodes\r\n      const c1 = ch1[i] as VNode\r\n      let c2 = ch2[i] as VNode\r\n      if (c2.shapeFlag & ShapeFlags.ELEMENT && !c2.dynamicChildren) {\r\n        if (c2.patchFlag <= 0 || c2.patchFlag === PatchFlags.HYDRATE_EVENTS) {\r\n          c2 = ch2[i] = cloneIfMounted(ch2[i] as VNode)\r\n          c2.el = c1.el\r\n        }\r\n        if (!shallow) traverseStaticChildren(c1, c2)\r\n      }\r\n      // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n      // would have received .el during block patch)\r\n      if (__DEV__ && c2.type === Comment && !c2.el) {\r\n        c2.el = c1.el\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr: number[]): number[] {\r\n  const p = arr.slice()\r\n  const result = [0]\r\n  let i, j, u, v, c\r\n  const len = arr.length\r\n  for (i = 0; i < len; i++) {\r\n    const arrI = arr[i]\r\n    if (arrI !== 0) {\r\n      j = result[result.length - 1]\r\n      if (arr[j] < arrI) {\r\n        p[i] = j\r\n        result.push(i)\r\n        continue\r\n      }\r\n      u = 0\r\n      v = result.length - 1\r\n      while (u < v) {\r\n        c = (u + v) >> 1\r\n        if (arr[result[c]] < arrI) {\r\n          u = c + 1\r\n        } else {\r\n          v = c\r\n        }\r\n      }\r\n      if (arrI < arr[result[u]]) {\r\n        if (u > 0) {\r\n          p[i] = result[u - 1]\r\n        }\r\n        result[u] = i\r\n      }\r\n    }\r\n  }\r\n  u = result.length\r\n  v = result[u - 1]\r\n  while (u-- > 0) {\r\n    result[u] = v\r\n    v = p[v]\r\n  }\r\n  return result\r\n}\r\n","import { VNode, VNodeChild, isVNode } from './vnode'\r\nimport {\r\n  pauseTracking,\r\n  resetTracking,\r\n  shallowReadonly,\r\n  proxyRefs,\r\n  EffectScope,\r\n  markRaw,\r\n  track,\r\n  TrackOpTypes,\r\n  ReactiveEffect\r\n} from '@vue/reactivity'\r\nimport {\r\n  ComponentPublicInstance,\r\n  PublicInstanceProxyHandlers,\r\n  createDevRenderContext,\r\n  exposePropsOnRenderContext,\r\n  exposeSetupStateOnRenderContext,\r\n  ComponentPublicInstanceConstructor,\r\n  publicPropertiesMap,\r\n  RuntimeCompiledPublicInstanceProxyHandlers\r\n} from './componentPublicInstance'\r\nimport {\r\n  ComponentPropsOptions,\r\n  NormalizedPropsOptions,\r\n  initProps,\r\n  normalizePropsOptions\r\n} from './componentProps'\r\nimport { Slots, initSlots, InternalSlots } from './componentSlots'\r\nimport { warn } from './warning'\r\nimport { ErrorCodes, callWithErrorHandling, handleError } from './errorHandling'\r\nimport { AppContext, createAppContext, AppConfig } from './apiCreateApp'\r\nimport { Directive, validateDirectiveName } from './directives'\r\nimport {\r\n  applyOptions,\r\n  ComponentOptions,\r\n  ComputedOptions,\r\n  MethodOptions\r\n} from './componentOptions'\r\nimport {\r\n  EmitsOptions,\r\n  ObjectEmitsOptions,\r\n  EmitFn,\r\n  emit,\r\n  normalizeEmitsOptions\r\n} from './componentEmits'\r\nimport {\r\n  EMPTY_OBJ,\r\n  isFunction,\r\n  NOOP,\r\n  isObject,\r\n  NO,\r\n  makeMap,\r\n  isPromise,\r\n  ShapeFlags,\r\n  extend\r\n} from '@vue/shared'\r\nimport { SuspenseBoundary } from './components/Suspense'\r\nimport { CompilerOptions } from '@vue/compiler-core'\r\nimport { markAttrsAccessed } from './componentRenderUtils'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { startMeasure, endMeasure } from './profiling'\r\nimport { convertLegacyRenderFn } from './compat/renderFn'\r\nimport {\r\n  CompatConfig,\r\n  globalCompatConfig,\r\n  validateCompatConfig\r\n} from './compat/compatConfig'\r\nimport { SchedulerJob } from './scheduler'\r\n\r\nexport type Data = Record<string, unknown>\r\n\r\n/**\r\n * For extending allowed non-declared props on components in TSX\r\n */\r\nexport interface ComponentCustomProps {}\r\n\r\n/**\r\n * Default allowed non-declared props on component in TSX\r\n */\r\nexport interface AllowedComponentProps {\r\n  class?: unknown\r\n  style?: unknown\r\n}\r\n\r\n// Note: can't mark this whole interface internal because some public interfaces\r\n// extend it.\r\nexport interface ComponentInternalOptions {\r\n  /**\r\n   * @internal\r\n   */\r\n  __scopeId?: string\r\n  /**\r\n   * @internal\r\n   */\r\n  __cssModules?: Data\r\n  /**\r\n   * @internal\r\n   */\r\n  __hmrId?: string\r\n  /**\r\n   * Compat build only, for bailing out of certain compatibility behavior\r\n   */\r\n  __isBuiltIn?: boolean\r\n  /**\r\n   * This one should be exposed so that devtools can make use of it\r\n   */\r\n  __file?: string\r\n  /**\r\n   * name inferred from filename\r\n   */\r\n  __name?: string\r\n}\r\n\r\nexport interface FunctionalComponent<P = {}, E extends EmitsOptions = {}>\r\n  extends ComponentInternalOptions {\r\n  // use of any here is intentional so it can be a valid JSX Element constructor\r\n  (props: P, ctx: Omit<SetupContext<E>, 'expose'>): any\r\n  props?: ComponentPropsOptions<P>\r\n  emits?: E | (keyof E)[]\r\n  inheritAttrs?: boolean\r\n  displayName?: string\r\n  compatConfig?: CompatConfig\r\n}\r\n\r\nexport interface ClassComponent {\r\n  new (...args: any[]): ComponentPublicInstance<any, any, any, any, any>\r\n  __vccOpts: ComponentOptions\r\n}\r\n\r\n/**\r\n * Concrete component type matches its actual value: it's either an options\r\n * object, or a function. Use this where the code expects to work with actual\r\n * values, e.g. checking if its a function or not. This is mostly for internal\r\n * implementation code.\r\n */\r\nexport type ConcreteComponent<\r\n  Props = {},\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions\r\n> =\r\n  | ComponentOptions<Props, RawBindings, D, C, M>\r\n  | FunctionalComponent<Props, any>\r\n\r\n/**\r\n * A type used in public APIs where a component type is expected.\r\n * The constructor type is an artificial type returned by defineComponent().\r\n */\r\nexport type Component<\r\n  Props = any,\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions\r\n> =\r\n  | ConcreteComponent<Props, RawBindings, D, C, M>\r\n  | ComponentPublicInstanceConstructor<Props>\r\n\r\nexport { ComponentOptions }\r\n\r\ntype LifecycleHook<TFn = Function> = TFn[] | null\r\n\r\nexport const enum LifecycleHooks {\r\n  BEFORE_CREATE = 'bc',\r\n  CREATED = 'c',\r\n  BEFORE_MOUNT = 'bm',\r\n  MOUNTED = 'm',\r\n  BEFORE_UPDATE = 'bu',\r\n  UPDATED = 'u',\r\n  BEFORE_UNMOUNT = 'bum',\r\n  UNMOUNTED = 'um',\r\n  DEACTIVATED = 'da',\r\n  ACTIVATED = 'a',\r\n  RENDER_TRIGGERED = 'rtg',\r\n  RENDER_TRACKED = 'rtc',\r\n  ERROR_CAPTURED = 'ec',\r\n  SERVER_PREFETCH = 'sp'\r\n}\r\n\r\nexport interface SetupContext<E = EmitsOptions> {\r\n  attrs: Data\r\n  slots: Slots\r\n  emit: EmitFn<E>\r\n  expose: (exposed?: Record<string, any>) => void\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type InternalRenderFunction = {\r\n  (\r\n    ctx: ComponentPublicInstance,\r\n    cache: ComponentInternalInstance['renderCache'],\r\n    // for compiler-optimized bindings\r\n    $props: ComponentInternalInstance['props'],\r\n    $setup: ComponentInternalInstance['setupState'],\r\n    $data: ComponentInternalInstance['data'],\r\n    $options: ComponentInternalInstance['ctx']\r\n  ): VNodeChild\r\n  _rc?: boolean // isRuntimeCompiled\r\n\r\n  // __COMPAT__ only\r\n  _compatChecked?: boolean // v3 and already checked for v2 compat\r\n  _compatWrapped?: boolean // is wrapped for v2 compat\r\n}\r\n\r\n/**\r\n * We expose a subset of properties on the internal instance as they are\r\n * useful for advanced external libraries and tools.\r\n */\r\nexport interface ComponentInternalInstance {\r\n  uid: number\r\n  type: ConcreteComponent\r\n  parent: ComponentInternalInstance | null\r\n  root: ComponentInternalInstance\r\n  appContext: AppContext\r\n  /**\r\n   * Vnode representing this component in its parent's vdom tree\r\n   */\r\n  vnode: VNode\r\n  /**\r\n   * The pending new vnode from parent updates\r\n   * @internal\r\n   */\r\n  next: VNode | null\r\n  /**\r\n   * Root vnode of this component's own vdom tree\r\n   */\r\n  subTree: VNode\r\n  /**\r\n   * Render effect instance\r\n   */\r\n  effect: ReactiveEffect\r\n  /**\r\n   * Bound effect runner to be passed to schedulers\r\n   */\r\n  update: SchedulerJob\r\n  /**\r\n   * The render function that returns vdom tree.\r\n   * @internal\r\n   */\r\n  render: InternalRenderFunction | null\r\n  /**\r\n   * SSR render function\r\n   * @internal\r\n   */\r\n  ssrRender?: Function | null\r\n  /**\r\n   * Object containing values this component provides for its descendents\r\n   * @internal\r\n   */\r\n  provides: Data\r\n  /**\r\n   * Tracking reactive effects (e.g. watchers) associated with this component\r\n   * so that they can be automatically stopped on component unmount\r\n   * @internal\r\n   */\r\n  scope: EffectScope\r\n  /**\r\n   * cache for proxy access type to avoid hasOwnProperty calls\r\n   * @internal\r\n   */\r\n  accessCache: Data | null\r\n  /**\r\n   * cache for render function values that rely on _ctx but won't need updates\r\n   * after initialized (e.g. inline handlers)\r\n   * @internal\r\n   */\r\n  renderCache: (Function | VNode)[]\r\n\r\n  /**\r\n   * Resolved component registry, only for components with mixins or extends\r\n   * @internal\r\n   */\r\n  components: Record<string, ConcreteComponent> | null\r\n  /**\r\n   * Resolved directive registry, only for components with mixins or extends\r\n   * @internal\r\n   */\r\n  directives: Record<string, Directive> | null\r\n  /**\r\n   * Resolved filters registry, v2 compat only\r\n   * @internal\r\n   */\r\n  filters?: Record<string, Function>\r\n  /**\r\n   * resolved props options\r\n   * @internal\r\n   */\r\n  propsOptions: NormalizedPropsOptions\r\n  /**\r\n   * resolved emits options\r\n   * @internal\r\n   */\r\n  emitsOptions: ObjectEmitsOptions | null\r\n  /**\r\n   * resolved inheritAttrs options\r\n   * @internal\r\n   */\r\n  inheritAttrs?: boolean\r\n  /**\r\n   * is custom element?\r\n   */\r\n  isCE?: boolean\r\n  /**\r\n   * custom element specific HMR method\r\n   */\r\n  ceReload?: (newStyles?: string[]) => void\r\n\r\n  // the rest are only for stateful components ---------------------------------\r\n\r\n  // main proxy that serves as the public instance (`this`)\r\n  proxy: ComponentPublicInstance | null\r\n\r\n  // exposed properties via expose()\r\n  exposed: Record<string, any> | null\r\n  exposeProxy: Record<string, any> | null\r\n\r\n  /**\r\n   * alternative proxy used only for runtime-compiled render functions using\r\n   * `with` block\r\n   * @internal\r\n   */\r\n  withProxy: ComponentPublicInstance | null\r\n  /**\r\n   * This is the target for the public instance proxy. It also holds properties\r\n   * injected by user options (computed, methods etc.) and user-attached\r\n   * custom properties (via `this.x = ...`)\r\n   * @internal\r\n   */\r\n  ctx: Data\r\n\r\n  // state\r\n  data: Data\r\n  props: Data\r\n  attrs: Data\r\n  slots: InternalSlots\r\n  refs: Data\r\n  emit: EmitFn\r\n  /**\r\n   * used for keeping track of .once event handlers on components\r\n   * @internal\r\n   */\r\n  emitted: Record<string, boolean> | null\r\n  /**\r\n   * used for caching the value returned from props default factory functions to\r\n   * avoid unnecessary watcher trigger\r\n   * @internal\r\n   */\r\n  propsDefaults: Data\r\n  /**\r\n   * setup related\r\n   * @internal\r\n   */\r\n  setupState: Data\r\n  /**\r\n   * devtools access to additional info\r\n   * @internal\r\n   */\r\n  devtoolsRawSetupState?: any\r\n  /**\r\n   * @internal\r\n   */\r\n  setupContext: SetupContext | null\r\n\r\n  /**\r\n   * suspense related\r\n   * @internal\r\n   */\r\n  suspense: SuspenseBoundary | null\r\n  /**\r\n   * suspense pending batch id\r\n   * @internal\r\n   */\r\n  suspenseId: number\r\n  /**\r\n   * @internal\r\n   */\r\n  asyncDep: Promise<any> | null\r\n  /**\r\n   * @internal\r\n   */\r\n  asyncResolved: boolean\r\n\r\n  // lifecycle\r\n  isMounted: boolean\r\n  isUnmounted: boolean\r\n  isDeactivated: boolean\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_CREATE]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.CREATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_MOUNT]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.MOUNTED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_UPDATE]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.UPDATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_UNMOUNT]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.UNMOUNTED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.RENDER_TRACKED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.RENDER_TRIGGERED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.ACTIVATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.DEACTIVATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.ERROR_CAPTURED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.SERVER_PREFETCH]: LifecycleHook<() => Promise<unknown>>\r\n\r\n  /**\r\n   * For caching bound $forceUpdate on public proxy access\r\n   */\r\n  f?: () => void\r\n  /**\r\n   * For caching bound $nextTick on public proxy access\r\n   */\r\n  n?: () => Promise<void>\r\n}\r\n\r\nconst emptyAppContext = createAppContext()\r\n\r\nlet uid = 0\r\n\r\nexport function createComponentInstance(\r\n  vnode: VNode,\r\n  parent: ComponentInternalInstance | null,\r\n  suspense: SuspenseBoundary | null\r\n) {\r\n  const type = vnode.type as ConcreteComponent\r\n  // inherit parent app context - or - if root, adopt from root vnode\r\n  const appContext =\r\n    (parent ? parent.appContext : vnode.appContext) || emptyAppContext\r\n\r\n  const instance: ComponentInternalInstance = {\r\n    uid: uid++,\r\n    vnode,\r\n    type,\r\n    parent,\r\n    appContext,\r\n    root: null!, // to be immediately set\r\n    next: null,\r\n    subTree: null!, // will be set synchronously right after creation\r\n    effect: null!,\r\n    update: null!, // will be set synchronously right after creation\r\n    scope: new EffectScope(true /* detached */),\r\n    render: null,\r\n    proxy: null,\r\n    exposed: null,\r\n    exposeProxy: null,\r\n    withProxy: null,\r\n    provides: parent ? parent.provides : Object.create(appContext.provides),\r\n    accessCache: null!,\r\n    renderCache: [],\r\n\r\n    // local resolved assets\r\n    components: null,\r\n    directives: null,\r\n\r\n    // resolved props and emits options\r\n    propsOptions: normalizePropsOptions(type, appContext),\r\n    emitsOptions: normalizeEmitsOptions(type, appContext),\r\n\r\n    // emit\r\n    emit: null!, // to be set immediately\r\n    emitted: null,\r\n\r\n    // props default value\r\n    propsDefaults: EMPTY_OBJ,\r\n\r\n    // inheritAttrs\r\n    inheritAttrs: type.inheritAttrs,\r\n\r\n    // state\r\n    ctx: EMPTY_OBJ,\r\n    data: EMPTY_OBJ,\r\n    props: EMPTY_OBJ,\r\n    attrs: EMPTY_OBJ,\r\n    slots: EMPTY_OBJ,\r\n    refs: EMPTY_OBJ,\r\n    setupState: EMPTY_OBJ,\r\n    setupContext: null,\r\n\r\n    // suspense related\r\n    suspense,\r\n    suspenseId: suspense ? suspense.pendingId : 0,\r\n    asyncDep: null,\r\n    asyncResolved: false,\r\n\r\n    // lifecycle hooks\r\n    // not using enums here because it results in computed properties\r\n    isMounted: false,\r\n    isUnmounted: false,\r\n    isDeactivated: false,\r\n    bc: null,\r\n    c: null,\r\n    bm: null,\r\n    m: null,\r\n    bu: null,\r\n    u: null,\r\n    um: null,\r\n    bum: null,\r\n    da: null,\r\n    a: null,\r\n    rtg: null,\r\n    rtc: null,\r\n    ec: null,\r\n    sp: null\r\n  }\r\n  if (__DEV__) {\r\n    instance.ctx = createDevRenderContext(instance)\r\n  } else {\r\n    instance.ctx = { _: instance }\r\n  }\r\n  instance.root = parent ? parent.root : instance\r\n  instance.emit = emit.bind(null, instance)\r\n\r\n  // apply custom element special handling\r\n  if (vnode.ce) {\r\n    vnode.ce(instance)\r\n  }\r\n\r\n  return instance\r\n}\r\n\r\nexport let currentInstance: ComponentInternalInstance | null = null\r\n\r\nexport const getCurrentInstance: () => ComponentInternalInstance | null = () =>\r\n  currentInstance || currentRenderingInstance\r\n\r\nexport const setCurrentInstance = (instance: ComponentInternalInstance) => {\r\n  currentInstance = instance\r\n  instance.scope.on()\r\n}\r\n\r\nexport const unsetCurrentInstance = () => {\r\n  currentInstance && currentInstance.scope.off()\r\n  currentInstance = null\r\n}\r\n\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component')\r\n\r\nexport function validateComponentName(name: string, config: AppConfig) {\r\n  const appIsNativeTag = config.isNativeTag || NO\r\n  if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n    warn(\r\n      'Do not use built-in or reserved HTML elements as component id: ' + name\r\n    )\r\n  }\r\n}\r\n\r\nexport function isStatefulComponent(instance: ComponentInternalInstance) {\r\n  return instance.vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT\r\n}\r\n\r\nexport let isInSSRComponentSetup = false\r\n\r\nexport function setupComponent(\r\n  instance: ComponentInternalInstance,\r\n  isSSR = false\r\n) {\r\n  isInSSRComponentSetup = isSSR\r\n\r\n  const { props, children } = instance.vnode\r\n  const isStateful = isStatefulComponent(instance)\r\n  initProps(instance, props, isStateful, isSSR)\r\n  initSlots(instance, children)\r\n\r\n  const setupResult = isStateful\r\n    ? setupStatefulComponent(instance, isSSR)\r\n    : undefined\r\n  isInSSRComponentSetup = false\r\n  return setupResult\r\n}\r\n\r\nfunction setupStatefulComponent(\r\n  instance: ComponentInternalInstance,\r\n  isSSR: boolean\r\n) {\r\n  const Component = instance.type as ComponentOptions\r\n\r\n  if (__DEV__) {\r\n    if (Component.name) {\r\n      validateComponentName(Component.name, instance.appContext.config)\r\n    }\r\n    if (Component.components) {\r\n      const names = Object.keys(Component.components)\r\n      for (let i = 0; i < names.length; i++) {\r\n        validateComponentName(names[i], instance.appContext.config)\r\n      }\r\n    }\r\n    if (Component.directives) {\r\n      const names = Object.keys(Component.directives)\r\n      for (let i = 0; i < names.length; i++) {\r\n        validateDirectiveName(names[i])\r\n      }\r\n    }\r\n    if (Component.compilerOptions && isRuntimeOnly()) {\r\n      warn(\r\n        `\"compilerOptions\" is only supported when using a build of Vue that ` +\r\n          `includes the runtime compiler. Since you are using a runtime-only ` +\r\n          `build, the options should be passed via your build tool config instead.`\r\n      )\r\n    }\r\n  }\r\n  // 0. create render proxy property access cache\r\n  instance.accessCache = Object.create(null)\r\n  // 1. create public instance / render proxy\r\n  // also mark it raw so it's never observed\r\n  instance.proxy = markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers))\r\n  if (__DEV__) {\r\n    exposePropsOnRenderContext(instance)\r\n  }\r\n  // 2. call setup()\r\n  const { setup } = Component\r\n  if (setup) {\r\n    const setupContext = (instance.setupContext =\r\n      setup.length > 1 ? createSetupContext(instance) : null)\r\n\r\n    setCurrentInstance(instance)\r\n    pauseTracking()\r\n    const setupResult = callWithErrorHandling(\r\n      setup,\r\n      instance,\r\n      ErrorCodes.SETUP_FUNCTION,\r\n      [__DEV__ ? shallowReadonly(instance.props) : instance.props, setupContext]\r\n    )\r\n    resetTracking()\r\n    unsetCurrentInstance()\r\n\r\n    if (isPromise(setupResult)) {\r\n      setupResult.then(unsetCurrentInstance, unsetCurrentInstance)\r\n      if (isSSR) {\r\n        // return the promise so server-renderer can wait on it\r\n        return setupResult\r\n          .then((resolvedResult: unknown) => {\r\n            handleSetupResult(instance, resolvedResult, isSSR)\r\n          })\r\n          .catch(e => {\r\n            handleError(e, instance, ErrorCodes.SETUP_FUNCTION)\r\n          })\r\n      } else if (__FEATURE_SUSPENSE__) {\r\n        // async setup returned Promise.\r\n        // bail here and wait for re-entry.\r\n        instance.asyncDep = setupResult\r\n        if (__DEV__ && !instance.suspense) {\r\n          const name = Component.name ?? 'Anonymous'\r\n          warn(\r\n            `Component <${name}>: setup function returned a promise, but no ` +\r\n              `<Suspense> boundary was found in the parent component tree. ` +\r\n              `A component with async setup() must be nested in a <Suspense> ` +\r\n              `in order to be rendered.`\r\n          )\r\n        }\r\n      } else if (__DEV__) {\r\n        warn(\r\n          `setup() returned a Promise, but the version of Vue you are using ` +\r\n            `does not support it yet.`\r\n        )\r\n      }\r\n    } else {\r\n      handleSetupResult(instance, setupResult, isSSR)\r\n    }\r\n  } else {\r\n    finishComponentSetup(instance, isSSR)\r\n  }\r\n}\r\n\r\nexport function handleSetupResult(\r\n  instance: ComponentInternalInstance,\r\n  setupResult: unknown,\r\n  isSSR: boolean\r\n) {\r\n  if (isFunction(setupResult)) {\r\n    // setup returned an inline render function\r\n    if (__SSR__ && (instance.type as ComponentOptions).__ssrInlineRender) {\r\n      // when the function's name is `ssrRender` (compiled by SFC inline mode),\r\n      // set it as ssrRender instead.\r\n      instance.ssrRender = setupResult\r\n    } else {\r\n      instance.render = setupResult as InternalRenderFunction\r\n    }\r\n  } else if (isObject(setupResult)) {\r\n    if (__DEV__ && isVNode(setupResult)) {\r\n      warn(\r\n        `setup() should not return VNodes directly - ` +\r\n          `return a render function instead.`\r\n      )\r\n    }\r\n    // setup returned bindings.\r\n    // assuming a render function compiled from template is present.\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      instance.devtoolsRawSetupState = setupResult\r\n    }\r\n    instance.setupState = proxyRefs(setupResult)\r\n    if (__DEV__) {\r\n      exposeSetupStateOnRenderContext(instance)\r\n    }\r\n  } else if (__DEV__ && setupResult !== undefined) {\r\n    warn(\r\n      `setup() should return an object. Received: ${\r\n        setupResult === null ? 'null' : typeof setupResult\r\n      }`\r\n    )\r\n  }\r\n  finishComponentSetup(instance, isSSR)\r\n}\r\n\r\ntype CompileFunction = (\r\n  template: string | object,\r\n  options?: CompilerOptions\r\n) => InternalRenderFunction\r\n\r\nlet compile: CompileFunction | undefined\r\nlet installWithProxy: (i: ComponentInternalInstance) => void\r\n\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nexport function registerRuntimeCompiler(_compile: any) {\r\n  compile = _compile\r\n  installWithProxy = i => {\r\n    if (i.render!._rc) {\r\n      i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers)\r\n    }\r\n  }\r\n}\r\n\r\n// dev only\r\nexport const isRuntimeOnly = () => !compile\r\n\r\nexport function finishComponentSetup(\r\n  instance: ComponentInternalInstance,\r\n  isSSR: boolean,\r\n  skipOptions?: boolean\r\n) {\r\n  const Component = instance.type as ComponentOptions\r\n\r\n  if (__COMPAT__) {\r\n    convertLegacyRenderFn(instance)\r\n\r\n    if (__DEV__ && Component.compatConfig) {\r\n      validateCompatConfig(Component.compatConfig)\r\n    }\r\n  }\r\n\r\n  // template / render function normalization\r\n  // could be already set when returned from setup()\r\n  if (!instance.render) {\r\n    // only do on-the-fly compile if not in SSR - SSR on-the-fly compilation\r\n    // is done by server-renderer\r\n    if (!isSSR && compile && !Component.render) {\r\n      const template =\r\n        (__COMPAT__ &&\r\n          instance.vnode.props &&\r\n          instance.vnode.props['inline-template']) ||\r\n        Component.template\r\n      if (template) {\r\n        if (__DEV__) {\r\n          startMeasure(instance, `compile`)\r\n        }\r\n        const { isCustomElement, compilerOptions } = instance.appContext.config\r\n        const { delimiters, compilerOptions: componentCompilerOptions } =\r\n          Component\r\n        const finalCompilerOptions: CompilerOptions = extend(\r\n          extend(\r\n            {\r\n              isCustomElement,\r\n              delimiters\r\n            },\r\n            compilerOptions\r\n          ),\r\n          componentCompilerOptions\r\n        )\r\n        if (__COMPAT__) {\r\n          // pass runtime compat config into the compiler\r\n          finalCompilerOptions.compatConfig = Object.create(globalCompatConfig)\r\n          if (Component.compatConfig) {\r\n            // @ts-expect-error types are not compatible\r\n            extend(finalCompilerOptions.compatConfig, Component.compatConfig)\r\n          }\r\n        }\r\n        Component.render = compile(template, finalCompilerOptions)\r\n        if (__DEV__) {\r\n          endMeasure(instance, `compile`)\r\n        }\r\n      }\r\n    }\r\n\r\n    instance.render = (Component.render || NOOP) as InternalRenderFunction\r\n\r\n    // for runtime-compiled render functions using `with` blocks, the render\r\n    // proxy used needs a different `has` handler which is more performant and\r\n    // also only allows a whitelist of globals to fallthrough.\r\n    if (installWithProxy) {\r\n      installWithProxy(instance)\r\n    }\r\n  }\r\n\r\n  // support for 2.x options\r\n  if (__FEATURE_OPTIONS_API__ && !(__COMPAT__ && skipOptions)) {\r\n    setCurrentInstance(instance)\r\n    pauseTracking()\r\n    applyOptions(instance)\r\n    resetTracking()\r\n    unsetCurrentInstance()\r\n  }\r\n\r\n  // warn missing template/render\r\n  // the runtime compilation of template in SSR is done by server-render\r\n  if (__DEV__ && !Component.render && instance.render === NOOP && !isSSR) {\r\n    /* istanbul ignore if */\r\n    if (!compile && Component.template) {\r\n      warn(\r\n        `Component provided template option but ` +\r\n          `runtime compilation is not supported in this build of Vue.` +\r\n          (__ESM_BUNDLER__\r\n            ? ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n            : __ESM_BROWSER__\r\n            ? ` Use \"vue.esm-browser.js\" instead.`\r\n            : __GLOBAL__\r\n            ? ` Use \"vue.global.js\" instead.`\r\n            : ``) /* should not happen */\r\n      )\r\n    } else {\r\n      warn(`Component is missing template or render function.`)\r\n    }\r\n  }\r\n}\r\n\r\nfunction createAttrsProxy(instance: ComponentInternalInstance): Data {\r\n  return new Proxy(\r\n    instance.attrs,\r\n    __DEV__\r\n      ? {\r\n          get(target, key: string) {\r\n            markAttrsAccessed()\r\n            track(instance, TrackOpTypes.GET, '$attrs')\r\n            return target[key]\r\n          },\r\n          set() {\r\n            warn(`setupContext.attrs is readonly.`)\r\n            return false\r\n          },\r\n          deleteProperty() {\r\n            warn(`setupContext.attrs is readonly.`)\r\n            return false\r\n          }\r\n        }\r\n      : {\r\n          get(target, key: string) {\r\n            track(instance, TrackOpTypes.GET, '$attrs')\r\n            return target[key]\r\n          }\r\n        }\r\n  )\r\n}\r\n\r\nexport function createSetupContext(\r\n  instance: ComponentInternalInstance\r\n): SetupContext {\r\n  const expose: SetupContext['expose'] = exposed => {\r\n    if (__DEV__ && instance.exposed) {\r\n      warn(`expose() should be called only once per setup().`)\r\n    }\r\n    instance.exposed = exposed || {}\r\n  }\r\n\r\n  let attrs: Data\r\n  if (__DEV__) {\r\n    // We use getters in dev in case libs like test-utils overwrite instance\r\n    // properties (overwrites should not be done in prod)\r\n    return Object.freeze({\r\n      get attrs() {\r\n        return attrs || (attrs = createAttrsProxy(instance))\r\n      },\r\n      get slots() {\r\n        return shallowReadonly(instance.slots)\r\n      },\r\n      get emit() {\r\n        return (event: string, ...args: any[]) => instance.emit(event, ...args)\r\n      },\r\n      expose\r\n    })\r\n  } else {\r\n    return {\r\n      get attrs() {\r\n        return attrs || (attrs = createAttrsProxy(instance))\r\n      },\r\n      slots: instance.slots,\r\n      emit: instance.emit,\r\n      expose\r\n    }\r\n  }\r\n}\r\n\r\nexport function getExposeProxy(instance: ComponentInternalInstance) {\r\n  if (instance.exposed) {\r\n    return (\r\n      instance.exposeProxy ||\r\n      (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\r\n        get(target, key: string) {\r\n          if (key in target) {\r\n            return target[key]\r\n          } else if (key in publicPropertiesMap) {\r\n            return publicPropertiesMap[key](instance)\r\n          }\r\n        }\r\n      }))\r\n    )\r\n  }\r\n}\r\n\r\nconst classifyRE = /(?:^|[-_])(\\w)/g\r\nconst classify = (str: string): string =>\r\n  str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '')\r\n\r\nexport function getComponentName(\r\n  Component: ConcreteComponent,\r\n  includeInferred = true\r\n): string | false | undefined {\r\n  return isFunction(Component)\r\n    ? Component.displayName || Component.name\r\n    : Component.name || (includeInferred && Component.__name)\r\n}\r\n\r\n/* istanbul ignore next */\r\nexport function formatComponentName(\r\n  instance: ComponentInternalInstance | null,\r\n  Component: ConcreteComponent,\r\n  isRoot = false\r\n): string {\r\n  let name = getComponentName(Component)\r\n  if (!name && Component.__file) {\r\n    const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/)\r\n    if (match) {\r\n      name = match[1]\r\n    }\r\n  }\r\n\r\n  if (!name && instance && instance.parent) {\r\n    // try to infer the name based on reverse resolution\r\n    const inferFromRegistry = (registry: Record<string, any> | undefined) => {\r\n      for (const key in registry) {\r\n        if (registry[key] === Component) {\r\n          return key\r\n        }\r\n      }\r\n    }\r\n    name =\r\n      inferFromRegistry(\r\n        instance.components ||\r\n          (instance.parent.type as ComponentOptions).components\r\n      ) || inferFromRegistry(instance.appContext.components)\r\n  }\r\n\r\n  return name ? classify(name) : isRoot ? `App` : `Anonymous`\r\n}\r\n\r\nexport function isClassComponent(value: unknown): value is ClassComponent {\r\n  return isFunction(value) && '__vccOpts' in value\r\n}\r\n","import { ComponentInternalInstance } from '../component'\r\nimport { SuspenseBoundary } from './Suspense'\r\nimport {\r\n  RendererInternals,\r\n  MoveType,\r\n  RendererElement,\r\n  RendererNode,\r\n  RendererOptions,\r\n  traverseStaticChildren\r\n} from '../renderer'\r\nimport { VNode, VNodeArrayChildren, VNodeProps } from '../vnode'\r\nimport { isString, ShapeFlags } from '@vue/shared'\r\nimport { warn } from '../warning'\r\nimport { isHmrUpdating } from '../hmr'\r\n\r\nexport type TeleportVNode = VNode<RendererNode, RendererElement, TeleportProps>\r\n\r\nexport interface TeleportProps {\r\n  to: string | RendererElement | null | undefined\r\n  disabled?: boolean\r\n}\r\n\r\nexport const isTeleport = (type: any): boolean => type.__isTeleport\r\n\r\nconst isTeleportDisabled = (props: VNode['props']): boolean =>\r\n  props && (props.disabled || props.disabled === '')\r\n\r\nconst isTargetSVG = (target: RendererElement): boolean =>\r\n  typeof SVGElement !== 'undefined' && target instanceof SVGElement\r\n\r\nconst resolveTarget = <T = RendererElement>(\r\n  props: TeleportProps | null,\r\n  select: RendererOptions['querySelector']\r\n): T | null => {\r\n  const targetSelector = props && props.to\r\n  if (isString(targetSelector)) {\r\n    if (!select) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Current renderer does not support string target for Teleports. ` +\r\n            `(missing querySelector renderer option)`\r\n        )\r\n      return null\r\n    } else {\r\n      const target = select(targetSelector)\r\n      if (!target) {\r\n        __DEV__ &&\r\n          warn(\r\n            `Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n              `Note the target element must exist before the component is mounted - ` +\r\n              `i.e. the target cannot be rendered by the component itself, and ` +\r\n              `ideally should be outside of the entire Vue component tree.`\r\n          )\r\n      }\r\n      return target as any\r\n    }\r\n  } else {\r\n    if (__DEV__ && !targetSelector && !isTeleportDisabled(props)) {\r\n      warn(`Invalid Teleport target: ${targetSelector}`)\r\n    }\r\n    return targetSelector as any\r\n  }\r\n}\r\n\r\nexport const TeleportImpl = {\r\n  __isTeleport: true,\r\n  process(\r\n    n1: TeleportVNode | null,\r\n    n2: TeleportVNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    isSVG: boolean,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n    internals: RendererInternals\r\n  ) {\r\n    const {\r\n      mc: mountChildren,\r\n      pc: patchChildren,\r\n      pbc: patchBlockChildren,\r\n      o: { insert, querySelector, createText, createComment }\r\n    } = internals\r\n\r\n    const disabled = isTeleportDisabled(n2.props)\r\n    let { shapeFlag, children, dynamicChildren } = n2\r\n\r\n    // #3302\r\n    // HMR updated, force full diff\r\n    if (__DEV__ && isHmrUpdating) {\r\n      optimized = false\r\n      dynamicChildren = null\r\n    }\r\n\r\n    if (n1 == null) {\r\n      // insert anchors in the main view\r\n      const placeholder = (n2.el = __DEV__\r\n        ? createComment('teleport start')\r\n        : createText(''))\r\n      const mainAnchor = (n2.anchor = __DEV__\r\n        ? createComment('teleport end')\r\n        : createText(''))\r\n      insert(placeholder, container, anchor)\r\n      insert(mainAnchor, container, anchor)\r\n      const target = (n2.target = resolveTarget(n2.props, querySelector))\r\n      const targetAnchor = (n2.targetAnchor = createText(''))\r\n      if (target) {\r\n        insert(targetAnchor, target)\r\n        // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n        isSVG = isSVG || isTargetSVG(target)\r\n      } else if (__DEV__ && !disabled) {\r\n        warn('Invalid Teleport target on mount:', target, `(${typeof target})`)\r\n      }\r\n\r\n      const mount = (container: RendererElement, anchor: RendererNode) => {\r\n        // Teleport *always* has Array children. This is enforced in both the\r\n        // compiler and vnode children normalization.\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          mountChildren(\r\n            children as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            isSVG,\r\n            slotScopeIds,\r\n            optimized\r\n          )\r\n        }\r\n      }\r\n\r\n      if (disabled) {\r\n        mount(container, mainAnchor)\r\n      } else if (target) {\r\n        mount(target, targetAnchor)\r\n      }\r\n    } else {\r\n      // update content\r\n      n2.el = n1.el\r\n      const mainAnchor = (n2.anchor = n1.anchor)!\r\n      const target = (n2.target = n1.target)!\r\n      const targetAnchor = (n2.targetAnchor = n1.targetAnchor)!\r\n      const wasDisabled = isTeleportDisabled(n1.props)\r\n      const currentContainer = wasDisabled ? container : target\r\n      const currentAnchor = wasDisabled ? mainAnchor : targetAnchor\r\n      isSVG = isSVG || isTargetSVG(target)\r\n\r\n      if (dynamicChildren) {\r\n        // fast path when the teleport happens to be a block root\r\n        patchBlockChildren(\r\n          n1.dynamicChildren!,\r\n          dynamicChildren,\r\n          currentContainer,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds\r\n        )\r\n        // even in block tree mode we need to make sure all root-level nodes\r\n        // in the teleport inherit previous DOM references so that they can\r\n        // be moved in future patches.\r\n        traverseStaticChildren(n1, n2, true)\r\n      } else if (!optimized) {\r\n        patchChildren(\r\n          n1,\r\n          n2,\r\n          currentContainer,\r\n          currentAnchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          isSVG,\r\n          slotScopeIds,\r\n          false\r\n        )\r\n      }\r\n\r\n      if (disabled) {\r\n        if (!wasDisabled) {\r\n          // enabled -> disabled\r\n          // move into main container\r\n          moveTeleport(\r\n            n2,\r\n            container,\r\n            mainAnchor,\r\n            internals,\r\n            TeleportMoveTypes.TOGGLE\r\n          )\r\n        }\r\n      } else {\r\n        // target changed\r\n        if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n          const nextTarget = (n2.target = resolveTarget(\r\n            n2.props,\r\n            querySelector\r\n          ))\r\n          if (nextTarget) {\r\n            moveTeleport(\r\n              n2,\r\n              nextTarget,\r\n              null,\r\n              internals,\r\n              TeleportMoveTypes.TARGET_CHANGE\r\n            )\r\n          } else if (__DEV__) {\r\n            warn(\r\n              'Invalid Teleport target on update:',\r\n              target,\r\n              `(${typeof target})`\r\n            )\r\n          }\r\n        } else if (wasDisabled) {\r\n          // disabled -> enabled\r\n          // move into teleport target\r\n          moveTeleport(\r\n            n2,\r\n            target,\r\n            targetAnchor,\r\n            internals,\r\n            TeleportMoveTypes.TOGGLE\r\n          )\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  remove(\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    optimized: boolean,\r\n    { um: unmount, o: { remove: hostRemove } }: RendererInternals,\r\n    doRemove: Boolean\r\n  ) {\r\n    const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode\r\n\r\n    if (target) {\r\n      hostRemove(targetAnchor!)\r\n    }\r\n\r\n    // an unmounted teleport should always remove its children if not disabled\r\n    if (doRemove || !isTeleportDisabled(props)) {\r\n      hostRemove(anchor!)\r\n      if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        for (let i = 0; i < (children as VNode[]).length; i++) {\r\n          const child = (children as VNode[])[i]\r\n          unmount(\r\n            child,\r\n            parentComponent,\r\n            parentSuspense,\r\n            true,\r\n            !!child.dynamicChildren\r\n          )\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  move: moveTeleport,\r\n  hydrate: hydrateTeleport\r\n}\r\n\r\nexport const enum TeleportMoveTypes {\r\n  TARGET_CHANGE,\r\n  TOGGLE, // enable / disable\r\n  REORDER // moved in the main view\r\n}\r\n\r\nfunction moveTeleport(\r\n  vnode: VNode,\r\n  container: RendererElement,\r\n  parentAnchor: RendererNode | null,\r\n  { o: { insert }, m: move }: RendererInternals,\r\n  moveType: TeleportMoveTypes = TeleportMoveTypes.REORDER\r\n) {\r\n  // move target anchor if this is a target change.\r\n  if (moveType === TeleportMoveTypes.TARGET_CHANGE) {\r\n    insert(vnode.targetAnchor!, container, parentAnchor)\r\n  }\r\n  const { el, anchor, shapeFlag, children, props } = vnode\r\n  const isReorder = moveType === TeleportMoveTypes.REORDER\r\n  // move main view anchor if this is a re-order.\r\n  if (isReorder) {\r\n    insert(el!, container, parentAnchor)\r\n  }\r\n  // if this is a re-order and teleport is enabled (content is in target)\r\n  // do not move children. So the opposite is: only move children if this\r\n  // is not a reorder, or the teleport is disabled\r\n  if (!isReorder || isTeleportDisabled(props)) {\r\n    // Teleport has either Array children or no children.\r\n    if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n      for (let i = 0; i < (children as VNode[]).length; i++) {\r\n        move(\r\n          (children as VNode[])[i],\r\n          container,\r\n          parentAnchor,\r\n          MoveType.REORDER\r\n        )\r\n      }\r\n    }\r\n  }\r\n  // move main view anchor if this is a re-order.\r\n  if (isReorder) {\r\n    insert(anchor!, container, parentAnchor)\r\n  }\r\n}\r\n\r\ninterface TeleportTargetElement extends Element {\r\n  // last teleport target\r\n  _lpa?: Node | null\r\n}\r\n\r\nfunction hydrateTeleport(\r\n  node: Node,\r\n  vnode: TeleportVNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  {\r\n    o: { nextSibling, parentNode, querySelector }\r\n  }: RendererInternals<Node, Element>,\r\n  hydrateChildren: (\r\n    node: Node | null,\r\n    vnode: VNode,\r\n    container: Element,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean\r\n  ) => Node | null\r\n): Node | null {\r\n  const target = (vnode.target = resolveTarget<Element>(\r\n    vnode.props,\r\n    querySelector\r\n  ))\r\n  if (target) {\r\n    // if multiple teleports rendered to the same target element, we need to\r\n    // pick up from where the last teleport finished instead of the first node\r\n    const targetNode =\r\n      (target as TeleportTargetElement)._lpa || target.firstChild\r\n    if (vnode.shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n      if (isTeleportDisabled(vnode.props)) {\r\n        vnode.anchor = hydrateChildren(\r\n          nextSibling(node),\r\n          vnode,\r\n          parentNode(node)!,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n        vnode.targetAnchor = targetNode\r\n      } else {\r\n        vnode.anchor = nextSibling(node)\r\n\r\n        // lookahead until we find the target anchor\r\n        // we cannot rely on return value of hydrateChildren() because there\r\n        // could be nested teleports\r\n        let targetAnchor = targetNode\r\n        while (targetAnchor) {\r\n          targetAnchor = nextSibling(targetAnchor)\r\n          if (\r\n            targetAnchor &&\r\n            targetAnchor.nodeType === 8 &&\r\n            (targetAnchor as Comment).data === 'teleport anchor'\r\n          ) {\r\n            vnode.targetAnchor = targetAnchor\r\n            ;(target as TeleportTargetElement)._lpa =\r\n              vnode.targetAnchor && nextSibling(vnode.targetAnchor as Node)\r\n            break\r\n          }\r\n        }\r\n\r\n        hydrateChildren(\r\n          targetNode,\r\n          vnode,\r\n          target,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized\r\n        )\r\n      }\r\n    }\r\n  }\r\n  return vnode.anchor && nextSibling(vnode.anchor as Node)\r\n}\r\n\r\n// Force-casted public typing for h and TSX props inference\r\nexport const Teleport = TeleportImpl as any as {\r\n  __isTeleport: true\r\n  new (): { $props: VNodeProps & TeleportProps }\r\n}\r\n","import {\r\n  isArray,\r\n  isFunction,\r\n  isString,\r\n  isObject,\r\n  EMPTY_ARR,\r\n  extend,\r\n  normalizeClass,\r\n  normalizeStyle,\r\n  PatchFlags,\r\n  ShapeFlags,\r\n  SlotFlags,\r\n  isOn\r\n} from '@vue/shared'\r\nimport {\r\n  ComponentInternalInstance,\r\n  Data,\r\n  ConcreteComponent,\r\n  ClassComponent,\r\n  Component,\r\n  isClassComponent\r\n} from './component'\r\nimport { RawSlots } from './componentSlots'\r\nimport { isProxy, Ref, toRaw, ReactiveFlags, isRef } from '@vue/reactivity'\r\nimport { AppContext } from './apiCreateApp'\r\nimport {\r\n  SuspenseImpl,\r\n  isSuspense,\r\n  SuspenseBoundary\r\n} from './components/Suspense'\r\nimport { DirectiveBinding } from './directives'\r\nimport { TransitionHooks } from './components/BaseTransition'\r\nimport { warn } from './warning'\r\nimport { TeleportImpl, isTeleport } from './components/Teleport'\r\nimport {\r\n  currentRenderingInstance,\r\n  currentScopeId\r\n} from './componentRenderContext'\r\nimport { RendererNode, RendererElement } from './renderer'\r\nimport { NULL_DYNAMIC_COMPONENT } from './helpers/resolveAssets'\r\nimport { hmrDirtyComponents } from './hmr'\r\nimport { convertLegacyComponent } from './compat/component'\r\nimport { convertLegacyVModelProps } from './compat/componentVModel'\r\nimport { defineLegacyVNodeProperties } from './compat/renderFn'\r\nimport { callWithAsyncErrorHandling, ErrorCodes } from './errorHandling'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\n\r\nexport const Fragment = Symbol(__DEV__ ? 'Fragment' : undefined) as any as {\r\n  __isFragment: true\r\n  new (): {\r\n    $props: VNodeProps\r\n  }\r\n}\r\nexport const Text = Symbol(__DEV__ ? 'Text' : undefined)\r\nexport const Comment = Symbol(__DEV__ ? 'Comment' : undefined)\r\nexport const Static = Symbol(__DEV__ ? 'Static' : undefined)\r\n\r\nexport type VNodeTypes =\r\n  | string\r\n  | VNode\r\n  | Component\r\n  | typeof Text\r\n  | typeof Static\r\n  | typeof Comment\r\n  | typeof Fragment\r\n  | typeof TeleportImpl\r\n  | typeof SuspenseImpl\r\n\r\nexport type VNodeRef =\r\n  | string\r\n  | Ref\r\n  | ((\r\n      ref: Element | ComponentPublicInstance | null,\r\n      refs: Record<string, any>\r\n    ) => void)\r\n\r\nexport type VNodeNormalizedRefAtom = {\r\n  i: ComponentInternalInstance\r\n  r: VNodeRef\r\n  k?: string // setup ref key\r\n  f?: boolean // refInFor marker\r\n}\r\n\r\nexport type VNodeNormalizedRef =\r\n  | VNodeNormalizedRefAtom\r\n  | VNodeNormalizedRefAtom[]\r\n\r\ntype VNodeMountHook = (vnode: VNode) => void\r\ntype VNodeUpdateHook = (vnode: VNode, oldVNode: VNode) => void\r\nexport type VNodeHook =\r\n  | VNodeMountHook\r\n  | VNodeUpdateHook\r\n  | VNodeMountHook[]\r\n  | VNodeUpdateHook[]\r\n\r\n// https://github.com/microsoft/TypeScript/issues/33099\r\nexport type VNodeProps = {\r\n  key?: string | number | symbol\r\n  ref?: VNodeRef\r\n  ref_for?: boolean\r\n  ref_key?: string\r\n\r\n  // vnode hooks\r\n  onVnodeBeforeMount?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeMounted?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeBeforeUpdate?: VNodeUpdateHook | VNodeUpdateHook[]\r\n  onVnodeUpdated?: VNodeUpdateHook | VNodeUpdateHook[]\r\n  onVnodeBeforeUnmount?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeUnmounted?: VNodeMountHook | VNodeMountHook[]\r\n}\r\n\r\ntype VNodeChildAtom =\r\n  | VNode\r\n  | string\r\n  | number\r\n  | boolean\r\n  | null\r\n  | undefined\r\n  | void\r\n\r\nexport type VNodeArrayChildren = Array<VNodeArrayChildren | VNodeChildAtom>\r\n\r\nexport type VNodeChild = VNodeChildAtom | VNodeArrayChildren\r\n\r\nexport type VNodeNormalizedChildren =\r\n  | string\r\n  | VNodeArrayChildren\r\n  | RawSlots\r\n  | null\r\n\r\nexport interface VNode<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement,\r\n  ExtraProps = { [key: string]: any }\r\n> {\r\n  /**\r\n   * @internal\r\n   */\r\n  __v_isVNode: true\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  [ReactiveFlags.SKIP]: true\r\n\r\n  type: VNodeTypes\r\n  props: (VNodeProps & ExtraProps) | null\r\n  key: string | number | symbol | null\r\n  ref: VNodeNormalizedRef | null\r\n  /**\r\n   * SFC only. This is assigned on vnode creation using currentScopeId\r\n   * which is set alongside currentRenderingInstance.\r\n   */\r\n  scopeId: string | null\r\n  /**\r\n   * SFC only. This is assigned to:\r\n   * - Slot fragment vnodes with :slotted SFC styles.\r\n   * - Component vnodes (during patch/hydration) so that its root node can\r\n   *   inherit the component's slotScopeIds\r\n   * @internal\r\n   */\r\n  slotScopeIds: string[] | null\r\n  children: VNodeNormalizedChildren\r\n  component: ComponentInternalInstance | null\r\n  dirs: DirectiveBinding[] | null\r\n  transition: TransitionHooks<HostElement> | null\r\n\r\n  // DOM\r\n  el: HostNode | null\r\n  anchor: HostNode | null // fragment anchor\r\n  target: HostElement | null // teleport target\r\n  targetAnchor: HostNode | null // teleport target anchor\r\n  /**\r\n   * number of elements contained in a static vnode\r\n   * @internal\r\n   */\r\n  staticCount: number\r\n\r\n  // suspense\r\n  suspense: SuspenseBoundary | null\r\n  /**\r\n   * @internal\r\n   */\r\n  ssContent: VNode | null\r\n  /**\r\n   * @internal\r\n   */\r\n  ssFallback: VNode | null\r\n\r\n  // optimization only\r\n  shapeFlag: number\r\n  patchFlag: number\r\n  /**\r\n   * @internal\r\n   */\r\n  dynamicProps: string[] | null\r\n  /**\r\n   * @internal\r\n   */\r\n  dynamicChildren: VNode[] | null\r\n\r\n  // application root node only\r\n  appContext: AppContext | null\r\n\r\n  /**\r\n   * @internal attached by v-memo\r\n   */\r\n  memo?: any[]\r\n  /**\r\n   * @internal __COMPAT__ only\r\n   */\r\n  isCompatRoot?: true\r\n  /**\r\n   * @internal custom element interception hook\r\n   */\r\n  ce?: (instance: ComponentInternalInstance) => void\r\n}\r\n\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nexport const blockStack: (VNode[] | null)[] = []\r\nexport let currentBlock: VNode[] | null = null\r\n\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nexport function openBlock(disableTracking = false) {\r\n  blockStack.push((currentBlock = disableTracking ? null : []))\r\n}\r\n\r\nexport function closeBlock() {\r\n  blockStack.pop()\r\n  currentBlock = blockStack[blockStack.length - 1] || null\r\n}\r\n\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nexport let isBlockTreeEnabled = 1\r\n\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nexport function setBlockTracking(value: number) {\r\n  isBlockTreeEnabled += value\r\n}\r\n\r\nfunction setupBlock(vnode: VNode) {\r\n  // save current block children on the block vnode\r\n  vnode.dynamicChildren =\r\n    isBlockTreeEnabled > 0 ? currentBlock || (EMPTY_ARR as any) : null\r\n  // close block\r\n  closeBlock()\r\n  // a block is always going to be patched, so track it as a child of its\r\n  // parent block\r\n  if (isBlockTreeEnabled > 0 && currentBlock) {\r\n    currentBlock.push(vnode)\r\n  }\r\n  return vnode\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createElementBlock(\r\n  type: string | typeof Fragment,\r\n  props?: Record<string, any> | null,\r\n  children?: any,\r\n  patchFlag?: number,\r\n  dynamicProps?: string[],\r\n  shapeFlag?: number\r\n) {\r\n  return setupBlock(\r\n    createBaseVNode(\r\n      type,\r\n      props,\r\n      children,\r\n      patchFlag,\r\n      dynamicProps,\r\n      shapeFlag,\r\n      true /* isBlock */\r\n    )\r\n  )\r\n}\r\n\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nexport function createBlock(\r\n  type: VNodeTypes | ClassComponent,\r\n  props?: Record<string, any> | null,\r\n  children?: any,\r\n  patchFlag?: number,\r\n  dynamicProps?: string[]\r\n): VNode {\r\n  return setupBlock(\r\n    createVNode(\r\n      type,\r\n      props,\r\n      children,\r\n      patchFlag,\r\n      dynamicProps,\r\n      true /* isBlock: prevent a block from tracking itself */\r\n    )\r\n  )\r\n}\r\n\r\nexport function isVNode(value: any): value is VNode {\r\n  return value ? value.__v_isVNode === true : false\r\n}\r\n\r\nexport function isSameVNodeType(n1: VNode, n2: VNode): boolean {\r\n  if (\r\n    __DEV__ &&\r\n    n2.shapeFlag & ShapeFlags.COMPONENT &&\r\n    hmrDirtyComponents.has(n2.type as ConcreteComponent)\r\n  ) {\r\n    // HMR only: if the component has been hot-updated, force a reload.\r\n    return false\r\n  }\r\n  return n1.type === n2.type && n1.key === n2.key\r\n}\r\n\r\nlet vnodeArgsTransformer:\r\n  | ((\r\n      args: Parameters<typeof _createVNode>,\r\n      instance: ComponentInternalInstance | null\r\n    ) => Parameters<typeof _createVNode>)\r\n  | undefined\r\n\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nexport function transformVNodeArgs(transformer?: typeof vnodeArgsTransformer) {\r\n  vnodeArgsTransformer = transformer\r\n}\r\n\r\nconst createVNodeWithArgsTransform = (\r\n  ...args: Parameters<typeof _createVNode>\r\n): VNode => {\r\n  return _createVNode(\r\n    ...(vnodeArgsTransformer\r\n      ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n      : args)\r\n  )\r\n}\r\n\r\nexport const InternalObjectKey = `__vInternal`\r\n\r\nconst normalizeKey = ({ key }: VNodeProps): VNode['key'] =>\r\n  key != null ? key : null\r\n\r\nconst normalizeRef = ({\r\n  ref,\r\n  ref_key,\r\n  ref_for\r\n}: VNodeProps): VNodeNormalizedRefAtom | null => {\r\n  return (\r\n    ref != null\r\n      ? isString(ref) || isRef(ref) || isFunction(ref)\r\n        ? { i: currentRenderingInstance, r: ref, k: ref_key, f: !!ref_for }\r\n        : ref\r\n      : null\r\n  ) as any\r\n}\r\n\r\nfunction createBaseVNode(\r\n  type: VNodeTypes | ClassComponent | typeof NULL_DYNAMIC_COMPONENT,\r\n  props: (Data & VNodeProps) | null = null,\r\n  children: unknown = null,\r\n  patchFlag = 0,\r\n  dynamicProps: string[] | null = null,\r\n  shapeFlag = type === Fragment ? 0 : ShapeFlags.ELEMENT,\r\n  isBlockNode = false,\r\n  needFullChildrenNormalization = false\r\n) {\r\n  const vnode = {\r\n    __v_isVNode: true,\r\n    __v_skip: true,\r\n    type,\r\n    props,\r\n    key: props && normalizeKey(props),\r\n    ref: props && normalizeRef(props),\r\n    scopeId: currentScopeId,\r\n    slotScopeIds: null,\r\n    children,\r\n    component: null,\r\n    suspense: null,\r\n    ssContent: null,\r\n    ssFallback: null,\r\n    dirs: null,\r\n    transition: null,\r\n    el: null,\r\n    anchor: null,\r\n    target: null,\r\n    targetAnchor: null,\r\n    staticCount: 0,\r\n    shapeFlag,\r\n    patchFlag,\r\n    dynamicProps,\r\n    dynamicChildren: null,\r\n    appContext: null\r\n  } as VNode\r\n\r\n  if (needFullChildrenNormalization) {\r\n    normalizeChildren(vnode, children)\r\n    // normalize suspense children\r\n    if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n      ;(type as typeof SuspenseImpl).normalize(vnode)\r\n    }\r\n  } else if (children) {\r\n    // compiled element vnode - if children is passed, only possible types are\r\n    // string or Array.\r\n    vnode.shapeFlag |= isString(children)\r\n      ? ShapeFlags.TEXT_CHILDREN\r\n      : ShapeFlags.ARRAY_CHILDREN\r\n  }\r\n\r\n  // validate key\r\n  if (__DEV__ && vnode.key !== vnode.key) {\r\n    warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type)\r\n  }\r\n\r\n  // track vnode for block tree\r\n  if (\r\n    isBlockTreeEnabled > 0 &&\r\n    // avoid a block node from tracking itself\r\n    !isBlockNode &&\r\n    // has current parent block\r\n    currentBlock &&\r\n    // presence of a patch flag indicates this node needs patching on updates.\r\n    // component nodes also should always be patched, because even if the\r\n    // component doesn't need to update, it needs to persist the instance on to\r\n    // the next vnode so that it can be properly unmounted later.\r\n    (vnode.patchFlag > 0 || shapeFlag & ShapeFlags.COMPONENT) &&\r\n    // the EVENTS flag is only for hydration and if it is the only flag, the\r\n    // vnode should not be considered dynamic due to handler caching.\r\n    vnode.patchFlag !== PatchFlags.HYDRATE_EVENTS\r\n  ) {\r\n    currentBlock.push(vnode)\r\n  }\r\n\r\n  if (__COMPAT__) {\r\n    convertLegacyVModelProps(vnode)\r\n    defineLegacyVNodeProperties(vnode)\r\n  }\r\n\r\n  return vnode\r\n}\r\n\r\nexport { createBaseVNode as createElementVNode }\r\n\r\nexport const createVNode = (\r\n  __DEV__ ? createVNodeWithArgsTransform : _createVNode\r\n) as typeof _createVNode\r\n\r\nfunction _createVNode(\r\n  type: VNodeTypes | ClassComponent | typeof NULL_DYNAMIC_COMPONENT,\r\n  props: (Data & VNodeProps) | null = null,\r\n  children: unknown = null,\r\n  patchFlag: number = 0,\r\n  dynamicProps: string[] | null = null,\r\n  isBlockNode = false\r\n): VNode {\r\n  if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n    if (__DEV__ && !type) {\r\n      warn(`Invalid vnode type when creating vnode: ${type}.`)\r\n    }\r\n    type = Comment\r\n  }\r\n\r\n  if (isVNode(type)) {\r\n    // createVNode receiving an existing vnode. This happens in cases like\r\n    // <component :is=\"vnode\"/>\r\n    // #2078 make sure to merge refs during the clone instead of overwriting it\r\n    const cloned = cloneVNode(type, props, true /* mergeRef: true */)\r\n    if (children) {\r\n      normalizeChildren(cloned, children)\r\n    }\r\n    if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {\r\n      if (cloned.shapeFlag & ShapeFlags.COMPONENT) {\r\n        currentBlock[currentBlock.indexOf(type)] = cloned\r\n      } else {\r\n        currentBlock.push(cloned)\r\n      }\r\n    }\r\n    cloned.patchFlag |= PatchFlags.BAIL\r\n    return cloned\r\n  }\r\n\r\n  // class component normalization.\r\n  if (isClassComponent(type)) {\r\n    type = type.__vccOpts\r\n  }\r\n\r\n  // 2.x async/functional component compat\r\n  if (__COMPAT__) {\r\n    type = convertLegacyComponent(type, currentRenderingInstance)\r\n  }\r\n\r\n  // class & style normalization.\r\n  if (props) {\r\n    // for reactive or proxy objects, we need to clone it to enable mutation.\r\n    props = guardReactiveProps(props)!\r\n    let { class: klass, style } = props\r\n    if (klass && !isString(klass)) {\r\n      props.class = normalizeClass(klass)\r\n    }\r\n    if (isObject(style)) {\r\n      // reactive state objects need to be cloned since they are likely to be\r\n      // mutated\r\n      if (isProxy(style) && !isArray(style)) {\r\n        style = extend({}, style)\r\n      }\r\n      props.style = normalizeStyle(style)\r\n    }\r\n  }\r\n\r\n  // encode the vnode type information into a bitmap\r\n  const shapeFlag = isString(type)\r\n    ? ShapeFlags.ELEMENT\r\n    : __FEATURE_SUSPENSE__ && isSuspense(type)\r\n    ? ShapeFlags.SUSPENSE\r\n    : isTeleport(type)\r\n    ? ShapeFlags.TELEPORT\r\n    : isObject(type)\r\n    ? ShapeFlags.STATEFUL_COMPONENT\r\n    : isFunction(type)\r\n    ? ShapeFlags.FUNCTIONAL_COMPONENT\r\n    : 0\r\n\r\n  if (__DEV__ && shapeFlag & ShapeFlags.STATEFUL_COMPONENT && isProxy(type)) {\r\n    type = toRaw(type)\r\n    warn(\r\n      `Vue received a Component which was made a reactive object. This can ` +\r\n        `lead to unnecessary performance overhead, and should be avoided by ` +\r\n        `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n        `instead of \\`ref\\`.`,\r\n      `\\nComponent that was made reactive: `,\r\n      type\r\n    )\r\n  }\r\n\r\n  return createBaseVNode(\r\n    type,\r\n    props,\r\n    children,\r\n    patchFlag,\r\n    dynamicProps,\r\n    shapeFlag,\r\n    isBlockNode,\r\n    true\r\n  )\r\n}\r\n\r\nexport function guardReactiveProps(props: (Data & VNodeProps) | null) {\r\n  if (!props) return null\r\n  return isProxy(props) || InternalObjectKey in props\r\n    ? extend({}, props)\r\n    : props\r\n}\r\n\r\nexport function cloneVNode<T, U>(\r\n  vnode: VNode<T, U>,\r\n  extraProps?: (Data & VNodeProps) | null,\r\n  mergeRef = false\r\n): VNode<T, U> {\r\n  // This is intentionally NOT using spread or extend to avoid the runtime\r\n  // key enumeration cost.\r\n  const { props, ref, patchFlag, children } = vnode\r\n  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props\r\n  const cloned: VNode = {\r\n    __v_isVNode: true,\r\n    __v_skip: true,\r\n    type: vnode.type,\r\n    props: mergedProps,\r\n    key: mergedProps && normalizeKey(mergedProps),\r\n    ref:\r\n      extraProps && extraProps.ref\r\n        ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n          // if the vnode itself already has a ref, cloneVNode will need to merge\r\n          // the refs so the single vnode can be set on multiple refs\r\n          mergeRef && ref\r\n          ? isArray(ref)\r\n            ? ref.concat(normalizeRef(extraProps)!)\r\n            : [ref, normalizeRef(extraProps)!]\r\n          : normalizeRef(extraProps)\r\n        : ref,\r\n    scopeId: vnode.scopeId,\r\n    slotScopeIds: vnode.slotScopeIds,\r\n    children:\r\n      __DEV__ && patchFlag === PatchFlags.HOISTED && isArray(children)\r\n        ? (children as VNode[]).map(deepCloneVNode)\r\n        : children,\r\n    target: vnode.target,\r\n    targetAnchor: vnode.targetAnchor,\r\n    staticCount: vnode.staticCount,\r\n    shapeFlag: vnode.shapeFlag,\r\n    // if the vnode is cloned with extra props, we can no longer assume its\r\n    // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n    // note: preserve flag for fragments since they use the flag for children\r\n    // fast paths only.\r\n    patchFlag:\r\n      extraProps && vnode.type !== Fragment\r\n        ? patchFlag === -1 // hoisted node\r\n          ? PatchFlags.FULL_PROPS\r\n          : patchFlag | PatchFlags.FULL_PROPS\r\n        : patchFlag,\r\n    dynamicProps: vnode.dynamicProps,\r\n    dynamicChildren: vnode.dynamicChildren,\r\n    appContext: vnode.appContext,\r\n    dirs: vnode.dirs,\r\n    transition: vnode.transition,\r\n\r\n    // These should technically only be non-null on mounted VNodes. However,\r\n    // they *should* be copied for kept-alive vnodes. So we just always copy\r\n    // them since them being non-null during a mount doesn't affect the logic as\r\n    // they will simply be overwritten.\r\n    component: vnode.component,\r\n    suspense: vnode.suspense,\r\n    ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n    ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n    el: vnode.el,\r\n    anchor: vnode.anchor\r\n  }\r\n  if (__COMPAT__) {\r\n    defineLegacyVNodeProperties(cloned)\r\n  }\r\n  return cloned as any\r\n}\r\n\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode: VNode): VNode {\r\n  const cloned = cloneVNode(vnode)\r\n  if (isArray(vnode.children)) {\r\n    cloned.children = (vnode.children as VNode[]).map(deepCloneVNode)\r\n  }\r\n  return cloned\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createTextVNode(text: string = ' ', flag: number = 0): VNode {\r\n  return createVNode(Text, null, text, flag)\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createStaticVNode(\r\n  content: string,\r\n  numberOfNodes: number\r\n): VNode {\r\n  // A static vnode can contain multiple stringified elements, and the number\r\n  // of elements is necessary for hydration.\r\n  const vnode = createVNode(Static, null, content)\r\n  vnode.staticCount = numberOfNodes\r\n  return vnode\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createCommentVNode(\r\n  text: string = '',\r\n  // when used as the v-else branch, the comment node must be created as a\r\n  // block to ensure correct updates.\r\n  asBlock: boolean = false\r\n): VNode {\r\n  return asBlock\r\n    ? (openBlock(), createBlock(Comment, null, text))\r\n    : createVNode(Comment, null, text)\r\n}\r\n\r\nexport function normalizeVNode(child: VNodeChild): VNode {\r\n  if (child == null || typeof child === 'boolean') {\r\n    // empty placeholder\r\n    return createVNode(Comment)\r\n  } else if (isArray(child)) {\r\n    // fragment\r\n    return createVNode(\r\n      Fragment,\r\n      null,\r\n      // #3666, avoid reference pollution when reusing vnode\r\n      child.slice()\r\n    )\r\n  } else if (typeof child === 'object') {\r\n    // already vnode, this should be the most common since compiled templates\r\n    // always produce all-vnode children arrays\r\n    return cloneIfMounted(child)\r\n  } else {\r\n    // strings and numbers\r\n    return createVNode(Text, null, String(child))\r\n  }\r\n}\r\n\r\n// optimized normalization for template-compiled render fns\r\nexport function cloneIfMounted(child: VNode): VNode {\r\n  return child.el === null || child.memo ? child : cloneVNode(child)\r\n}\r\n\r\nexport function normalizeChildren(vnode: VNode, children: unknown) {\r\n  let type = 0\r\n  const { shapeFlag } = vnode\r\n  if (children == null) {\r\n    children = null\r\n  } else if (isArray(children)) {\r\n    type = ShapeFlags.ARRAY_CHILDREN\r\n  } else if (typeof children === 'object') {\r\n    if (shapeFlag & (ShapeFlags.ELEMENT | ShapeFlags.TELEPORT)) {\r\n      // Normalize slot to plain children for plain element and Teleport\r\n      const slot = (children as any).default\r\n      if (slot) {\r\n        // _c marker is added by withCtx() indicating this is a compiled slot\r\n        slot._c && (slot._d = false)\r\n        normalizeChildren(vnode, slot())\r\n        slot._c && (slot._d = true)\r\n      }\r\n      return\r\n    } else {\r\n      type = ShapeFlags.SLOTS_CHILDREN\r\n      const slotFlag = (children as RawSlots)._\r\n      if (!slotFlag && !(InternalObjectKey in children!)) {\r\n        // if slots are not normalized, attach context instance\r\n        // (compiled / normalized slots already have context)\r\n        ;(children as RawSlots)._ctx = currentRenderingInstance\r\n      } else if (slotFlag === SlotFlags.FORWARDED && currentRenderingInstance) {\r\n        // a child component receives forwarded slots from the parent.\r\n        // its slot type is determined by its parent's slot type.\r\n        if (\r\n          (currentRenderingInstance.slots as RawSlots)._ === SlotFlags.STABLE\r\n        ) {\r\n          ;(children as RawSlots)._ = SlotFlags.STABLE\r\n        } else {\r\n          ;(children as RawSlots)._ = SlotFlags.DYNAMIC\r\n          vnode.patchFlag |= PatchFlags.DYNAMIC_SLOTS\r\n        }\r\n      }\r\n    }\r\n  } else if (isFunction(children)) {\r\n    children = { default: children, _ctx: currentRenderingInstance }\r\n    type = ShapeFlags.SLOTS_CHILDREN\r\n  } else {\r\n    children = String(children)\r\n    // force teleport children to array so it can be moved around\r\n    if (shapeFlag & ShapeFlags.TELEPORT) {\r\n      type = ShapeFlags.ARRAY_CHILDREN\r\n      children = [createTextVNode(children as string)]\r\n    } else {\r\n      type = ShapeFlags.TEXT_CHILDREN\r\n    }\r\n  }\r\n  vnode.children = children as VNodeNormalizedChildren\r\n  vnode.shapeFlag |= type\r\n}\r\n\r\nexport function mergeProps(...args: (Data & VNodeProps)[]) {\r\n  const ret: Data = {}\r\n  for (let i = 0; i < args.length; i++) {\r\n    const toMerge = args[i]\r\n    for (const key in toMerge) {\r\n      if (key === 'class') {\r\n        if (ret.class !== toMerge.class) {\r\n          ret.class = normalizeClass([ret.class, toMerge.class])\r\n        }\r\n      } else if (key === 'style') {\r\n        ret.style = normalizeStyle([ret.style, toMerge.style])\r\n      } else if (isOn(key)) {\r\n        const existing = ret[key]\r\n        const incoming = toMerge[key]\r\n        if (\r\n          incoming &&\r\n          existing !== incoming &&\r\n          !(isArray(existing) && existing.includes(incoming))\r\n        ) {\r\n          ret[key] = existing\r\n            ? [].concat(existing as any, incoming as any)\r\n            : incoming\r\n        }\r\n      } else if (key !== '') {\r\n        ret[key] = toMerge[key]\r\n      }\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\nexport function invokeVNodeHook(\r\n  hook: VNodeHook,\r\n  instance: ComponentInternalInstance | null,\r\n  vnode: VNode,\r\n  prevVNode: VNode | null = null\r\n) {\r\n  callWithAsyncErrorHandling(hook, instance, ErrorCodes.VNODE_HOOK, [\r\n    vnode,\r\n    prevVNode\r\n  ])\r\n}\r\n","import { computed as _computed } from '@vue/reactivity'\r\nimport { isInSSRComponentSetup } from './component'\r\n\r\nexport const computed = ((getterOrOptions: any, debugOptions?: any) => {\r\n  // @ts-ignore\r\n  return _computed(getterOrOptions, debugOptions, isInSSRComponentSetup)\r\n}) as typeof _computed\r\n","import { ComponentPropsOptions } from '@vue/runtime-core'\r\nimport { isArray, isPromise, isFunction } from '@vue/shared'\r\nimport {\r\n  getCurrentInstance,\r\n  setCurrentInstance,\r\n  SetupContext,\r\n  createSetupContext,\r\n  unsetCurrentInstance\r\n} from './component'\r\nimport { EmitFn, EmitsOptions } from './componentEmits'\r\nimport { ComponentObjectPropsOptions, ExtractPropTypes } from './componentProps'\r\nimport { warn } from './warning'\r\n\r\n// dev only\r\nconst warnRuntimeUsage = (method: string) =>\r\n  warn(\r\n    `${method}() is a compiler-hint helper that is only usable inside ` +\r\n      `<script setup> of a single file component. Its arguments should be ` +\r\n      `compiled away and passing it at runtime has no effect.`\r\n  )\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring component props. The\r\n * expected argument is the same as the component `props` option.\r\n *\r\n * Example runtime declaration:\r\n * ```js\r\n * // using Array syntax\r\n * const props = defineProps(['foo', 'bar'])\r\n * // using Object syntax\r\n * const props = defineProps({\r\n *   foo: String,\r\n *   bar: {\r\n *     type: Number,\r\n *     required: true\r\n *   }\r\n * })\r\n * ```\r\n *\r\n * Equivalent type-based declaration:\r\n * ```ts\r\n * // will be compiled into equivalent runtime declarations\r\n * const props = defineProps<{\r\n *   foo?: string\r\n *   bar: number\r\n * }>()\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\n// overload 1: runtime props w/ array\r\nexport function defineProps<PropNames extends string = string>(\r\n  props: PropNames[]\r\n): Readonly<{ [key in PropNames]?: any }>\r\n// overload 2: runtime props w/ object\r\nexport function defineProps<\r\n  PP extends ComponentObjectPropsOptions = ComponentObjectPropsOptions\r\n>(props: PP): Readonly<ExtractPropTypes<PP>>\r\n// overload 3: typed-based declaration\r\nexport function defineProps<TypeProps>(): Readonly<TypeProps>\r\n// implementation\r\nexport function defineProps() {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`defineProps`)\r\n  }\r\n  return null as any\r\n}\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's emitted\r\n * events. The expected argument is the same as the component `emits` option.\r\n *\r\n * Example runtime declaration:\r\n * ```js\r\n * const emit = defineEmits(['change', 'update'])\r\n * ```\r\n *\r\n * Example type-based declaration:\r\n * ```ts\r\n * const emit = defineEmits<{\r\n *   (event: 'change'): void\r\n *   (event: 'update', id: number): void\r\n * }>()\r\n *\r\n * emit('change')\r\n * emit('update', 1)\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\n// overload 1: runtime emits w/ array\r\nexport function defineEmits<EE extends string = string>(\r\n  emitOptions: EE[]\r\n): EmitFn<EE[]>\r\nexport function defineEmits<E extends EmitsOptions = EmitsOptions>(\r\n  emitOptions: E\r\n): EmitFn<E>\r\nexport function defineEmits<TypeEmit>(): TypeEmit\r\n// implementation\r\nexport function defineEmits() {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`defineEmits`)\r\n  }\r\n  return null as any\r\n}\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's exposed\r\n * instance properties when it is accessed by a parent component via template\r\n * refs.\r\n *\r\n * `<script setup>` components are closed by default - i.e. variables inside\r\n * the `<script setup>` scope is not exposed to parent unless explicitly exposed\r\n * via `defineExpose`.\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\nexport function defineExpose<\r\n  Exposed extends Record<string, any> = Record<string, any>\r\n>(exposed?: Exposed) {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`defineExpose`)\r\n  }\r\n}\r\n\r\ntype NotUndefined<T> = T extends undefined ? never : T\r\n\r\ntype InferDefaults<T> = {\r\n  [K in keyof T]?: InferDefault<T, NotUndefined<T[K]>>\r\n}\r\n\r\ntype InferDefault<P, T> = T extends\r\n  | null\r\n  | number\r\n  | string\r\n  | boolean\r\n  | symbol\r\n  | Function\r\n  ? T | ((props: P) => T)\r\n  : (props: P) => T\r\n\r\ntype PropsWithDefaults<Base, Defaults> = Base & {\r\n  [K in keyof Defaults]: K extends keyof Base ? NotUndefined<Base[K]> : never\r\n}\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for providing props default values when\r\n * using type-based `defineProps` declaration.\r\n *\r\n * Example usage:\r\n * ```ts\r\n * withDefaults(defineProps<{\r\n *   size?: number\r\n *   labels?: string[]\r\n * }>(), {\r\n *   size: 3,\r\n *   labels: () => ['default label']\r\n * })\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the output\r\n * and should **not** be actually called at runtime.\r\n */\r\nexport function withDefaults<Props, Defaults extends InferDefaults<Props>>(\r\n  props: Props,\r\n  defaults: Defaults\r\n): PropsWithDefaults<Props, Defaults> {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`withDefaults`)\r\n  }\r\n  return null as any\r\n}\r\n\r\nexport function useSlots(): SetupContext['slots'] {\r\n  return getContext().slots\r\n}\r\n\r\nexport function useAttrs(): SetupContext['attrs'] {\r\n  return getContext().attrs\r\n}\r\n\r\nfunction getContext(): SetupContext {\r\n  const i = getCurrentInstance()!\r\n  if (__DEV__ && !i) {\r\n    warn(`useContext() called without active instance.`)\r\n  }\r\n  return i.setupContext || (i.setupContext = createSetupContext(i))\r\n}\r\n\r\n/**\r\n * Runtime helper for merging default declarations. Imported by compiled code\r\n * only.\r\n * @internal\r\n */\r\nexport function mergeDefaults(\r\n  raw: ComponentPropsOptions,\r\n  defaults: Record<string, any>\r\n): ComponentObjectPropsOptions {\r\n  const props = isArray(raw)\r\n    ? raw.reduce(\r\n        (normalized, p) => ((normalized[p] = {}), normalized),\r\n        {} as ComponentObjectPropsOptions\r\n      )\r\n    : raw\r\n  for (const key in defaults) {\r\n    const opt = props[key]\r\n    if (opt) {\r\n      if (isArray(opt) || isFunction(opt)) {\r\n        props[key] = { type: opt, default: defaults[key] }\r\n      } else {\r\n        opt.default = defaults[key]\r\n      }\r\n    } else if (opt === null) {\r\n      props[key] = { default: defaults[key] }\r\n    } else if (__DEV__) {\r\n      warn(`props default key \"${key}\" has no corresponding declaration.`)\r\n    }\r\n  }\r\n  return props\r\n}\r\n\r\n/**\r\n * Used to create a proxy for the rest element when destructuring props with\r\n * defineProps().\r\n * @internal\r\n */\r\nexport function createPropsRestProxy(\r\n  props: any,\r\n  excludedKeys: string[]\r\n): Record<string, any> {\r\n  const ret: Record<string, any> = {}\r\n  for (const key in props) {\r\n    if (!excludedKeys.includes(key)) {\r\n      Object.defineProperty(ret, key, {\r\n        enumerable: true,\r\n        get: () => props[key]\r\n      })\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\n/**\r\n * `<script setup>` helper for persisting the current instance context over\r\n * async/await flows.\r\n *\r\n * `@vue/compiler-sfc` converts the following:\r\n *\r\n * ```ts\r\n * const x = await foo()\r\n * ```\r\n *\r\n * into:\r\n *\r\n * ```ts\r\n * let __temp, __restore\r\n * const x = (([__temp, __restore] = withAsyncContext(() => foo())),__temp=await __temp,__restore(),__temp)\r\n * ```\r\n * @internal\r\n */\r\nexport function withAsyncContext(getAwaitable: () => any) {\r\n  const ctx = getCurrentInstance()!\r\n  if (__DEV__ && !ctx) {\r\n    warn(\r\n      `withAsyncContext called without active current instance. ` +\r\n        `This is likely a bug.`\r\n    )\r\n  }\r\n  let awaitable = getAwaitable()\r\n  unsetCurrentInstance()\r\n  if (isPromise(awaitable)) {\r\n    awaitable = awaitable.catch(e => {\r\n      setCurrentInstance(ctx)\r\n      throw e\r\n    })\r\n  }\r\n  return [awaitable, () => setCurrentInstance(ctx)]\r\n}\r\n","import {\r\n  VNode,\r\n  VNodeProps,\r\n  createVNode,\r\n  VNodeArrayChildren,\r\n  Fragment,\r\n  Text,\r\n  Comment,\r\n  isVNode\r\n} from './vnode'\r\nimport { Teleport, TeleportProps } from './components/Teleport'\r\nimport { Suspense, SuspenseProps } from './components/Suspense'\r\nimport { isObject, isArray } from '@vue/shared'\r\nimport { RawSlots } from './componentSlots'\r\nimport {\r\n  FunctionalComponent,\r\n  Component,\r\n  ComponentOptions,\r\n  ConcreteComponent\r\n} from './component'\r\nimport { EmitsOptions } from './componentEmits'\r\nimport { DefineComponent } from './apiDefineComponent'\r\n\r\n// `h` is a more user-friendly version of `createVNode` that allows omitting the\r\n// props when possible. It is intended for manually written render functions.\r\n// Compiler-generated code uses `createVNode` because\r\n// 1. it is monomorphic and avoids the extra call overhead\r\n// 2. it allows specifying patchFlags for optimization\r\n\r\n/*\r\n// type only\r\nh('div')\r\n\r\n// type + props\r\nh('div', {})\r\n\r\n// type + omit props + children\r\n// Omit props does NOT support named slots\r\nh('div', []) // array\r\nh('div', 'foo') // text\r\nh('div', h('br')) // vnode\r\nh(Component, () => {}) // default slot\r\n\r\n// type + props + children\r\nh('div', {}, []) // array\r\nh('div', {}, 'foo') // text\r\nh('div', {}, h('br')) // vnode\r\nh(Component, {}, () => {}) // default slot\r\nh(Component, {}, {}) // named slots\r\n\r\n// named slots without props requires explicit `null` to avoid ambiguity\r\nh(Component, null, {})\r\n**/\r\n\r\ntype RawProps = VNodeProps & {\r\n  // used to differ from a single VNode object as children\r\n  __v_isVNode?: never\r\n  // used to differ from Array children\r\n  [Symbol.iterator]?: never\r\n} & Record<string, any>\r\n\r\ntype RawChildren =\r\n  | string\r\n  | number\r\n  | boolean\r\n  | VNode\r\n  | VNodeArrayChildren\r\n  | (() => any)\r\n\r\n// fake constructor type returned from `defineComponent`\r\ninterface Constructor<P = any> {\r\n  __isFragment?: never\r\n  __isTeleport?: never\r\n  __isSuspense?: never\r\n  new (...args: any[]): { $props: P }\r\n}\r\n\r\n// The following is a series of overloads for providing props validation of\r\n// manually written render functions.\r\n\r\n// element\r\nexport function h(type: string, children?: RawChildren): VNode\r\nexport function h(\r\n  type: string,\r\n  props?: RawProps | null,\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// text/comment\r\nexport function h(\r\n  type: typeof Text | typeof Comment,\r\n  children?: string | number | boolean\r\n): VNode\r\nexport function h(\r\n  type: typeof Text | typeof Comment,\r\n  props?: null,\r\n  children?: string | number | boolean\r\n): VNode\r\n// fragment\r\nexport function h(type: typeof Fragment, children?: VNodeArrayChildren): VNode\r\nexport function h(\r\n  type: typeof Fragment,\r\n  props?: RawProps | null,\r\n  children?: VNodeArrayChildren\r\n): VNode\r\n\r\n// teleport (target prop is required)\r\nexport function h(\r\n  type: typeof Teleport,\r\n  props: RawProps & TeleportProps,\r\n  children: RawChildren\r\n): VNode\r\n\r\n// suspense\r\nexport function h(type: typeof Suspense, children?: RawChildren): VNode\r\nexport function h(\r\n  type: typeof Suspense,\r\n  props?: (RawProps & SuspenseProps) | null,\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// functional component\r\nexport function h<P, E extends EmitsOptions = {}>(\r\n  type: FunctionalComponent<P, E>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// catch-all for generic component types\r\nexport function h(type: Component, children?: RawChildren): VNode\r\n\r\n// concrete component\r\nexport function h<P>(\r\n  type: ConcreteComponent | string,\r\n  children?: RawChildren\r\n): VNode\r\nexport function h<P>(\r\n  type: ConcreteComponent<P> | string,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren\r\n): VNode\r\n\r\n// component without props\r\nexport function h(\r\n  type: Component,\r\n  props: null,\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// exclude `defineComponent` constructors\r\nexport function h<P>(\r\n  type: ComponentOptions<P>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// fake constructor type returned by `defineComponent` or class component\r\nexport function h(type: Constructor, children?: RawChildren): VNode\r\nexport function h<P>(\r\n  type: Constructor<P>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// fake constructor type returned by `defineComponent`\r\nexport function h(type: DefineComponent, children?: RawChildren): VNode\r\nexport function h<P>(\r\n  type: DefineComponent<P>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots\r\n): VNode\r\n\r\n// Actual implementation\r\nexport function h(type: any, propsOrChildren?: any, children?: any): VNode {\r\n  const l = arguments.length\r\n  if (l === 2) {\r\n    if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n      // single vnode without props\r\n      if (isVNode(propsOrChildren)) {\r\n        return createVNode(type, null, [propsOrChildren])\r\n      }\r\n      // props without children\r\n      return createVNode(type, propsOrChildren)\r\n    } else {\r\n      // omit props\r\n      return createVNode(type, null, propsOrChildren)\r\n    }\r\n  } else {\r\n    if (l > 3) {\r\n      children = Array.prototype.slice.call(arguments, 2)\r\n    } else if (l === 3 && isVNode(children)) {\r\n      children = [children]\r\n    }\r\n    return createVNode(type, propsOrChildren, children)\r\n  }\r\n}\r\n","import { inject } from '../apiInject'\r\nimport { warn } from '../warning'\r\n\r\nexport const ssrContextKey = Symbol(__DEV__ ? `ssrContext` : ``)\r\n\r\nexport const useSSRContext = <T = Record<string, any>>() => {\r\n  if (!__GLOBAL__) {\r\n    const ctx = inject<T>(ssrContextKey)\r\n    if (!ctx) {\r\n      warn(\r\n        `Server rendering context not provided. Make sure to only call ` +\r\n          `useSSRContext() conditionally in the server build.`\r\n      )\r\n    }\r\n    return ctx\r\n  } else if (__DEV__) {\r\n    warn(`useSSRContext() is not supported in the global build.`)\r\n  }\r\n}\r\n","import { isReactive, isReadonly, isRef, Ref, toRaw } from '@vue/reactivity'\r\nimport { EMPTY_OBJ, extend, isArray, isFunction, isObject } from '@vue/shared'\r\nimport { isShallow } from '../../reactivity/src/reactive'\r\nimport { ComponentInternalInstance, ComponentOptions } from './component'\r\nimport { ComponentPublicInstance } from './componentPublicInstance'\r\n\r\nexport function initCustomFormatter() {\r\n  /* eslint-disable no-restricted-globals */\r\n  if (!__DEV__ || typeof window === 'undefined') {\r\n    return\r\n  }\r\n\r\n  const vueStyle = { style: 'color:#3ba776' }\r\n  const numberStyle = { style: 'color:#0b1bc9' }\r\n  const stringStyle = { style: 'color:#b62e24' }\r\n  const keywordStyle = { style: 'color:#9d288c' }\r\n\r\n  // custom formatter for Chrome\r\n  // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n  const formatter = {\r\n    header(obj: unknown) {\r\n      // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n      if (!isObject(obj)) {\r\n        return null\r\n      }\r\n\r\n      if (obj.__isVue) {\r\n        return ['div', vueStyle, `VueInstance`]\r\n      } else if (isRef(obj)) {\r\n        return [\r\n          'div',\r\n          {},\r\n          ['span', vueStyle, genRefFlag(obj)],\r\n          '<',\r\n          formatValue(obj.value),\r\n          `>`\r\n        ]\r\n      } else if (isReactive(obj)) {\r\n        return [\r\n          'div',\r\n          {},\r\n          ['span', vueStyle, isShallow(obj) ? 'ShallowReactive' : 'Reactive'],\r\n          '<',\r\n          formatValue(obj),\r\n          `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n        ]\r\n      } else if (isReadonly(obj)) {\r\n        return [\r\n          'div',\r\n          {},\r\n          ['span', vueStyle, isShallow(obj) ? 'ShallowReadonly' : 'Readonly'],\r\n          '<',\r\n          formatValue(obj),\r\n          '>'\r\n        ]\r\n      }\r\n      return null\r\n    },\r\n    hasBody(obj: unknown) {\r\n      return obj && (obj as any).__isVue\r\n    },\r\n    body(obj: unknown) {\r\n      if (obj && (obj as any).__isVue) {\r\n        return [\r\n          'div',\r\n          {},\r\n          ...formatInstance((obj as ComponentPublicInstance).$)\r\n        ]\r\n      }\r\n    }\r\n  }\r\n\r\n  function formatInstance(instance: ComponentInternalInstance) {\r\n    const blocks = []\r\n    if (instance.type.props && instance.props) {\r\n      blocks.push(createInstanceBlock('props', toRaw(instance.props)))\r\n    }\r\n    if (instance.setupState !== EMPTY_OBJ) {\r\n      blocks.push(createInstanceBlock('setup', instance.setupState))\r\n    }\r\n    if (instance.data !== EMPTY_OBJ) {\r\n      blocks.push(createInstanceBlock('data', toRaw(instance.data)))\r\n    }\r\n    const computed = extractKeys(instance, 'computed')\r\n    if (computed) {\r\n      blocks.push(createInstanceBlock('computed', computed))\r\n    }\r\n    const injected = extractKeys(instance, 'inject')\r\n    if (injected) {\r\n      blocks.push(createInstanceBlock('injected', injected))\r\n    }\r\n\r\n    blocks.push([\r\n      'div',\r\n      {},\r\n      [\r\n        'span',\r\n        {\r\n          style: keywordStyle.style + ';opacity:0.66'\r\n        },\r\n        '$ (internal): '\r\n      ],\r\n      ['object', { object: instance }]\r\n    ])\r\n    return blocks\r\n  }\r\n\r\n  function createInstanceBlock(type: string, target: any) {\r\n    target = extend({}, target)\r\n    if (!Object.keys(target).length) {\r\n      return ['span', {}]\r\n    }\r\n    return [\r\n      'div',\r\n      { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n      [\r\n        'div',\r\n        {\r\n          style: 'color:#476582'\r\n        },\r\n        type\r\n      ],\r\n      [\r\n        'div',\r\n        {\r\n          style: 'padding-left:1.25em'\r\n        },\r\n        ...Object.keys(target).map(key => {\r\n          return [\r\n            'div',\r\n            {},\r\n            ['span', keywordStyle, key + ': '],\r\n            formatValue(target[key], false)\r\n          ]\r\n        })\r\n      ]\r\n    ]\r\n  }\r\n\r\n  function formatValue(v: unknown, asRaw = true) {\r\n    if (typeof v === 'number') {\r\n      return ['span', numberStyle, v]\r\n    } else if (typeof v === 'string') {\r\n      return ['span', stringStyle, JSON.stringify(v)]\r\n    } else if (typeof v === 'boolean') {\r\n      return ['span', keywordStyle, v]\r\n    } else if (isObject(v)) {\r\n      return ['object', { object: asRaw ? toRaw(v) : v }]\r\n    } else {\r\n      return ['span', stringStyle, String(v)]\r\n    }\r\n  }\r\n\r\n  function extractKeys(instance: ComponentInternalInstance, type: string) {\r\n    const Comp = instance.type\r\n    if (isFunction(Comp)) {\r\n      return\r\n    }\r\n    const extracted: Record<string, any> = {}\r\n    for (const key in instance.ctx) {\r\n      if (isKeyOfType(Comp, key, type)) {\r\n        extracted[key] = instance.ctx[key]\r\n      }\r\n    }\r\n    return extracted\r\n  }\r\n\r\n  function isKeyOfType(Comp: ComponentOptions, key: string, type: string) {\r\n    const opts = Comp[type]\r\n    if (\r\n      (isArray(opts) && opts.includes(key)) ||\r\n      (isObject(opts) && key in opts)\r\n    ) {\r\n      return true\r\n    }\r\n    if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n      return true\r\n    }\r\n    if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  function genRefFlag(v: Ref) {\r\n    if (isShallow(v)) {\r\n      return `ShallowRef`\r\n    }\r\n    if ((v as any).effect) {\r\n      return `ComputedRef`\r\n    }\r\n    return `Ref`\r\n  }\r\n\r\n  if ((window as any).devtoolsFormatters) {\r\n    ;(window as any).devtoolsFormatters.push(formatter)\r\n  } else {\r\n    ;(window as any).devtoolsFormatters = [formatter]\r\n  }\r\n}\r\n","import { hasChanged } from '@vue/shared'\r\nimport { currentBlock, isBlockTreeEnabled, VNode } from '../vnode'\r\n\r\nexport function withMemo(\r\n  memo: any[],\r\n  render: () => VNode<any, any>,\r\n  cache: any[],\r\n  index: number\r\n) {\r\n  const cached = cache[index] as VNode | undefined\r\n  if (cached && isMemoSame(cached, memo)) {\r\n    return cached\r\n  }\r\n  const ret = render()\r\n\r\n  // shallow clone\r\n  ret.memo = memo.slice()\r\n  return (cache[index] = ret)\r\n}\r\n\r\nexport function isMemoSame(cached: VNode, memo: any[]) {\r\n  const prev: any[] = cached.memo!\r\n  if (prev.length != memo.length) {\r\n    return false\r\n  }\r\n  \r\n  for (let i = 0; i < prev.length; i++) {\r\n    if (hasChanged(prev[i], memo[i])) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // make sure to let parent block track it when returning cached\r\n  if (isBlockTreeEnabled > 0 && currentBlock) {\r\n    currentBlock.push(cached)\r\n  }\r\n  return true\r\n}\r\n","// Core API ------------------------------------------------------------------\r\n\r\nexport const version = __VERSION__\r\nexport {\r\n  // core\r\n  reactive,\r\n  ref,\r\n  readonly,\r\n  // utilities\r\n  unref,\r\n  proxyRefs,\r\n  isRef,\r\n  toRef,\r\n  toRefs,\r\n  isProxy,\r\n  isReactive,\r\n  isReadonly,\r\n  isShallow,\r\n  // advanced\r\n  customRef,\r\n  triggerRef,\r\n  shallowRef,\r\n  shallowReactive,\r\n  shallowReadonly,\r\n  markRaw,\r\n  toRaw,\r\n  // effect\r\n  effect,\r\n  stop,\r\n  ReactiveEffect,\r\n  // effect scope\r\n  effectScope,\r\n  EffectScope,\r\n  getCurrentScope,\r\n  onScopeDispose\r\n} from '@vue/reactivity'\r\nexport { computed } from './apiComputed'\r\nexport {\r\n  watch,\r\n  watchEffect,\r\n  watchPostEffect,\r\n  watchSyncEffect\r\n} from './apiWatch'\r\nexport {\r\n  onBeforeMount,\r\n  onMounted,\r\n  onBeforeUpdate,\r\n  onUpdated,\r\n  onBeforeUnmount,\r\n  onUnmounted,\r\n  onActivated,\r\n  onDeactivated,\r\n  onRenderTracked,\r\n  onRenderTriggered,\r\n  onErrorCaptured,\r\n  onServerPrefetch\r\n} from './apiLifecycle'\r\nexport { provide, inject } from './apiInject'\r\nexport { nextTick } from './scheduler'\r\nexport { defineComponent } from './apiDefineComponent'\r\nexport { defineAsyncComponent } from './apiAsyncComponent'\r\nexport { useAttrs, useSlots } from './apiSetupHelpers'\r\n\r\n// <script setup> API ----------------------------------------------------------\r\n\r\nexport {\r\n  // macros runtime, for typing and warnings only\r\n  defineProps,\r\n  defineEmits,\r\n  defineExpose,\r\n  withDefaults,\r\n  // internal\r\n  mergeDefaults,\r\n  createPropsRestProxy,\r\n  withAsyncContext\r\n} from './apiSetupHelpers'\r\n\r\n// Advanced API ----------------------------------------------------------------\r\n\r\n// For getting a hold of the internal instance in setup() - useful for advanced\r\n// plugins\r\nexport { getCurrentInstance } from './component'\r\n\r\n// For raw render function users\r\nexport { h } from './h'\r\n// Advanced render function utilities\r\nexport { createVNode, cloneVNode, mergeProps, isVNode } from './vnode'\r\n// VNode types\r\nexport { Fragment, Text, Comment, Static, VNodeRef } from './vnode'\r\n// Built-in components\r\nexport { Teleport, TeleportProps } from './components/Teleport'\r\nexport { Suspense, SuspenseProps } from './components/Suspense'\r\nexport { KeepAlive, KeepAliveProps } from './components/KeepAlive'\r\nexport {\r\n  BaseTransition,\r\n  BaseTransitionProps\r\n} from './components/BaseTransition'\r\n// For using custom directives\r\nexport { withDirectives } from './directives'\r\n// SSR context\r\nexport { useSSRContext, ssrContextKey } from './helpers/useSsrContext'\r\n\r\n// Custom Renderer API ---------------------------------------------------------\r\n\r\nexport { createRenderer, createHydrationRenderer } from './renderer'\r\nexport { queuePostFlushCb } from './scheduler'\r\nexport { warn } from './warning'\r\nexport {\r\n  handleError,\r\n  callWithErrorHandling,\r\n  callWithAsyncErrorHandling,\r\n  ErrorCodes\r\n} from './errorHandling'\r\nexport {\r\n  resolveComponent,\r\n  resolveDirective,\r\n  resolveDynamicComponent\r\n} from './helpers/resolveAssets'\r\n// For integration with runtime compiler\r\nexport { registerRuntimeCompiler, isRuntimeOnly } from './component'\r\nexport {\r\n  useTransitionState,\r\n  resolveTransitionHooks,\r\n  setTransitionHooks,\r\n  getTransitionRawChildren\r\n} from './components/BaseTransition'\r\nexport { initCustomFormatter } from './customFormatter'\r\n\r\n// For devtools\r\nexport { devtools, setDevtoolsHook } from './devtools'\r\n\r\n// Types -------------------------------------------------------------------------\r\n\r\nimport { VNode } from './vnode'\r\nimport { ComponentInternalInstance } from './component'\r\n\r\n// Augment Ref unwrap bail types.\r\n// Note: if updating this, also update `types/refBail.d.ts`.\r\ndeclare module '@vue/reactivity' {\r\n  export interface RefUnwrapBailTypes {\r\n    runtimeCoreBailTypes:\r\n      | VNode\r\n      | {\r\n          // directly bailing on ComponentPublicInstance results in recursion\r\n          // so we use this as a bail hint\r\n          $: ComponentInternalInstance\r\n        }\r\n  }\r\n}\r\n\r\nexport {\r\n  Ref,\r\n  ToRef,\r\n  ToRefs,\r\n  UnwrapRef,\r\n  ShallowRef,\r\n  ShallowUnwrapRef,\r\n  CustomRefFactory,\r\n  ReactiveFlags,\r\n  DeepReadonly,\r\n  ShallowReactive,\r\n  UnwrapNestedRefs,\r\n  ComputedRef,\r\n  WritableComputedRef,\r\n  WritableComputedOptions,\r\n  ComputedGetter,\r\n  ComputedSetter,\r\n  ReactiveEffectRunner,\r\n  ReactiveEffectOptions,\r\n  EffectScheduler,\r\n  DebuggerOptions,\r\n  DebuggerEvent,\r\n  DebuggerEventExtraInfo,\r\n  TrackOpTypes,\r\n  TriggerOpTypes\r\n} from '@vue/reactivity'\r\nexport {\r\n  WatchEffect,\r\n  WatchOptions,\r\n  WatchOptionsBase,\r\n  WatchCallback,\r\n  WatchSource,\r\n  WatchStopHandle\r\n} from './apiWatch'\r\nexport { InjectionKey } from './apiInject'\r\nexport {\r\n  App,\r\n  AppConfig,\r\n  AppContext,\r\n  Plugin,\r\n  CreateAppFunction,\r\n  OptionMergeFunction\r\n} from './apiCreateApp'\r\nexport {\r\n  VNode,\r\n  VNodeChild,\r\n  VNodeTypes,\r\n  VNodeProps,\r\n  VNodeArrayChildren,\r\n  VNodeNormalizedChildren\r\n} from './vnode'\r\nexport {\r\n  Component,\r\n  ConcreteComponent,\r\n  FunctionalComponent,\r\n  ComponentInternalInstance,\r\n  SetupContext,\r\n  ComponentCustomProps,\r\n  AllowedComponentProps\r\n} from './component'\r\nexport { DefineComponent } from './apiDefineComponent'\r\nexport {\r\n  ComponentOptions,\r\n  ComponentOptionsMixin,\r\n  ComponentOptionsWithoutProps,\r\n  ComponentOptionsWithObjectProps,\r\n  ComponentOptionsWithArrayProps,\r\n  ComponentCustomOptions,\r\n  ComponentOptionsBase,\r\n  ComponentProvideOptions,\r\n  RenderFunction,\r\n  MethodOptions,\r\n  ComputedOptions,\r\n  RuntimeCompilerOptions\r\n} from './componentOptions'\r\nexport { EmitsOptions, ObjectEmitsOptions } from './componentEmits'\r\nexport {\r\n  ComponentPublicInstance,\r\n  ComponentCustomProperties,\r\n  CreateComponentPublicInstance\r\n} from './componentPublicInstance'\r\nexport {\r\n  Renderer,\r\n  RendererNode,\r\n  RendererElement,\r\n  HydrationRenderer,\r\n  RendererOptions,\r\n  RootRenderFunction\r\n} from './renderer'\r\nexport { RootHydrateFunction } from './hydration'\r\nexport { Slot, Slots } from './componentSlots'\r\nexport {\r\n  Prop,\r\n  PropType,\r\n  ComponentPropsOptions,\r\n  ComponentObjectPropsOptions,\r\n  ExtractPropTypes,\r\n  ExtractDefaultPropTypes\r\n} from './componentProps'\r\nexport {\r\n  Directive,\r\n  DirectiveBinding,\r\n  DirectiveHook,\r\n  ObjectDirective,\r\n  FunctionDirective,\r\n  DirectiveArguments\r\n} from './directives'\r\nexport { SuspenseBoundary } from './components/Suspense'\r\nexport { TransitionState, TransitionHooks } from './components/BaseTransition'\r\nexport {\r\n  AsyncComponentOptions,\r\n  AsyncComponentLoader\r\n} from './apiAsyncComponent'\r\nexport { HMRRuntime } from './hmr'\r\n\r\n// Internal API ----------------------------------------------------------------\r\n\r\n// **IMPORTANT** Internal APIs may change without notice between versions and\r\n// user code should avoid relying on them.\r\n\r\n// For compiler generated code\r\n// should sync with '@vue/compiler-core/src/runtimeHelpers.ts'\r\nexport {\r\n  withCtx,\r\n  pushScopeId,\r\n  popScopeId,\r\n  withScopeId\r\n} from './componentRenderContext'\r\nexport { renderList } from './helpers/renderList'\r\nexport { toHandlers } from './helpers/toHandlers'\r\nexport { renderSlot } from './helpers/renderSlot'\r\nexport { createSlots } from './helpers/createSlots'\r\nexport { withMemo, isMemoSame } from './helpers/withMemo'\r\nexport {\r\n  openBlock,\r\n  createBlock,\r\n  setBlockTracking,\r\n  createTextVNode,\r\n  createCommentVNode,\r\n  createStaticVNode,\r\n  createElementVNode,\r\n  createElementBlock,\r\n  guardReactiveProps\r\n} from './vnode'\r\nexport {\r\n  toDisplayString,\r\n  camelize,\r\n  capitalize,\r\n  toHandlerKey,\r\n  normalizeProps,\r\n  normalizeClass,\r\n  normalizeStyle\r\n} from '@vue/shared'\r\n\r\n// For test-utils\r\nexport { transformVNodeArgs } from './vnode'\r\n\r\n// SSR -------------------------------------------------------------------------\r\n\r\n// **IMPORTANT** These APIs are exposed solely for @vue/server-renderer and may\r\n// change without notice between versions. User code should never rely on them.\r\n\r\nimport { createComponentInstance, setupComponent } from './component'\r\nimport { renderComponentRoot } from './componentRenderUtils'\r\nimport { setCurrentRenderingInstance } from './componentRenderContext'\r\nimport { isVNode, normalizeVNode } from './vnode'\r\n\r\nconst _ssrUtils = {\r\n  createComponentInstance,\r\n  setupComponent,\r\n  renderComponentRoot,\r\n  setCurrentRenderingInstance,\r\n  isVNode,\r\n  normalizeVNode\r\n}\r\n\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in ssr-possible builds.\r\n * @internal\r\n */\r\nexport const ssrUtils = (__SSR__ ? _ssrUtils : null) as typeof _ssrUtils\r\n\r\n// 2.x COMPAT ------------------------------------------------------------------\r\n\r\nexport { DeprecationTypes } from './compat/compatConfig'\r\nexport { CompatVue } from './compat/global'\r\nexport { LegacyConfig } from './compat/globalConfig'\r\n\r\nimport { warnDeprecation } from './compat/compatConfig'\r\nimport { createCompatVue } from './compat/global'\r\nimport {\r\n  isCompatEnabled,\r\n  checkCompatEnabled,\r\n  softAssertCompatEnabled\r\n} from './compat/compatConfig'\r\nimport { resolveFilter as _resolveFilter } from './helpers/resolveAssets'\r\n\r\n/**\r\n * @internal only exposed in compat builds\r\n */\r\nexport const resolveFilter = __COMPAT__ ? _resolveFilter : null\r\n\r\nconst _compatUtils = {\r\n  warnDeprecation,\r\n  createCompatVue,\r\n  isCompatEnabled,\r\n  checkCompatEnabled,\r\n  softAssertCompatEnabled\r\n}\r\n\r\n/**\r\n * @internal only exposed in compat builds.\r\n */\r\nexport const compatUtils = (\r\n  __COMPAT__ ? _compatUtils : null\r\n) as typeof _compatUtils\r\n","import { RendererOptions } from '@vue/runtime-core'\r\n\r\nexport const svgNS = 'http://www.w3.org/2000/svg'\r\n\r\nconst doc = (typeof document !== 'undefined' ? document : null) as Document\r\n\r\nconst templateContainer = doc && /*#__PURE__*/ doc.createElement('template')\r\n\r\nexport const nodeOps: Omit<RendererOptions<Node, Element>, 'patchProp'> = {\r\n  insert: (child, parent, anchor) => {\r\n    parent.insertBefore(child, anchor || null)\r\n  },\r\n\r\n  remove: child => {\r\n    const parent = child.parentNode\r\n    if (parent) {\r\n      parent.removeChild(child)\r\n    }\r\n  },\r\n\r\n  createElement: (tag, isSVG, is, props): Element => {\r\n    const el = isSVG\r\n      ? doc.createElementNS(svgNS, tag)\r\n      : doc.createElement(tag, is ? { is } : undefined)\r\n\r\n    if (tag === 'select' && props && props.multiple != null) {\r\n      ;(el as HTMLSelectElement).setAttribute('multiple', props.multiple)\r\n    }\r\n\r\n    return el\r\n  },\r\n\r\n  createText: text => doc.createTextNode(text),\r\n\r\n  createComment: text => doc.createComment(text),\r\n\r\n  setText: (node, text) => {\r\n    node.nodeValue = text\r\n  },\r\n\r\n  setElementText: (el, text) => {\r\n    el.textContent = text\r\n  },\r\n\r\n  parentNode: node => node.parentNode as Element | null,\r\n\r\n  nextSibling: node => node.nextSibling,\r\n\r\n  querySelector: selector => doc.querySelector(selector),\r\n\r\n  setScopeId(el, id) {\r\n    el.setAttribute(id, '')\r\n  },\r\n\r\n  cloneNode(el) {\r\n    const cloned = el.cloneNode(true)\r\n    // #3072\r\n    // - in `patchDOMProp`, we store the actual value in the `el._value` property.\r\n    // - normally, elements using `:value` bindings will not be hoisted, but if\r\n    //   the bound value is a constant, e.g. `:value=\"true\"` - they do get\r\n    //   hoisted.\r\n    // - in production, hoisted nodes are cloned when subsequent inserts, but\r\n    //   cloneNode() does not copy the custom property we attached.\r\n    // - This may need to account for other custom DOM properties we attach to\r\n    //   elements in addition to `_value` in the future.\r\n    if (`_value` in el) {\r\n      ;(cloned as any)._value = (el as any)._value\r\n    }\r\n    return cloned\r\n  },\r\n\r\n  // __UNSAFE__\r\n  // Reason: innerHTML.\r\n  // Static content here can only come from compiled templates.\r\n  // As long as the user only uses trusted templates, this is safe.\r\n  insertStaticContent(content, parent, anchor, isSVG, start, end) {\r\n    // <parent> before | first ... last | anchor </parent>\r\n    const before = anchor ? anchor.previousSibling : parent.lastChild\r\n    // #5308 can only take cached path if:\r\n    // - has a single root node\r\n    // - nextSibling info is still available\r\n    if (start && (start === end || start.nextSibling)) {\r\n      // cached\r\n      while (true) {\r\n        parent.insertBefore(start!.cloneNode(true), anchor)\r\n        if (start === end || !(start = start!.nextSibling)) break\r\n      }\r\n    } else {\r\n      // fresh insert\r\n      templateContainer.innerHTML = isSVG ? `<svg>${content}</svg>` : content\r\n      const template = templateContainer.content\r\n      if (isSVG) {\r\n        // remove outer svg wrapper\r\n        const wrapper = template.firstChild!\r\n        while (wrapper.firstChild) {\r\n          template.appendChild(wrapper.firstChild)\r\n        }\r\n        template.removeChild(wrapper)\r\n      }\r\n      parent.insertBefore(template, anchor)\r\n    }\r\n    return [\r\n      // first\r\n      before ? before.nextSibling! : parent.firstChild!,\r\n      // last\r\n      anchor ? anchor.previousSibling! : parent.lastChild!\r\n    ]\r\n  }\r\n}\r\n","import { isString, hyphenate, capitalize, isArray } from '@vue/shared'\r\nimport { camelize } from '@vue/runtime-core'\r\n\r\ntype Style = string | Record<string, string | string[]> | null\r\n\r\nexport function patchStyle(el: Element, prev: Style, next: Style) {\r\n  const style = (el as HTMLElement).style\r\n  const isCssString = isString(next)\r\n  if (next && !isCssString) {\r\n    for (const key in next) {\r\n      setStyle(style, key, next[key])\r\n    }\r\n    if (prev && !isString(prev)) {\r\n      for (const key in prev) {\r\n        if (next[key] == null) {\r\n          setStyle(style, key, '')\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    const currentDisplay = style.display\r\n    if (isCssString) {\r\n      if (prev !== next) {\r\n        style.cssText = next as string\r\n      }\r\n    } else if (prev) {\r\n      el.removeAttribute('style')\r\n    }\r\n    // indicates that the `display` of the element is controlled by `v-show`,\r\n    // so we always keep the current `display` value regardless of the `style`\r\n    // value, thus handing over control to `v-show`.\r\n    if ('_vod' in el) {\r\n      style.display = currentDisplay\r\n    }\r\n  }\r\n}\r\n\r\nconst importantRE = /\\s*!important$/\r\n\r\nfunction setStyle(\r\n  style: CSSStyleDeclaration,\r\n  name: string,\r\n  val: string | string[]\r\n) {\r\n  if (isArray(val)) {\r\n    val.forEach(v => setStyle(style, name, v))\r\n  } else {\r\n    if (val == null) val = ''\r\n    if (name.startsWith('--')) {\r\n      // custom property definition\r\n      style.setProperty(name, val)\r\n    } else {\r\n      const prefixed = autoPrefix(style, name)\r\n      if (importantRE.test(val)) {\r\n        // !important\r\n        style.setProperty(\r\n          hyphenate(prefixed),\r\n          val.replace(importantRE, ''),\r\n          'important'\r\n        )\r\n      } else {\r\n        style[prefixed as any] = val\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst prefixes = ['Webkit', 'Moz', 'ms']\r\nconst prefixCache: Record<string, string> = {}\r\n\r\nfunction autoPrefix(style: CSSStyleDeclaration, rawName: string): string {\r\n  const cached = prefixCache[rawName]\r\n  if (cached) {\r\n    return cached\r\n  }\r\n  let name = camelize(rawName)\r\n  if (name !== 'filter' && name in style) {\r\n    return (prefixCache[rawName] = name)\r\n  }\r\n  name = capitalize(name)\r\n  for (let i = 0; i < prefixes.length; i++) {\r\n    const prefixed = prefixes[i] + name\r\n    if (prefixed in style) {\r\n      return (prefixCache[rawName] = prefixed)\r\n    }\r\n  }\r\n  return rawName\r\n}\r\n","import {\r\n  includeBooleanAttr,\r\n  isSpecialBooleanAttr,\r\n  makeMap,\r\n  NOOP\r\n} from '@vue/shared'\r\nimport {\r\n  compatUtils,\r\n  ComponentInternalInstance,\r\n  DeprecationTypes\r\n} from '@vue/runtime-core'\r\n\r\nexport const xlinkNS = 'http://www.w3.org/1999/xlink'\r\n\r\nexport function patchAttr(\r\n  el: Element,\r\n  key: string,\r\n  value: any,\r\n  isSVG: boolean,\r\n  instance?: ComponentInternalInstance | null\r\n) {\r\n  if (isSVG && key.startsWith('xlink:')) {\r\n    if (value == null) {\r\n      el.removeAttributeNS(xlinkNS, key.slice(6, key.length))\r\n    } else {\r\n      el.setAttributeNS(xlinkNS, key, value)\r\n    }\r\n  } else {\r\n    if (__COMPAT__ && compatCoerceAttr(el, key, value, instance)) {\r\n      return\r\n    }\r\n\r\n    // note we are only checking boolean attributes that don't have a\r\n    // corresponding dom prop of the same name here.\r\n    const isBoolean = isSpecialBooleanAttr(key)\r\n    if (value == null || (isBoolean && !includeBooleanAttr(value))) {\r\n      el.removeAttribute(key)\r\n    } else {\r\n      el.setAttribute(key, isBoolean ? '' : value)\r\n    }\r\n  }\r\n}\r\n\r\n// 2.x compat\r\nconst isEnumeratedAttr = __COMPAT__\r\n  ? /*#__PURE__*/ makeMap('contenteditable,draggable,spellcheck')\r\n  : NOOP\r\n\r\nexport function compatCoerceAttr(\r\n  el: Element,\r\n  key: string,\r\n  value: unknown,\r\n  instance: ComponentInternalInstance | null = null\r\n): boolean {\r\n  if (isEnumeratedAttr(key)) {\r\n    const v2CocercedValue =\r\n      value === null\r\n        ? 'false'\r\n        : typeof value !== 'boolean' && value !== undefined\r\n        ? 'true'\r\n        : null\r\n    if (\r\n      v2CocercedValue &&\r\n      compatUtils.softAssertCompatEnabled(\r\n        DeprecationTypes.ATTR_ENUMERATED_COERCION,\r\n        instance,\r\n        key,\r\n        value,\r\n        v2CocercedValue\r\n      )\r\n    ) {\r\n      el.setAttribute(key, v2CocercedValue)\r\n      return true\r\n    }\r\n  } else if (\r\n    value === false &&\r\n    !isSpecialBooleanAttr(key) &&\r\n    compatUtils.softAssertCompatEnabled(\r\n      DeprecationTypes.ATTR_FALSE_VALUE,\r\n      instance,\r\n      key\r\n    )\r\n  ) {\r\n    el.removeAttribute(key)\r\n    return true\r\n  }\r\n  return false\r\n}\r\n","import { hyphenate, isArray } from '@vue/shared'\r\nimport {\r\n  ComponentInternalInstance,\r\n  callWithAsyncErrorHandling\r\n} from '@vue/runtime-core'\r\nimport { ErrorCodes } from 'packages/runtime-core/src/errorHandling'\r\n\r\ninterface Invoker extends EventListener {\r\n  value: EventValue\r\n  attached: number\r\n}\r\n\r\ntype EventValue = Function | Function[]\r\n\r\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nconst [_getNow, skipTimestampCheck] = /*#__PURE__*/ (() => {\r\n  let _getNow = Date.now\r\n  let skipTimestampCheck = false\r\n  if (typeof window !== 'undefined') {\r\n    // Determine what event timestamp the browser is using. Annoyingly, the\r\n    // timestamp can either be hi-res (relative to page load) or low-res\r\n    // (relative to UNIX epoch), so in order to compare time we have to use the\r\n    // same timestamp type when saving the flush timestamp.\r\n    if (Date.now() > document.createEvent('Event').timeStamp) {\r\n      // if the low-res timestamp which is bigger than the event timestamp\r\n      // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n      // and we need to use the hi-res version for event listeners as well.\r\n      _getNow = performance.now.bind(performance)\r\n    }\r\n    // #3485: Firefox <= 53 has incorrect Event.timeStamp implementation\r\n    // and does not fire microtasks in between event propagation, so safe to exclude.\r\n    const ffMatch = navigator.userAgent.match(/firefox\\/(\\d+)/i)\r\n    skipTimestampCheck = !!(ffMatch && Number(ffMatch[1]) <= 53)\r\n  }\r\n  return [_getNow, skipTimestampCheck]\r\n})()\r\n\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow: number = 0\r\nconst p = /*#__PURE__*/ Promise.resolve()\r\nconst reset = () => {\r\n  cachedNow = 0\r\n}\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()))\r\n\r\nexport function addEventListener(\r\n  el: Element,\r\n  event: string,\r\n  handler: EventListener,\r\n  options?: EventListenerOptions\r\n) {\r\n  el.addEventListener(event, handler, options)\r\n}\r\n\r\nexport function removeEventListener(\r\n  el: Element,\r\n  event: string,\r\n  handler: EventListener,\r\n  options?: EventListenerOptions\r\n) {\r\n  el.removeEventListener(event, handler, options)\r\n}\r\n\r\nexport function patchEvent(\r\n  el: Element & { _vei?: Record<string, Invoker | undefined> },\r\n  rawName: string,\r\n  prevValue: EventValue | null,\r\n  nextValue: EventValue | null,\r\n  instance: ComponentInternalInstance | null = null\r\n) {\r\n  // vei = vue event invokers\r\n  const invokers = el._vei || (el._vei = {})\r\n  const existingInvoker = invokers[rawName]\r\n  if (nextValue && existingInvoker) {\r\n    // patch\r\n    existingInvoker.value = nextValue\r\n  } else {\r\n    const [name, options] = parseName(rawName)\r\n    if (nextValue) {\r\n      // add\r\n      const invoker = (invokers[rawName] = createInvoker(nextValue, instance))\r\n      addEventListener(el, name, invoker, options)\r\n    } else if (existingInvoker) {\r\n      // remove\r\n      removeEventListener(el, name, existingInvoker, options)\r\n      invokers[rawName] = undefined\r\n    }\r\n  }\r\n}\r\n\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/\r\n\r\nfunction parseName(name: string): [string, EventListenerOptions | undefined] {\r\n  let options: EventListenerOptions | undefined\r\n  if (optionsModifierRE.test(name)) {\r\n    options = {}\r\n    let m\r\n    while ((m = name.match(optionsModifierRE))) {\r\n      name = name.slice(0, name.length - m[0].length)\r\n      ;(options as any)[m[0].toLowerCase()] = true\r\n    }\r\n  }\r\n  return [hyphenate(name.slice(2)), options]\r\n}\r\n\r\nfunction createInvoker(\r\n  initialValue: EventValue,\r\n  instance: ComponentInternalInstance | null\r\n) {\r\n  const invoker: Invoker = (e: Event) => {\r\n    // async edge case #6566: inner click event triggers patch, event handler\r\n    // attached to outer element during patch, and triggered again. This\r\n    // happens because browsers fire microtask ticks between event propagation.\r\n    // the solution is simple: we save the timestamp when a handler is attached,\r\n    // and the handler would only fire if the event passed to it was fired\r\n    // AFTER it was attached.\r\n    const timeStamp = e.timeStamp || _getNow()\r\n\r\n    if (skipTimestampCheck || timeStamp >= invoker.attached - 1) {\r\n      callWithAsyncErrorHandling(\r\n        patchStopImmediatePropagation(e, invoker.value),\r\n        instance,\r\n        ErrorCodes.NATIVE_EVENT_HANDLER,\r\n        [e]\r\n      )\r\n    }\r\n  }\r\n  invoker.value = initialValue\r\n  invoker.attached = getNow()\r\n  return invoker\r\n}\r\n\r\nfunction patchStopImmediatePropagation(\r\n  e: Event,\r\n  value: EventValue\r\n): EventValue {\r\n  if (isArray(value)) {\r\n    const originalStop = e.stopImmediatePropagation\r\n    e.stopImmediatePropagation = () => {\r\n      originalStop.call(e)\r\n      ;(e as any)._stopped = true\r\n    }\r\n    return value.map(fn => (e: Event) => !(e as any)._stopped && fn && fn(e))\r\n  } else {\r\n    return value\r\n  }\r\n}\r\n","import { patchClass } from './modules/class'\r\nimport { patchStyle } from './modules/style'\r\nimport { patchAttr } from './modules/attrs'\r\nimport { patchDOMProp } from './modules/props'\r\nimport { patchEvent } from './modules/events'\r\nimport { isOn, isString, isFunction, isModelListener } from '@vue/shared'\r\nimport { RendererOptions } from '@vue/runtime-core'\r\n\r\nconst nativeOnRE = /^on[a-z]/\r\n\r\ntype DOMRendererOptions = RendererOptions<Node, Element>\r\n\r\nexport const patchProp: DOMRendererOptions['patchProp'] = (\r\n  el,\r\n  key,\r\n  prevValue,\r\n  nextValue,\r\n  isSVG = false,\r\n  prevChildren,\r\n  parentComponent,\r\n  parentSuspense,\r\n  unmountChildren\r\n) => {\r\n  if (key === 'class') {\r\n    patchClass(el, nextValue, isSVG)\r\n  } else if (key === 'style') {\r\n    patchStyle(el, prevValue, nextValue)\r\n  } else if (isOn(key)) {\r\n    // ignore v-model listeners\r\n    if (!isModelListener(key)) {\r\n      patchEvent(el, key, prevValue, nextValue, parentComponent)\r\n    }\r\n  } else if (\r\n    key[0] === '.'\r\n      ? ((key = key.slice(1)), true)\r\n      : key[0] === '^'\r\n      ? ((key = key.slice(1)), false)\r\n      : shouldSetAsProp(el, key, nextValue, isSVG)\r\n  ) {\r\n    patchDOMProp(\r\n      el,\r\n      key,\r\n      nextValue,\r\n      prevChildren,\r\n      parentComponent,\r\n      parentSuspense,\r\n      unmountChildren\r\n    )\r\n  } else {\r\n    // special case for <input v-model type=\"checkbox\"> with\r\n    // :true-value & :false-value\r\n    // store value as dom properties since non-string values will be\r\n    // stringified.\r\n    if (key === 'true-value') {\r\n      ;(el as any)._trueValue = nextValue\r\n    } else if (key === 'false-value') {\r\n      ;(el as any)._falseValue = nextValue\r\n    }\r\n    patchAttr(el, key, nextValue, isSVG, parentComponent)\r\n  }\r\n}\r\n\r\nfunction shouldSetAsProp(\r\n  el: Element,\r\n  key: string,\r\n  value: unknown,\r\n  isSVG: boolean\r\n) {\r\n  if (isSVG) {\r\n    // most keys must be set as attribute on svg elements to work\r\n    // ...except innerHTML & textContent\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n      return true\r\n    }\r\n    // or native onclick with function values\r\n    if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  // these are enumerated attrs, however their corresponding DOM properties\r\n  // are actually booleans - this leads to setting it with a string \"false\"\r\n  // value leading it to be coerced to `true`, so we need to always treat\r\n  // them as attributes.\r\n  // Note that `contentEditable` doesn't have this problem: its DOM\r\n  // property is also enumerated string values.\r\n  if (key === 'spellcheck' || key === 'draggable' || key === 'translate') {\r\n    return false\r\n  }\r\n\r\n  // #1787, #2840 form property on form elements is readonly and must be set as\r\n  // attribute.\r\n  if (key === 'form') {\r\n    return false\r\n  }\r\n\r\n  // #1526 <input list> must be set as attribute\r\n  if (key === 'list' && el.tagName === 'INPUT') {\r\n    return false\r\n  }\r\n\r\n  // #2766 <textarea type> must be set as attribute\r\n  if (key === 'type' && el.tagName === 'TEXTAREA') {\r\n    return false\r\n  }\r\n\r\n  // native onclick with string value, must be set as attribute\r\n  if (nativeOnRE.test(key) && isString(value)) {\r\n    return false\r\n  }\r\n\r\n  return key in el\r\n}\r\n","import {\r\n  ComponentOptionsMixin,\r\n  ComponentOptionsWithArrayProps,\r\n  ComponentOptionsWithObjectProps,\r\n  ComponentOptionsWithoutProps,\r\n  ComponentPropsOptions,\r\n  ComponentPublicInstance,\r\n  ComputedOptions,\r\n  EmitsOptions,\r\n  MethodOptions,\r\n  RenderFunction,\r\n  SetupContext,\r\n  ComponentInternalInstance,\r\n  VNode,\r\n  RootHydrateFunction,\r\n  ExtractPropTypes,\r\n  createVNode,\r\n  defineComponent,\r\n  nextTick,\r\n  warn,\r\n  ConcreteComponent,\r\n  ComponentOptions\r\n} from '@vue/runtime-core'\r\nimport { camelize, extend, hyphenate, isArray, toNumber } from '@vue/shared'\r\nimport { hydrate, render } from '.'\r\n\r\nexport type VueElementConstructor<P = {}> = {\r\n  new (initialProps?: Record<string, any>): VueElement & P\r\n}\r\n\r\n// defineCustomElement provides the same type inference as defineComponent\r\n// so most of the following overloads should be kept in sync w/ defineComponent.\r\n\r\n// overload 1: direct setup function\r\nexport function defineCustomElement<Props, RawBindings = object>(\r\n  setup: (\r\n    props: Readonly<Props>,\r\n    ctx: SetupContext\r\n  ) => RawBindings | RenderFunction\r\n): VueElementConstructor<Props>\r\n\r\n// overload 2: object format with no props\r\nexport function defineCustomElement<\r\n  Props = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithoutProps<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  > & { styles?: string[] }\r\n): VueElementConstructor<Props>\r\n\r\n// overload 3: object format with array props declaration\r\nexport function defineCustomElement<\r\n  PropNames extends string,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = Record<string, any>,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithArrayProps<\r\n    PropNames,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  > & { styles?: string[] }\r\n): VueElementConstructor<{ [K in PropNames]: any }>\r\n\r\n// overload 4: object format with object props declaration\r\nexport function defineCustomElement<\r\n  PropsOptions extends Readonly<ComponentPropsOptions>,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = Record<string, any>,\r\n  EE extends string = string\r\n>(\r\n  options: ComponentOptionsWithObjectProps<\r\n    PropsOptions,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE\r\n  > & { styles?: string[] }\r\n): VueElementConstructor<ExtractPropTypes<PropsOptions>>\r\n\r\n// overload 5: defining a custom element from the returned value of\r\n// `defineComponent`\r\nexport function defineCustomElement(options: {\r\n  new (...args: any[]): ComponentPublicInstance\r\n}): VueElementConstructor\r\n\r\nexport function defineCustomElement(\r\n  options: any,\r\n  hydrate?: RootHydrateFunction\r\n): VueElementConstructor {\r\n  const Comp = defineComponent(options as any)\r\n  class VueCustomElement extends VueElement {\r\n    static def = Comp\r\n    constructor(initialProps?: Record<string, any>) {\r\n      super(Comp, initialProps, hydrate)\r\n    }\r\n  }\r\n\r\n  return VueCustomElement\r\n}\r\n\r\nexport const defineSSRCustomElement = ((options: any) => {\r\n  // @ts-ignore\r\n  return defineCustomElement(options, hydrate)\r\n}) as typeof defineCustomElement\r\n\r\nconst BaseClass = (\r\n  typeof HTMLElement !== 'undefined' ? HTMLElement : class {}\r\n) as typeof HTMLElement\r\n\r\ntype InnerComponentDef = ConcreteComponent & { styles?: string[] }\r\n\r\nexport class VueElement extends BaseClass {\r\n  /**\r\n   * @internal\r\n   */\r\n  _instance: ComponentInternalInstance | null = null\r\n\r\n  private _connected = false\r\n  private _resolved = false\r\n  private _numberProps: Record<string, true> | null = null\r\n  private _styles?: HTMLStyleElement[]\r\n\r\n  constructor(\r\n    private _def: InnerComponentDef,\r\n    private _props: Record<string, any> = {},\r\n    hydrate?: RootHydrateFunction\r\n  ) {\r\n    super()\r\n    if (this.shadowRoot && hydrate) {\r\n      hydrate(this._createVNode(), this.shadowRoot)\r\n    } else {\r\n      if (__DEV__ && this.shadowRoot) {\r\n        warn(\r\n          `Custom element has pre-rendered declarative shadow root but is not ` +\r\n            `defined as hydratable. Use \\`defineSSRCustomElement\\`.`\r\n        )\r\n      }\r\n      this.attachShadow({ mode: 'open' })\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    this._connected = true\r\n    if (!this._instance) {\r\n      this._resolveDef()\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this._connected = false\r\n    nextTick(() => {\r\n      if (!this._connected) {\r\n        render(null, this.shadowRoot!)\r\n        this._instance = null\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * resolve inner component definition (handle possible async component)\r\n   */\r\n  private _resolveDef() {\r\n    if (this._resolved) {\r\n      return\r\n    }\r\n    this._resolved = true\r\n\r\n    // set initial attrs\r\n    for (let i = 0; i < this.attributes.length; i++) {\r\n      this._setAttr(this.attributes[i].name)\r\n    }\r\n\r\n    // watch future attr changes\r\n    new MutationObserver(mutations => {\r\n      for (const m of mutations) {\r\n        this._setAttr(m.attributeName!)\r\n      }\r\n    }).observe(this, { attributes: true })\r\n\r\n    const resolve = (def: InnerComponentDef) => {\r\n      const { props, styles } = def\r\n      const hasOptions = !isArray(props)\r\n      const rawKeys = props ? (hasOptions ? Object.keys(props) : props) : []\r\n\r\n      // cast Number-type props set before resolve\r\n      let numberProps\r\n      if (hasOptions) {\r\n        for (const key in this._props) {\r\n          const opt = props[key]\r\n          if (opt === Number || (opt && opt.type === Number)) {\r\n            this._props[key] = toNumber(this._props[key])\r\n            ;(numberProps || (numberProps = Object.create(null)))[key] = true\r\n          }\r\n        }\r\n      }\r\n      this._numberProps = numberProps\r\n\r\n      // check if there are props set pre-upgrade or connect\r\n      for (const key of Object.keys(this)) {\r\n        if (key[0] !== '_') {\r\n          this._setProp(key, this[key as keyof this], true, false)\r\n        }\r\n      }\r\n\r\n      // defining getter/setters on prototype\r\n      for (const key of rawKeys.map(camelize)) {\r\n        Object.defineProperty(this, key, {\r\n          get() {\r\n            return this._getProp(key)\r\n          },\r\n          set(val) {\r\n            this._setProp(key, val)\r\n          }\r\n        })\r\n      }\r\n\r\n      // apply CSS\r\n      this._applyStyles(styles)\r\n\r\n      // initial render\r\n      this._update()\r\n    }\r\n\r\n    const asyncDef = (this._def as ComponentOptions).__asyncLoader\r\n    if (asyncDef) {\r\n      asyncDef().then(resolve)\r\n    } else {\r\n      resolve(this._def)\r\n    }\r\n  }\r\n\r\n  protected _setAttr(key: string) {\r\n    let value = this.getAttribute(key)\r\n    if (this._numberProps && this._numberProps[key]) {\r\n      value = toNumber(value)\r\n    }\r\n    this._setProp(camelize(key), value, false)\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  protected _getProp(key: string) {\r\n    return this._props[key]\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  protected _setProp(\r\n    key: string,\r\n    val: any,\r\n    shouldReflect = true,\r\n    shouldUpdate = true\r\n  ) {\r\n    if (val !== this._props[key]) {\r\n      this._props[key] = val\r\n      if (shouldUpdate && this._instance) {\r\n        this._update()\r\n      }\r\n      // reflect\r\n      if (shouldReflect) {\r\n        if (val === true) {\r\n          this.setAttribute(hyphenate(key), '')\r\n        } else if (typeof val === 'string' || typeof val === 'number') {\r\n          this.setAttribute(hyphenate(key), val + '')\r\n        } else if (!val) {\r\n          this.removeAttribute(hyphenate(key))\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private _update() {\r\n    render(this._createVNode(), this.shadowRoot!)\r\n  }\r\n\r\n  private _createVNode(): VNode<any, any> {\r\n    const vnode = createVNode(this._def, extend({}, this._props))\r\n    if (!this._instance) {\r\n      vnode.ce = instance => {\r\n        this._instance = instance\r\n        instance.isCE = true\r\n        // HMR\r\n        if (__DEV__) {\r\n          instance.ceReload = newStyles => {\r\n            // always reset styles\r\n            if (this._styles) {\r\n              this._styles.forEach(s => this.shadowRoot!.removeChild(s))\r\n              this._styles.length = 0\r\n            }\r\n            this._applyStyles(newStyles)\r\n            // if this is an async component, ceReload is called from the inner\r\n            // component so no need to reload the async wrapper\r\n            if (!(this._def as ComponentOptions).__asyncLoader) {\r\n              // reload\r\n              this._instance = null\r\n              this._update()\r\n            }\r\n          }\r\n        }\r\n\r\n        // intercept emit\r\n        instance.emit = (event: string, ...args: any[]) => {\r\n          this.dispatchEvent(\r\n            new CustomEvent(event, {\r\n              detail: args\r\n            })\r\n          )\r\n        }\r\n\r\n        // locate nearest Vue custom element parent for provide/inject\r\n        let parent: Node | null = this\r\n        while (\r\n          (parent =\r\n            parent && (parent.parentNode || (parent as ShadowRoot).host))\r\n        ) {\r\n          if (parent instanceof VueElement) {\r\n            instance.parent = parent._instance\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return vnode\r\n  }\r\n\r\n  private _applyStyles(styles: string[] | undefined) {\r\n    if (styles) {\r\n      styles.forEach(css => {\r\n        const s = document.createElement('style')\r\n        s.textContent = css\r\n        this.shadowRoot!.appendChild(s)\r\n        // record for HMR\r\n        if (__DEV__) {\r\n          ;(this._styles || (this._styles = [])).push(s)\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n","import { warn, getCurrentInstance } from '@vue/runtime-core'\r\nimport { EMPTY_OBJ } from '@vue/shared'\r\n\r\nexport function useCssModule(name = '$style'): Record<string, string> {\r\n  /* istanbul ignore else */\r\n  if (!__GLOBAL__) {\r\n    const instance = getCurrentInstance()!\r\n    if (!instance) {\r\n      __DEV__ && warn(`useCssModule must be called inside setup()`)\r\n      return EMPTY_OBJ\r\n    }\r\n    const modules = instance.type.__cssModules\r\n    if (!modules) {\r\n      __DEV__ && warn(`Current instance does not have CSS modules injected.`)\r\n      return EMPTY_OBJ\r\n    }\r\n    const mod = modules[name]\r\n    if (!mod) {\r\n      __DEV__ &&\r\n        warn(`Current instance does not have CSS module named \"${name}\".`)\r\n      return EMPTY_OBJ\r\n    }\r\n    return mod as Record<string, string>\r\n  } else {\r\n    if (__DEV__) {\r\n      warn(`useCssModule() is not supported in the global build.`)\r\n    }\r\n    return EMPTY_OBJ\r\n  }\r\n}\r\n","import {\r\n  getCurrentInstance,\r\n  warn,\r\n  VNode,\r\n  Fragment,\r\n  Static,\r\n  watchPostEffect,\r\n  onMounted,\r\n  onUnmounted\r\n} from '@vue/runtime-core'\r\nimport { ShapeFlags } from '@vue/shared'\r\n\r\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nexport function useCssVars(getter: (ctx: any) => Record<string, string>) {\r\n  if (!__BROWSER__ && !__TEST__) return\r\n\r\n  const instance = getCurrentInstance()\r\n  /* istanbul ignore next */\r\n  if (!instance) {\r\n    __DEV__ &&\r\n      warn(`useCssVars is called without current active component instance.`)\r\n    return\r\n  }\r\n\r\n  const setVars = () =>\r\n    setVarsOnVNode(instance.subTree, getter(instance.proxy!))\r\n  watchPostEffect(setVars)\r\n  onMounted(() => {\r\n    const ob = new MutationObserver(setVars)\r\n    ob.observe(instance.subTree.el!.parentNode, { childList: true })\r\n    onUnmounted(() => ob.disconnect())\r\n  })\r\n}\r\n\r\nfunction setVarsOnVNode(vnode: VNode, vars: Record<string, string>) {\r\n  if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n    const suspense = vnode.suspense!\r\n    vnode = suspense.activeBranch!\r\n    if (suspense.pendingBranch && !suspense.isHydrating) {\r\n      suspense.effects.push(() => {\r\n        setVarsOnVNode(suspense.activeBranch!, vars)\r\n      })\r\n    }\r\n  }\r\n\r\n  // drill down HOCs until it's a non-component vnode\r\n  while (vnode.component) {\r\n    vnode = vnode.component.subTree\r\n  }\r\n\r\n  if (vnode.shapeFlag & ShapeFlags.ELEMENT && vnode.el) {\r\n    setVarsOnNode(vnode.el as Node, vars)\r\n  } else if (vnode.type === Fragment) {\r\n    ;(vnode.children as VNode[]).forEach(c => setVarsOnVNode(c, vars))\r\n  } else if (vnode.type === Static) {\r\n    let { el, anchor } = vnode\r\n    while (el) {\r\n      setVarsOnNode(el as Node, vars)\r\n      if (el === anchor) break\r\n      el = el.nextSibling\r\n    }\r\n  }\r\n}\r\n\r\nfunction setVarsOnNode(el: Node, vars: Record<string, string>) {\r\n  if (el.nodeType === 1) {\r\n    const style = (el as HTMLElement).style\r\n    for (const key in vars) {\r\n      style.setProperty(`--${key}`, vars[key])\r\n    }\r\n  }\r\n}\r\n","import {\r\n  BaseTransition,\r\n  BaseTransitionProps,\r\n  h,\r\n  warn,\r\n  FunctionalComponent,\r\n  compatUtils,\r\n  DeprecationTypes\r\n} from '@vue/runtime-core'\r\nimport { isObject, toNumber, extend, isArray } from '@vue/shared'\r\n\r\nconst TRANSITION = 'transition'\r\nconst ANIMATION = 'animation'\r\n\r\nexport interface TransitionProps extends BaseTransitionProps<Element> {\r\n  name?: string\r\n  type?: typeof TRANSITION | typeof ANIMATION\r\n  css?: boolean\r\n  duration?: number | { enter: number; leave: number }\r\n  // custom transition classes\r\n  enterFromClass?: string\r\n  enterActiveClass?: string\r\n  enterToClass?: string\r\n  appearFromClass?: string\r\n  appearActiveClass?: string\r\n  appearToClass?: string\r\n  leaveFromClass?: string\r\n  leaveActiveClass?: string\r\n  leaveToClass?: string\r\n}\r\n\r\nexport interface ElementWithTransition extends HTMLElement {\r\n  // _vtc = Vue Transition Classes.\r\n  // Store the temporarily-added transition classes on the element\r\n  // so that we can avoid overwriting them if the element's class is patched\r\n  // during the transition.\r\n  _vtc?: Set<string>\r\n}\r\n\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nexport const Transition: FunctionalComponent<TransitionProps> = (\r\n  props,\r\n  { slots }\r\n) => h(BaseTransition, resolveTransitionProps(props), slots)\r\n\r\nTransition.displayName = 'Transition'\r\n\r\nif (__COMPAT__) {\r\n  Transition.__isBuiltIn = true\r\n}\r\n\r\nconst DOMTransitionPropsValidators = {\r\n  name: String,\r\n  type: String,\r\n  css: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  duration: [String, Number, Object],\r\n  enterFromClass: String,\r\n  enterActiveClass: String,\r\n  enterToClass: String,\r\n  appearFromClass: String,\r\n  appearActiveClass: String,\r\n  appearToClass: String,\r\n  leaveFromClass: String,\r\n  leaveActiveClass: String,\r\n  leaveToClass: String\r\n}\r\n\r\nexport const TransitionPropsValidators = (Transition.props =\r\n  /*#__PURE__*/ extend(\r\n    {},\r\n    (BaseTransition as any).props,\r\n    DOMTransitionPropsValidators\r\n  ))\r\n\r\n/**\r\n * #3227 Incoming hooks may be merged into arrays when wrapping Transition\r\n * with custom HOCs.\r\n */\r\nconst callHook = (\r\n  hook: Function | Function[] | undefined,\r\n  args: any[] = []\r\n) => {\r\n  if (isArray(hook)) {\r\n    hook.forEach(h => h(...args))\r\n  } else if (hook) {\r\n    hook(...args)\r\n  }\r\n}\r\n\r\n/**\r\n * Check if a hook expects a callback (2nd arg), which means the user\r\n * intends to explicitly control the end of the transition.\r\n */\r\nconst hasExplicitCallback = (\r\n  hook: Function | Function[] | undefined\r\n): boolean => {\r\n  return hook\r\n    ? isArray(hook)\r\n      ? hook.some(h => h.length > 1)\r\n      : hook.length > 1\r\n    : false\r\n}\r\n\r\nexport function resolveTransitionProps(\r\n  rawProps: TransitionProps\r\n): BaseTransitionProps<Element> {\r\n  const baseProps: BaseTransitionProps<Element> = {}\r\n  for (const key in rawProps) {\r\n    if (!(key in DOMTransitionPropsValidators)) {\r\n      ;(baseProps as any)[key] = (rawProps as any)[key]\r\n    }\r\n  }\r\n\r\n  if (rawProps.css === false) {\r\n    return baseProps\r\n  }\r\n\r\n  const {\r\n    name = 'v',\r\n    type,\r\n    duration,\r\n    enterFromClass = `${name}-enter-from`,\r\n    enterActiveClass = `${name}-enter-active`,\r\n    enterToClass = `${name}-enter-to`,\r\n    appearFromClass = enterFromClass,\r\n    appearActiveClass = enterActiveClass,\r\n    appearToClass = enterToClass,\r\n    leaveFromClass = `${name}-leave-from`,\r\n    leaveActiveClass = `${name}-leave-active`,\r\n    leaveToClass = `${name}-leave-to`\r\n  } = rawProps\r\n\r\n  // legacy transition class compat\r\n  const legacyClassEnabled =\r\n    __COMPAT__ &&\r\n    compatUtils.isCompatEnabled(DeprecationTypes.TRANSITION_CLASSES, null)\r\n  let legacyEnterFromClass: string\r\n  let legacyAppearFromClass: string\r\n  let legacyLeaveFromClass: string\r\n  if (__COMPAT__ && legacyClassEnabled) {\r\n    const toLegacyClass = (cls: string) => cls.replace(/-from$/, '')\r\n    if (!rawProps.enterFromClass) {\r\n      legacyEnterFromClass = toLegacyClass(enterFromClass)\r\n    }\r\n    if (!rawProps.appearFromClass) {\r\n      legacyAppearFromClass = toLegacyClass(appearFromClass)\r\n    }\r\n    if (!rawProps.leaveFromClass) {\r\n      legacyLeaveFromClass = toLegacyClass(leaveFromClass)\r\n    }\r\n  }\r\n\r\n  const durations = normalizeDuration(duration)\r\n  const enterDuration = durations && durations[0]\r\n  const leaveDuration = durations && durations[1]\r\n  const {\r\n    onBeforeEnter,\r\n    onEnter,\r\n    onEnterCancelled,\r\n    onLeave,\r\n    onLeaveCancelled,\r\n    onBeforeAppear = onBeforeEnter,\r\n    onAppear = onEnter,\r\n    onAppearCancelled = onEnterCancelled\r\n  } = baseProps\r\n\r\n  const finishEnter = (el: Element, isAppear: boolean, done?: () => void) => {\r\n    removeTransitionClass(el, isAppear ? appearToClass : enterToClass)\r\n    removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass)\r\n    done && done()\r\n  }\r\n\r\n  const finishLeave = (\r\n    el: Element & { _isLeaving?: boolean },\r\n    done?: () => void\r\n  ) => {\r\n    el._isLeaving = false\r\n    removeTransitionClass(el, leaveFromClass)\r\n    removeTransitionClass(el, leaveToClass)\r\n    removeTransitionClass(el, leaveActiveClass)\r\n    done && done()\r\n  }\r\n\r\n  const makeEnterHook = (isAppear: boolean) => {\r\n    return (el: Element, done: () => void) => {\r\n      const hook = isAppear ? onAppear : onEnter\r\n      const resolve = () => finishEnter(el, isAppear, done)\r\n      callHook(hook, [el, resolve])\r\n      nextFrame(() => {\r\n        removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass)\r\n        if (__COMPAT__ && legacyClassEnabled) {\r\n          removeTransitionClass(\r\n            el,\r\n            isAppear ? legacyAppearFromClass : legacyEnterFromClass\r\n          )\r\n        }\r\n        addTransitionClass(el, isAppear ? appearToClass : enterToClass)\r\n        if (!hasExplicitCallback(hook)) {\r\n          whenTransitionEnds(el, type, enterDuration, resolve)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return extend(baseProps, {\r\n    onBeforeEnter(el) {\r\n      callHook(onBeforeEnter, [el])\r\n      addTransitionClass(el, enterFromClass)\r\n      if (__COMPAT__ && legacyClassEnabled) {\r\n        addTransitionClass(el, legacyEnterFromClass)\r\n      }\r\n      addTransitionClass(el, enterActiveClass)\r\n    },\r\n    onBeforeAppear(el) {\r\n      callHook(onBeforeAppear, [el])\r\n      addTransitionClass(el, appearFromClass)\r\n      if (__COMPAT__ && legacyClassEnabled) {\r\n        addTransitionClass(el, legacyAppearFromClass)\r\n      }\r\n      addTransitionClass(el, appearActiveClass)\r\n    },\r\n    onEnter: makeEnterHook(false),\r\n    onAppear: makeEnterHook(true),\r\n    onLeave(el: Element & { _isLeaving?: boolean }, done) {\r\n      el._isLeaving = true\r\n      const resolve = () => finishLeave(el, done)\r\n      addTransitionClass(el, leaveFromClass)\r\n      if (__COMPAT__ && legacyClassEnabled) {\r\n        addTransitionClass(el, legacyLeaveFromClass)\r\n      }\r\n      // force reflow so *-leave-from classes immediately take effect (#2593)\r\n      forceReflow()\r\n      addTransitionClass(el, leaveActiveClass)\r\n      nextFrame(() => {\r\n        if (!el._isLeaving) {\r\n          // cancelled\r\n          return\r\n        }\r\n        removeTransitionClass(el, leaveFromClass)\r\n        if (__COMPAT__ && legacyClassEnabled) {\r\n          removeTransitionClass(el, legacyLeaveFromClass)\r\n        }\r\n        addTransitionClass(el, leaveToClass)\r\n        if (!hasExplicitCallback(onLeave)) {\r\n          whenTransitionEnds(el, type, leaveDuration, resolve)\r\n        }\r\n      })\r\n      callHook(onLeave, [el, resolve])\r\n    },\r\n    onEnterCancelled(el) {\r\n      finishEnter(el, false)\r\n      callHook(onEnterCancelled, [el])\r\n    },\r\n    onAppearCancelled(el) {\r\n      finishEnter(el, true)\r\n      callHook(onAppearCancelled, [el])\r\n    },\r\n    onLeaveCancelled(el) {\r\n      finishLeave(el)\r\n      callHook(onLeaveCancelled, [el])\r\n    }\r\n  } as BaseTransitionProps<Element>)\r\n}\r\n\r\nfunction normalizeDuration(\r\n  duration: TransitionProps['duration']\r\n): [number, number] | null {\r\n  if (duration == null) {\r\n    return null\r\n  } else if (isObject(duration)) {\r\n    return [NumberOf(duration.enter), NumberOf(duration.leave)]\r\n  } else {\r\n    const n = NumberOf(duration)\r\n    return [n, n]\r\n  }\r\n}\r\n\r\nfunction NumberOf(val: unknown): number {\r\n  const res = toNumber(val)\r\n  if (__DEV__) validateDuration(res)\r\n  return res\r\n}\r\n\r\nfunction validateDuration(val: unknown) {\r\n  if (typeof val !== 'number') {\r\n    warn(\r\n      `<transition> explicit duration is not a valid number - ` +\r\n        `got ${JSON.stringify(val)}.`\r\n    )\r\n  } else if (isNaN(val)) {\r\n    warn(\r\n      `<transition> explicit duration is NaN - ` +\r\n        'the duration expression might be incorrect.'\r\n    )\r\n  }\r\n}\r\n\r\nexport function addTransitionClass(el: Element, cls: string) {\r\n  cls.split(/\\s+/).forEach(c => c && el.classList.add(c))\r\n  ;(\r\n    (el as ElementWithTransition)._vtc ||\r\n    ((el as ElementWithTransition)._vtc = new Set())\r\n  ).add(cls)\r\n}\r\n\r\nexport function removeTransitionClass(el: Element, cls: string) {\r\n  cls.split(/\\s+/).forEach(c => c && el.classList.remove(c))\r\n  const { _vtc } = el as ElementWithTransition\r\n  if (_vtc) {\r\n    _vtc.delete(cls)\r\n    if (!_vtc!.size) {\r\n      ;(el as ElementWithTransition)._vtc = undefined\r\n    }\r\n  }\r\n}\r\n\r\nfunction nextFrame(cb: () => void) {\r\n  requestAnimationFrame(() => {\r\n    requestAnimationFrame(cb)\r\n  })\r\n}\r\n\r\nlet endId = 0\r\n\r\nfunction whenTransitionEnds(\r\n  el: Element & { _endId?: number },\r\n  expectedType: TransitionProps['type'] | undefined,\r\n  explicitTimeout: number | null,\r\n  resolve: () => void\r\n) {\r\n  const id = (el._endId = ++endId)\r\n  const resolveIfNotStale = () => {\r\n    if (id === el._endId) {\r\n      resolve()\r\n    }\r\n  }\r\n\r\n  if (explicitTimeout) {\r\n    return setTimeout(resolveIfNotStale, explicitTimeout)\r\n  }\r\n\r\n  const { type, timeout, propCount } = getTransitionInfo(el, expectedType)\r\n  if (!type) {\r\n    return resolve()\r\n  }\r\n\r\n  const endEvent = type + 'end'\r\n  let ended = 0\r\n  const end = () => {\r\n    el.removeEventListener(endEvent, onEnd)\r\n    resolveIfNotStale()\r\n  }\r\n  const onEnd = (e: Event) => {\r\n    if (e.target === el && ++ended >= propCount) {\r\n      end()\r\n    }\r\n  }\r\n  setTimeout(() => {\r\n    if (ended < propCount) {\r\n      end()\r\n    }\r\n  }, timeout + 1)\r\n  el.addEventListener(endEvent, onEnd)\r\n}\r\n\r\ninterface CSSTransitionInfo {\r\n  type: typeof TRANSITION | typeof ANIMATION | null\r\n  propCount: number\r\n  timeout: number\r\n  hasTransform: boolean\r\n}\r\n\r\nexport function getTransitionInfo(\r\n  el: Element,\r\n  expectedType?: TransitionProps['type']\r\n): CSSTransitionInfo {\r\n  const styles: any = window.getComputedStyle(el)\r\n  // JSDOM may return undefined for transition properties\r\n  const getStyleProperties = (key: string) => (styles[key] || '').split(', ')\r\n  const transitionDelays = getStyleProperties(TRANSITION + 'Delay')\r\n  const transitionDurations = getStyleProperties(TRANSITION + 'Duration')\r\n  const transitionTimeout = getTimeout(transitionDelays, transitionDurations)\r\n  const animationDelays = getStyleProperties(ANIMATION + 'Delay')\r\n  const animationDurations = getStyleProperties(ANIMATION + 'Duration')\r\n  const animationTimeout = getTimeout(animationDelays, animationDurations)\r\n\r\n  let type: CSSTransitionInfo['type'] = null\r\n  let timeout = 0\r\n  let propCount = 0\r\n  /* istanbul ignore if */\r\n  if (expectedType === TRANSITION) {\r\n    if (transitionTimeout > 0) {\r\n      type = TRANSITION\r\n      timeout = transitionTimeout\r\n      propCount = transitionDurations.length\r\n    }\r\n  } else if (expectedType === ANIMATION) {\r\n    if (animationTimeout > 0) {\r\n      type = ANIMATION\r\n      timeout = animationTimeout\r\n      propCount = animationDurations.length\r\n    }\r\n  } else {\r\n    timeout = Math.max(transitionTimeout, animationTimeout)\r\n    type =\r\n      timeout > 0\r\n        ? transitionTimeout > animationTimeout\r\n          ? TRANSITION\r\n          : ANIMATION\r\n        : null\r\n    propCount = type\r\n      ? type === TRANSITION\r\n        ? transitionDurations.length\r\n        : animationDurations.length\r\n      : 0\r\n  }\r\n  const hasTransform =\r\n    type === TRANSITION &&\r\n    /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property'])\r\n  return {\r\n    type,\r\n    timeout,\r\n    propCount,\r\n    hasTransform\r\n  }\r\n}\r\n\r\nfunction getTimeout(delays: string[], durations: string[]): number {\r\n  while (delays.length < durations.length) {\r\n    delays = delays.concat(delays)\r\n  }\r\n  return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])))\r\n}\r\n\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s: string): number {\r\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\r\n}\r\n\r\n// synchronously force layout to put elements into a certain state\r\nexport function forceReflow() {\r\n  return document.body.offsetHeight\r\n}\r\n","import {\r\n  TransitionProps,\r\n  addTransitionClass,\r\n  removeTransitionClass,\r\n  ElementWithTransition,\r\n  getTransitionInfo,\r\n  resolveTransitionProps,\r\n  TransitionPropsValidators,\r\n  forceReflow\r\n} from './Transition'\r\nimport {\r\n  Fragment,\r\n  VNode,\r\n  warn,\r\n  resolveTransitionHooks,\r\n  useTransitionState,\r\n  getTransitionRawChildren,\r\n  getCurrentInstance,\r\n  setTransitionHooks,\r\n  createVNode,\r\n  onUpdated,\r\n  SetupContext,\r\n  toRaw,\r\n  compatUtils,\r\n  DeprecationTypes,\r\n  ComponentOptions\r\n} from '@vue/runtime-core'\r\nimport { extend } from '@vue/shared'\r\n\r\nconst positionMap = new WeakMap<VNode, DOMRect>()\r\nconst newPositionMap = new WeakMap<VNode, DOMRect>()\r\n\r\nexport type TransitionGroupProps = Omit<TransitionProps, 'mode'> & {\r\n  tag?: string\r\n  moveClass?: string\r\n}\r\n\r\nconst TransitionGroupImpl: ComponentOptions = {\r\n  name: 'TransitionGroup',\r\n\r\n  props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n    tag: String,\r\n    moveClass: String\r\n  }),\r\n\r\n  setup(props: TransitionGroupProps, { slots }: SetupContext) {\r\n    const instance = getCurrentInstance()!\r\n    const state = useTransitionState()\r\n    let prevChildren: VNode[]\r\n    let children: VNode[]\r\n\r\n    onUpdated(() => {\r\n      // children is guaranteed to exist after initial render\r\n      if (!prevChildren.length) {\r\n        return\r\n      }\r\n      const moveClass = props.moveClass || `${props.name || 'v'}-move`\r\n\r\n      if (\r\n        !hasCSSTransform(\r\n          prevChildren[0].el as ElementWithTransition,\r\n          instance.vnode.el as Node,\r\n          moveClass\r\n        )\r\n      ) {\r\n        return\r\n      }\r\n\r\n      // we divide the work into three loops to avoid mixing DOM reads and writes\r\n      // in each iteration - which helps prevent layout thrashing.\r\n      prevChildren.forEach(callPendingCbs)\r\n      prevChildren.forEach(recordPosition)\r\n      const movedChildren = prevChildren.filter(applyTranslation)\r\n\r\n      // force reflow to put everything in position\r\n      forceReflow()\r\n\r\n      movedChildren.forEach(c => {\r\n        const el = c.el as ElementWithTransition\r\n        const style = el.style\r\n        addTransitionClass(el, moveClass)\r\n        style.transform = style.webkitTransform = style.transitionDuration = ''\r\n        const cb = ((el as any)._moveCb = (e: TransitionEvent) => {\r\n          if (e && e.target !== el) {\r\n            return\r\n          }\r\n          if (!e || /transform$/.test(e.propertyName)) {\r\n            el.removeEventListener('transitionend', cb)\r\n            ;(el as any)._moveCb = null\r\n            removeTransitionClass(el, moveClass)\r\n          }\r\n        })\r\n        el.addEventListener('transitionend', cb)\r\n      })\r\n    })\r\n\r\n    return () => {\r\n      const rawProps = toRaw(props)\r\n      const cssTransitionProps = resolveTransitionProps(rawProps)\r\n      let tag = rawProps.tag || Fragment\r\n\r\n      if (\r\n        __COMPAT__ &&\r\n        !rawProps.tag &&\r\n        compatUtils.checkCompatEnabled(\r\n          DeprecationTypes.TRANSITION_GROUP_ROOT,\r\n          instance.parent\r\n        )\r\n      ) {\r\n        tag = 'span'\r\n      }\r\n\r\n      prevChildren = children\r\n      children = slots.default ? getTransitionRawChildren(slots.default()) : []\r\n\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i]\r\n        if (child.key != null) {\r\n          setTransitionHooks(\r\n            child,\r\n            resolveTransitionHooks(child, cssTransitionProps, state, instance)\r\n          )\r\n        } else if (__DEV__) {\r\n          warn(`<TransitionGroup> children must be keyed.`)\r\n        }\r\n      }\r\n\r\n      if (prevChildren) {\r\n        for (let i = 0; i < prevChildren.length; i++) {\r\n          const child = prevChildren[i]\r\n          setTransitionHooks(\r\n            child,\r\n            resolveTransitionHooks(child, cssTransitionProps, state, instance)\r\n          )\r\n          positionMap.set(child, (child.el as Element).getBoundingClientRect())\r\n        }\r\n      }\r\n\r\n      return createVNode(tag, null, children)\r\n    }\r\n  }\r\n}\r\n\r\nif (__COMPAT__) {\r\n  TransitionGroupImpl.__isBuiltIn = true\r\n}\r\n\r\n/**\r\n * TransitionGroup does not support \"mode\" so we need to remove it from the\r\n * props declarations, but direct delete operation is considered a side effect\r\n * and will make the entire transition feature non-tree-shakeable, so we do it\r\n * in a function and mark the function's invocation as pure.\r\n */\r\nconst removeMode = (props: any) => delete props.mode\r\n/*#__PURE__*/ removeMode(TransitionGroupImpl.props)\r\n\r\nexport const TransitionGroup = TransitionGroupImpl as unknown as {\r\n  new (): {\r\n    $props: TransitionGroupProps\r\n  }\r\n}\r\n\r\nfunction callPendingCbs(c: VNode) {\r\n  const el = c.el as any\r\n  if (el._moveCb) {\r\n    el._moveCb()\r\n  }\r\n  if (el._enterCb) {\r\n    el._enterCb()\r\n  }\r\n}\r\n\r\nfunction recordPosition(c: VNode) {\r\n  newPositionMap.set(c, (c.el as Element).getBoundingClientRect())\r\n}\r\n\r\nfunction applyTranslation(c: VNode): VNode | undefined {\r\n  const oldPos = positionMap.get(c)!\r\n  const newPos = newPositionMap.get(c)!\r\n  const dx = oldPos.left - newPos.left\r\n  const dy = oldPos.top - newPos.top\r\n  if (dx || dy) {\r\n    const s = (c.el as HTMLElement).style\r\n    s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`\r\n    s.transitionDuration = '0s'\r\n    return c\r\n  }\r\n}\r\n\r\nfunction hasCSSTransform(\r\n  el: ElementWithTransition,\r\n  root: Node,\r\n  moveClass: string\r\n): boolean {\r\n  // Detect whether an element with the move class applied has\r\n  // CSS transitions. Since the element may be inside an entering\r\n  // transition at this very moment, we make a clone of it and remove\r\n  // all other transition classes applied to ensure only the move class\r\n  // is applied.\r\n  const clone = el.cloneNode() as HTMLElement\r\n  if (el._vtc) {\r\n    el._vtc.forEach(cls => {\r\n      cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c))\r\n    })\r\n  }\r\n  moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c))\r\n  clone.style.display = 'none'\r\n  const container = (\r\n    root.nodeType === 1 ? root : root.parentNode\r\n  ) as HTMLElement\r\n  container.appendChild(clone)\r\n  const { hasTransform } = getTransitionInfo(clone)\r\n  container.removeChild(clone)\r\n  return hasTransform\r\n}\r\n","import {\r\n  ObjectDirective,\r\n  VNode,\r\n  DirectiveHook,\r\n  DirectiveBinding,\r\n  warn\r\n} from '@vue/runtime-core'\r\nimport { addEventListener } from '../modules/events'\r\nimport {\r\n  isArray,\r\n  looseEqual,\r\n  looseIndexOf,\r\n  invokeArrayFns,\r\n  toNumber,\r\n  isSet\r\n} from '@vue/shared'\r\n\r\ntype AssignerFn = (value: any) => void\r\n\r\nconst getModelAssigner = (vnode: VNode): AssignerFn => {\r\n  const fn =\r\n    vnode.props!['onUpdate:modelValue'] ||\r\n    (__COMPAT__ && vnode.props!['onModelCompat:input'])\r\n  return isArray(fn) ? value => invokeArrayFns(fn, value) : fn\r\n}\r\n\r\nfunction onCompositionStart(e: Event) {\r\n  ;(e.target as any).composing = true\r\n}\r\n\r\nfunction onCompositionEnd(e: Event) {\r\n  const target = e.target as any\r\n  if (target.composing) {\r\n    target.composing = false\r\n    target.dispatchEvent(new Event('input'))\r\n  }\r\n}\r\n\r\ntype ModelDirective<T> = ObjectDirective<T & { _assign: AssignerFn }>\r\n\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nexport const vModelText: ModelDirective<\r\n  HTMLInputElement | HTMLTextAreaElement\r\n> = {\r\n  created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    const castToNumber =\r\n      number || (vnode.props && vnode.props.type === 'number')\r\n    addEventListener(el, lazy ? 'change' : 'input', e => {\r\n      if ((e.target as any).composing) return\r\n      let domValue: string | number = el.value\r\n      if (trim) {\r\n        domValue = domValue.trim()\r\n      }\r\n      if (castToNumber) {\r\n        domValue = toNumber(domValue)\r\n      }\r\n      el._assign(domValue)\r\n    })\r\n    if (trim) {\r\n      addEventListener(el, 'change', () => {\r\n        el.value = el.value.trim()\r\n      })\r\n    }\r\n    if (!lazy) {\r\n      addEventListener(el, 'compositionstart', onCompositionStart)\r\n      addEventListener(el, 'compositionend', onCompositionEnd)\r\n      // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n      // switching focus before confirming composition choice\r\n      // this also fixes the issue where some browsers e.g. iOS Chrome\r\n      // fires \"change\" instead of \"input\" on autocomplete.\r\n      addEventListener(el, 'change', onCompositionEnd)\r\n    }\r\n  },\r\n  // set value on mounted so it's after min/max for type=\"range\"\r\n  mounted(el, { value }) {\r\n    el.value = value == null ? '' : value\r\n  },\r\n  beforeUpdate(el, { value, modifiers: { lazy, trim, number } }, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    // avoid clearing unresolved text. #2302\r\n    if ((el as any).composing) return\r\n    if (document.activeElement === el && el.type !== 'range') {\r\n      if (lazy) {\r\n        return\r\n      }\r\n      if (trim && el.value.trim() === value) {\r\n        return\r\n      }\r\n      if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n        return\r\n      }\r\n    }\r\n    const newValue = value == null ? '' : value\r\n    if (el.value !== newValue) {\r\n      el.value = newValue\r\n    }\r\n  }\r\n}\r\n\r\nexport const vModelCheckbox: ModelDirective<HTMLInputElement> = {\r\n  // #4096 array checkboxes need to be deep traversed\r\n  deep: true,\r\n  created(el, _, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    addEventListener(el, 'change', () => {\r\n      const modelValue = (el as any)._modelValue\r\n      const elementValue = getValue(el)\r\n      const checked = el.checked\r\n      const assign = el._assign\r\n      if (isArray(modelValue)) {\r\n        const index = looseIndexOf(modelValue, elementValue)\r\n        const found = index !== -1\r\n        if (checked && !found) {\r\n          assign(modelValue.concat(elementValue))\r\n        } else if (!checked && found) {\r\n          const filtered = [...modelValue]\r\n          filtered.splice(index, 1)\r\n          assign(filtered)\r\n        }\r\n      } else if (isSet(modelValue)) {\r\n        const cloned = new Set(modelValue)\r\n        if (checked) {\r\n          cloned.add(elementValue)\r\n        } else {\r\n          cloned.delete(elementValue)\r\n        }\r\n        assign(cloned)\r\n      } else {\r\n        assign(getCheckboxValue(el, checked))\r\n      }\r\n    })\r\n  },\r\n  // set initial checked on mount to wait for true-value/false-value\r\n  mounted: setChecked,\r\n  beforeUpdate(el, binding, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    setChecked(el, binding, vnode)\r\n  }\r\n}\r\n\r\nfunction setChecked(\r\n  el: HTMLInputElement,\r\n  { value, oldValue }: DirectiveBinding,\r\n  vnode: VNode\r\n) {\r\n  // store the v-model value on the element so it can be accessed by the\r\n  // change listener.\r\n  ;(el as any)._modelValue = value\r\n  if (isArray(value)) {\r\n    el.checked = looseIndexOf(value, vnode.props!.value) > -1\r\n  } else if (isSet(value)) {\r\n    el.checked = value.has(vnode.props!.value)\r\n  } else if (value !== oldValue) {\r\n    el.checked = looseEqual(value, getCheckboxValue(el, true))\r\n  }\r\n}\r\n\r\nexport const vModelRadio: ModelDirective<HTMLInputElement> = {\r\n  created(el, { value }, vnode) {\r\n    el.checked = looseEqual(value, vnode.props!.value)\r\n    el._assign = getModelAssigner(vnode)\r\n    addEventListener(el, 'change', () => {\r\n      el._assign(getValue(el))\r\n    })\r\n  },\r\n  beforeUpdate(el, { value, oldValue }, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n    if (value !== oldValue) {\r\n      el.checked = looseEqual(value, vnode.props!.value)\r\n    }\r\n  }\r\n}\r\n\r\nexport const vModelSelect: ModelDirective<HTMLSelectElement> = {\r\n  // <select multiple> value need to be deep traversed\r\n  deep: true,\r\n  created(el, { value, modifiers: { number } }, vnode) {\r\n    const isSetModel = isSet(value)\r\n    addEventListener(el, 'change', () => {\r\n      const selectedVal = Array.prototype.filter\r\n        .call(el.options, (o: HTMLOptionElement) => o.selected)\r\n        .map((o: HTMLOptionElement) =>\r\n          number ? toNumber(getValue(o)) : getValue(o)\r\n        )\r\n      el._assign(\r\n        el.multiple\r\n          ? isSetModel\r\n            ? new Set(selectedVal)\r\n            : selectedVal\r\n          : selectedVal[0]\r\n      )\r\n    })\r\n    el._assign = getModelAssigner(vnode)\r\n  },\r\n  // set value in mounted & updated because <select> relies on its children\r\n  // <option>s.\r\n  mounted(el, { value }) {\r\n    setSelected(el, value)\r\n  },\r\n  beforeUpdate(el, _binding, vnode) {\r\n    el._assign = getModelAssigner(vnode)\r\n  },\r\n  updated(el, { value }) {\r\n    setSelected(el, value)\r\n  }\r\n}\r\n\r\nfunction setSelected(el: HTMLSelectElement, value: any) {\r\n  const isMultiple = el.multiple\r\n  if (isMultiple && !isArray(value) && !isSet(value)) {\r\n    __DEV__ &&\r\n      warn(\r\n        `<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n          `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`\r\n      )\r\n    return\r\n  }\r\n  for (let i = 0, l = el.options.length; i < l; i++) {\r\n    const option = el.options[i]\r\n    const optionValue = getValue(option)\r\n    if (isMultiple) {\r\n      if (isArray(value)) {\r\n        option.selected = looseIndexOf(value, optionValue) > -1\r\n      } else {\r\n        option.selected = value.has(optionValue)\r\n      }\r\n    } else {\r\n      if (looseEqual(getValue(option), value)) {\r\n        if (el.selectedIndex !== i) el.selectedIndex = i\r\n        return\r\n      }\r\n    }\r\n  }\r\n  if (!isMultiple && el.selectedIndex !== -1) {\r\n    el.selectedIndex = -1\r\n  }\r\n}\r\n\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el: HTMLOptionElement | HTMLInputElement) {\r\n  return '_value' in el ? (el as any)._value : el.value\r\n}\r\n\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(\r\n  el: HTMLInputElement & { _trueValue?: any; _falseValue?: any },\r\n  checked: boolean\r\n) {\r\n  const key = checked ? '_trueValue' : '_falseValue'\r\n  return key in el ? el[key] : checked\r\n}\r\n\r\nexport const vModelDynamic: ObjectDirective<\r\n  HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\r\n> = {\r\n  created(el, binding, vnode) {\r\n    callModelHook(el, binding, vnode, null, 'created')\r\n  },\r\n  mounted(el, binding, vnode) {\r\n    callModelHook(el, binding, vnode, null, 'mounted')\r\n  },\r\n  beforeUpdate(el, binding, vnode, prevVNode) {\r\n    callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate')\r\n  },\r\n  updated(el, binding, vnode, prevVNode) {\r\n    callModelHook(el, binding, vnode, prevVNode, 'updated')\r\n  }\r\n}\r\n\r\nfunction resolveDynamicModel(tagName: string, type: string | undefined) {\r\n  switch (tagName) {\r\n    case 'SELECT':\r\n      return vModelSelect\r\n    case 'TEXTAREA':\r\n      return vModelText\r\n    default:\r\n      switch (type) {\r\n        case 'checkbox':\r\n          return vModelCheckbox\r\n        case 'radio':\r\n          return vModelRadio\r\n        default:\r\n          return vModelText\r\n      }\r\n  }\r\n}\r\n\r\nfunction callModelHook(\r\n  el: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement,\r\n  binding: DirectiveBinding,\r\n  vnode: VNode,\r\n  prevVNode: VNode | null,\r\n  hook: keyof ObjectDirective\r\n) {\r\n  const modelToUse = resolveDynamicModel(\r\n    el.tagName,\r\n    vnode.props && vnode.props.type\r\n  )\r\n  const fn = modelToUse[hook] as DirectiveHook\r\n  fn && fn(el, binding, vnode, prevVNode)\r\n}\r\n\r\n// SSR vnode transforms, only used when user includes client-oriented render\r\n// function in SSR\r\nexport function initVModelForSSR() {\r\n  vModelText.getSSRProps = ({ value }) => ({ value })\r\n\r\n  vModelRadio.getSSRProps = ({ value }, vnode) => {\r\n    if (vnode.props && looseEqual(vnode.props.value, value)) {\r\n      return { checked: true }\r\n    }\r\n  }\r\n\r\n  vModelCheckbox.getSSRProps = ({ value }, vnode) => {\r\n    if (isArray(value)) {\r\n      if (vnode.props && looseIndexOf(value, vnode.props.value) > -1) {\r\n        return { checked: true }\r\n      }\r\n    } else if (isSet(value)) {\r\n      if (vnode.props && value.has(vnode.props.value)) {\r\n        return { checked: true }\r\n      }\r\n    } else if (value) {\r\n      return { checked: true }\r\n    }\r\n  }\r\n\r\n  vModelDynamic.getSSRProps = (binding, vnode) => {\r\n    if (typeof vnode.type !== 'string') {\r\n      return\r\n    }\r\n    const modelToUse = resolveDynamicModel(\r\n      // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase\r\n      vnode.type.toUpperCase(),\r\n      vnode.props && vnode.props.type\r\n    )\r\n    if (modelToUse.getSSRProps) {\r\n      return modelToUse.getSSRProps(binding, vnode)\r\n    }\r\n  }\r\n}\r\n","import {\r\n  getCurrentInstance,\r\n  DeprecationTypes,\r\n  LegacyConfig,\r\n  compatUtils,\r\n  ComponentInternalInstance\r\n} from '@vue/runtime-core'\r\nimport { hyphenate, isArray } from '@vue/shared'\r\n\r\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta']\r\n\r\ntype KeyedEvent = KeyboardEvent | MouseEvent | TouchEvent\r\n\r\nconst modifierGuards: Record<\r\n  string,\r\n  (e: Event, modifiers: string[]) => void | boolean\r\n> = {\r\n  stop: e => e.stopPropagation(),\r\n  prevent: e => e.preventDefault(),\r\n  self: e => e.target !== e.currentTarget,\r\n  ctrl: e => !(e as KeyedEvent).ctrlKey,\r\n  shift: e => !(e as KeyedEvent).shiftKey,\r\n  alt: e => !(e as KeyedEvent).altKey,\r\n  meta: e => !(e as KeyedEvent).metaKey,\r\n  left: e => 'button' in e && (e as MouseEvent).button !== 0,\r\n  middle: e => 'button' in e && (e as MouseEvent).button !== 1,\r\n  right: e => 'button' in e && (e as MouseEvent).button !== 2,\r\n  exact: (e, modifiers) =>\r\n    systemModifiers.some(m => (e as any)[`${m}Key`] && !modifiers.includes(m))\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport const withModifiers = (fn: Function, modifiers: string[]) => {\r\n  return (event: Event, ...args: unknown[]) => {\r\n    for (let i = 0; i < modifiers.length; i++) {\r\n      const guard = modifierGuards[modifiers[i]]\r\n      if (guard && guard(event, modifiers)) return\r\n    }\r\n    return fn(event, ...args)\r\n  }\r\n}\r\n\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames: Record<string, string | string[]> = {\r\n  esc: 'escape',\r\n  space: ' ',\r\n  up: 'arrow-up',\r\n  left: 'arrow-left',\r\n  right: 'arrow-right',\r\n  down: 'arrow-down',\r\n  delete: 'backspace'\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport const withKeys = (fn: Function, modifiers: string[]) => {\r\n  let globalKeyCodes: LegacyConfig['keyCodes']\r\n  let instance: ComponentInternalInstance | null = null\r\n  if (__COMPAT__) {\r\n    instance = getCurrentInstance()\r\n    if (\r\n      compatUtils.isCompatEnabled(DeprecationTypes.CONFIG_KEY_CODES, instance)\r\n    ) {\r\n      if (instance) {\r\n        globalKeyCodes = (instance.appContext.config as LegacyConfig).keyCodes\r\n      }\r\n    }\r\n    if (__DEV__ && modifiers.some(m => /^\\d+$/.test(m))) {\r\n      compatUtils.warnDeprecation(\r\n        DeprecationTypes.V_ON_KEYCODE_MODIFIER,\r\n        instance\r\n      )\r\n    }\r\n  }\r\n\r\n  return (event: KeyboardEvent) => {\r\n    if (!('key' in event)) {\r\n      return\r\n    }\r\n\r\n    const eventKey = hyphenate(event.key)\r\n    if (modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n      return fn(event)\r\n    }\r\n\r\n    if (__COMPAT__) {\r\n      const keyCode = String(event.keyCode)\r\n      if (\r\n        compatUtils.isCompatEnabled(\r\n          DeprecationTypes.V_ON_KEYCODE_MODIFIER,\r\n          instance\r\n        ) &&\r\n        modifiers.some(mod => mod == keyCode)\r\n      ) {\r\n        return fn(event)\r\n      }\r\n      if (globalKeyCodes) {\r\n        for (const mod of modifiers) {\r\n          const codes = globalKeyCodes[mod]\r\n          if (codes) {\r\n            const matches = isArray(codes)\r\n              ? codes.some(code => String(code) === keyCode)\r\n              : String(codes) === keyCode\r\n            if (matches) {\r\n              return fn(event)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { ObjectDirective } from '@vue/runtime-core'\r\n\r\ninterface VShowElement extends HTMLElement {\r\n  // _vod = vue original display\r\n  _vod: string\r\n}\r\n\r\nexport const vShow: ObjectDirective<VShowElement> = {\r\n  beforeMount(el, { value }, { transition }) {\r\n    el._vod = el.style.display === 'none' ? '' : el.style.display\r\n    if (transition && value) {\r\n      transition.beforeEnter(el)\r\n    } else {\r\n      setDisplay(el, value)\r\n    }\r\n  },\r\n  mounted(el, { value }, { transition }) {\r\n    if (transition && value) {\r\n      transition.enter(el)\r\n    }\r\n  },\r\n  updated(el, { value, oldValue }, { transition }) {\r\n    if (!value === !oldValue) return\r\n    if (transition) {\r\n      if (value) {\r\n        transition.beforeEnter(el)\r\n        setDisplay(el, true)\r\n        transition.enter(el)\r\n      } else {\r\n        transition.leave(el, () => {\r\n          setDisplay(el, false)\r\n        })\r\n      }\r\n    } else {\r\n      setDisplay(el, value)\r\n    }\r\n  },\r\n  beforeUnmount(el, { value }) {\r\n    setDisplay(el, value)\r\n  }\r\n}\r\n\r\nfunction setDisplay(el: VShowElement, value: unknown): void {\r\n  el.style.display = value ? el._vod : 'none'\r\n}\r\n\r\n// SSR vnode transforms, only used when user includes client-oriented render\r\n// function in SSR\r\nexport function initVShowForSSR() {\r\n  vShow.getSSRProps = ({ value }) => {\r\n    if (!value) {\r\n      return { style: { display: 'none' } }\r\n    }\r\n  }\r\n}\r\n","import {\r\n  createRenderer,\r\n  createHydrationRenderer,\r\n  warn,\r\n  RootRenderFunction,\r\n  CreateAppFunction,\r\n  Renderer,\r\n  HydrationRenderer,\r\n  App,\r\n  RootHydrateFunction,\r\n  isRuntimeOnly,\r\n  DeprecationTypes,\r\n  compatUtils\r\n} from '@vue/runtime-core'\r\nimport { nodeOps } from './nodeOps'\r\nimport { patchProp } from './patchProp'\r\n// Importing from the compiler, will be tree-shaken in prod\r\nimport {\r\n  isFunction,\r\n  isString,\r\n  isHTMLTag,\r\n  isSVGTag,\r\n  extend,\r\n  NOOP\r\n} from '@vue/shared'\r\n\r\ndeclare module '@vue/reactivity' {\r\n  export interface RefUnwrapBailTypes {\r\n    // Note: if updating this, also update `types/refBail.d.ts`.\r\n    runtimeDOMBailTypes: Node | Window\r\n  }\r\n}\r\n\r\nconst rendererOptions = /*#__PURE__*/ extend({ patchProp }, nodeOps)\r\n\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer: Renderer<Element | ShadowRoot> | HydrationRenderer\r\n\r\nlet enabledHydration = false\r\n\r\nfunction ensureRenderer() {\r\n  return (\r\n    renderer ||\r\n    (renderer = createRenderer<Node, Element | ShadowRoot>(rendererOptions))\r\n  )\r\n}\r\n\r\nfunction ensureHydrationRenderer() {\r\n  renderer = enabledHydration\r\n    ? renderer\r\n    : createHydrationRenderer(rendererOptions)\r\n  enabledHydration = true\r\n  return renderer as HydrationRenderer\r\n}\r\n\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nexport const render = ((...args) => {\r\n  ensureRenderer().render(...args)\r\n}) as RootRenderFunction<Element | ShadowRoot>\r\n\r\nexport const hydrate = ((...args) => {\r\n  ensureHydrationRenderer().hydrate(...args)\r\n}) as RootHydrateFunction\r\n\r\nexport const createApp = ((...args) => {\r\n  const app = ensureRenderer().createApp(...args)\r\n\r\n  if (__DEV__) {\r\n    injectNativeTagCheck(app)\r\n    injectCompilerOptionsCheck(app)\r\n  }\r\n\r\n  const { mount } = app\r\n  app.mount = (containerOrSelector: Element | ShadowRoot | string): any => {\r\n    const container = normalizeContainer(containerOrSelector)\r\n    if (!container) return\r\n\r\n    const component = app._component\r\n    if (!isFunction(component) && !component.render && !component.template) {\r\n      // __UNSAFE__\r\n      // Reason: potential execution of JS expressions in in-DOM template.\r\n      // The user must make sure the in-DOM template is trusted. If it's\r\n      // rendered by the server, the template should not contain any user data.\r\n      component.template = container.innerHTML\r\n      // 2.x compat check\r\n      if (__COMPAT__ && __DEV__) {\r\n        for (let i = 0; i < container.attributes.length; i++) {\r\n          const attr = container.attributes[i]\r\n          if (attr.name !== 'v-cloak' && /^(v-|:|@)/.test(attr.name)) {\r\n            compatUtils.warnDeprecation(\r\n              DeprecationTypes.GLOBAL_MOUNT_CONTAINER,\r\n              null\r\n            )\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // clear content before mounting\r\n    container.innerHTML = ''\r\n    const proxy = mount(container, false, container instanceof SVGElement)\r\n    if (container instanceof Element) {\r\n      container.removeAttribute('v-cloak')\r\n      container.setAttribute('data-v-app', '')\r\n    }\r\n    return proxy\r\n  }\r\n\r\n  return app\r\n}) as CreateAppFunction<Element>\r\n\r\nexport const createSSRApp = ((...args) => {\r\n  const app = ensureHydrationRenderer().createApp(...args)\r\n\r\n  if (__DEV__) {\r\n    injectNativeTagCheck(app)\r\n    injectCompilerOptionsCheck(app)\r\n  }\r\n\r\n  const { mount } = app\r\n  app.mount = (containerOrSelector: Element | ShadowRoot | string): any => {\r\n    const container = normalizeContainer(containerOrSelector)\r\n    if (container) {\r\n      return mount(container, true, container instanceof SVGElement)\r\n    }\r\n  }\r\n\r\n  return app\r\n}) as CreateAppFunction<Element>\r\n\r\nfunction injectNativeTagCheck(app: App) {\r\n  // Inject `isNativeTag`\r\n  // this is used for component name validation (dev only)\r\n  Object.defineProperty(app.config, 'isNativeTag', {\r\n    value: (tag: string) => isHTMLTag(tag) || isSVGTag(tag),\r\n    writable: false\r\n  })\r\n}\r\n\r\n// dev only\r\nfunction injectCompilerOptionsCheck(app: App) {\r\n  if (isRuntimeOnly()) {\r\n    const isCustomElement = app.config.isCustomElement\r\n    Object.defineProperty(app.config, 'isCustomElement', {\r\n      get() {\r\n        return isCustomElement\r\n      },\r\n      set() {\r\n        warn(\r\n          `The \\`isCustomElement\\` config option is deprecated. Use ` +\r\n            `\\`compilerOptions.isCustomElement\\` instead.`\r\n        )\r\n      }\r\n    })\r\n\r\n    const compilerOptions = app.config.compilerOptions\r\n    const msg =\r\n      `The \\`compilerOptions\\` config option is only respected when using ` +\r\n      `a build of Vue.js that includes the runtime compiler (aka \"full build\"). ` +\r\n      `Since you are using the runtime-only build, \\`compilerOptions\\` ` +\r\n      `must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\\n` +\r\n      `- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\\n` +\r\n      `- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\\n` +\r\n      `- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-dom`\r\n\r\n    Object.defineProperty(app.config, 'compilerOptions', {\r\n      get() {\r\n        warn(msg)\r\n        return compilerOptions\r\n      },\r\n      set() {\r\n        warn(msg)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction normalizeContainer(\r\n  container: Element | ShadowRoot | string\r\n): Element | null {\r\n  if (isString(container)) {\r\n    const res = document.querySelector(container)\r\n    if (__DEV__ && !res) {\r\n      warn(\r\n        `Failed to mount app: mount target selector \"${container}\" returned null.`\r\n      )\r\n    }\r\n    return res\r\n  }\r\n  if (\r\n    __DEV__ &&\r\n    window.ShadowRoot &&\r\n    container instanceof window.ShadowRoot &&\r\n    container.mode === 'closed'\r\n  ) {\r\n    warn(\r\n      `mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`\r\n    )\r\n  }\r\n  return container as any\r\n}\r\n\r\n// Custom element support\r\nexport {\r\n  defineCustomElement,\r\n  defineSSRCustomElement,\r\n  VueElement,\r\n  VueElementConstructor\r\n} from './apiCustomElement'\r\n\r\n// SFC CSS utilities\r\nexport { useCssModule } from './helpers/useCssModule'\r\nexport { useCssVars } from './helpers/useCssVars'\r\n\r\n// DOM-only components\r\nexport { Transition, TransitionProps } from './components/Transition'\r\nexport {\r\n  TransitionGroup,\r\n  TransitionGroupProps\r\n} from './components/TransitionGroup'\r\n\r\n// **Internal** DOM-only runtime directive helpers\r\nexport {\r\n  vModelText,\r\n  vModelCheckbox,\r\n  vModelRadio,\r\n  vModelSelect,\r\n  vModelDynamic\r\n} from './directives/vModel'\r\nexport { withModifiers, withKeys } from './directives/vOn'\r\nexport { vShow } from './directives/vShow'\r\n\r\nimport { initVModelForSSR } from './directives/vModel'\r\nimport { initVShowForSSR } from './directives/vShow'\r\n\r\nlet ssrDirectiveInitialized = false\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const initDirectivesForSSR = __SSR__\r\n  ? () => {\r\n      if (!ssrDirectiveInitialized) {\r\n        ssrDirectiveInitialized = true\r\n        initVModelForSSR()\r\n        initVShowForSSR()\r\n      }\r\n    }\r\n  : NOOP\r\n\r\n// re-export everything from core\r\n// h, Component, reactivity API, nextTick, flags & types\r\nexport * from '@vue/runtime-core'\r\n","import { ElementWithTransition } from '../components/Transition'\r\n\r\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nexport function patchClass(el: Element, value: string | null, isSVG: boolean) {\r\n  // directly setting className should be faster than setAttribute in theory\r\n  // if this is an element during a transition, take the temporary transition\r\n  // classes into account.\r\n  const transitionClasses = (el as ElementWithTransition)._vtc\r\n  if (transitionClasses) {\r\n    value = (\r\n      value ? [value, ...transitionClasses] : [...transitionClasses]\r\n    ).join(' ')\r\n  }\r\n  if (value == null) {\r\n    el.removeAttribute('class')\r\n  } else if (isSVG) {\r\n    el.setAttribute('class', value)\r\n  } else {\r\n    el.className = value\r\n  }\r\n}\r\n","// __UNSAFE__\r\n// Reason: potentially setting innerHTML.\r\n// This can come from explicit usage of v-html or innerHTML as a prop in render\r\n\r\nimport { warn, DeprecationTypes, compatUtils } from '@vue/runtime-core'\r\nimport { includeBooleanAttr } from '@vue/shared'\r\n\r\n// functions. The user is responsible for using them with only trusted content.\r\nexport function patchDOMProp(\r\n  el: any,\r\n  key: string,\r\n  value: any,\r\n  // the following args are passed only due to potential innerHTML/textContent\r\n  // overriding existing VNodes, in which case the old tree must be properly\r\n  // unmounted.\r\n  prevChildren: any,\r\n  parentComponent: any,\r\n  parentSuspense: any,\r\n  unmountChildren: any\r\n) {\r\n  if (key === 'innerHTML' || key === 'textContent') {\r\n    if (prevChildren) {\r\n      unmountChildren(prevChildren, parentComponent, parentSuspense)\r\n    }\r\n    el[key] = value == null ? '' : value\r\n    return\r\n  }\r\n\r\n  if (\r\n    key === 'value' &&\r\n    el.tagName !== 'PROGRESS' &&\r\n    // custom elements may use _value internally\r\n    !el.tagName.includes('-')\r\n  ) {\r\n    // store value as _value as well since\r\n    // non-string values will be stringified.\r\n    el._value = value\r\n    const newValue = value == null ? '' : value\r\n    if (\r\n      el.value !== newValue ||\r\n      // #4956: always set for OPTION elements because its value falls back to\r\n      // textContent if no value attribute is present. And setting .value for\r\n      // OPTION has no side effect\r\n      el.tagName === 'OPTION'\r\n    ) {\r\n      el.value = newValue\r\n    }\r\n    if (value == null) {\r\n      el.removeAttribute(key)\r\n    }\r\n    return\r\n  }\r\n\r\n  let needRemove = false\r\n  if (value === '' || value == null) {\r\n    const type = typeof el[key]\r\n    if (type === 'boolean') {\r\n      // e.g. <select multiple> compiles to { multiple: '' }\r\n      value = includeBooleanAttr(value)\r\n    } else if (value == null && type === 'string') {\r\n      // e.g. <div :id=\"null\">\r\n      value = ''\r\n      needRemove = true\r\n    } else if (type === 'number') {\r\n      // e.g. <img :width=\"null\">\r\n      // the value of some IDL attr must be greater than 0, e.g. input.size = 0 -> error\r\n      value = 0\r\n      needRemove = true\r\n    }\r\n  } else {\r\n    if (\r\n      __COMPAT__ &&\r\n      value === false &&\r\n      compatUtils.isCompatEnabled(\r\n        DeprecationTypes.ATTR_FALSE_VALUE,\r\n        parentComponent\r\n      )\r\n    ) {\r\n      const type = typeof el[key]\r\n      if (type === 'string' || type === 'number') {\r\n        __DEV__ &&\r\n          compatUtils.warnDeprecation(\r\n            DeprecationTypes.ATTR_FALSE_VALUE,\r\n            parentComponent,\r\n            key\r\n          )\r\n        value = type === 'number' ? 0 : ''\r\n        needRemove = true\r\n      }\r\n    }\r\n  }\r\n\r\n  // some properties perform value validation and throw,\r\n  // some properties has getter, no setter, will error in 'use strict'\r\n  // eg. <select :type=\"null\"></select> <select :willValidate=\"null\"></select>\r\n  try {\r\n    el[key] = value\r\n  } catch (e: any) {\r\n    if (__DEV__) {\r\n      warn(\r\n        `Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n          `value ${value} is invalid.`,\r\n        e\r\n      )\r\n    }\r\n  }\r\n  needRemove && el.removeAttribute(key)\r\n}\r\n","import { SourceLocation } from './ast'\r\n\r\nexport interface CompilerError extends SyntaxError {\r\n  code: number | string\r\n  loc?: SourceLocation\r\n}\r\n\r\nexport interface CoreCompilerError extends CompilerError {\r\n  code: ErrorCodes\r\n}\r\n\r\nexport function defaultOnError(error: CompilerError) {\r\n  throw error\r\n}\r\n\r\nexport function defaultOnWarn(msg: CompilerError) {\r\n  __DEV__ && console.warn(`[Vue warn] ${msg.message}`)\r\n}\r\n\r\ntype InferCompilerError<T> = T extends ErrorCodes\r\n  ? CoreCompilerError\r\n  : CompilerError\r\n\r\nexport function createCompilerError<T extends number>(\r\n  code: T,\r\n  loc?: SourceLocation,\r\n  messages?: { [code: number]: string },\r\n  additionalMessage?: string\r\n): InferCompilerError<T> {\r\n  const msg =\r\n    __DEV__ || !__BROWSER__\r\n      ? (messages || errorMessages)[code] + (additionalMessage || ``)\r\n      : code\r\n  const error = new SyntaxError(String(msg)) as InferCompilerError<T>\r\n  error.code = code\r\n  error.loc = loc\r\n  return error\r\n}\r\n\r\nexport const enum ErrorCodes {\r\n  // parse errors\r\n  ABRUPT_CLOSING_OF_EMPTY_COMMENT,\r\n  CDATA_IN_HTML_CONTENT,\r\n  DUPLICATE_ATTRIBUTE,\r\n  END_TAG_WITH_ATTRIBUTES,\r\n  END_TAG_WITH_TRAILING_SOLIDUS,\r\n  EOF_BEFORE_TAG_NAME,\r\n  EOF_IN_CDATA,\r\n  EOF_IN_COMMENT,\r\n  EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT,\r\n  EOF_IN_TAG,\r\n  INCORRECTLY_CLOSED_COMMENT,\r\n  INCORRECTLY_OPENED_COMMENT,\r\n  INVALID_FIRST_CHARACTER_OF_TAG_NAME,\r\n  MISSING_ATTRIBUTE_VALUE,\r\n  MISSING_END_TAG_NAME,\r\n  MISSING_WHITESPACE_BETWEEN_ATTRIBUTES,\r\n  NESTED_COMMENT,\r\n  UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME,\r\n  UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE,\r\n  UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME,\r\n  UNEXPECTED_NULL_CHARACTER,\r\n  UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME,\r\n  UNEXPECTED_SOLIDUS_IN_TAG,\r\n\r\n  // Vue-specific parse errors\r\n  X_INVALID_END_TAG,\r\n  X_MISSING_END_TAG,\r\n  X_MISSING_INTERPOLATION_END,\r\n  X_MISSING_DIRECTIVE_NAME,\r\n  X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END,\r\n\r\n  // transform errors\r\n  X_V_IF_NO_EXPRESSION,\r\n  X_V_IF_SAME_KEY,\r\n  X_V_ELSE_NO_ADJACENT_IF,\r\n  X_V_FOR_NO_EXPRESSION,\r\n  X_V_FOR_MALFORMED_EXPRESSION,\r\n  X_V_FOR_TEMPLATE_KEY_PLACEMENT,\r\n  X_V_BIND_NO_EXPRESSION,\r\n  X_V_ON_NO_EXPRESSION,\r\n  X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET,\r\n  X_V_SLOT_MIXED_SLOT_USAGE,\r\n  X_V_SLOT_DUPLICATE_SLOT_NAMES,\r\n  X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN,\r\n  X_V_SLOT_MISPLACED,\r\n  X_V_MODEL_NO_EXPRESSION,\r\n  X_V_MODEL_MALFORMED_EXPRESSION,\r\n  X_V_MODEL_ON_SCOPE_VARIABLE,\r\n  X_INVALID_EXPRESSION,\r\n  X_KEEP_ALIVE_INVALID_CHILDREN,\r\n\r\n  // generic errors\r\n  X_PREFIX_ID_NOT_SUPPORTED,\r\n  X_MODULE_MODE_NOT_SUPPORTED,\r\n  X_CACHE_HANDLER_NOT_SUPPORTED,\r\n  X_SCOPE_ID_NOT_SUPPORTED,\r\n\r\n  // Special value for higher-order compilers to pick up the last code\r\n  // to avoid collision of error codes. This should always be kept as the last\r\n  // item.\r\n  __EXTEND_POINT__\r\n}\r\n\r\nexport const errorMessages: Record<ErrorCodes, string> = {\r\n  // parse errors\r\n  [ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT]: 'Illegal comment.',\r\n  [ErrorCodes.CDATA_IN_HTML_CONTENT]:\r\n    'CDATA section is allowed only in XML context.',\r\n  [ErrorCodes.DUPLICATE_ATTRIBUTE]: 'Duplicate attribute.',\r\n  [ErrorCodes.END_TAG_WITH_ATTRIBUTES]: 'End tag cannot have attributes.',\r\n  [ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS]: \"Illegal '/' in tags.\",\r\n  [ErrorCodes.EOF_BEFORE_TAG_NAME]: 'Unexpected EOF in tag.',\r\n  [ErrorCodes.EOF_IN_CDATA]: 'Unexpected EOF in CDATA section.',\r\n  [ErrorCodes.EOF_IN_COMMENT]: 'Unexpected EOF in comment.',\r\n  [ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT]:\r\n    'Unexpected EOF in script.',\r\n  [ErrorCodes.EOF_IN_TAG]: 'Unexpected EOF in tag.',\r\n  [ErrorCodes.INCORRECTLY_CLOSED_COMMENT]: 'Incorrectly closed comment.',\r\n  [ErrorCodes.INCORRECTLY_OPENED_COMMENT]: 'Incorrectly opened comment.',\r\n  [ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME]:\r\n    \"Illegal tag name. Use '&lt;' to print '<'.\",\r\n  [ErrorCodes.MISSING_ATTRIBUTE_VALUE]: 'Attribute value was expected.',\r\n  [ErrorCodes.MISSING_END_TAG_NAME]: 'End tag name was expected.',\r\n  [ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES]:\r\n    'Whitespace was expected.',\r\n  [ErrorCodes.NESTED_COMMENT]: \"Unexpected '<!--' in comment.\",\r\n  [ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME]:\r\n    'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\r\n  [ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE]:\r\n    'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\r\n  [ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME]:\r\n    \"Attribute name cannot start with '='.\",\r\n  [ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME]:\r\n    \"'<?' is allowed only in XML context.\",\r\n  [ErrorCodes.UNEXPECTED_NULL_CHARACTER]: `Unexpected null character.`,\r\n  [ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG]: \"Illegal '/' in tags.\",\r\n\r\n  // Vue-specific parse errors\r\n  [ErrorCodes.X_INVALID_END_TAG]: 'Invalid end tag.',\r\n  [ErrorCodes.X_MISSING_END_TAG]: 'Element is missing end tag.',\r\n  [ErrorCodes.X_MISSING_INTERPOLATION_END]:\r\n    'Interpolation end sign was not found.',\r\n  [ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END]:\r\n    'End bracket for dynamic directive argument was not found. ' +\r\n    'Note that dynamic directive argument cannot contain spaces.',\r\n  [ErrorCodes.X_MISSING_DIRECTIVE_NAME]: 'Legal directive name was expected.',\r\n\r\n  // transform errors\r\n  [ErrorCodes.X_V_IF_NO_EXPRESSION]: `v-if/v-else-if is missing expression.`,\r\n  [ErrorCodes.X_V_IF_SAME_KEY]: `v-if/else branches must use unique keys.`,\r\n  [ErrorCodes.X_V_ELSE_NO_ADJACENT_IF]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\r\n  [ErrorCodes.X_V_FOR_NO_EXPRESSION]: `v-for is missing expression.`,\r\n  [ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION]: `v-for has invalid expression.`,\r\n  [ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT]: `<template v-for> key should be placed on the <template> tag.`,\r\n  [ErrorCodes.X_V_BIND_NO_EXPRESSION]: `v-bind is missing expression.`,\r\n  [ErrorCodes.X_V_ON_NO_EXPRESSION]: `v-on is missing expression.`,\r\n  [ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET]: `Unexpected custom directive on <slot> outlet.`,\r\n  [ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE]:\r\n    `Mixed v-slot usage on both the component and nested <template>.` +\r\n    `When there are multiple named slots, all slots should use <template> ` +\r\n    `syntax to avoid scope ambiguity.`,\r\n  [ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES]: `Duplicate slot names found. `,\r\n  [ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN]:\r\n    `Extraneous children found when component already has explicitly named ` +\r\n    `default slot. These children will be ignored.`,\r\n  [ErrorCodes.X_V_SLOT_MISPLACED]: `v-slot can only be used on components or <template> tags.`,\r\n  [ErrorCodes.X_V_MODEL_NO_EXPRESSION]: `v-model is missing expression.`,\r\n  [ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION]: `v-model value must be a valid JavaScript member expression.`,\r\n  [ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\r\n  [ErrorCodes.X_INVALID_EXPRESSION]: `Error parsing JavaScript expression: `,\r\n  [ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN]: `<KeepAlive> expects exactly one child component.`,\r\n\r\n  // generic errors\r\n  [ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\r\n  [ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED]: `ES module mode is not supported in this build of compiler.`,\r\n  [ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\r\n  [ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED]: `\"scopeId\" option is only supported in module mode.`,\r\n\r\n  // just to fulfill types\r\n  [ErrorCodes.__EXTEND_POINT__]: ``\r\n}\r\n","export const FRAGMENT = Symbol(__DEV__ ? `Fragment` : ``)\r\nexport const TELEPORT = Symbol(__DEV__ ? `Teleport` : ``)\r\nexport const SUSPENSE = Symbol(__DEV__ ? `Suspense` : ``)\r\nexport const KEEP_ALIVE = Symbol(__DEV__ ? `KeepAlive` : ``)\r\nexport const BASE_TRANSITION = Symbol(__DEV__ ? `BaseTransition` : ``)\r\nexport const OPEN_BLOCK = Symbol(__DEV__ ? `openBlock` : ``)\r\nexport const CREATE_BLOCK = Symbol(__DEV__ ? `createBlock` : ``)\r\nexport const CREATE_ELEMENT_BLOCK = Symbol(__DEV__ ? `createElementBlock` : ``)\r\nexport const CREATE_VNODE = Symbol(__DEV__ ? `createVNode` : ``)\r\nexport const CREATE_ELEMENT_VNODE = Symbol(__DEV__ ? `createElementVNode` : ``)\r\nexport const CREATE_COMMENT = Symbol(__DEV__ ? `createCommentVNode` : ``)\r\nexport const CREATE_TEXT = Symbol(__DEV__ ? `createTextVNode` : ``)\r\nexport const CREATE_STATIC = Symbol(__DEV__ ? `createStaticVNode` : ``)\r\nexport const RESOLVE_COMPONENT = Symbol(__DEV__ ? `resolveComponent` : ``)\r\nexport const RESOLVE_DYNAMIC_COMPONENT = Symbol(\r\n  __DEV__ ? `resolveDynamicComponent` : ``\r\n)\r\nexport const RESOLVE_DIRECTIVE = Symbol(__DEV__ ? `resolveDirective` : ``)\r\nexport const RESOLVE_FILTER = Symbol(__DEV__ ? `resolveFilter` : ``)\r\nexport const WITH_DIRECTIVES = Symbol(__DEV__ ? `withDirectives` : ``)\r\nexport const RENDER_LIST = Symbol(__DEV__ ? `renderList` : ``)\r\nexport const RENDER_SLOT = Symbol(__DEV__ ? `renderSlot` : ``)\r\nexport const CREATE_SLOTS = Symbol(__DEV__ ? `createSlots` : ``)\r\nexport const TO_DISPLAY_STRING = Symbol(__DEV__ ? `toDisplayString` : ``)\r\nexport const MERGE_PROPS = Symbol(__DEV__ ? `mergeProps` : ``)\r\nexport const NORMALIZE_CLASS = Symbol(__DEV__ ? `normalizeClass` : ``)\r\nexport const NORMALIZE_STYLE = Symbol(__DEV__ ? `normalizeStyle` : ``)\r\nexport const NORMALIZE_PROPS = Symbol(__DEV__ ? `normalizeProps` : ``)\r\nexport const GUARD_REACTIVE_PROPS = Symbol(__DEV__ ? `guardReactiveProps` : ``)\r\nexport const TO_HANDLERS = Symbol(__DEV__ ? `toHandlers` : ``)\r\nexport const CAMELIZE = Symbol(__DEV__ ? `camelize` : ``)\r\nexport const CAPITALIZE = Symbol(__DEV__ ? `capitalize` : ``)\r\nexport const TO_HANDLER_KEY = Symbol(__DEV__ ? `toHandlerKey` : ``)\r\nexport const SET_BLOCK_TRACKING = Symbol(__DEV__ ? `setBlockTracking` : ``)\r\nexport const PUSH_SCOPE_ID = Symbol(__DEV__ ? `pushScopeId` : ``)\r\nexport const POP_SCOPE_ID = Symbol(__DEV__ ? `popScopeId` : ``)\r\nexport const WITH_CTX = Symbol(__DEV__ ? `withCtx` : ``)\r\nexport const UNREF = Symbol(__DEV__ ? `unref` : ``)\r\nexport const IS_REF = Symbol(__DEV__ ? `isRef` : ``)\r\nexport const WITH_MEMO = Symbol(__DEV__ ? `withMemo` : ``)\r\nexport const IS_MEMO_SAME = Symbol(__DEV__ ? `isMemoSame` : ``)\r\n\r\n// Name mapping for runtime helpers that need to be imported from 'vue' in\r\n// generated code. Make sure these are correctly exported in the runtime!\r\n// Using `any` here because TS doesn't allow symbols as index type.\r\nexport const helperNameMap: any = {\r\n  [FRAGMENT]: `Fragment`,\r\n  [TELEPORT]: `Teleport`,\r\n  [SUSPENSE]: `Suspense`,\r\n  [KEEP_ALIVE]: `KeepAlive`,\r\n  [BASE_TRANSITION]: `BaseTransition`,\r\n  [OPEN_BLOCK]: `openBlock`,\r\n  [CREATE_BLOCK]: `createBlock`,\r\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\r\n  [CREATE_VNODE]: `createVNode`,\r\n  [CREATE_ELEMENT_VNODE]: `createElementVNode`,\r\n  [CREATE_COMMENT]: `createCommentVNode`,\r\n  [CREATE_TEXT]: `createTextVNode`,\r\n  [CREATE_STATIC]: `createStaticVNode`,\r\n  [RESOLVE_COMPONENT]: `resolveComponent`,\r\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\r\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\r\n  [RESOLVE_FILTER]: `resolveFilter`,\r\n  [WITH_DIRECTIVES]: `withDirectives`,\r\n  [RENDER_LIST]: `renderList`,\r\n  [RENDER_SLOT]: `renderSlot`,\r\n  [CREATE_SLOTS]: `createSlots`,\r\n  [TO_DISPLAY_STRING]: `toDisplayString`,\r\n  [MERGE_PROPS]: `mergeProps`,\r\n  [NORMALIZE_CLASS]: `normalizeClass`,\r\n  [NORMALIZE_STYLE]: `normalizeStyle`,\r\n  [NORMALIZE_PROPS]: `normalizeProps`,\r\n  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\r\n  [TO_HANDLERS]: `toHandlers`,\r\n  [CAMELIZE]: `camelize`,\r\n  [CAPITALIZE]: `capitalize`,\r\n  [TO_HANDLER_KEY]: `toHandlerKey`,\r\n  [SET_BLOCK_TRACKING]: `setBlockTracking`,\r\n  [PUSH_SCOPE_ID]: `pushScopeId`,\r\n  [POP_SCOPE_ID]: `popScopeId`,\r\n  [WITH_CTX]: `withCtx`,\r\n  [UNREF]: `unref`,\r\n  [IS_REF]: `isRef`,\r\n  [WITH_MEMO]: `withMemo`,\r\n  [IS_MEMO_SAME]: `isMemoSame`\r\n}\r\n\r\nexport function registerRuntimeHelpers(helpers: any) {\r\n  Object.getOwnPropertySymbols(helpers).forEach(s => {\r\n    helperNameMap[s] = helpers[s]\r\n  })\r\n}\r\n","import { isString } from '@vue/shared'\r\nimport { ForParseResult } from './transforms/vFor'\r\nimport {\r\n  RENDER_SLOT,\r\n  CREATE_SLOTS,\r\n  RENDER_LIST,\r\n  OPEN_BLOCK,\r\n  FRAGMENT,\r\n  WITH_DIRECTIVES,\r\n  WITH_MEMO\r\n} from './runtimeHelpers'\r\nimport { PropsExpression } from './transforms/transformElement'\r\nimport { ImportItem, TransformContext } from './transform'\r\nimport { getVNodeBlockHelper, getVNodeHelper } from './utils'\r\n\r\n// Vue template is a platform-agnostic superset of HTML (syntax only).\r\n// More namespaces like SVG and MathML are declared by platform specific\r\n// compilers.\r\nexport type Namespace = number\r\n\r\nexport const enum Namespaces {\r\n  HTML\r\n}\r\n\r\nexport const enum NodeTypes {\r\n  ROOT,\r\n  ELEMENT,\r\n  TEXT,\r\n  COMMENT,\r\n  SIMPLE_EXPRESSION,\r\n  INTERPOLATION,\r\n  ATTRIBUTE,\r\n  DIRECTIVE,\r\n  // containers\r\n  COMPOUND_EXPRESSION,\r\n  IF,\r\n  IF_BRANCH,\r\n  FOR,\r\n  TEXT_CALL,\r\n  // codegen\r\n  VNODE_CALL,\r\n  JS_CALL_EXPRESSION,\r\n  JS_OBJECT_EXPRESSION,\r\n  JS_PROPERTY,\r\n  JS_ARRAY_EXPRESSION,\r\n  JS_FUNCTION_EXPRESSION,\r\n  JS_CONDITIONAL_EXPRESSION,\r\n  JS_CACHE_EXPRESSION,\r\n\r\n  // ssr codegen\r\n  JS_BLOCK_STATEMENT,\r\n  JS_TEMPLATE_LITERAL,\r\n  JS_IF_STATEMENT,\r\n  JS_ASSIGNMENT_EXPRESSION,\r\n  JS_SEQUENCE_EXPRESSION,\r\n  JS_RETURN_STATEMENT\r\n}\r\n\r\nexport const enum ElementTypes {\r\n  ELEMENT,\r\n  COMPONENT,\r\n  SLOT,\r\n  TEMPLATE\r\n}\r\n\r\nexport interface Node {\r\n  type: NodeTypes\r\n  loc: SourceLocation\r\n}\r\n\r\n// The node's range. The `start` is inclusive and `end` is exclusive.\r\n// [start, end)\r\nexport interface SourceLocation {\r\n  start: Position\r\n  end: Position\r\n  source: string\r\n}\r\n\r\nexport interface Position {\r\n  offset: number // from start of file\r\n  line: number\r\n  column: number\r\n}\r\n\r\nexport type ParentNode = RootNode | ElementNode | IfBranchNode | ForNode\r\n\r\nexport type ExpressionNode = SimpleExpressionNode | CompoundExpressionNode\r\n\r\nexport type TemplateChildNode =\r\n  | ElementNode\r\n  | InterpolationNode\r\n  | CompoundExpressionNode\r\n  | TextNode\r\n  | CommentNode\r\n  | IfNode\r\n  | IfBranchNode\r\n  | ForNode\r\n  | TextCallNode\r\n\r\nexport interface RootNode extends Node {\r\n  type: NodeTypes.ROOT\r\n  children: TemplateChildNode[]\r\n  helpers: symbol[]\r\n  components: string[]\r\n  directives: string[]\r\n  hoists: (JSChildNode | null)[]\r\n  imports: ImportItem[]\r\n  cached: number\r\n  temps: number\r\n  ssrHelpers?: symbol[]\r\n  codegenNode?: TemplateChildNode | JSChildNode | BlockStatement\r\n\r\n  // v2 compat only\r\n  filters?: string[]\r\n}\r\n\r\nexport type ElementNode =\r\n  | PlainElementNode\r\n  | ComponentNode\r\n  | SlotOutletNode\r\n  | TemplateNode\r\n\r\nexport interface BaseElementNode extends Node {\r\n  type: NodeTypes.ELEMENT\r\n  ns: Namespace\r\n  tag: string\r\n  tagType: ElementTypes\r\n  isSelfClosing: boolean\r\n  props: Array<AttributeNode | DirectiveNode>\r\n  children: TemplateChildNode[]\r\n}\r\n\r\nexport interface PlainElementNode extends BaseElementNode {\r\n  tagType: ElementTypes.ELEMENT\r\n  codegenNode:\r\n    | VNodeCall\r\n    | SimpleExpressionNode // when hoisted\r\n    | CacheExpression // when cached by v-once\r\n    | MemoExpression // when cached by v-memo\r\n    | undefined\r\n  ssrCodegenNode?: TemplateLiteral\r\n}\r\n\r\nexport interface ComponentNode extends BaseElementNode {\r\n  tagType: ElementTypes.COMPONENT\r\n  codegenNode:\r\n    | VNodeCall\r\n    | CacheExpression // when cached by v-once\r\n    | MemoExpression // when cached by v-memo\r\n    | undefined\r\n  ssrCodegenNode?: CallExpression\r\n}\r\n\r\nexport interface SlotOutletNode extends BaseElementNode {\r\n  tagType: ElementTypes.SLOT\r\n  codegenNode:\r\n    | RenderSlotCall\r\n    | CacheExpression // when cached by v-once\r\n    | undefined\r\n  ssrCodegenNode?: CallExpression\r\n}\r\n\r\nexport interface TemplateNode extends BaseElementNode {\r\n  tagType: ElementTypes.TEMPLATE\r\n  // TemplateNode is a container type that always gets compiled away\r\n  codegenNode: undefined\r\n}\r\n\r\nexport interface TextNode extends Node {\r\n  type: NodeTypes.TEXT\r\n  content: string\r\n}\r\n\r\nexport interface CommentNode extends Node {\r\n  type: NodeTypes.COMMENT\r\n  content: string\r\n}\r\n\r\nexport interface AttributeNode extends Node {\r\n  type: NodeTypes.ATTRIBUTE\r\n  name: string\r\n  value: TextNode | undefined\r\n}\r\n\r\nexport interface DirectiveNode extends Node {\r\n  type: NodeTypes.DIRECTIVE\r\n  name: string\r\n  exp: ExpressionNode | undefined\r\n  arg: ExpressionNode | undefined\r\n  modifiers: string[]\r\n  /**\r\n   * optional property to cache the expression parse result for v-for\r\n   */\r\n  parseResult?: ForParseResult\r\n}\r\n\r\n/**\r\n * Static types have several levels.\r\n * Higher levels implies lower levels. e.g. a node that can be stringified\r\n * can always be hoisted and skipped for patch.\r\n */\r\nexport const enum ConstantTypes {\r\n  NOT_CONSTANT = 0,\r\n  CAN_SKIP_PATCH,\r\n  CAN_HOIST,\r\n  CAN_STRINGIFY\r\n}\r\n\r\nexport interface SimpleExpressionNode extends Node {\r\n  type: NodeTypes.SIMPLE_EXPRESSION\r\n  content: string\r\n  isStatic: boolean\r\n  constType: ConstantTypes\r\n  /**\r\n   * Indicates this is an identifier for a hoist vnode call and points to the\r\n   * hoisted node.\r\n   */\r\n  hoisted?: JSChildNode\r\n  /**\r\n   * an expression parsed as the params of a function will track\r\n   * the identifiers declared inside the function body.\r\n   */\r\n  identifiers?: string[]\r\n  isHandlerKey?: boolean\r\n}\r\n\r\nexport interface InterpolationNode extends Node {\r\n  type: NodeTypes.INTERPOLATION\r\n  content: ExpressionNode\r\n}\r\n\r\nexport interface CompoundExpressionNode extends Node {\r\n  type: NodeTypes.COMPOUND_EXPRESSION\r\n  children: (\r\n    | SimpleExpressionNode\r\n    | CompoundExpressionNode\r\n    | InterpolationNode\r\n    | TextNode\r\n    | string\r\n    | symbol\r\n  )[]\r\n\r\n  /**\r\n   * an expression parsed as the params of a function will track\r\n   * the identifiers declared inside the function body.\r\n   */\r\n  identifiers?: string[]\r\n  isHandlerKey?: boolean\r\n}\r\n\r\nexport interface IfNode extends Node {\r\n  type: NodeTypes.IF\r\n  branches: IfBranchNode[]\r\n  codegenNode?: IfConditionalExpression | CacheExpression // <div v-if v-once>\r\n}\r\n\r\nexport interface IfBranchNode extends Node {\r\n  type: NodeTypes.IF_BRANCH\r\n  condition: ExpressionNode | undefined // else\r\n  children: TemplateChildNode[]\r\n  userKey?: AttributeNode | DirectiveNode\r\n  isTemplateIf?: boolean\r\n}\r\n\r\nexport interface ForNode extends Node {\r\n  type: NodeTypes.FOR\r\n  source: ExpressionNode\r\n  valueAlias: ExpressionNode | undefined\r\n  keyAlias: ExpressionNode | undefined\r\n  objectIndexAlias: ExpressionNode | undefined\r\n  parseResult: ForParseResult\r\n  children: TemplateChildNode[]\r\n  codegenNode?: ForCodegenNode\r\n}\r\n\r\nexport interface TextCallNode extends Node {\r\n  type: NodeTypes.TEXT_CALL\r\n  content: TextNode | InterpolationNode | CompoundExpressionNode\r\n  codegenNode: CallExpression | SimpleExpressionNode // when hoisted\r\n}\r\n\r\nexport type TemplateTextChildNode =\r\n  | TextNode\r\n  | InterpolationNode\r\n  | CompoundExpressionNode\r\n\r\nexport interface VNodeCall extends Node {\r\n  type: NodeTypes.VNODE_CALL\r\n  tag: string | symbol | CallExpression\r\n  props: PropsExpression | undefined\r\n  children:\r\n    | TemplateChildNode[] // multiple children\r\n    | TemplateTextChildNode // single text child\r\n    | SlotsExpression // component slots\r\n    | ForRenderListExpression // v-for fragment call\r\n    | SimpleExpressionNode // hoisted\r\n    | undefined\r\n  patchFlag: string | undefined\r\n  dynamicProps: string | SimpleExpressionNode | undefined\r\n  directives: DirectiveArguments | undefined\r\n  isBlock: boolean\r\n  disableTracking: boolean\r\n  isComponent: boolean\r\n}\r\n\r\n// JS Node Types ---------------------------------------------------------------\r\n\r\n// We also include a number of JavaScript AST nodes for code generation.\r\n// The AST is an intentionally minimal subset just to meet the exact needs of\r\n// Vue render function generation.\r\n\r\nexport type JSChildNode =\r\n  | VNodeCall\r\n  | CallExpression\r\n  | ObjectExpression\r\n  | ArrayExpression\r\n  | ExpressionNode\r\n  | FunctionExpression\r\n  | ConditionalExpression\r\n  | CacheExpression\r\n  | AssignmentExpression\r\n  | SequenceExpression\r\n\r\nexport interface CallExpression extends Node {\r\n  type: NodeTypes.JS_CALL_EXPRESSION\r\n  callee: string | symbol\r\n  arguments: (\r\n    | string\r\n    | symbol\r\n    | JSChildNode\r\n    | SSRCodegenNode\r\n    | TemplateChildNode\r\n    | TemplateChildNode[]\r\n  )[]\r\n}\r\n\r\nexport interface ObjectExpression extends Node {\r\n  type: NodeTypes.JS_OBJECT_EXPRESSION\r\n  properties: Array<Property>\r\n}\r\n\r\nexport interface Property extends Node {\r\n  type: NodeTypes.JS_PROPERTY\r\n  key: ExpressionNode\r\n  value: JSChildNode\r\n}\r\n\r\nexport interface ArrayExpression extends Node {\r\n  type: NodeTypes.JS_ARRAY_EXPRESSION\r\n  elements: Array<string | Node>\r\n}\r\n\r\nexport interface FunctionExpression extends Node {\r\n  type: NodeTypes.JS_FUNCTION_EXPRESSION\r\n  params: ExpressionNode | string | (ExpressionNode | string)[] | undefined\r\n  returns?: TemplateChildNode | TemplateChildNode[] | JSChildNode\r\n  body?: BlockStatement | IfStatement\r\n  newline: boolean\r\n  /**\r\n   * This flag is for codegen to determine whether it needs to generate the\r\n   * withScopeId() wrapper\r\n   */\r\n  isSlot: boolean\r\n  /**\r\n   * __COMPAT__ only, indicates a slot function that should be excluded from\r\n   * the legacy $scopedSlots instance property.\r\n   */\r\n  isNonScopedSlot?: boolean\r\n}\r\n\r\nexport interface ConditionalExpression extends Node {\r\n  type: NodeTypes.JS_CONDITIONAL_EXPRESSION\r\n  test: JSChildNode\r\n  consequent: JSChildNode\r\n  alternate: JSChildNode\r\n  newline: boolean\r\n}\r\n\r\nexport interface CacheExpression extends Node {\r\n  type: NodeTypes.JS_CACHE_EXPRESSION\r\n  index: number\r\n  value: JSChildNode\r\n  isVNode: boolean\r\n}\r\n\r\nexport interface MemoExpression extends CallExpression {\r\n  callee: typeof WITH_MEMO\r\n  arguments: [ExpressionNode, MemoFactory, string, string]\r\n}\r\n\r\ninterface MemoFactory extends FunctionExpression {\r\n  returns: BlockCodegenNode\r\n}\r\n\r\n// SSR-specific Node Types -----------------------------------------------------\r\n\r\nexport type SSRCodegenNode =\r\n  | BlockStatement\r\n  | TemplateLiteral\r\n  | IfStatement\r\n  | AssignmentExpression\r\n  | ReturnStatement\r\n  | SequenceExpression\r\n\r\nexport interface BlockStatement extends Node {\r\n  type: NodeTypes.JS_BLOCK_STATEMENT\r\n  body: (JSChildNode | IfStatement)[]\r\n}\r\n\r\nexport interface TemplateLiteral extends Node {\r\n  type: NodeTypes.JS_TEMPLATE_LITERAL\r\n  elements: (string | JSChildNode)[]\r\n}\r\n\r\nexport interface IfStatement extends Node {\r\n  type: NodeTypes.JS_IF_STATEMENT\r\n  test: ExpressionNode\r\n  consequent: BlockStatement\r\n  alternate: IfStatement | BlockStatement | ReturnStatement | undefined\r\n}\r\n\r\nexport interface AssignmentExpression extends Node {\r\n  type: NodeTypes.JS_ASSIGNMENT_EXPRESSION\r\n  left: SimpleExpressionNode\r\n  right: JSChildNode\r\n}\r\n\r\nexport interface SequenceExpression extends Node {\r\n  type: NodeTypes.JS_SEQUENCE_EXPRESSION\r\n  expressions: JSChildNode[]\r\n}\r\n\r\nexport interface ReturnStatement extends Node {\r\n  type: NodeTypes.JS_RETURN_STATEMENT\r\n  returns: TemplateChildNode | TemplateChildNode[] | JSChildNode\r\n}\r\n\r\n// Codegen Node Types ----------------------------------------------------------\r\n\r\nexport interface DirectiveArguments extends ArrayExpression {\r\n  elements: DirectiveArgumentNode[]\r\n}\r\n\r\nexport interface DirectiveArgumentNode extends ArrayExpression {\r\n  elements: // dir, exp, arg, modifiers\r\n  | [string]\r\n    | [string, ExpressionNode]\r\n    | [string, ExpressionNode, ExpressionNode]\r\n    | [string, ExpressionNode, ExpressionNode, ObjectExpression]\r\n}\r\n\r\n// renderSlot(...)\r\nexport interface RenderSlotCall extends CallExpression {\r\n  callee: typeof RENDER_SLOT\r\n  arguments: // $slots, name, props, fallback\r\n  | [string, string | ExpressionNode]\r\n    | [string, string | ExpressionNode, PropsExpression]\r\n    | [\r\n        string,\r\n        string | ExpressionNode,\r\n        PropsExpression | '{}',\r\n        TemplateChildNode[]\r\n      ]\r\n}\r\n\r\nexport type SlotsExpression = SlotsObjectExpression | DynamicSlotsExpression\r\n\r\n// { foo: () => [...] }\r\nexport interface SlotsObjectExpression extends ObjectExpression {\r\n  properties: SlotsObjectProperty[]\r\n}\r\n\r\nexport interface SlotsObjectProperty extends Property {\r\n  value: SlotFunctionExpression\r\n}\r\n\r\nexport interface SlotFunctionExpression extends FunctionExpression {\r\n  returns: TemplateChildNode[]\r\n}\r\n\r\n// createSlots({ ... }, [\r\n//    foo ? () => [] : undefined,\r\n//    renderList(list, i => () => [i])\r\n// ])\r\nexport interface DynamicSlotsExpression extends CallExpression {\r\n  callee: typeof CREATE_SLOTS\r\n  arguments: [SlotsObjectExpression, DynamicSlotEntries]\r\n}\r\n\r\nexport interface DynamicSlotEntries extends ArrayExpression {\r\n  elements: (ConditionalDynamicSlotNode | ListDynamicSlotNode)[]\r\n}\r\n\r\nexport interface ConditionalDynamicSlotNode extends ConditionalExpression {\r\n  consequent: DynamicSlotNode\r\n  alternate: DynamicSlotNode | SimpleExpressionNode\r\n}\r\n\r\nexport interface ListDynamicSlotNode extends CallExpression {\r\n  callee: typeof RENDER_LIST\r\n  arguments: [ExpressionNode, ListDynamicSlotIterator]\r\n}\r\n\r\nexport interface ListDynamicSlotIterator extends FunctionExpression {\r\n  returns: DynamicSlotNode\r\n}\r\n\r\nexport interface DynamicSlotNode extends ObjectExpression {\r\n  properties: [Property, DynamicSlotFnProperty]\r\n}\r\n\r\nexport interface DynamicSlotFnProperty extends Property {\r\n  value: SlotFunctionExpression\r\n}\r\n\r\nexport type BlockCodegenNode = VNodeCall | RenderSlotCall\r\n\r\nexport interface IfConditionalExpression extends ConditionalExpression {\r\n  consequent: BlockCodegenNode | MemoExpression\r\n  alternate: BlockCodegenNode | IfConditionalExpression | MemoExpression\r\n}\r\n\r\nexport interface ForCodegenNode extends VNodeCall {\r\n  isBlock: true\r\n  tag: typeof FRAGMENT\r\n  props: undefined\r\n  children: ForRenderListExpression\r\n  patchFlag: string\r\n  disableTracking: boolean\r\n}\r\n\r\nexport interface ForRenderListExpression extends CallExpression {\r\n  callee: typeof RENDER_LIST\r\n  arguments: [ExpressionNode, ForIteratorExpression]\r\n}\r\n\r\nexport interface ForIteratorExpression extends FunctionExpression {\r\n  returns: BlockCodegenNode\r\n}\r\n\r\n// AST Utilities ---------------------------------------------------------------\r\n\r\n// Some expressions, e.g. sequence and conditional expressions, are never\r\n// associated with template nodes, so their source locations are just a stub.\r\n// Container types like CompoundExpression also don't need a real location.\r\nexport const locStub: SourceLocation = {\r\n  source: '',\r\n  start: { line: 1, column: 1, offset: 0 },\r\n  end: { line: 1, column: 1, offset: 0 }\r\n}\r\n\r\nexport function createRoot(\r\n  children: TemplateChildNode[],\r\n  loc = locStub\r\n): RootNode {\r\n  return {\r\n    type: NodeTypes.ROOT,\r\n    children,\r\n    helpers: [],\r\n    components: [],\r\n    directives: [],\r\n    hoists: [],\r\n    imports: [],\r\n    cached: 0,\r\n    temps: 0,\r\n    codegenNode: undefined,\r\n    loc\r\n  }\r\n}\r\n\r\nexport function createVNodeCall(\r\n  context: TransformContext | null,\r\n  tag: VNodeCall['tag'],\r\n  props?: VNodeCall['props'],\r\n  children?: VNodeCall['children'],\r\n  patchFlag?: VNodeCall['patchFlag'],\r\n  dynamicProps?: VNodeCall['dynamicProps'],\r\n  directives?: VNodeCall['directives'],\r\n  isBlock: VNodeCall['isBlock'] = false,\r\n  disableTracking: VNodeCall['disableTracking'] = false,\r\n  isComponent: VNodeCall['isComponent'] = false,\r\n  loc = locStub\r\n): VNodeCall {\r\n  if (context) {\r\n    if (isBlock) {\r\n      context.helper(OPEN_BLOCK)\r\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent))\r\n    } else {\r\n      context.helper(getVNodeHelper(context.inSSR, isComponent))\r\n    }\r\n    if (directives) {\r\n      context.helper(WITH_DIRECTIVES)\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: NodeTypes.VNODE_CALL,\r\n    tag,\r\n    props,\r\n    children,\r\n    patchFlag,\r\n    dynamicProps,\r\n    directives,\r\n    isBlock,\r\n    disableTracking,\r\n    isComponent,\r\n    loc\r\n  }\r\n}\r\n\r\nexport function createArrayExpression(\r\n  elements: ArrayExpression['elements'],\r\n  loc: SourceLocation = locStub\r\n): ArrayExpression {\r\n  return {\r\n    type: NodeTypes.JS_ARRAY_EXPRESSION,\r\n    loc,\r\n    elements\r\n  }\r\n}\r\n\r\nexport function createObjectExpression(\r\n  properties: ObjectExpression['properties'],\r\n  loc: SourceLocation = locStub\r\n): ObjectExpression {\r\n  return {\r\n    type: NodeTypes.JS_OBJECT_EXPRESSION,\r\n    loc,\r\n    properties\r\n  }\r\n}\r\n\r\nexport function createObjectProperty(\r\n  key: Property['key'] | string,\r\n  value: Property['value']\r\n): Property {\r\n  return {\r\n    type: NodeTypes.JS_PROPERTY,\r\n    loc: locStub,\r\n    key: isString(key) ? createSimpleExpression(key, true) : key,\r\n    value\r\n  }\r\n}\r\n\r\nexport function createSimpleExpression(\r\n  content: SimpleExpressionNode['content'],\r\n  isStatic: SimpleExpressionNode['isStatic'] = false,\r\n  loc: SourceLocation = locStub,\r\n  constType: ConstantTypes = ConstantTypes.NOT_CONSTANT\r\n): SimpleExpressionNode {\r\n  return {\r\n    type: NodeTypes.SIMPLE_EXPRESSION,\r\n    loc,\r\n    content,\r\n    isStatic,\r\n    constType: isStatic ? ConstantTypes.CAN_STRINGIFY : constType\r\n  }\r\n}\r\n\r\nexport function createInterpolation(\r\n  content: InterpolationNode['content'] | string,\r\n  loc: SourceLocation\r\n): InterpolationNode {\r\n  return {\r\n    type: NodeTypes.INTERPOLATION,\r\n    loc,\r\n    content: isString(content)\r\n      ? createSimpleExpression(content, false, loc)\r\n      : content\r\n  }\r\n}\r\n\r\nexport function createCompoundExpression(\r\n  children: CompoundExpressionNode['children'],\r\n  loc: SourceLocation = locStub\r\n): CompoundExpressionNode {\r\n  return {\r\n    type: NodeTypes.COMPOUND_EXPRESSION,\r\n    loc,\r\n    children\r\n  }\r\n}\r\n\r\ntype InferCodegenNodeType<T> = T extends typeof RENDER_SLOT\r\n  ? RenderSlotCall\r\n  : CallExpression\r\n\r\nexport function createCallExpression<T extends CallExpression['callee']>(\r\n  callee: T,\r\n  args: CallExpression['arguments'] = [],\r\n  loc: SourceLocation = locStub\r\n): InferCodegenNodeType<T> {\r\n  return {\r\n    type: NodeTypes.JS_CALL_EXPRESSION,\r\n    loc,\r\n    callee,\r\n    arguments: args\r\n  } as InferCodegenNodeType<T>\r\n}\r\n\r\nexport function createFunctionExpression(\r\n  params: FunctionExpression['params'],\r\n  returns: FunctionExpression['returns'] = undefined,\r\n  newline: boolean = false,\r\n  isSlot: boolean = false,\r\n  loc: SourceLocation = locStub\r\n): FunctionExpression {\r\n  return {\r\n    type: NodeTypes.JS_FUNCTION_EXPRESSION,\r\n    params,\r\n    returns,\r\n    newline,\r\n    isSlot,\r\n    loc\r\n  }\r\n}\r\n\r\nexport function createConditionalExpression(\r\n  test: ConditionalExpression['test'],\r\n  consequent: ConditionalExpression['consequent'],\r\n  alternate: ConditionalExpression['alternate'],\r\n  newline = true\r\n): ConditionalExpression {\r\n  return {\r\n    type: NodeTypes.JS_CONDITIONAL_EXPRESSION,\r\n    test,\r\n    consequent,\r\n    alternate,\r\n    newline,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createCacheExpression(\r\n  index: number,\r\n  value: JSChildNode,\r\n  isVNode: boolean = false\r\n): CacheExpression {\r\n  return {\r\n    type: NodeTypes.JS_CACHE_EXPRESSION,\r\n    index,\r\n    value,\r\n    isVNode,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createBlockStatement(\r\n  body: BlockStatement['body']\r\n): BlockStatement {\r\n  return {\r\n    type: NodeTypes.JS_BLOCK_STATEMENT,\r\n    body,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createTemplateLiteral(\r\n  elements: TemplateLiteral['elements']\r\n): TemplateLiteral {\r\n  return {\r\n    type: NodeTypes.JS_TEMPLATE_LITERAL,\r\n    elements,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createIfStatement(\r\n  test: IfStatement['test'],\r\n  consequent: IfStatement['consequent'],\r\n  alternate?: IfStatement['alternate']\r\n): IfStatement {\r\n  return {\r\n    type: NodeTypes.JS_IF_STATEMENT,\r\n    test,\r\n    consequent,\r\n    alternate,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createAssignmentExpression(\r\n  left: AssignmentExpression['left'],\r\n  right: AssignmentExpression['right']\r\n): AssignmentExpression {\r\n  return {\r\n    type: NodeTypes.JS_ASSIGNMENT_EXPRESSION,\r\n    left,\r\n    right,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createSequenceExpression(\r\n  expressions: SequenceExpression['expressions']\r\n): SequenceExpression {\r\n  return {\r\n    type: NodeTypes.JS_SEQUENCE_EXPRESSION,\r\n    expressions,\r\n    loc: locStub\r\n  }\r\n}\r\n\r\nexport function createReturnStatement(\r\n  returns: ReturnStatement['returns']\r\n): ReturnStatement {\r\n  return {\r\n    type: NodeTypes.JS_RETURN_STATEMENT,\r\n    returns,\r\n    loc: locStub\r\n  }\r\n}\r\n","import {\r\n  SourceLocation,\r\n  Position,\r\n  ElementNode,\r\n  NodeTypes,\r\n  CallExpression,\r\n  createCallExpression,\r\n  DirectiveNode,\r\n  ElementTypes,\r\n  TemplateChildNode,\r\n  RootNode,\r\n  ObjectExpression,\r\n  Property,\r\n  JSChildNode,\r\n  createObjectExpression,\r\n  SlotOutletNode,\r\n  TemplateNode,\r\n  RenderSlotCall,\r\n  ExpressionNode,\r\n  IfBranchNode,\r\n  TextNode,\r\n  InterpolationNode,\r\n  VNodeCall,\r\n  SimpleExpressionNode,\r\n  BlockCodegenNode,\r\n  MemoExpression\r\n} from './ast'\r\nimport { TransformContext } from './transform'\r\nimport {\r\n  MERGE_PROPS,\r\n  TELEPORT,\r\n  SUSPENSE,\r\n  KEEP_ALIVE,\r\n  BASE_TRANSITION,\r\n  TO_HANDLERS,\r\n  NORMALIZE_PROPS,\r\n  GUARD_REACTIVE_PROPS,\r\n  CREATE_BLOCK,\r\n  CREATE_ELEMENT_BLOCK,\r\n  CREATE_VNODE,\r\n  CREATE_ELEMENT_VNODE,\r\n  WITH_MEMO,\r\n  OPEN_BLOCK\r\n} from './runtimeHelpers'\r\nimport { isString, isObject, hyphenate, extend, NOOP } from '@vue/shared'\r\nimport { PropsExpression } from './transforms/transformElement'\r\nimport { parseExpression } from '@babel/parser'\r\nimport { Expression } from '@babel/types'\r\n\r\nexport const isStaticExp = (p: JSChildNode): p is SimpleExpressionNode =>\r\n  p.type === NodeTypes.SIMPLE_EXPRESSION && p.isStatic\r\n\r\nexport const isBuiltInType = (tag: string, expected: string): boolean =>\r\n  tag === expected || tag === hyphenate(expected)\r\n\r\nexport function isCoreComponent(tag: string): symbol | void {\r\n  if (isBuiltInType(tag, 'Teleport')) {\r\n    return TELEPORT\r\n  } else if (isBuiltInType(tag, 'Suspense')) {\r\n    return SUSPENSE\r\n  } else if (isBuiltInType(tag, 'KeepAlive')) {\r\n    return KEEP_ALIVE\r\n  } else if (isBuiltInType(tag, 'BaseTransition')) {\r\n    return BASE_TRANSITION\r\n  }\r\n}\r\n\r\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/\r\nexport const isSimpleIdentifier = (name: string): boolean =>\r\n  !nonIdentifierRE.test(name)\r\n\r\nconst enum MemberExpLexState {\r\n  inMemberExp,\r\n  inBrackets,\r\n  inParens,\r\n  inString\r\n}\r\n\r\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/\r\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/\r\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g\r\n\r\n/**\r\n * Simple lexer to check if an expression is a member expression. This is\r\n * lax and only checks validity at the root level (i.e. does not validate exps\r\n * inside square brackets), but it's ok since these are only used on template\r\n * expressions and false positives are invalid expressions in the first place.\r\n */\r\nexport const isMemberExpressionBrowser = (path: string): boolean => {\r\n  // remove whitespaces around . or [ first\r\n  path = path.trim().replace(whitespaceRE, s => s.trim())\r\n\r\n  let state = MemberExpLexState.inMemberExp\r\n  let stateStack: MemberExpLexState[] = []\r\n  let currentOpenBracketCount = 0\r\n  let currentOpenParensCount = 0\r\n  let currentStringType: \"'\" | '\"' | '`' | null = null\r\n\r\n  for (let i = 0; i < path.length; i++) {\r\n    const char = path.charAt(i)\r\n    switch (state) {\r\n      case MemberExpLexState.inMemberExp:\r\n        if (char === '[') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inBrackets\r\n          currentOpenBracketCount++\r\n        } else if (char === '(') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inParens\r\n          currentOpenParensCount++\r\n        } else if (\r\n          !(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)\r\n        ) {\r\n          return false\r\n        }\r\n        break\r\n      case MemberExpLexState.inBrackets:\r\n        if (char === `'` || char === `\"` || char === '`') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inString\r\n          currentStringType = char\r\n        } else if (char === `[`) {\r\n          currentOpenBracketCount++\r\n        } else if (char === `]`) {\r\n          if (!--currentOpenBracketCount) {\r\n            state = stateStack.pop()!\r\n          }\r\n        }\r\n        break\r\n      case MemberExpLexState.inParens:\r\n        if (char === `'` || char === `\"` || char === '`') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inString\r\n          currentStringType = char\r\n        } else if (char === `(`) {\r\n          currentOpenParensCount++\r\n        } else if (char === `)`) {\r\n          // if the exp ends as a call then it should not be considered valid\r\n          if (i === path.length - 1) {\r\n            return false\r\n          }\r\n          if (!--currentOpenParensCount) {\r\n            state = stateStack.pop()!\r\n          }\r\n        }\r\n        break\r\n      case MemberExpLexState.inString:\r\n        if (char === currentStringType) {\r\n          state = stateStack.pop()!\r\n          currentStringType = null\r\n        }\r\n        break\r\n    }\r\n  }\r\n  return !currentOpenBracketCount && !currentOpenParensCount\r\n}\r\n\r\nexport const isMemberExpressionNode = __BROWSER__\r\n  ? (NOOP as any as (path: string, context: TransformContext) => boolean)\r\n  : (path: string, context: TransformContext): boolean => {\r\n      try {\r\n        let ret: Expression = parseExpression(path, {\r\n          plugins: context.expressionPlugins\r\n        })\r\n        if (ret.type === 'TSAsExpression' || ret.type === 'TSTypeAssertion') {\r\n          ret = ret.expression\r\n        }\r\n        return (\r\n          ret.type === 'MemberExpression' ||\r\n          ret.type === 'OptionalMemberExpression' ||\r\n          ret.type === 'Identifier'\r\n        )\r\n      } catch (e) {\r\n        return false\r\n      }\r\n    }\r\n\r\nexport const isMemberExpression = __BROWSER__\r\n  ? isMemberExpressionBrowser\r\n  : isMemberExpressionNode\r\n\r\nexport function getInnerRange(\r\n  loc: SourceLocation,\r\n  offset: number,\r\n  length: number\r\n): SourceLocation {\r\n  __TEST__ && assert(offset <= loc.source.length)\r\n  const source = loc.source.slice(offset, offset + length)\r\n  const newLoc: SourceLocation = {\r\n    source,\r\n    start: advancePositionWithClone(loc.start, loc.source, offset),\r\n    end: loc.end\r\n  }\r\n\r\n  if (length != null) {\r\n    __TEST__ && assert(offset + length <= loc.source.length)\r\n    newLoc.end = advancePositionWithClone(\r\n      loc.start,\r\n      loc.source,\r\n      offset + length\r\n    )\r\n  }\r\n\r\n  return newLoc\r\n}\r\n\r\nexport function advancePositionWithClone(\r\n  pos: Position,\r\n  source: string,\r\n  numberOfCharacters: number = source.length\r\n): Position {\r\n  return advancePositionWithMutation(\r\n    extend({}, pos),\r\n    source,\r\n    numberOfCharacters\r\n  )\r\n}\r\n\r\n// advance by mutation without cloning (for performance reasons), since this\r\n// gets called a lot in the parser\r\nexport function advancePositionWithMutation(\r\n  pos: Position,\r\n  source: string,\r\n  numberOfCharacters: number = source.length\r\n): Position {\r\n  let linesCount = 0\r\n  let lastNewLinePos = -1\r\n  for (let i = 0; i < numberOfCharacters; i++) {\r\n    if (source.charCodeAt(i) === 10 /* newline char code */) {\r\n      linesCount++\r\n      lastNewLinePos = i\r\n    }\r\n  }\r\n\r\n  pos.offset += numberOfCharacters\r\n  pos.line += linesCount\r\n  pos.column =\r\n    lastNewLinePos === -1\r\n      ? pos.column + numberOfCharacters\r\n      : numberOfCharacters - lastNewLinePos\r\n\r\n  return pos\r\n}\r\n\r\nexport function assert(condition: boolean, msg?: string) {\r\n  /* istanbul ignore if */\r\n  if (!condition) {\r\n    throw new Error(msg || `unexpected compiler condition`)\r\n  }\r\n}\r\n\r\nexport function findDir(\r\n  node: ElementNode,\r\n  name: string | RegExp,\r\n  allowEmpty: boolean = false\r\n): DirectiveNode | undefined {\r\n  for (let i = 0; i < node.props.length; i++) {\r\n    const p = node.props[i]\r\n    if (\r\n      p.type === NodeTypes.DIRECTIVE &&\r\n      (allowEmpty || p.exp) &&\r\n      (isString(name) ? p.name === name : name.test(p.name))\r\n    ) {\r\n      return p\r\n    }\r\n  }\r\n}\r\n\r\nexport function findProp(\r\n  node: ElementNode,\r\n  name: string,\r\n  dynamicOnly: boolean = false,\r\n  allowEmpty: boolean = false\r\n): ElementNode['props'][0] | undefined {\r\n  for (let i = 0; i < node.props.length; i++) {\r\n    const p = node.props[i]\r\n    if (p.type === NodeTypes.ATTRIBUTE) {\r\n      if (dynamicOnly) continue\r\n      if (p.name === name && (p.value || allowEmpty)) {\r\n        return p\r\n      }\r\n    } else if (\r\n      p.name === 'bind' &&\r\n      (p.exp || allowEmpty) &&\r\n      isStaticArgOf(p.arg, name)\r\n    ) {\r\n      return p\r\n    }\r\n  }\r\n}\r\n\r\nexport function isStaticArgOf(\r\n  arg: DirectiveNode['arg'],\r\n  name: string\r\n): boolean {\r\n  return !!(arg && isStaticExp(arg) && arg.content === name)\r\n}\r\n\r\nexport function hasDynamicKeyVBind(node: ElementNode): boolean {\r\n  return node.props.some(\r\n    p =>\r\n      p.type === NodeTypes.DIRECTIVE &&\r\n      p.name === 'bind' &&\r\n      (!p.arg || // v-bind=\"obj\"\r\n        p.arg.type !== NodeTypes.SIMPLE_EXPRESSION || // v-bind:[_ctx.foo]\r\n        !p.arg.isStatic) // v-bind:[foo]\r\n  )\r\n}\r\n\r\nexport function isText(\r\n  node: TemplateChildNode\r\n): node is TextNode | InterpolationNode {\r\n  return node.type === NodeTypes.INTERPOLATION || node.type === NodeTypes.TEXT\r\n}\r\n\r\nexport function isVSlot(p: ElementNode['props'][0]): p is DirectiveNode {\r\n  return p.type === NodeTypes.DIRECTIVE && p.name === 'slot'\r\n}\r\n\r\nexport function isTemplateNode(\r\n  node: RootNode | TemplateChildNode\r\n): node is TemplateNode {\r\n  return (\r\n    node.type === NodeTypes.ELEMENT && node.tagType === ElementTypes.TEMPLATE\r\n  )\r\n}\r\n\r\nexport function isSlotOutlet(\r\n  node: RootNode | TemplateChildNode\r\n): node is SlotOutletNode {\r\n  return node.type === NodeTypes.ELEMENT && node.tagType === ElementTypes.SLOT\r\n}\r\n\r\nexport function getVNodeHelper(ssr: boolean, isComponent: boolean) {\r\n  return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE\r\n}\r\n\r\nexport function getVNodeBlockHelper(ssr: boolean, isComponent: boolean) {\r\n  return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK\r\n}\r\n\r\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS])\r\n\r\nfunction getUnnormalizedProps(\r\n  props: PropsExpression | '{}',\r\n  callPath: CallExpression[] = []\r\n): [PropsExpression | '{}', CallExpression[]] {\r\n  if (\r\n    props &&\r\n    !isString(props) &&\r\n    props.type === NodeTypes.JS_CALL_EXPRESSION\r\n  ) {\r\n    const callee = props.callee\r\n    if (!isString(callee) && propsHelperSet.has(callee)) {\r\n      return getUnnormalizedProps(\r\n        props.arguments[0] as PropsExpression,\r\n        callPath.concat(props)\r\n      )\r\n    }\r\n  }\r\n  return [props, callPath]\r\n}\r\nexport function injectProp(\r\n  node: VNodeCall | RenderSlotCall,\r\n  prop: Property,\r\n  context: TransformContext\r\n) {\r\n  let propsWithInjection: ObjectExpression | CallExpression | undefined\r\n  /**\r\n   * 1. mergeProps(...)\r\n   * 2. toHandlers(...)\r\n   * 3. normalizeProps(...)\r\n   * 4. normalizeProps(guardReactiveProps(...))\r\n   *\r\n   * we need to get the real props before normalization\r\n   */\r\n  let props =\r\n    node.type === NodeTypes.VNODE_CALL ? node.props : node.arguments[2]\r\n  let callPath: CallExpression[] = []\r\n  let parentCall: CallExpression | undefined\r\n  if (\r\n    props &&\r\n    !isString(props) &&\r\n    props.type === NodeTypes.JS_CALL_EXPRESSION\r\n  ) {\r\n    const ret = getUnnormalizedProps(props)\r\n    props = ret[0]\r\n    callPath = ret[1]\r\n    parentCall = callPath[callPath.length - 1]\r\n  }\r\n\r\n  if (props == null || isString(props)) {\r\n    propsWithInjection = createObjectExpression([prop])\r\n  } else if (props.type === NodeTypes.JS_CALL_EXPRESSION) {\r\n    // merged props... add ours\r\n    // only inject key to object literal if it's the first argument so that\r\n    // if doesn't override user provided keys\r\n    const first = props.arguments[0] as string | JSChildNode\r\n    if (!isString(first) && first.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n      first.properties.unshift(prop)\r\n    } else {\r\n      if (props.callee === TO_HANDLERS) {\r\n        // #2366\r\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n          createObjectExpression([prop]),\r\n          props\r\n        ])\r\n      } else {\r\n        props.arguments.unshift(createObjectExpression([prop]))\r\n      }\r\n    }\r\n    !propsWithInjection && (propsWithInjection = props)\r\n  } else if (props.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n    let alreadyExists = false\r\n    // check existing key to avoid overriding user provided keys\r\n    if (prop.key.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n      const propKeyName = prop.key.content\r\n      alreadyExists = props.properties.some(\r\n        p =>\r\n          p.key.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n          p.key.content === propKeyName\r\n      )\r\n    }\r\n    if (!alreadyExists) {\r\n      props.properties.unshift(prop)\r\n    }\r\n    propsWithInjection = props\r\n  } else {\r\n    // single v-bind with expression, return a merged replacement\r\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n      createObjectExpression([prop]),\r\n      props\r\n    ])\r\n    // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\r\n    // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\r\n    // the `guardReactiveProps` will no longer be needed\r\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\r\n      parentCall = callPath[callPath.length - 2]\r\n    }\r\n  }\r\n  if (node.type === NodeTypes.VNODE_CALL) {\r\n    if (parentCall) {\r\n      parentCall.arguments[0] = propsWithInjection\r\n    } else {\r\n      node.props = propsWithInjection\r\n    }\r\n  } else {\r\n    if (parentCall) {\r\n      parentCall.arguments[0] = propsWithInjection\r\n    } else {\r\n      node.arguments[2] = propsWithInjection\r\n    }\r\n  }\r\n}\r\n\r\nexport function toValidAssetId(\r\n  name: string,\r\n  type: 'component' | 'directive' | 'filter'\r\n): string {\r\n  // see issue#4422, we need adding identifier on validAssetId if variable `name` has specific character\r\n  return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\r\n    return searchValue === '-' ? '_' : name.charCodeAt(replaceValue).toString()\r\n  })}`\r\n}\r\n\r\n// Check if a node contains expressions that reference current context scope ids\r\nexport function hasScopeRef(\r\n  node: TemplateChildNode | IfBranchNode | ExpressionNode | undefined,\r\n  ids: TransformContext['identifiers']\r\n): boolean {\r\n  if (!node || Object.keys(ids).length === 0) {\r\n    return false\r\n  }\r\n  switch (node.type) {\r\n    case NodeTypes.ELEMENT:\r\n      for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i]\r\n        if (\r\n          p.type === NodeTypes.DIRECTIVE &&\r\n          (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n      return node.children.some(c => hasScopeRef(c, ids))\r\n    case NodeTypes.FOR:\r\n      if (hasScopeRef(node.source, ids)) {\r\n        return true\r\n      }\r\n      return node.children.some(c => hasScopeRef(c, ids))\r\n    case NodeTypes.IF:\r\n      return node.branches.some(b => hasScopeRef(b, ids))\r\n    case NodeTypes.IF_BRANCH:\r\n      if (hasScopeRef(node.condition, ids)) {\r\n        return true\r\n      }\r\n      return node.children.some(c => hasScopeRef(c, ids))\r\n    case NodeTypes.SIMPLE_EXPRESSION:\r\n      return (\r\n        !node.isStatic &&\r\n        isSimpleIdentifier(node.content) &&\r\n        !!ids[node.content]\r\n      )\r\n    case NodeTypes.COMPOUND_EXPRESSION:\r\n      return node.children.some(c => isObject(c) && hasScopeRef(c, ids))\r\n    case NodeTypes.INTERPOLATION:\r\n    case NodeTypes.TEXT_CALL:\r\n      return hasScopeRef(node.content, ids)\r\n    case NodeTypes.TEXT:\r\n    case NodeTypes.COMMENT:\r\n      return false\r\n    default:\r\n      if (__DEV__) {\r\n        const exhaustiveCheck: never = node\r\n        exhaustiveCheck\r\n      }\r\n      return false\r\n  }\r\n}\r\n\r\nexport function getMemoedVNodeCall(node: BlockCodegenNode | MemoExpression) {\r\n  if (node.type === NodeTypes.JS_CALL_EXPRESSION && node.callee === WITH_MEMO) {\r\n    return node.arguments[1].returns as VNodeCall\r\n  } else {\r\n    return node\r\n  }\r\n}\r\n\r\nexport function makeBlock(\r\n  node: VNodeCall,\r\n  { helper, removeHelper, inSSR }: TransformContext\r\n) {\r\n  if (!node.isBlock) {\r\n    node.isBlock = true\r\n    removeHelper(getVNodeHelper(inSSR, node.isComponent))\r\n    helper(OPEN_BLOCK)\r\n    helper(getVNodeBlockHelper(inSSR, node.isComponent))\r\n  }\r\n}\r\n","import { ErrorHandlingOptions, ParserOptions } from './options'\r\nimport { NO, isArray, makeMap, extend } from '@vue/shared'\r\nimport {\r\n  ErrorCodes,\r\n  createCompilerError,\r\n  defaultOnError,\r\n  defaultOnWarn\r\n} from './errors'\r\nimport {\r\n  assert,\r\n  advancePositionWithMutation,\r\n  advancePositionWithClone,\r\n  isCoreComponent,\r\n  isStaticArgOf\r\n} from './utils'\r\nimport {\r\n  Namespaces,\r\n  AttributeNode,\r\n  CommentNode,\r\n  DirectiveNode,\r\n  ElementNode,\r\n  ElementTypes,\r\n  ExpressionNode,\r\n  NodeTypes,\r\n  Position,\r\n  RootNode,\r\n  SourceLocation,\r\n  TextNode,\r\n  TemplateChildNode,\r\n  InterpolationNode,\r\n  createRoot,\r\n  ConstantTypes\r\n} from './ast'\r\nimport {\r\n  checkCompatEnabled,\r\n  CompilerCompatOptions,\r\n  CompilerDeprecationTypes,\r\n  isCompatEnabled,\r\n  warnDeprecation\r\n} from './compat/compatConfig'\r\n\r\ntype OptionalOptions =\r\n  | 'whitespace'\r\n  | 'isNativeTag'\r\n  | 'isBuiltInComponent'\r\n  | keyof CompilerCompatOptions\r\ntype MergedParserOptions = Omit<Required<ParserOptions>, OptionalOptions> &\r\n  Pick<ParserOptions, OptionalOptions>\r\ntype AttributeValue =\r\n  | {\r\n      content: string\r\n      isQuoted: boolean\r\n      loc: SourceLocation\r\n    }\r\n  | undefined\r\n\r\n// The default decoder only provides escapes for characters reserved as part of\r\n// the template syntax, and is only used if the custom renderer did not provide\r\n// a platform-specific decoder.\r\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g\r\nconst decodeMap: Record<string, string> = {\r\n  gt: '>',\r\n  lt: '<',\r\n  amp: '&',\r\n  apos: \"'\",\r\n  quot: '\"'\r\n}\r\n\r\nexport const defaultParserOptions: MergedParserOptions = {\r\n  delimiters: [`{{`, `}}`],\r\n  getNamespace: () => Namespaces.HTML,\r\n  getTextMode: () => TextModes.DATA,\r\n  isVoidTag: NO,\r\n  isPreTag: NO,\r\n  isCustomElement: NO,\r\n  decodeEntities: (rawText: string): string =>\r\n    rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\r\n  onError: defaultOnError,\r\n  onWarn: defaultOnWarn,\r\n  comments: __DEV__\r\n}\r\n\r\nexport const enum TextModes {\r\n  //          | Elements | Entities | End sign              | Inside of\r\n  DATA, //    | ✔        | ✔        | End tags of ancestors |\r\n  RCDATA, //  | ✘        | ✔        | End tag of the parent | <textarea>\r\n  RAWTEXT, // | ✘        | ✘        | End tag of the parent | <style>,<script>\r\n  CDATA,\r\n  ATTRIBUTE_VALUE\r\n}\r\n\r\nexport interface ParserContext {\r\n  options: MergedParserOptions\r\n  readonly originalSource: string\r\n  source: string\r\n  offset: number\r\n  line: number\r\n  column: number\r\n  inPre: boolean // HTML <pre> tag, preserve whitespaces\r\n  inVPre: boolean // v-pre, do not process directives and interpolations\r\n  onWarn: NonNullable<ErrorHandlingOptions['onWarn']>\r\n}\r\n\r\nexport function baseParse(\r\n  content: string,\r\n  options: ParserOptions = {}\r\n): RootNode {\r\n  const context = createParserContext(content, options)\r\n  const start = getCursor(context)\r\n  return createRoot(\r\n    parseChildren(context, TextModes.DATA, []),\r\n    getSelection(context, start)\r\n  )\r\n}\r\n\r\nfunction createParserContext(\r\n  content: string,\r\n  rawOptions: ParserOptions\r\n): ParserContext {\r\n  const options = extend({}, defaultParserOptions)\r\n\r\n  let key: keyof ParserOptions\r\n  for (key in rawOptions) {\r\n    // @ts-ignore\r\n    options[key] =\r\n      rawOptions[key] === undefined\r\n        ? defaultParserOptions[key]\r\n        : rawOptions[key]\r\n  }\r\n  return {\r\n    options,\r\n    column: 1,\r\n    line: 1,\r\n    offset: 0,\r\n    originalSource: content,\r\n    source: content,\r\n    inPre: false,\r\n    inVPre: false,\r\n    onWarn: options.onWarn\r\n  }\r\n}\r\n\r\nfunction parseChildren(\r\n  context: ParserContext,\r\n  mode: TextModes,\r\n  ancestors: ElementNode[]\r\n): TemplateChildNode[] {\r\n  const parent = last(ancestors)\r\n  const ns = parent ? parent.ns : Namespaces.HTML\r\n  const nodes: TemplateChildNode[] = []\r\n\r\n  while (!isEnd(context, mode, ancestors)) {\r\n    __TEST__ && assert(context.source.length > 0)\r\n    const s = context.source\r\n    let node: TemplateChildNode | TemplateChildNode[] | undefined = undefined\r\n\r\n    if (mode === TextModes.DATA || mode === TextModes.RCDATA) {\r\n      if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\r\n        // '{{'\r\n        node = parseInterpolation(context, mode)\r\n      } else if (mode === TextModes.DATA && s[0] === '<') {\r\n        // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\r\n        if (s.length === 1) {\r\n          emitError(context, ErrorCodes.EOF_BEFORE_TAG_NAME, 1)\r\n        } else if (s[1] === '!') {\r\n          // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\r\n          if (startsWith(s, '<!--')) {\r\n            node = parseComment(context)\r\n          } else if (startsWith(s, '<!DOCTYPE')) {\r\n            // Ignore DOCTYPE by a limitation.\r\n            node = parseBogusComment(context)\r\n          } else if (startsWith(s, '<![CDATA[')) {\r\n            if (ns !== Namespaces.HTML) {\r\n              node = parseCDATA(context, ancestors)\r\n            } else {\r\n              emitError(context, ErrorCodes.CDATA_IN_HTML_CONTENT)\r\n              node = parseBogusComment(context)\r\n            }\r\n          } else {\r\n            emitError(context, ErrorCodes.INCORRECTLY_OPENED_COMMENT)\r\n            node = parseBogusComment(context)\r\n          }\r\n        } else if (s[1] === '/') {\r\n          // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\r\n          if (s.length === 2) {\r\n            emitError(context, ErrorCodes.EOF_BEFORE_TAG_NAME, 2)\r\n          } else if (s[2] === '>') {\r\n            emitError(context, ErrorCodes.MISSING_END_TAG_NAME, 2)\r\n            advanceBy(context, 3)\r\n            continue\r\n          } else if (/[a-z]/i.test(s[2])) {\r\n            emitError(context, ErrorCodes.X_INVALID_END_TAG)\r\n            parseTag(context, TagType.End, parent)\r\n            continue\r\n          } else {\r\n            emitError(\r\n              context,\r\n              ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME,\r\n              2\r\n            )\r\n            node = parseBogusComment(context)\r\n          }\r\n        } else if (/[a-z]/i.test(s[1])) {\r\n          node = parseElement(context, ancestors)\r\n\r\n          // 2.x <template> with no directive compat\r\n          if (\r\n            __COMPAT__ &&\r\n            isCompatEnabled(\r\n              CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE,\r\n              context\r\n            ) &&\r\n            node &&\r\n            node.tag === 'template' &&\r\n            !node.props.some(\r\n              p =>\r\n                p.type === NodeTypes.DIRECTIVE &&\r\n                isSpecialTemplateDirective(p.name)\r\n            )\r\n          ) {\r\n            __DEV__ &&\r\n              warnDeprecation(\r\n                CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE,\r\n                context,\r\n                node.loc\r\n              )\r\n            node = node.children\r\n          }\r\n        } else if (s[1] === '?') {\r\n          emitError(\r\n            context,\r\n            ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME,\r\n            1\r\n          )\r\n          node = parseBogusComment(context)\r\n        } else {\r\n          emitError(context, ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME, 1)\r\n        }\r\n      }\r\n    }\r\n    if (!node) {\r\n      node = parseText(context, mode)\r\n    }\r\n\r\n    if (isArray(node)) {\r\n      for (let i = 0; i < node.length; i++) {\r\n        pushNode(nodes, node[i])\r\n      }\r\n    } else {\r\n      pushNode(nodes, node)\r\n    }\r\n  }\r\n\r\n  // Whitespace handling strategy like v2\r\n  let removedWhitespace = false\r\n  if (mode !== TextModes.RAWTEXT && mode !== TextModes.RCDATA) {\r\n    const shouldCondense = context.options.whitespace !== 'preserve'\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      const node = nodes[i]\r\n      if (!context.inPre && node.type === NodeTypes.TEXT) {\r\n        if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\r\n          const prev = nodes[i - 1]\r\n          const next = nodes[i + 1]\r\n          // Remove if:\r\n          // - the whitespace is the first or last node, or:\r\n          // - (condense mode) the whitespace is adjacent to a comment, or:\r\n          // - (condense mode) the whitespace is between two elements AND contains newline\r\n          if (\r\n            !prev ||\r\n            !next ||\r\n            (shouldCondense &&\r\n              (prev.type === NodeTypes.COMMENT ||\r\n                next.type === NodeTypes.COMMENT ||\r\n                (prev.type === NodeTypes.ELEMENT &&\r\n                  next.type === NodeTypes.ELEMENT &&\r\n                  /[\\r\\n]/.test(node.content))))\r\n          ) {\r\n            removedWhitespace = true\r\n            nodes[i] = null as any\r\n          } else {\r\n            // Otherwise, the whitespace is condensed into a single space\r\n            node.content = ' '\r\n          }\r\n        } else if (shouldCondense) {\r\n          // in condense mode, consecutive whitespaces in text are condensed\r\n          // down to a single space.\r\n          node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ')\r\n        }\r\n      }\r\n      // Remove comment nodes if desired by configuration.\r\n      else if (node.type === NodeTypes.COMMENT && !context.options.comments) {\r\n        removedWhitespace = true\r\n        nodes[i] = null as any\r\n      }\r\n    }\r\n    if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\r\n      // remove leading newline per html spec\r\n      // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\r\n      const first = nodes[0]\r\n      if (first && first.type === NodeTypes.TEXT) {\r\n        first.content = first.content.replace(/^\\r?\\n/, '')\r\n      }\r\n    }\r\n  }\r\n\r\n  return removedWhitespace ? nodes.filter(Boolean) : nodes\r\n}\r\n\r\nfunction pushNode(nodes: TemplateChildNode[], node: TemplateChildNode): void {\r\n  if (node.type === NodeTypes.TEXT) {\r\n    const prev = last(nodes)\r\n    // Merge if both this and the previous node are text and those are\r\n    // consecutive. This happens for cases like \"a < b\".\r\n    if (\r\n      prev &&\r\n      prev.type === NodeTypes.TEXT &&\r\n      prev.loc.end.offset === node.loc.start.offset\r\n    ) {\r\n      prev.content += node.content\r\n      prev.loc.end = node.loc.end\r\n      prev.loc.source += node.loc.source\r\n      return\r\n    }\r\n  }\r\n\r\n  nodes.push(node)\r\n}\r\n\r\nfunction parseCDATA(\r\n  context: ParserContext,\r\n  ancestors: ElementNode[]\r\n): TemplateChildNode[] {\r\n  __TEST__ &&\r\n    assert(last(ancestors) == null || last(ancestors)!.ns !== Namespaces.HTML)\r\n  __TEST__ && assert(startsWith(context.source, '<![CDATA['))\r\n\r\n  advanceBy(context, 9)\r\n  const nodes = parseChildren(context, TextModes.CDATA, ancestors)\r\n  if (context.source.length === 0) {\r\n    emitError(context, ErrorCodes.EOF_IN_CDATA)\r\n  } else {\r\n    __TEST__ && assert(startsWith(context.source, ']]>'))\r\n    advanceBy(context, 3)\r\n  }\r\n\r\n  return nodes\r\n}\r\n\r\nfunction parseComment(context: ParserContext): CommentNode {\r\n  __TEST__ && assert(startsWith(context.source, '<!--'))\r\n\r\n  const start = getCursor(context)\r\n  let content: string\r\n\r\n  // Regular comment.\r\n  const match = /--(\\!)?>/.exec(context.source)\r\n  if (!match) {\r\n    content = context.source.slice(4)\r\n    advanceBy(context, context.source.length)\r\n    emitError(context, ErrorCodes.EOF_IN_COMMENT)\r\n  } else {\r\n    if (match.index <= 3) {\r\n      emitError(context, ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT)\r\n    }\r\n    if (match[1]) {\r\n      emitError(context, ErrorCodes.INCORRECTLY_CLOSED_COMMENT)\r\n    }\r\n    content = context.source.slice(4, match.index)\r\n\r\n    // Advancing with reporting nested comments.\r\n    const s = context.source.slice(0, match.index)\r\n    let prevIndex = 1,\r\n      nestedIndex = 0\r\n    while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\r\n      advanceBy(context, nestedIndex - prevIndex + 1)\r\n      if (nestedIndex + 4 < s.length) {\r\n        emitError(context, ErrorCodes.NESTED_COMMENT)\r\n      }\r\n      prevIndex = nestedIndex + 1\r\n    }\r\n    advanceBy(context, match.index + match[0].length - prevIndex + 1)\r\n  }\r\n\r\n  return {\r\n    type: NodeTypes.COMMENT,\r\n    content,\r\n    loc: getSelection(context, start)\r\n  }\r\n}\r\n\r\nfunction parseBogusComment(context: ParserContext): CommentNode | undefined {\r\n  __TEST__ && assert(/^<(?:[\\!\\?]|\\/[^a-z>])/i.test(context.source))\r\n\r\n  const start = getCursor(context)\r\n  const contentStart = context.source[1] === '?' ? 1 : 2\r\n  let content: string\r\n\r\n  const closeIndex = context.source.indexOf('>')\r\n  if (closeIndex === -1) {\r\n    content = context.source.slice(contentStart)\r\n    advanceBy(context, context.source.length)\r\n  } else {\r\n    content = context.source.slice(contentStart, closeIndex)\r\n    advanceBy(context, closeIndex + 1)\r\n  }\r\n\r\n  return {\r\n    type: NodeTypes.COMMENT,\r\n    content,\r\n    loc: getSelection(context, start)\r\n  }\r\n}\r\n\r\nfunction parseElement(\r\n  context: ParserContext,\r\n  ancestors: ElementNode[]\r\n): ElementNode | undefined {\r\n  __TEST__ && assert(/^<[a-z]/i.test(context.source))\r\n\r\n  // Start tag.\r\n  const wasInPre = context.inPre\r\n  const wasInVPre = context.inVPre\r\n  const parent = last(ancestors)\r\n  const element = parseTag(context, TagType.Start, parent)\r\n  const isPreBoundary = context.inPre && !wasInPre\r\n  const isVPreBoundary = context.inVPre && !wasInVPre\r\n\r\n  if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\r\n    // #4030 self-closing <pre> tag\r\n    if (isPreBoundary) {\r\n      context.inPre = false\r\n    }\r\n    if (isVPreBoundary) {\r\n      context.inVPre = false\r\n    }\r\n    return element\r\n  }\r\n\r\n  // Children.\r\n  ancestors.push(element)\r\n  const mode = context.options.getTextMode(element, parent)\r\n  const children = parseChildren(context, mode, ancestors)\r\n  ancestors.pop()\r\n\r\n  // 2.x inline-template compat\r\n  if (__COMPAT__) {\r\n    const inlineTemplateProp = element.props.find(\r\n      p => p.type === NodeTypes.ATTRIBUTE && p.name === 'inline-template'\r\n    ) as AttributeNode\r\n    if (\r\n      inlineTemplateProp &&\r\n      checkCompatEnabled(\r\n        CompilerDeprecationTypes.COMPILER_INLINE_TEMPLATE,\r\n        context,\r\n        inlineTemplateProp.loc\r\n      )\r\n    ) {\r\n      const loc = getSelection(context, element.loc.end)\r\n      inlineTemplateProp.value = {\r\n        type: NodeTypes.TEXT,\r\n        content: loc.source,\r\n        loc\r\n      }\r\n    }\r\n  }\r\n\r\n  element.children = children\r\n\r\n  // End tag.\r\n  if (startsWithEndTagOpen(context.source, element.tag)) {\r\n    parseTag(context, TagType.End, parent)\r\n  } else {\r\n    emitError(context, ErrorCodes.X_MISSING_END_TAG, 0, element.loc.start)\r\n    if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\r\n      const first = children[0]\r\n      if (first && startsWith(first.loc.source, '<!--')) {\r\n        emitError(context, ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT)\r\n      }\r\n    }\r\n  }\r\n\r\n  element.loc = getSelection(context, element.loc.start)\r\n\r\n  if (isPreBoundary) {\r\n    context.inPre = false\r\n  }\r\n  if (isVPreBoundary) {\r\n    context.inVPre = false\r\n  }\r\n  return element\r\n}\r\n\r\nconst enum TagType {\r\n  Start,\r\n  End\r\n}\r\n\r\nconst isSpecialTemplateDirective = /*#__PURE__*/ makeMap(\r\n  `if,else,else-if,for,slot`\r\n)\r\n\r\n/**\r\n * Parse a tag (E.g. `<div id=a>`) with that type (start tag or end tag).\r\n */\r\nfunction parseTag(\r\n  context: ParserContext,\r\n  type: TagType.Start,\r\n  parent: ElementNode | undefined\r\n): ElementNode\r\nfunction parseTag(\r\n  context: ParserContext,\r\n  type: TagType.End,\r\n  parent: ElementNode | undefined\r\n): void\r\nfunction parseTag(\r\n  context: ParserContext,\r\n  type: TagType,\r\n  parent: ElementNode | undefined\r\n): ElementNode | undefined {\r\n  __TEST__ && assert(/^<\\/?[a-z]/i.test(context.source))\r\n  __TEST__ &&\r\n    assert(\r\n      type === (startsWith(context.source, '</') ? TagType.End : TagType.Start)\r\n    )\r\n\r\n  // Tag open.\r\n  const start = getCursor(context)\r\n  const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source)!\r\n  const tag = match[1]\r\n  const ns = context.options.getNamespace(tag, parent)\r\n\r\n  advanceBy(context, match[0].length)\r\n  advanceSpaces(context)\r\n\r\n  // save current state in case we need to re-parse attributes with v-pre\r\n  const cursor = getCursor(context)\r\n  const currentSource = context.source\r\n\r\n  // check <pre> tag\r\n  if (context.options.isPreTag(tag)) {\r\n    context.inPre = true\r\n  }\r\n\r\n  // Attributes.\r\n  let props = parseAttributes(context, type)\r\n\r\n  // check v-pre\r\n  if (\r\n    type === TagType.Start &&\r\n    !context.inVPre &&\r\n    props.some(p => p.type === NodeTypes.DIRECTIVE && p.name === 'pre')\r\n  ) {\r\n    context.inVPre = true\r\n    // reset context\r\n    extend(context, cursor)\r\n    context.source = currentSource\r\n    // re-parse attrs and filter out v-pre itself\r\n    props = parseAttributes(context, type).filter(p => p.name !== 'v-pre')\r\n  }\r\n\r\n  // Tag close.\r\n  let isSelfClosing = false\r\n  if (context.source.length === 0) {\r\n    emitError(context, ErrorCodes.EOF_IN_TAG)\r\n  } else {\r\n    isSelfClosing = startsWith(context.source, '/>')\r\n    if (type === TagType.End && isSelfClosing) {\r\n      emitError(context, ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS)\r\n    }\r\n    advanceBy(context, isSelfClosing ? 2 : 1)\r\n  }\r\n\r\n  if (type === TagType.End) {\r\n    return\r\n  }\r\n\r\n  // 2.x deprecation checks\r\n  if (\r\n    __COMPAT__ &&\r\n    __DEV__ &&\r\n    isCompatEnabled(\r\n      CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE,\r\n      context\r\n    )\r\n  ) {\r\n    let hasIf = false\r\n    let hasFor = false\r\n    for (let i = 0; i < props.length; i++) {\r\n      const p = props[i]\r\n      if (p.type === NodeTypes.DIRECTIVE) {\r\n        if (p.name === 'if') {\r\n          hasIf = true\r\n        } else if (p.name === 'for') {\r\n          hasFor = true\r\n        }\r\n      }\r\n      if (hasIf && hasFor) {\r\n        warnDeprecation(\r\n          CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE,\r\n          context,\r\n          getSelection(context, start)\r\n        )\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  let tagType = ElementTypes.ELEMENT\r\n  if (!context.inVPre) {\r\n    if (tag === 'slot') {\r\n      tagType = ElementTypes.SLOT\r\n    } else if (tag === 'template') {\r\n      if (\r\n        props.some(\r\n          p =>\r\n            p.type === NodeTypes.DIRECTIVE && isSpecialTemplateDirective(p.name)\r\n        )\r\n      ) {\r\n        tagType = ElementTypes.TEMPLATE\r\n      }\r\n    } else if (isComponent(tag, props, context)) {\r\n      tagType = ElementTypes.COMPONENT\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: NodeTypes.ELEMENT,\r\n    ns,\r\n    tag,\r\n    tagType,\r\n    props,\r\n    isSelfClosing,\r\n    children: [],\r\n    loc: getSelection(context, start),\r\n    codegenNode: undefined // to be created during transform phase\r\n  }\r\n}\r\n\r\nfunction isComponent(\r\n  tag: string,\r\n  props: (AttributeNode | DirectiveNode)[],\r\n  context: ParserContext\r\n) {\r\n  const options = context.options\r\n  if (options.isCustomElement(tag)) {\r\n    return false\r\n  }\r\n  if (\r\n    tag === 'component' ||\r\n    /^[A-Z]/.test(tag) ||\r\n    isCoreComponent(tag) ||\r\n    (options.isBuiltInComponent && options.isBuiltInComponent(tag)) ||\r\n    (options.isNativeTag && !options.isNativeTag(tag))\r\n  ) {\r\n    return true\r\n  }\r\n  // at this point the tag should be a native tag, but check for potential \"is\"\r\n  // casting\r\n  for (let i = 0; i < props.length; i++) {\r\n    const p = props[i]\r\n    if (p.type === NodeTypes.ATTRIBUTE) {\r\n      if (p.name === 'is' && p.value) {\r\n        if (p.value.content.startsWith('vue:')) {\r\n          return true\r\n        } else if (\r\n          __COMPAT__ &&\r\n          checkCompatEnabled(\r\n            CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n            context,\r\n            p.loc\r\n          )\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n    } else {\r\n      // directive\r\n      // v-is (TODO Deprecate)\r\n      if (p.name === 'is') {\r\n        return true\r\n      } else if (\r\n        // :is on plain element - only treat as component in compat mode\r\n        p.name === 'bind' &&\r\n        isStaticArgOf(p.arg, 'is') &&\r\n        __COMPAT__ &&\r\n        checkCompatEnabled(\r\n          CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n          context,\r\n          p.loc\r\n        )\r\n      ) {\r\n        return true\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction parseAttributes(\r\n  context: ParserContext,\r\n  type: TagType\r\n): (AttributeNode | DirectiveNode)[] {\r\n  const props = []\r\n  const attributeNames = new Set<string>()\r\n  while (\r\n    context.source.length > 0 &&\r\n    !startsWith(context.source, '>') &&\r\n    !startsWith(context.source, '/>')\r\n  ) {\r\n    if (startsWith(context.source, '/')) {\r\n      emitError(context, ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG)\r\n      advanceBy(context, 1)\r\n      advanceSpaces(context)\r\n      continue\r\n    }\r\n    if (type === TagType.End) {\r\n      emitError(context, ErrorCodes.END_TAG_WITH_ATTRIBUTES)\r\n    }\r\n\r\n    const attr = parseAttribute(context, attributeNames)\r\n\r\n    // Trim whitespace between class\r\n    // https://github.com/vuejs/core/issues/4251\r\n    if (\r\n      attr.type === NodeTypes.ATTRIBUTE &&\r\n      attr.value &&\r\n      attr.name === 'class'\r\n    ) {\r\n      attr.value.content = attr.value.content.replace(/\\s+/g, ' ').trim()\r\n    }\r\n\r\n    if (type === TagType.Start) {\r\n      props.push(attr)\r\n    }\r\n\r\n    if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\r\n      emitError(context, ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES)\r\n    }\r\n    advanceSpaces(context)\r\n  }\r\n  return props\r\n}\r\n\r\nfunction parseAttribute(\r\n  context: ParserContext,\r\n  nameSet: Set<string>\r\n): AttributeNode | DirectiveNode {\r\n  __TEST__ && assert(/^[^\\t\\r\\n\\f />]/.test(context.source))\r\n\r\n  // Name.\r\n  const start = getCursor(context)\r\n  const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source)!\r\n  const name = match[0]\r\n\r\n  if (nameSet.has(name)) {\r\n    emitError(context, ErrorCodes.DUPLICATE_ATTRIBUTE)\r\n  }\r\n  nameSet.add(name)\r\n\r\n  if (name[0] === '=') {\r\n    emitError(context, ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME)\r\n  }\r\n  {\r\n    const pattern = /[\"'<]/g\r\n    let m: RegExpExecArray | null\r\n    while ((m = pattern.exec(name))) {\r\n      emitError(\r\n        context,\r\n        ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME,\r\n        m.index\r\n      )\r\n    }\r\n  }\r\n\r\n  advanceBy(context, name.length)\r\n\r\n  // Value\r\n  let value: AttributeValue = undefined\r\n\r\n  if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\r\n    advanceSpaces(context)\r\n    advanceBy(context, 1)\r\n    advanceSpaces(context)\r\n    value = parseAttributeValue(context)\r\n    if (!value) {\r\n      emitError(context, ErrorCodes.MISSING_ATTRIBUTE_VALUE)\r\n    }\r\n  }\r\n  const loc = getSelection(context, start)\r\n\r\n  if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\\.|@|#)/.test(name)) {\r\n    const match =\r\n      /(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(\r\n        name\r\n      )!\r\n\r\n    let isPropShorthand = startsWith(name, '.')\r\n    let dirName =\r\n      match[1] ||\r\n      (isPropShorthand || startsWith(name, ':')\r\n        ? 'bind'\r\n        : startsWith(name, '@')\r\n        ? 'on'\r\n        : 'slot')\r\n    let arg: ExpressionNode | undefined\r\n\r\n    if (match[2]) {\r\n      const isSlot = dirName === 'slot'\r\n      const startOffset = name.lastIndexOf(match[2])\r\n      const loc = getSelection(\r\n        context,\r\n        getNewPosition(context, start, startOffset),\r\n        getNewPosition(\r\n          context,\r\n          start,\r\n          startOffset + match[2].length + ((isSlot && match[3]) || '').length\r\n        )\r\n      )\r\n      let content = match[2]\r\n      let isStatic = true\r\n\r\n      if (content.startsWith('[')) {\r\n        isStatic = false\r\n\r\n        if (!content.endsWith(']')) {\r\n          emitError(\r\n            context,\r\n            ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\r\n          )\r\n          content = content.slice(1)\r\n        } else {\r\n          content = content.slice(1, content.length - 1)\r\n        }\r\n      } else if (isSlot) {\r\n        // #1241 special case for v-slot: vuetify relies extensively on slot\r\n        // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\r\n        // supports such usage so we are keeping it consistent with 2.x.\r\n        content += match[3] || ''\r\n      }\r\n\r\n      arg = {\r\n        type: NodeTypes.SIMPLE_EXPRESSION,\r\n        content,\r\n        isStatic,\r\n        constType: isStatic\r\n          ? ConstantTypes.CAN_STRINGIFY\r\n          : ConstantTypes.NOT_CONSTANT,\r\n        loc\r\n      }\r\n    }\r\n\r\n    if (value && value.isQuoted) {\r\n      const valueLoc = value.loc\r\n      valueLoc.start.offset++\r\n      valueLoc.start.column++\r\n      valueLoc.end = advancePositionWithClone(valueLoc.start, value.content)\r\n      valueLoc.source = valueLoc.source.slice(1, -1)\r\n    }\r\n\r\n    const modifiers = match[3] ? match[3].slice(1).split('.') : []\r\n    if (isPropShorthand) modifiers.push('prop')\r\n\r\n    // 2.x compat v-bind:foo.sync -> v-model:foo\r\n    if (__COMPAT__ && dirName === 'bind' && arg) {\r\n      if (\r\n        modifiers.includes('sync') &&\r\n        checkCompatEnabled(\r\n          CompilerDeprecationTypes.COMPILER_V_BIND_SYNC,\r\n          context,\r\n          loc,\r\n          arg.loc.source\r\n        )\r\n      ) {\r\n        dirName = 'model'\r\n        modifiers.splice(modifiers.indexOf('sync'), 1)\r\n      }\r\n\r\n      if (__DEV__ && modifiers.includes('prop')) {\r\n        checkCompatEnabled(\r\n          CompilerDeprecationTypes.COMPILER_V_BIND_PROP,\r\n          context,\r\n          loc\r\n        )\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: NodeTypes.DIRECTIVE,\r\n      name: dirName,\r\n      exp: value && {\r\n        type: NodeTypes.SIMPLE_EXPRESSION,\r\n        content: value.content,\r\n        isStatic: false,\r\n        // Treat as non-constant by default. This can be potentially set to\r\n        // other values by `transformExpression` to make it eligible for hoisting.\r\n        constType: ConstantTypes.NOT_CONSTANT,\r\n        loc: value.loc\r\n      },\r\n      arg,\r\n      modifiers,\r\n      loc\r\n    }\r\n  }\r\n\r\n  // missing directive name or illegal directive name\r\n  if (!context.inVPre && startsWith(name, 'v-')) {\r\n    emitError(context, ErrorCodes.X_MISSING_DIRECTIVE_NAME)\r\n  }\r\n\r\n  return {\r\n    type: NodeTypes.ATTRIBUTE,\r\n    name,\r\n    value: value && {\r\n      type: NodeTypes.TEXT,\r\n      content: value.content,\r\n      loc: value.loc\r\n    },\r\n    loc\r\n  }\r\n}\r\n\r\nfunction parseAttributeValue(context: ParserContext): AttributeValue {\r\n  const start = getCursor(context)\r\n  let content: string\r\n\r\n  const quote = context.source[0]\r\n  const isQuoted = quote === `\"` || quote === `'`\r\n  if (isQuoted) {\r\n    // Quoted value.\r\n    advanceBy(context, 1)\r\n\r\n    const endIndex = context.source.indexOf(quote)\r\n    if (endIndex === -1) {\r\n      content = parseTextData(\r\n        context,\r\n        context.source.length,\r\n        TextModes.ATTRIBUTE_VALUE\r\n      )\r\n    } else {\r\n      content = parseTextData(context, endIndex, TextModes.ATTRIBUTE_VALUE)\r\n      advanceBy(context, 1)\r\n    }\r\n  } else {\r\n    // Unquoted\r\n    const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source)\r\n    if (!match) {\r\n      return undefined\r\n    }\r\n    const unexpectedChars = /[\"'<=`]/g\r\n    let m: RegExpExecArray | null\r\n    while ((m = unexpectedChars.exec(match[0]))) {\r\n      emitError(\r\n        context,\r\n        ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE,\r\n        m.index\r\n      )\r\n    }\r\n    content = parseTextData(context, match[0].length, TextModes.ATTRIBUTE_VALUE)\r\n  }\r\n\r\n  return { content, isQuoted, loc: getSelection(context, start) }\r\n}\r\n\r\nfunction parseInterpolation(\r\n  context: ParserContext,\r\n  mode: TextModes\r\n): InterpolationNode | undefined {\r\n  const [open, close] = context.options.delimiters\r\n  __TEST__ && assert(startsWith(context.source, open))\r\n\r\n  const closeIndex = context.source.indexOf(close, open.length)\r\n  if (closeIndex === -1) {\r\n    emitError(context, ErrorCodes.X_MISSING_INTERPOLATION_END)\r\n    return undefined\r\n  }\r\n\r\n  const start = getCursor(context)\r\n  advanceBy(context, open.length)\r\n  const innerStart = getCursor(context)\r\n  const innerEnd = getCursor(context)\r\n  const rawContentLength = closeIndex - open.length\r\n  const rawContent = context.source.slice(0, rawContentLength)\r\n  const preTrimContent = parseTextData(context, rawContentLength, mode)\r\n  const content = preTrimContent.trim()\r\n  const startOffset = preTrimContent.indexOf(content)\r\n  if (startOffset > 0) {\r\n    advancePositionWithMutation(innerStart, rawContent, startOffset)\r\n  }\r\n  const endOffset =\r\n    rawContentLength - (preTrimContent.length - content.length - startOffset)\r\n  advancePositionWithMutation(innerEnd, rawContent, endOffset)\r\n  advanceBy(context, close.length)\r\n\r\n  return {\r\n    type: NodeTypes.INTERPOLATION,\r\n    content: {\r\n      type: NodeTypes.SIMPLE_EXPRESSION,\r\n      isStatic: false,\r\n      // Set `isConstant` to false by default and will decide in transformExpression\r\n      constType: ConstantTypes.NOT_CONSTANT,\r\n      content,\r\n      loc: getSelection(context, innerStart, innerEnd)\r\n    },\r\n    loc: getSelection(context, start)\r\n  }\r\n}\r\n\r\nfunction parseText(context: ParserContext, mode: TextModes): TextNode {\r\n  __TEST__ && assert(context.source.length > 0)\r\n\r\n  const endTokens =\r\n    mode === TextModes.CDATA ? [']]>'] : ['<', context.options.delimiters[0]]\r\n\r\n  let endIndex = context.source.length\r\n  for (let i = 0; i < endTokens.length; i++) {\r\n    const index = context.source.indexOf(endTokens[i], 1)\r\n    if (index !== -1 && endIndex > index) {\r\n      endIndex = index\r\n    }\r\n  }\r\n\r\n  __TEST__ && assert(endIndex > 0)\r\n\r\n  const start = getCursor(context)\r\n  const content = parseTextData(context, endIndex, mode)\r\n\r\n  return {\r\n    type: NodeTypes.TEXT,\r\n    content,\r\n    loc: getSelection(context, start)\r\n  }\r\n}\r\n\r\n/**\r\n * Get text data with a given length from the current location.\r\n * This translates HTML entities in the text data.\r\n */\r\nfunction parseTextData(\r\n  context: ParserContext,\r\n  length: number,\r\n  mode: TextModes\r\n): string {\r\n  const rawText = context.source.slice(0, length)\r\n  advanceBy(context, length)\r\n  if (\r\n    mode === TextModes.RAWTEXT ||\r\n    mode === TextModes.CDATA ||\r\n    !rawText.includes('&')\r\n  ) {\r\n    return rawText\r\n  } else {\r\n    // DATA or RCDATA containing \"&\"\". Entity decoding required.\r\n    return context.options.decodeEntities(\r\n      rawText,\r\n      mode === TextModes.ATTRIBUTE_VALUE\r\n    )\r\n  }\r\n}\r\n\r\nfunction getCursor(context: ParserContext): Position {\r\n  const { column, line, offset } = context\r\n  return { column, line, offset }\r\n}\r\n\r\nfunction getSelection(\r\n  context: ParserContext,\r\n  start: Position,\r\n  end?: Position\r\n): SourceLocation {\r\n  end = end || getCursor(context)\r\n  return {\r\n    start,\r\n    end,\r\n    source: context.originalSource.slice(start.offset, end.offset)\r\n  }\r\n}\r\n\r\nfunction last<T>(xs: T[]): T | undefined {\r\n  return xs[xs.length - 1]\r\n}\r\n\r\nfunction startsWith(source: string, searchString: string): boolean {\r\n  return source.startsWith(searchString)\r\n}\r\n\r\nfunction advanceBy(context: ParserContext, numberOfCharacters: number): void {\r\n  const { source } = context\r\n  __TEST__ && assert(numberOfCharacters <= source.length)\r\n  advancePositionWithMutation(context, source, numberOfCharacters)\r\n  context.source = source.slice(numberOfCharacters)\r\n}\r\n\r\nfunction advanceSpaces(context: ParserContext): void {\r\n  const match = /^[\\t\\r\\n\\f ]+/.exec(context.source)\r\n  if (match) {\r\n    advanceBy(context, match[0].length)\r\n  }\r\n}\r\n\r\nfunction getNewPosition(\r\n  context: ParserContext,\r\n  start: Position,\r\n  numberOfCharacters: number\r\n): Position {\r\n  return advancePositionWithClone(\r\n    start,\r\n    context.originalSource.slice(start.offset, numberOfCharacters),\r\n    numberOfCharacters\r\n  )\r\n}\r\n\r\nfunction emitError(\r\n  context: ParserContext,\r\n  code: ErrorCodes,\r\n  offset?: number,\r\n  loc: Position = getCursor(context)\r\n): void {\r\n  if (offset) {\r\n    loc.offset += offset\r\n    loc.column += offset\r\n  }\r\n  context.options.onError(\r\n    createCompilerError(code, {\r\n      start: loc,\r\n      end: loc,\r\n      source: ''\r\n    })\r\n  )\r\n}\r\n\r\nfunction isEnd(\r\n  context: ParserContext,\r\n  mode: TextModes,\r\n  ancestors: ElementNode[]\r\n): boolean {\r\n  const s = context.source\r\n\r\n  switch (mode) {\r\n    case TextModes.DATA:\r\n      if (startsWith(s, '</')) {\r\n        // TODO: probably bad performance\r\n        for (let i = ancestors.length - 1; i >= 0; --i) {\r\n          if (startsWithEndTagOpen(s, ancestors[i].tag)) {\r\n            return true\r\n          }\r\n        }\r\n      }\r\n      break\r\n\r\n    case TextModes.RCDATA:\r\n    case TextModes.RAWTEXT: {\r\n      const parent = last(ancestors)\r\n      if (parent && startsWithEndTagOpen(s, parent.tag)) {\r\n        return true\r\n      }\r\n      break\r\n    }\r\n\r\n    case TextModes.CDATA:\r\n      if (startsWith(s, ']]>')) {\r\n        return true\r\n      }\r\n      break\r\n  }\r\n\r\n  return !s\r\n}\r\n\r\nfunction startsWithEndTagOpen(source: string, tag: string): boolean {\r\n  return (\r\n    startsWith(source, '</') &&\r\n    source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() &&\r\n    /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>')\r\n  )\r\n}\r\n","import {\r\n  ConstantTypes,\r\n  RootNode,\r\n  NodeTypes,\r\n  TemplateChildNode,\r\n  SimpleExpressionNode,\r\n  ElementTypes,\r\n  PlainElementNode,\r\n  ComponentNode,\r\n  TemplateNode,\r\n  VNodeCall,\r\n  ParentNode,\r\n  JSChildNode,\r\n  CallExpression,\r\n  createArrayExpression\r\n} from '../ast'\r\nimport { TransformContext } from '../transform'\r\nimport { PatchFlags, isString, isSymbol, isArray } from '@vue/shared'\r\nimport { getVNodeBlockHelper, getVNodeHelper, isSlotOutlet } from '../utils'\r\nimport {\r\n  OPEN_BLOCK,\r\n  GUARD_REACTIVE_PROPS,\r\n  NORMALIZE_CLASS,\r\n  NORMALIZE_PROPS,\r\n  NORMALIZE_STYLE\r\n} from '../runtimeHelpers'\r\n\r\nexport function hoistStatic(root: RootNode, context: TransformContext) {\r\n  walk(\r\n    root,\r\n    context,\r\n    // Root node is unfortunately non-hoistable due to potential parent\r\n    // fallthrough attributes.\r\n    isSingleElementRoot(root, root.children[0])\r\n  )\r\n}\r\n\r\nexport function isSingleElementRoot(\r\n  root: RootNode,\r\n  child: TemplateChildNode\r\n): child is PlainElementNode | ComponentNode | TemplateNode {\r\n  const { children } = root\r\n  return (\r\n    children.length === 1 &&\r\n    child.type === NodeTypes.ELEMENT &&\r\n    !isSlotOutlet(child)\r\n  )\r\n}\r\n\r\nfunction walk(\r\n  node: ParentNode,\r\n  context: TransformContext,\r\n  doNotHoistNode: boolean = false\r\n) {\r\n  const { children } = node\r\n  const originalCount = children.length\r\n  let hoistedCount = 0\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    // only plain elements & text calls are eligible for hoisting.\r\n    if (\r\n      child.type === NodeTypes.ELEMENT &&\r\n      child.tagType === ElementTypes.ELEMENT\r\n    ) {\r\n      const constantType = doNotHoistNode\r\n        ? ConstantTypes.NOT_CONSTANT\r\n        : getConstantType(child, context)\r\n      if (constantType > ConstantTypes.NOT_CONSTANT) {\r\n        if (constantType >= ConstantTypes.CAN_HOIST) {\r\n          ;(child.codegenNode as VNodeCall).patchFlag =\r\n            PatchFlags.HOISTED + (__DEV__ ? ` /* HOISTED */` : ``)\r\n          child.codegenNode = context.hoist(child.codegenNode!)\r\n          hoistedCount++\r\n          continue\r\n        }\r\n      } else {\r\n        // node may contain dynamic children, but its props may be eligible for\r\n        // hoisting.\r\n        const codegenNode = child.codegenNode!\r\n        if (codegenNode.type === NodeTypes.VNODE_CALL) {\r\n          const flag = getPatchFlag(codegenNode)\r\n          if (\r\n            (!flag ||\r\n              flag === PatchFlags.NEED_PATCH ||\r\n              flag === PatchFlags.TEXT) &&\r\n            getGeneratedPropsConstantType(child, context) >=\r\n              ConstantTypes.CAN_HOIST\r\n          ) {\r\n            const props = getNodeProps(child)\r\n            if (props) {\r\n              codegenNode.props = context.hoist(props)\r\n            }\r\n          }\r\n          if (codegenNode.dynamicProps) {\r\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps)\r\n          }\r\n        }\r\n      }\r\n    } else if (\r\n      child.type === NodeTypes.TEXT_CALL &&\r\n      getConstantType(child.content, context) >= ConstantTypes.CAN_HOIST\r\n    ) {\r\n      child.codegenNode = context.hoist(child.codegenNode)\r\n      hoistedCount++\r\n    }\r\n\r\n    // walk further\r\n    if (child.type === NodeTypes.ELEMENT) {\r\n      const isComponent = child.tagType === ElementTypes.COMPONENT\r\n      if (isComponent) {\r\n        context.scopes.vSlot++\r\n      }\r\n      walk(child, context)\r\n      if (isComponent) {\r\n        context.scopes.vSlot--\r\n      }\r\n    } else if (child.type === NodeTypes.FOR) {\r\n      // Do not hoist v-for single child because it has to be a block\r\n      walk(child, context, child.children.length === 1)\r\n    } else if (child.type === NodeTypes.IF) {\r\n      for (let i = 0; i < child.branches.length; i++) {\r\n        // Do not hoist v-if single child because it has to be a block\r\n        walk(\r\n          child.branches[i],\r\n          context,\r\n          child.branches[i].children.length === 1\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  if (hoistedCount && context.transformHoist) {\r\n    context.transformHoist(children, context, node)\r\n  }\r\n\r\n  // all children were hoisted - the entire children array is hoistable.\r\n  if (\r\n    hoistedCount &&\r\n    hoistedCount === originalCount &&\r\n    node.type === NodeTypes.ELEMENT &&\r\n    node.tagType === ElementTypes.ELEMENT &&\r\n    node.codegenNode &&\r\n    node.codegenNode.type === NodeTypes.VNODE_CALL &&\r\n    isArray(node.codegenNode.children)\r\n  ) {\r\n    node.codegenNode.children = context.hoist(\r\n      createArrayExpression(node.codegenNode.children)\r\n    )\r\n  }\r\n}\r\n\r\nexport function getConstantType(\r\n  node: TemplateChildNode | SimpleExpressionNode,\r\n  context: TransformContext\r\n): ConstantTypes {\r\n  const { constantCache } = context\r\n  switch (node.type) {\r\n    case NodeTypes.ELEMENT:\r\n      if (node.tagType !== ElementTypes.ELEMENT) {\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n      const cached = constantCache.get(node)\r\n      if (cached !== undefined) {\r\n        return cached\r\n      }\r\n      const codegenNode = node.codegenNode!\r\n      if (codegenNode.type !== NodeTypes.VNODE_CALL) {\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n      if (\r\n        codegenNode.isBlock &&\r\n        node.tag !== 'svg' &&\r\n        node.tag !== 'foreignObject'\r\n      ) {\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n      const flag = getPatchFlag(codegenNode)\r\n      if (!flag) {\r\n        let returnType = ConstantTypes.CAN_STRINGIFY\r\n\r\n        // Element itself has no patch flag. However we still need to check:\r\n\r\n        // 1. Even for a node with no patch flag, it is possible for it to contain\r\n        // non-hoistable expressions that refers to scope variables, e.g. compiler\r\n        // injected keys or cached event handlers. Therefore we need to always\r\n        // check the codegenNode's props to be sure.\r\n        const generatedPropsType = getGeneratedPropsConstantType(node, context)\r\n        if (generatedPropsType === ConstantTypes.NOT_CONSTANT) {\r\n          constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n          return ConstantTypes.NOT_CONSTANT\r\n        }\r\n        if (generatedPropsType < returnType) {\r\n          returnType = generatedPropsType\r\n        }\r\n\r\n        // 2. its children.\r\n        for (let i = 0; i < node.children.length; i++) {\r\n          const childType = getConstantType(node.children[i], context)\r\n          if (childType === ConstantTypes.NOT_CONSTANT) {\r\n            constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n            return ConstantTypes.NOT_CONSTANT\r\n          }\r\n          if (childType < returnType) {\r\n            returnType = childType\r\n          }\r\n        }\r\n\r\n        // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\r\n        // type, check if any of the props can cause the type to be lowered\r\n        // we can skip can_patch because it's guaranteed by the absence of a\r\n        // patchFlag.\r\n        if (returnType > ConstantTypes.CAN_SKIP_PATCH) {\r\n          for (let i = 0; i < node.props.length; i++) {\r\n            const p = node.props[i]\r\n            if (p.type === NodeTypes.DIRECTIVE && p.name === 'bind' && p.exp) {\r\n              const expType = getConstantType(p.exp, context)\r\n              if (expType === ConstantTypes.NOT_CONSTANT) {\r\n                constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n                return ConstantTypes.NOT_CONSTANT\r\n              }\r\n              if (expType < returnType) {\r\n                returnType = expType\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // only svg/foreignObject could be block here, however if they are\r\n        // static then they don't need to be blocks since there will be no\r\n        // nested updates.\r\n        if (codegenNode.isBlock) {\r\n          // except set custom directives.\r\n          for (let i = 0; i < node.props.length; i++) {\r\n            const p = node.props[i]\r\n            if (p.type === NodeTypes.DIRECTIVE) {\r\n              constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n              return ConstantTypes.NOT_CONSTANT\r\n            }\r\n          }\r\n\r\n          context.removeHelper(OPEN_BLOCK)\r\n          context.removeHelper(\r\n            getVNodeBlockHelper(context.inSSR, codegenNode.isComponent)\r\n          )\r\n          codegenNode.isBlock = false\r\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent))\r\n        }\r\n\r\n        constantCache.set(node, returnType)\r\n        return returnType\r\n      } else {\r\n        constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n    case NodeTypes.TEXT:\r\n    case NodeTypes.COMMENT:\r\n      return ConstantTypes.CAN_STRINGIFY\r\n    case NodeTypes.IF:\r\n    case NodeTypes.FOR:\r\n    case NodeTypes.IF_BRANCH:\r\n      return ConstantTypes.NOT_CONSTANT\r\n    case NodeTypes.INTERPOLATION:\r\n    case NodeTypes.TEXT_CALL:\r\n      return getConstantType(node.content, context)\r\n    case NodeTypes.SIMPLE_EXPRESSION:\r\n      return node.constType\r\n    case NodeTypes.COMPOUND_EXPRESSION:\r\n      let returnType = ConstantTypes.CAN_STRINGIFY\r\n      for (let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i]\r\n        if (isString(child) || isSymbol(child)) {\r\n          continue\r\n        }\r\n        const childType = getConstantType(child, context)\r\n        if (childType === ConstantTypes.NOT_CONSTANT) {\r\n          return ConstantTypes.NOT_CONSTANT\r\n        } else if (childType < returnType) {\r\n          returnType = childType\r\n        }\r\n      }\r\n      return returnType\r\n    default:\r\n      if (__DEV__) {\r\n        const exhaustiveCheck: never = node\r\n        exhaustiveCheck\r\n      }\r\n      return ConstantTypes.NOT_CONSTANT\r\n  }\r\n}\r\n\r\nconst allowHoistedHelperSet = new Set([\r\n  NORMALIZE_CLASS,\r\n  NORMALIZE_STYLE,\r\n  NORMALIZE_PROPS,\r\n  GUARD_REACTIVE_PROPS\r\n])\r\n\r\nfunction getConstantTypeOfHelperCall(\r\n  value: CallExpression,\r\n  context: TransformContext\r\n): ConstantTypes {\r\n  if (\r\n    value.type === NodeTypes.JS_CALL_EXPRESSION &&\r\n    !isString(value.callee) &&\r\n    allowHoistedHelperSet.has(value.callee)\r\n  ) {\r\n    const arg = value.arguments[0] as JSChildNode\r\n    if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n      return getConstantType(arg, context)\r\n    } else if (arg.type === NodeTypes.JS_CALL_EXPRESSION) {\r\n      // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\r\n      return getConstantTypeOfHelperCall(arg, context)\r\n    }\r\n  }\r\n  return ConstantTypes.NOT_CONSTANT\r\n}\r\n\r\nfunction getGeneratedPropsConstantType(\r\n  node: PlainElementNode,\r\n  context: TransformContext\r\n): ConstantTypes {\r\n  let returnType = ConstantTypes.CAN_STRINGIFY\r\n  const props = getNodeProps(node)\r\n  if (props && props.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n    const { properties } = props\r\n    for (let i = 0; i < properties.length; i++) {\r\n      const { key, value } = properties[i]\r\n      const keyType = getConstantType(key, context)\r\n      if (keyType === ConstantTypes.NOT_CONSTANT) {\r\n        return keyType\r\n      }\r\n      if (keyType < returnType) {\r\n        returnType = keyType\r\n      }\r\n      let valueType: ConstantTypes\r\n      if (value.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n        valueType = getConstantType(value, context)\r\n      } else if (value.type === NodeTypes.JS_CALL_EXPRESSION) {\r\n        // some helper calls can be hoisted,\r\n        // such as the `normalizeProps` generated by the compiler for pre-normalize class,\r\n        // in this case we need to respect the ConstantType of the helper's arguments\r\n        valueType = getConstantTypeOfHelperCall(value, context)\r\n      } else {\r\n        valueType = ConstantTypes.NOT_CONSTANT\r\n      }\r\n      if (valueType === ConstantTypes.NOT_CONSTANT) {\r\n        return valueType\r\n      }\r\n      if (valueType < returnType) {\r\n        returnType = valueType\r\n      }\r\n    }\r\n  }\r\n  return returnType\r\n}\r\n\r\nfunction getNodeProps(node: PlainElementNode) {\r\n  const codegenNode = node.codegenNode!\r\n  if (codegenNode.type === NodeTypes.VNODE_CALL) {\r\n    return codegenNode.props\r\n  }\r\n}\r\n\r\nfunction getPatchFlag(node: VNodeCall): number | undefined {\r\n  const flag = node.patchFlag\r\n  return flag ? parseInt(flag, 10) : undefined\r\n}\r\n","import { TransformOptions } from './options'\r\nimport {\r\n  RootNode,\r\n  NodeTypes,\r\n  ParentNode,\r\n  TemplateChildNode,\r\n  ElementNode,\r\n  DirectiveNode,\r\n  Property,\r\n  ExpressionNode,\r\n  createSimpleExpression,\r\n  JSChildNode,\r\n  SimpleExpressionNode,\r\n  ElementTypes,\r\n  CacheExpression,\r\n  createCacheExpression,\r\n  TemplateLiteral,\r\n  createVNodeCall,\r\n  ConstantTypes,\r\n  ArrayExpression\r\n} from './ast'\r\nimport {\r\n  isString,\r\n  isArray,\r\n  NOOP,\r\n  PatchFlags,\r\n  PatchFlagNames,\r\n  EMPTY_OBJ,\r\n  capitalize,\r\n  camelize\r\n} from '@vue/shared'\r\nimport { defaultOnError, defaultOnWarn } from './errors'\r\nimport {\r\n  TO_DISPLAY_STRING,\r\n  FRAGMENT,\r\n  helperNameMap,\r\n  CREATE_COMMENT\r\n} from './runtimeHelpers'\r\nimport { isVSlot, makeBlock } from './utils'\r\nimport { hoistStatic, isSingleElementRoot } from './transforms/hoistStatic'\r\nimport { CompilerCompatOptions } from './compat/compatConfig'\r\n\r\n// There are two types of transforms:\r\n//\r\n// - NodeTransform:\r\n//   Transforms that operate directly on a ChildNode. NodeTransforms may mutate,\r\n//   replace or remove the node being processed.\r\nexport type NodeTransform = (\r\n  node: RootNode | TemplateChildNode,\r\n  context: TransformContext\r\n) => void | (() => void) | (() => void)[]\r\n\r\n// - DirectiveTransform:\r\n//   Transforms that handles a single directive attribute on an element.\r\n//   It translates the raw directive into actual props for the VNode.\r\nexport type DirectiveTransform = (\r\n  dir: DirectiveNode,\r\n  node: ElementNode,\r\n  context: TransformContext,\r\n  // a platform specific compiler can import the base transform and augment\r\n  // it by passing in this optional argument.\r\n  augmentor?: (ret: DirectiveTransformResult) => DirectiveTransformResult\r\n) => DirectiveTransformResult\r\n\r\nexport interface DirectiveTransformResult {\r\n  props: Property[]\r\n  needRuntime?: boolean | symbol\r\n  ssrTagParts?: TemplateLiteral['elements']\r\n}\r\n\r\n// A structural directive transform is technically also a NodeTransform;\r\n// Only v-if and v-for fall into this category.\r\nexport type StructuralDirectiveTransform = (\r\n  node: ElementNode,\r\n  dir: DirectiveNode,\r\n  context: TransformContext\r\n) => void | (() => void)\r\n\r\nexport interface ImportItem {\r\n  exp: string | ExpressionNode\r\n  path: string\r\n}\r\n\r\nexport interface TransformContext\r\n  extends Required<\r\n      Omit<TransformOptions, 'filename' | keyof CompilerCompatOptions>\r\n    >,\r\n    CompilerCompatOptions {\r\n  selfName: string | null\r\n  root: RootNode\r\n  helpers: Map<symbol, number>\r\n  components: Set<string>\r\n  directives: Set<string>\r\n  hoists: (JSChildNode | null)[]\r\n  imports: ImportItem[]\r\n  temps: number\r\n  cached: number\r\n  identifiers: { [name: string]: number | undefined }\r\n  scopes: {\r\n    vFor: number\r\n    vSlot: number\r\n    vPre: number\r\n    vOnce: number\r\n  }\r\n  parent: ParentNode | null\r\n  childIndex: number\r\n  currentNode: RootNode | TemplateChildNode | null\r\n  inVOnce: boolean\r\n  helper<T extends symbol>(name: T): T\r\n  removeHelper<T extends symbol>(name: T): void\r\n  helperString(name: symbol): string\r\n  replaceNode(node: TemplateChildNode): void\r\n  removeNode(node?: TemplateChildNode): void\r\n  onNodeRemoved(): void\r\n  addIdentifiers(exp: ExpressionNode | string): void\r\n  removeIdentifiers(exp: ExpressionNode | string): void\r\n  hoist(exp: string | JSChildNode | ArrayExpression): SimpleExpressionNode\r\n  cache<T extends JSChildNode>(exp: T, isVNode?: boolean): CacheExpression | T\r\n  constantCache: Map<TemplateChildNode, ConstantTypes>\r\n\r\n  // 2.x Compat only\r\n  filters?: Set<string>\r\n}\r\n\r\nexport function createTransformContext(\r\n  root: RootNode,\r\n  {\r\n    filename = '',\r\n    prefixIdentifiers = false,\r\n    hoistStatic = false,\r\n    cacheHandlers = false,\r\n    nodeTransforms = [],\r\n    directiveTransforms = {},\r\n    transformHoist = null,\r\n    isBuiltInComponent = NOOP,\r\n    isCustomElement = NOOP,\r\n    expressionPlugins = [],\r\n    scopeId = null,\r\n    slotted = true,\r\n    ssr = false,\r\n    inSSR = false,\r\n    ssrCssVars = ``,\r\n    bindingMetadata = EMPTY_OBJ,\r\n    inline = false,\r\n    isTS = false,\r\n    onError = defaultOnError,\r\n    onWarn = defaultOnWarn,\r\n    compatConfig\r\n  }: TransformOptions\r\n): TransformContext {\r\n  const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/)\r\n  const context: TransformContext = {\r\n    // options\r\n    selfName: nameMatch && capitalize(camelize(nameMatch[1])),\r\n    prefixIdentifiers,\r\n    hoistStatic,\r\n    cacheHandlers,\r\n    nodeTransforms,\r\n    directiveTransforms,\r\n    transformHoist,\r\n    isBuiltInComponent,\r\n    isCustomElement,\r\n    expressionPlugins,\r\n    scopeId,\r\n    slotted,\r\n    ssr,\r\n    inSSR,\r\n    ssrCssVars,\r\n    bindingMetadata,\r\n    inline,\r\n    isTS,\r\n    onError,\r\n    onWarn,\r\n    compatConfig,\r\n\r\n    // state\r\n    root,\r\n    helpers: new Map(),\r\n    components: new Set(),\r\n    directives: new Set(),\r\n    hoists: [],\r\n    imports: [],\r\n    constantCache: new Map(),\r\n    temps: 0,\r\n    cached: 0,\r\n    identifiers: Object.create(null),\r\n    scopes: {\r\n      vFor: 0,\r\n      vSlot: 0,\r\n      vPre: 0,\r\n      vOnce: 0\r\n    },\r\n    parent: null,\r\n    currentNode: root,\r\n    childIndex: 0,\r\n    inVOnce: false,\r\n\r\n    // methods\r\n    helper(name) {\r\n      const count = context.helpers.get(name) || 0\r\n      context.helpers.set(name, count + 1)\r\n      return name\r\n    },\r\n    removeHelper(name) {\r\n      const count = context.helpers.get(name)\r\n      if (count) {\r\n        const currentCount = count - 1\r\n        if (!currentCount) {\r\n          context.helpers.delete(name)\r\n        } else {\r\n          context.helpers.set(name, currentCount)\r\n        }\r\n      }\r\n    },\r\n    helperString(name) {\r\n      return `_${helperNameMap[context.helper(name)]}`\r\n    },\r\n    replaceNode(node) {\r\n      /* istanbul ignore if */\r\n      if (__DEV__) {\r\n        if (!context.currentNode) {\r\n          throw new Error(`Node being replaced is already removed.`)\r\n        }\r\n        if (!context.parent) {\r\n          throw new Error(`Cannot replace root node.`)\r\n        }\r\n      }\r\n      context.parent!.children[context.childIndex] = context.currentNode = node\r\n    },\r\n    removeNode(node) {\r\n      if (__DEV__ && !context.parent) {\r\n        throw new Error(`Cannot remove root node.`)\r\n      }\r\n      const list = context.parent!.children\r\n      const removalIndex = node\r\n        ? list.indexOf(node)\r\n        : context.currentNode\r\n        ? context.childIndex\r\n        : -1\r\n      /* istanbul ignore if */\r\n      if (__DEV__ && removalIndex < 0) {\r\n        throw new Error(`node being removed is not a child of current parent`)\r\n      }\r\n      if (!node || node === context.currentNode) {\r\n        // current node removed\r\n        context.currentNode = null\r\n        context.onNodeRemoved()\r\n      } else {\r\n        // sibling node removed\r\n        if (context.childIndex > removalIndex) {\r\n          context.childIndex--\r\n          context.onNodeRemoved()\r\n        }\r\n      }\r\n      context.parent!.children.splice(removalIndex, 1)\r\n    },\r\n    onNodeRemoved: () => {},\r\n    addIdentifiers(exp) {\r\n      // identifier tracking only happens in non-browser builds.\r\n      if (!__BROWSER__) {\r\n        if (isString(exp)) {\r\n          addId(exp)\r\n        } else if (exp.identifiers) {\r\n          exp.identifiers.forEach(addId)\r\n        } else if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n          addId(exp.content)\r\n        }\r\n      }\r\n    },\r\n    removeIdentifiers(exp) {\r\n      if (!__BROWSER__) {\r\n        if (isString(exp)) {\r\n          removeId(exp)\r\n        } else if (exp.identifiers) {\r\n          exp.identifiers.forEach(removeId)\r\n        } else if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n          removeId(exp.content)\r\n        }\r\n      }\r\n    },\r\n    hoist(exp) {\r\n      if (isString(exp)) exp = createSimpleExpression(exp)\r\n      context.hoists.push(exp)\r\n      const identifier = createSimpleExpression(\r\n        `_hoisted_${context.hoists.length}`,\r\n        false,\r\n        exp.loc,\r\n        ConstantTypes.CAN_HOIST\r\n      )\r\n      identifier.hoisted = exp\r\n      return identifier\r\n    },\r\n    cache(exp, isVNode = false) {\r\n      return createCacheExpression(context.cached++, exp, isVNode)\r\n    }\r\n  }\r\n\r\n  if (__COMPAT__) {\r\n    context.filters = new Set()\r\n  }\r\n\r\n  function addId(id: string) {\r\n    const { identifiers } = context\r\n    if (identifiers[id] === undefined) {\r\n      identifiers[id] = 0\r\n    }\r\n    identifiers[id]!++\r\n  }\r\n\r\n  function removeId(id: string) {\r\n    context.identifiers[id]!--\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nexport function transform(root: RootNode, options: TransformOptions) {\r\n  const context = createTransformContext(root, options)\r\n  traverseNode(root, context)\r\n  if (options.hoistStatic) {\r\n    hoistStatic(root, context)\r\n  }\r\n  if (!options.ssr) {\r\n    createRootCodegen(root, context)\r\n  }\r\n  // finalize meta information\r\n  root.helpers = [...context.helpers.keys()]\r\n  root.components = [...context.components]\r\n  root.directives = [...context.directives]\r\n  root.imports = context.imports\r\n  root.hoists = context.hoists\r\n  root.temps = context.temps\r\n  root.cached = context.cached\r\n\r\n  if (__COMPAT__) {\r\n    root.filters = [...context.filters!]\r\n  }\r\n}\r\n\r\nfunction createRootCodegen(root: RootNode, context: TransformContext) {\r\n  const { helper } = context\r\n  const { children } = root\r\n  if (children.length === 1) {\r\n    const child = children[0]\r\n    // if the single child is an element, turn it into a block.\r\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\r\n      // single element root is never hoisted so codegenNode will never be\r\n      // SimpleExpressionNode\r\n      const codegenNode = child.codegenNode\r\n      if (codegenNode.type === NodeTypes.VNODE_CALL) {\r\n        makeBlock(codegenNode, context)\r\n      }\r\n      root.codegenNode = codegenNode\r\n    } else {\r\n      // - single <slot/>, IfNode, ForNode: already blocks.\r\n      // - single text node: always patched.\r\n      // root codegen falls through via genNode()\r\n      root.codegenNode = child\r\n    }\r\n  } else if (children.length > 1) {\r\n    // root has multiple nodes - return a fragment block.\r\n    let patchFlag = PatchFlags.STABLE_FRAGMENT\r\n    let patchFlagText = PatchFlagNames[PatchFlags.STABLE_FRAGMENT]\r\n    // check if the fragment actually contains a single valid child with\r\n    // the rest being comments\r\n    if (\r\n      __DEV__ &&\r\n      children.filter(c => c.type !== NodeTypes.COMMENT).length === 1\r\n    ) {\r\n      patchFlag |= PatchFlags.DEV_ROOT_FRAGMENT\r\n      patchFlagText += `, ${PatchFlagNames[PatchFlags.DEV_ROOT_FRAGMENT]}`\r\n    }\r\n    root.codegenNode = createVNodeCall(\r\n      context,\r\n      helper(FRAGMENT),\r\n      undefined,\r\n      root.children,\r\n      patchFlag + (__DEV__ ? ` /* ${patchFlagText} */` : ``),\r\n      undefined,\r\n      undefined,\r\n      true,\r\n      undefined,\r\n      false /* isComponent */\r\n    )\r\n  } else {\r\n    // no children = noop. codegen will return null.\r\n  }\r\n}\r\n\r\nexport function traverseChildren(\r\n  parent: ParentNode,\r\n  context: TransformContext\r\n) {\r\n  let i = 0\r\n  const nodeRemoved = () => {\r\n    i--\r\n  }\r\n  for (; i < parent.children.length; i++) {\r\n    const child = parent.children[i]\r\n    if (isString(child)) continue\r\n    context.parent = parent\r\n    context.childIndex = i\r\n    context.onNodeRemoved = nodeRemoved\r\n    traverseNode(child, context)\r\n  }\r\n}\r\n\r\nexport function traverseNode(\r\n  node: RootNode | TemplateChildNode,\r\n  context: TransformContext\r\n) {\r\n  context.currentNode = node\r\n  // apply transform plugins\r\n  const { nodeTransforms } = context\r\n  const exitFns = []\r\n  for (let i = 0; i < nodeTransforms.length; i++) {\r\n    const onExit = nodeTransforms[i](node, context)\r\n    if (onExit) {\r\n      if (isArray(onExit)) {\r\n        exitFns.push(...onExit)\r\n      } else {\r\n        exitFns.push(onExit)\r\n      }\r\n    }\r\n    if (!context.currentNode) {\r\n      // node was removed\r\n      return\r\n    } else {\r\n      // node may have been replaced\r\n      node = context.currentNode\r\n    }\r\n  }\r\n\r\n  switch (node.type) {\r\n    case NodeTypes.COMMENT:\r\n      if (!context.ssr) {\r\n        // inject import for the Comment symbol, which is needed for creating\r\n        // comment nodes with `createVNode`\r\n        context.helper(CREATE_COMMENT)\r\n      }\r\n      break\r\n    case NodeTypes.INTERPOLATION:\r\n      // no need to traverse, but we need to inject toString helper\r\n      if (!context.ssr) {\r\n        context.helper(TO_DISPLAY_STRING)\r\n      }\r\n      break\r\n\r\n    // for container types, further traverse downwards\r\n    case NodeTypes.IF:\r\n      for (let i = 0; i < node.branches.length; i++) {\r\n        traverseNode(node.branches[i], context)\r\n      }\r\n      break\r\n    case NodeTypes.IF_BRANCH:\r\n    case NodeTypes.FOR:\r\n    case NodeTypes.ELEMENT:\r\n    case NodeTypes.ROOT:\r\n      traverseChildren(node, context)\r\n      break\r\n  }\r\n\r\n  // exit transforms\r\n  context.currentNode = node\r\n  let i = exitFns.length\r\n  while (i--) {\r\n    exitFns[i]()\r\n  }\r\n}\r\n\r\nexport function createStructuralDirectiveTransform(\r\n  name: string | RegExp,\r\n  fn: StructuralDirectiveTransform\r\n): NodeTransform {\r\n  const matches = isString(name)\r\n    ? (n: string) => n === name\r\n    : (n: string) => name.test(n)\r\n\r\n  return (node, context) => {\r\n    if (node.type === NodeTypes.ELEMENT) {\r\n      const { props } = node\r\n      // structural directive transforms are not concerned with slots\r\n      // as they are handled separately in vSlot.ts\r\n      if (node.tagType === ElementTypes.TEMPLATE && props.some(isVSlot)) {\r\n        return\r\n      }\r\n      const exitFns = []\r\n      for (let i = 0; i < props.length; i++) {\r\n        const prop = props[i]\r\n        if (prop.type === NodeTypes.DIRECTIVE && matches(prop.name)) {\r\n          // structural directives are removed to avoid infinite recursion\r\n          // also we remove them *before* applying so that it can further\r\n          // traverse itself in case it moves the node around\r\n          props.splice(i, 1)\r\n          i--\r\n          const onExit = fn(node, prop, context)\r\n          if (onExit) exitFns.push(onExit)\r\n        }\r\n      }\r\n      return exitFns\r\n    }\r\n  }\r\n}\r\n","import { CodegenOptions } from './options'\r\nimport {\r\n  RootNode,\r\n  TemplateChildNode,\r\n  TextNode,\r\n  CommentNode,\r\n  ExpressionNode,\r\n  NodeTypes,\r\n  JSChildNode,\r\n  CallExpression,\r\n  ArrayExpression,\r\n  ObjectExpression,\r\n  Position,\r\n  InterpolationNode,\r\n  CompoundExpressionNode,\r\n  SimpleExpressionNode,\r\n  FunctionExpression,\r\n  ConditionalExpression,\r\n  CacheExpression,\r\n  locStub,\r\n  SSRCodegenNode,\r\n  TemplateLiteral,\r\n  IfStatement,\r\n  AssignmentExpression,\r\n  ReturnStatement,\r\n  VNodeCall,\r\n  SequenceExpression\r\n} from './ast'\r\nimport { SourceMapGenerator, RawSourceMap } from 'source-map'\r\nimport {\r\n  advancePositionWithMutation,\r\n  assert,\r\n  getVNodeBlockHelper,\r\n  getVNodeHelper,\r\n  isSimpleIdentifier,\r\n  toValidAssetId\r\n} from './utils'\r\nimport { isString, isArray, isSymbol } from '@vue/shared'\r\nimport {\r\n  helperNameMap,\r\n  TO_DISPLAY_STRING,\r\n  CREATE_VNODE,\r\n  RESOLVE_COMPONENT,\r\n  RESOLVE_DIRECTIVE,\r\n  SET_BLOCK_TRACKING,\r\n  CREATE_COMMENT,\r\n  CREATE_TEXT,\r\n  PUSH_SCOPE_ID,\r\n  POP_SCOPE_ID,\r\n  WITH_DIRECTIVES,\r\n  CREATE_ELEMENT_VNODE,\r\n  OPEN_BLOCK,\r\n  CREATE_STATIC,\r\n  WITH_CTX,\r\n  RESOLVE_FILTER\r\n} from './runtimeHelpers'\r\nimport { ImportItem } from './transform'\r\n\r\nconst PURE_ANNOTATION = `/*#__PURE__*/`\r\n\r\nconst aliasHelper = (s: symbol) => `${helperNameMap[s]}: _${helperNameMap[s]}`\r\n\r\ntype CodegenNode = TemplateChildNode | JSChildNode | SSRCodegenNode\r\n\r\nexport interface CodegenResult {\r\n  code: string\r\n  preamble: string\r\n  ast: RootNode\r\n  map?: RawSourceMap\r\n}\r\n\r\nexport interface CodegenContext\r\n  extends Omit<Required<CodegenOptions>, 'bindingMetadata' | 'inline'> {\r\n  source: string\r\n  code: string\r\n  line: number\r\n  column: number\r\n  offset: number\r\n  indentLevel: number\r\n  pure: boolean\r\n  map?: SourceMapGenerator\r\n  helper(key: symbol): string\r\n  push(code: string, node?: CodegenNode): void\r\n  indent(): void\r\n  deindent(withoutNewLine?: boolean): void\r\n  newline(): void\r\n}\r\n\r\nfunction createCodegenContext(\r\n  ast: RootNode,\r\n  {\r\n    mode = 'function',\r\n    prefixIdentifiers = mode === 'module',\r\n    sourceMap = false,\r\n    filename = `template.vue.html`,\r\n    scopeId = null,\r\n    optimizeImports = false,\r\n    runtimeGlobalName = `Vue`,\r\n    runtimeModuleName = `vue`,\r\n    ssrRuntimeModuleName = 'vue/server-renderer',\r\n    ssr = false,\r\n    isTS = false,\r\n    inSSR = false\r\n  }: CodegenOptions\r\n): CodegenContext {\r\n  const context: CodegenContext = {\r\n    mode,\r\n    prefixIdentifiers,\r\n    sourceMap,\r\n    filename,\r\n    scopeId,\r\n    optimizeImports,\r\n    runtimeGlobalName,\r\n    runtimeModuleName,\r\n    ssrRuntimeModuleName,\r\n    ssr,\r\n    isTS,\r\n    inSSR,\r\n    source: ast.loc.source,\r\n    code: ``,\r\n    column: 1,\r\n    line: 1,\r\n    offset: 0,\r\n    indentLevel: 0,\r\n    pure: false,\r\n    map: undefined,\r\n    helper(key) {\r\n      return `_${helperNameMap[key]}`\r\n    },\r\n    push(code, node) {\r\n      context.code += code\r\n      if (!__BROWSER__ && context.map) {\r\n        if (node) {\r\n          let name\r\n          if (node.type === NodeTypes.SIMPLE_EXPRESSION && !node.isStatic) {\r\n            const content = node.content.replace(/^_ctx\\./, '')\r\n            if (content !== node.content && isSimpleIdentifier(content)) {\r\n              name = content\r\n            }\r\n          }\r\n          addMapping(node.loc.start, name)\r\n        }\r\n        advancePositionWithMutation(context, code)\r\n        if (node && node.loc !== locStub) {\r\n          addMapping(node.loc.end)\r\n        }\r\n      }\r\n    },\r\n    indent() {\r\n      newline(++context.indentLevel)\r\n    },\r\n    deindent(withoutNewLine = false) {\r\n      if (withoutNewLine) {\r\n        --context.indentLevel\r\n      } else {\r\n        newline(--context.indentLevel)\r\n      }\r\n    },\r\n    newline() {\r\n      newline(context.indentLevel)\r\n    }\r\n  }\r\n\r\n  function newline(n: number) {\r\n    context.push('\\n' + `  `.repeat(n))\r\n  }\r\n\r\n  function addMapping(loc: Position, name?: string) {\r\n    context.map!.addMapping({\r\n      name,\r\n      source: context.filename,\r\n      original: {\r\n        line: loc.line,\r\n        column: loc.column - 1 // source-map column is 0 based\r\n      },\r\n      generated: {\r\n        line: context.line,\r\n        column: context.column - 1\r\n      }\r\n    })\r\n  }\r\n\r\n  if (!__BROWSER__ && sourceMap) {\r\n    // lazy require source-map implementation, only in non-browser builds\r\n    context.map = new SourceMapGenerator()\r\n    context.map!.setSourceContent(filename, context.source)\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nexport function generate(\r\n  ast: RootNode,\r\n  options: CodegenOptions & {\r\n    onContextCreated?: (context: CodegenContext) => void\r\n  } = {}\r\n): CodegenResult {\r\n  const context = createCodegenContext(ast, options)\r\n  if (options.onContextCreated) options.onContextCreated(context)\r\n  const {\r\n    mode,\r\n    push,\r\n    prefixIdentifiers,\r\n    indent,\r\n    deindent,\r\n    newline,\r\n    scopeId,\r\n    ssr\r\n  } = context\r\n\r\n  const hasHelpers = ast.helpers.length > 0\r\n  const useWithBlock = !prefixIdentifiers && mode !== 'module'\r\n  const genScopeId = !__BROWSER__ && scopeId != null && mode === 'module'\r\n  const isSetupInlined = !__BROWSER__ && !!options.inline\r\n\r\n  // preambles\r\n  // in setup() inline mode, the preamble is generated in a sub context\r\n  // and returned separately.\r\n  const preambleContext = isSetupInlined\r\n    ? createCodegenContext(ast, options)\r\n    : context\r\n  if (!__BROWSER__ && mode === 'module') {\r\n    genModulePreamble(ast, preambleContext, genScopeId, isSetupInlined)\r\n  } else {\r\n    genFunctionPreamble(ast, preambleContext)\r\n  }\r\n  // enter render function\r\n  const functionName = ssr ? `ssrRender` : `render`\r\n  const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache']\r\n  if (!__BROWSER__ && options.bindingMetadata && !options.inline) {\r\n    // binding optimization args\r\n    args.push('$props', '$setup', '$data', '$options')\r\n  }\r\n  const signature =\r\n    !__BROWSER__ && options.isTS\r\n      ? args.map(arg => `${arg}: any`).join(',')\r\n      : args.join(', ')\r\n\r\n  if (isSetupInlined) {\r\n    push(`(${signature}) => {`)\r\n  } else {\r\n    push(`function ${functionName}(${signature}) {`)\r\n  }\r\n  indent()\r\n\r\n  if (useWithBlock) {\r\n    push(`with (_ctx) {`)\r\n    indent()\r\n    // function mode const declarations should be inside with block\r\n    // also they should be renamed to avoid collision with user properties\r\n    if (hasHelpers) {\r\n      push(`const { ${ast.helpers.map(aliasHelper).join(', ')} } = _Vue`)\r\n      push(`\\n`)\r\n      newline()\r\n    }\r\n  }\r\n\r\n  // generate asset resolution statements\r\n  if (ast.components.length) {\r\n    genAssets(ast.components, 'component', context)\r\n    if (ast.directives.length || ast.temps > 0) {\r\n      newline()\r\n    }\r\n  }\r\n  if (ast.directives.length) {\r\n    genAssets(ast.directives, 'directive', context)\r\n    if (ast.temps > 0) {\r\n      newline()\r\n    }\r\n  }\r\n  if (__COMPAT__ && ast.filters && ast.filters.length) {\r\n    newline()\r\n    genAssets(ast.filters, 'filter', context)\r\n    newline()\r\n  }\r\n\r\n  if (ast.temps > 0) {\r\n    push(`let `)\r\n    for (let i = 0; i < ast.temps; i++) {\r\n      push(`${i > 0 ? `, ` : ``}_temp${i}`)\r\n    }\r\n  }\r\n  if (ast.components.length || ast.directives.length || ast.temps) {\r\n    push(`\\n`)\r\n    newline()\r\n  }\r\n\r\n  // generate the VNode tree expression\r\n  if (!ssr) {\r\n    push(`return `)\r\n  }\r\n  if (ast.codegenNode) {\r\n    genNode(ast.codegenNode, context)\r\n  } else {\r\n    push(`null`)\r\n  }\r\n\r\n  if (useWithBlock) {\r\n    deindent()\r\n    push(`}`)\r\n  }\r\n\r\n  deindent()\r\n  push(`}`)\r\n\r\n  return {\r\n    ast,\r\n    code: context.code,\r\n    preamble: isSetupInlined ? preambleContext.code : ``,\r\n    // SourceMapGenerator does have toJSON() method but it's not in the types\r\n    map: context.map ? (context.map as any).toJSON() : undefined\r\n  }\r\n}\r\n\r\nfunction genFunctionPreamble(ast: RootNode, context: CodegenContext) {\r\n  const {\r\n    ssr,\r\n    prefixIdentifiers,\r\n    push,\r\n    newline,\r\n    runtimeModuleName,\r\n    runtimeGlobalName,\r\n    ssrRuntimeModuleName\r\n  } = context\r\n  const VueBinding =\r\n    !__BROWSER__ && ssr\r\n      ? `require(${JSON.stringify(runtimeModuleName)})`\r\n      : runtimeGlobalName\r\n  // Generate const declaration for helpers\r\n  // In prefix mode, we place the const declaration at top so it's done\r\n  // only once; But if we not prefixing, we place the declaration inside the\r\n  // with block so it doesn't incur the `in` check cost for every helper access.\r\n  if (ast.helpers.length > 0) {\r\n    if (!__BROWSER__ && prefixIdentifiers) {\r\n      push(\r\n        `const { ${ast.helpers.map(aliasHelper).join(', ')} } = ${VueBinding}\\n`\r\n      )\r\n    } else {\r\n      // \"with\" mode.\r\n      // save Vue in a separate variable to avoid collision\r\n      push(`const _Vue = ${VueBinding}\\n`)\r\n      // in \"with\" mode, helpers are declared inside the with block to avoid\r\n      // has check cost, but hoists are lifted out of the function - we need\r\n      // to provide the helper here.\r\n      if (ast.hoists.length) {\r\n        const staticHelpers = [\r\n          CREATE_VNODE,\r\n          CREATE_ELEMENT_VNODE,\r\n          CREATE_COMMENT,\r\n          CREATE_TEXT,\r\n          CREATE_STATIC\r\n        ]\r\n          .filter(helper => ast.helpers.includes(helper))\r\n          .map(aliasHelper)\r\n          .join(', ')\r\n        push(`const { ${staticHelpers} } = _Vue\\n`)\r\n      }\r\n    }\r\n  }\r\n  // generate variables for ssr helpers\r\n  if (!__BROWSER__ && ast.ssrHelpers && ast.ssrHelpers.length) {\r\n    // ssr guarantees prefixIdentifier: true\r\n    push(\r\n      `const { ${ast.ssrHelpers\r\n        .map(aliasHelper)\r\n        .join(', ')} } = require(\"${ssrRuntimeModuleName}\")\\n`\r\n    )\r\n  }\r\n  genHoists(ast.hoists, context)\r\n  newline()\r\n  push(`return `)\r\n}\r\n\r\nfunction genModulePreamble(\r\n  ast: RootNode,\r\n  context: CodegenContext,\r\n  genScopeId: boolean,\r\n  inline?: boolean\r\n) {\r\n  const {\r\n    push,\r\n    newline,\r\n    optimizeImports,\r\n    runtimeModuleName,\r\n    ssrRuntimeModuleName\r\n  } = context\r\n\r\n  if (genScopeId && ast.hoists.length) {\r\n    ast.helpers.push(PUSH_SCOPE_ID, POP_SCOPE_ID)\r\n  }\r\n\r\n  // generate import statements for helpers\r\n  if (ast.helpers.length) {\r\n    if (optimizeImports) {\r\n      // when bundled with webpack with code-split, calling an import binding\r\n      // as a function leads to it being wrapped with `Object(a.b)` or `(0,a.b)`,\r\n      // incurring both payload size increase and potential perf overhead.\r\n      // therefore we assign the imports to variables (which is a constant ~50b\r\n      // cost per-component instead of scaling with template size)\r\n      push(\r\n        `import { ${ast.helpers\r\n          .map(s => helperNameMap[s])\r\n          .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`\r\n      )\r\n      push(\r\n        `\\n// Binding optimization for webpack code-split\\nconst ${ast.helpers\r\n          .map(s => `_${helperNameMap[s]} = ${helperNameMap[s]}`)\r\n          .join(', ')}\\n`\r\n      )\r\n    } else {\r\n      push(\r\n        `import { ${ast.helpers\r\n          .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\r\n          .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`\r\n      )\r\n    }\r\n  }\r\n\r\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\r\n    push(\r\n      `import { ${ast.ssrHelpers\r\n        .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\r\n        .join(', ')} } from \"${ssrRuntimeModuleName}\"\\n`\r\n    )\r\n  }\r\n\r\n  if (ast.imports.length) {\r\n    genImports(ast.imports, context)\r\n    newline()\r\n  }\r\n\r\n  genHoists(ast.hoists, context)\r\n  newline()\r\n\r\n  if (!inline) {\r\n    push(`export `)\r\n  }\r\n}\r\n\r\nfunction genAssets(\r\n  assets: string[],\r\n  type: 'component' | 'directive' | 'filter',\r\n  { helper, push, newline, isTS }: CodegenContext\r\n) {\r\n  const resolver = helper(\r\n    __COMPAT__ && type === 'filter'\r\n      ? RESOLVE_FILTER\r\n      : type === 'component'\r\n      ? RESOLVE_COMPONENT\r\n      : RESOLVE_DIRECTIVE\r\n  )\r\n  for (let i = 0; i < assets.length; i++) {\r\n    let id = assets[i]\r\n    // potential component implicit self-reference inferred from SFC filename\r\n    const maybeSelfReference = id.endsWith('__self')\r\n    if (maybeSelfReference) {\r\n      id = id.slice(0, -6)\r\n    }\r\n    push(\r\n      `const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${\r\n        maybeSelfReference ? `, true` : ``\r\n      })${isTS ? `!` : ``}`\r\n    )\r\n    if (i < assets.length - 1) {\r\n      newline()\r\n    }\r\n  }\r\n}\r\n\r\nfunction genHoists(hoists: (JSChildNode | null)[], context: CodegenContext) {\r\n  if (!hoists.length) {\r\n    return\r\n  }\r\n  context.pure = true\r\n  const { push, newline, helper, scopeId, mode } = context\r\n  const genScopeId = !__BROWSER__ && scopeId != null && mode !== 'function'\r\n  newline()\r\n\r\n  // generate inlined withScopeId helper\r\n  if (genScopeId) {\r\n    push(\r\n      `const _withScopeId = n => (${helper(\r\n        PUSH_SCOPE_ID\r\n      )}(\"${scopeId}\"),n=n(),${helper(POP_SCOPE_ID)}(),n)`\r\n    )\r\n    newline()\r\n  }\r\n\r\n  for (let i = 0; i < hoists.length; i++) {\r\n    const exp = hoists[i]\r\n    if (exp) {\r\n      const needScopeIdWrapper = genScopeId && exp.type === NodeTypes.VNODE_CALL\r\n      push(\r\n        `const _hoisted_${i + 1} = ${\r\n          needScopeIdWrapper ? `${PURE_ANNOTATION} _withScopeId(() => ` : ``\r\n        }`\r\n      )\r\n      genNode(exp, context)\r\n      if (needScopeIdWrapper) {\r\n        push(`)`)\r\n      }\r\n      newline()\r\n    }\r\n  }\r\n\r\n  context.pure = false\r\n}\r\n\r\nfunction genImports(importsOptions: ImportItem[], context: CodegenContext) {\r\n  if (!importsOptions.length) {\r\n    return\r\n  }\r\n  importsOptions.forEach(imports => {\r\n    context.push(`import `)\r\n    genNode(imports.exp, context)\r\n    context.push(` from '${imports.path}'`)\r\n    context.newline()\r\n  })\r\n}\r\n\r\nfunction isText(n: string | CodegenNode) {\r\n  return (\r\n    isString(n) ||\r\n    n.type === NodeTypes.SIMPLE_EXPRESSION ||\r\n    n.type === NodeTypes.TEXT ||\r\n    n.type === NodeTypes.INTERPOLATION ||\r\n    n.type === NodeTypes.COMPOUND_EXPRESSION\r\n  )\r\n}\r\n\r\nfunction genNodeListAsArray(\r\n  nodes: (string | CodegenNode | TemplateChildNode[])[],\r\n  context: CodegenContext\r\n) {\r\n  const multilines =\r\n    nodes.length > 3 ||\r\n    ((!__BROWSER__ || __DEV__) && nodes.some(n => isArray(n) || !isText(n)))\r\n  context.push(`[`)\r\n  multilines && context.indent()\r\n  genNodeList(nodes, context, multilines)\r\n  multilines && context.deindent()\r\n  context.push(`]`)\r\n}\r\n\r\nfunction genNodeList(\r\n  nodes: (string | symbol | CodegenNode | TemplateChildNode[])[],\r\n  context: CodegenContext,\r\n  multilines: boolean = false,\r\n  comma: boolean = true\r\n) {\r\n  const { push, newline } = context\r\n  for (let i = 0; i < nodes.length; i++) {\r\n    const node = nodes[i]\r\n    if (isString(node)) {\r\n      push(node)\r\n    } else if (isArray(node)) {\r\n      genNodeListAsArray(node, context)\r\n    } else {\r\n      genNode(node, context)\r\n    }\r\n    if (i < nodes.length - 1) {\r\n      if (multilines) {\r\n        comma && push(',')\r\n        newline()\r\n      } else {\r\n        comma && push(', ')\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction genNode(node: CodegenNode | symbol | string, context: CodegenContext) {\r\n  if (isString(node)) {\r\n    context.push(node)\r\n    return\r\n  }\r\n  if (isSymbol(node)) {\r\n    context.push(context.helper(node))\r\n    return\r\n  }\r\n  switch (node.type) {\r\n    case NodeTypes.ELEMENT:\r\n    case NodeTypes.IF:\r\n    case NodeTypes.FOR:\r\n      __DEV__ &&\r\n        assert(\r\n          node.codegenNode != null,\r\n          `Codegen node is missing for element/if/for node. ` +\r\n            `Apply appropriate transforms first.`\r\n        )\r\n      genNode(node.codegenNode!, context)\r\n      break\r\n    case NodeTypes.TEXT:\r\n      genText(node, context)\r\n      break\r\n    case NodeTypes.SIMPLE_EXPRESSION:\r\n      genExpression(node, context)\r\n      break\r\n    case NodeTypes.INTERPOLATION:\r\n      genInterpolation(node, context)\r\n      break\r\n    case NodeTypes.TEXT_CALL:\r\n      genNode(node.codegenNode, context)\r\n      break\r\n    case NodeTypes.COMPOUND_EXPRESSION:\r\n      genCompoundExpression(node, context)\r\n      break\r\n    case NodeTypes.COMMENT:\r\n      genComment(node, context)\r\n      break\r\n    case NodeTypes.VNODE_CALL:\r\n      genVNodeCall(node, context)\r\n      break\r\n\r\n    case NodeTypes.JS_CALL_EXPRESSION:\r\n      genCallExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_OBJECT_EXPRESSION:\r\n      genObjectExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_ARRAY_EXPRESSION:\r\n      genArrayExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_FUNCTION_EXPRESSION:\r\n      genFunctionExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_CONDITIONAL_EXPRESSION:\r\n      genConditionalExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_CACHE_EXPRESSION:\r\n      genCacheExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_BLOCK_STATEMENT:\r\n      genNodeList(node.body, context, true, false)\r\n      break\r\n\r\n    // SSR only types\r\n    case NodeTypes.JS_TEMPLATE_LITERAL:\r\n      !__BROWSER__ && genTemplateLiteral(node, context)\r\n      break\r\n    case NodeTypes.JS_IF_STATEMENT:\r\n      !__BROWSER__ && genIfStatement(node, context)\r\n      break\r\n    case NodeTypes.JS_ASSIGNMENT_EXPRESSION:\r\n      !__BROWSER__ && genAssignmentExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_SEQUENCE_EXPRESSION:\r\n      !__BROWSER__ && genSequenceExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_RETURN_STATEMENT:\r\n      !__BROWSER__ && genReturnStatement(node, context)\r\n      break\r\n\r\n    /* istanbul ignore next */\r\n    case NodeTypes.IF_BRANCH:\r\n      // noop\r\n      break\r\n    default:\r\n      if (__DEV__) {\r\n        assert(false, `unhandled codegen node type: ${(node as any).type}`)\r\n        // make sure we exhaust all possible types\r\n        const exhaustiveCheck: never = node\r\n        return exhaustiveCheck\r\n      }\r\n  }\r\n}\r\n\r\nfunction genText(\r\n  node: TextNode | SimpleExpressionNode,\r\n  context: CodegenContext\r\n) {\r\n  context.push(JSON.stringify(node.content), node)\r\n}\r\n\r\nfunction genExpression(node: SimpleExpressionNode, context: CodegenContext) {\r\n  const { content, isStatic } = node\r\n  context.push(isStatic ? JSON.stringify(content) : content, node)\r\n}\r\n\r\nfunction genInterpolation(node: InterpolationNode, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  if (pure) push(PURE_ANNOTATION)\r\n  push(`${helper(TO_DISPLAY_STRING)}(`)\r\n  genNode(node.content, context)\r\n  push(`)`)\r\n}\r\n\r\nfunction genCompoundExpression(\r\n  node: CompoundExpressionNode,\r\n  context: CodegenContext\r\n) {\r\n  for (let i = 0; i < node.children!.length; i++) {\r\n    const child = node.children![i]\r\n    if (isString(child)) {\r\n      context.push(child)\r\n    } else {\r\n      genNode(child, context)\r\n    }\r\n  }\r\n}\r\n\r\nfunction genExpressionAsPropertyKey(\r\n  node: ExpressionNode,\r\n  context: CodegenContext\r\n) {\r\n  const { push } = context\r\n  if (node.type === NodeTypes.COMPOUND_EXPRESSION) {\r\n    push(`[`)\r\n    genCompoundExpression(node, context)\r\n    push(`]`)\r\n  } else if (node.isStatic) {\r\n    // only quote keys if necessary\r\n    const text = isSimpleIdentifier(node.content)\r\n      ? node.content\r\n      : JSON.stringify(node.content)\r\n    push(text, node)\r\n  } else {\r\n    push(`[${node.content}]`, node)\r\n  }\r\n}\r\n\r\nfunction genComment(node: CommentNode, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  if (pure) {\r\n    push(PURE_ANNOTATION)\r\n  }\r\n  push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node)\r\n}\r\n\r\nfunction genVNodeCall(node: VNodeCall, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  const {\r\n    tag,\r\n    props,\r\n    children,\r\n    patchFlag,\r\n    dynamicProps,\r\n    directives,\r\n    isBlock,\r\n    disableTracking,\r\n    isComponent\r\n  } = node\r\n  if (directives) {\r\n    push(helper(WITH_DIRECTIVES) + `(`)\r\n  }\r\n  if (isBlock) {\r\n    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `)\r\n  }\r\n  if (pure) {\r\n    push(PURE_ANNOTATION)\r\n  }\r\n  const callHelper: symbol = isBlock\r\n    ? getVNodeBlockHelper(context.inSSR, isComponent)\r\n    : getVNodeHelper(context.inSSR, isComponent)\r\n  push(helper(callHelper) + `(`, node)\r\n  genNodeList(\r\n    genNullableArgs([tag, props, children, patchFlag, dynamicProps]),\r\n    context\r\n  )\r\n  push(`)`)\r\n  if (isBlock) {\r\n    push(`)`)\r\n  }\r\n  if (directives) {\r\n    push(`, `)\r\n    genNode(directives, context)\r\n    push(`)`)\r\n  }\r\n}\r\n\r\nfunction genNullableArgs(args: any[]): CallExpression['arguments'] {\r\n  let i = args.length\r\n  while (i--) {\r\n    if (args[i] != null) break\r\n  }\r\n  return args.slice(0, i + 1).map(arg => arg || `null`)\r\n}\r\n\r\n// JavaScript\r\nfunction genCallExpression(node: CallExpression, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  const callee = isString(node.callee) ? node.callee : helper(node.callee)\r\n  if (pure) {\r\n    push(PURE_ANNOTATION)\r\n  }\r\n  push(callee + `(`, node)\r\n  genNodeList(node.arguments, context)\r\n  push(`)`)\r\n}\r\n\r\nfunction genObjectExpression(node: ObjectExpression, context: CodegenContext) {\r\n  const { push, indent, deindent, newline } = context\r\n  const { properties } = node\r\n  if (!properties.length) {\r\n    push(`{}`, node)\r\n    return\r\n  }\r\n  const multilines =\r\n    properties.length > 1 ||\r\n    ((!__BROWSER__ || __DEV__) &&\r\n      properties.some(p => p.value.type !== NodeTypes.SIMPLE_EXPRESSION))\r\n  push(multilines ? `{` : `{ `)\r\n  multilines && indent()\r\n  for (let i = 0; i < properties.length; i++) {\r\n    const { key, value } = properties[i]\r\n    // key\r\n    genExpressionAsPropertyKey(key, context)\r\n    push(`: `)\r\n    // value\r\n    genNode(value, context)\r\n    if (i < properties.length - 1) {\r\n      // will only reach this if it's multilines\r\n      push(`,`)\r\n      newline()\r\n    }\r\n  }\r\n  multilines && deindent()\r\n  push(multilines ? `}` : ` }`)\r\n}\r\n\r\nfunction genArrayExpression(node: ArrayExpression, context: CodegenContext) {\r\n  genNodeListAsArray(node.elements as CodegenNode[], context)\r\n}\r\n\r\nfunction genFunctionExpression(\r\n  node: FunctionExpression,\r\n  context: CodegenContext\r\n) {\r\n  const { push, indent, deindent } = context\r\n  const { params, returns, body, newline, isSlot } = node\r\n  if (isSlot) {\r\n    // wrap slot functions with owner context\r\n    push(`_${helperNameMap[WITH_CTX]}(`)\r\n  }\r\n  push(`(`, node)\r\n  if (isArray(params)) {\r\n    genNodeList(params, context)\r\n  } else if (params) {\r\n    genNode(params, context)\r\n  }\r\n  push(`) => `)\r\n  if (newline || body) {\r\n    push(`{`)\r\n    indent()\r\n  }\r\n  if (returns) {\r\n    if (newline) {\r\n      push(`return `)\r\n    }\r\n    if (isArray(returns)) {\r\n      genNodeListAsArray(returns, context)\r\n    } else {\r\n      genNode(returns, context)\r\n    }\r\n  } else if (body) {\r\n    genNode(body, context)\r\n  }\r\n  if (newline || body) {\r\n    deindent()\r\n    push(`}`)\r\n  }\r\n  if (isSlot) {\r\n    if (__COMPAT__ && node.isNonScopedSlot) {\r\n      push(`, undefined, true`)\r\n    }\r\n    push(`)`)\r\n  }\r\n}\r\n\r\nfunction genConditionalExpression(\r\n  node: ConditionalExpression,\r\n  context: CodegenContext\r\n) {\r\n  const { test, consequent, alternate, newline: needNewline } = node\r\n  const { push, indent, deindent, newline } = context\r\n  if (test.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    const needsParens = !isSimpleIdentifier(test.content)\r\n    needsParens && push(`(`)\r\n    genExpression(test, context)\r\n    needsParens && push(`)`)\r\n  } else {\r\n    push(`(`)\r\n    genNode(test, context)\r\n    push(`)`)\r\n  }\r\n  needNewline && indent()\r\n  context.indentLevel++\r\n  needNewline || push(` `)\r\n  push(`? `)\r\n  genNode(consequent, context)\r\n  context.indentLevel--\r\n  needNewline && newline()\r\n  needNewline || push(` `)\r\n  push(`: `)\r\n  const isNested = alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION\r\n  if (!isNested) {\r\n    context.indentLevel++\r\n  }\r\n  genNode(alternate, context)\r\n  if (!isNested) {\r\n    context.indentLevel--\r\n  }\r\n  needNewline && deindent(true /* without newline */)\r\n}\r\n\r\nfunction genCacheExpression(node: CacheExpression, context: CodegenContext) {\r\n  const { push, helper, indent, deindent, newline } = context\r\n  push(`_cache[${node.index}] || (`)\r\n  if (node.isVNode) {\r\n    indent()\r\n    push(`${helper(SET_BLOCK_TRACKING)}(-1),`)\r\n    newline()\r\n  }\r\n  push(`_cache[${node.index}] = `)\r\n  genNode(node.value, context)\r\n  if (node.isVNode) {\r\n    push(`,`)\r\n    newline()\r\n    push(`${helper(SET_BLOCK_TRACKING)}(1),`)\r\n    newline()\r\n    push(`_cache[${node.index}]`)\r\n    deindent()\r\n  }\r\n  push(`)`)\r\n}\r\n\r\nfunction genTemplateLiteral(node: TemplateLiteral, context: CodegenContext) {\r\n  const { push, indent, deindent } = context\r\n  push('`')\r\n  const l = node.elements.length\r\n  const multilines = l > 3\r\n  for (let i = 0; i < l; i++) {\r\n    const e = node.elements[i]\r\n    if (isString(e)) {\r\n      push(e.replace(/(`|\\$|\\\\)/g, '\\\\$1'))\r\n    } else {\r\n      push('${')\r\n      if (multilines) indent()\r\n      genNode(e, context)\r\n      if (multilines) deindent()\r\n      push('}')\r\n    }\r\n  }\r\n  push('`')\r\n}\r\n\r\nfunction genIfStatement(node: IfStatement, context: CodegenContext) {\r\n  const { push, indent, deindent } = context\r\n  const { test, consequent, alternate } = node\r\n  push(`if (`)\r\n  genNode(test, context)\r\n  push(`) {`)\r\n  indent()\r\n  genNode(consequent, context)\r\n  deindent()\r\n  push(`}`)\r\n  if (alternate) {\r\n    push(` else `)\r\n    if (alternate.type === NodeTypes.JS_IF_STATEMENT) {\r\n      genIfStatement(alternate, context)\r\n    } else {\r\n      push(`{`)\r\n      indent()\r\n      genNode(alternate, context)\r\n      deindent()\r\n      push(`}`)\r\n    }\r\n  }\r\n}\r\n\r\nfunction genAssignmentExpression(\r\n  node: AssignmentExpression,\r\n  context: CodegenContext\r\n) {\r\n  genNode(node.left, context)\r\n  context.push(` = `)\r\n  genNode(node.right, context)\r\n}\r\n\r\nfunction genSequenceExpression(\r\n  node: SequenceExpression,\r\n  context: CodegenContext\r\n) {\r\n  context.push(`(`)\r\n  genNodeList(node.expressions, context)\r\n  context.push(`)`)\r\n}\r\n\r\nfunction genReturnStatement(\r\n  { returns }: ReturnStatement,\r\n  context: CodegenContext\r\n) {\r\n  context.push(`return `)\r\n  if (isArray(returns)) {\r\n    genNodeListAsArray(returns, context)\r\n  } else {\r\n    genNode(returns, context)\r\n  }\r\n}\r\n","import {\r\n  createStructuralDirectiveTransform,\r\n  TransformContext,\r\n  traverseNode\r\n} from '../transform'\r\nimport {\r\n  NodeTypes,\r\n  ElementTypes,\r\n  ElementNode,\r\n  DirectiveNode,\r\n  IfBranchNode,\r\n  SimpleExpressionNode,\r\n  createCallExpression,\r\n  createConditionalExpression,\r\n  createSimpleExpression,\r\n  createObjectProperty,\r\n  createObjectExpression,\r\n  IfConditionalExpression,\r\n  BlockCodegenNode,\r\n  IfNode,\r\n  createVNodeCall,\r\n  AttributeNode,\r\n  locStub,\r\n  CacheExpression,\r\n  ConstantTypes,\r\n  MemoExpression\r\n} from '../ast'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport { processExpression } from './transformExpression'\r\nimport { validateBrowserExpression } from '../validateExpression'\r\nimport { FRAGMENT, CREATE_COMMENT } from '../runtimeHelpers'\r\nimport {\r\n  injectProp,\r\n  findDir,\r\n  findProp,\r\n  isBuiltInType,\r\n  makeBlock\r\n} from '../utils'\r\nimport { PatchFlags, PatchFlagNames } from '@vue/shared'\r\nimport { getMemoedVNodeCall } from '..'\r\n\r\nexport const transformIf = createStructuralDirectiveTransform(\r\n  /^(if|else|else-if)$/,\r\n  (node, dir, context) => {\r\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\r\n      // #1587: We need to dynamically increment the key based on the current\r\n      // node's sibling nodes, since chained v-if/else branches are\r\n      // rendered at the same depth\r\n      const siblings = context.parent!.children\r\n      let i = siblings.indexOf(ifNode)\r\n      let key = 0\r\n      while (i-- >= 0) {\r\n        const sibling = siblings[i]\r\n        if (sibling && sibling.type === NodeTypes.IF) {\r\n          key += sibling.branches.length\r\n        }\r\n      }\r\n\r\n      // Exit callback. Complete the codegenNode when all children have been\r\n      // transformed.\r\n      return () => {\r\n        if (isRoot) {\r\n          ifNode.codegenNode = createCodegenNodeForBranch(\r\n            branch,\r\n            key,\r\n            context\r\n          ) as IfConditionalExpression\r\n        } else {\r\n          // attach this branch's codegen node to the v-if root.\r\n          const parentCondition = getParentCondition(ifNode.codegenNode!)\r\n          parentCondition.alternate = createCodegenNodeForBranch(\r\n            branch,\r\n            key + ifNode.branches.length - 1,\r\n            context\r\n          )\r\n        }\r\n      }\r\n    })\r\n  }\r\n)\r\n\r\n// target-agnostic transform used for both Client and SSR\r\nexport function processIf(\r\n  node: ElementNode,\r\n  dir: DirectiveNode,\r\n  context: TransformContext,\r\n  processCodegen?: (\r\n    node: IfNode,\r\n    branch: IfBranchNode,\r\n    isRoot: boolean\r\n  ) => (() => void) | undefined\r\n) {\r\n  if (\r\n    dir.name !== 'else' &&\r\n    (!dir.exp || !(dir.exp as SimpleExpressionNode).content.trim())\r\n  ) {\r\n    const loc = dir.exp ? dir.exp.loc : node.loc\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_IF_NO_EXPRESSION, dir.loc)\r\n    )\r\n    dir.exp = createSimpleExpression(`true`, false, loc)\r\n  }\r\n\r\n  if (!__BROWSER__ && context.prefixIdentifiers && dir.exp) {\r\n    // dir.exp can only be simple expression because vIf transform is applied\r\n    // before expression transform.\r\n    dir.exp = processExpression(dir.exp as SimpleExpressionNode, context)\r\n  }\r\n\r\n  if (__DEV__ && __BROWSER__ && dir.exp) {\r\n    validateBrowserExpression(dir.exp as SimpleExpressionNode, context)\r\n  }\r\n\r\n  if (dir.name === 'if') {\r\n    const branch = createIfBranch(node, dir)\r\n    const ifNode: IfNode = {\r\n      type: NodeTypes.IF,\r\n      loc: node.loc,\r\n      branches: [branch]\r\n    }\r\n    context.replaceNode(ifNode)\r\n    if (processCodegen) {\r\n      return processCodegen(ifNode, branch, true)\r\n    }\r\n  } else {\r\n    // locate the adjacent v-if\r\n    const siblings = context.parent!.children\r\n    const comments = []\r\n    let i = siblings.indexOf(node)\r\n    while (i-- >= -1) {\r\n      const sibling = siblings[i]\r\n      if (__DEV__ && sibling && sibling.type === NodeTypes.COMMENT) {\r\n        context.removeNode(sibling)\r\n        comments.unshift(sibling)\r\n        continue\r\n      }\r\n\r\n      if (\r\n        sibling &&\r\n        sibling.type === NodeTypes.TEXT &&\r\n        !sibling.content.trim().length\r\n      ) {\r\n        context.removeNode(sibling)\r\n        continue\r\n      }\r\n\r\n      if (sibling && sibling.type === NodeTypes.IF) {\r\n        // Check if v-else was followed by v-else-if\r\n        if (\r\n          dir.name === 'else-if' &&\r\n          sibling.branches[sibling.branches.length - 1].condition === undefined\r\n        ) {\r\n          context.onError(\r\n            createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, node.loc)\r\n          )\r\n        }\r\n\r\n        // move the node to the if node's branches\r\n        context.removeNode()\r\n        const branch = createIfBranch(node, dir)\r\n        if (\r\n          __DEV__ &&\r\n          comments.length &&\r\n          // #3619 ignore comments if the v-if is direct child of <transition>\r\n          !(\r\n            context.parent &&\r\n            context.parent.type === NodeTypes.ELEMENT &&\r\n            isBuiltInType(context.parent.tag, 'transition')\r\n          )\r\n        ) {\r\n          branch.children = [...comments, ...branch.children]\r\n        }\r\n\r\n        // check if user is forcing same key on different branches\r\n        if (__DEV__ || !__BROWSER__) {\r\n          const key = branch.userKey\r\n          if (key) {\r\n            sibling.branches.forEach(({ userKey }) => {\r\n              if (isSameKey(userKey, key)) {\r\n                context.onError(\r\n                  createCompilerError(\r\n                    ErrorCodes.X_V_IF_SAME_KEY,\r\n                    branch.userKey!.loc\r\n                  )\r\n                )\r\n              }\r\n            })\r\n          }\r\n        }\r\n\r\n        sibling.branches.push(branch)\r\n        const onExit = processCodegen && processCodegen(sibling, branch, false)\r\n        // since the branch was removed, it will not be traversed.\r\n        // make sure to traverse here.\r\n        traverseNode(branch, context)\r\n        // call on exit\r\n        if (onExit) onExit()\r\n        // make sure to reset currentNode after traversal to indicate this\r\n        // node has been removed.\r\n        context.currentNode = null\r\n      } else {\r\n        context.onError(\r\n          createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, node.loc)\r\n        )\r\n      }\r\n      break\r\n    }\r\n  }\r\n}\r\n\r\nfunction createIfBranch(node: ElementNode, dir: DirectiveNode): IfBranchNode {\r\n  const isTemplateIf = node.tagType === ElementTypes.TEMPLATE\r\n  return {\r\n    type: NodeTypes.IF_BRANCH,\r\n    loc: node.loc,\r\n    condition: dir.name === 'else' ? undefined : dir.exp,\r\n    children: isTemplateIf && !findDir(node, 'for') ? node.children : [node],\r\n    userKey: findProp(node, `key`),\r\n    isTemplateIf\r\n  }\r\n}\r\n\r\nfunction createCodegenNodeForBranch(\r\n  branch: IfBranchNode,\r\n  keyIndex: number,\r\n  context: TransformContext\r\n): IfConditionalExpression | BlockCodegenNode | MemoExpression {\r\n  if (branch.condition) {\r\n    return createConditionalExpression(\r\n      branch.condition,\r\n      createChildrenCodegenNode(branch, keyIndex, context),\r\n      // make sure to pass in asBlock: true so that the comment node call\r\n      // closes the current block.\r\n      createCallExpression(context.helper(CREATE_COMMENT), [\r\n        __DEV__ ? '\"v-if\"' : '\"\"',\r\n        'true'\r\n      ])\r\n    ) as IfConditionalExpression\r\n  } else {\r\n    return createChildrenCodegenNode(branch, keyIndex, context)\r\n  }\r\n}\r\n\r\nfunction createChildrenCodegenNode(\r\n  branch: IfBranchNode,\r\n  keyIndex: number,\r\n  context: TransformContext\r\n): BlockCodegenNode | MemoExpression {\r\n  const { helper } = context\r\n  const keyProperty = createObjectProperty(\r\n    `key`,\r\n    createSimpleExpression(\r\n      `${keyIndex}`,\r\n      false,\r\n      locStub,\r\n      ConstantTypes.CAN_HOIST\r\n    )\r\n  )\r\n  const { children } = branch\r\n  const firstChild = children[0]\r\n  const needFragmentWrapper =\r\n    children.length !== 1 || firstChild.type !== NodeTypes.ELEMENT\r\n  if (needFragmentWrapper) {\r\n    if (children.length === 1 && firstChild.type === NodeTypes.FOR) {\r\n      // optimize away nested fragments when child is a ForNode\r\n      const vnodeCall = firstChild.codegenNode!\r\n      injectProp(vnodeCall, keyProperty, context)\r\n      return vnodeCall\r\n    } else {\r\n      let patchFlag = PatchFlags.STABLE_FRAGMENT\r\n      let patchFlagText = PatchFlagNames[PatchFlags.STABLE_FRAGMENT]\r\n      // check if the fragment actually contains a single valid child with\r\n      // the rest being comments\r\n      if (\r\n        __DEV__ &&\r\n        !branch.isTemplateIf &&\r\n        children.filter(c => c.type !== NodeTypes.COMMENT).length === 1\r\n      ) {\r\n        patchFlag |= PatchFlags.DEV_ROOT_FRAGMENT\r\n        patchFlagText += `, ${PatchFlagNames[PatchFlags.DEV_ROOT_FRAGMENT]}`\r\n      }\r\n\r\n      return createVNodeCall(\r\n        context,\r\n        helper(FRAGMENT),\r\n        createObjectExpression([keyProperty]),\r\n        children,\r\n        patchFlag + (__DEV__ ? ` /* ${patchFlagText} */` : ``),\r\n        undefined,\r\n        undefined,\r\n        true,\r\n        false,\r\n        false /* isComponent */,\r\n        branch.loc\r\n      )\r\n    }\r\n  } else {\r\n    const ret = (firstChild as ElementNode).codegenNode as\r\n      | BlockCodegenNode\r\n      | MemoExpression\r\n    const vnodeCall = getMemoedVNodeCall(ret)\r\n    // Change createVNode to createBlock.\r\n    if (vnodeCall.type === NodeTypes.VNODE_CALL) {\r\n      makeBlock(vnodeCall, context)\r\n    }\r\n    // inject branch key\r\n    injectProp(vnodeCall, keyProperty, context)\r\n    return ret\r\n  }\r\n}\r\n\r\nfunction isSameKey(\r\n  a: AttributeNode | DirectiveNode | undefined,\r\n  b: AttributeNode | DirectiveNode\r\n): boolean {\r\n  if (!a || a.type !== b.type) {\r\n    return false\r\n  }\r\n  if (a.type === NodeTypes.ATTRIBUTE) {\r\n    if (a.value!.content !== (b as AttributeNode).value!.content) {\r\n      return false\r\n    }\r\n  } else {\r\n    // directive\r\n    const exp = a.exp!\r\n    const branchExp = (b as DirectiveNode).exp!\r\n    if (exp.type !== branchExp.type) {\r\n      return false\r\n    }\r\n    if (\r\n      exp.type !== NodeTypes.SIMPLE_EXPRESSION ||\r\n      exp.isStatic !== (branchExp as SimpleExpressionNode).isStatic ||\r\n      exp.content !== (branchExp as SimpleExpressionNode).content\r\n    ) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction getParentCondition(\r\n  node: IfConditionalExpression | CacheExpression\r\n): IfConditionalExpression {\r\n  while (true) {\r\n    if (node.type === NodeTypes.JS_CONDITIONAL_EXPRESSION) {\r\n      if (node.alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION) {\r\n        node = node.alternate\r\n      } else {\r\n        return node\r\n      }\r\n    } else if (node.type === NodeTypes.JS_CACHE_EXPRESSION) {\r\n      node = node.value as IfConditionalExpression\r\n    }\r\n  }\r\n}\r\n","import {\r\n  createStructuralDirectiveTransform,\r\n  TransformContext\r\n} from '../transform'\r\nimport {\r\n  NodeTypes,\r\n  ExpressionNode,\r\n  createSimpleExpression,\r\n  SourceLocation,\r\n  SimpleExpressionNode,\r\n  createCallExpression,\r\n  createFunctionExpression,\r\n  createObjectExpression,\r\n  createObjectProperty,\r\n  ForCodegenNode,\r\n  RenderSlotCall,\r\n  SlotOutletNode,\r\n  ElementNode,\r\n  DirectiveNode,\r\n  ForNode,\r\n  PlainElementNode,\r\n  createVNodeCall,\r\n  VNodeCall,\r\n  ForRenderListExpression,\r\n  BlockCodegenNode,\r\n  ForIteratorExpression,\r\n  ConstantTypes,\r\n  createBlockStatement,\r\n  createCompoundExpression\r\n} from '../ast'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport {\r\n  getInnerRange,\r\n  findProp,\r\n  isTemplateNode,\r\n  isSlotOutlet,\r\n  injectProp,\r\n  getVNodeBlockHelper,\r\n  getVNodeHelper,\r\n  findDir\r\n} from '../utils'\r\nimport {\r\n  RENDER_LIST,\r\n  OPEN_BLOCK,\r\n  FRAGMENT,\r\n  IS_MEMO_SAME\r\n} from '../runtimeHelpers'\r\nimport { processExpression } from './transformExpression'\r\nimport { validateBrowserExpression } from '../validateExpression'\r\nimport { PatchFlags, PatchFlagNames } from '@vue/shared'\r\n\r\nexport const transformFor = createStructuralDirectiveTransform(\r\n  'for',\r\n  (node, dir, context) => {\r\n    const { helper, removeHelper } = context\r\n    return processFor(node, dir, context, forNode => {\r\n      // create the loop render function expression now, and add the\r\n      // iterator on exit after all children have been traversed\r\n      const renderExp = createCallExpression(helper(RENDER_LIST), [\r\n        forNode.source\r\n      ]) as ForRenderListExpression\r\n      const isTemplate = isTemplateNode(node)\r\n      const memo = findDir(node, 'memo')\r\n      const keyProp = findProp(node, `key`)\r\n      const keyExp =\r\n        keyProp &&\r\n        (keyProp.type === NodeTypes.ATTRIBUTE\r\n          ? createSimpleExpression(keyProp.value!.content, true)\r\n          : keyProp.exp!)\r\n      const keyProperty = keyProp ? createObjectProperty(`key`, keyExp!) : null\r\n\r\n      if (!__BROWSER__ && isTemplate) {\r\n        // #2085 / #5288 process :key and v-memo expressions need to be\r\n        // processed on `<template v-for>`. In this case the node is discarded\r\n        // and never traversed so its binding expressions won't be processed\r\n        // by the normal transforms.\r\n        if (memo) {\r\n          memo.exp = processExpression(\r\n            memo.exp! as SimpleExpressionNode,\r\n            context\r\n          )\r\n        }\r\n        if (keyProperty && keyProp!.type !== NodeTypes.ATTRIBUTE) {\r\n          keyProperty.value = processExpression(\r\n            keyProperty.value as SimpleExpressionNode,\r\n            context\r\n          )\r\n        }\r\n      }\r\n\r\n      const isStableFragment =\r\n        forNode.source.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n        forNode.source.constType > ConstantTypes.NOT_CONSTANT\r\n      const fragmentFlag = isStableFragment\r\n        ? PatchFlags.STABLE_FRAGMENT\r\n        : keyProp\r\n        ? PatchFlags.KEYED_FRAGMENT\r\n        : PatchFlags.UNKEYED_FRAGMENT\r\n\r\n      forNode.codegenNode = createVNodeCall(\r\n        context,\r\n        helper(FRAGMENT),\r\n        undefined,\r\n        renderExp,\r\n        fragmentFlag +\r\n          (__DEV__ ? ` /* ${PatchFlagNames[fragmentFlag]} */` : ``),\r\n        undefined,\r\n        undefined,\r\n        true /* isBlock */,\r\n        !isStableFragment /* disableTracking */,\r\n        false /* isComponent */,\r\n        node.loc\r\n      ) as ForCodegenNode\r\n\r\n      return () => {\r\n        // finish the codegen now that all children have been traversed\r\n        let childBlock: BlockCodegenNode\r\n        const { children } = forNode\r\n\r\n        // check <template v-for> key placement\r\n        if ((__DEV__ || !__BROWSER__) && isTemplate) {\r\n          node.children.some(c => {\r\n            if (c.type === NodeTypes.ELEMENT) {\r\n              const key = findProp(c, 'key')\r\n              if (key) {\r\n                context.onError(\r\n                  createCompilerError(\r\n                    ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT,\r\n                    key.loc\r\n                  )\r\n                )\r\n                return true\r\n              }\r\n            }\r\n          })\r\n        }\r\n\r\n        const needFragmentWrapper =\r\n          children.length !== 1 || children[0].type !== NodeTypes.ELEMENT\r\n        const slotOutlet = isSlotOutlet(node)\r\n          ? node\r\n          : isTemplate &&\r\n            node.children.length === 1 &&\r\n            isSlotOutlet(node.children[0])\r\n          ? (node.children[0] as SlotOutletNode) // api-extractor somehow fails to infer this\r\n          : null\r\n\r\n        if (slotOutlet) {\r\n          // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\r\n          childBlock = slotOutlet.codegenNode as RenderSlotCall\r\n          if (isTemplate && keyProperty) {\r\n            // <template v-for=\"...\" :key=\"...\"><slot/></template>\r\n            // we need to inject the key to the renderSlot() call.\r\n            // the props for renderSlot is passed as the 3rd argument.\r\n            injectProp(childBlock, keyProperty, context)\r\n          }\r\n        } else if (needFragmentWrapper) {\r\n          // <template v-for=\"...\"> with text or multi-elements\r\n          // should generate a fragment block for each loop\r\n          childBlock = createVNodeCall(\r\n            context,\r\n            helper(FRAGMENT),\r\n            keyProperty ? createObjectExpression([keyProperty]) : undefined,\r\n            node.children,\r\n            PatchFlags.STABLE_FRAGMENT +\r\n              (__DEV__\r\n                ? ` /* ${PatchFlagNames[PatchFlags.STABLE_FRAGMENT]} */`\r\n                : ``),\r\n            undefined,\r\n            undefined,\r\n            true,\r\n            undefined,\r\n            false /* isComponent */\r\n          )\r\n        } else {\r\n          // Normal element v-for. Directly use the child's codegenNode\r\n          // but mark it as a block.\r\n          childBlock = (children[0] as PlainElementNode)\r\n            .codegenNode as VNodeCall\r\n          if (isTemplate && keyProperty) {\r\n            injectProp(childBlock, keyProperty, context)\r\n          }\r\n          if (childBlock.isBlock !== !isStableFragment) {\r\n            if (childBlock.isBlock) {\r\n              // switch from block to vnode\r\n              removeHelper(OPEN_BLOCK)\r\n              removeHelper(\r\n                getVNodeBlockHelper(context.inSSR, childBlock.isComponent)\r\n              )\r\n            } else {\r\n              // switch from vnode to block\r\n              removeHelper(\r\n                getVNodeHelper(context.inSSR, childBlock.isComponent)\r\n              )\r\n            }\r\n          }\r\n          childBlock.isBlock = !isStableFragment\r\n          if (childBlock.isBlock) {\r\n            helper(OPEN_BLOCK)\r\n            helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent))\r\n          } else {\r\n            helper(getVNodeHelper(context.inSSR, childBlock.isComponent))\r\n          }\r\n        }\r\n\r\n        if (memo) {\r\n          const loop = createFunctionExpression(\r\n            createForLoopParams(forNode.parseResult, [\r\n              createSimpleExpression(`_cached`)\r\n            ])\r\n          )\r\n          loop.body = createBlockStatement([\r\n            createCompoundExpression([`const _memo = (`, memo.exp!, `)`]),\r\n            createCompoundExpression([\r\n              `if (_cached`,\r\n              ...(keyExp ? [` && _cached.key === `, keyExp] : []),\r\n              ` && ${context.helperString(\r\n                IS_MEMO_SAME\r\n              )}(_cached, _memo)) return _cached`\r\n            ]),\r\n            createCompoundExpression([`const _item = `, childBlock as any]),\r\n            createSimpleExpression(`_item.memo = _memo`),\r\n            createSimpleExpression(`return _item`)\r\n          ])\r\n          renderExp.arguments.push(\r\n            loop as ForIteratorExpression,\r\n            createSimpleExpression(`_cache`),\r\n            createSimpleExpression(String(context.cached++))\r\n          )\r\n        } else {\r\n          renderExp.arguments.push(\r\n            createFunctionExpression(\r\n              createForLoopParams(forNode.parseResult),\r\n              childBlock,\r\n              true /* force newline */\r\n            ) as ForIteratorExpression\r\n          )\r\n        }\r\n      }\r\n    })\r\n  }\r\n)\r\n\r\n// target-agnostic transform used for both Client and SSR\r\nexport function processFor(\r\n  node: ElementNode,\r\n  dir: DirectiveNode,\r\n  context: TransformContext,\r\n  processCodegen?: (forNode: ForNode) => (() => void) | undefined\r\n) {\r\n  if (!dir.exp) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_FOR_NO_EXPRESSION, dir.loc)\r\n    )\r\n    return\r\n  }\r\n\r\n  const parseResult = parseForExpression(\r\n    // can only be simple expression because vFor transform is applied\r\n    // before expression transform.\r\n    dir.exp as SimpleExpressionNode,\r\n    context\r\n  )\r\n\r\n  if (!parseResult) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION, dir.loc)\r\n    )\r\n    return\r\n  }\r\n\r\n  const { addIdentifiers, removeIdentifiers, scopes } = context\r\n  const { source, value, key, index } = parseResult\r\n\r\n  const forNode: ForNode = {\r\n    type: NodeTypes.FOR,\r\n    loc: dir.loc,\r\n    source,\r\n    valueAlias: value,\r\n    keyAlias: key,\r\n    objectIndexAlias: index,\r\n    parseResult,\r\n    children: isTemplateNode(node) ? node.children : [node]\r\n  }\r\n\r\n  context.replaceNode(forNode)\r\n\r\n  // bookkeeping\r\n  scopes.vFor++\r\n  if (!__BROWSER__ && context.prefixIdentifiers) {\r\n    // scope management\r\n    // inject identifiers to context\r\n    value && addIdentifiers(value)\r\n    key && addIdentifiers(key)\r\n    index && addIdentifiers(index)\r\n  }\r\n\r\n  const onExit = processCodegen && processCodegen(forNode)\r\n\r\n  return () => {\r\n    scopes.vFor--\r\n    if (!__BROWSER__ && context.prefixIdentifiers) {\r\n      value && removeIdentifiers(value)\r\n      key && removeIdentifiers(key)\r\n      index && removeIdentifiers(index)\r\n    }\r\n    if (onExit) onExit()\r\n  }\r\n}\r\n\r\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/\r\n// This regex doesn't cover the case if key or index aliases have destructuring,\r\n// but those do not make sense in the first place, so this works in practice.\r\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/\r\nconst stripParensRE = /^\\(|\\)$/g\r\n\r\nexport interface ForParseResult {\r\n  source: ExpressionNode\r\n  value: ExpressionNode | undefined\r\n  key: ExpressionNode | undefined\r\n  index: ExpressionNode | undefined\r\n}\r\n\r\nexport function parseForExpression(\r\n  input: SimpleExpressionNode,\r\n  context: TransformContext\r\n): ForParseResult | undefined {\r\n  const loc = input.loc\r\n  const exp = input.content\r\n  const inMatch = exp.match(forAliasRE)\r\n  if (!inMatch) return\r\n\r\n  const [, LHS, RHS] = inMatch\r\n\r\n  const result: ForParseResult = {\r\n    source: createAliasExpression(\r\n      loc,\r\n      RHS.trim(),\r\n      exp.indexOf(RHS, LHS.length)\r\n    ),\r\n    value: undefined,\r\n    key: undefined,\r\n    index: undefined\r\n  }\r\n  if (!__BROWSER__ && context.prefixIdentifiers) {\r\n    result.source = processExpression(\r\n      result.source as SimpleExpressionNode,\r\n      context\r\n    )\r\n  }\r\n  if (__DEV__ && __BROWSER__) {\r\n    validateBrowserExpression(result.source as SimpleExpressionNode, context)\r\n  }\r\n\r\n  let valueContent = LHS.trim().replace(stripParensRE, '').trim()\r\n  const trimmedOffset = LHS.indexOf(valueContent)\r\n\r\n  const iteratorMatch = valueContent.match(forIteratorRE)\r\n  if (iteratorMatch) {\r\n    valueContent = valueContent.replace(forIteratorRE, '').trim()\r\n\r\n    const keyContent = iteratorMatch[1].trim()\r\n    let keyOffset: number | undefined\r\n    if (keyContent) {\r\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length)\r\n      result.key = createAliasExpression(loc, keyContent, keyOffset)\r\n      if (!__BROWSER__ && context.prefixIdentifiers) {\r\n        result.key = processExpression(result.key, context, true)\r\n      }\r\n      if (__DEV__ && __BROWSER__) {\r\n        validateBrowserExpression(\r\n          result.key as SimpleExpressionNode,\r\n          context,\r\n          true\r\n        )\r\n      }\r\n    }\r\n\r\n    if (iteratorMatch[2]) {\r\n      const indexContent = iteratorMatch[2].trim()\r\n\r\n      if (indexContent) {\r\n        result.index = createAliasExpression(\r\n          loc,\r\n          indexContent,\r\n          exp.indexOf(\r\n            indexContent,\r\n            result.key\r\n              ? keyOffset! + keyContent.length\r\n              : trimmedOffset + valueContent.length\r\n          )\r\n        )\r\n        if (!__BROWSER__ && context.prefixIdentifiers) {\r\n          result.index = processExpression(result.index, context, true)\r\n        }\r\n        if (__DEV__ && __BROWSER__) {\r\n          validateBrowserExpression(\r\n            result.index as SimpleExpressionNode,\r\n            context,\r\n            true\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (valueContent) {\r\n    result.value = createAliasExpression(loc, valueContent, trimmedOffset)\r\n    if (!__BROWSER__ && context.prefixIdentifiers) {\r\n      result.value = processExpression(result.value, context, true)\r\n    }\r\n    if (__DEV__ && __BROWSER__) {\r\n      validateBrowserExpression(\r\n        result.value as SimpleExpressionNode,\r\n        context,\r\n        true\r\n      )\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nfunction createAliasExpression(\r\n  range: SourceLocation,\r\n  content: string,\r\n  offset: number\r\n): SimpleExpressionNode {\r\n  return createSimpleExpression(\r\n    content,\r\n    false,\r\n    getInnerRange(range, offset, content.length)\r\n  )\r\n}\r\n\r\nexport function createForLoopParams(\r\n  { value, key, index }: ForParseResult,\r\n  memoArgs: ExpressionNode[] = []\r\n): ExpressionNode[] {\r\n  return createParamsList([value, key, index, ...memoArgs])\r\n}\r\n\r\nfunction createParamsList(\r\n  args: (ExpressionNode | undefined)[]\r\n): ExpressionNode[] {\r\n  let i = args.length\r\n  while (i--) {\r\n    if (args[i]) break\r\n  }\r\n  return args\r\n    .slice(0, i + 1)\r\n    .map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false))\r\n}\r\n","import {\r\n  ElementNode,\r\n  ObjectExpression,\r\n  createObjectExpression,\r\n  NodeTypes,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  createFunctionExpression,\r\n  DirectiveNode,\r\n  ElementTypes,\r\n  ExpressionNode,\r\n  Property,\r\n  TemplateChildNode,\r\n  SourceLocation,\r\n  createConditionalExpression,\r\n  ConditionalExpression,\r\n  SimpleExpressionNode,\r\n  FunctionExpression,\r\n  CallExpression,\r\n  createCallExpression,\r\n  createArrayExpression,\r\n  SlotsExpression\r\n} from '../ast'\r\nimport { TransformContext, NodeTransform } from '../transform'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport {\r\n  findDir,\r\n  isTemplateNode,\r\n  assert,\r\n  isVSlot,\r\n  hasScopeRef,\r\n  isStaticExp\r\n} from '../utils'\r\nimport { CREATE_SLOTS, RENDER_LIST, WITH_CTX } from '../runtimeHelpers'\r\nimport { parseForExpression, createForLoopParams } from './vFor'\r\nimport { SlotFlags, slotFlagsText } from '@vue/shared'\r\n\r\nconst defaultFallback = createSimpleExpression(`undefined`, false)\r\n\r\n// A NodeTransform that:\r\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\r\n//    by transformExpression. This is only applied in non-browser builds with\r\n//    { prefixIdentifiers: true }.\r\n// 2. Track v-slot depths so that we know a slot is inside another slot.\r\n//    Note the exit callback is executed before buildSlots() on the same node,\r\n//    so only nested slots see positive numbers.\r\nexport const trackSlotScopes: NodeTransform = (node, context) => {\r\n  if (\r\n    node.type === NodeTypes.ELEMENT &&\r\n    (node.tagType === ElementTypes.COMPONENT ||\r\n      node.tagType === ElementTypes.TEMPLATE)\r\n  ) {\r\n    // We are only checking non-empty v-slot here\r\n    // since we only care about slots that introduce scope variables.\r\n    const vSlot = findDir(node, 'slot')\r\n    if (vSlot) {\r\n      const slotProps = vSlot.exp\r\n      if (!__BROWSER__ && context.prefixIdentifiers) {\r\n        slotProps && context.addIdentifiers(slotProps)\r\n      }\r\n      context.scopes.vSlot++\r\n      return () => {\r\n        if (!__BROWSER__ && context.prefixIdentifiers) {\r\n          slotProps && context.removeIdentifiers(slotProps)\r\n        }\r\n        context.scopes.vSlot--\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\r\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\r\nexport const trackVForSlotScopes: NodeTransform = (node, context) => {\r\n  let vFor\r\n  if (\r\n    isTemplateNode(node) &&\r\n    node.props.some(isVSlot) &&\r\n    (vFor = findDir(node, 'for'))\r\n  ) {\r\n    const result = (vFor.parseResult = parseForExpression(\r\n      vFor.exp as SimpleExpressionNode,\r\n      context\r\n    ))\r\n    if (result) {\r\n      const { value, key, index } = result\r\n      const { addIdentifiers, removeIdentifiers } = context\r\n      value && addIdentifiers(value)\r\n      key && addIdentifiers(key)\r\n      index && addIdentifiers(index)\r\n\r\n      return () => {\r\n        value && removeIdentifiers(value)\r\n        key && removeIdentifiers(key)\r\n        index && removeIdentifiers(index)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport type SlotFnBuilder = (\r\n  slotProps: ExpressionNode | undefined,\r\n  slotChildren: TemplateChildNode[],\r\n  loc: SourceLocation\r\n) => FunctionExpression\r\n\r\nconst buildClientSlotFn: SlotFnBuilder = (props, children, loc) =>\r\n  createFunctionExpression(\r\n    props,\r\n    children,\r\n    false /* newline */,\r\n    true /* isSlot */,\r\n    children.length ? children[0].loc : loc\r\n  )\r\n\r\n// Instead of being a DirectiveTransform, v-slot processing is called during\r\n// transformElement to build the slots object for a component.\r\nexport function buildSlots(\r\n  node: ElementNode,\r\n  context: TransformContext,\r\n  buildSlotFn: SlotFnBuilder = buildClientSlotFn\r\n): {\r\n  slots: SlotsExpression\r\n  hasDynamicSlots: boolean\r\n} {\r\n  context.helper(WITH_CTX)\r\n\r\n  const { children, loc } = node\r\n  const slotsProperties: Property[] = []\r\n  const dynamicSlots: (ConditionalExpression | CallExpression)[] = []\r\n\r\n  // If the slot is inside a v-for or another v-slot, force it to be dynamic\r\n  // since it likely uses a scope variable.\r\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0\r\n  // with `prefixIdentifiers: true`, this can be further optimized to make\r\n  // it dynamic only when the slot actually uses the scope variables.\r\n  if (!__BROWSER__ && !context.ssr && context.prefixIdentifiers) {\r\n    hasDynamicSlots = hasScopeRef(node, context.identifiers)\r\n  }\r\n\r\n  // 1. Check for slot with slotProps on component itself.\r\n  //    <Comp v-slot=\"{ prop }\"/>\r\n  const onComponentSlot = findDir(node, 'slot', true)\r\n  if (onComponentSlot) {\r\n    const { arg, exp } = onComponentSlot\r\n    if (arg && !isStaticExp(arg)) {\r\n      hasDynamicSlots = true\r\n    }\r\n    slotsProperties.push(\r\n      createObjectProperty(\r\n        arg || createSimpleExpression('default', true),\r\n        buildSlotFn(exp, children, loc)\r\n      )\r\n    )\r\n  }\r\n\r\n  // 2. Iterate through children and check for template slots\r\n  //    <template v-slot:foo=\"{ prop }\">\r\n  let hasTemplateSlots = false\r\n  let hasNamedDefaultSlot = false\r\n  const implicitDefaultChildren: TemplateChildNode[] = []\r\n  const seenSlotNames = new Set<string>()\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const slotElement = children[i]\r\n    let slotDir\r\n\r\n    if (\r\n      !isTemplateNode(slotElement) ||\r\n      !(slotDir = findDir(slotElement, 'slot', true))\r\n    ) {\r\n      // not a <template v-slot>, skip.\r\n      if (slotElement.type !== NodeTypes.COMMENT) {\r\n        implicitDefaultChildren.push(slotElement)\r\n      }\r\n      continue\r\n    }\r\n\r\n    if (onComponentSlot) {\r\n      // already has on-component slot - this is incorrect usage.\r\n      context.onError(\r\n        createCompilerError(ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE, slotDir.loc)\r\n      )\r\n      break\r\n    }\r\n\r\n    hasTemplateSlots = true\r\n    const { children: slotChildren, loc: slotLoc } = slotElement\r\n    const {\r\n      arg: slotName = createSimpleExpression(`default`, true),\r\n      exp: slotProps,\r\n      loc: dirLoc\r\n    } = slotDir\r\n\r\n    // check if name is dynamic.\r\n    let staticSlotName: string | undefined\r\n    if (isStaticExp(slotName)) {\r\n      staticSlotName = slotName ? slotName.content : `default`\r\n    } else {\r\n      hasDynamicSlots = true\r\n    }\r\n\r\n    const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc)\r\n    // check if this slot is conditional (v-if/v-for)\r\n    let vIf: DirectiveNode | undefined\r\n    let vElse: DirectiveNode | undefined\r\n    let vFor: DirectiveNode | undefined\r\n    if ((vIf = findDir(slotElement, 'if'))) {\r\n      hasDynamicSlots = true\r\n      dynamicSlots.push(\r\n        createConditionalExpression(\r\n          vIf.exp!,\r\n          buildDynamicSlot(slotName, slotFunction),\r\n          defaultFallback\r\n        )\r\n      )\r\n    } else if (\r\n      (vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))\r\n    ) {\r\n      // find adjacent v-if\r\n      let j = i\r\n      let prev\r\n      while (j--) {\r\n        prev = children[j]\r\n        if (prev.type !== NodeTypes.COMMENT) {\r\n          break\r\n        }\r\n      }\r\n      if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\r\n        // remove node\r\n        children.splice(i, 1)\r\n        i--\r\n        __TEST__ && assert(dynamicSlots.length > 0)\r\n        // attach this slot to previous conditional\r\n        let conditional = dynamicSlots[\r\n          dynamicSlots.length - 1\r\n        ] as ConditionalExpression\r\n        while (\r\n          conditional.alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION\r\n        ) {\r\n          conditional = conditional.alternate\r\n        }\r\n        conditional.alternate = vElse.exp\r\n          ? createConditionalExpression(\r\n              vElse.exp,\r\n              buildDynamicSlot(slotName, slotFunction),\r\n              defaultFallback\r\n            )\r\n          : buildDynamicSlot(slotName, slotFunction)\r\n      } else {\r\n        context.onError(\r\n          createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, vElse.loc)\r\n        )\r\n      }\r\n    } else if ((vFor = findDir(slotElement, 'for'))) {\r\n      hasDynamicSlots = true\r\n      const parseResult =\r\n        vFor.parseResult ||\r\n        parseForExpression(vFor.exp as SimpleExpressionNode, context)\r\n      if (parseResult) {\r\n        // Render the dynamic slots as an array and add it to the createSlot()\r\n        // args. The runtime knows how to handle it appropriately.\r\n        dynamicSlots.push(\r\n          createCallExpression(context.helper(RENDER_LIST), [\r\n            parseResult.source,\r\n            createFunctionExpression(\r\n              createForLoopParams(parseResult),\r\n              buildDynamicSlot(slotName, slotFunction),\r\n              true /* force newline */\r\n            )\r\n          ])\r\n        )\r\n      } else {\r\n        context.onError(\r\n          createCompilerError(ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION, vFor.loc)\r\n        )\r\n      }\r\n    } else {\r\n      // check duplicate static names\r\n      if (staticSlotName) {\r\n        if (seenSlotNames.has(staticSlotName)) {\r\n          context.onError(\r\n            createCompilerError(\r\n              ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES,\r\n              dirLoc\r\n            )\r\n          )\r\n          continue\r\n        }\r\n        seenSlotNames.add(staticSlotName)\r\n        if (staticSlotName === 'default') {\r\n          hasNamedDefaultSlot = true\r\n        }\r\n      }\r\n      slotsProperties.push(createObjectProperty(slotName, slotFunction))\r\n    }\r\n  }\r\n\r\n  if (!onComponentSlot) {\r\n    const buildDefaultSlotProperty = (\r\n      props: ExpressionNode | undefined,\r\n      children: TemplateChildNode[]\r\n    ) => {\r\n      const fn = buildSlotFn(props, children, loc)\r\n      if (__COMPAT__ && context.compatConfig) {\r\n        fn.isNonScopedSlot = true\r\n      }\r\n      return createObjectProperty(`default`, fn)\r\n    }\r\n\r\n    if (!hasTemplateSlots) {\r\n      // implicit default slot (on component)\r\n      slotsProperties.push(buildDefaultSlotProperty(undefined, children))\r\n    } else if (\r\n      implicitDefaultChildren.length &&\r\n      // #3766\r\n      // with whitespace: 'preserve', whitespaces between slots will end up in\r\n      // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\r\n      implicitDefaultChildren.some(node => isNonWhitespaceContent(node))\r\n    ) {\r\n      // implicit default slot (mixed with named slots)\r\n      if (hasNamedDefaultSlot) {\r\n        context.onError(\r\n          createCompilerError(\r\n            ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN,\r\n            implicitDefaultChildren[0].loc\r\n          )\r\n        )\r\n      } else {\r\n        slotsProperties.push(\r\n          buildDefaultSlotProperty(undefined, implicitDefaultChildren)\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const slotFlag = hasDynamicSlots\r\n    ? SlotFlags.DYNAMIC\r\n    : hasForwardedSlots(node.children)\r\n    ? SlotFlags.FORWARDED\r\n    : SlotFlags.STABLE\r\n\r\n  let slots = createObjectExpression(\r\n    slotsProperties.concat(\r\n      createObjectProperty(\r\n        `_`,\r\n        // 2 = compiled but dynamic = can skip normalization, but must run diff\r\n        // 1 = compiled and static = can skip normalization AND diff as optimized\r\n        createSimpleExpression(\r\n          slotFlag + (__DEV__ ? ` /* ${slotFlagsText[slotFlag]} */` : ``),\r\n          false\r\n        )\r\n      )\r\n    ),\r\n    loc\r\n  ) as SlotsExpression\r\n  if (dynamicSlots.length) {\r\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [\r\n      slots,\r\n      createArrayExpression(dynamicSlots)\r\n    ]) as SlotsExpression\r\n  }\r\n\r\n  return {\r\n    slots,\r\n    hasDynamicSlots\r\n  }\r\n}\r\n\r\nfunction buildDynamicSlot(\r\n  name: ExpressionNode,\r\n  fn: FunctionExpression\r\n): ObjectExpression {\r\n  return createObjectExpression([\r\n    createObjectProperty(`name`, name),\r\n    createObjectProperty(`fn`, fn)\r\n  ])\r\n}\r\n\r\nfunction hasForwardedSlots(children: TemplateChildNode[]): boolean {\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    switch (child.type) {\r\n      case NodeTypes.ELEMENT:\r\n        if (\r\n          child.tagType === ElementTypes.SLOT ||\r\n          hasForwardedSlots(child.children)\r\n        ) {\r\n          return true\r\n        }\r\n        break\r\n      case NodeTypes.IF:\r\n        if (hasForwardedSlots(child.branches)) return true\r\n        break\r\n      case NodeTypes.IF_BRANCH:\r\n      case NodeTypes.FOR:\r\n        if (hasForwardedSlots(child.children)) return true\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction isNonWhitespaceContent(node: TemplateChildNode): boolean {\r\n  if (node.type !== NodeTypes.TEXT && node.type !== NodeTypes.TEXT_CALL)\r\n    return true\r\n  return node.type === NodeTypes.TEXT\r\n    ? !!node.content.trim()\r\n    : isNonWhitespaceContent(node.content)\r\n}\r\n","import { NodeTransform, TransformContext } from '../transform'\r\nimport {\r\n  NodeTypes,\r\n  ElementTypes,\r\n  CallExpression,\r\n  ObjectExpression,\r\n  ElementNode,\r\n  DirectiveNode,\r\n  ExpressionNode,\r\n  ArrayExpression,\r\n  createCallExpression,\r\n  createArrayExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  createObjectExpression,\r\n  Property,\r\n  ComponentNode,\r\n  VNodeCall,\r\n  TemplateTextChildNode,\r\n  DirectiveArguments,\r\n  createVNodeCall,\r\n  ConstantTypes\r\n} from '../ast'\r\nimport {\r\n  PatchFlags,\r\n  PatchFlagNames,\r\n  isSymbol,\r\n  isOn,\r\n  isObject,\r\n  isReservedProp,\r\n  capitalize,\r\n  camelize,\r\n  isBuiltInDirective\r\n} from '@vue/shared'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport {\r\n  RESOLVE_DIRECTIVE,\r\n  RESOLVE_COMPONENT,\r\n  RESOLVE_DYNAMIC_COMPONENT,\r\n  MERGE_PROPS,\r\n  NORMALIZE_CLASS,\r\n  NORMALIZE_STYLE,\r\n  NORMALIZE_PROPS,\r\n  TO_HANDLERS,\r\n  TELEPORT,\r\n  KEEP_ALIVE,\r\n  SUSPENSE,\r\n  UNREF,\r\n  GUARD_REACTIVE_PROPS\r\n} from '../runtimeHelpers'\r\nimport {\r\n  getInnerRange,\r\n  toValidAssetId,\r\n  findProp,\r\n  isCoreComponent,\r\n  isStaticArgOf,\r\n  findDir,\r\n  isStaticExp\r\n} from '../utils'\r\nimport { buildSlots } from './vSlot'\r\nimport { getConstantType } from './hoistStatic'\r\nimport { BindingTypes } from '../options'\r\nimport {\r\n  checkCompatEnabled,\r\n  CompilerDeprecationTypes,\r\n  isCompatEnabled\r\n} from '../compat/compatConfig'\r\n\r\n// some directive transforms (e.g. v-model) may return a symbol for runtime\r\n// import, which should be used instead of a resolveDirective call.\r\nconst directiveImportMap = new WeakMap<DirectiveNode, symbol>()\r\n\r\n// generate a JavaScript AST for this element's codegen\r\nexport const transformElement: NodeTransform = (node, context) => {\r\n  // perform the work on exit, after all child expressions have been\r\n  // processed and merged.\r\n  return function postTransformElement() {\r\n    node = context.currentNode!\r\n\r\n    if (\r\n      !(\r\n        node.type === NodeTypes.ELEMENT &&\r\n        (node.tagType === ElementTypes.ELEMENT ||\r\n          node.tagType === ElementTypes.COMPONENT)\r\n      )\r\n    ) {\r\n      return\r\n    }\r\n\r\n    const { tag, props } = node\r\n    const isComponent = node.tagType === ElementTypes.COMPONENT\r\n\r\n    // The goal of the transform is to create a codegenNode implementing the\r\n    // VNodeCall interface.\r\n    let vnodeTag = isComponent\r\n      ? resolveComponentType(node as ComponentNode, context)\r\n      : `\"${tag}\"`\r\n\r\n    const isDynamicComponent =\r\n      isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT\r\n\r\n    let vnodeProps: VNodeCall['props']\r\n    let vnodeChildren: VNodeCall['children']\r\n    let vnodePatchFlag: VNodeCall['patchFlag']\r\n    let patchFlag: number = 0\r\n    let vnodeDynamicProps: VNodeCall['dynamicProps']\r\n    let dynamicPropNames: string[] | undefined\r\n    let vnodeDirectives: VNodeCall['directives']\r\n\r\n    let shouldUseBlock =\r\n      // dynamic component may resolve to plain elements\r\n      isDynamicComponent ||\r\n      vnodeTag === TELEPORT ||\r\n      vnodeTag === SUSPENSE ||\r\n      (!isComponent &&\r\n        // <svg> and <foreignObject> must be forced into blocks so that block\r\n        // updates inside get proper isSVG flag at runtime. (#639, #643)\r\n        // This is technically web-specific, but splitting the logic out of core\r\n        // leads to too much unnecessary complexity.\r\n        (tag === 'svg' || tag === 'foreignObject'))\r\n\r\n    // props\r\n    if (props.length > 0) {\r\n      const propsBuildResult = buildProps(\r\n        node,\r\n        context,\r\n        undefined,\r\n        isComponent,\r\n        isDynamicComponent\r\n      )\r\n      vnodeProps = propsBuildResult.props\r\n      patchFlag = propsBuildResult.patchFlag\r\n      dynamicPropNames = propsBuildResult.dynamicPropNames\r\n      const directives = propsBuildResult.directives\r\n      vnodeDirectives =\r\n        directives && directives.length\r\n          ? (createArrayExpression(\r\n              directives.map(dir => buildDirectiveArgs(dir, context))\r\n            ) as DirectiveArguments)\r\n          : undefined\r\n\r\n      if (propsBuildResult.shouldUseBlock) {\r\n        shouldUseBlock = true\r\n      }\r\n    }\r\n\r\n    // children\r\n    if (node.children.length > 0) {\r\n      if (vnodeTag === KEEP_ALIVE) {\r\n        // Although a built-in component, we compile KeepAlive with raw children\r\n        // instead of slot functions so that it can be used inside Transition\r\n        // or other Transition-wrapping HOCs.\r\n        // To ensure correct updates with block optimizations, we need to:\r\n        // 1. Force keep-alive into a block. This avoids its children being\r\n        //    collected by a parent block.\r\n        shouldUseBlock = true\r\n        // 2. Force keep-alive to always be updated, since it uses raw children.\r\n        patchFlag |= PatchFlags.DYNAMIC_SLOTS\r\n        if (__DEV__ && node.children.length > 1) {\r\n          context.onError(\r\n            createCompilerError(ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN, {\r\n              start: node.children[0].loc.start,\r\n              end: node.children[node.children.length - 1].loc.end,\r\n              source: ''\r\n            })\r\n          )\r\n        }\r\n      }\r\n\r\n      const shouldBuildAsSlots =\r\n        isComponent &&\r\n        // Teleport is not a real component and has dedicated runtime handling\r\n        vnodeTag !== TELEPORT &&\r\n        // explained above.\r\n        vnodeTag !== KEEP_ALIVE\r\n\r\n      if (shouldBuildAsSlots) {\r\n        const { slots, hasDynamicSlots } = buildSlots(node, context)\r\n        vnodeChildren = slots\r\n        if (hasDynamicSlots) {\r\n          patchFlag |= PatchFlags.DYNAMIC_SLOTS\r\n        }\r\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\r\n        const child = node.children[0]\r\n        const type = child.type\r\n        // check for dynamic text children\r\n        const hasDynamicTextChild =\r\n          type === NodeTypes.INTERPOLATION ||\r\n          type === NodeTypes.COMPOUND_EXPRESSION\r\n        if (\r\n          hasDynamicTextChild &&\r\n          getConstantType(child, context) === ConstantTypes.NOT_CONSTANT\r\n        ) {\r\n          patchFlag |= PatchFlags.TEXT\r\n        }\r\n        // pass directly if the only child is a text node\r\n        // (plain / interpolation / expression)\r\n        if (hasDynamicTextChild || type === NodeTypes.TEXT) {\r\n          vnodeChildren = child as TemplateTextChildNode\r\n        } else {\r\n          vnodeChildren = node.children\r\n        }\r\n      } else {\r\n        vnodeChildren = node.children\r\n      }\r\n    }\r\n\r\n    // patchFlag & dynamicPropNames\r\n    if (patchFlag !== 0) {\r\n      if (__DEV__) {\r\n        if (patchFlag < 0) {\r\n          // special flags (negative and mutually exclusive)\r\n          vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`\r\n        } else {\r\n          // bitwise flags\r\n          const flagNames = Object.keys(PatchFlagNames)\r\n            .map(Number)\r\n            .filter(n => n > 0 && patchFlag & n)\r\n            .map(n => PatchFlagNames[n])\r\n            .join(`, `)\r\n          vnodePatchFlag = patchFlag + ` /* ${flagNames} */`\r\n        }\r\n      } else {\r\n        vnodePatchFlag = String(patchFlag)\r\n      }\r\n      if (dynamicPropNames && dynamicPropNames.length) {\r\n        vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames)\r\n      }\r\n    }\r\n\r\n    node.codegenNode = createVNodeCall(\r\n      context,\r\n      vnodeTag,\r\n      vnodeProps,\r\n      vnodeChildren,\r\n      vnodePatchFlag,\r\n      vnodeDynamicProps,\r\n      vnodeDirectives,\r\n      !!shouldUseBlock,\r\n      false /* disableTracking */,\r\n      isComponent,\r\n      node.loc\r\n    )\r\n  }\r\n}\r\n\r\nexport function resolveComponentType(\r\n  node: ComponentNode,\r\n  context: TransformContext,\r\n  ssr = false\r\n) {\r\n  let { tag } = node\r\n\r\n  // 1. dynamic component\r\n  const isExplicitDynamic = isComponentTag(tag)\r\n  const isProp = findProp(node, 'is')\r\n  if (isProp) {\r\n    if (\r\n      isExplicitDynamic ||\r\n      (__COMPAT__ &&\r\n        isCompatEnabled(\r\n          CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n          context\r\n        ))\r\n    ) {\r\n      const exp =\r\n        isProp.type === NodeTypes.ATTRIBUTE\r\n          ? isProp.value && createSimpleExpression(isProp.value.content, true)\r\n          : isProp.exp\r\n      if (exp) {\r\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n          exp\r\n        ])\r\n      }\r\n    } else if (\r\n      isProp.type === NodeTypes.ATTRIBUTE &&\r\n      isProp.value!.content.startsWith('vue:')\r\n    ) {\r\n      // <button is=\"vue:xxx\">\r\n      // if not <component>, only is value that starts with \"vue:\" will be\r\n      // treated as component by the parse phase and reach here, unless it's\r\n      // compat mode where all is values are considered components\r\n      tag = isProp.value!.content.slice(4)\r\n    }\r\n  }\r\n\r\n  // 1.5 v-is (TODO: Deprecate)\r\n  const isDir = !isExplicitDynamic && findDir(node, 'is')\r\n  if (isDir && isDir.exp) {\r\n    return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n      isDir.exp\r\n    ])\r\n  }\r\n\r\n  // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\r\n  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag)\r\n  if (builtIn) {\r\n    // built-ins are simply fallthroughs / have special handling during ssr\r\n    // so we don't need to import their runtime equivalents\r\n    if (!ssr) context.helper(builtIn)\r\n    return builtIn\r\n  }\r\n\r\n  // 3. user component (from setup bindings)\r\n  // this is skipped in browser build since browser builds do not perform\r\n  // binding analysis.\r\n  if (!__BROWSER__) {\r\n    const fromSetup = resolveSetupReference(tag, context)\r\n    if (fromSetup) {\r\n      return fromSetup\r\n    }\r\n    const dotIndex = tag.indexOf('.')\r\n    if (dotIndex > 0) {\r\n      const ns = resolveSetupReference(tag.slice(0, dotIndex), context)\r\n      if (ns) {\r\n        return ns + tag.slice(dotIndex)\r\n      }\r\n    }\r\n  }\r\n\r\n  // 4. Self referencing component (inferred from filename)\r\n  if (\r\n    !__BROWSER__ &&\r\n    context.selfName &&\r\n    capitalize(camelize(tag)) === context.selfName\r\n  ) {\r\n    context.helper(RESOLVE_COMPONENT)\r\n    // codegen.ts has special check for __self postfix when generating\r\n    // component imports, which will pass additional `maybeSelfReference` flag\r\n    // to `resolveComponent`.\r\n    context.components.add(tag + `__self`)\r\n    return toValidAssetId(tag, `component`)\r\n  }\r\n\r\n  // 5. user component (resolve)\r\n  context.helper(RESOLVE_COMPONENT)\r\n  context.components.add(tag)\r\n  return toValidAssetId(tag, `component`)\r\n}\r\n\r\nfunction resolveSetupReference(name: string, context: TransformContext) {\r\n  const bindings = context.bindingMetadata\r\n  if (!bindings || bindings.__isScriptSetup === false) {\r\n    return\r\n  }\r\n\r\n  const camelName = camelize(name)\r\n  const PascalName = capitalize(camelName)\r\n  const checkType = (type: BindingTypes) => {\r\n    if (bindings[name] === type) {\r\n      return name\r\n    }\r\n    if (bindings[camelName] === type) {\r\n      return camelName\r\n    }\r\n    if (bindings[PascalName] === type) {\r\n      return PascalName\r\n    }\r\n  }\r\n\r\n  const fromConst =\r\n    checkType(BindingTypes.SETUP_CONST) ||\r\n    checkType(BindingTypes.SETUP_REACTIVE_CONST)\r\n  if (fromConst) {\r\n    return context.inline\r\n      ? // in inline mode, const setup bindings (e.g. imports) can be used as-is\r\n        fromConst\r\n      : `$setup[${JSON.stringify(fromConst)}]`\r\n  }\r\n\r\n  const fromMaybeRef =\r\n    checkType(BindingTypes.SETUP_LET) ||\r\n    checkType(BindingTypes.SETUP_REF) ||\r\n    checkType(BindingTypes.SETUP_MAYBE_REF)\r\n  if (fromMaybeRef) {\r\n    return context.inline\r\n      ? // setup scope bindings that may be refs need to be unrefed\r\n        `${context.helperString(UNREF)}(${fromMaybeRef})`\r\n      : `$setup[${JSON.stringify(fromMaybeRef)}]`\r\n  }\r\n}\r\n\r\nexport type PropsExpression = ObjectExpression | CallExpression | ExpressionNode\r\n\r\nexport function buildProps(\r\n  node: ElementNode,\r\n  context: TransformContext,\r\n  props: ElementNode['props'] = node.props,\r\n  isComponent: boolean,\r\n  isDynamicComponent: boolean,\r\n  ssr = false\r\n): {\r\n  props: PropsExpression | undefined\r\n  directives: DirectiveNode[]\r\n  patchFlag: number\r\n  dynamicPropNames: string[]\r\n  shouldUseBlock: boolean\r\n} {\r\n  const { tag, loc: elementLoc, children } = node\r\n  let properties: ObjectExpression['properties'] = []\r\n  const mergeArgs: PropsExpression[] = []\r\n  const runtimeDirectives: DirectiveNode[] = []\r\n  const hasChildren = children.length > 0\r\n  let shouldUseBlock = false\r\n\r\n  // patchFlag analysis\r\n  let patchFlag = 0\r\n  let hasRef = false\r\n  let hasClassBinding = false\r\n  let hasStyleBinding = false\r\n  let hasHydrationEventBinding = false\r\n  let hasDynamicKeys = false\r\n  let hasVnodeHook = false\r\n  const dynamicPropNames: string[] = []\r\n\r\n  const analyzePatchFlag = ({ key, value }: Property) => {\r\n    if (isStaticExp(key)) {\r\n      const name = key.content\r\n      const isEventHandler = isOn(name)\r\n      if (\r\n        isEventHandler &&\r\n        (!isComponent || isDynamicComponent) &&\r\n        // omit the flag for click handlers because hydration gives click\r\n        // dedicated fast path.\r\n        name.toLowerCase() !== 'onclick' &&\r\n        // omit v-model handlers\r\n        name !== 'onUpdate:modelValue' &&\r\n        // omit onVnodeXXX hooks\r\n        !isReservedProp(name)\r\n      ) {\r\n        hasHydrationEventBinding = true\r\n      }\r\n\r\n      if (isEventHandler && isReservedProp(name)) {\r\n        hasVnodeHook = true\r\n      }\r\n\r\n      if (\r\n        value.type === NodeTypes.JS_CACHE_EXPRESSION ||\r\n        ((value.type === NodeTypes.SIMPLE_EXPRESSION ||\r\n          value.type === NodeTypes.COMPOUND_EXPRESSION) &&\r\n          getConstantType(value, context) > 0)\r\n      ) {\r\n        // skip if the prop is a cached handler or has constant value\r\n        return\r\n      }\r\n\r\n      if (name === 'ref') {\r\n        hasRef = true\r\n      } else if (name === 'class') {\r\n        hasClassBinding = true\r\n      } else if (name === 'style') {\r\n        hasStyleBinding = true\r\n      } else if (name !== 'key' && !dynamicPropNames.includes(name)) {\r\n        dynamicPropNames.push(name)\r\n      }\r\n\r\n      // treat the dynamic class and style binding of the component as dynamic props\r\n      if (\r\n        isComponent &&\r\n        (name === 'class' || name === 'style') &&\r\n        !dynamicPropNames.includes(name)\r\n      ) {\r\n        dynamicPropNames.push(name)\r\n      }\r\n    } else {\r\n      hasDynamicKeys = true\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < props.length; i++) {\r\n    // static attribute\r\n    const prop = props[i]\r\n    if (prop.type === NodeTypes.ATTRIBUTE) {\r\n      const { loc, name, value } = prop\r\n      let isStatic = true\r\n      if (name === 'ref') {\r\n        hasRef = true\r\n        if (context.scopes.vFor > 0) {\r\n          properties.push(\r\n            createObjectProperty(\r\n              createSimpleExpression('ref_for', true),\r\n              createSimpleExpression('true')\r\n            )\r\n          )\r\n        }\r\n        // in inline mode there is no setupState object, so we can't use string\r\n        // keys to set the ref. Instead, we need to transform it to pass the\r\n        // actual ref instead.\r\n        if (\r\n          !__BROWSER__ &&\r\n          value &&\r\n          context.inline &&\r\n          context.bindingMetadata[value.content]\r\n        ) {\r\n          isStatic = false\r\n          properties.push(\r\n            createObjectProperty(\r\n              createSimpleExpression('ref_key', true),\r\n              createSimpleExpression(value.content, true, value.loc)\r\n            )\r\n          )\r\n        }\r\n      }\r\n      // skip is on <component>, or is=\"vue:xxx\"\r\n      if (\r\n        name === 'is' &&\r\n        (isComponentTag(tag) ||\r\n          (value && value.content.startsWith('vue:')) ||\r\n          (__COMPAT__ &&\r\n            isCompatEnabled(\r\n              CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n              context\r\n            )))\r\n      ) {\r\n        continue\r\n      }\r\n      properties.push(\r\n        createObjectProperty(\r\n          createSimpleExpression(\r\n            name,\r\n            true,\r\n            getInnerRange(loc, 0, name.length)\r\n          ),\r\n          createSimpleExpression(\r\n            value ? value.content : '',\r\n            isStatic,\r\n            value ? value.loc : loc\r\n          )\r\n        )\r\n      )\r\n    } else {\r\n      // directives\r\n      const { name, arg, exp, loc } = prop\r\n      const isVBind = name === 'bind'\r\n      const isVOn = name === 'on'\r\n\r\n      // skip v-slot - it is handled by its dedicated transform.\r\n      if (name === 'slot') {\r\n        if (!isComponent) {\r\n          context.onError(\r\n            createCompilerError(ErrorCodes.X_V_SLOT_MISPLACED, loc)\r\n          )\r\n        }\r\n        continue\r\n      }\r\n      // skip v-once/v-memo - they are handled by dedicated transforms.\r\n      if (name === 'once' || name === 'memo') {\r\n        continue\r\n      }\r\n      // skip v-is and :is on <component>\r\n      if (\r\n        name === 'is' ||\r\n        (isVBind &&\r\n          isStaticArgOf(arg, 'is') &&\r\n          (isComponentTag(tag) ||\r\n            (__COMPAT__ &&\r\n              isCompatEnabled(\r\n                CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n                context\r\n              ))))\r\n      ) {\r\n        continue\r\n      }\r\n      // skip v-on in SSR compilation\r\n      if (isVOn && ssr) {\r\n        continue\r\n      }\r\n\r\n      if (\r\n        // #938: elements with dynamic keys should be forced into blocks\r\n        (isVBind && isStaticArgOf(arg, 'key')) ||\r\n        // inline before-update hooks need to force block so that it is invoked\r\n        // before children\r\n        (isVOn && hasChildren && isStaticArgOf(arg, 'vue:before-update'))\r\n      ) {\r\n        shouldUseBlock = true\r\n      }\r\n\r\n      if (isVBind && isStaticArgOf(arg, 'ref') && context.scopes.vFor > 0) {\r\n        properties.push(\r\n          createObjectProperty(\r\n            createSimpleExpression('ref_for', true),\r\n            createSimpleExpression('true')\r\n          )\r\n        )\r\n      }\r\n\r\n      // special case for v-bind and v-on with no argument\r\n      if (!arg && (isVBind || isVOn)) {\r\n        hasDynamicKeys = true\r\n        if (exp) {\r\n          if (properties.length) {\r\n            mergeArgs.push(\r\n              createObjectExpression(dedupeProperties(properties), elementLoc)\r\n            )\r\n            properties = []\r\n          }\r\n          if (isVBind) {\r\n            if (__COMPAT__) {\r\n              // 2.x v-bind object order compat\r\n              if (__DEV__) {\r\n                const hasOverridableKeys = mergeArgs.some(arg => {\r\n                  if (arg.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n                    return arg.properties.some(({ key }) => {\r\n                      if (\r\n                        key.type !== NodeTypes.SIMPLE_EXPRESSION ||\r\n                        !key.isStatic\r\n                      ) {\r\n                        return true\r\n                      }\r\n                      return (\r\n                        key.content !== 'class' &&\r\n                        key.content !== 'style' &&\r\n                        !isOn(key.content)\r\n                      )\r\n                    })\r\n                  } else {\r\n                    // dynamic expression\r\n                    return true\r\n                  }\r\n                })\r\n                if (hasOverridableKeys) {\r\n                  checkCompatEnabled(\r\n                    CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER,\r\n                    context,\r\n                    loc\r\n                  )\r\n                }\r\n              }\r\n\r\n              if (\r\n                isCompatEnabled(\r\n                  CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER,\r\n                  context\r\n                )\r\n              ) {\r\n                mergeArgs.unshift(exp)\r\n                continue\r\n              }\r\n            }\r\n\r\n            mergeArgs.push(exp)\r\n          } else {\r\n            // v-on=\"obj\" -> toHandlers(obj)\r\n            mergeArgs.push({\r\n              type: NodeTypes.JS_CALL_EXPRESSION,\r\n              loc,\r\n              callee: context.helper(TO_HANDLERS),\r\n              arguments: [exp]\r\n            })\r\n          }\r\n        } else {\r\n          context.onError(\r\n            createCompilerError(\r\n              isVBind\r\n                ? ErrorCodes.X_V_BIND_NO_EXPRESSION\r\n                : ErrorCodes.X_V_ON_NO_EXPRESSION,\r\n              loc\r\n            )\r\n          )\r\n        }\r\n        continue\r\n      }\r\n\r\n      const directiveTransform = context.directiveTransforms[name]\r\n      if (directiveTransform) {\r\n        // has built-in directive transform.\r\n        const { props, needRuntime } = directiveTransform(prop, node, context)\r\n        !ssr && props.forEach(analyzePatchFlag)\r\n        properties.push(...props)\r\n        if (needRuntime) {\r\n          runtimeDirectives.push(prop)\r\n          if (isSymbol(needRuntime)) {\r\n            directiveImportMap.set(prop, needRuntime)\r\n          }\r\n        }\r\n      } else if (!isBuiltInDirective(name)) {\r\n        // no built-in transform, this is a user custom directive.\r\n        runtimeDirectives.push(prop)\r\n        // custom dirs may use beforeUpdate so they need to force blocks\r\n        // to ensure before-update gets called before children update\r\n        if (hasChildren) {\r\n          shouldUseBlock = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let propsExpression: PropsExpression | undefined = undefined\r\n\r\n  // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\r\n  if (mergeArgs.length) {\r\n    if (properties.length) {\r\n      mergeArgs.push(\r\n        createObjectExpression(dedupeProperties(properties), elementLoc)\r\n      )\r\n    }\r\n    if (mergeArgs.length > 1) {\r\n      propsExpression = createCallExpression(\r\n        context.helper(MERGE_PROPS),\r\n        mergeArgs,\r\n        elementLoc\r\n      )\r\n    } else {\r\n      // single v-bind with nothing else - no need for a mergeProps call\r\n      propsExpression = mergeArgs[0]\r\n    }\r\n  } else if (properties.length) {\r\n    propsExpression = createObjectExpression(\r\n      dedupeProperties(properties),\r\n      elementLoc\r\n    )\r\n  }\r\n\r\n  // patchFlag analysis\r\n  if (hasDynamicKeys) {\r\n    patchFlag |= PatchFlags.FULL_PROPS\r\n  } else {\r\n    if (hasClassBinding && !isComponent) {\r\n      patchFlag |= PatchFlags.CLASS\r\n    }\r\n    if (hasStyleBinding && !isComponent) {\r\n      patchFlag |= PatchFlags.STYLE\r\n    }\r\n    if (dynamicPropNames.length) {\r\n      patchFlag |= PatchFlags.PROPS\r\n    }\r\n    if (hasHydrationEventBinding) {\r\n      patchFlag |= PatchFlags.HYDRATE_EVENTS\r\n    }\r\n  }\r\n  if (\r\n    !shouldUseBlock &&\r\n    (patchFlag === 0 || patchFlag === PatchFlags.HYDRATE_EVENTS) &&\r\n    (hasRef || hasVnodeHook || runtimeDirectives.length > 0)\r\n  ) {\r\n    patchFlag |= PatchFlags.NEED_PATCH\r\n  }\r\n\r\n  // pre-normalize props, SSR is skipped for now\r\n  if (!context.inSSR && propsExpression) {\r\n    switch (propsExpression.type) {\r\n      case NodeTypes.JS_OBJECT_EXPRESSION:\r\n        // means that there is no v-bind,\r\n        // but still need to deal with dynamic key binding\r\n        let classKeyIndex = -1\r\n        let styleKeyIndex = -1\r\n        let hasDynamicKey = false\r\n\r\n        for (let i = 0; i < propsExpression.properties.length; i++) {\r\n          const key = propsExpression.properties[i].key\r\n          if (isStaticExp(key)) {\r\n            if (key.content === 'class') {\r\n              classKeyIndex = i\r\n            } else if (key.content === 'style') {\r\n              styleKeyIndex = i\r\n            }\r\n          } else if (!key.isHandlerKey) {\r\n            hasDynamicKey = true\r\n          }\r\n        }\r\n\r\n        const classProp = propsExpression.properties[classKeyIndex]\r\n        const styleProp = propsExpression.properties[styleKeyIndex]\r\n\r\n        // no dynamic key\r\n        if (!hasDynamicKey) {\r\n          if (classProp && !isStaticExp(classProp.value)) {\r\n            classProp.value = createCallExpression(\r\n              context.helper(NORMALIZE_CLASS),\r\n              [classProp.value]\r\n            )\r\n          }\r\n          if (\r\n            styleProp &&\r\n            // the static style is compiled into an object,\r\n            // so use `hasStyleBinding` to ensure that it is a dynamic style binding\r\n            (hasStyleBinding ||\r\n              (styleProp.value.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n                styleProp.value.content.trim()[0] === `[`) ||\r\n              // v-bind:style and style both exist,\r\n              // v-bind:style with static literal object\r\n              styleProp.value.type === NodeTypes.JS_ARRAY_EXPRESSION)\r\n          ) {\r\n            styleProp.value = createCallExpression(\r\n              context.helper(NORMALIZE_STYLE),\r\n              [styleProp.value]\r\n            )\r\n          }\r\n        } else {\r\n          // dynamic key binding, wrap with `normalizeProps`\r\n          propsExpression = createCallExpression(\r\n            context.helper(NORMALIZE_PROPS),\r\n            [propsExpression]\r\n          )\r\n        }\r\n        break\r\n      case NodeTypes.JS_CALL_EXPRESSION:\r\n        // mergeProps call, do nothing\r\n        break\r\n      default:\r\n        // single v-bind\r\n        propsExpression = createCallExpression(\r\n          context.helper(NORMALIZE_PROPS),\r\n          [\r\n            createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\r\n              propsExpression\r\n            ])\r\n          ]\r\n        )\r\n        break\r\n    }\r\n  }\r\n\r\n  return {\r\n    props: propsExpression,\r\n    directives: runtimeDirectives,\r\n    patchFlag,\r\n    dynamicPropNames,\r\n    shouldUseBlock\r\n  }\r\n}\r\n\r\n// Dedupe props in an object literal.\r\n// Literal duplicated attributes would have been warned during the parse phase,\r\n// however, it's possible to encounter duplicated `onXXX` handlers with different\r\n// modifiers. We also need to merge static and dynamic class / style attributes.\r\n// - onXXX handlers / style: merge into array\r\n// - class: merge into single expression with concatenation\r\nfunction dedupeProperties(properties: Property[]): Property[] {\r\n  const knownProps: Map<string, Property> = new Map()\r\n  const deduped: Property[] = []\r\n  for (let i = 0; i < properties.length; i++) {\r\n    const prop = properties[i]\r\n    // dynamic keys are always allowed\r\n    if (prop.key.type === NodeTypes.COMPOUND_EXPRESSION || !prop.key.isStatic) {\r\n      deduped.push(prop)\r\n      continue\r\n    }\r\n    const name = prop.key.content\r\n    const existing = knownProps.get(name)\r\n    if (existing) {\r\n      if (name === 'style' || name === 'class' || isOn(name)) {\r\n        mergeAsArray(existing, prop)\r\n      }\r\n      // unexpected duplicate, should have emitted error during parse\r\n    } else {\r\n      knownProps.set(name, prop)\r\n      deduped.push(prop)\r\n    }\r\n  }\r\n  return deduped\r\n}\r\n\r\nfunction mergeAsArray(existing: Property, incoming: Property) {\r\n  if (existing.value.type === NodeTypes.JS_ARRAY_EXPRESSION) {\r\n    existing.value.elements.push(incoming.value)\r\n  } else {\r\n    existing.value = createArrayExpression(\r\n      [existing.value, incoming.value],\r\n      existing.loc\r\n    )\r\n  }\r\n}\r\n\r\nexport function buildDirectiveArgs(\r\n  dir: DirectiveNode,\r\n  context: TransformContext\r\n): ArrayExpression {\r\n  const dirArgs: ArrayExpression['elements'] = []\r\n  const runtime = directiveImportMap.get(dir)\r\n  if (runtime) {\r\n    // built-in directive with runtime\r\n    dirArgs.push(context.helperString(runtime))\r\n  } else {\r\n    // user directive.\r\n    // see if we have directives exposed via <script setup>\r\n    const fromSetup =\r\n      !__BROWSER__ && resolveSetupReference('v-' + dir.name, context)\r\n    if (fromSetup) {\r\n      dirArgs.push(fromSetup)\r\n    } else {\r\n      // inject statement for resolving directive\r\n      context.helper(RESOLVE_DIRECTIVE)\r\n      context.directives.add(dir.name)\r\n      dirArgs.push(toValidAssetId(dir.name, `directive`))\r\n    }\r\n  }\r\n  const { loc } = dir\r\n  if (dir.exp) dirArgs.push(dir.exp)\r\n  if (dir.arg) {\r\n    if (!dir.exp) {\r\n      dirArgs.push(`void 0`)\r\n    }\r\n    dirArgs.push(dir.arg)\r\n  }\r\n  if (Object.keys(dir.modifiers).length) {\r\n    if (!dir.arg) {\r\n      if (!dir.exp) {\r\n        dirArgs.push(`void 0`)\r\n      }\r\n      dirArgs.push(`void 0`)\r\n    }\r\n    const trueExpression = createSimpleExpression(`true`, false, loc)\r\n    dirArgs.push(\r\n      createObjectExpression(\r\n        dir.modifiers.map(modifier =>\r\n          createObjectProperty(modifier, trueExpression)\r\n        ),\r\n        loc\r\n      )\r\n    )\r\n  }\r\n  return createArrayExpression(dirArgs, dir.loc)\r\n}\r\n\r\nfunction stringifyDynamicPropNames(props: string[]): string {\r\n  let propsNamesString = `[`\r\n  for (let i = 0, l = props.length; i < l; i++) {\r\n    propsNamesString += JSON.stringify(props[i])\r\n    if (i < l - 1) propsNamesString += ', '\r\n  }\r\n  return propsNamesString + `]`\r\n}\r\n\r\nfunction isComponentTag(tag: string) {\r\n  return tag === 'component' || tag === 'Component'\r\n}\r\n","import { NodeTransform, TransformContext } from '../transform'\r\nimport {\r\n  NodeTypes,\r\n  CallExpression,\r\n  createCallExpression,\r\n  ExpressionNode,\r\n  SlotOutletNode,\r\n  createFunctionExpression\r\n} from '../ast'\r\nimport { isSlotOutlet, isStaticArgOf, isStaticExp } from '../utils'\r\nimport { buildProps, PropsExpression } from './transformElement'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport { RENDER_SLOT } from '../runtimeHelpers'\r\nimport { camelize } from '@vue/shared/'\r\n\r\nexport const transformSlotOutlet: NodeTransform = (node, context) => {\r\n  if (isSlotOutlet(node)) {\r\n    const { children, loc } = node\r\n    const { slotName, slotProps } = processSlotOutlet(node, context)\r\n\r\n    const slotArgs: CallExpression['arguments'] = [\r\n      context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\r\n      slotName,\r\n      '{}',\r\n      'undefined',\r\n      'true'\r\n    ]\r\n    let expectedLen = 2\r\n\r\n    if (slotProps) {\r\n      slotArgs[2] = slotProps\r\n      expectedLen = 3\r\n    }\r\n\r\n    if (children.length) {\r\n      slotArgs[3] = createFunctionExpression([], children, false, false, loc)\r\n      expectedLen = 4\r\n    }\r\n\r\n    if (context.scopeId && !context.slotted) {\r\n      expectedLen = 5\r\n    }\r\n    slotArgs.splice(expectedLen) // remove unused arguments\r\n\r\n    node.codegenNode = createCallExpression(\r\n      context.helper(RENDER_SLOT),\r\n      slotArgs,\r\n      loc\r\n    )\r\n  }\r\n}\r\n\r\ninterface SlotOutletProcessResult {\r\n  slotName: string | ExpressionNode\r\n  slotProps: PropsExpression | undefined\r\n}\r\n\r\nexport function processSlotOutlet(\r\n  node: SlotOutletNode,\r\n  context: TransformContext\r\n): SlotOutletProcessResult {\r\n  let slotName: string | ExpressionNode = `\"default\"`\r\n  let slotProps: PropsExpression | undefined = undefined\r\n\r\n  const nonNameProps = []\r\n  for (let i = 0; i < node.props.length; i++) {\r\n    const p = node.props[i]\r\n    if (p.type === NodeTypes.ATTRIBUTE) {\r\n      if (p.value) {\r\n        if (p.name === 'name') {\r\n          slotName = JSON.stringify(p.value.content)\r\n        } else {\r\n          p.name = camelize(p.name)\r\n          nonNameProps.push(p)\r\n        }\r\n      }\r\n    } else {\r\n      if (p.name === 'bind' && isStaticArgOf(p.arg, 'name')) {\r\n        if (p.exp) slotName = p.exp\r\n      } else {\r\n        if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\r\n          p.arg.content = camelize(p.arg.content)\r\n        }\r\n        nonNameProps.push(p)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (nonNameProps.length > 0) {\r\n    const { props, directives } = buildProps(\r\n      node,\r\n      context,\r\n      nonNameProps,\r\n      false,\r\n      false\r\n    )\r\n    slotProps = props\r\n\r\n    if (directives.length) {\r\n      context.onError(\r\n        createCompilerError(\r\n          ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET,\r\n          directives[0].loc\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  return {\r\n    slotName,\r\n    slotProps\r\n  }\r\n}\r\n","import { DirectiveTransform, DirectiveTransformResult } from '../transform'\r\nimport {\r\n  createCompoundExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  DirectiveNode,\r\n  ElementTypes,\r\n  ExpressionNode,\r\n  NodeTypes,\r\n  SimpleExpressionNode\r\n} from '../ast'\r\nimport { camelize, toHandlerKey } from '@vue/shared'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport { processExpression } from './transformExpression'\r\nimport { validateBrowserExpression } from '../validateExpression'\r\nimport { hasScopeRef, isMemberExpression } from '../utils'\r\nimport { TO_HANDLER_KEY } from '../runtimeHelpers'\r\n\r\nconst fnExpRE =\r\n  /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/\r\n\r\nexport interface VOnDirectiveNode extends DirectiveNode {\r\n  // v-on without arg is handled directly in ./transformElements.ts due to it affecting\r\n  // codegen for the entire props object. This transform here is only for v-on\r\n  // *with* args.\r\n  arg: ExpressionNode\r\n  // exp is guaranteed to be a simple expression here because v-on w/ arg is\r\n  // skipped by transformExpression as a special case.\r\n  exp: SimpleExpressionNode | undefined\r\n}\r\n\r\nexport const transformOn: DirectiveTransform = (\r\n  dir,\r\n  node,\r\n  context,\r\n  augmentor\r\n) => {\r\n  const { loc, modifiers, arg } = dir as VOnDirectiveNode\r\n  if (!dir.exp && !modifiers.length) {\r\n    context.onError(createCompilerError(ErrorCodes.X_V_ON_NO_EXPRESSION, loc))\r\n  }\r\n  let eventName: ExpressionNode\r\n  if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    if (arg.isStatic) {\r\n      let rawName = arg.content\r\n      // TODO deprecate @vnodeXXX usage\r\n      if (rawName.startsWith('vue:')) {\r\n        rawName = `vnode-${rawName.slice(4)}`\r\n      }\r\n      // for all event listeners, auto convert it to camelCase. See issue #2249\r\n      eventName = createSimpleExpression(\r\n        toHandlerKey(camelize(rawName)),\r\n        true,\r\n        arg.loc\r\n      )\r\n    } else {\r\n      // #2388\r\n      eventName = createCompoundExpression([\r\n        `${context.helperString(TO_HANDLER_KEY)}(`,\r\n        arg,\r\n        `)`\r\n      ])\r\n    }\r\n  } else {\r\n    // already a compound expression.\r\n    eventName = arg\r\n    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`)\r\n    eventName.children.push(`)`)\r\n  }\r\n\r\n  // handler processing\r\n  let exp: ExpressionNode | undefined = dir.exp as\r\n    | SimpleExpressionNode\r\n    | undefined\r\n  if (exp && !exp.content.trim()) {\r\n    exp = undefined\r\n  }\r\n  let shouldCache: boolean = context.cacheHandlers && !exp && !context.inVOnce\r\n  if (exp) {\r\n    const isMemberExp = isMemberExpression(exp.content, context)\r\n    const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content))\r\n    const hasMultipleStatements = exp.content.includes(`;`)\r\n\r\n    // process the expression since it's been skipped\r\n    if (!__BROWSER__ && context.prefixIdentifiers) {\r\n      isInlineStatement && context.addIdentifiers(`$event`)\r\n      exp = dir.exp = processExpression(\r\n        exp,\r\n        context,\r\n        false,\r\n        hasMultipleStatements\r\n      )\r\n      isInlineStatement && context.removeIdentifiers(`$event`)\r\n      // with scope analysis, the function is hoistable if it has no reference\r\n      // to scope variables.\r\n      shouldCache =\r\n        context.cacheHandlers &&\r\n        // unnecessary to cache inside v-once\r\n        !context.inVOnce &&\r\n        // runtime constants don't need to be cached\r\n        // (this is analyzed by compileScript in SFC <script setup>)\r\n        !(exp.type === NodeTypes.SIMPLE_EXPRESSION && exp.constType > 0) &&\r\n        // #1541 bail if this is a member exp handler passed to a component -\r\n        // we need to use the original function to preserve arity,\r\n        // e.g. <transition> relies on checking cb.length to determine\r\n        // transition end handling. Inline function is ok since its arity\r\n        // is preserved even when cached.\r\n        !(isMemberExp && node.tagType === ElementTypes.COMPONENT) &&\r\n        // bail if the function references closure variables (v-for, v-slot)\r\n        // it must be passed fresh to avoid stale values.\r\n        !hasScopeRef(exp, context.identifiers)\r\n      // If the expression is optimizable and is a member expression pointing\r\n      // to a function, turn it into invocation (and wrap in an arrow function\r\n      // below) so that it always accesses the latest value when called - thus\r\n      // avoiding the need to be patched.\r\n      if (shouldCache && isMemberExp) {\r\n        if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n          exp.content = `${exp.content} && ${exp.content}(...args)`\r\n        } else {\r\n          exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`]\r\n        }\r\n      }\r\n    }\r\n\r\n    if (__DEV__ && __BROWSER__) {\r\n      validateBrowserExpression(\r\n        exp as SimpleExpressionNode,\r\n        context,\r\n        false,\r\n        hasMultipleStatements\r\n      )\r\n    }\r\n\r\n    if (isInlineStatement || (shouldCache && isMemberExp)) {\r\n      // wrap inline statement in a function expression\r\n      exp = createCompoundExpression([\r\n        `${\r\n          isInlineStatement\r\n            ? !__BROWSER__ && context.isTS\r\n              ? `($event: any)`\r\n              : `$event`\r\n            : `${\r\n                !__BROWSER__ && context.isTS ? `\\n//@ts-ignore\\n` : ``\r\n              }(...args)`\r\n        } => ${hasMultipleStatements ? `{` : `(`}`,\r\n        exp,\r\n        hasMultipleStatements ? `}` : `)`\r\n      ])\r\n    }\r\n  }\r\n\r\n  let ret: DirectiveTransformResult = {\r\n    props: [\r\n      createObjectProperty(\r\n        eventName,\r\n        exp || createSimpleExpression(`() => {}`, false, loc)\r\n      )\r\n    ]\r\n  }\r\n\r\n  // apply extended compiler augmentor\r\n  if (augmentor) {\r\n    ret = augmentor(ret)\r\n  }\r\n\r\n  if (shouldCache) {\r\n    // cache handlers so that it's always the same handler being passed down.\r\n    // this avoids unnecessary re-renders when users use inline handlers on\r\n    // components.\r\n    ret.props[0].value = context.cache(ret.props[0].value)\r\n  }\r\n\r\n  // mark the key as handler for props normalization check\r\n  ret.props.forEach(p => (p.key.isHandlerKey = true))\r\n  return ret\r\n}\r\n","import { DirectiveTransform } from '../transform'\r\nimport {\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  ExpressionNode,\r\n  NodeTypes\r\n} from '../ast'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport { camelize } from '@vue/shared'\r\nimport { CAMELIZE } from '../runtimeHelpers'\r\n\r\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\r\n// codegen for the entire props object. This transform here is only for v-bind\r\n// *with* args.\r\nexport const transformBind: DirectiveTransform = (dir, _node, context) => {\r\n  const { exp, modifiers, loc } = dir\r\n  const arg = dir.arg!\r\n\r\n  if (arg.type !== NodeTypes.SIMPLE_EXPRESSION) {\r\n    arg.children.unshift(`(`)\r\n    arg.children.push(`) || \"\"`)\r\n  } else if (!arg.isStatic) {\r\n    arg.content = `${arg.content} || \"\"`\r\n  }\r\n\r\n  // .sync is replaced by v-model:arg\r\n  if (modifiers.includes('camel')) {\r\n    if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n      if (arg.isStatic) {\r\n        arg.content = camelize(arg.content)\r\n      } else {\r\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`\r\n      }\r\n    } else {\r\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`)\r\n      arg.children.push(`)`)\r\n    }\r\n  }\r\n\r\n  if (!context.inSSR) {\r\n    if (modifiers.includes('prop')) {\r\n      injectPrefix(arg, '.')\r\n    }\r\n    if (modifiers.includes('attr')) {\r\n      injectPrefix(arg, '^')\r\n    }\r\n  }\r\n\r\n  if (\r\n    !exp ||\r\n    (exp.type === NodeTypes.SIMPLE_EXPRESSION && !exp.content.trim())\r\n  ) {\r\n    context.onError(createCompilerError(ErrorCodes.X_V_BIND_NO_EXPRESSION, loc))\r\n    return {\r\n      props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\r\n    }\r\n  }\r\n\r\n  return {\r\n    props: [createObjectProperty(arg, exp)]\r\n  }\r\n}\r\n\r\nconst injectPrefix = (arg: ExpressionNode, prefix: string) => {\r\n  if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    if (arg.isStatic) {\r\n      arg.content = prefix + arg.content\r\n    } else {\r\n      arg.content = `\\`${prefix}\\${${arg.content}}\\``\r\n    }\r\n  } else {\r\n    arg.children.unshift(`'${prefix}' + (`)\r\n    arg.children.push(`)`)\r\n  }\r\n}\r\n","import { NodeTransform } from '../transform'\r\nimport {\r\n  NodeTypes,\r\n  CompoundExpressionNode,\r\n  createCallExpression,\r\n  CallExpression,\r\n  ElementTypes,\r\n  ConstantTypes,\r\n  createCompoundExpression\r\n} from '../ast'\r\nimport { isText } from '../utils'\r\nimport { CREATE_TEXT } from '../runtimeHelpers'\r\nimport { PatchFlags, PatchFlagNames } from '@vue/shared'\r\nimport { getConstantType } from './hoistStatic'\r\n\r\n// Merge adjacent text nodes and expressions into a single expression\r\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\r\nexport const transformText: NodeTransform = (node, context) => {\r\n  if (\r\n    node.type === NodeTypes.ROOT ||\r\n    node.type === NodeTypes.ELEMENT ||\r\n    node.type === NodeTypes.FOR ||\r\n    node.type === NodeTypes.IF_BRANCH\r\n  ) {\r\n    // perform the transform on node exit so that all expressions have already\r\n    // been processed.\r\n    return () => {\r\n      const children = node.children\r\n      let currentContainer: CompoundExpressionNode | undefined = undefined\r\n      let hasText = false\r\n\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i]\r\n        if (isText(child)) {\r\n          hasText = true\r\n          for (let j = i + 1; j < children.length; j++) {\r\n            const next = children[j]\r\n            if (isText(next)) {\r\n              if (!currentContainer) {\r\n                currentContainer = children[i] = createCompoundExpression(\r\n                  [child],\r\n                  child.loc\r\n                )\r\n              }\r\n              // merge adjacent text node into current\r\n              currentContainer.children.push(` + `, next)\r\n              children.splice(j, 1)\r\n              j--\r\n            } else {\r\n              currentContainer = undefined\r\n              break\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (\r\n        !hasText ||\r\n        // if this is a plain element with a single text child, leave it\r\n        // as-is since the runtime has dedicated fast path for this by directly\r\n        // setting textContent of the element.\r\n        // for component root it's always normalized anyway.\r\n        (children.length === 1 &&\r\n          (node.type === NodeTypes.ROOT ||\r\n            (node.type === NodeTypes.ELEMENT &&\r\n              node.tagType === ElementTypes.ELEMENT &&\r\n              // #3756\r\n              // custom directives can potentially add DOM elements arbitrarily,\r\n              // we need to avoid setting textContent of the element at runtime\r\n              // to avoid accidentally overwriting the DOM elements added\r\n              // by the user through custom directives.\r\n              !node.props.find(\r\n                p =>\r\n                  p.type === NodeTypes.DIRECTIVE &&\r\n                  !context.directiveTransforms[p.name]\r\n              ) &&\r\n              // in compat mode, <template> tags with no special directives\r\n              // will be rendered as a fragment so its children must be\r\n              // converted into vnodes.\r\n              !(__COMPAT__ && node.tag === 'template'))))\r\n      ) {\r\n        return\r\n      }\r\n\r\n      // pre-convert text nodes into createTextVNode(text) calls to avoid\r\n      // runtime normalization.\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i]\r\n        if (isText(child) || child.type === NodeTypes.COMPOUND_EXPRESSION) {\r\n          const callArgs: CallExpression['arguments'] = []\r\n          // createTextVNode defaults to single whitespace, so if it is a\r\n          // single space the code could be an empty call to save bytes.\r\n          if (child.type !== NodeTypes.TEXT || child.content !== ' ') {\r\n            callArgs.push(child)\r\n          }\r\n          // mark dynamic text with flag so it gets patched inside a block\r\n          if (\r\n            !context.ssr &&\r\n            getConstantType(child, context) === ConstantTypes.NOT_CONSTANT\r\n          ) {\r\n            callArgs.push(\r\n              PatchFlags.TEXT +\r\n                (__DEV__ ? ` /* ${PatchFlagNames[PatchFlags.TEXT]} */` : ``)\r\n            )\r\n          }\r\n          children[i] = {\r\n            type: NodeTypes.TEXT_CALL,\r\n            content: child,\r\n            loc: child.loc,\r\n            codegenNode: createCallExpression(\r\n              context.helper(CREATE_TEXT),\r\n              callArgs\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { NodeTransform } from '../transform'\r\nimport { findDir } from '../utils'\r\nimport { ElementNode, ForNode, IfNode, NodeTypes } from '../ast'\r\nimport { SET_BLOCK_TRACKING } from '../runtimeHelpers'\r\n\r\nconst seen = new WeakSet()\r\n\r\nexport const transformOnce: NodeTransform = (node, context) => {\r\n  if (node.type === NodeTypes.ELEMENT && findDir(node, 'once', true)) {\r\n    if (seen.has(node) || context.inVOnce) {\r\n      return\r\n    }\r\n    seen.add(node)\r\n    context.inVOnce = true\r\n    context.helper(SET_BLOCK_TRACKING)\r\n    return () => {\r\n      context.inVOnce = false\r\n      const cur = context.currentNode as ElementNode | IfNode | ForNode\r\n      if (cur.codegenNode) {\r\n        cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */)\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { DirectiveTransform } from '../transform'\r\nimport {\r\n  createSimpleExpression,\r\n  createObjectProperty,\r\n  createCompoundExpression,\r\n  NodeTypes,\r\n  Property,\r\n  ElementTypes,\r\n  ExpressionNode,\r\n  ConstantTypes\r\n} from '../ast'\r\nimport { createCompilerError, ErrorCodes } from '../errors'\r\nimport {\r\n  isMemberExpression,\r\n  isSimpleIdentifier,\r\n  hasScopeRef,\r\n  isStaticExp\r\n} from '../utils'\r\nimport { IS_REF } from '../runtimeHelpers'\r\nimport { BindingTypes } from '../options'\r\n\r\nexport const transformModel: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, arg } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_MODEL_NO_EXPRESSION, dir.loc)\r\n    )\r\n    return createTransformProps()\r\n  }\r\n\r\n  const rawExp = exp.loc.source\r\n  const expString =\r\n    exp.type === NodeTypes.SIMPLE_EXPRESSION ? exp.content : rawExp\r\n\r\n  // im SFC <script setup> inline mode, the exp may have been transformed into\r\n  // _unref(exp)\r\n  const bindingType = context.bindingMetadata[rawExp]\r\n  const maybeRef =\r\n    !__BROWSER__ &&\r\n    context.inline &&\r\n    bindingType &&\r\n    bindingType !== BindingTypes.SETUP_CONST\r\n\r\n  if (\r\n    !expString.trim() ||\r\n    (!isMemberExpression(expString, context) && !maybeRef)\r\n  ) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION, exp.loc)\r\n    )\r\n    return createTransformProps()\r\n  }\r\n\r\n  if (\r\n    !__BROWSER__ &&\r\n    context.prefixIdentifiers &&\r\n    isSimpleIdentifier(expString) &&\r\n    context.identifiers[expString]\r\n  ) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE, exp.loc)\r\n    )\r\n    return createTransformProps()\r\n  }\r\n\r\n  const propName = arg ? arg : createSimpleExpression('modelValue', true)\r\n  const eventName = arg\r\n    ? isStaticExp(arg)\r\n      ? `onUpdate:${arg.content}`\r\n      : createCompoundExpression(['\"onUpdate:\" + ', arg])\r\n    : `onUpdate:modelValue`\r\n\r\n  let assignmentExp: ExpressionNode\r\n  const eventArg = context.isTS ? `($event: any)` : `$event`\r\n  if (maybeRef) {\r\n    if (bindingType === BindingTypes.SETUP_REF) {\r\n      // v-model used on known ref.\r\n      assignmentExp = createCompoundExpression([\r\n        `${eventArg} => ((`,\r\n        createSimpleExpression(rawExp, false, exp.loc),\r\n        `).value = $event)`\r\n      ])\r\n    } else {\r\n      // v-model used on a potentially ref binding in <script setup> inline mode.\r\n      // the assignment needs to check whether the binding is actually a ref.\r\n      const altAssignment =\r\n        bindingType === BindingTypes.SETUP_LET ? `${rawExp} = $event` : `null`\r\n      assignmentExp = createCompoundExpression([\r\n        `${eventArg} => (${context.helperString(IS_REF)}(${rawExp}) ? (`,\r\n        createSimpleExpression(rawExp, false, exp.loc),\r\n        `).value = $event : ${altAssignment})`\r\n      ])\r\n    }\r\n  } else {\r\n    assignmentExp = createCompoundExpression([\r\n      `${eventArg} => ((`,\r\n      exp,\r\n      `) = $event)`\r\n    ])\r\n  }\r\n\r\n  const props = [\r\n    // modelValue: foo\r\n    createObjectProperty(propName, dir.exp!),\r\n    // \"onUpdate:modelValue\": $event => (foo = $event)\r\n    createObjectProperty(eventName, assignmentExp)\r\n  ]\r\n\r\n  // cache v-model handler if applicable (when it doesn't refer any scope vars)\r\n  if (\r\n    !__BROWSER__ &&\r\n    context.prefixIdentifiers &&\r\n    !context.inVOnce &&\r\n    context.cacheHandlers &&\r\n    !hasScopeRef(exp, context.identifiers)\r\n  ) {\r\n    props[1].value = context.cache(props[1].value)\r\n  }\r\n\r\n  // modelModifiers: { foo: true, \"bar-baz\": true }\r\n  if (dir.modifiers.length && node.tagType === ElementTypes.COMPONENT) {\r\n    const modifiers = dir.modifiers\r\n      .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\r\n      .join(`, `)\r\n    const modifiersKey = arg\r\n      ? isStaticExp(arg)\r\n        ? `${arg.content}Modifiers`\r\n        : createCompoundExpression([arg, ' + \"Modifiers\"'])\r\n      : `modelModifiers`\r\n    props.push(\r\n      createObjectProperty(\r\n        modifiersKey,\r\n        createSimpleExpression(\r\n          `{ ${modifiers} }`,\r\n          false,\r\n          dir.loc,\r\n          ConstantTypes.CAN_HOIST\r\n        )\r\n      )\r\n    )\r\n  }\r\n\r\n  return createTransformProps(props)\r\n}\r\n\r\nfunction createTransformProps(props: Property[] = []) {\r\n  return { props }\r\n}\r\n","import { NodeTransform } from '../transform'\r\nimport { findDir, makeBlock } from '../utils'\r\nimport {\r\n  createCallExpression,\r\n  createFunctionExpression,\r\n  ElementTypes,\r\n  MemoExpression,\r\n  NodeTypes,\r\n  PlainElementNode\r\n} from '../ast'\r\nimport { WITH_MEMO } from '../runtimeHelpers'\r\n\r\nconst seen = new WeakSet()\r\n\r\nexport const transformMemo: NodeTransform = (node, context) => {\r\n  if (node.type === NodeTypes.ELEMENT) {\r\n    const dir = findDir(node, 'memo')\r\n    if (!dir || seen.has(node)) {\r\n      return\r\n    }\r\n    seen.add(node)\r\n    return () => {\r\n      const codegenNode =\r\n        node.codegenNode ||\r\n        (context.currentNode as PlainElementNode).codegenNode\r\n      if (codegenNode && codegenNode.type === NodeTypes.VNODE_CALL) {\r\n        // non-component sub tree should be turned into a block\r\n        if (node.tagType !== ElementTypes.COMPONENT) {\r\n          makeBlock(codegenNode, context)\r\n        }\r\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\r\n          dir.exp!,\r\n          createFunctionExpression(undefined, codegenNode),\r\n          `_cache`,\r\n          String(context.cached++)\r\n        ]) as MemoExpression\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { CompilerOptions } from './options'\r\nimport { baseParse } from './parse'\r\nimport { transform, NodeTransform, DirectiveTransform } from './transform'\r\nimport { generate, CodegenResult } from './codegen'\r\nimport { RootNode } from './ast'\r\nimport { isString, extend } from '@vue/shared'\r\nimport { transformIf } from './transforms/vIf'\r\nimport { transformFor } from './transforms/vFor'\r\nimport { transformExpression } from './transforms/transformExpression'\r\nimport { transformSlotOutlet } from './transforms/transformSlotOutlet'\r\nimport { transformElement } from './transforms/transformElement'\r\nimport { transformOn } from './transforms/vOn'\r\nimport { transformBind } from './transforms/vBind'\r\nimport { trackSlotScopes, trackVForSlotScopes } from './transforms/vSlot'\r\nimport { transformText } from './transforms/transformText'\r\nimport { transformOnce } from './transforms/vOnce'\r\nimport { transformModel } from './transforms/vModel'\r\nimport { transformFilter } from './compat/transformFilter'\r\nimport { defaultOnError, createCompilerError, ErrorCodes } from './errors'\r\nimport { transformMemo } from './transforms/vMemo'\r\n\r\nexport type TransformPreset = [\r\n  NodeTransform[],\r\n  Record<string, DirectiveTransform>\r\n]\r\n\r\nexport function getBaseTransformPreset(\r\n  prefixIdentifiers?: boolean\r\n): TransformPreset {\r\n  return [\r\n    [\r\n      transformOnce,\r\n      transformIf,\r\n      transformMemo,\r\n      transformFor,\r\n      ...(__COMPAT__ ? [transformFilter] : []),\r\n      ...(!__BROWSER__ && prefixIdentifiers\r\n        ? [\r\n            // order is important\r\n            trackVForSlotScopes,\r\n            transformExpression\r\n          ]\r\n        : __BROWSER__ && __DEV__\r\n        ? [transformExpression]\r\n        : []),\r\n      transformSlotOutlet,\r\n      transformElement,\r\n      trackSlotScopes,\r\n      transformText\r\n    ],\r\n    {\r\n      on: transformOn,\r\n      bind: transformBind,\r\n      model: transformModel\r\n    }\r\n  ]\r\n}\r\n\r\n// we name it `baseCompile` so that higher order compilers like\r\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\r\nexport function baseCompile(\r\n  template: string | RootNode,\r\n  options: CompilerOptions = {}\r\n): CodegenResult {\r\n  const onError = options.onError || defaultOnError\r\n  const isModuleMode = options.mode === 'module'\r\n  /* istanbul ignore if */\r\n  if (__BROWSER__) {\r\n    if (options.prefixIdentifiers === true) {\r\n      onError(createCompilerError(ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED))\r\n    } else if (isModuleMode) {\r\n      onError(createCompilerError(ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED))\r\n    }\r\n  }\r\n\r\n  const prefixIdentifiers =\r\n    !__BROWSER__ && (options.prefixIdentifiers === true || isModuleMode)\r\n  if (!prefixIdentifiers && options.cacheHandlers) {\r\n    onError(createCompilerError(ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED))\r\n  }\r\n  if (options.scopeId && !isModuleMode) {\r\n    onError(createCompilerError(ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED))\r\n  }\r\n\r\n  const ast = isString(template) ? baseParse(template, options) : template\r\n  const [nodeTransforms, directiveTransforms] =\r\n    getBaseTransformPreset(prefixIdentifiers)\r\n\r\n  if (!__BROWSER__ && options.isTS) {\r\n    const { expressionPlugins } = options\r\n    if (!expressionPlugins || !expressionPlugins.includes('typescript')) {\r\n      options.expressionPlugins = [...(expressionPlugins || []), 'typescript']\r\n    }\r\n  }\r\n\r\n  transform(\r\n    ast,\r\n    extend({}, options, {\r\n      prefixIdentifiers,\r\n      nodeTransforms: [\r\n        ...nodeTransforms,\r\n        ...(options.nodeTransforms || []) // user transforms\r\n      ],\r\n      directiveTransforms: extend(\r\n        {},\r\n        directiveTransforms,\r\n        options.directiveTransforms || {} // user transforms\r\n      )\r\n    })\r\n  )\r\n\r\n  return generate(\r\n    ast,\r\n    extend({}, options, {\r\n      prefixIdentifiers\r\n    })\r\n  )\r\n}\r\n","import { DirectiveTransform } from '../transform'\r\n\r\nexport const noopDirectiveTransform: DirectiveTransform = () => ({ props: [] })\r\n","import { registerRuntimeHelpers } from '@vue/compiler-core'\r\n\r\nexport const V_MODEL_RADIO = Symbol(__DEV__ ? `vModelRadio` : ``)\r\nexport const V_MODEL_CHECKBOX = Symbol(__DEV__ ? `vModelCheckbox` : ``)\r\nexport const V_MODEL_TEXT = Symbol(__DEV__ ? `vModelText` : ``)\r\nexport const V_MODEL_SELECT = Symbol(__DEV__ ? `vModelSelect` : ``)\r\nexport const V_MODEL_DYNAMIC = Symbol(__DEV__ ? `vModelDynamic` : ``)\r\n\r\nexport const V_ON_WITH_MODIFIERS = Symbol(__DEV__ ? `vOnModifiersGuard` : ``)\r\nexport const V_ON_WITH_KEYS = Symbol(__DEV__ ? `vOnKeysGuard` : ``)\r\n\r\nexport const V_SHOW = Symbol(__DEV__ ? `vShow` : ``)\r\n\r\nexport const TRANSITION = Symbol(__DEV__ ? `Transition` : ``)\r\nexport const TRANSITION_GROUP = Symbol(__DEV__ ? `TransitionGroup` : ``)\r\n\r\nregisterRuntimeHelpers({\r\n  [V_MODEL_RADIO]: `vModelRadio`,\r\n  [V_MODEL_CHECKBOX]: `vModelCheckbox`,\r\n  [V_MODEL_TEXT]: `vModelText`,\r\n  [V_MODEL_SELECT]: `vModelSelect`,\r\n  [V_MODEL_DYNAMIC]: `vModelDynamic`,\r\n  [V_ON_WITH_MODIFIERS]: `withModifiers`,\r\n  [V_ON_WITH_KEYS]: `withKeys`,\r\n  [V_SHOW]: `vShow`,\r\n  [TRANSITION]: `Transition`,\r\n  [TRANSITION_GROUP]: `TransitionGroup`\r\n})\r\n","/* eslint-disable no-restricted-globals */\r\n\r\nlet decoder: HTMLDivElement\r\n\r\nexport function decodeHtmlBrowser(raw: string, asAttr = false): string {\r\n  if (!decoder) {\r\n    decoder = document.createElement('div')\r\n  }\r\n  if (asAttr) {\r\n    decoder.innerHTML = `<div foo=\"${raw.replace(/\"/g, '&quot;')}\">`\r\n    return decoder.children[0].getAttribute('foo') as string\r\n  } else {\r\n    decoder.innerHTML = raw\r\n    return decoder.textContent as string\r\n  }\r\n}\r\n","import {\r\n  TextModes,\r\n  ParserOptions,\r\n  ElementNode,\r\n  Namespaces,\r\n  NodeTypes,\r\n  isBuiltInType\r\n} from '@vue/compiler-core'\r\nimport { makeMap, isVoidTag, isHTMLTag, isSVGTag } from '@vue/shared'\r\nimport { TRANSITION, TRANSITION_GROUP } from './runtimeHelpers'\r\nimport { decodeHtml } from './decodeHtml'\r\nimport { decodeHtmlBrowser } from './decodeHtmlBrowser'\r\n\r\nconst isRawTextContainer = /*#__PURE__*/ makeMap(\r\n  'style,iframe,script,noscript',\r\n  true\r\n)\r\n\r\nexport const enum DOMNamespaces {\r\n  HTML = Namespaces.HTML,\r\n  SVG,\r\n  MATH_ML\r\n}\r\n\r\nexport const parserOptions: ParserOptions = {\r\n  isVoidTag,\r\n  isNativeTag: tag => isHTMLTag(tag) || isSVGTag(tag),\r\n  isPreTag: tag => tag === 'pre',\r\n  decodeEntities: __BROWSER__ ? decodeHtmlBrowser : decodeHtml,\r\n\r\n  isBuiltInComponent: (tag: string): symbol | undefined => {\r\n    if (isBuiltInType(tag, `Transition`)) {\r\n      return TRANSITION\r\n    } else if (isBuiltInType(tag, `TransitionGroup`)) {\r\n      return TRANSITION_GROUP\r\n    }\r\n  },\r\n\r\n  // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\r\n  getNamespace(tag: string, parent: ElementNode | undefined): DOMNamespaces {\r\n    let ns = parent ? parent.ns : DOMNamespaces.HTML\r\n\r\n    if (parent && ns === DOMNamespaces.MATH_ML) {\r\n      if (parent.tag === 'annotation-xml') {\r\n        if (tag === 'svg') {\r\n          return DOMNamespaces.SVG\r\n        }\r\n        if (\r\n          parent.props.some(\r\n            a =>\r\n              a.type === NodeTypes.ATTRIBUTE &&\r\n              a.name === 'encoding' &&\r\n              a.value != null &&\r\n              (a.value.content === 'text/html' ||\r\n                a.value.content === 'application/xhtml+xml')\r\n          )\r\n        ) {\r\n          ns = DOMNamespaces.HTML\r\n        }\r\n      } else if (\r\n        /^m(?:[ions]|text)$/.test(parent.tag) &&\r\n        tag !== 'mglyph' &&\r\n        tag !== 'malignmark'\r\n      ) {\r\n        ns = DOMNamespaces.HTML\r\n      }\r\n    } else if (parent && ns === DOMNamespaces.SVG) {\r\n      if (\r\n        parent.tag === 'foreignObject' ||\r\n        parent.tag === 'desc' ||\r\n        parent.tag === 'title'\r\n      ) {\r\n        ns = DOMNamespaces.HTML\r\n      }\r\n    }\r\n\r\n    if (ns === DOMNamespaces.HTML) {\r\n      if (tag === 'svg') {\r\n        return DOMNamespaces.SVG\r\n      }\r\n      if (tag === 'math') {\r\n        return DOMNamespaces.MATH_ML\r\n      }\r\n    }\r\n    return ns\r\n  },\r\n\r\n  // https://html.spec.whatwg.org/multipage/parsing.html#parsing-html-fragments\r\n  getTextMode({ tag, ns }: ElementNode): TextModes {\r\n    if (ns === DOMNamespaces.HTML) {\r\n      if (tag === 'textarea' || tag === 'title') {\r\n        return TextModes.RCDATA\r\n      }\r\n      if (isRawTextContainer(tag)) {\r\n        return TextModes.RAWTEXT\r\n      }\r\n    }\r\n    return TextModes.DATA\r\n  }\r\n}\r\n","import {\r\n  NodeTransform,\r\n  NodeTypes,\r\n  createSimpleExpression,\r\n  SimpleExpressionNode,\r\n  SourceLocation,\r\n  ConstantTypes\r\n} from '@vue/compiler-core'\r\nimport { parseStringStyle } from '@vue/shared'\r\n\r\n// Parse inline CSS strings for static style attributes into an object.\r\n// This is a NodeTransform since it works on the static `style` attribute and\r\n// converts it into a dynamic equivalent:\r\n// style=\"color: red\" -> :style='{ \"color\": \"red\" }'\r\n// It is then processed by `transformElement` and included in the generated\r\n// props.\r\nexport const transformStyle: NodeTransform = node => {\r\n  if (node.type === NodeTypes.ELEMENT) {\r\n    node.props.forEach((p, i) => {\r\n      if (p.type === NodeTypes.ATTRIBUTE && p.name === 'style' && p.value) {\r\n        // replace p with an expression node\r\n        node.props[i] = {\r\n          type: NodeTypes.DIRECTIVE,\r\n          name: `bind`,\r\n          arg: createSimpleExpression(`style`, true, p.loc),\r\n          exp: parseInlineCSS(p.value.content, p.loc),\r\n          modifiers: [],\r\n          loc: p.loc\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nconst parseInlineCSS = (\r\n  cssText: string,\r\n  loc: SourceLocation\r\n): SimpleExpressionNode => {\r\n  const normalized = parseStringStyle(cssText)\r\n  return createSimpleExpression(\r\n    JSON.stringify(normalized),\r\n    false,\r\n    loc,\r\n    ConstantTypes.CAN_STRINGIFY\r\n  )\r\n}\r\n","import {\r\n  DirectiveTransform,\r\n  createObjectProperty,\r\n  createSimpleExpression\r\n} from '@vue/compiler-core'\r\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\r\n\r\nexport const transformVHtml: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, loc } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_HTML_NO_EXPRESSION, loc)\r\n    )\r\n  }\r\n  if (node.children.length) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_HTML_WITH_CHILDREN, loc)\r\n    )\r\n    node.children.length = 0\r\n  }\r\n  return {\r\n    props: [\r\n      createObjectProperty(\r\n        createSimpleExpression(`innerHTML`, true, loc),\r\n        exp || createSimpleExpression('', true)\r\n      )\r\n    ]\r\n  }\r\n}\r\n","import {\r\n  transformOn as baseTransform,\r\n  DirectiveTransform,\r\n  createObjectProperty,\r\n  createCallExpression,\r\n  createSimpleExpression,\r\n  NodeTypes,\r\n  createCompoundExpression,\r\n  ExpressionNode,\r\n  SimpleExpressionNode,\r\n  isStaticExp,\r\n  CompilerDeprecationTypes,\r\n  TransformContext,\r\n  SourceLocation,\r\n  checkCompatEnabled\r\n} from '@vue/compiler-core'\r\nimport { V_ON_WITH_MODIFIERS, V_ON_WITH_KEYS } from '../runtimeHelpers'\r\nimport { makeMap, capitalize } from '@vue/shared'\r\n\r\nconst isEventOptionModifier = /*#__PURE__*/ makeMap(`passive,once,capture`)\r\nconst isNonKeyModifier = /*#__PURE__*/ makeMap(\r\n  // event propagation management\r\n  `stop,prevent,self,` +\r\n    // system modifiers + exact\r\n    `ctrl,shift,alt,meta,exact,` +\r\n    // mouse\r\n    `middle`\r\n)\r\n// left & right could be mouse or key modifiers based on event type\r\nconst maybeKeyModifier = /*#__PURE__*/ makeMap('left,right')\r\nconst isKeyboardEvent = /*#__PURE__*/ makeMap(\r\n  `onkeyup,onkeydown,onkeypress`,\r\n  true\r\n)\r\n\r\nconst resolveModifiers = (\r\n  key: ExpressionNode,\r\n  modifiers: string[],\r\n  context: TransformContext,\r\n  loc: SourceLocation\r\n) => {\r\n  const keyModifiers = []\r\n  const nonKeyModifiers = []\r\n  const eventOptionModifiers = []\r\n\r\n  for (let i = 0; i < modifiers.length; i++) {\r\n    const modifier = modifiers[i]\r\n\r\n    if (\r\n      __COMPAT__ &&\r\n      modifier === 'native' &&\r\n      checkCompatEnabled(\r\n        CompilerDeprecationTypes.COMPILER_V_ON_NATIVE,\r\n        context,\r\n        loc\r\n      )\r\n    ) {\r\n      eventOptionModifiers.push(modifier)\r\n    } else if (isEventOptionModifier(modifier)) {\r\n      // eventOptionModifiers: modifiers for addEventListener() options,\r\n      // e.g. .passive & .capture\r\n      eventOptionModifiers.push(modifier)\r\n    } else {\r\n      // runtimeModifiers: modifiers that needs runtime guards\r\n      if (maybeKeyModifier(modifier)) {\r\n        if (isStaticExp(key)) {\r\n          if (isKeyboardEvent((key as SimpleExpressionNode).content)) {\r\n            keyModifiers.push(modifier)\r\n          } else {\r\n            nonKeyModifiers.push(modifier)\r\n          }\r\n        } else {\r\n          keyModifiers.push(modifier)\r\n          nonKeyModifiers.push(modifier)\r\n        }\r\n      } else {\r\n        if (isNonKeyModifier(modifier)) {\r\n          nonKeyModifiers.push(modifier)\r\n        } else {\r\n          keyModifiers.push(modifier)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    keyModifiers,\r\n    nonKeyModifiers,\r\n    eventOptionModifiers\r\n  }\r\n}\r\n\r\nconst transformClick = (key: ExpressionNode, event: string) => {\r\n  const isStaticClick =\r\n    isStaticExp(key) && key.content.toLowerCase() === 'onclick'\r\n  return isStaticClick\r\n    ? createSimpleExpression(event, true)\r\n    : key.type !== NodeTypes.SIMPLE_EXPRESSION\r\n    ? createCompoundExpression([\r\n        `(`,\r\n        key,\r\n        `) === \"onClick\" ? \"${event}\" : (`,\r\n        key,\r\n        `)`\r\n      ])\r\n    : key\r\n}\r\n\r\nexport const transformOn: DirectiveTransform = (dir, node, context) => {\r\n  return baseTransform(dir, node, context, baseResult => {\r\n    const { modifiers } = dir\r\n    if (!modifiers.length) return baseResult\r\n\r\n    let { key, value: handlerExp } = baseResult.props[0]\r\n    const { keyModifiers, nonKeyModifiers, eventOptionModifiers } =\r\n      resolveModifiers(key, modifiers, context, dir.loc)\r\n\r\n    // normalize click.right and click.middle since they don't actually fire\r\n    if (nonKeyModifiers.includes('right')) {\r\n      key = transformClick(key, `onContextmenu`)\r\n    }\r\n    if (nonKeyModifiers.includes('middle')) {\r\n      key = transformClick(key, `onMouseup`)\r\n    }\r\n\r\n    if (nonKeyModifiers.length) {\r\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\r\n        handlerExp,\r\n        JSON.stringify(nonKeyModifiers)\r\n      ])\r\n    }\r\n\r\n    if (\r\n      keyModifiers.length &&\r\n      // if event name is dynamic, always wrap with keys guard\r\n      (!isStaticExp(key) || isKeyboardEvent(key.content))\r\n    ) {\r\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [\r\n        handlerExp,\r\n        JSON.stringify(keyModifiers)\r\n      ])\r\n    }\r\n\r\n    if (eventOptionModifiers.length) {\r\n      const modifierPostfix = eventOptionModifiers.map(capitalize).join('')\r\n      key = isStaticExp(key)\r\n        ? createSimpleExpression(`${key.content}${modifierPostfix}`, true)\r\n        : createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`])\r\n    }\r\n\r\n    return {\r\n      props: [createObjectProperty(key, handlerExp)]\r\n    }\r\n  })\r\n}\r\n","import { NodeTransform, NodeTypes, ElementTypes } from '@vue/compiler-core'\r\nimport { DOMErrorCodes, createDOMCompilerError } from '../errors'\r\n\r\nexport const ignoreSideEffectTags: NodeTransform = (node, context) => {\r\n  if (\r\n    node.type === NodeTypes.ELEMENT &&\r\n    node.tagType === ElementTypes.ELEMENT &&\r\n    (node.tag === 'script' || node.tag === 'style')\r\n  ) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_IGNORED_SIDE_EFFECT_TAG, node.loc)\r\n    )\r\n    context.removeNode()\r\n  }\r\n}\r\n","import {\r\n  baseCompile,\r\n  baseParse,\r\n  CompilerOptions,\r\n  CodegenResult,\r\n  ParserOptions,\r\n  RootNode,\r\n  noopDirectiveTransform,\r\n  NodeTransform,\r\n  DirectiveTransform\r\n} from '@vue/compiler-core'\r\nimport { parserOptions } from './parserOptions'\r\nimport { transformStyle } from './transforms/transformStyle'\r\nimport { transformVHtml } from './transforms/vHtml'\r\nimport { transformVText } from './transforms/vText'\r\nimport { transformModel } from './transforms/vModel'\r\nimport { transformOn } from './transforms/vOn'\r\nimport { transformShow } from './transforms/vShow'\r\nimport { transformTransition } from './transforms/Transition'\r\nimport { stringifyStatic } from './transforms/stringifyStatic'\r\nimport { ignoreSideEffectTags } from './transforms/ignoreSideEffectTags'\r\nimport { extend } from '@vue/shared'\r\n\r\nexport { parserOptions }\r\n\r\nexport const DOMNodeTransforms: NodeTransform[] = [\r\n  transformStyle,\r\n  ...(__DEV__ ? [transformTransition] : [])\r\n]\r\n\r\nexport const DOMDirectiveTransforms: Record<string, DirectiveTransform> = {\r\n  cloak: noopDirectiveTransform,\r\n  html: transformVHtml,\r\n  text: transformVText,\r\n  model: transformModel, // override compiler-core\r\n  on: transformOn, // override compiler-core\r\n  show: transformShow\r\n}\r\n\r\nexport function compile(\r\n  template: string,\r\n  options: CompilerOptions = {}\r\n): CodegenResult {\r\n  return baseCompile(\r\n    template,\r\n    extend({}, parserOptions, options, {\r\n      nodeTransforms: [\r\n        // ignore <script> and <tag>\r\n        // this is not put inside DOMNodeTransforms because that list is used\r\n        // by compiler-ssr to generate vnode fallback branches\r\n        ignoreSideEffectTags,\r\n        ...DOMNodeTransforms,\r\n        ...(options.nodeTransforms || [])\r\n      ],\r\n      directiveTransforms: extend(\r\n        {},\r\n        DOMDirectiveTransforms,\r\n        options.directiveTransforms || {}\r\n      ),\r\n      transformHoist: __BROWSER__ ? null : stringifyStatic\r\n    })\r\n  )\r\n}\r\n\r\nexport function parse(template: string, options: ParserOptions = {}): RootNode {\r\n  return baseParse(template, extend({}, parserOptions, options))\r\n}\r\n\r\nexport * from './runtimeHelpers'\r\nexport { transformStyle } from './transforms/transformStyle'\r\nexport { createDOMCompilerError, DOMErrorCodes } from './errors'\r\nexport * from '@vue/compiler-core'\r\n","import {\r\n  DirectiveTransform,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  TO_DISPLAY_STRING,\r\n  createCallExpression,\r\n  getConstantType\r\n} from '@vue/compiler-core'\r\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\r\n\r\nexport const transformVText: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, loc } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_TEXT_NO_EXPRESSION, loc)\r\n    )\r\n  }\r\n  if (node.children.length) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_TEXT_WITH_CHILDREN, loc)\r\n    )\r\n    node.children.length = 0\r\n  }\r\n  return {\r\n    props: [\r\n      createObjectProperty(\r\n        createSimpleExpression(`textContent`, true),\r\n        exp\r\n          ? getConstantType(exp, context) > 0\r\n            ? exp\r\n            : createCallExpression(\r\n                context.helperString(TO_DISPLAY_STRING),\r\n                [exp],\r\n                loc\r\n              )\r\n          : createSimpleExpression('', true)\r\n      )\r\n    ]\r\n  }\r\n}\r\n","import {\r\n  transformModel as baseTransform,\r\n  DirectiveTransform,\r\n  ElementTypes,\r\n  findProp,\r\n  NodeTypes,\r\n  hasDynamicKeyVBind\r\n} from '@vue/compiler-core'\r\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\r\nimport {\r\n  V_MODEL_CHECKBOX,\r\n  V_MODEL_RADIO,\r\n  V_MODEL_SELECT,\r\n  V_MODEL_TEXT,\r\n  V_MODEL_DYNAMIC\r\n} from '../runtimeHelpers'\r\n\r\nexport const transformModel: DirectiveTransform = (dir, node, context) => {\r\n  const baseResult = baseTransform(dir, node, context)\r\n  // base transform has errors OR component v-model (only need props)\r\n  if (!baseResult.props.length || node.tagType === ElementTypes.COMPONENT) {\r\n    return baseResult\r\n  }\r\n\r\n  if (dir.arg) {\r\n    context.onError(\r\n      createDOMCompilerError(\r\n        DOMErrorCodes.X_V_MODEL_ARG_ON_ELEMENT,\r\n        dir.arg.loc\r\n      )\r\n    )\r\n  }\r\n\r\n  function checkDuplicatedValue() {\r\n    const value = findProp(node, 'value')\r\n    if (value) {\r\n      context.onError(\r\n        createDOMCompilerError(\r\n          DOMErrorCodes.X_V_MODEL_UNNECESSARY_VALUE,\r\n          value.loc\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  const { tag } = node\r\n  const isCustomElement = context.isCustomElement(tag)\r\n  if (\r\n    tag === 'input' ||\r\n    tag === 'textarea' ||\r\n    tag === 'select' ||\r\n    isCustomElement\r\n  ) {\r\n    let directiveToUse = V_MODEL_TEXT\r\n    let isInvalidType = false\r\n    if (tag === 'input' || isCustomElement) {\r\n      const type = findProp(node, `type`)\r\n      if (type) {\r\n        if (type.type === NodeTypes.DIRECTIVE) {\r\n          // :type=\"foo\"\r\n          directiveToUse = V_MODEL_DYNAMIC\r\n        } else if (type.value) {\r\n          switch (type.value.content) {\r\n            case 'radio':\r\n              directiveToUse = V_MODEL_RADIO\r\n              break\r\n            case 'checkbox':\r\n              directiveToUse = V_MODEL_CHECKBOX\r\n              break\r\n            case 'file':\r\n              isInvalidType = true\r\n              context.onError(\r\n                createDOMCompilerError(\r\n                  DOMErrorCodes.X_V_MODEL_ON_FILE_INPUT_ELEMENT,\r\n                  dir.loc\r\n                )\r\n              )\r\n              break\r\n            default:\r\n              // text type\r\n              __DEV__ && checkDuplicatedValue()\r\n              break\r\n          }\r\n        }\r\n      } else if (hasDynamicKeyVBind(node)) {\r\n        // element has bindings with dynamic keys, which can possibly contain\r\n        // \"type\".\r\n        directiveToUse = V_MODEL_DYNAMIC\r\n      } else {\r\n        // text type\r\n        __DEV__ && checkDuplicatedValue()\r\n      }\r\n    } else if (tag === 'select') {\r\n      directiveToUse = V_MODEL_SELECT\r\n    } else {\r\n      // textarea\r\n      __DEV__ && checkDuplicatedValue()\r\n    }\r\n    // inject runtime directive\r\n    // by returning the helper symbol via needRuntime\r\n    // the import will replaced a resolveDirective call.\r\n    if (!isInvalidType) {\r\n      baseResult.needRuntime = context.helper(directiveToUse)\r\n    }\r\n  } else {\r\n    context.onError(\r\n      createDOMCompilerError(\r\n        DOMErrorCodes.X_V_MODEL_ON_INVALID_ELEMENT,\r\n        dir.loc\r\n      )\r\n    )\r\n  }\r\n\r\n  // native vmodel doesn't need the `modelValue` props since they are also\r\n  // passed to the runtime as `binding.value`. removing it reduces code size.\r\n  baseResult.props = baseResult.props.filter(\r\n    p =>\r\n      !(\r\n        p.key.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n        p.key.content === 'modelValue'\r\n      )\r\n  )\r\n\r\n  return baseResult\r\n}\r\n","import { DirectiveTransform } from '@vue/compiler-core'\r\nimport { createDOMCompilerError, DOMErrorCodes } from '../errors'\r\nimport { V_SHOW } from '../runtimeHelpers'\r\n\r\nexport const transformShow: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, loc } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_SHOW_NO_EXPRESSION, loc)\r\n    )\r\n  }\r\n\r\n  return {\r\n    props: [],\r\n    needRuntime: context.helper(V_SHOW)\r\n  }\r\n}\r\n","// This entry is the \"full-build\" that includes both the runtime\r\n// and the compiler, and supports on-the-fly compilation of the template option.\r\nimport { initDev } from './dev'\r\nimport { compile, CompilerOptions, CompilerError } from '@vue/compiler-dom'\r\nimport { registerRuntimeCompiler, RenderFunction, warn } from '@vue/runtime-dom'\r\nimport * as runtimeDom from '@vue/runtime-dom'\r\nimport { isString, NOOP, generateCodeFrame, extend } from '@vue/shared'\r\nimport { InternalRenderFunction } from 'packages/runtime-core/src/component'\r\n\r\nif (__DEV__) {\r\n  initDev()\r\n}\r\n\r\nconst compileCache: Record<string, RenderFunction> = Object.create(null)\r\n\r\nfunction compileToFunction(\r\n  template: string | HTMLElement,\r\n  options?: CompilerOptions\r\n): RenderFunction {\r\n  if (!isString(template)) {\r\n    if (template.nodeType) {\r\n      template = template.innerHTML\r\n    } else {\r\n      __DEV__ && warn(`invalid template option: `, template)\r\n      return NOOP\r\n    }\r\n  }\r\n\r\n  const key = template\r\n  const cached = compileCache[key]\r\n  if (cached) {\r\n    return cached\r\n  }\r\n\r\n  if (template[0] === '#') {\r\n    const el = document.querySelector(template)\r\n    if (__DEV__ && !el) {\r\n      warn(`Template element not found or is empty: ${template}`)\r\n    }\r\n    // __UNSAFE__\r\n    // Reason: potential execution of JS expressions in in-DOM template.\r\n    // The user must make sure the in-DOM template is trusted. If it's rendered\r\n    // by the server, the template should not contain any user data.\r\n    template = el ? el.innerHTML : ``\r\n  }\r\n\r\n  const { code } = compile(\r\n    template,\r\n    extend(\r\n      {\r\n        hoistStatic: true,\r\n        onError: __DEV__ ? onError : undefined,\r\n        onWarn: __DEV__ ? e => onError(e, true) : NOOP\r\n      } as CompilerOptions,\r\n      options\r\n    )\r\n  )\r\n\r\n  function onError(err: CompilerError, asWarning = false) {\r\n    const message = asWarning\r\n      ? err.message\r\n      : `Template compilation error: ${err.message}`\r\n    const codeFrame =\r\n      err.loc &&\r\n      generateCodeFrame(\r\n        template as string,\r\n        err.loc.start.offset,\r\n        err.loc.end.offset\r\n      )\r\n    warn(codeFrame ? `${message}\\n${codeFrame}` : message)\r\n  }\r\n\r\n  // The wildcard import results in a huge object with every export\r\n  // with keys that cannot be mangled, and can be quite heavy size-wise.\r\n  // In the global build we know `Vue` is available globally so we can avoid\r\n  // the wildcard object.\r\n  const render = (\r\n    __GLOBAL__ ? new Function(code)() : new Function('Vue', code)(runtimeDom)\r\n  ) as RenderFunction\r\n\r\n  // mark the function as runtime compiled\r\n  ;(render as InternalRenderFunction)._rc = true\r\n\r\n  return (compileCache[key] = render)\r\n}\r\n\r\nregisterRuntimeCompiler(compileToFunction)\r\n\r\nexport { compileToFunction as compile }\r\nexport * from '@vue/runtime-dom'\r\n"],"names":["makeMap","str","expectsLowerCase","map","Object","create","list","split","i","length","val","toLowerCase","isGloballyWhitelisted","isSpecialBooleanAttr","includeBooleanAttr","value","normalizeStyle","isArray","res","item","normalized","isString","parseStringStyle","key","isObject","listDelimiterRE","propertyDelimiterRE","cssText","ret","forEach","tmp","trim","normalizeClass","name","normalizeProps","props","class","klass","style","isHTMLTag","isSVGTag","isVoidTag","looseEqual","a","b","aValidType","isDate","bValidType","getTime","isSymbol","equal","looseCompareArrays","keys","aHasKey","hasOwnProperty","bHasKey","String","looseIndexOf","arr","findIndex","toDisplayString","toString","objectToString","isFunction","JSON","stringify","replacer","_key","__v_isRef","isMap","size","entries","reduce","isSet","values","isPlainObject","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","test","isModelListener","startsWith","extend","assign","remove","el","indexOf","splice","prototype","hasOwn","call","Array","toTypeString","isPromise","then","catch","isIntegerKey","parseInt","isReservedProp","isBuiltInDirective","cacheStringFunction","fn","cache","camelizeRE","camelize","replace","_","c","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","slice","toHandlerKey","hasChanged","oldValue","is","invokeArrayFns","fns","arg","def","obj","defineProperty","configurable","enumerable","toNumber","n","parseFloat","isNaN","_globalThis","activeEffectScope","EffectScope","constructor","detached","this","parent","index","scopes","push","run","active","currentEffectScope","on","off","stop","fromParent","l","effects","cleanups","last","pop","effectScope","recordEffectScope","effect","scope","getCurrentScope","onScopeDispose","createDep","dep","Set","w","wasTracked","trackOpBit","newTracked","targetMap","WeakMap","effectTrackDepth","activeEffect","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","ReactiveEffect","scheduler","undefined","lastShouldTrack","shouldTrack","deps","initDepMarkers","cleanupEffect","ptr","delete","finalizeDepMarkers","deferStop","onStop","options","_effect","lazy","runner","bind","trackStack","pauseTracking","resetTracking","track","target","type","depsMap","get","set","Map","trackEffects","debuggerEventExtraInfo","has","add","trigger","newValue","oldTarget","triggerEffects","computed","triggerEffect","allowRecurse","isNonTrackableKeys","builtInSymbols","getOwnPropertyNames","filter","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","createArrayInstrumentations","instrumentations","args","toRaw","apply","isReadonly","shallow","receiver","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","targetIsArray","Reflect","isRef","readonly","reactive","createSetter","isShallow","hadKey","Number","result","mutableHandlers","deleteProperty","ownKeys","readonlyHandlers","shallowReactiveHandlers","shallowReadonlyHandlers","toShallow","getProto","v","getPrototypeOf","rawTarget","rawKey","wrap","toReadonly","toReactive","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","method","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","next","done","createReadonlyMethod","createInstrumentations","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","shallowReadonlyInstrumentations","createInstrumentationGetter","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","shallowReadonlyCollectionHandlers","getTargetType","isExtensible","rawType","targetTypeMap","toRawType","createReactiveObject","shallowReactive","shallowReadonly","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","Proxy","isReactive","isProxy","raw","markRaw","trackRefValue","ref","triggerRefValue","newVal","r","createRef","shallowRef","rawValue","RefImpl","__v_isShallow","_rawValue","_value","useDirectValue","triggerRef","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","CustomRefImpl","factory","_get","_set","customRef","toRefs","object","toRef","ObjectRefImpl","_object","_defaultValue","defaultValue","ComputedRefImpl","getter","_setter","isSSR","_dirty","_cacheable","self","stack","warn","msg","instance","component","appWarnHandler","appContext","config","warnHandler","trace","currentVNode","normalizedStack","vnode","recurseCount","parentInstance","getComponentTrace","callWithErrorHandling","join","formatComponentName","warnArgs","logs","entry","postfix","open","close","formatProps","formatTraceEntry","formatTrace","console","formatProp","err","handleError","callWithAsyncErrorHandling","throwInDev","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","errorHandler","contextVNode","error","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","nextTick","p","queueJob","job","includes","id","start","end","middle","getId","findInsertionIndex","queueFlush","flushJobs","queueCb","cb","activeQueue","pendingQueue","queuePostFlushCb","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","deduped","sort","Infinity","devtools","buffer","setDevtoolsHook","hook","enabled","event","emit","window","HTMLElement","navigator","userAgent","__VUE_DEVTOOLS_HOOK_REPLAY__","newHook","setTimeout","rawArgs","isUnmounted","modelArg","modifiersKey","number","handlerName","handler","onceHandler","emitted","normalizeEmitsOptions","comp","asMixin","emitsCache","cached","emits","hasExtends","extendEmits","normalizedFromExtend","mixins","extends","isEmitListener","currentRenderingInstance","currentScopeId","setCurrentRenderingInstance","prev","__scopeId","pushScopeId","popScopeId","withScopeId","_id","withCtx","ctx","isNonScopedSlot","_n","renderFnWithContext","_d","setBlockTracking","prevInstance","_c","renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","render","renderCache","data","setupState","inheritAttrs","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","blockStack","createVNode","Comment","root","some","filterModelListeners","cloneVNode","dirs","concat","transition","hasPropsChanged","prevProps","nextProps","emitsOptions","nextKeys","updateHOCHostEl","subTree","isSuspense","__isSuspense","Suspense","process","n1","n2","container","anchor","parentComponent","parentSuspense","isSVG","slotScopeIds","optimized","rendererInternals","patch","o","createElement","hiddenContainer","suspense","createSuspenseBoundary","pendingBranch","ssContent","triggerEvent","ssFallback","setActiveBranch","mountSuspense","um","unmount","newBranch","newFallback","activeBranch","isInFallback","isHydrating","isSameVNodeType","pendingId","timeout","fallback","patchSuspense","hydrate","node","hydrateNode","parentNode","document","normalize","children","isSlotChildren","normalizeSuspenseSlot","default","eventListener","m","move","resume","delayEnter","mode","afterLeave","hasUnresolvedAncestor","fallbackVNode","mountFallback","registerDep","setupRenderEffect","isInPendingSuspense","hydratedEl","asyncDep","asyncSetupResult","suspenseId","asyncResolved","handleSetupResult","placeholder","doRemove","s","block","trackBlock","isBlockTreeEnabled","openBlock","currentBlock","closeBlock","singleChild","singleRoot","child","isVNode","filterSingleRoot","dynamicChildren","queueEffectWithSuspense","branch","provide","currentInstance","provides","parentProvides","inject","treatDefaultAsFactory","arguments","watchEffect","doWatch","watchPostEffect","flush","watchSyncEffect","INITIAL_WATCHER_VALUE","watch","source","immediate","deep","cleanup","forceTrigger","isMultiSource","traverse","onCleanup","baseGetter","queuePostRenderEffect","queuePreFlushCb","instanceWatch","publicThis","createPathGetter","setCurrentInstance","unsetCurrentInstance","path","segments","useTransitionState","state","isMounted","isLeaving","isUnmounting","leavingVNodes","onMounted","onBeforeUnmount","TransitionHookValidator","Function","BaseTransition","appear","Boolean","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","setup","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","rawProps","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","leavingHooks","update","delayLeave","earlyRemove","delayedLeave","getLeavingNodesForType","_leaveCb","leavingVNodesCache","callHook","callAsyncHook","every","hooks","beforeEnter","leavingVNode","enter","afterHook","cancelHook","called","_enterCb","cancelled","leave","clone","isKeepAlive","keepComment","parentKey","keyedFragmentCount","Fragment","patchFlag","defineComponent","isAsyncWrapper","__asyncLoader","defineAsyncComponent","loader","loadingComponent","errorComponent","delay","suspensible","onError","userOnError","resolvedComp","pendingRequest","retries","load","thisRequest","Error","reject","__esModule","toStringTag","__asyncResolved","createInnerComp","loaded","delayed","__isKeepAlive","KeepAlive","include","RegExp","exclude","max","sharedContext","current","renderer","_unmount","storageContainer","resetShapeFlag","pruneCache","getComponentName","pruneCacheEntry","activate","isDeactivated","vnodeHook","onVnodeMounted","invokeVNodeHook","deactivate","da","onVnodeUnmounted","matches","pendingCacheKey","cacheSubtree","getInnerChild","onUpdated","rawVNode","cachedVNode","pattern","onActivated","registerKeepAliveHook","onDeactivated","wrappedHook","__wdc","injectHook","injectToKeepAliveRoot","keepAliveRoot","injected","onUnmounted","prepend","__weh","unshift","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onBeforeUpdate","onServerPrefetch","onRenderTriggered","onRenderTracked","onErrorCaptured","withDirectives","directives","internalInstance","getExposeProxy","bindings","dir","modifiers","mounted","updated","invokeDirectiveHook","prevVNode","oldBindings","binding","resolveComponent","maybeSelfReference","resolveAsset","NULL_DYNAMIC_COMPONENT","resolveDynamicComponent","resolveDirective","warnMissing","selfName","registry","renderList","renderItem","from","createSlots","dynamicSlots","slot","j","renderSlot","noSlotted","isCE","validSlotContent","ensureValidVNode","rendered","createBlock","scopeId","vnodes","toHandlers","getPublicInstance","isStatefulComponent","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","resolveMergedOptions","$forceUpdate","f","$nextTick","$watch","PublicInstanceProxyHandlers","accessCache","normalizedProps","shouldCacheAccess","publicGetter","cssModule","globalProperties","__cssModules","descriptor","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","applyOptions","beforeCreate","dataOptions","computedOptions","methods","watchOptions","provideOptions","injectOptions","created","beforeMount","beforeUpdate","activated","deactivated","beforeUnmount","unmounted","renderTracked","renderTriggered","errorCaptured","serverPrefetch","expose","components","checkDuplicateProperties","unwrapRef","normalizeInject","opt","resolveInjections","unwrapInjectedRef","methodHandler","createWatcher","registerLifecycleHook","register","_hook","exposed","h","base","extendsOptions","globalMixins","optionsCache","optionMergeStrategies","resolved","mergeOptions","to","strats","strat","internalOptionMergeStrats","mergeDataFn","mergeObjectOptions","mergeAsArray","beforeDestroy","destroyed","merged","setFullProps","needCastKeys","rawCastValues","hasAttrsChanged","camelKey","rawCurrentProps","castValues","resolvePropValue","isAbsent","hasDefault","propsDefaults","normalizePropsOptions","propsCache","extendProps","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","getType","ctor","match","isSameType","expectedTypes","t","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","createAppContext","app","isNativeTag","performance","compilerOptions","uid","createAppAPI","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","_instance","version","use","plugin","install","mixin","directive","mount","rootContainer","isHydrate","__vue_app__","setRef","rawRef","oldRawRef","isUnmount","refValue","owner","oldRef","refs","_isString","_isRef","doSet","existing","k","hasMismatch","isSVGContainer","namespaceURI","tagName","isComment","nodeType","createHydrationFunctions","mt","mountComponent","patchProp","createText","nextSibling","insert","createComment","isFragmentStart","onMismatch","handleMismatch","domType","nextNode","Text","Static","needToAdoptContent","staticCount","outerHTML","hydrateFragment","hydrateElement","locateClosingAsyncAnchor","previousSibling","lastChild","createTextVNode","hydrateChildren","forcePatchValue","endsWith","onClick","vnodeHooks","onVnodeBeforeMount","innerHTML","textContent","firstChild","parentVNode","fragmentSlotScopeIds","isFragment","hasChildNodes","_vnode","createRenderer","baseCreateRenderer","createHydrationRenderer","createHydrationFns","globalThis","global","__VUE__","hostInsert","hostRemove","hostPatchProp","hostCreateElement","hostCreateText","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","hostParentNode","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","getNextHostNode","processText","processCommentNode","mountStaticNode","processFragment","processElement","processComponent","internals","mountElement","patchElement","mountChildren","unmountChildren","needCallTransitionHooks","cloneIfMounted","oldProps","newProps","toggleRecurse","onVnodeBeforeUpdate","areChildrenSVG","patchBlockChildren","patchChildren","patchProps","propsToUpdate","dynamicProps","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","traverseStaticChildren","updateComponent","initialVNode","emptyAppContext","exposeProxy","setupContext","bc","bm","bu","u","bum","rtg","rtc","sp","ce","createComponentInstance","isStateful","InternalObjectKey","initProps","initSlots","setupResult","createSetupContext","resolvedResult","e","finishComponentSetup","setupStatefulComponent","setupComponent","nextVNode","prevChildren","nextChildren","$stable","shouldUpdateComponent","updateComponentPreRender","invalidateJob","originNext","nextTree","prevTree","isAsyncWrapperVNode","hydrateSubTree","scopedInitialVNode","rawPrevProps","kebabKey","camelizedKey","updateProps","needDeletionCheck","deletionComparisonTarget","updateSlots","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","len","arrI","getSequence","nextIndex","moveType","moveStaticNode","performLeave","shouldInvokeDirs","shouldInvokeVnodeHook","onVnodeBeforeUnmount","unmountComponent","removeFragment","removeStaticNode","performRemove","mc","pc","pbc","createApp","allowed","ch1","ch2","isTeleportDisabled","disabled","isTargetSVG","SVGElement","resolveTarget","select","targetSelector","moveTeleport","targetAnchor","isReorder","Teleport","__isTeleport","querySelector","mainAnchor","wasDisabled","currentContainer","currentAnchor","nextTarget","targetNode","_lpa","disableTracking","setupBlock","createElementBlock","createBaseVNode","__v_isVNode","transformVNodeArgs","transformer","normalizeKey","normalizeRef","ref_key","ref_for","isBlockNode","needFullChildrenNormalization","__v_skip","normalizeChildren","cloned","__vccOpts","guardReactiveProps","isTeleport","extraProps","mergeRef","mergedProps","mergeProps","text","flag","createStaticVNode","content","numberOfNodes","createCommentVNode","asBlock","memo","slotFlag","toMerge","incoming","compile","installWithProxy","registerRuntimeCompiler","_compile","_rc","isRuntimeOnly","skipOptions","template","isCustomElement","delimiters","componentCompilerOptions","finalCompilerOptions","createAttrsProxy","classifyRE","includeInferred","displayName","__name","isRoot","__file","inferFromRegistry","getterOrOptions","debugOptions","setter","onlyGetter","_computed","defineProps","defineEmits","defineExpose","withDefaults","defaults","useSlots","getContext","useAttrs","mergeDefaults","createPropsRestProxy","excludedKeys","withAsyncContext","getAwaitable","awaitable","propsOrChildren","ssrContextKey","useSSRContext","initCustomFormatter","withMemo","isMemoSame","ssrUtils","resolveFilter","compatUtils","doc","templateContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","multiple","setAttribute","createTextNode","nodeValue","selector","before","wrapper","appendChild","importantRE","setStyle","setProperty","prefixed","rawName","prefixCache","prefixes","autoPrefix","xlinkNS","_getNow","skipTimestampCheck","Date","now","createEvent","timeStamp","ffMatch","cachedNow","reset","addEventListener","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","optionsModifierRE","parseName","invoker","initialValue","attached","originalStop","stopImmediatePropagation","_stopped","patchStopImmediatePropagation","getNow","createInvoker","removeEventListener","nativeOnRE","defineCustomElement","Comp","VueCustomElement","VueElement","initialProps","super","defineSSRCustomElement","BaseClass","_def","shadowRoot","_createVNode","attachShadow","connectedCallback","_connected","_resolveDef","disconnectedCallback","_resolved","attributes","_setAttr","MutationObserver","mutations","attributeName","observe","styles","hasOptions","rawKeys","numberProps","_numberProps","_setProp","_getProp","_applyStyles","_update","asyncDef","getAttribute","shouldReflect","shouldUpdate","removeAttribute","dispatchEvent","CustomEvent","detail","host","css","useCssModule","modules","mod","useCssVars","setVars","setVarsOnVNode","ob","childList","disconnect","vars","setVarsOnNode","Transition","resolveTransitionProps","DOMTransitionPropsValidators","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","TransitionPropsValidators","hasExplicitCallback","baseProps","durations","NumberOf","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","_isLeaving","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","cls","classList","_vtc","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","propCount","getTransitionInfo","endEvent","ended","onEnd","getComputedStyle","getStyleProperties","transitionDelays","TRANSITION","transitionDurations","transitionTimeout","getTimeout","animationDelays","ANIMATION","animationDurations","animationTimeout","hasTransform","delays","d","toMs","body","offsetHeight","positionMap","newPositionMap","TransitionGroup","moveClass","display","hasCSSTransform","callPendingCbs","recordPosition","movedChildren","applyTranslation","transform","webkitTransform","transitionDuration","_moveCb","propertyName","cssTransitionProps","getBoundingClientRect","oldPos","newPos","dx","left","dy","top","getModelAssigner","onCompositionStart","composing","onCompositionEnd","Event","vModelText","_assign","castToNumber","domValue","activeElement","vModelCheckbox","modelValue","_modelValue","elementValue","getValue","checked","found","filtered","getCheckboxValue","setChecked","vModelRadio","vModelSelect","isSetModel","selectedVal","selected","setSelected","_binding","isMultiple","option","optionValue","selectedIndex","vModelDynamic","callModelHook","resolveDynamicModel","systemModifiers","modifierGuards","stopPropagation","prevent","preventDefault","currentTarget","ctrl","ctrlKey","shift","shiftKey","alt","altKey","meta","metaKey","button","right","exact","withModifiers","guard","keyNames","esc","space","up","down","withKeys","eventKey","vShow","_vod","setDisplay","rendererOptions","transitionClasses","className","patchClass","isCssString","currentDisplay","patchStyle","shouldSetAsProp","needRemove","patchDOMProp","_trueValue","_falseValue","removeAttributeNS","setAttributeNS","isBoolean","patchAttr","enabledHydration","ensureRenderer","ensureHydrationRenderer","containerOrSelector","normalizeContainer","Element","createSSRApp","initDirectivesForSSR","defaultOnError","defaultOnWarn","code","loc","messages","additionalMessage","SyntaxError","FRAGMENT","TELEPORT","SUSPENSE","KEEP_ALIVE","BASE_TRANSITION","OPEN_BLOCK","CREATE_BLOCK","CREATE_ELEMENT_BLOCK","CREATE_VNODE","CREATE_ELEMENT_VNODE","CREATE_COMMENT","CREATE_TEXT","CREATE_STATIC","RESOLVE_COMPONENT","RESOLVE_DYNAMIC_COMPONENT","RESOLVE_DIRECTIVE","RESOLVE_FILTER","WITH_DIRECTIVES","RENDER_LIST","RENDER_SLOT","CREATE_SLOTS","TO_DISPLAY_STRING","MERGE_PROPS","NORMALIZE_CLASS","NORMALIZE_STYLE","NORMALIZE_PROPS","GUARD_REACTIVE_PROPS","TO_HANDLERS","CAMELIZE","CAPITALIZE","TO_HANDLER_KEY","SET_BLOCK_TRACKING","PUSH_SCOPE_ID","POP_SCOPE_ID","WITH_CTX","UNREF","IS_REF","WITH_MEMO","IS_MEMO_SAME","helperNameMap","locStub","line","column","offset","createVNodeCall","isBlock","isComponent","helper","getVNodeBlockHelper","inSSR","getVNodeHelper","createArrayExpression","elements","createObjectExpression","properties","createObjectProperty","createSimpleExpression","isStatic","constType","createCompoundExpression","createCallExpression","callee","createFunctionExpression","params","returns","newline","isSlot","createConditionalExpression","consequent","alternate","isStaticExp","isBuiltInType","expected","isCoreComponent","nonIdentifierRE","isSimpleIdentifier","validFirstIdentCharRE","validIdentCharRE","whitespaceRE","isMemberExpression","stateStack","currentOpenBracketCount","currentOpenParensCount","currentStringType","char","getInnerRange","newLoc","advancePositionWithClone","pos","numberOfCharacters","advancePositionWithMutation","linesCount","lastNewLinePos","charCodeAt","findDir","allowEmpty","exp","findProp","dynamicOnly","isStaticArgOf","isText","isVSlot","isTemplateNode","tagType","isSlotOutlet","ssr","propsHelperSet","getUnnormalizedProps","callPath","injectProp","propsWithInjection","parentCall","first","alreadyExists","propKeyName","toValidAssetId","searchValue","replaceValue","makeBlock","removeHelper","decodeRE","decodeMap","gt","lt","amp","apos","quot","defaultParserOptions","getNamespace","getTextMode","isPreTag","decodeEntities","rawText","p1","onWarn","comments","baseParse","rawOptions","originalSource","inPre","inVPre","createParserContext","getCursor","helpers","hoists","imports","temps","codegenNode","createRoot","parseChildren","getSelection","ancestors","ns","nodes","isEnd","parseInterpolation","parseComment","parseBogusComment","parseCDATA","advanceBy","parseTag","parseElement","parseText","pushNode","removedWhitespace","shouldCondense","whitespace","exec","prevIndex","nestedIndex","contentStart","closeIndex","wasInPre","wasInVPre","element","isPreBoundary","isVPreBoundary","isSelfClosing","startsWithEndTagOpen","isSpecialTemplateDirective","advanceSpaces","cursor","currentSource","parseAttributes","isBuiltInComponent","attributeNames","attr","parseAttribute","nameSet","quote","isQuoted","endIndex","parseTextData","unexpectedChars","parseAttributeValue","isPropShorthand","dirName","startOffset","lastIndexOf","getNewPosition","valueLoc","innerStart","innerEnd","rawContentLength","rawContent","preTrimContent","endTokens","xs","searchString","hoistStatic","walk","isSingleElementRoot","doNotHoistNode","originalCount","hoistedCount","constantType","getConstantType","hoist","getPatchFlag","getGeneratedPropsConstantType","getNodeProps","vSlot","branches","transformHoist","constantCache","returnType","generatedPropsType","childType","expType","allowHoistedHelperSet","getConstantTypeOfHelperCall","keyType","valueType","createTransformContext","filename","prefixIdentifiers","cacheHandlers","nodeTransforms","directiveTransforms","expressionPlugins","slotted","ssrCssVars","bindingMetadata","inline","isTS","compatConfig","nameMatch","identifiers","vFor","vPre","vOnce","currentNode","childIndex","inVOnce","count","currentCount","helperString","replaceNode","removeNode","removalIndex","onNodeRemoved","addIdentifiers","removeIdentifiers","identifier","hoisted","createCacheExpression","traverseNode","createRootCodegen","exitFns","onExit","nodeRemoved","traverseChildren","createStructuralDirectiveTransform","aliasHelper","generate","ast","sourceMap","optimizeImports","runtimeGlobalName","runtimeModuleName","ssrRuntimeModuleName","indentLevel","pure","indent","deindent","withoutNewLine","repeat","createCodegenContext","onContextCreated","hasHelpers","useWithBlock","VueBinding","genNode","genHoists","genFunctionPreamble","genAssets","preamble","toJSON","assets","resolver","genNodeListAsArray","multilines","genNodeList","comma","genText","genExpression","genInterpolation","genCompoundExpression","genComment","callHelper","genNullableArgs","genVNodeCall","genCallExpression","genExpressionAsPropertyKey","genObjectExpression","genArrayExpression","genFunctionExpression","needNewline","needsParens","isNested","genConditionalExpression","genCacheExpression","transformIf","processCodegen","createIfBranch","ifNode","siblings","sibling","processIf","createCodegenNodeForBranch","parentCondition","getParentCondition","isTemplateIf","condition","userKey","keyIndex","createChildrenCodegenNode","keyProperty","vnodeCall","transformFor","parseResult","parseForExpression","forNode","valueAlias","keyAlias","objectIndexAlias","processFor","renderExp","isTemplate","keyProp","keyExp","isStableFragment","fragmentFlag","childBlock","needFragmentWrapper","slotOutlet","loop","createForLoopParams","forAliasRE","forIteratorRE","stripParensRE","input","inMatch","LHS","RHS","createAliasExpression","valueContent","trimmedOffset","iteratorMatch","keyContent","keyOffset","indexContent","range","memoArgs","createParamsList","defaultFallback","trackSlotScopes","buildClientSlotFn","buildSlots","buildSlotFn","slotsProperties","hasDynamicSlots","onComponentSlot","hasTemplateSlots","hasNamedDefaultSlot","implicitDefaultChildren","seenSlotNames","slotElement","slotDir","slotChildren","slotLoc","slotName","slotProps","staticSlotName","slotFunction","vIf","vElse","buildDynamicSlot","conditional","buildDefaultSlotProperty","isNonWhitespaceContent","hasForwardedSlots","directiveImportMap","transformElement","vnodeTag","isExplicitDynamic","isComponentTag","isProp","isDir","builtIn","resolveComponentType","isDynamicComponent","vnodeProps","vnodeChildren","vnodePatchFlag","vnodeDynamicProps","dynamicPropNames","vnodeDirectives","shouldUseBlock","propsBuildResult","buildProps","dirArgs","runtime","trueExpression","modifier","buildDirectiveArgs","hasDynamicTextChild","propsNamesString","stringifyDynamicPropNames","elementLoc","mergeArgs","runtimeDirectives","hasChildren","hasRef","hasClassBinding","hasStyleBinding","hasHydrationEventBinding","hasDynamicKeys","hasVnodeHook","analyzePatchFlag","isEventHandler","isVBind","isVOn","dedupeProperties","directiveTransform","needRuntime","propsExpression","classKeyIndex","styleKeyIndex","hasDynamicKey","isHandlerKey","classProp","styleProp","knownProps","transformSlotOutlet","nonNameProps","processSlotOutlet","slotArgs","expectedLen","fnExpRE","transformOn","augmentor","eventName","shouldCache","isMemberExp","isInlineStatement","hasMultipleStatements","transformBind","_node","injectPrefix","prefix","transformText","hasText","find","callArgs","WeakSet","transformOnce","transformModel","createTransformProps","rawExp","expString","propName","assignmentExp","transformMemo","baseCompile","isModuleMode","model","V_MODEL_RADIO","V_MODEL_CHECKBOX","V_MODEL_TEXT","V_MODEL_SELECT","V_MODEL_DYNAMIC","V_ON_WITH_MODIFIERS","V_ON_WITH_KEYS","V_SHOW","TRANSITION_GROUP","decoder","TRANSITION$1","getOwnPropertySymbols","isRawTextContainer","parserOptions","asAttr","parseInlineCSS","isEventOptionModifier","isNonKeyModifier","maybeKeyModifier","isKeyboardEvent","transformClick","ignoreSideEffectTags","DOMNodeTransforms","DOMDirectiveTransforms","cloak","html","baseResult","baseTransform","directiveToUse","isInvalidType","hasDynamicKeyVBind","handlerExp","keyModifiers","nonKeyModifiers","eventOptionModifiers","resolveModifiers","modifierPostfix","show","compileCache","compileToFunction","runtimeDom"],"mappings":"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"}